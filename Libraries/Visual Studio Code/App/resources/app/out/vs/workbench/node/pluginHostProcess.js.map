{"version":3,"sources":["vs/workbench/node/file:/D:/work/1/s/src/vs/base/common/arrays.ts","vs/workbench/node/pluginHostProcess.js","vs/workbench/node/file:/D:/work/1/s/src/vs/base/common/assert.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/base/common/collections.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/base/common/events.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/base/common/hash.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/base/common/lifecycle.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/base/common/platform.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/base/common/paths.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/base/common/remote.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/base/common/stopwatch.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/base/common/types.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/base/common/graph.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/base/common/objects.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/base/common/marshalling.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/base/common/uri.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/base/common/uuid.ts","vs/workbench/node/vs/base/common/winjs.base.raw.js","vs/workbench/node/file:/D:/work/1/s/src/vs/base/node/flow.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/base/node/stdFork.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/editor/common/core/arrays.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/editor/common/core/position.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/editor/common/core/range.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/editor/common/core/editOperation.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/editor/common/modes.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/editor/common/modes/abstractState.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/editor/common/modes/lineStream.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/editor/common/modes/monarch/monarchCommon.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/editor/common/modes/monarch/monarchCompile.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/editor/common/modes/nullMode.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/editor/common/viewModel/prefixSumComputer.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/languages/lib/common/wireProtocol.ts","vs/workbench/node/fake","vs/workbench/node/file:/D:/work/1/s/src/vs/base/common/http.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/base/common/json.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/base/common/keyCodes.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/base/common/strings.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/base/common/errors.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/base/common/callbackList.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/base/common/event.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/base/common/cancellation.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/base/common/eventEmitter.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/base/common/eventSource.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/base/common/filters.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/base/common/glob.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/base/common/labels.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/base/common/mime.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/base/common/severity.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/base/common/timer.ts","vs/workbench/node/vs/base/common/winjs.base.js","vs/workbench/node/file:/D:/work/1/s/src/vs/base/common/actions.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/base/common/async.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/base/common/service.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/base/node/extfs.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/base/node/pfs.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/base/node/request.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/base/node/service.net.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/editor/common/model/tokensBinaryEncoding.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/editor/common/editorCommon.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/editor/common/core/selection.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/editor/common/model/textModelWithTokensHelpers.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/editor/common/modes/autoIndentation.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/editor/common/modes/languageSelector.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/editor/common/modes/languageFeatureRegistry.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/editor/common/modes/modesFilters.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/editor/common/modes/supports.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/editor/common/modes/supports/onEnter.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/platform/instantiation/common/descriptors.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/platform/instantiation/common/instantiation.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/editor/common/services/codeEditorService.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/editor/common/services/modeService.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/editor/common/services/modelService.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/platform/configuration/common/configuration.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/platform/editor/common/editor.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/platform/event/common/event.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/platform/files/common/files.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/editor/common/services/bulkEdit.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/platform/instantiation/common/instantiationService.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/platform/keybinding/common/keybindingService.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/platform/keybinding/common/keybindingsUtils.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/platform/lifecycle/common/lifecycle.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/platform/markers/common/markers.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/platform/message/common/message.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/platform/platform.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/platform/jsonschemas/common/jsonContributionRegistry.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/platform/keybinding/common/keybindingsRegistry.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/editor/common/config/config.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/platform/plugins/common/ipcRemoteCom.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/platform/plugins/common/plugins.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/platform/plugins/common/pluginsRegistry.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/platform/plugins/common/abstractPluginService.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/platform/plugins/node/pluginVersionValidator.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/platform/request/common/request.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/platform/request/common/baseRequestService.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/platform/search/common/search.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/platform/storage/common/storage.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/platform/telemetry/common/telemetry.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/editor/common/editorCommonExtensions.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/editor/contrib/codelens/common/codelens.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/editor/contrib/format/common/format.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/editor/contrib/goToDeclaration/common/goToDeclaration.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/editor/contrib/hover/common/hover.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/editor/contrib/parameterHints/common/parameterHints.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/editor/contrib/quickFix/common/quickFix.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/editor/contrib/quickOpen/common/quickOpen.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/editor/contrib/referenceSearch/common/referenceSearch.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/editor/contrib/rename/common/rename.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/editor/contrib/suggest/common/suggest.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/editor/contrib/wordHighlighter/common/wordHighlighter.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/platform/telemetry/common/abstractTelemetryService.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/platform/thread/common/thread.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/platform/storage/common/remotable.storage.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/platform/plugins/common/nativePluginService.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/platform/telemetry/common/abstractRemoteTelemetryService.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/platform/thread/common/threadService.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/editor/common/modes/abstractMode.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/editor/common/modes/languageExtensionPoint.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/editor/common/modes/modesRegistry.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/editor/common/modes/monarch/monarchDefinition.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/editor/common/modes/monarch/monarchLexer.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/editor/common/services/modeServiceImpl.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/platform/thread/common/abstractThreadService.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/platform/thread/common/pluginHostThreadService.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/platform/workspace/common/workspace.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/platform/workspace/common/baseWorkspaceContextService.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/workbench/api/common/extHostLanguages.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/workbench/api/common/mainThreadEditors.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/workbench/api/common/pluginHostConfiguration.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/workbench/api/common/pluginHostDiagnostics.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/workbench/api/common/pluginHostMessageService.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/workbench/api/common/pluginHostTelemetry.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/workbench/api/common/pluginHostTypes.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/workbench/api/common/pluginHostFileSystemEventService.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/workbench/api/common/pluginHostTypeConverters.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/workbench/api/common/extHostApiCommands.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/workbench/api/common/pluginHostTypes.marshalling.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/workbench/browser/parts/statusbar/statusbar.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/workbench/common/editor.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/workbench/browser/parts/editor/textEditorModel.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/workbench/browser/parts/editor/stringEditorModel.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/workbench/common/events.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/workbench/browser/events.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/workbench/browser/parts/editor/untitledEditorModel.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/workbench/browser/parts/editor/untitledEditorInput.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/workbench/node/extensionPoints.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/workbench/node/proxy.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/workbench/node/userSettings.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/workbench/parts/extensions/common/extensions.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/workbench/parts/files/browser/views/explorerViewModel.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/workbench/parts/files/common/files.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/workbench/parts/output/common/output.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/workbench/parts/search/common/search.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/workbench/services/editor/common/editorService.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/workbench/api/common/extHostOutputService.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/workbench/api/common/pluginHostWorkspace.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/workbench/services/quickopen/browser/quickOpenService.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/workbench/api/browser/pluginHostQuickOpen.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/workbench/services/statusbar/statusbarService.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/workbench/api/browser/pluginHostStatusBar.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/workbench/services/untitled/browser/untitledEditorService.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/workbench/api/common/pluginHostDocuments.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/workbench/api/common/pluginHostEditors.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/workbench/api/common/pluginHostCommands.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/workbench/api/common/extHostLanguageFeatures.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/workbench/api/browser/pluginHost.api.impl.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/workbench/services/workspace/common/contextService.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/base/node/zip.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/workbench/parts/extensions/node/extensionsService.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/workbench/node/pluginHostMain.ts","vs/workbench/node/file:/D:/work/1/s/src/vs/workbench/node/pluginHostProcess.ts"],"names":["define","require","exports","tail","array","n","forEach","callback","splice","i","len","equals","one","other","itemEquals","fill","length","element","binarySearch","key","comparator","findFirst","p","merge","arrays","hashFn","coalesce","contains","item","swap","pos1","pos2","move","from","to","isFalsyOrEmpty","obj","distinct","keyFn","first","fn","notFoundValue","repeat","el","count","commonPrefixLength","flatten","arr","ok","value","message","createStringDictionary","createNumberDictionary","lookup","what","alternate","lookupOrInsert","stringOrNumber","insert","into","data","keys","hasOwnProperty","call","values","remove","groupBy","groupFn","combine","iterables","every","singleton","toArray","iterable","Object","prototype","EmptyIterable","LimitedSizeCache","LimitedSizeCache.constructor","LimitedSizeCache.get","LimitedSizeCache.put","LimitedSizeCache.swipe","__extends","this","d","b","__","constructor","create","Event","Event.constructor","PropertyChangeEvent","_super","PropertyChangeEvent.constructor","ViewerEvent","ViewerEvent.constructor","EventType","PROPERTY_CHANGED","SELECTION","FOCUS","BLUR","HIGHLIGHT","EXPAND","COLLAPSE","TOGGLE","CONTENTS_CHANGED","BEFORE_RUN","RUN","EDIT","SAVE","CANCEL","CHANGE","DISPOSE","computeMurmur2StringHashCode","currentHash","disposeAll","combinedDispose","combinedDispose2","disposables","fnToDisposable","toDisposable","callAll","arg","empty","freeze","dispose","cAll","hasWebWorkerSupport","_isWindows","_isMacintosh","_isLinux","_isNative","_isWeb","_isQunit","process","platform","navigator","userAgent","indexOf","self","QUnit","Platform","_platform","Web","Mac","Windows","Linux","isWindows","isMacintosh","isLinux","isNative","isWeb","isQunit","_globals","global","globals","setTimeout","bind","clearTimeout","setInterval","clearInterval","platform_1","relative","normalize","path","toOSPath","dirnames","dirnames.next","dirname","basename","extname","getRootLength","join","isUNC","isAbsolute","makeAbsolute","isPathNormalized","isRelative","isEqualOrParent","candidate","sep","nativeSep","_dotSegment","_slash","charCodeAt","createProxyFromCtor","remote","id","ctor","createMethodProxy","proxyId","ProxiesMarshallingContribution","ProxiesMarshallingContribution.constructor","ProxiesMarshallingContribution.canSerialize","ProxiesMarshallingContribution.serialize","ProxiesMarshallingContribution.canDeserialize","ProxiesMarshallingContribution.deserialize","hasPerformanceNow","performance","now","StopWatch","StopWatch.constructor","StopWatch.create","StopWatch.stop","StopWatch.elapsed","isArray","isString","str","isStringArray","isObject","isNumber","isBoolean","isUndefined","isUndefinedOrNull","isEmptyObject","isFunction","areFunctions","validateConstraints","args","constraints","validateConstraint","constraint","objects","collections","newNode","Graph","Graph.constructor","Graph.roots","Graph.traverse","Graph._traverse","Graph.insertEdge","Graph.removeNode","Graph.lookupOrInsertNode","Graph.lookup","get","Graph.length","enumerable","configurable","Types","clone","deepClone","cloneAndChange","changer","_cloneAndChange","encounteredObjects","mixin","destination","source","overwrite","assign","withDefaults","defaults","ensureProperty","property","defaultValue","arrayToHash","createKeywordMatcher","caseInsensitive","x","toLowerCase","undefined","hash","word","derive","baseClass","derivedClass","safeStringify","types","registerMarshallingContribution","contribution","canSerialize","serialize","deserialize","marshallObject","dynamicContrib","demarshallObject","serialized","marshallingContributions","currentDynamicContrib","RegExp","regex","flags","ignoreCase","multiline","$isRegExp","canDeserialize","marshalling","fixedEncodeURIComponent","URI","URI.constructor","URI.scheme","URI.authority","URI.path","URI.query","URI.fragment","URI.fsPath","URI.with","URI.withScheme","URI.withAuthority","URI.withPath","URI.withQuery","URI.withFragment","URI.parse","URI.file","URI._parse","URI.create","URI._validate","URI.toString","URI.toJSON","URI._toSerialized","URI._fromSerialized","URI.isURI","defineProperty","isURI","url","_toSerialized","$isURI","_fromSerialized","v4","parse","generateUuid","ValueUUID","ValueUUID.constructor","ValueUUID.asHex","ValueUUID.equals","V4UUID","V4UUID.constructor","V4UUID._oneOf","V4UUID._randomHex","_UUIDPattern","WinJS","setImmediate","nextTick","initializeProperties","target","members","properties","member","set","writable","defineProperties","rootNamespace","defineWithParent","parentNamespace","name","currentNamespace","namespaceFragments","split","namespaceName","_rootNamespace","Namespace","instanceMembers","staticMembers","Utilities","markSupportedForProcessing","basePrototype","mix","arguments","nop","v","getMemberFiltered","root","filter","reduce","hasWinRT","strings","notSupportedForProcessing","_setHasWinRT","_getMemberFiltered","getMember","ready","async","Promise","c","e","complete","err","readyState","testReadyState","document","body","addEventListener","strictProcessing","func","supportedForProcessing","requireSupportedForProcessing","location","HTMLIFrameElement","frames","ErrorFromName","Resources","_formatString","validation","format","tag","type","m","typeR","test","replace","spaceR","defAction","formatLog","console","escape","s","startLog","options","tags","not","excludeTags","has","action","log","result","next","stopLog","createEventProperty","eventPropStateName","state","userHandler","handler","wrapper","evt","removeEventListener","createEventProperties","events","props","EventMixinEvent","Class","detail","timeStamp","Date","bubbles","cancelable","currentTarget","defaultPrevented","_preventDefaultCalled","trusted","eventPhase","preventDefault","stopImmediatePropagation","_stopImmediatePropagationCalled","stopPropagation","eventMixin","_listeners","listener","useCapture","eventListeners","l","push","dispatchEvent","details","listeners","eventValue","slice","_createEventProperty","resourceMap","mrtEventHook","contextChangedET","ListenerType","malformedFormatStringInput","ApplicationModel","Core","ResourceManager","current","defaultContext","qualifierValues","qualifier","changed","string","unused","left","right","index","illegalLeft","illegalRight","_getStringWinRT","resourceId","mainResourceMap","getSubtree","stringValue","langValue","resCandidate","getValue","valueAsString","toString","getQualifierValue","lang","_getStringJS","getStringImpl","getString","_","completed","promise","targetState","then","state_waiting","state_success_notify","_value","_setState","createErrorDetails","exception","error","parent","detailsForHandledError","errorValue","context","_isException","errorId","_errorId","detailsForChainedError","setErrorInfo","detailsForError","error_number","detailsForException","exceptionValue","done","onComplete","onError","onProgress","pushListener","onerrorDetails","callonerror","state_error_notify","notifySuccess","queue","Array","_setCompleteValue","ex","_setExceptionValue","_state","CompletePromise","notifyError","handlesOnError","_setChainedErrorValue","ErrorPromise","onerrorDetailsGenerator","promiseEventListeners","errorET","Error","canceledName","progress","_progress","isException","setErrorValue","state_error","setCompleteValue","state_success","ThenPromise","timeout","timeoutMS","timeoutWithPromise","cancelPromise","cancel","cancelTimeout","Debug","setNonUserCodeExceptions","tagWithStack","thenPromise","errorPromise","exceptionPromise","completePromise","all","state_created","state_working","state_waiting_canceled","state_canceled","state_canceling","enter","_completed","_error","_notify","_setErrorValue","waitedUpon","_chainedError","_cancelAction","pop","_cleanupAction","staticCanceledPromise","PromiseStateMachine","_nextState","_run","creator","_stack","_getStack","_creator","ExceptionPromise","newValue","init","oncancel","_oncancel","stack","eventType","capture","any","canceled","as","is","errors","results","undefineds","pending","argDone","errorCount","canceledCount","Key","Done","thenEach","time","wrap","wrapError","_veryExpensiveTagWithStack","_veryExpensiveTagWithStack_tag","debuggerEnabled","SignalPromise","Signal","_promise","_Signal","xhr","req","XMLHttpRequest","onreadystatechange","_canceled","status","open","user","password","responseType","headers","k","setRequestHeader","customRequestInitializer","send","abort","setInnerHTML","setInnerHTMLUnsafe","setOuterHTML","setOuterHTMLUnsafe","insertAdjacentHTML","insertAdjacentHTMLUnsafe","nonStaticHTML","text","innerHTML","outerHTML","position","msApp","MSApp","execUnsafeLocalFunction","msIsStaticHTML","check","amd","module","assert","parallel","list","loop","param","looper","Sequence","sequences","clb","sequenceResult","sequence","os","net","cp","uri_1","makeRandomHexString","generatePipeName","generatePatchedEnv","env","stdInPipeName","stdOutPipeName","fork","modulePath","Arrays","Arrays.findIndexInSegmentsArray","Position","Position.constructor","Position.equals","Position.isBefore","Position.isBeforeOrEqual","Position.clone","Position.toString","Position.lift","Position.isIPosition","Position.asEmptyRange","Position.startPosition","Position.endPosition","position_1","Range","Range.constructor","Range.isEmpty","Range.containsPosition","Range.containsRange","Range.plusRange","Range.intersectRanges","Range.equalsRange","Range.getEndPosition","Range.getStartPosition","Range.cloneRange","Range.toString","Range.setEndPosition","Range.setStartPosition","Range.collapseToStart","Range.lift","Range.isIRange","Range.areIntersectingOrTouching","Range.compareRangesUsingStarts","Range.compareRangesUsingEnds","Range.spansMultipleLines","Range.hashCode","range_1","EditOperation","EditOperation.insert","EditOperation.delete","EditOperation.replace","EditOperation.replaceMove","Bracket","IndentAction","AbstractState","AbstractState.constructor","AbstractState.getMode","AbstractState.clone","AbstractState.makeClone","AbstractState.initializeFrom","AbstractState.getStateData","AbstractState.setStateData","AbstractState.equals","AbstractState.tokenize","AbstractState.safeEquals","AbstractState.safeClone","LineStream","LineStream.constructor","LineStream.stringToArray","LineStream.actualStringToArray","LineStream.pos","LineStream.eos","LineStream.peek","LineStream.next","LineStream.next2","LineStream.advance","LineStream._advance2","LineStream.advanceToEOS","LineStream.goBack","LineStream.createPeeker","LineStream._advanceIfStringCaseInsensitive","LineStream.advanceIfStringCaseInsensitive","LineStream.advanceIfStringCaseInsensitive2","LineStream._advanceIfString","LineStream.advanceIfString","LineStream.advanceIfString2","LineStream._advanceIfCharCode","LineStream.advanceIfCharCode","LineStream.advanceIfCharCode2","LineStream._advanceIfRegExp","LineStream.advanceIfRegExp","LineStream.advanceIfRegExp2","LineStream.advanceLoop","LineStream.advanceWhile","LineStream.advanceUntil","LineStream._advanceUntilString","LineStream.advanceUntilString","LineStream.advanceUntilString2","LineStream.resetPeekedToken","LineStream.setTokenRules","LineStream.peekToken","LineStream.nextToken","LineStream.peekWhitespace","LineStream._skipWhitespace","LineStream.skipWhitespace","LineStream.skipWhitespace2","fixCase","lexer","sanitize","msg","throwError","substituteMatches","matches","dollar","attr","stateMatches","unshift","findRules","stateExists","MonarchCommonTypes","Modes","Objects","isArrayOf","elemType","bool","prop","def","onerr","compileRegExp","sub","selectScrutinee","num","createGuard","ruleName","tkey","val","op","inWords","re","pat","patx","patexp","tester","eos","scrutinee","scrut","compileAction","idx","cases","didmatch","compile","json","compile.addRules","Rule","Rule.constructor","Rule.setRegex","Rule.setAction","nullTokenize","mode","buffer","deltaOffset","stopAtOffset","NullState","NullState.constructor","NullState.clone","NullState.equals","NullState.getMode","NullState.tokenize","NullState.getStateData","NullState.setStateData","NullMode","NullMode.constructor","NullMode.createWordRegExp","NullMode.getId","NullMode.toSimplifiedMode","NullMode.getWordDefinition","PrefixSumComputer","PrefixSumComputer.constructor","PrefixSumComputer.getCount","PrefixSumComputer.insertValue","PrefixSumComputer.insertValues","PrefixSumComputer._zeroArray","PrefixSumComputer.changeValue","PrefixSumComputer.removeValues","PrefixSumComputer.getTotalValue","PrefixSumComputer.getAccumulatedValue","PrefixSumComputer.getIndexOf","DefaultSize","ContentLength","ContentLengthSize","Buffer","byteLength","Blank","BackslashR","BackslashN","ProtocolBuffer","ProtocolBuffer.constructor","ProtocolBuffer.append","ProtocolBuffer.tryReadContentLength","ProtocolBuffer.tryReadContent","ProtocolBuffer.tryReadLine","ProtocolBuffer.numberOfBytes","ReaderType","Reader","Reader.constructor","Reader.onLengthData","Reader.onLineData","Writer","Writer.constructor","Writer.write","nls","isRedirect","newDataChunk","responseText","headerStartOffset","headerEndOffset","contentLength","_headers","headerPattern","lastIndex","match","exec","substr","parseChunkedData","request","collection","offset","getErrorStatusDescription","GET","POST","PUT","DELETE","Header","Mime","Charset","contentLengthPattern","createScanner","ignoreTrivia","createScanner.scanHexDigits","createScanner.scanNumber","createScanner.scanString","createScanner.scanNext","createScanner.isUnknownContentCharacter","createScanner.scanNextNonTrivia","isWhiteSpace","ch","isLineBreak","isDigit","isLetter","stripComments","replaceCh","parse.scanNext","parse.handleError","parse.parseString","parse.parseLiteral","parse.parseProperty","parse.parseObject","parse.parseArray","parse.parseValue","ScanError","SyntaxKind","CharacterCodes","_asString","keybinding","labelProvider","_pushKey","_asHTML","isChord","KeyCode","TO_STRING_MAP","Unknown","Backspace","Tab","Enter","Shift","Ctrl","Alt","PauseBreak","CapsLock","Escape","Space","PageUp","PageDown","End","Home","LeftArrow","UpArrow","RightArrow","DownArrow","Insert","Delete","KEY_0","KEY_1","KEY_2","KEY_3","KEY_4","KEY_5","KEY_6","KEY_7","KEY_8","KEY_9","KEY_A","KEY_B","KEY_C","KEY_D","KEY_E","KEY_F","KEY_G","KEY_H","KEY_I","KEY_J","KEY_K","KEY_L","KEY_M","KEY_N","KEY_O","KEY_P","KEY_Q","KEY_R","KEY_S","KEY_T","KEY_U","KEY_V","KEY_W","KEY_X","KEY_Y","KEY_Z","ContextMenu","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","F13","F14","F15","F16","F17","F18","F19","NumLock","ScrollLock","US_SEMICOLON","US_EQUAL","US_COMMA","US_MINUS","US_DOT","US_SLASH","US_BACKTICK","US_OPEN_SQUARE_BRACKET","US_BACKSLASH","US_CLOSE_SQUARE_BRACKET","US_QUOTE","NUMPAD_0","NUMPAD_1","NUMPAD_2","NUMPAD_3","NUMPAD_4","NUMPAD_5","NUMPAD_6","NUMPAD_7","NUMPAD_8","NUMPAD_9","NUMPAD_MULTIPLY","NUMPAD_ADD","NUMPAD_SEPARATOR","NUMPAD_SUBTRACT","NUMPAD_DECIMAL","NUMPAD_DIVIDE","FROM_STRING_MAP","KeyCode.toString","KeyCode.fromString","BIN_CTRLCMD_MASK","BIN_SHIFT_MASK","BIN_ALT_MASK","BIN_WINCTRL_MASK","BIN_KEYCODE_MASK","BinaryKeybindings","BinaryKeybindings.extractFirstPart","BinaryKeybindings.extractChordPart","BinaryKeybindings.hasChord","BinaryKeybindings.hasCtrlCmd","BinaryKeybindings.hasShift","BinaryKeybindings.hasAlt","BinaryKeybindings.hasWinCtrl","BinaryKeybindings.extractKeyCode","KeyMod","KeyMod.chord","CommonKeybindings","Keybinding","Keybinding.constructor","Keybinding._toUSLabel","Keybinding._toUSHTMLLabel","Keybinding._toCustomLabel","Keybinding._toCustomHTMLLabel","Keybinding._toElectronAccelerator","Keybinding.toUserSettingsLabel","Keybinding.hasCtrlCmd","Keybinding.hasShift","Keybinding.hasAlt","Keybinding.hasWinCtrl","Keybinding.extractKeyCode","Keybinding.toCustomLabel","Keybinding.toCustomHTMLLabel","ElectronAcceleratorLabelProvider","ElectronAcceleratorLabelProvider.constructor","ElectronAcceleratorLabelProvider.getLabelForKey","MacUIKeyLabelProvider","MacUIKeyLabelProvider.constructor","MacUIKeyLabelProvider.getLabelForKey","ClassicUIKeyLabelProvider","ClassicUIKeyLabelProvider.constructor","ClassicUIKeyLabelProvider.getLabelForKey","UserSettingsKeyLabelProvider","UserSettingsKeyLabelProvider.constructor","UserSettingsKeyLabelProvider.getLabelForKey","pad","char","parseInt","group","isNaN","formatDate","date","formatTime","html","escapeRegExpCharacters","replaceAll","haystack","needle","replacement","trim","ltrim","rtrim","trimWhitespace","convertSimple2RegExpPattern","pattern","stripWildcards","startsWith","endsWith","createRegExp","searchString","isRegex","matchCase","wholeWord","regExpLeadsToEndlessLoop","regexp","normalizeNFC","cache","encodeURIPart","keepSlashes","isCamelCasePattern","isFalsyOrWhitespace","anchorPattern","start","end","assertRegExp","modifiers","normalizePath","colorize","code","firstNonWhitespaceIndex","getLeadingWhitespace","lastNonWhitespaceIndex","localeCompare","strA","strB","isAsciiChar","equalsIgnoreCase","a","commonSuffixLength","difference","second","maxLenDelta","computeLineStarts","lcut","removeAnsiEscapeCodes","startsWithUTF8BOM","_formatRegexp","canNormalize","EL","LF","COLOR_START","COLOR_END","__utf8_bom","UTF8_BOM_CHARACTER","String","fromCharCode","setUnexpectedErrorHandler","newUnexpectedErrorHandler","onUnexpectedError","transformErrorForSerialization","_xhrToErrorMessage","verbose","_exceptionToErrorMessage","toErrorMessage","getHttpStatus","isPromiseCanceledError","notImplemented","illegalArgument","illegalState","readonly","loaderError","ErrorHandler","ErrorHandler.constructor","ErrorHandler.addListener","ErrorHandler.emit","ErrorHandler._removeListener","ErrorHandler.setUnexpectedErrorHandler","ErrorHandler.getUnexpectedErrorHandler","ErrorHandler.onUnexpectedError","errorHandler","ConnectionError","ConnectionError.constructor","ConnectionError.message","ConnectionError.verboseMessage","ConnectionError.connectionErrorDetailsToMessage","ConnectionError.connectionErrorToMessage","errors_1","CallbackList","CallbackList.add","CallbackList.remove","CallbackList.invoke","CallbackList.isEmpty","CallbackList.dispose","callbackList_1","fromEventEmitter","emitter","addListener2","apply","thisArgs","_disposable","Emitter","Emitter.constructor","Emitter.event","Emitter.fire","Emitter.dispose","event_1","CancellationToken","ShortcutEvent","handle","MutableToken","MutableToken.constructor","MutableToken.cancel","MutableToken.isCancellationRequested","MutableToken.onCancellationRequested","CancellationTokenSource","CancellationTokenSource.token","CancellationTokenSource.cancel","CancellationTokenSource.dispose","Errors","EmitterEvent","EmitterEvent.constructor","EmitterEvent.getType","EmitterEvent.getData","EmitterEvent.getEmitterType","EventEmitter","EventEmitter.constructor","EventEmitter.dispose","EventEmitter.addListener","EventEmitter.addListener2","EventEmitter.on","EventEmitter.addOneTimeListener","unbind","EventEmitter.addOneTimeDisposableListener","EventEmitter.addBulkListener","EventEmitter.addBulkListener2","EventEmitter.addEmitter","EventEmitter.addEmitter2","EventEmitter.addEmitterTypeListener","EventEmitter._removeListener","EventEmitter._removeBulkListener","EventEmitter._emitToSpecificTypeListeners","EventEmitter._emitToBulkListeners","EventEmitter._emitEvents","EventEmitter.emit","EventEmitter.deferredEmit","EventEmitter._emitCollected","EmitQueueElement","EmitQueueElement.constructor","OrderGuaranteeEventEmitter","OrderGuaranteeEventEmitter.constructor","OrderGuaranteeEventEmitter._emitToSpecificTypeListeners","OrderGuaranteeEventEmitter._emitToBulkListeners","OrderGuaranteeEventEmitter._emitEvents","EventSource","EventSource.fire","EventSource.value","or","wordToMatchAgainst","and","concat","_matchesPrefix","matchesContiguousSubString","matchesSubString","_matchesSubString","j","isLower","isUpper","isWhitespace","isAlphanumeric","head","nextAnchor","camelCaseWord","_matchesCamelCase","isCamelCaseWord","matchesCamelCase","matchesFuzzy","enableSeparateSubstringMatching","matchesStrictPrefix","matchesPrefix","SubstringMatching","fuzzyContiguousFilter","fuzzySeparateFilter","fuzzyRegExpCache","paths","starsToRegExp","starCount","splitGlobAware","splitChar","parseRegExp","globToRegExp","arg1","siblings","matchExpression","expression","CACHE","PATH_REGEX","NO_PATH_REGEX","getPathLabel","arg2","getPath","PathLabelProvider","PathLabelProvider.constructor","PathLabelProvider.getLabel","generateKnownFilenames","onlyExtensions","registerTextMimeByFilename","nameOrExtension","mime","registerTextMimeByFirstLine","firstLineRegexp","isBinaryMime","mimes","guessMimeTypes","firstLine","isUnspecific","suggestFilename","theMime","prefix","MIME_TEXT","MIME_BINARY","MIME_UNKNOWN","registeredTextMimesByFilename","registeredTextMimesByFirstLine","Severity","Severity.fromValue","Severity.toString","Severity.compare","precision","topic","description","getTimeKeeper","ENABLE_TIMER","msWriteProfilerMark","Topic","NullTimerEvent","NullTimerEvent.timeTaken","TimerEvent","TimerEvent.constructor","TimerEvent.stop","TimerEvent.timeTaken","TimeKeeper","TimeKeeper.constructor","TimeKeeper.isEnabled","TimeKeeper.start","TimeKeeper.dispose","TimeKeeper.addListener","TimeKeeper.removeListener","TimeKeeper.addEvent","TimeKeeper.initAutoCleaning","TimeKeeper.getCollectedEvents","TimeKeeper.clearCollectedEvents","TimeKeeper._onEventStopped","TimeKeeper.setInitialCollectedEvents","timeKeeper","nullEvent","raw","__Errors__","promiseErrorHandler","outstandingPromiseErrors","decoratePromise","completeCallback","errorCallback","pc","pe","pp","resultPromise","winjs","r","TPromise","PPromise","winjs_base_1","eventEmitter_1","Events","isAction","thing","radioGroup","actions","radioGroup.newCecker","otherAction","checked","ProxyAction","newCecker","Action","Action.constructor","Action.id","Action.label","Action._setLabel","Action.tooltip","Action._setTooltip","Action.class","Action._setClass","Action.enabled","Action._setEnabled","Action.checked","Action._setChecked","Action.order","Action.actionCallback","Action.run","ProxyAction.constructor","ProxyAction.id","ProxyAction.label","ProxyAction.class","ProxyAction.enabled","ProxyAction.checked","ProxyAction.run","ProxyAction.addListener","ProxyAction.addBulkListener","ProxyAction.addEmitter","ProxyAction.addEmitterTypeListener","ProxyAction.emit","ActionRunner","ActionRunner.constructor","ActionRunner.run","cancellation_1","wrapAsWinJSPromise","_i","token","always","f","promiseFactory","sequence.next","sequence.thenHandler","once","didCall","_this","nfcall","ninvoke","thisArg","Throttler","Throttler.constructor","Throttler.queue","Delayer","Delayer.constructor","Delayer.trigger","Delayer.isTriggered","Delayer.cancel","Delayer.cancelTimeout","ThrottledDelayer","ThrottledDelayer.constructor","ThrottledDelayer.trigger","PeriodThrottledDelayer","PeriodThrottledDelayer.constructor","PeriodThrottledDelayer.trigger","PromiseSource","PromiseSource.constructor","PromiseSource.value","PromiseSource.complete","PromiseSource.error","ShallowCancelThenPromise","ShallowCancelThenPromise.constructor","Limiter","Limiter.constructor","Limiter.queue","Limiter.consume","Limiter.consumed","RunOnceScheduler","RunOnceScheduler.constructor","RunOnceScheduler.dispose","RunOnceScheduler.cancel","RunOnceScheduler.setRunner","RunOnceScheduler.setTimeout","RunOnceScheduler.schedule","RunOnceScheduler.onTimeout","objects_1","lifecycle_1","ServiceEvent","_a","isServiceEvent","RequestType","ResponseType","ServiceState","ServiceEventProperty","Server","Server.constructor","Server.registerService","Server.onMessage","Server.onCommonRequest","Server.onPromiseRequest","Server.onCancelRequest","Server.dispose","Client","Client.constructor","Client.getService","_b","Client.request","Client.doRequest","Client.bufferRequest","Client.onMessage","Client.send","uuid","flow","fs","readdir","readdirNormalize","mkdirp","isDirectory","copy","copiedSources","pipeFs","del","tmpFolder","rmRecursive","mv","mv.updateMtime","normalizedCache","extfs","path_1","async_1","isRoot","exists","chmod","rimraf","realpath","stat","mstat","rename","oldPath","newPath","rmdir","unlink","doStatMultiple","readFile","encoding","writeFile","readDirsInDir","dirPath","dirExistsWithResult","successResult","dirExists","fileExists","readFiles","fileExistsWithResult","removeNull","https","http","url_1","fs_1","download","filePath","opts","service_1","bufferIndexOf","serve","hook","connect","Protocol","Protocol.constructor","Protocol.send","Protocol.onMessage","Client.dispose","Strings","deflateArr","map","tokens","inflate","binaryEncodedToken","getStartIndex","getType","getBracket","inflateArr","binaryEncodedTokens","findIndexOfOffset","sliceAndInflate","startOffset","endOffset","deltaStartIndex","findIndexInSegmentsArray","desiredIndex","InflatedToken","InflatedToken.constructor","InflatedToken.toString","START_INDEX_MASK","TYPE_MASK","BRACKET_MASK","START_INDEX_OFFSET","TYPE_OFFSET","Math","pow","BRACKET_OFFSET","DEFAULT_TOKEN","startIndex","bracket","INFLATED_TOKENS_EMPTY_TEXT","DEFLATED_TOKENS_EMPTY_TEXT","INFLATED_TOKENS_NON_EMPTY_TEXT","DEFLATED_TOKENS_NON_EMPTY_TEXT","TokensBinaryEncoding","wrappingIndentFromString","wrappingIndent","SelectionDirection","WrappingIndent","OverviewRulerLane","EndOfLinePreference","EndOfLineSequence","LineTokensBinaryEncoding","TrackedRangeStickiness","VerticalRevealType","MouseTargetType","KEYBINDING_CONTEXT_EDITOR_TEXT_FOCUS","KEYBINDING_CONTEXT_EDITOR_FOCUS","KEYBINDING_CONTEXT_EDITOR_TAB_MOVES_FOCUS","KEYBINDING_CONTEXT_EDITOR_HAS_MULTIPLE_SELECTIONS","KEYBINDING_CONTEXT_EDITOR_HAS_NON_EMPTY_SELECTION","KEYBINDING_CONTEXT_EDITOR_LANGUAGE_ID","ViewEventNames","ModelFlushedEvent","LinesDeletedEvent","LinesInsertedEvent","LineChangedEvent","TokensChangedEvent","DecorationsChangedEvent","CursorPositionChangedEvent","CursorSelectionChangedEvent","RevealRangeEvent","LineMappingChangedEvent","ScrollRequestEvent","CodeEditorStateFlag","EditorType","ICodeEditor","IDiffEditor","ClassName","EditorWarningDecoration","EditorErrorDecoration","Disposed","ConfigurationChanged","ModelDispose","ModelChanged","ModelTokensChanged","ModelModeChanged","ModelModeSupportChanged","ModelContentChanged","ModelContentChanged2","ModelContentChangedFlush","ModelContentChangedLinesDeleted","ModelContentChangedLinesInserted","ModelContentChangedLineChanged","EditorTextBlur","EditorTextFocus","EditorFocus","EditorBlur","ModelPropertiesChanged","ModelDecorationsChanged","CursorPositionChanged","CursorSelectionChanged","CursorRevealRange","CursorScrollRequest","ViewFocusGained","ViewFocusLost","ViewFocusChanged","ViewScrollWidthChanged","ViewScrollHeightChanged","ViewScrollChanged","ViewZonesChanged","ViewLayoutChanged","MouseDown","MouseUp","MouseMove","MouseLeave","KeyDown","KeyUp","EditorLayout","DiffUpdated","Handler","ExecuteCommand","ExecuteCommands","CursorLeft","CursorLeftSelect","CursorWordLeft","CursorWordLeftSelect","CursorRight","CursorRightSelect","CursorWordRight","CursorWordRightSelect","CursorUp","CursorUpSelect","CursorDown","CursorDownSelect","CursorPageUp","CursorPageUpSelect","CursorPageDown","CursorPageDownSelect","CursorHome","CursorHomeSelect","CursorEnd","CursorEndSelect","ExpandLineSelection","CursorTop","CursorTopSelect","CursorBottom","CursorBottomSelect","AddCursorDown","AddCursorUp","CursorUndo","MoveTo","MoveToSelect","CreateCursor","LastCursorMoveToSelect","JumpToBracket","Type","ReplacePreviousChar","Paste","Indent","Outdent","DeleteLeft","DeleteRight","DeleteWordLeft","DeleteWordRight","DeleteAllLeft","DeleteAllRight","RemoveSecondaryCursors","CancelSelection","Cut","Undo","Redo","WordSelect","WordSelectDrag","LastCursorWordSelect","LineSelect","LineSelectDrag","LastCursorLineSelect","LastCursorLineSelectDrag","LineInsertBefore","LineInsertAfter","LineBreakInsert","SelectAll","ScrollLineUp","ScrollLineDown","ScrollPageUp","ScrollPageDown","EditorCommon","Selection","Selection.constructor","Selection.clone","Selection.toString","Selection.equalsSelection","Selection.getDirection","Selection.setEndPosition","Selection.setStartPosition","Selection.createSelection","Selection.liftSelection","Selection.selectionsEqual","Selection.selectionsArrEqual","Selection.isISelection","Selection.createWithDirection","nullMode_1","arrays_1","WordHelper","WordHelper._safeGetWordDefinition","WordHelper.ensureValidWordDefinition","WordHelper.massageWordDefinitionOf","WordHelper.getWords","WordHelper._getWordsInText","WordHelper._getWordAtColumn","WordHelper.getWordAtPosition","WordHelper._getWordAtText","BracketsHelper","BracketsHelper._sign","BracketsHelper._findMatchingBracketUp","BracketsHelper._findMatchingBracketDown","BracketsHelper.findMatchingBracketUp","BracketsHelper.matchBracket","Lettercase","Brackets","Brackets.constructor","Brackets.getElectricCharacters","Brackets.onEnter","Brackets.onElectricCharacter","Brackets.stringIsBracket","Brackets.containsTokenTypes","Brackets._onEnterRegexBrackets","Brackets._onElectricCharacterStandardBrackets","Brackets._onElectricCharacterRegexBrackets","Brackets._onElectricCharacterDocComment","Brackets._detectLetercase","Brackets._changeLettercase","glob_1","selection","uri","language","score","selector","languageSelector_1","LanguageFeatureRegistry","LanguageFeatureRegistry.constructor","LanguageFeatureRegistry.onDidChange","LanguageFeatureRegistry.register","LanguageFeatureRegistry.has","LanguageFeatureRegistry.all","LanguageFeatureRegistry.ordered","LanguageFeatureRegistry.orderedGroups","LanguageFeatureRegistry._orderedForEach","LanguageFeatureRegistry._updateScores","LanguageFeatureRegistry._sortByScore","LanguageFeatureRegistry._compareByScoreAndTime","Filters","wrapBaseFilter","StrictPrefix","Prefix","CamelCase","ContiguousSubString","DefaultFilter","lineStream_1","autoIndentation_1","modesFilters_1","handleEvent","runner","isLineToken","anywhereInToken","something","Token","Token.constructor","Token.toString","FilteredLineContext","FilteredLineContext.constructor","FilteredLineContext.getLineContent","FilteredLineContext.getTokenCount","FilteredLineContext.findIndexOfOffset","FilteredLineContext.getTokenStartIndex","FilteredLineContext.getTokenEndIndex","FilteredLineContext.getTokenType","FilteredLineContext.getTokenBracket","FilteredLineContext.getTokenText","AbstractSupport","AbstractSupport.constructor","AbstractSupport.mode","TokenizationSupport","TokenizationSupport.constructor","TokenizationSupport.dispose","TokenizationSupport.getInitialState","TokenizationSupport.tokenize","TokenizationSupport._nestedTokenize","TokenizationSupport._myTokenize","TokenizationSupport._getEmbeddedLevel","TokenizationSupport.enterNestedMode","TokenizationSupport.getNestedMode","TokenizationSupport._validatedNestedMode","TokenizationSupport.getNestedModeInitialState","TokenizationSupport.getLeavingNestedModeData","TokenizationSupport.onReturningFromNestedMode","BracketElectricCharacterSupport","BracketElectricCharacterSupport.constructor","BracketElectricCharacterSupport.getElectricCharacters","BracketElectricCharacterSupport.onElectricCharacter","BracketElectricCharacterSupport.onEnter","DeclarationSupport","DeclarationSupport.constructor","DeclarationSupport.canFindDeclaration","DeclarationSupport.findDeclaration","TypeDeclarationSupport","TypeDeclarationSupport.constructor","TypeDeclarationSupport.canFindTypeDeclaration","TypeDeclarationSupport.findTypeDeclaration","ReferenceSupport","ReferenceSupport.constructor","ReferenceSupport.canFindReferences","ReferenceSupport.findReferences","ParameterHintsSupport","ParameterHintsSupport.constructor","ParameterHintsSupport.getParameterHintsTriggerCharacters","ParameterHintsSupport.shouldTriggerParameterHints","ParameterHintsSupport.getParameterHints","SuggestSupport","SuggestSupport.constructor","SuggestSupport.shouldAutotriggerSuggest","SuggestSupport.getFilter","SuggestSupport.getSorter","SuggestSupport.getTriggerCharacters","SuggestSupport.shouldShowEmptySuggestionList","ComposableSuggestSupport","ComposableSuggestSupport.constructor","CharacterPairSupport","CharacterPairSupport.constructor","CharacterPairSupport.getAutoClosingPairs","CharacterPairSupport.shouldAutoClosePair","CharacterPairSupport.getSurroundingPairs","ReplaceSupportHelperImpl","ReplaceSupportHelperImpl.valueSetsReplace","ReplaceSupportHelperImpl.valueSetReplace","ReplaceSupport","AbstractInplaceReplaceSupport","AbstractInplaceReplaceSupport.constructor","AbstractInplaceReplaceSupport.navigateValueSet","AbstractInplaceReplaceSupport.doNavigateValueSet","AbstractInplaceReplaceSupport.numberReplace","AbstractInplaceReplaceSupport.textReplace","AbstractInplaceReplaceSupport.getModel","WorkerInplaceReplaceSupport","WorkerInplaceReplaceSupport.constructor","WorkerInplaceReplaceSupport.getModel","MainInplaceReplaceSupport","MainInplaceReplaceSupport.constructor","MainInplaceReplaceSupport.getModel","CommentsSupport","CommentsSupport.constructor","CommentsSupport.getCommentsConfiguration","TokenTypeClassificationSupport","TokenTypeClassificationSupport.constructor","TokenTypeClassificationSupport.getWordDefinition","supports_1","modes_1","getRawEnterActionAtPosition","model","lineNumber","column","getEnterActionAtPosition","OnEnterSupport","OnEnterSupport.constructor","OnEnterSupport.onEnter","OnEnterSupport._onEnter","OnEnterSupport._actualOnEnter","OnEnterSupport._createOpenBracketRegExp","OnEnterSupport._createCloseBracketRegExp","OnEnterSupport._safeRegExp","AbstractDescriptor","AbstractDescriptor.constructor","AbstractDescriptor.appendStaticArguments","AbstractDescriptor.staticArguments","AbstractDescriptor._validate","SyncDescriptor","SyncDescriptor.constructor","SyncDescriptor.ctor","SyncDescriptor.equals","SyncDescriptor.hashCode","SyncDescriptor.bind","createSyncDescriptor","staticArguments","AsyncDescriptor","asyncDescriptor","$isAsyncDescriptor","$moduleName","moduleName","$ctorName","ctorName","$staticArguments","appendStaticArguments","AsyncDescriptor.constructor","AsyncDescriptor.create","AsyncDescriptor.moduleName","AsyncDescriptor.ctorName","AsyncDescriptor.equals","AsyncDescriptor.hashCode","AsyncDescriptor.bind","_createAsyncDescriptor","createAsyncDescriptor0","createAsyncDescriptor1","createAsyncDescriptor2","createAsyncDescriptor3","createAsyncDescriptor4","createAsyncDescriptor5","createAsyncDescriptor6","createAsyncDescriptor7","createDecorator","serviceId","_util","DI_TARGET","DI_DEPENDENCIES","Uses","existing","DI_DEPENDENCIES_USES","serviceIds","_util.getServiceId","_util.getServiceDependencies","IInstantiationService","INullService","instantiation_1","ID_CODE_EDITOR_SERVICE","ICodeEditorService","IModeService","IModelService","extractSetting","config","settingPath","extractSetting.accessSetting","IConfigurationService","ConfigurationServiceEventTypes","IEditorService","POSITIONS","LEFT","CENTER","RIGHT","IEventService","IFileService","FileChangeType","FILE_CHANGES","FileChangesEvent","FileChangesEvent.constructor","FileChangesEvent.changes","FileChangesEvent.contains","FileChangesEvent.containsAny","FileChangesEvent.getAdded","FileChangesEvent.gotAdded","FileChangesEvent.getDeleted","FileChangesEvent.gotDeleted","FileChangesEvent.getUpdated","FileChangesEvent.gotUpdated","FileChangesEvent.getOfType","FileChangesEvent.hasType","FileOperationResult","collections_1","selection_1","files_1","editOperation_1","bulkEdit","eventService","editorService","editor","edits","createBulkEdit","createBulkEdit.add","createBulkEdit.getConcurrentEdits","createBulkEdit.finish","ChangeRecorder","ChangeRecorder.constructor","ChangeRecorder.start","EditTask","EditTask.constructor","EditTask.addEdit","EditTask.apply","EditTask._getInitialSelections","EditTask._getEndCursorSelections","EditTask.getEndCursorSelection","EditTask._editCompare","SourceModelEditTask","SourceModelEditTask.constructor","SourceModelEditTask._getInitialSelections","BulkEditModel","BulkEditModel.constructor","BulkEditModel.resourcesCount","BulkEditModel.changeCount","BulkEditModel._addEdit","BulkEditModel.prepare","BulkEditModel.apply","descriptors","graph_1","instantiation","services","createContext","createContext.add","createContext.get","AccessLock","AccessLock.constructor","AccessLock.locked","AccessLock.runUnlocked","ServicesMap","ServicesMap.constructor","ServicesMap.registerService","ServicesMap.lock","ServicesMap.services","ServicesMap._ensureInstances","ServicesMap.invokeFunction","ServicesMap.createInstance","InstantiationService","InstantiationService.constructor","InstantiationService.createChild","InstantiationService.registerService","InstantiationService.addSingleton","InstantiationService.getInstance","InstantiationService.createInstance","InstantiationService._createInstanceAsync","InstantiationService.invokeFunction","IKeybindingService","KeybindingsUtils","KeybindingsUtils.bindToCurrentPlatform","ILifecycleService","IMarkerService","MarkerType","severity_1","actions_1","CloseAction","localize","CancelAction","IMessageService","Assert","RegistryImpl","RegistryImpl.constructor","RegistryImpl.add","RegistryImpl.knows","RegistryImpl.as","Registry","BaseRegistry","BaseRegistry.constructor","BaseRegistry.setInstantiationService","BaseRegistry.instantiate","BaseRegistry._register","BaseRegistry._getInstances","BaseRegistry._setInstances","normalizeId","Extensions","JSONContribution","JSONContributionRegistry","JSONContributionRegistry.constructor","JSONContributionRegistry.addRegistryChangedListener","JSONContributionRegistry.registerSchema","JSONContributionRegistry.addSchemaFileAssociation","JSONContributionRegistry.getSchemaContributions","jsonContributionRegistry","add","registerSchema","title","$schema","definitions","schemaArray","minItems","items","$ref","positiveInteger","minimum","positiveIntegerDefault0","allOf","default","simpleTypes","enum","stringArray","uniqueItems","multipleOf","exclusiveMinimum","maximum","exclusiveMaximum","maxLength","minLength","additionalItems","anyOf","maxItems","maxProperties","minProperties","required","additionalProperties","patternProperties","dependencies","oneOf","types_1","keybindingsUtils_1","keyCodes_1","KeybindingsRegistryImpl","KeybindingsRegistryImpl.constructor","KeybindingsRegistryImpl.registerCommandRule","KeybindingsRegistryImpl.registerCommandDesc","desc","accesor","KeybindingsRegistryImpl.getCommands","KeybindingsRegistryImpl.registerDefaultKeybinding","KeybindingsRegistryImpl.getDefaultKeybindings","KeybindingsRegistry","EditorModes","keybindingsRegistry_1","editor_1","codeEditorService_1","findFocusedEditor","commandId","accessor","complain","withCodeEditorFromCommandHandler","getActiveEditor","triggerEditorHandler","handlerId","registerCoreCommand","kb","weight","getMacWordNavigationKB","shift","getWordNavigationKB","registerWordCommand","selectAll","H","primary","mac","secondary","WinCtrl","linux","CtrlCmd","WEIGHT","editorCore","operator","KEYBINDING_CONTEXT_OPERATOR_NOT_EQUAL","operand","registerCommandDesc","createRPC","serializeAndSend","createRPC.rpc","create.serializeAndSend","create.invokeHandler","pendingRPCReplies","IPluginService","INSTANCE","isValidPluginDescription","extensionFolderPath","pluginDescription","notices","_isStringArray","ScopedMessageCollector","ScopedMessageCollector.constructor","ScopedMessageCollector.error","ScopedMessageCollector.warn","ScopedMessageCollector.info","PluginsMessageForwarder","PluginsMessageForwarder.constructor","PluginsMessageForwarder._pushMessage","PluginsMessageForwarder._ensureString","PluginsMessageForwarder.error","PluginsMessageForwarder.warn","PluginsMessageForwarder.info","PluginsMessageForwarder.scopeTo","PluginsMessageCollector","PluginsMessageCollector.constructor","PluginsMessageCollector.getMessages","PluginsMessageCollector._pushMessage","PluginsMessageCollector._ensureString","PluginsMessageCollector.error","PluginsMessageCollector.warn","PluginsMessageCollector.info","PluginsMessageCollector.scopeTo","schemaRegistry","ExtensionPoint","ExtensionPoint.constructor","ExtensionPoint.setHandler","ExtensionPoint.handle","ExtensionPoint._handle","PluginsRegistryImpl","PluginsRegistryImpl.constructor","PluginsRegistryImpl.registerPointListener","PluginsRegistryImpl.registerExtensionPoint","PluginsRegistryImpl.handleExtensionPoints","PluginsRegistryImpl._triggerPointListener","PluginsRegistryImpl.registerPlugins","PluginsRegistryImpl._filterWithExtPoint","PluginsRegistryImpl.getPluginDescriptionsForActivationEvent","PluginsRegistryImpl.getAllPluginDescriptions","PluginsRegistryImpl.getPluginDescription","PluginsRegistryImpl.registerOneTimeActivationEventListener","PluginsRegistryImpl.triggerActivationEventListeners","PluginsRegistry","schemaId","schema","author","version","main","displayName","categories","galleryBanner","color","theme","publisher","activationEvents","extensionDependencies","scripts","vscode:prepublish","contributes","isAMD","addSchemaFileAssociation","plugins_1","pluginsRegistry_1","loadAMDModule","moduleId","ActivatedPlugin","ActivatedPlugin.constructor","AbstractPluginService","AbstractPluginService.constructor","AbstractPluginService.showMessage","AbstractPluginService.registrationDone","AbstractPluginService.registerOneTimeActivationEventListener","AbstractPluginService.onReady","AbstractPluginService.get","AbstractPluginService.getPluginsStatus","AbstractPluginService.isActivated","AbstractPluginService.activateByEvent","AbstractPluginService.activateAndGet","AbstractPluginService._handleActivateRequest","AbstractPluginService._activatePlugins","AbstractPluginService._activatePlugin","AbstractPluginService._actualActivatePlugin","AbstractPluginService._loadPluginModule","AbstractPluginService._loadPluginContext","AbstractPluginService._callActivate","AbstractPluginService._callActivateOptional","semver","isValidVersionStr","parseVersion","normalizeVersion","isValidVersion","_version","_desiredVersion","isValidExtensionVersion","extensionDesc","VERSION_REGEXP","IRequestService","Timer","Async","request_1","BaseRequestService","BaseRequestService.constructor","BaseRequestService.computeOrigin","BaseRequestService.makeCrossOriginRequest","BaseRequestService.makeRequest","xhrRequest","BaseRequestService.makeChunkedRequest","ID","ISearchService","QueryType","FileMatch","FileMatch.constructor","LineMatch","LineMatch.constructor","events_1","IStorageService","StorageEventType","StorageEvent","StorageEvent.constructor","StorageEvent.isLocal","StorageScope","anonymize","input","ITelemetryService","telemetry_1","modelService_1","descriptors_1","triggerEditorAction","actionId","triggerEditorActionGlobal","contextRule","needsTextFocus","needsKey","createCommandHandler","ContextKey","EditorActionDescriptor","EditorActionDescriptor.constructor","CommonEditorRegistry","CommonEditorRegistry.registerEditorAction","CommonEditorRegistry.registerEditorContribution","CommonEditorRegistry.getEditorContributions","CommonEditorRegistry.commandWeight","CommonEditorRegistry.registerEditorCommand","CommonEditorRegistry.registerLanguageCommand","CommonEditorRegistry.registerLanguageCommand.handler","CommonEditorRegistry.registerDefaultLanguageCommand","resource","isIPosition","getModel","SimpleEditorContributionDescriptor","SimpleEditorContributionDescriptor.constructor","SimpleEditorContributionDescriptor.createInstance","InternalEditorActionDescriptor","InternalEditorActionDescriptor.constructor","InternalEditorActionDescriptor.createInstance","EditorCommonContributions","EditorContributionRegistry","EditorContributionRegistry.constructor","EditorContributionRegistry.registerEditorContribution2","EditorContributionRegistry.registerEditorAction","EditorContributionRegistry.getEditorContributions2","defaultEditorActionKeybindingOptions","editorCommonExtensions_1","languageFeatureRegistry_1","getCodeLensData","CodeLensRegistry","registerLanguageCommand","formatRange","range","formatDocument","formatAfterKeystroke","FormatRegistry","FormatOnTypeRegistry","isIRange","registerDefaultLanguageCommand","getDeclarationsAtPosition","DeclarationRegistry","getExtraInfoAtPosition","ExtraInfoRegistry","getParameterHints","triggerCharacter","ParameterHintsRegistry","getQuickFixes","QuickFixRegistry","getOutlineEntries","compareEntriesUsingStart","bucket","entries","overrideContainerLabel","OutlineRegistry","findReferences","ReferenceRegistry","nls_1","newName","RenameRegistry","suggest","groups","CONTEXT_SUGGEST_WIDGET_VISIBLE","CONTEXT_SUGGESTION_SUPPORTS_ACCEPT_ON_KEY","ACCEPT_SELECTED_SUGGESTION_CMD","SuggestRegistry","__decorate","decorators","Reflect","decorate","reduceRight","o","__param","paramIndex","decorator","getOccurrencesAtPosition","OccurrencesRegistry","WordHighlighter","WordHighlighter.constructor","WordHighlighter._removeDecorations","WordHighlighter._stopAll","WordHighlighter._onPositionChanged","WordHighlighter._beginRenderDecorations","WordHighlighter.renderDecorations","WordHighlighter.destroy","WordHighlighterContribution","WordHighlighterContribution.constructor","WordHighlighterContribution.getId","WordHighlighterContribution.dispose","registerEditorContribution","timer_1","AbstractTelemetryService","AbstractTelemetryService.constructor","AbstractTelemetryService._safeStringify","AbstractTelemetryService.onTelemetryTimerEventStop","AbstractTelemetryService.onErrorEvent","AbstractTelemetryService.addErrortoBuffer","AbstractTelemetryService.tryScheduleErrorFlush","AbstractTelemetryService.flushErrorBuffer","AbstractTelemetryService.cleanupInfo","AbstractTelemetryService.enableGlobalErrorHandler","that","onUncaughtError","filename","line","oldOnError","AbstractTelemetryService.onUncaughtError","AbstractTelemetryService.loadTelemetryAppendersFromRegistery","AbstractTelemetryService.getSessionId","AbstractTelemetryService.getMachineId","AbstractTelemetryService.getInstanceId","AbstractTelemetryService.getTelemetryInfo","AbstractTelemetryService.dispose","AbstractTelemetryService.start","AbstractTelemetryService.publicLog","AbstractTelemetryService.getAppendersCount","AbstractTelemetryService.getAppenders","AbstractTelemetryService.addTelemetryAppender","AbstractTelemetryService.removeTelemetryAppender","AbstractTelemetryService.setInstantiationService","AbstractTelemetryService.handleEvent","Extenstions","TelemetryAppenders","TelemetryAppendersRegistry","TelemetryAppendersRegistry.constructor","TelemetryAppendersRegistry.registerTelemetryAppenderDescriptor","TelemetryAppendersRegistry.getTelemetryAppenderDescriptors","IThreadService","IRemotableCtorMap","IRemotableCtorAffinityMap","Remotable","Remotable.getId","Remotable.MainContext","_ensureUnique","identifier","MainContext","PROP_NAME","Remotable.PluginHostContext","PluginHostContext","Remotable.WorkerContext","WorkerContext","affinity","whichWorker","Remotable._ensureUnique","ThreadAffinity","thread_1","storage_1","MainThreadStorage","MainThreadStorage.constructor","MainThreadStorage.getValue","MainThreadStorage.setValue","PluginHostStorage","PluginHostStorage.constructor","PluginHostStorage.getValue","PluginHostStorage.setValue","abstractPluginService_1","remotable_storage_1","loadCommonJSModule","uriFromPath","_path","PluginMemento","PluginMemento.constructor","PluginMemento.whenReady","PluginMemento.get","PluginMemento.update","MainProcessPluginService","MainProcessPluginService.constructor","MainProcessPluginService.getTelemetryActivationEvent","MainProcessPluginService._showMessage","MainProcessPluginService.showMessage","MainProcessPluginService.$doShowMessage","MainProcessPluginService.getPluginsStatus","MainProcessPluginService.deactivate","MainProcessPluginService._actualActivatePlugin","MainProcessPluginService.$onPluginHostReady","MainProcessPluginService.$onPluginActivatedInPluginHost","MainProcessPluginService.$onPluginActivationFailedInPluginHost","PluginHostPluginService","PluginHostPluginService.constructor","PluginHostPluginService._showMessage","PluginHostPluginService.$doShowMessage","PluginHostPluginService.deactivate","PluginHostPluginService.registrationDone","PluginHostPluginService._loadPluginModule","PluginHostPluginService._loadPluginContext","PluginHostPluginService._loadPluginContext.extensionPath","PluginHostPluginService._actualActivatePlugin","PluginHostPluginService.$activatePluginInPluginHost","RemoteTelemetryServiceHelper","RemoteTelemetryServiceHelper.constructor","RemoteTelemetryServiceHelper._handleRemoteTelemetryEvent","RemoteTelemetryServiceHelper.getTelemetryInfo","AbstractRemoteTelemetryService","AbstractRemoteTelemetryService.constructor","AbstractRemoteTelemetryService.getTelemetryInfo","AbstractRemoteTelemetryService.addTelemetryAppender","AbstractRemoteTelemetryService.handleEvent","thread","findMember","proto","findThreadService","MainThreadAttr","MainThread","methodName","OneWorkerFn","conditionOrAffinity","condition","OneWorker","AllWorkersAttr","AllWorkers","EverywhereAttr","Everywhere","registerThreadSynchronizableObject","readThreadSynchronizableObjects","THREAD_SERVICE_PROPERTY_NAME","OneWorkerAttr","SynchronizableObjectsRegistry","SynchronizableObjectsRegistry.constructor","SynchronizableObjectsRegistry.register","SynchronizableObjectsRegistry.read","SynchronizableObjects","threadService_1","createWordRegExp","allowInWords","_createModeSupportChangedEvent","AbstractMode","AbstractMode.constructor","AbstractMode.getId","AbstractMode.creationDone","AbstractMode.toSimplifiedMode","AbstractMode._getOrCreateWorker","AbstractMode._loadModule","AbstractMode._getWorkerDescriptor","AbstractMode._worker","AbstractMode._pickAWorkerToValidate","AbstractMode.getFilter","AbstractMode.addSupportChangedListener","AbstractMode.registerSupport","AbstractMode.suggest","AbstractMode.getTriggerCharacters","AbstractMode.shouldAutotriggerSuggest","AbstractMode.shouldAutotriggerSuggestImpl","AbstractMode.shouldShowEmptySuggestionList","AbstractMode.findOccurrences","AbstractMode.navigateValueSet","AbstractMode.computeDiff","AbstractMode.computeDirtyDiff","AbstractMode.computeLinks","AbstractMode.configure","AbstractMode._configureWorkers","AbstractMode.getWordDefinition","AbstractMode.getCommentsConfiguration","SimplifiedMode","SimplifiedMode.constructor","SimplifiedMode.getId","SimplifiedMode.toSimplifiedMode","SimplifiedMode._assignSupports","SimplifiedMode._createModeSupportChangedEvent","_0","_1","_2","_3","_4","_5","_6","_7","_8","_9","_c","_d","_e","_f","_A","_B","_C","_D","_E","_F","character","base","FrankensteinMode","FrankensteinMode.constructor","isUndefinedOrStringArray","isValidLanguageExtensionPoint","collector","languagesExtPoint","registerExtensionPoint","aliases","extensions","filenames","mimetypes","configuration","LanguageExtensionPointHandler","LanguageExtensionPointHandler.constructor","LanguageExtensionPointHandler.creationDone","LanguageExtensionPointHandler.getId","LanguageExtensionPointHandler.getSerializableState","LanguageExtensionPointHandler.setData","LanguageExtensionPointHandler.registerCompatMode","LanguageExtensionPointHandler._handleLanguagesExtensionPointUsers","LanguageExtensionPointHandler._onLanguagesEverywhere","LanguageExtensionPointHandler._onLanguagesImpl","LanguageExtensionPointHandler._setMime2LanguageId","LanguageExtensionPointHandler.registerLanguage","LanguageExtensionPointHandler._onLanguage","LanguageExtensionPointHandler.isRegisteredMode","LanguageExtensionPointHandler.getRegisteredModes","LanguageExtensionPointHandler.getRegisteredMimetypes","LanguageExtensionPointHandler.getRegisteredLanguageNames","LanguageExtensionPointHandler.getLanguageName","LanguageExtensionPointHandler.getModeIdForLanguageNameLowercase","LanguageExtensionPointHandler.getConfigurationFiles","LanguageExtensionPointHandler.getMimeForMode","LanguageExtensionPointHandler.extractModeIds","LanguageExtensionPointHandler.getModeIdsFromLanguageName","LanguageExtensionPointHandler.getModeIdsFromFilenameOrFirstLine","LanguageExtensionPointHandler.getCompatMode","LanguageExtensionPointHandler.getExtensions","_instance","setHandler","_handleLanguagesExtensionPointUsers","LanguageExtensions","languageExtensionPoint_1","registerMode","registerWorkerParticipant","modeId","registerDefaultSnippets","snippets","registerSnippets","getSnippets","EditorModesRegistry","EditorModesRegistry.constructor","EditorModesRegistry.registerWorkerParticipant","EditorModesRegistry._getAllWorkerParticipants","EditorModesRegistry._setWorkerParticipants","EditorModesRegistry.getWorkerParticipants","EditorModesRegistry.isRegisteredMode","EditorModesRegistry.getRegisteredModes","EditorModesRegistry.getRegisteredMimetypes","EditorModesRegistry.getRegisteredLanguageNames","EditorModesRegistry.getExtensions","EditorModesRegistry.getMimeForMode","EditorModesRegistry.getLanguageName","EditorModesRegistry.getModeIdForLanguageName","EditorModesRegistry.registerMode","EditorModesRegistry.getModeId","mR","_defaultSnippets","_snippets","abstractMode_1","createCommentsSupport","createBracketElectricCharacterContribution","createTokenTypeClassificationSupportContribution","createCharacterPairContribution","_addSuggestionsAtPosition","superSuggestions","createOnEnterSupportOptions","createSuggestSupport","modelService","abstractState_1","ModesRegistry","Supports","findBracket","matched","createTokenizationSupport","modeService","modesRegistry","MonarchLexer","MonarchLexer.constructor","MonarchLexer.makeClone","MonarchLexer.equals","MonarchLexer.tokenize","modeService_1","MonarchDefinition","monarchLexer_1","monarchCompile_1","modesRegistry_1","onEnter_1","ModeServiceImpl","ModeServiceImpl.constructor","ModeServiceImpl.getConfigurationForMode","ModeServiceImpl.configureMode","ModeServiceImpl.configureModeById","ModeServiceImpl.configureAllModes","ModeServiceImpl.lookup","ModeServiceImpl.getMode","ModeServiceImpl.getModeId","ModeServiceImpl.getModeIdByLanguageName","ModeServiceImpl.getModeIdByFilenameOrFirstLine","ModeServiceImpl.getOrCreateMode","ModeServiceImpl.getOrCreateModeByLanguageName","ModeServiceImpl.getOrCreateModeByFilenameOrFirstLine","ModeServiceImpl._getOrCreateMode","ModeServiceImpl._createMode","ModeServiceImpl._getOrCreateFrankensteinMode","ModeServiceImpl._createModeDescriptor","ModeServiceImpl.registerModeSupport","ModeServiceImpl.doRegisterMonarchDefinition","ModeServiceImpl.registerMonarchDefinition","ModeServiceImpl.registerDeclarativeCharacterPairSupport","ModeServiceImpl.registerCodeLensSupport","ModeServiceImpl.registerDeclarativeCommentsSupport","ModeServiceImpl.registerDeclarativeDeclarationSupport","ModeServiceImpl.registerDeclarativeElectricCharacterSupport","ModeServiceImpl.registerExtraInfoSupport","ModeServiceImpl.registerFormattingSupport","ModeServiceImpl.registerInplaceReplaceSupport","ModeServiceImpl.registerOccurrencesSupport","ModeServiceImpl.registerOutlineSupport","ModeServiceImpl.registerDeclarativeParameterHintsSupport","ModeServiceImpl.registerQuickFixSupport","ModeServiceImpl.registerDeclarativeReferenceSupport","ModeServiceImpl.registerRenameSupport","ModeServiceImpl.registerDeclarativeSuggestSupport","ModeServiceImpl.registerTokenizationSupport","ModeServiceImpl.registerDeclarativeTokenTypeClassificationSupport","ModeServiceImpl.registerDeclarativeOnEnterSupport","MainThreadModeServiceImpl","MainThreadModeServiceImpl.constructor","MainThreadModeServiceImpl._getModeServiceWorkerHelper","MainThreadModeServiceImpl.configureModeById","MainThreadModeServiceImpl._createMode","MainThreadModeServiceImpl.registerModeSupport","MainThreadModeServiceImpl.registerMonarchDefinition","ModeServiceWorkerHelper","ModeServiceWorkerHelper.constructor","ModeServiceWorkerHelper.initialize","ModeServiceWorkerHelper.instantiateMode","ModeServiceWorkerHelper.configureModeById","ModeServiceWorkerHelper.registerMonarchDefinition","DynamicProxy","DynamicProxy.constructor","DynamicProxy.dispose","DynamicProxy.getProxyDefinition","AbstractThreadService","AbstractThreadService.constructor","AbstractThreadService.generateDynamicProxyId","AbstractThreadService.setInstantiationService","AbstractThreadService.createInstance","AbstractThreadService._doCreateInstance","AbstractThreadService._finishInstance","AbstractThreadService.registerInstance","AbstractThreadService.handle","AbstractThreadService._getOrCreateProxyInstance","AbstractThreadService._registerLocalInstance","AbstractThreadService._getOrCreateLocalInstance","AbstractThreadService.createDynamicProxyFromMethods","AbstractThreadService.createDynamicProxyFromMembers","AbstractThreadService._proxifyMethods","AbstractThreadService._proxifyMembers","AbstractThreadService.isProxyObject","AbstractThreadService.getRemotable","AbstractThreadService.registerRemotableInstance","abstractThreadService","PluginHostThreadService","PluginHostThreadService.constructor","PluginHostThreadService.MainThread","PluginHostThreadService.OneWorker","PluginHostThreadService.AllWorkers","PluginHostThreadService.Everywhere","PluginHostThreadService._registerAndInstantiateMainProcessActor","PluginHostThreadService._registerMainProcessActor","PluginHostThreadService._registerAndInstantiatePluginHostActor","PluginHostThreadService._registerPluginHostActor","PluginHostThreadService._registerAndInstantiateWorkerActor","PluginHostThreadService._registerWorkerActor","IWorkspaceContextService","workspace_1","BaseWorkspaceContextService","BaseWorkspaceContextService.constructor","BaseWorkspaceContextService.getWorkspace","BaseWorkspaceContextService.getConfiguration","BaseWorkspaceContextService.getOptions","BaseWorkspaceContextService.isInsideWorkspace","BaseWorkspaceContextService.toWorkspaceRelativePath","BaseWorkspaceContextService.toResource","ExtHostLanguages","ExtHostLanguages.constructor","ExtHostLanguages.getLanguages","MainThreadLanguages","MainThreadLanguages.constructor","MainThreadLanguages._getLanguages","configurationsEqual","strcmp","TextEditorRevealType","MainThreadTextEditor","MainThreadTextEditor.constructor","MainThreadTextEditor.dispose","MainThreadTextEditor.getId","MainThreadTextEditor.getModel","MainThreadTextEditor.hasCodeEditor","MainThreadTextEditor.setCodeEditor","MainThreadTextEditor.isVisible","MainThreadTextEditor.onSelectionChanged","MainThreadTextEditor.onConfigurationChanged","MainThreadTextEditor.getSelections","MainThreadTextEditor.setSelections","MainThreadTextEditor.getConfiguration","MainThreadTextEditor.setConfiguration","MainThreadTextEditor.setDecorations","MainThreadTextEditor.revealRange","MainThreadTextEditor._readConfiguration","MainThreadTextEditor.isFocused","MainThreadTextEditor.matches","MainThreadTextEditor.applyEdits","MainThreadEditorsTracker","MainThreadEditorsTracker.constructor","MainThreadEditorsTracker._nextId","MainThreadEditorsTracker.dispose","MainThreadEditorsTracker._onModelAdded","MainThreadEditorsTracker._onModelRemoved","MainThreadEditorsTracker._onCodeEditorAdd","MainThreadEditorsTracker._onCodeEditorRemove","MainThreadEditorsTracker._doUpdateMapping","MainThreadEditorsTracker._updateFocusedTextEditor","MainThreadEditorsTracker._findFocusedTextEditorId","MainThreadEditorsTracker._findVisibleTextEditorIds","MainThreadEditorsTracker._setFocusedTextEditorId","MainThreadEditorsTracker._getVisibleModels","MainThreadEditorsTracker.getFocusedTextEditorId","MainThreadEditorsTracker.getVisibleTextEditorIds","MainThreadEditorsTracker.onTextEditorAdd","MainThreadEditorsTracker.onTextEditorRemove","MainThreadEditorsTracker.onDidUpdateTextEditors","MainThreadEditorsTracker.onChangedFocusedTextEditor","MainThreadEditorsTracker.findTextEditorIdFor","MainThreadEditorsTracker.registerTextEditorDecorationType","MainThreadEditorsTracker.removeTextEditorDecorationType","configuration_1","PluginHostConfiguration","PluginHostConfiguration.constructor","PluginHostConfiguration.onDidChangeConfiguration","PluginHostConfiguration._acceptConfigurationChanged","PluginHostConfiguration.getConfiguration","_lookUp","PluginHostConfiguration._lookUp","MainThreadConfiguration","MainThreadConfiguration.constructor","MainThreadConfiguration.dispose","markers_1","DiagnosticCollection","DiagnosticCollection.constructor","DiagnosticCollection.dispose","DiagnosticCollection.name","DiagnosticCollection.set","DiagnosticCollection.delete","DiagnosticCollection.clear","DiagnosticCollection._checkDisposed","DiagnosticCollection._toMarkerData","DiagnosticCollection._convertDiagnosticsSeverity","PluginHostDiagnostics","PluginHostDiagnostics.constructor","PluginHostDiagnostics.createDiagnosticCollection","MainThreadDiagnostics","MainThreadDiagnostics.constructor","MainThreadDiagnostics._changeOne","MainThreadDiagnostics._changeAll","message_1","PluginHostMessageService","PluginHostMessageService.constructor","PluginHostMessageService.showMessage","MainThreadMessageService","MainThreadMessageService.constructor","MainThreadMessageService.showMessage","abstractRemoteTelemetryService_1","PluginHostTelemetryService","PluginHostTelemetryService.constructor","PluginHostTelemetryService.handleEvent","Disposable","Disposable.constructor","Disposable.from","disposable","Disposable.dispose","Position.Min","Position.Max","Position.line","Position.character","Position.isAfter","Position.isAfterOrEqual","Position.isEqual","Position.compareTo","Position.translate","Position.with","Range.start","Range.end","Range.contains","Range.isEqual","Range.intersection","Range.union","Range.isSingleLine","Range.with","Selection.anchor","Selection.active","Selection.isReversed","TextEdit","TextEdit.constructor","TextEdit.replace","TextEdit.insert","TextEdit.delete","TextEdit.range","TextEdit.newText","Uri","Uri.constructor","WorkspaceEdit","WorkspaceEdit.constructor","WorkspaceEdit.replace","WorkspaceEdit.insert","WorkspaceEdit.delete","WorkspaceEdit.has","WorkspaceEdit.set","WorkspaceEdit.get","WorkspaceEdit.entries","WorkspaceEdit.size","DiagnosticSeverity","Location","Location.constructor","Diagnostic","Diagnostic.constructor","Hover","Hover.constructor","DocumentHighlightKind","DocumentHighlight","DocumentHighlight.constructor","SymbolKind","SymbolInformation","SymbolInformation.constructor","CodeLens","CodeLens.constructor","CodeLens.isResolved","ParameterInformation","ParameterInformation.constructor","SignatureInformation","SignatureInformation.constructor","SignatureHelp","SignatureHelp.constructor","CompletionItemKind","CompletionItem","CompletionItem.constructor","ViewColumn","StatusBarAlignment","pluginHostTypes_1","event_2","FileSystemWatcher","FileSystemWatcher.constructor","FileSystemWatcher.ignoreCreateEvents","FileSystemWatcher.ignoreChangeEvents","FileSystemWatcher.ignoreDeleteEvents","FileSystemWatcher.dispose","FileSystemWatcher.onDidCreate","FileSystemWatcher.onDidChange","FileSystemWatcher.onDidDelete","PluginHostFileSystemEventService","PluginHostFileSystemEventService.constructor","PluginHostFileSystemEventService.createFileSystemWatcher","PluginHostFileSystemEventService._onFileEvent","MainThreadFileSystemEventService","MainThreadFileSystemEventService.constructor","toSelection","fromSelection","fromRange","toRange","toPosition","fromPosition","fromDiagnosticSeverity","toDiagnosticSeverty","fromViewColumn","fromFormattedString","toFormattedString","isMarkedStringArr","fromMarkedStringOrMarkedStringArr","isRangeWithMessage","isRangeWithMessageArr","fromRangeOrRangeWithMessage","ranges","fromSymbolInformation","info","toSymbolInformation","bearing","toLocation","reference","fromHover","hover","toHover","toDocumentHighlight","occurrence","edit","SymbolKind.from","SymbolKind.to","SymbolInformation.fromOutlineEntry","SymbolInformation.toOutlineEntry","Suggest","container","suggestion","SignatureHelp.from","SignatureHelp.to","Command","command","typeConverters","ExtHostApiCommands","ExtHostApiCommands.constructor","ExtHostApiCommands._register","ExtHostApiCommands._executeWorkspaceSymbolProvider","ExtHostApiCommands._executeDefinitionProvider","ExtHostApiCommands._executeHoverProvider","ExtHostApiCommands._executeDocumentHighlights","ExtHostApiCommands._executeReferenceProvider","ExtHostApiCommands._executeDocumentRenameProvider","ExtHostApiCommands._executeSignatureHelpProvider","ExtHostApiCommands._executeCompletionItemProvider","ExtHostApiCommands._executeDocumentSymbolProvider","ExtHostApiCommands._executeCodeActionProvider","ExtHostApiCommands._executeCodeLensProvider","ExtHostApiCommands._executeFormatDocumentProvider","ExtHostApiCommands._executeFormatRangeProvider","ExtHostApiCommands._executeFormatOnTypeProvider","marshalling_1","OneWayMarshalling","OneWayMarshalling.canDeserialize","OneWayMarshalling.deserialize","RangeMarshalling","RangeMarshalling.constructor","RangeMarshalling.canSerialize","RangeMarshalling.serialize","PositionMarshalling","PositionMarshalling.constructor","PositionMarshalling.canSerialize","PositionMarshalling.serialize","LocationMarshalling","LocationMarshalling.constructor","LocationMarshalling.canSerialize","LocationMarshalling.serialize","StatusbarAlignment","StatusbarItemDescriptor","StatusbarItemDescriptor.constructor","StatusbarRegistry","StatusbarRegistry.constructor","StatusbarRegistry.items","StatusbarRegistry.registerStatusbarItem","Statusbar","getUntitledOrFileResource","supportDiff","asFileEditorInput","EditorInput","EditorInput.constructor","EditorInput.getName","EditorInput.getDescription","EditorInput.getStatus","EditorInput.getPreferredEditorId","EditorInput.matches","EditorInput.dispose","EditorInput.isDisposed","BaseDiffEditorInput","BaseDiffEditorInput.constructor","BaseDiffEditorInput.originalInput","BaseDiffEditorInput.modifiedInput","BaseDiffEditorInput.getOriginalInput","BaseDiffEditorInput.getModifiedInput","EditorModel","EditorModel.constructor","EditorModel.load","EditorModel.isResolved","EditorModel.dispose","EditorOptions","EditorOptions.create","EditorOptions.matches","TextEditorOptions","TextEditorOptions.constructor","TextEditorOptions.from","TextEditorOptions.create","TextEditorOptions.hasOptionsDefined","TextEditorOptions.selection","TextEditorOptions.viewState","TextEditorOptions.apply","TextEditorOptions.matches","TextDiffEditorOptions","TextDiffEditorOptions.constructor","TextDiffEditorOptions.create","EncodingMode","editorCommon_1","BaseTextEditorModel","BaseTextEditorModel.constructor","BaseTextEditorModel.textEditorModel","BaseTextEditorModel.createTextEditorModel","BaseTextEditorModel.getFirstLineText","BaseTextEditorModel.getOrCreateMode","BaseTextEditorModel.updateTextEditorModel","BaseTextEditorModel.getValue","BaseTextEditorModel.dispose","BaseTextEditorModel.isResolved","textEditorModel_1","StringEditorModel","StringEditorModel.constructor","StringEditorModel.getValue","StringEditorModel.setValue","StringEditorModel.append","StringEditorModel.clearValue","StringEditorModel.trim","StringEditorModel.getMime","StringEditorModel.load","OptionsChangeEvent","OptionsChangeEvent.constructor","CommonEvents","EditorEvent","EditorEvent.constructor","EditorEvent.prevent","EditorEvent.isPrevented","EditorInputEvent","EditorInputEvent.constructor","TextEditorSelectionEvent","TextEditorSelectionEvent.constructor","CommandEvent","CommandEvent.constructor","ViewletEvent","ViewletEvent.constructor","ResourceEvent","ResourceEvent.constructor","UntitledEditorEvent","UntitledEditorEvent.constructor","stringEditorModel_1","UntitledEditorModel","UntitledEditorModel.constructor","UntitledEditorModel.registerListeners","UntitledEditorModel.onConfigurationChange","UntitledEditorModel.getValue","UntitledEditorModel.getModeId","UntitledEditorModel.getEncoding","UntitledEditorModel.setEncoding","UntitledEditorModel.isDirty","UntitledEditorModel.load","UntitledEditorModel.onModelContentChanged","UntitledEditorModel.dispose","mime_1","labels","untitledEditorModel_1","UntitledEditorInput","UntitledEditorInput.constructor","UntitledEditorInput.getId","UntitledEditorInput.getResource","UntitledEditorInput.getName","UntitledEditorInput.getDescription","UntitledEditorInput.isDirty","UntitledEditorInput.getStatus","UntitledEditorInput.suggestFileName","UntitledEditorInput.getMime","UntitledEditorInput.getEncoding","UntitledEditorInput.setEncoding","UntitledEditorInput.resolve","UntitledEditorInput.createModel","UntitledEditorInput.matches","UntitledEditorInput.dispose","pfs","pluginVersionValidator_1","MANIFEST_FILE","PluginScanner","PluginScanner.scanPlugin","PluginScanner.scanPlugins","PluginScanner.scanOneOrMultiplePlugins","HttpProxyAgent","HttpsProxyAgent","getAgent","rawRequestURL","proxyURL","strictSSL","getSystemProxyURI","requestURL","getSystemProxyAgent","getProxyAgent","eventSource_1","UserSettings","UserSettings.constructor","UserSettings.getValue","UserSettings.onChange","UserSettings.doGetValue","UserSettings.registerWatchers","UserSettings.onSettingsFileChange","UserSettings.loadSync","UserSettings.doLoadSync","UserSettings.doLoadSettingsSync","UserSettings.setNode","UserSettings.doLoadKeybindingsSync","UserSettings.dispose","IExtensionsService","IGalleryService","StatType","FileStat","FileStat.constructor","FileStat.getId","FileStat.create","FileStat.mergeLocalWithDisk","FileStat.clone","FileStat.addChild","FileStat.hasChild","FileStat.removeChild","FileStat.move","FileStat.updateResource","FileStat.rename","FileStat.find","FileStat.fileResourceEquals","NewStatPlaceholder","NewStatPlaceholder.constructor","NewStatPlaceholder.destroy","NewStatPlaceholder.getId","NewStatPlaceholder.clone","NewStatPlaceholder.addChild","NewStatPlaceholder.hasChild","NewStatPlaceholder.removeChild","NewStatPlaceholder.move","NewStatPlaceholder.rename","NewStatPlaceholder.find","NewStatPlaceholder.addNewStatPlaceholder","explorerViewModel_1","asFileResource","VIEWLET_ID","FILE_EDITOR_INPUT_ID","TEXT_FILE_EDITOR_ID","BINARY_FILE_EDITOR_ID","WORKING_FILES_MODEL_ENTRY_CLASS_ID","FileEditorInput","FileEditorInput.constructor","FILE_DIRTY","FILE_SAVING","FILE_SAVE_ERROR","FILE_SAVED","FILE_REVERTED","LocalFileChangeEvent","LocalFileChangeEvent.constructor","LocalFileChangeEvent.getBefore","LocalFileChangeEvent.getAfter","LocalFileChangeEvent.gotAdded","LocalFileChangeEvent.gotMoved","LocalFileChangeEvent.gotUpdated","LocalFileChangeEvent.gotDeleted","TextFileChangeEvent","TextFileChangeEvent.constructor","TextFileChangeEvent.model","TextFileChangeEvent.setAutoSaved","TextFileChangeEvent.isAutoSaved","TEXT_FILE_SERVICE_ID","ConfirmResult","ITextFileService","OUTPUT_MIME","OUTPUT_MODE_ID","OUTPUT_EDITOR_INPUT_ID","DEFAULT_OUTPUT_CHANNEL","OutputChannels","OUTPUT_SERVICE_ID","IOutputService","OutputChannelRegistry","OutputChannelRegistry.constructor","OutputChannelRegistry.registerChannel","OutputChannelRegistry.getChannels","getNavigateToItems","query","NavigateTypesSupportRegistry","NavigateTypesSupportRegistry.register","NavigateTypesSupportRegistry.register.dispose","NavigateTypesSupportRegistry.all","EditorArrangement","IWorkbenchEditorService","output_1","editorService_1","TypeConverters","ExtHostOutputChannel","ExtHostOutputChannel.constructor","ExtHostOutputChannel.name","ExtHostOutputChannel.dispose","ExtHostOutputChannel.append","ExtHostOutputChannel.appendLine","ExtHostOutputChannel.clear","ExtHostOutputChannel.show","ExtHostOutputChannel.hide","ExtHostOutputService","ExtHostOutputService.constructor","ExtHostOutputService.createOutputChannel","MainThreadOutputService","MainThreadOutputService.constructor","MainThreadOutputService.append","MainThreadOutputService.clear","MainThreadOutputService.reveal","MainThreadOutputService.close","search_1","bulkEdit_1","pluginHostTypeConverters_1","PluginHostWorkspace","PluginHostWorkspace.constructor","PluginHostWorkspace.getPath","PluginHostWorkspace.getRelativePath","PluginHostWorkspace.findFiles","PluginHostWorkspace.saveAll","PluginHostWorkspace.appyEdit","MainThreadWorkspace","MainThreadWorkspace.constructor","MainThreadWorkspace.findFiles","MainThreadWorkspace.saveAll","MainThreadWorkspace.applyWorkspaceEdit","IQuickOpenService","quickOpenService_1","PluginHostQuickOpen","PluginHostQuickOpen.constructor","PluginHostQuickOpen.show","PluginHostQuickOpen.input","MainThreadQuickOpen","MainThreadQuickOpen.constructor","MainThreadQuickOpen._show","MainThreadQuickOpen._setItems","MainThreadQuickOpen._setError","MainThreadQuickOpen._input","IStatusbarService","statusbarService_1","statusbar_1","PluginHostStatusBarEntry","PluginHostStatusBarEntry.constructor","PluginHostStatusBarEntry.id","PluginHostStatusBarEntry.alignment","PluginHostStatusBarEntry.priority","PluginHostStatusBarEntry.text","PluginHostStatusBarEntry.tooltip","PluginHostStatusBarEntry.color","PluginHostStatusBarEntry.command","PluginHostStatusBarEntry.show","PluginHostStatusBarEntry.hide","PluginHostStatusBarEntry.update","PluginHostStatusBarEntry.dispose","StatusBarMessage","StatusBarMessage.constructor","StatusBarMessage.dispose","StatusBarMessage.setMessage","StatusBarMessage._update","PluginHostStatusBar","PluginHostStatusBar.constructor","PluginHostStatusBar.createStatusBarEntry","PluginHostStatusBar.setStatusBarMessage","MainThreadStatusBar","MainThreadStatusBar.constructor","MainThreadStatusBar.setEntry","MainThreadStatusBar.dispose","untitledEditorInput_1","IUntitledEditorService","UntitledEditorService","UntitledEditorService.constructor","UntitledEditorService.setInstantiationService","UntitledEditorService.get","UntitledEditorService.getAll","UntitledEditorService.isDirty","UntitledEditorService.getDirty","UntitledEditorService.createOrGet","UntitledEditorService.doCreate","UntitledEditorService.resourceToUntitled","UntitledEditorService.hasAssociatedFilePath","prefixSumComputer_1","textModelWithTokensHelpers_1","files_2","untitledEditorService_1","setWordDefinitionFor","wordDefinition","getWordDefinitionFor","_modeId2WordDefinition","PluginHostModelService","PluginHostModelService.constructor","PluginHostModelService.getDocuments","PluginHostModelService.getDocument","PluginHostModelService.openDocument","PluginHostModelService._acceptModelAdd","PluginHostModelService._acceptModelModeChanged","PluginHostModelService._acceptModelSaved","PluginHostModelService._acceptModelDirty","PluginHostModelService._acceptModelReverted","PluginHostModelService._acceptModelRemoved","PluginHostModelService._acceptModelChanged","BaseTextDocument","BaseTextDocument.constructor","BaseTextDocument.dispose","BaseTextDocument.uri","BaseTextDocument.fileName","BaseTextDocument.isUntitled","BaseTextDocument.languageId","BaseTextDocument.version","BaseTextDocument.isDirty","BaseTextDocument.save","BaseTextDocument.getText","BaseTextDocument._getTextInRange","BaseTextDocument.lineCount","BaseTextDocument.lineAt","BaseTextDocument.offsetAt","BaseTextDocument.positionAt","BaseTextDocument._ensureLineStarts","BaseTextDocument.validateRange","BaseTextDocument.validatePosition","BaseTextDocument.getWordRangeAtPosition","PluginHostDocument","PluginHostDocument.constructor","PluginHostDocument.save","PluginHostDocument._acceptLanguageId","PluginHostDocument._acceptIsDirty","PluginHostDocument._acceptEvents","PluginHostDocument._setLineText","PluginHostDocument._acceptDeleteRange","PluginHostDocument._acceptInsertText","MainThreadDocuments","MainThreadDocuments.constructor","MainThreadDocuments.dispose","MainThreadDocuments._onModelAdded","MainThreadDocuments._onModelModeChanged","MainThreadDocuments._onModelRemoved","MainThreadDocuments._onModelEvents","MainThreadDocuments._trySaveDocument","MainThreadDocuments._tryOpenDocument","MainThreadDocuments._handleFileScheme","MainThreadDocuments._handleUnititledScheme","pluginHostDocuments_1","mainThreadEditors_1","alt","illegalArg","deprecated","warn","originalMethod","PluginHostEditors","PluginHostEditors.constructor","PluginHostEditors.getActiveTextEditor","PluginHostEditors.getVisibleTextEditors","PluginHostEditors.onDidChangeActiveTextEditor","PluginHostEditors.showTextDocument","PluginHostEditors.createTextEditorDecorationType","PluginHostEditors._acceptTextEditorAdd","PluginHostEditors._acceptOptionsChanged","PluginHostEditors._acceptSelectionsChanged","PluginHostEditors._acceptActiveEditorAndVisibleEditors","PluginHostEditors._acceptTextEditorRemove","TextEditorDecorationType","TextEditorDecorationType.constructor","TextEditorDecorationType.dispose","TextEditorEdit","TextEditorEdit.constructor","TextEditorEdit.finalize","TextEditorEdit.replace","TextEditorEdit.insert","TextEditorEdit.delete","PluginHostTextEditor","PluginHostTextEditor.constructor","PluginHostTextEditor.dispose","PluginHostTextEditor.show","PluginHostTextEditor.hide","PluginHostTextEditor.document","PluginHostTextEditor.options","PluginHostTextEditor._acceptOptions","PluginHostTextEditor.selection","PluginHostTextEditor.selections","PluginHostTextEditor.setDecorations","PluginHostTextEditor.revealRange","PluginHostTextEditor._trySetSelection","PluginHostTextEditor._acceptSelections","PluginHostTextEditor.edit","PluginHostTextEditor._applyEdit","PluginHostTextEditor._runOnProxy","MainThreadEditors","MainThreadEditors.constructor","MainThreadEditors.dispose","MainThreadEditors._onTextEditorAdd","MainThreadEditors._onTextEditorRemove","MainThreadEditors._updateActiveAndVisibleTextEditors","MainThreadEditors._findActiveTextEditorId","MainThreadEditors._tryShowTextDocument","MainThreadEditors._tryShowTextDocument.contd","MainThreadEditors._tryShowEditor","MainThreadEditors._tryHideEditor","MainThreadEditors._trySetSelections","MainThreadEditors._trySetDecorations","MainThreadEditors._tryRevealRange","MainThreadEditors._trySetOptions","MainThreadEditors._tryApplyEdits","MainThreadEditors._registerTextEditorDecorationType","MainThreadEditors._removeTextEditorDecorationType","keybindingService_1","pluginHostEditors_1","_generateMarkdown","PluginHostCommands","PluginHostCommands.constructor","PluginHostCommands.registerCommand","PluginHostCommands.registerTextEditorCommand","PluginHostCommands.executeCommand","PluginHostCommands.$executeContributedCommand","PluginHostCommands.getCommands","PluginHostCommands.$getContributedCommandHandlerDescriptions","MainThreadCommands","MainThreadCommands.constructor","MainThreadCommands.$registerCommand","MainThreadCommands.$executeCommand","MainThreadCommands.$getCommands","MainThreadCommands.$getCommandHandlerDescriptions","getRemotable","$getCommandHandlerDescriptions","builtinExtension","pluginHostCommands_1","goToDeclaration_1","hover_1","wordHighlighter_1","referenceSearch_1","quickFix_1","quickOpen_1","rename_1","format_1","codelens_1","parameterHints_1","suggest_1","isThenable","asWinJsPromise","OutlineAdapter","OutlineAdapter.constructor","OutlineAdapter.getOutline","CodeLensAdapter","CodeLensAdapter.constructor","CodeLensAdapter.findCodeLensSymbols","CodeLensAdapter.resolveCodeLensSymbol","DeclarationAdapter","DeclarationAdapter.constructor","DeclarationAdapter.canFindDeclaration","DeclarationAdapter.findDeclaration","DeclarationAdapter._convertLocation","ExtraInfoAdapter","ExtraInfoAdapter.constructor","ExtraInfoAdapter.computeInfo","OccurrencesAdapter","OccurrencesAdapter.constructor","OccurrencesAdapter.findOccurrences","OccurrencesAdapter._convertDocumentHighlight","ReferenceAdapter","ReferenceAdapter.constructor","ReferenceAdapter.canFindReferences","ReferenceAdapter.findReferences","ReferenceAdapter._convertLocation","QuickFixAdapter","QuickFixAdapter.constructor","QuickFixAdapter.getQuickFixes","QuickFixAdapter.runQuickFixAction","DocumentFormattingAdapter","DocumentFormattingAdapter.constructor","DocumentFormattingAdapter.formatDocument","RangeFormattingAdapter","RangeFormattingAdapter.constructor","RangeFormattingAdapter.formatRange","OnTypeFormattingAdapter","OnTypeFormattingAdapter.constructor","OnTypeFormattingAdapter.formatAfterKeystroke","NavigateTypeAdapter","NavigateTypeAdapter.constructor","NavigateTypeAdapter.getNavigateToItems","RenameAdapter","RenameAdapter.constructor","RenameAdapter.rename","SuggestAdapter","SuggestAdapter.constructor","SuggestAdapter.suggest","SuggestAdapter.getSuggestionDetails","SuggestAdapter.getFilter","SuggestAdapter.getTriggerCharacters","SuggestAdapter.shouldShowEmptySuggestionList","SuggestAdapter.shouldAutotriggerSuggest","ParameterHintsAdapter","ParameterHintsAdapter.constructor","ParameterHintsAdapter.getParameterHints","ParameterHintsAdapter.getParameterHintsTriggerCharacters","ParameterHintsAdapter.shouldTriggerParameterHints","ExtHostLanguageFeatures","ExtHostLanguageFeatures.constructor","ExtHostLanguageFeatures._createDisposable","ExtHostLanguageFeatures._nextHandle","ExtHostLanguageFeatures._withAdapter","ExtHostLanguageFeatures.registerDocumentSymbolProvider","ExtHostLanguageFeatures.$getOutline","ExtHostLanguageFeatures.registerCodeLensProvider","ExtHostLanguageFeatures.$findCodeLensSymbols","ExtHostLanguageFeatures.$resolveCodeLensSymbol","ExtHostLanguageFeatures.registerDefinitionProvider","ExtHostLanguageFeatures.$findDeclaration","ExtHostLanguageFeatures.registerHoverProvider","ExtHostLanguageFeatures.$computeInfo","ExtHostLanguageFeatures.registerDocumentHighlightProvider","ExtHostLanguageFeatures.$findOccurrences","ExtHostLanguageFeatures.registerReferenceProvider","ExtHostLanguageFeatures.$findReferences","ExtHostLanguageFeatures.registerCodeActionProvider","ExtHostLanguageFeatures.$getQuickFixes","ExtHostLanguageFeatures.$runQuickFixAction","ExtHostLanguageFeatures.registerDocumentFormattingEditProvider","ExtHostLanguageFeatures.$formatDocument","ExtHostLanguageFeatures.registerDocumentRangeFormattingEditProvider","ExtHostLanguageFeatures.$formatRange","ExtHostLanguageFeatures.registerOnTypeFormattingEditProvider","ExtHostLanguageFeatures.$formatAfterKeystroke","ExtHostLanguageFeatures.registerWorkspaceSymbolProvider","ExtHostLanguageFeatures.$getNavigateToItems","ExtHostLanguageFeatures.registerRenameProvider","ExtHostLanguageFeatures.$rename","ExtHostLanguageFeatures.registerCompletionItemProvider","ExtHostLanguageFeatures.$suggest","ExtHostLanguageFeatures.$getSuggestionDetails","ExtHostLanguageFeatures.registerSignatureHelpProvider","ExtHostLanguageFeatures.$getParameterHints","MainThreadLanguageFeatures","MainThreadLanguageFeatures.constructor","MainThreadLanguageFeatures.$unregister","MainThreadLanguageFeatures.$registerOutlineSupport","MainThreadLanguageFeatures.$registerCodeLensSupport","MainThreadLanguageFeatures.$registerDeclaractionSupport","MainThreadLanguageFeatures.$registerDeclaractionSupport.canFindDeclaration","MainThreadLanguageFeatures.$registerExtraInfoSupport","MainThreadLanguageFeatures.$registerOccurrencesSupport","MainThreadLanguageFeatures.$registerReferenceSupport","MainThreadLanguageFeatures.$registerReferenceSupport.canFindReferences","MainThreadLanguageFeatures.$registerQuickFixSupport","MainThreadLanguageFeatures.$registerDocumentFormattingSupport","MainThreadLanguageFeatures.$registerRangeFormattingSupport","MainThreadLanguageFeatures.$registerOnTypeFormattingSupport","MainThreadLanguageFeatures.$registerNavigateTypeSupport","MainThreadLanguageFeatures.$registerRenameSupport","MainThreadLanguageFeatures.$registerSuggestSupport","MainThreadLanguageFeatures.$registerSuggestSupport.getFilter","MainThreadLanguageFeatures.$registerSuggestSupport.getTriggerCharacters","MainThreadLanguageFeatures.$registerSuggestSupport.shouldShowEmptySuggestionList","MainThreadLanguageFeatures.$registerSuggestSupport.shouldAutotriggerSuggest","MainThreadLanguageFeatures.$registerParameterHintsSupport","MainThreadLanguageFeatures.$registerParameterHintsSupport.getParameterHintsTriggerCharacters","MainThreadLanguageFeatures.$registerParameterHintsSupport.shouldTriggerParameterHints","pluginHostFileSystemEventService_1","pluginHostConfiguration_1","pluginHostDiagnostics_1","pluginHostWorkspace_1","pluginHostQuickOpen_1","pluginHostStatusBar_1","extHostOutputService_1","pluginHostMessageService_1","pluginHostTelemetry_1","extHostLanguages_1","extHostLanguageFeatures_1","extHostApiCommands_1","extHostTypes","defineAPI","impl","defineAPI.load","PluginHostAPIImplementation","PluginHostAPIImplementation.constructor","PluginHostAPIImplementation.constructor.registerCommand","PluginHostAPIImplementation.constructor.registerTextEditorCommand","PluginHostAPIImplementation.constructor.executeCommand","PluginHostAPIImplementation.constructor.getCommands","PluginHostAPIImplementation.constructor.activeTextEditor","PluginHostAPIImplementation.constructor.visibleTextEditors","PluginHostAPIImplementation.constructor.showTextDocument","PluginHostAPIImplementation.constructor.createTextEditorDecorationType","PluginHostAPIImplementation.constructor.createStatusBarItem","PluginHostAPIImplementation.constructor.setStatusBarMessage","PluginHostAPIImplementation.constructor.createOutputChannel","PluginHostAPIImplementation.constructor.rootPath","PluginHostAPIImplementation.constructor.applyEdit","PluginHostAPIImplementation.constructor.textDocuments","PluginHostAPIImplementation.constructor.openTextDocument","PluginHostAPIImplementation.constructor.createDiagnosticCollection","PluginHostAPIImplementation.constructor.getLanguages","PluginHostAPIImplementation.constructor.match","PluginHostAPIImplementation.constructor.registerCodeActionsProvider","PluginHostAPIImplementation.constructor.registerCodeLensProvider","PluginHostAPIImplementation.constructor.registerDefinitionProvider","PluginHostAPIImplementation.constructor.registerHoverProvider","PluginHostAPIImplementation.constructor.registerDocumentHighlightProvider","PluginHostAPIImplementation.constructor.registerReferenceProvider","PluginHostAPIImplementation.constructor.registerRenameProvider","PluginHostAPIImplementation.constructor.registerDocumentSymbolProvider","PluginHostAPIImplementation.constructor.registerWorkspaceSymbolProvider","PluginHostAPIImplementation.constructor.registerDocumentFormattingEditProvider","PluginHostAPIImplementation.constructor.registerDocumentRangeFormattingEditProvider","PluginHostAPIImplementation.constructor.registerOnTypeFormattingEditProvider","PluginHostAPIImplementation.constructor.registerSignatureHelpProvider","PluginHostAPIImplementation.constructor.registerCompletionItemProvider","PluginHostAPIImplementation.constructor.getExtension","PluginHostAPIImplementation.constructor.all","PluginHostAPIImplementation.generateDisposeToken","PluginHostAPIImplementation._disposableFromToken","PluginHostAPIImplementation._setLanguageConfiguration","PluginHostAPIImplementation.Modes_CommentsSupport_register","PluginHostAPIImplementation.Modes_TokenTypeClassificationSupport_register","PluginHostAPIImplementation.Modes_ElectricCharacterSupport_register","PluginHostAPIImplementation.Modes_CharacterPairSupport_register","PluginHostAPIImplementation.Modes_OnEnterSupport_register","Extension","Extension.constructor","Extension.isActive","Extension.exports","Extension.activate","MainProcessVSCodeAPIHelper","MainProcessVSCodeAPIHelper.constructor","MainProcessVSCodeAPIHelper.onUnexpectedPluginHostError","MainProcessVSCodeAPIHelper.disposeByToken","MainProcessVSCodeAPIHelper.Modes_CommentsSupport_register","MainProcessVSCodeAPIHelper.Modes_TokenTypeClassificationSupport_register","MainProcessVSCodeAPIHelper.Modes_ElectricCharacterSupport_register","MainProcessVSCodeAPIHelper.Modes_CharacterPairSupport_register","MainProcessVSCodeAPIHelper.Modes_OnEnterSupport_register","baseWorkspaceContextService_1","WorkspaceContextService","WorkspaceContextService.constructor","WorkspaceContextService.updateOptions","WorkspaceContextService.isAutoSaveEnabled","pfs_1","yauzl_1","modeFromEntry","entry","extractEntry","zipfile","targetPath","extractZip","extract","zipPath","read","os_1","zip_1","extensions_1","proxy_1","contextService_1","userSettings_1","parseManifest","validate","extension","createExtension","manifest","galleryInformation","ExtensionsService","ExtensionsService.constructor","ExtensionsService.install","ExtensionsService.installFromGallery","ExtensionsService.installFromZip","ExtensionsService.uninstall","ExtensionsService.getInstalled","ExtensionsService.getDeprecated","ExtensionsService.getAllInstalled","ExtensionsService.getInstallationPath","ExtensionsService.removeDeprecatedExtensions","pluginHost_api_impl_1","nativePluginService_1","pluginHostThreadService_1","baseRequestService_1","modeServiceImpl_1","extensionPoints_1","extensionsService_1","exit","createServices","remoteCom","initData","sharedProcessClient","DIRNAME","toUrl","fsPath","BASE_PATH","BUILTIN_PLUGINS_PATH","nativeExit","PluginHostMain","PluginHostMain.constructor","PluginHostMain.start","PluginHostMain.terminate","PluginHostMain.readPlugins","PluginHostMain.scanPlugins","PluginHostMain.handleEagerPlugins","PluginHostMain.handleWorkspaceContainsEagerPlugins","PluginHostMain.handlePluginTests","PluginHostMain.gracefulExit","pluginHostMain_1","service_net_1","ipcRemoteCom_1","connectToRenderer","reason","kill","parentPid","onTerminate","stats","total","prev","connectToSharedProcess","renderer","instantiationService","pluginHostMain","createInstance","terminate"],"mappings":"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AAAA,IACAA,EAAAA,EAAAA,EAAAA,KAAAA,IACAA,EAAAA,EAAAA,EAAAA,KAAAA,IACAA,EAAAA,EAAAA,EAAAA,KAAAA,IACAA,EAAAA,EAAAA,EAAAA,KAAAA,IACAA,EAAAA,EAAAA,EAAAA,KAAAA,IACAA,EAAAA,EAAAA,EAAAA,KAAAA,IACAA,EAAAA,EAAAA,EAAAA,KAAAA,IACAA,EAAAA,EAAAA,EAAAA,KAAAA,IACAA,EAAAA,EAAAA,EAAAA,KAAAA,IACAA,EAAAA,EAAAA,EAAAA,KAAAA,IACAA,EAAAA,EAAAA,EAAAA,KAAAA,IACAA,EAAAA,EAAAA,EAAAA,KAAAA,IACAA,EAAAA,EAAAA,EAAAA,KAAAA,IACAA,EAAAA,EAAAA,EAAAA,KAAAA,IACAA,EAAAA,EAAAA,EAAAA,KAAAA,IACAA,EAAAA,EAAAA,EAAAA,KAAAA,IACAA,EAAAA,EAAAA,EAAAA,KAAAA,IAEAA,EAAAA,EAAAA,EAAAA,IAAAA,IACAA,EAAAA,EAAAA,EAAAA,IAAAA,IACAA,EAAAA,EAAAA,EAAAA,IAAAA,IACAA,EAAAA,EAAAA,EAAAA,IAAAA,IACAA,EAAAA,EAAAA,EAAAA,IAAAA,IACAA,EAAAA,EAAAA,EAAAA,IAAAA,IACAA,EAAAA,EAAAA,EAAAA,IAAAA,IACAA,EAAAA,EAAAA,EAAAA,IAAAA,IACAA,EAAAA,EAAAA,EAAAA,IAAAA,IACAA,EAAAA,EAAAA,EAAAA,IAAAA,IACAA,EAAAA,EAAAA,EAAAA,IAAAA,IACAA,EAAAA,EAAAA,EAAAA,IAAAA,IACAA,EAAAA,EAAAA,EAAAA,IAAAA,IACAA,EAAAA,EAAAA,EAAAA,IAAAA,IACAA,EAAAA,EAAAA,EAAAA,IAAAA,IACAA,EAAAA,EAAAA,EAAAA,IAAAA,IACAA,EAAAA,EAAAA,EAAAA,IAAAA,IACAA,EAAAA,EAAAA,EAAAA,IAAAA,IACAA,EAAAA,EAAAA,EAAAA,IAAAA,IACAA,EAAAA,EAAAA,EAAAA,IAAAA,IACAA,EAAAA,EAAAA,EAAAA,IAAAA,IACAA,EAAAA,EAAAA,EAAAA,IAAAA,IACAA,EAAAA,EAAAA,EAAAA,I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","file":"vs/workbench/node/pluginHostProcess.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\n/**\n * Returns the last element of an array.\n * @param array The array.\n * @param n Which element from the end (default ist zero).\n */\nexport function tail<T>(array: T[], n: number = 0): T {\n\treturn array[array.length - (1 + n)];\n}\n\n/**\n * Iterates the provided array and allows to remove\n * elements while iterating.\n */\nexport function forEach<T>(array: T[], callback: (element: T, remove: Function) => void): void {\n\tfor (var i = 0, len = array.length; i < len; i++) {\n\t\tcallback(array[i], function() {\n\t\t\tarray.splice(i, 1);\n\t\t\ti--; len--;\n\t\t});\n\t}\n}\n\nexport function equals<T>(one: T[], other: T[], itemEquals: (a: T, b: T) => boolean): boolean {\n\tif (one.length !== other.length) {\n\t\treturn false;\n\t}\n\n\tfor (var i = 0, len = one.length; i < len; i++) {\n\t\tif (!itemEquals(one[i], other[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * Returns a new array of the given length which is filled\n * with the given element.\n *\n * @param length The length of the array.\n * @param element The element that the array is filled with.\n */\nexport function fill<T>(length: number, element: T = null): T[] {\n\tvar result = new Array<T>(length);\n\twhile (length-- > 0) {\n\t\tresult.push(element);\n\t}\n\treturn result;\n}\n\nexport function binarySearch(array: any[], key: any, comparator: (op1: any, op2: any) => number): number {\n\tlet low = 0,\n\t\thigh = array.length - 1;\n\n\twhile (low <= high) {\n\t\tlet mid = ((low + high) / 2) | 0;\n\t\tlet comp = comparator(array[mid], key);\n\t\tif (comp < 0) {\n\t\t\tlow = mid + 1;\n\t\t} else if (comp > 0) {\n\t\t\thigh = mid - 1;\n\t\t} else {\n\t\t\treturn mid;\n\t\t}\n\t}\n\treturn -(low + 1);\n}\n\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\nexport function findFirst<T>(array: T[], p: (x: T) => boolean): number {\n\tvar low = 0, high = array.length;\n\tif (high === 0) {\n\t\treturn 0; // no children\n\t}\n\twhile (low < high) {\n\t\tvar mid = Math.floor((low + high) / 2);\n\t\tif (p(array[mid])) {\n\t\t\thigh = mid;\n\t\t} else {\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn low;\n}\n\nexport function merge<T>(arrays: T[][], hashFn?: (element: T) => string): T[] {\n\tvar result = new Array<T>();\n\tif (!hashFn) {\n\t\tfor (var i = 0, len = arrays.length; i < len; i++) {\n\t\t\tresult.push.apply(result, arrays[i]);\n\t\t}\n\t} else {\n\t\tvar map: { [k: string]: boolean } = {};\n\t\tfor (var i = 0; i < arrays.length; i++) {\n\t\t\tfor (var j = 0; j < arrays[i].length; j++) {\n\t\t\t\tvar element = arrays[i][j],\n\t\t\t\t\thash = hashFn(element);\n\n\t\t\t\tif (!map.hasOwnProperty(hash)) {\n\t\t\t\t\tmap[hash] = true;\n\t\t\t\t\tresult.push(element);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\n/**\n * @returns a new array with all undefined or null values removed. The original array is not modified at all.\n */\nexport function coalesce<T>(array: T[]): T[] {\n\tif (!array) {\n\t\treturn array;\n\t}\n\n\treturn array.filter(e => !!e);\n}\n\n/**\n * @returns true if the given item is contained in the array.\n */\nexport function contains<T>(array: T[], item: T): boolean {\n\treturn array.indexOf(item) >= 0;\n}\n\n/**\n * Swaps the elements in the array for the provided positions.\n */\nexport function swap(array: any[], pos1: number, pos2: number): void {\n\tvar element1 = array[pos1];\n\tvar element2 = array[pos2];\n\n\tarray[pos1] = element2;\n\tarray[pos2] = element1;\n}\n\n/**\n * Moves the element in the array for the provided positions.\n */\nexport function move(array: any[], from: number, to: number): void {\n\tarray.splice(to, 0, array.splice(from, 1)[0]);\n}\n\n/**\n * @returns {{false}} if the provided object is an array\n * \tand not empty.\n */\nexport function isFalsyOrEmpty(obj: any): boolean {\n\treturn !Array.isArray(obj) || (<Array<any>>obj).length === 0;\n}\n\nfunction tripleEqualityEquals<T>(a: T, b: T): boolean {\n\treturn a === b;\n}\n\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equalness by returning a unique string for each.\n */\nexport function distinct<T>(array: T[], keyFn?: (t: T) => string): T[] {\n\tif (!keyFn) {\n\t\treturn array.filter((element, position) => {\n\t\t\treturn array.indexOf(element) === position;\n\t\t});\n\t}\n\n\tvar seen: { [key: string]: boolean; } = {};\n\treturn array.filter((elem) => {\n\t\tvar key = keyFn(elem);\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\n\t\treturn true;\n\t});\n}\n\nexport function first<T>(array: T[], fn: (item: T) => boolean, notFoundValue: T = null): T {\n\tfor (var i = 0; i < array.length; i++) {\n\t\tvar element = array[i];\n\n\t\tif (fn(element)) {\n\t\t\treturn element;\n\t\t}\n\t}\n\n\treturn notFoundValue;\n}\n\nexport function repeat<T>(el: T, count: number): T[] {\n\tvar r: T[] = [];\n\n\tfor (var i = 0; i < count; i++) {\n\t\tr.push(el);\n\t}\n\n\treturn r;\n}\n\nexport function commonPrefixLength<T>(one: T[], other: T[], equals: (a: T, b: T) => boolean = (a, b) => a === b): number {\n\tvar result = 0;\n\n\tfor (var i = 0, len = Math.min(one.length, other.length); i < len && equals(one[i], other[i]); i++) {\n\t\tresult++;\n\t}\n\n\treturn result;\n}\n\nexport function flatten<T>(arr: T[][]): T[] {\n\treturn arr.reduce((r, v) => r.concat(v), []);\n}","/*!--------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/base/common/arrays\", [\"require\", \"exports\"], function (require, exports) {\r\n    /**\r\n     * Returns the last element of an array.\r\n     * @param array The array.\r\n     * @param n Which element from the end (default ist zero).\r\n     */\r\n    function tail(array, n) {\r\n        if (n === void 0) { n = 0; }\r\n        return array[array.length - (1 + n)];\r\n    }\r\n    exports.tail = tail;\r\n    /**\r\n     * Iterates the provided array and allows to remove\r\n     * elements while iterating.\r\n     */\r\n    function forEach(array, callback) {\r\n        for (var i = 0, len = array.length; i < len; i++) {\r\n            callback(array[i], function () {\r\n                array.splice(i, 1);\r\n                i--;\r\n                len--;\r\n            });\r\n        }\r\n    }\r\n    exports.forEach = forEach;\r\n    function equals(one, other, itemEquals) {\r\n        if (one.length !== other.length) {\r\n            return false;\r\n        }\r\n        for (var i = 0, len = one.length; i < len; i++) {\r\n            if (!itemEquals(one[i], other[i])) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    exports.equals = equals;\r\n    /**\r\n     * Returns a new array of the given length which is filled\r\n     * with the given element.\r\n     *\r\n     * @param length The length of the array.\r\n     * @param element The element that the array is filled with.\r\n     */\r\n    function fill(length, element) {\r\n        if (element === void 0) { element = null; }\r\n        var result = new Array(length);\r\n        while (length-- > 0) {\r\n            result.push(element);\r\n        }\r\n        return result;\r\n    }\r\n    exports.fill = fill;\r\n    function binarySearch(array, key, comparator) {\r\n        var low = 0, high = array.length - 1;\r\n        while (low <= high) {\r\n            var mid = ((low + high) / 2) | 0;\r\n            var comp = comparator(array[mid], key);\r\n            if (comp < 0) {\r\n                low = mid + 1;\r\n            }\r\n            else if (comp > 0) {\r\n                high = mid - 1;\r\n            }\r\n            else {\r\n                return mid;\r\n            }\r\n        }\r\n        return -(low + 1);\r\n    }\r\n    exports.binarySearch = binarySearch;\r\n    /**\r\n     * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\r\n     * are located before all elements where p(x) is true.\r\n     * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\r\n     */\r\n    function findFirst(array, p) {\r\n        var low = 0, high = array.length;\r\n        if (high === 0) {\r\n            return 0; // no children\r\n        }\r\n        while (low < high) {\r\n            var mid = Math.floor((low + high) / 2);\r\n            if (p(array[mid])) {\r\n                high = mid;\r\n            }\r\n            else {\r\n                low = mid + 1;\r\n            }\r\n        }\r\n        return low;\r\n    }\r\n    exports.findFirst = findFirst;\r\n    function merge(arrays, hashFn) {\r\n        var result = new Array();\r\n        if (!hashFn) {\r\n            for (var i = 0, len = arrays.length; i < len; i++) {\r\n                result.push.apply(result, arrays[i]);\r\n            }\r\n        }\r\n        else {\r\n            var map = {};\r\n            for (var i = 0; i < arrays.length; i++) {\r\n                for (var j = 0; j < arrays[i].length; j++) {\r\n                    var element = arrays[i][j], hash = hashFn(element);\r\n                    if (!map.hasOwnProperty(hash)) {\r\n                        map[hash] = true;\r\n                        result.push(element);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    exports.merge = merge;\r\n    /**\r\n     * @returns a new array with all undefined or null values removed. The original array is not modified at all.\r\n     */\r\n    function coalesce(array) {\r\n        if (!array) {\r\n            return array;\r\n        }\r\n        return array.filter(function (e) { return !!e; });\r\n    }\r\n    exports.coalesce = coalesce;\r\n    /**\r\n     * @returns true if the given item is contained in the array.\r\n     */\r\n    function contains(array, item) {\r\n        return array.indexOf(item) >= 0;\r\n    }\r\n    exports.contains = contains;\r\n    /**\r\n     * Swaps the elements in the array for the provided positions.\r\n     */\r\n    function swap(array, pos1, pos2) {\r\n        var element1 = array[pos1];\r\n        var element2 = array[pos2];\r\n        array[pos1] = element2;\r\n        array[pos2] = element1;\r\n    }\r\n    exports.swap = swap;\r\n    /**\r\n     * Moves the element in the array for the provided positions.\r\n     */\r\n    function move(array, from, to) {\r\n        array.splice(to, 0, array.splice(from, 1)[0]);\r\n    }\r\n    exports.move = move;\r\n    /**\r\n     * @returns {{false}} if the provided object is an array\r\n     * \tand not empty.\r\n     */\r\n    function isFalsyOrEmpty(obj) {\r\n        return !Array.isArray(obj) || obj.length === 0;\r\n    }\r\n    exports.isFalsyOrEmpty = isFalsyOrEmpty;\r\n    function tripleEqualityEquals(a, b) {\r\n        return a === b;\r\n    }\r\n    /**\r\n     * Removes duplicates from the given array. The optional keyFn allows to specify\r\n     * how elements are checked for equalness by returning a unique string for each.\r\n     */\r\n    function distinct(array, keyFn) {\r\n        if (!keyFn) {\r\n            return array.filter(function (element, position) {\r\n                return array.indexOf(element) === position;\r\n            });\r\n        }\r\n        var seen = {};\r\n        return array.filter(function (elem) {\r\n            var key = keyFn(elem);\r\n            if (seen[key]) {\r\n                return false;\r\n            }\r\n            seen[key] = true;\r\n            return true;\r\n        });\r\n    }\r\n    exports.distinct = distinct;\r\n    function first(array, fn, notFoundValue) {\r\n        if (notFoundValue === void 0) { notFoundValue = null; }\r\n        for (var i = 0; i < array.length; i++) {\r\n            var element = array[i];\r\n            if (fn(element)) {\r\n                return element;\r\n            }\r\n        }\r\n        return notFoundValue;\r\n    }\r\n    exports.first = first;\r\n    function repeat(el, count) {\r\n        var r = [];\r\n        for (var i = 0; i < count; i++) {\r\n            r.push(el);\r\n        }\r\n        return r;\r\n    }\r\n    exports.repeat = repeat;\r\n    function commonPrefixLength(one, other, equals) {\r\n        if (equals === void 0) { equals = function (a, b) { return a === b; }; }\r\n        var result = 0;\r\n        for (var i = 0, len = Math.min(one.length, other.length); i < len && equals(one[i], other[i]); i++) {\r\n            result++;\r\n        }\r\n        return result;\r\n    }\r\n    exports.commonPrefixLength = commonPrefixLength;\r\n    function flatten(arr) {\r\n        return arr.reduce(function (r, v) { return r.concat(v); }, []);\r\n    }\r\n    exports.flatten = flatten;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/base/common/assert\", [\"require\", \"exports\"], function (require, exports) {\r\n    /**\r\n     * Throws an error with the provided message if the provided value does not evaluate to a true Javascript value.\r\n     */\r\n    function ok(value, message) {\r\n        if (!value || value === null) {\r\n            throw new Error(message ? 'Assertion failed (' + message + ')' : 'Assertion Failed');\r\n        }\r\n    }\r\n    exports.ok = ok;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/base/common/collections\", [\"require\", \"exports\"], function (require, exports) {\r\n    function createStringDictionary() {\r\n        return Object.create(null);\r\n    }\r\n    exports.createStringDictionary = createStringDictionary;\r\n    function createNumberDictionary() {\r\n        return Object.create(null);\r\n    }\r\n    exports.createNumberDictionary = createNumberDictionary;\r\n    function lookup(from, what, alternate) {\r\n        if (alternate === void 0) { alternate = null; }\r\n        var key = String(what);\r\n        if (contains(from, key)) {\r\n            return from[key];\r\n        }\r\n        return alternate;\r\n    }\r\n    exports.lookup = lookup;\r\n    function lookupOrInsert(from, stringOrNumber, alternate) {\r\n        var key = String(stringOrNumber);\r\n        if (contains(from, key)) {\r\n            return from[key];\r\n        }\r\n        else {\r\n            if (typeof alternate === 'function') {\r\n                alternate = alternate();\r\n            }\r\n            from[key] = alternate;\r\n            return alternate;\r\n        }\r\n    }\r\n    exports.lookupOrInsert = lookupOrInsert;\r\n    function insert(into, data, hashFn) {\r\n        into[hashFn(data)] = data;\r\n    }\r\n    exports.insert = insert;\r\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\r\n    function contains(from, what) {\r\n        return hasOwnProperty.call(from, what);\r\n    }\r\n    exports.contains = contains;\r\n    function keys(from) {\r\n        return {\r\n            every: function (callback) {\r\n                for (var key in from) {\r\n                    if (hasOwnProperty.call(from, key)) {\r\n                        if (!callback(key)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                }\r\n                return true;\r\n            }\r\n        };\r\n    }\r\n    exports.keys = keys;\r\n    function values(from) {\r\n        var result = [];\r\n        for (var key in from) {\r\n            if (hasOwnProperty.call(from, key)) {\r\n                result.push(from[key]);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    exports.values = values;\r\n    function forEach(from, callback) {\r\n        for (var key in from) {\r\n            if (hasOwnProperty.call(from, key)) {\r\n                var result = callback({ key: key, value: from[key] }, function () {\r\n                    delete from[key];\r\n                });\r\n                if (result === false) {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    exports.forEach = forEach;\r\n    function remove(from, key) {\r\n        if (!hasOwnProperty.call(from, key)) {\r\n            return false;\r\n        }\r\n        delete from[key];\r\n        return true;\r\n    }\r\n    exports.remove = remove;\r\n    /**\r\n     * Groups the collection into a dictionary based on the provided\r\n     * group function.\r\n     */\r\n    function groupBy(data, groupFn) {\r\n        var result = createStringDictionary();\r\n        data.forEach(function (element) { return lookupOrInsert(result, groupFn(element), []).push(element); });\r\n        return result;\r\n    }\r\n    exports.groupBy = groupBy;\r\n    exports.EmptyIterable = {\r\n        every: function (callback) {\r\n            return true;\r\n        }\r\n    };\r\n    function combine(iterables) {\r\n        var len = iterables.length;\r\n        if (len === 0) {\r\n            return exports.EmptyIterable;\r\n        }\r\n        else if (len === 1) {\r\n            return iterables[0];\r\n        }\r\n        return {\r\n            every: function (callback) {\r\n                for (var i = 0; i < len; i++) {\r\n                    if (!iterables[i].every(callback)) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            }\r\n        };\r\n    }\r\n    exports.combine = combine;\r\n    function singleton(element) {\r\n        return {\r\n            every: function (callback) {\r\n                return callback(element);\r\n            }\r\n        };\r\n    }\r\n    exports.singleton = singleton;\r\n    function toArray(iterable) {\r\n        if (Array.isArray(iterable)) {\r\n            return iterable;\r\n        }\r\n        else {\r\n            var result = [];\r\n            iterable.every(function (e) {\r\n                result.push(e);\r\n                return true;\r\n            });\r\n            return result;\r\n        }\r\n    }\r\n    exports.toArray = toArray;\r\n    /**\r\n     * Limited size cache. Provided a certain cache size limit, it\r\n     * removes the older elements as new ones are inserted.\r\n     */\r\n    var LimitedSizeCache = (function () {\r\n        function LimitedSizeCache(size) {\r\n            this.size = size;\r\n            this.cache = Object.create(null);\r\n            this.order = [];\r\n        }\r\n        LimitedSizeCache.prototype.get = function (id) {\r\n            var result = this.cache[id];\r\n            return result && result.element;\r\n        };\r\n        LimitedSizeCache.prototype.put = function (id, element, onRemove) {\r\n            var existing = this.cache[id];\r\n            var row = { element: element, onRemove: onRemove };\r\n            this.cache[id] = row;\r\n            if (!existing) {\r\n                this.order.push(id);\r\n            }\r\n            this.swipe();\r\n        };\r\n        LimitedSizeCache.prototype.swipe = function () {\r\n            while (this.order.length > this.size) {\r\n                var id = this.order.shift();\r\n                var row = this.cache[id];\r\n                row.onRemove();\r\n                delete this.cache[id];\r\n            }\r\n        };\r\n        return LimitedSizeCache;\r\n    })();\r\n    exports.LimitedSizeCache = LimitedSizeCache;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\ndefine(\"vs/base/common/events\", [\"require\", \"exports\"], function (require, exports) {\r\n    var Event = (function () {\r\n        function Event(originalEvent) {\r\n            this.time = (new Date()).getTime();\r\n            this.originalEvent = originalEvent;\r\n            this.source = null;\r\n        }\r\n        return Event;\r\n    })();\r\n    exports.Event = Event;\r\n    var PropertyChangeEvent = (function (_super) {\r\n        __extends(PropertyChangeEvent, _super);\r\n        function PropertyChangeEvent(key, oldValue, newValue, originalEvent) {\r\n            _super.call(this, originalEvent);\r\n            this.key = key;\r\n            this.oldValue = oldValue;\r\n            this.newValue = newValue;\r\n        }\r\n        return PropertyChangeEvent;\r\n    })(Event);\r\n    exports.PropertyChangeEvent = PropertyChangeEvent;\r\n    var ViewerEvent = (function (_super) {\r\n        __extends(ViewerEvent, _super);\r\n        function ViewerEvent(element, originalEvent) {\r\n            _super.call(this, originalEvent);\r\n            this.element = element;\r\n        }\r\n        return ViewerEvent;\r\n    })(Event);\r\n    exports.ViewerEvent = ViewerEvent;\r\n    exports.EventType = {\r\n        PROPERTY_CHANGED: 'propertyChanged',\r\n        SELECTION: 'selection',\r\n        FOCUS: 'focus',\r\n        BLUR: 'blur',\r\n        HIGHLIGHT: 'highlight',\r\n        EXPAND: 'expand',\r\n        COLLAPSE: 'collapse',\r\n        TOGGLE: 'toggle',\r\n        CONTENTS_CHANGED: 'contentsChanged',\r\n        BEFORE_RUN: 'beforeRun',\r\n        RUN: 'run',\r\n        EDIT: 'edit',\r\n        SAVE: 'save',\r\n        CANCEL: 'cancel',\r\n        CHANGE: 'change',\r\n        DISPOSE: 'dispose',\r\n    };\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n// copied from TypeScript/src/compiler/core/hash.ts and adjusted to external module syntax\r\n'use strict';\r\ndefine(\"vs/base/common/hash\", [\"require\", \"exports\"], function (require, exports) {\r\n    function computeMurmur2StringHashCode(key) {\r\n        // 'm' and 'r' are mixing constants generated offline.\r\n        // They're not really 'magic', they just happen to work well.\r\n        var m = 0x5bd1e995;\r\n        var r = 24;\r\n        var start = 0;\r\n        var len = key.length;\r\n        var numberOfCharsLeft = len;\r\n        // Initialize the hash to a 'random' value.\r\n        var h = (0 ^ numberOfCharsLeft);\r\n        // Mix 4 bytes at a time into the hash.  NOTE: 4 bytes is two chars, so we iterate\r\n        // through the string two chars at a time.\r\n        var index = start;\r\n        while (numberOfCharsLeft >= 2) {\r\n            var c1 = key.charCodeAt(index);\r\n            var c2 = key.charCodeAt(index + 1);\r\n            var k = c1 | (c2 << 16);\r\n            k *= m;\r\n            k ^= k >> r;\r\n            k *= m;\r\n            h *= m;\r\n            h ^= k;\r\n            index += 2;\r\n            numberOfCharsLeft -= 2;\r\n        }\r\n        // Handle the last char (or 2 bytes) if they exist.  This happens if the original string had\r\n        // odd length.\r\n        if (numberOfCharsLeft === 1) {\r\n            h ^= key.charCodeAt(index);\r\n            h *= m;\r\n        }\r\n        // Do a few final mixes of the hash to ensure the last few bytes are well-incorporated.\r\n        h ^= h >> 13;\r\n        h *= m;\r\n        h ^= h >> 15;\r\n        return h;\r\n    }\r\n    exports.computeMurmur2StringHashCode = computeMurmur2StringHashCode;\r\n    function combine(value, currentHash) {\r\n        // Ensure we stay within 31 bits.\r\n        return (((currentHash << 5) + currentHash) + value) & 0x7FFFFFFF;\r\n    }\r\n    exports.combine = combine;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/base/common/lifecycle\", [\"require\", \"exports\"], function (require, exports) {\r\n    exports.empty = Object.freeze({\r\n        dispose: function () { }\r\n    });\r\n    function disposeAll(arr) {\r\n        for (var i = 0, len = arr.length; i < len; i++) {\r\n            if (arr[i]) {\r\n                arr[i].dispose();\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n    exports.disposeAll = disposeAll;\r\n    function combinedDispose() {\r\n        var disposables = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            disposables[_i - 0] = arguments[_i];\r\n        }\r\n        return {\r\n            dispose: function () { return disposeAll(disposables); }\r\n        };\r\n    }\r\n    exports.combinedDispose = combinedDispose;\r\n    function combinedDispose2(disposables) {\r\n        return {\r\n            dispose: function () { return disposeAll(disposables); }\r\n        };\r\n    }\r\n    exports.combinedDispose2 = combinedDispose2;\r\n    function fnToDisposable(fn) {\r\n        return {\r\n            dispose: function () { return fn(); }\r\n        };\r\n    }\r\n    exports.fnToDisposable = fnToDisposable;\r\n    function toDisposable() {\r\n        var fns = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            fns[_i - 0] = arguments[_i];\r\n        }\r\n        return combinedDispose2(fns.map(fnToDisposable));\r\n    }\r\n    exports.toDisposable = toDisposable;\r\n    function callAll(arg) {\r\n        if (!arg) {\r\n            return null;\r\n        }\r\n        else if (typeof arg === 'function') {\r\n            arg();\r\n            return null;\r\n        }\r\n        else if (Array.isArray(arg)) {\r\n            while (arg.length > 0) {\r\n                arg.pop()();\r\n            }\r\n            return arg;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Calls all functions that are being passed to it.\r\n     */\r\n    exports.cAll = callAll;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/base/common/platform\", [\"require\", \"exports\"], function (require, exports) {\r\n    // --- THIS FILE IS TEMPORARY UNTIL ENV.TS IS CLEANED UP. IT CAN SAFELY BE USED IN ALL TARGET EXECUTION ENVIRONMENTS (node & dom) ---\r\n    var _isWindows = false;\r\n    var _isMacintosh = false;\r\n    var _isLinux = false;\r\n    var _isNative = false;\r\n    var _isWeb = false;\r\n    var _isQunit = false;\r\n    // OS detection\r\n    if (typeof process === 'object') {\r\n        _isWindows = (process.platform === 'win32');\r\n        _isMacintosh = (process.platform === 'darwin');\r\n        _isLinux = (process.platform === 'linux');\r\n        _isNative = true;\r\n    }\r\n    else if (typeof navigator === 'object') {\r\n        var userAgent = navigator.userAgent;\r\n        _isWindows = userAgent.indexOf('Windows') >= 0;\r\n        _isMacintosh = userAgent.indexOf('Macintosh') >= 0;\r\n        _isLinux = userAgent.indexOf('Linux') >= 0;\r\n        _isWeb = true;\r\n        _isQunit = !!self.QUnit;\r\n    }\r\n    (function (Platform) {\r\n        Platform[Platform[\"Web\"] = 0] = \"Web\";\r\n        Platform[Platform[\"Mac\"] = 1] = \"Mac\";\r\n        Platform[Platform[\"Linux\"] = 2] = \"Linux\";\r\n        Platform[Platform[\"Windows\"] = 3] = \"Windows\";\r\n    })(exports.Platform || (exports.Platform = {}));\r\n    var Platform = exports.Platform;\r\n    exports._platform = Platform.Web;\r\n    if (_isNative) {\r\n        if (_isMacintosh) {\r\n            exports._platform = Platform.Mac;\r\n        }\r\n        else if (_isWindows) {\r\n            exports._platform = Platform.Windows;\r\n        }\r\n        else if (_isLinux) {\r\n            exports._platform = Platform.Linux;\r\n        }\r\n    }\r\n    exports.isWindows = _isWindows;\r\n    exports.isMacintosh = _isMacintosh;\r\n    exports.isLinux = _isLinux;\r\n    exports.isNative = _isNative;\r\n    exports.isWeb = _isWeb;\r\n    exports.isQunit = _isQunit;\r\n    exports.platform = exports._platform;\r\n    var _globals = (typeof self === 'object' ? self : global);\r\n    exports.globals = _globals;\r\n    function hasWebWorkerSupport() {\r\n        return typeof _globals.Worker !== 'undefined';\r\n    }\r\n    exports.hasWebWorkerSupport = hasWebWorkerSupport;\r\n    exports.setTimeout = _globals.setTimeout.bind(_globals);\r\n    exports.clearTimeout = _globals.clearTimeout.bind(_globals);\r\n    exports.setInterval = _globals.setInterval.bind(_globals);\r\n    exports.clearInterval = _globals.clearInterval.bind(_globals);\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/base/common/paths\", [\"require\", \"exports\", 'vs/base/common/platform'], function (require, exports, platform_1) {\r\n    /**\r\n     * The forward slash path separator.\r\n     */\r\n    exports.sep = '/';\r\n    /**\r\n     * The native path separator depending on the OS.\r\n     */\r\n    exports.nativeSep = platform_1.isWindows ? '\\\\' : '/';\r\n    function relative(from, to) {\r\n        from = normalize(from);\r\n        to = normalize(to);\r\n        var fromParts = from.split(exports.sep), toParts = to.split(exports.sep);\r\n        while (fromParts.length > 0 && toParts.length > 0) {\r\n            if (fromParts[0] === toParts[0]) {\r\n                fromParts.shift();\r\n                toParts.shift();\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        for (var i = 0, len = fromParts.length; i < len; i++) {\r\n            toParts.unshift('..');\r\n        }\r\n        return toParts.join(exports.sep);\r\n    }\r\n    exports.relative = relative;\r\n    var _dotSegment = /[\\\\\\/]\\.\\.?[\\\\\\/]?|[\\\\\\/]?\\.\\.?[\\\\\\/]/;\r\n    function normalize(path, toOSPath) {\r\n        if (!path) {\r\n            return path;\r\n        }\r\n        // a path is already normal if it contains no .. or . parts\r\n        // and already uses the proper path separator\r\n        if (!_dotSegment.test(path)) {\r\n            // badSep is the path separator we don't want. Usually\r\n            // the backslash, unless isWindows && toOSPath\r\n            var badSep = toOSPath && platform_1.isWindows ? '/' : '\\\\';\r\n            if (path.indexOf(badSep) === -1) {\r\n                return path;\r\n            }\r\n        }\r\n        var parts = path.split(/[\\\\\\/]/);\r\n        for (var i = 0, len = parts.length; i < len; i++) {\r\n            if (parts[i] === '.' && !!parts[i + 1]) {\r\n                parts.splice(i, 1);\r\n                i -= 1;\r\n            }\r\n            else if (parts[i] === '..' && !!parts[i - 1]) {\r\n                parts.splice(i - 1, 2);\r\n                i -= 2;\r\n            }\r\n        }\r\n        return parts.join(toOSPath ? exports.nativeSep : exports.sep);\r\n    }\r\n    exports.normalize = normalize;\r\n    function dirnames(path) {\r\n        var value = path, done = false;\r\n        function next() {\r\n            if (value === '.' || value === '/' || value === '\\\\') {\r\n                value = undefined;\r\n                done = true;\r\n            }\r\n            else {\r\n                value = dirname(value);\r\n            }\r\n            return {\r\n                value: value,\r\n                done: done\r\n            };\r\n        }\r\n        return {\r\n            next: next\r\n        };\r\n    }\r\n    exports.dirnames = dirnames;\r\n    /**\r\n     * @returns the directory name of a path.\r\n     */\r\n    function dirname(path) {\r\n        var idx = ~path.lastIndexOf('/') || ~path.lastIndexOf('\\\\');\r\n        if (idx === 0) {\r\n            return '.';\r\n        }\r\n        else if (~idx === 0) {\r\n            return path[0];\r\n        }\r\n        else {\r\n            return path.substring(0, ~idx);\r\n        }\r\n    }\r\n    exports.dirname = dirname;\r\n    /**\r\n     * @returns the base name of a path.\r\n     */\r\n    function basename(path) {\r\n        var idx = ~path.lastIndexOf('/') || ~path.lastIndexOf('\\\\');\r\n        if (idx === 0) {\r\n            return path;\r\n        }\r\n        else if (~idx === path.length - 1) {\r\n            return basename(path.substring(0, path.length - 1));\r\n        }\r\n        else {\r\n            return path.substr(~idx + 1);\r\n        }\r\n    }\r\n    exports.basename = basename;\r\n    /**\r\n     * @returns {{.far}} from boo.far or the empty string.\r\n     */\r\n    function extname(path) {\r\n        path = basename(path);\r\n        var idx = ~path.lastIndexOf('.');\r\n        return idx ? path.substring(~idx) : '';\r\n    }\r\n    exports.extname = extname;\r\n    function getRootLength(path) {\r\n        if (!path) {\r\n            return 0;\r\n        }\r\n        path = path.replace(/\\/|\\\\/g, '/');\r\n        if (path[0] === '/') {\r\n            if (path[1] !== '/') {\r\n                // /far/boo\r\n                return 1;\r\n            }\r\n            else {\r\n                // //server/far/boo\r\n                return 2;\r\n            }\r\n        }\r\n        if (path[1] === ':') {\r\n            if (path[2] === '/') {\r\n                // c:/boo/far.txt\r\n                return 3;\r\n            }\r\n            else {\r\n                // c:\r\n                return 2;\r\n            }\r\n        }\r\n        if (path.indexOf('file:///') === 0) {\r\n            return 8; // 8 -> 'file:///'.length\r\n        }\r\n        var idx = path.indexOf('://');\r\n        if (idx !== -1) {\r\n            return idx + 3; // 3 -> \"://\".length\r\n        }\r\n        return 0;\r\n    }\r\n    function join() {\r\n        var parts = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            parts[_i - 0] = arguments[_i];\r\n        }\r\n        var rootLen = getRootLength(parts[0]), root;\r\n        // simply preserve things like c:/, //localhost/, file:///, http://, etc\r\n        root = parts[0].substr(0, rootLen);\r\n        parts[0] = parts[0].substr(rootLen);\r\n        var allParts = [], endsWithSep = /[\\\\\\/]$/.test(parts[parts.length - 1]);\r\n        for (var i = 0; i < parts.length; i++) {\r\n            allParts.push.apply(allParts, parts[i].split(/\\/|\\\\/));\r\n        }\r\n        for (var i = 0; i < allParts.length; i++) {\r\n            var part = allParts[i];\r\n            if (part === '.' || part.length === 0) {\r\n                allParts.splice(i, 1);\r\n                i -= 1;\r\n            }\r\n            else if (part === '..' && !!allParts[i - 1] && allParts[i - 1] !== '..') {\r\n                allParts.splice(i - 1, 2);\r\n                i -= 2;\r\n            }\r\n        }\r\n        if (endsWithSep) {\r\n            allParts.push('');\r\n        }\r\n        var ret = allParts.join('/');\r\n        if (root) {\r\n            ret = root.replace(/\\/|\\\\/g, '/') + ret;\r\n        }\r\n        return ret;\r\n    }\r\n    exports.join = join;\r\n    function isUNC(path) {\r\n        if (!platform_1.isWindows || !path) {\r\n            return false; // UNC is a windows concept\r\n        }\r\n        path = this.normalize(path, true);\r\n        return path[0] === exports.nativeSep && path[1] === exports.nativeSep;\r\n    }\r\n    exports.isUNC = isUNC;\r\n    function isAbsolute(path) {\r\n        return path && path[0] === '/';\r\n    }\r\n    exports.isAbsolute = isAbsolute;\r\n    function makeAbsolute(path, isPathNormalized) {\r\n        return isAbsolute(!isPathNormalized ? normalize(path) : path) ? path : exports.sep + path;\r\n    }\r\n    exports.makeAbsolute = makeAbsolute;\r\n    function isRelative(path) {\r\n        return path && path.length > 1 && path[0] === '.';\r\n    }\r\n    exports.isRelative = isRelative;\r\n    var _slash = '/'.charCodeAt(0);\r\n    function isEqualOrParent(path, candidate) {\r\n        if (path === candidate) {\r\n            return true;\r\n        }\r\n        path = normalize(path);\r\n        candidate = normalize(candidate);\r\n        var candidateLen = candidate.length;\r\n        var lastCandidateChar = candidate.charCodeAt(candidateLen - 1);\r\n        if (lastCandidateChar === _slash) {\r\n            candidate = candidate.substring(0, candidateLen - 1);\r\n            candidateLen -= 1;\r\n        }\r\n        if (path === candidate) {\r\n            return true;\r\n        }\r\n        if (!platform_1.isLinux) {\r\n            // case insensitive\r\n            path = path.toLowerCase();\r\n            candidate = candidate.toLowerCase();\r\n        }\r\n        if (path === candidate) {\r\n            return true;\r\n        }\r\n        if (path.indexOf(candidate) !== 0) {\r\n            return false;\r\n        }\r\n        var char = path.charCodeAt(candidateLen);\r\n        return char === _slash;\r\n    }\r\n    exports.isEqualOrParent = isEqualOrParent;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/base/common/remote\", [\"require\", \"exports\"], function (require, exports) {\r\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\r\n    function createProxyFromCtor(remote, id, ctor) {\r\n        var result = {\r\n            $__IS_REMOTE_OBJ: true\r\n        };\r\n        for (var prop in ctor.prototype) {\r\n            if (typeof ctor.prototype[prop] === 'function') {\r\n                result[prop] = createMethodProxy(remote, id, prop);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    exports.createProxyFromCtor = createProxyFromCtor;\r\n    function createMethodProxy(remote, proxyId, path) {\r\n        return function () {\r\n            var myArgs = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                myArgs[_i - 0] = arguments[_i];\r\n            }\r\n            return remote.callOnRemote(proxyId, path, myArgs);\r\n        };\r\n    }\r\n    var ProxiesMarshallingContribution = (function () {\r\n        function ProxiesMarshallingContribution(remoteCom) {\r\n            this._remoteCom = remoteCom;\r\n        }\r\n        ProxiesMarshallingContribution.prototype.canSerialize = function (obj) {\r\n            return (typeof obj.$__CREATE__PROXY__REQUEST === 'string');\r\n        };\r\n        ProxiesMarshallingContribution.prototype.serialize = function (obj, serialize) {\r\n            var desc = {\r\n                methods: [],\r\n                props: {}\r\n            };\r\n            var keys = Object.keys(obj);\r\n            for (var i = 0; i < keys.length; i++) {\r\n                var key = keys[i];\r\n                if (typeof obj[key] === 'function') {\r\n                    desc.methods.push(key);\r\n                }\r\n                else {\r\n                    desc.props[key] = serialize(obj[key]);\r\n                }\r\n            }\r\n            return {\r\n                $isProxyDescriptor: true,\r\n                proxyId: obj.$__CREATE__PROXY__REQUEST,\r\n                desc: desc\r\n            };\r\n        };\r\n        ProxiesMarshallingContribution.prototype.canDeserialize = function (obj) {\r\n            return obj.$isProxyDescriptor === true;\r\n        };\r\n        ProxiesMarshallingContribution.prototype.deserialize = function (obj, deserialize) {\r\n            // this is an object\r\n            var result = {\r\n                $__IS_REMOTE_OBJ: true\r\n            };\r\n            var methods = obj.desc.methods;\r\n            for (var i = 0; i < methods.length; i++) {\r\n                result[methods[i]] = createMethodProxy(this._remoteCom, obj.proxyId, methods[i]);\r\n            }\r\n            var props = obj.desc.props;\r\n            for (var prop in props) {\r\n                if (hasOwnProperty.call(props, prop)) {\r\n                    result[prop] = deserialize(props[prop]);\r\n                }\r\n            }\r\n            return result;\r\n        };\r\n        return ProxiesMarshallingContribution;\r\n    })();\r\n    exports.ProxiesMarshallingContribution = ProxiesMarshallingContribution;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/base/common/stopwatch\", [\"require\", \"exports\", 'vs/base/common/platform'], function (require, exports, platform_1) {\r\n    var hasPerformanceNow = (platform_1.globals.performance && typeof platform_1.globals.performance.now === 'function');\r\n    var StopWatch = (function () {\r\n        function StopWatch(startTime) {\r\n            this._startTime = startTime;\r\n            this._stopTime = -1;\r\n        }\r\n        StopWatch.create = function () {\r\n            return new StopWatch(hasPerformanceNow ? platform_1.globals.performance.now() : new Date().getTime());\r\n        };\r\n        StopWatch.prototype.stop = function () {\r\n            this._stopTime = (hasPerformanceNow ? platform_1.globals.performance.now() : new Date().getTime());\r\n        };\r\n        StopWatch.prototype.elapsed = function () {\r\n            if (this._stopTime !== -1) {\r\n                return this._stopTime - this._startTime;\r\n            }\r\n            var now = (hasPerformanceNow ? platform_1.globals.performance.now() : new Date().getTime());\r\n            return now - this._startTime;\r\n        };\r\n        return StopWatch;\r\n    })();\r\n    exports.StopWatch = StopWatch;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/base/common/types\", [\"require\", \"exports\"], function (require, exports) {\r\n    /**\r\n     * @returns whether the provided parameter is a JavaScript Array or not.\r\n     */\r\n    function isArray(array) {\r\n        if (Array.isArray) {\r\n            return Array.isArray(array);\r\n        }\r\n        if (array && typeof (array.length) === 'number' && array.constructor === Array) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    exports.isArray = isArray;\r\n    /**\r\n     * @returns whether the provided parameter is a JavaScript String or not.\r\n     */\r\n    function isString(str) {\r\n        if (typeof (str) === 'string' || str instanceof String) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    exports.isString = isString;\r\n    /**\r\n     * @returns whether the provided parameter is a JavaScript Array and each element in the array is a string.\r\n     */\r\n    function isStringArray(value) {\r\n        return isArray(value) && value.every(function (elem) { return isString(elem); });\r\n    }\r\n    exports.isStringArray = isStringArray;\r\n    /**\r\n     * @returns whether the provided parameter is a JavaScript Object or not.\r\n     */\r\n    function isObject(obj) {\r\n        // Needed for IE8\r\n        if (typeof obj === 'undefined' || obj === null) {\r\n            return false;\r\n        }\r\n        return Object.prototype.toString.call(obj) === '[object Object]';\r\n    }\r\n    exports.isObject = isObject;\r\n    /**\r\n     * @returns whether the provided parameter is a JavaScript Number or not.\r\n     */\r\n    function isNumber(obj) {\r\n        if ((typeof (obj) === 'number' || obj instanceof Number) && !isNaN(obj)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    exports.isNumber = isNumber;\r\n    /**\r\n     * @returns whether the provided parameter is a JavaScript Boolean or not.\r\n     */\r\n    function isBoolean(obj) {\r\n        return obj === true || obj === false;\r\n    }\r\n    exports.isBoolean = isBoolean;\r\n    /**\r\n     * @returns whether the provided parameter is undefined.\r\n     */\r\n    function isUndefined(obj) {\r\n        return typeof (obj) === 'undefined';\r\n    }\r\n    exports.isUndefined = isUndefined;\r\n    /**\r\n     * @returns whether the provided parameter is undefined or null.\r\n     */\r\n    function isUndefinedOrNull(obj) {\r\n        return isUndefined(obj) || obj === null;\r\n    }\r\n    exports.isUndefinedOrNull = isUndefinedOrNull;\r\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\r\n    /**\r\n     * @returns whether the provided parameter is an empty JavaScript Object or not.\r\n     */\r\n    function isEmptyObject(obj) {\r\n        if (!isObject(obj)) {\r\n            return false;\r\n        }\r\n        for (var key in obj) {\r\n            if (hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    exports.isEmptyObject = isEmptyObject;\r\n    /**\r\n     * @returns whether the provided parameter is a JavaScript Function or not.\r\n     */\r\n    function isFunction(obj) {\r\n        return Object.prototype.toString.call(obj) === '[object Function]';\r\n    }\r\n    exports.isFunction = isFunction;\r\n    /**\r\n     * @returns whether the provided parameters is are JavaScript Function or not.\r\n     */\r\n    function areFunctions() {\r\n        var objects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            objects[_i - 0] = arguments[_i];\r\n        }\r\n        return objects && objects.length > 0 && objects.every(function (object) { return isFunction(object); });\r\n    }\r\n    exports.areFunctions = areFunctions;\r\n    function validateConstraints(args, constraints) {\r\n        var len = Math.min(args.length, constraints.length);\r\n        for (var i = 0; i < len; i++) {\r\n            validateConstraint(args[i], constraints[i]);\r\n        }\r\n    }\r\n    exports.validateConstraints = validateConstraints;\r\n    function validateConstraint(arg, constraint) {\r\n        if (typeof constraint === 'string') {\r\n            if (typeof arg !== constraint) {\r\n                throw new Error(\"argument does not match constraint: typeof \" + constraint);\r\n            }\r\n        }\r\n        else if (typeof constraint === 'function') {\r\n            if (arg instanceof constraint) {\r\n                return;\r\n            }\r\n            if (arg && arg.constructor === constraint) {\r\n                return;\r\n            }\r\n            if (constraint.length === 1 && constraint.call(undefined, arg) === true) {\r\n                return;\r\n            }\r\n            throw new Error(\"argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true\");\r\n        }\r\n    }\r\n    exports.validateConstraint = validateConstraint;\r\n    /**\r\n     * Creates a new object of the provided class and will call the constructor with\r\n     * any additional argument supplied.\r\n     */\r\n    function create(ctor) {\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        var obj = Object.create(ctor.prototype);\r\n        ctor.apply(obj, args);\r\n        return obj;\r\n    }\r\n    exports.create = create;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/base/common/graph\", [\"require\", \"exports\", 'vs/base/common/types', 'vs/base/common/collections'], function (require, exports, objects, collections) {\r\n    function newNode(data) {\r\n        return {\r\n            data: data,\r\n            incoming: {},\r\n            outgoing: {}\r\n        };\r\n    }\r\n    exports.newNode = newNode;\r\n    var Graph = (function () {\r\n        function Graph(_hashFn) {\r\n            this._hashFn = _hashFn;\r\n            this._nodes = Object.create(null);\r\n            // empty\r\n        }\r\n        Graph.prototype.roots = function () {\r\n            var ret = [];\r\n            collections.forEach(this._nodes, function (entry) {\r\n                if (objects.isEmptyObject(entry.value.outgoing)) {\r\n                    ret.push(entry.value);\r\n                }\r\n            });\r\n            return ret;\r\n        };\r\n        Graph.prototype.traverse = function (start, inwards, callback) {\r\n            var startNode = this.lookup(start);\r\n            if (!startNode) {\r\n                return;\r\n            }\r\n            this._traverse(startNode, inwards, {}, callback);\r\n        };\r\n        Graph.prototype._traverse = function (node, inwards, seen, callback) {\r\n            var _this = this;\r\n            var key = this._hashFn(node.data);\r\n            if (collections.contains(seen, key)) {\r\n                return;\r\n            }\r\n            seen[key] = true;\r\n            callback(node.data);\r\n            var nodes = inwards ? node.outgoing : node.incoming;\r\n            collections.forEach(nodes, function (entry) { return _this._traverse(entry.value, inwards, seen, callback); });\r\n        };\r\n        Graph.prototype.insertEdge = function (from, to) {\r\n            var fromNode = this.lookupOrInsertNode(from), toNode = this.lookupOrInsertNode(to);\r\n            fromNode.outgoing[this._hashFn(to)] = toNode;\r\n            toNode.incoming[this._hashFn(from)] = fromNode;\r\n        };\r\n        Graph.prototype.removeNode = function (data) {\r\n            var key = this._hashFn(data);\r\n            delete this._nodes[key];\r\n            collections.forEach(this._nodes, function (entry) {\r\n                delete entry.value.outgoing[key];\r\n                delete entry.value.incoming[key];\r\n            });\r\n        };\r\n        Graph.prototype.lookupOrInsertNode = function (data) {\r\n            var key = this._hashFn(data), node = collections.lookup(this._nodes, key);\r\n            if (!node) {\r\n                node = newNode(data);\r\n                this._nodes[key] = node;\r\n            }\r\n            return node;\r\n        };\r\n        Graph.prototype.lookup = function (data) {\r\n            return collections.lookup(this._nodes, this._hashFn(data));\r\n        };\r\n        Object.defineProperty(Graph.prototype, \"length\", {\r\n            get: function () {\r\n                return Object.keys(this._nodes).length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return Graph;\r\n    })();\r\n    exports.Graph = Graph;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/base/common/objects\", [\"require\", \"exports\", 'vs/base/common/types'], function (require, exports, Types) {\r\n    function clone(obj) {\r\n        if (!obj || typeof obj !== 'object') {\r\n            return obj;\r\n        }\r\n        if (obj instanceof RegExp) {\r\n            return obj;\r\n        }\r\n        var result = (Array.isArray(obj)) ? [] : {};\r\n        Object.keys(obj).forEach(function (key) {\r\n            if (obj[key] && typeof obj[key] === 'object') {\r\n                result[key] = clone(obj[key]);\r\n            }\r\n            else {\r\n                result[key] = obj[key];\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n    exports.clone = clone;\r\n    function deepClone(obj) {\r\n        if (!obj || typeof obj !== 'object') {\r\n            return obj;\r\n        }\r\n        var result = (Array.isArray(obj)) ? [] : {};\r\n        Object.getOwnPropertyNames(obj).forEach(function (key) {\r\n            if (obj[key] && typeof obj[key] === 'object') {\r\n                result[key] = deepClone(obj[key]);\r\n            }\r\n            else {\r\n                result[key] = obj[key];\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n    exports.deepClone = deepClone;\r\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\r\n    function cloneAndChange(obj, changer) {\r\n        return _cloneAndChange(obj, changer, []);\r\n    }\r\n    exports.cloneAndChange = cloneAndChange;\r\n    function _cloneAndChange(obj, changer, encounteredObjects) {\r\n        if (Types.isUndefinedOrNull(obj)) {\r\n            return obj;\r\n        }\r\n        var changed = changer(obj);\r\n        if (typeof changed !== 'undefined') {\r\n            return changed;\r\n        }\r\n        if (Types.isArray(obj)) {\r\n            var r1 = [];\r\n            for (var i1 = 0; i1 < obj.length; i1++) {\r\n                r1.push(_cloneAndChange(obj[i1], changer, encounteredObjects));\r\n            }\r\n            return r1;\r\n        }\r\n        if (Types.isObject(obj)) {\r\n            if (encounteredObjects.indexOf(obj) >= 0) {\r\n                throw new Error('Cannot clone recursive data-structure');\r\n            }\r\n            encounteredObjects.push(obj);\r\n            var r2 = {};\r\n            for (var i2 in obj) {\r\n                if (hasOwnProperty.call(obj, i2)) {\r\n                    r2[i2] = _cloneAndChange(obj[i2], changer, encounteredObjects);\r\n                }\r\n            }\r\n            encounteredObjects.pop();\r\n            return r2;\r\n        }\r\n        return obj;\r\n    }\r\n    // DON'T USE THESE FUNCTION UNLESS YOU KNOW HOW CHROME\r\n    // WORKS... WE HAVE SEEN VERY WEIRD BEHAVIOUR WITH CHROME >= 37\r\n    ///**\r\n    // * Recursively call Object.freeze on object and any properties that are objects.\r\n    // */\r\n    //export function deepFreeze(obj:any):void {\r\n    //\tObject.freeze(obj);\r\n    //\tObject.keys(obj).forEach((key) => {\r\n    //\t\tif(!(typeof obj[key] === 'object') || Object.isFrozen(obj[key])) {\r\n    //\t\t\treturn;\r\n    //\t\t}\r\n    //\r\n    //\t\tdeepFreeze(obj[key]);\r\n    //\t});\r\n    //\tif(!Object.isFrozen(obj)) {\r\n    //\t\tconsole.log('too warm');\r\n    //\t}\r\n    //}\r\n    //\r\n    //export function deepSeal(obj:any):void {\r\n    //\tObject.seal(obj);\r\n    //\tObject.keys(obj).forEach((key) => {\r\n    //\t\tif(!(typeof obj[key] === 'object') || Object.isSealed(obj[key])) {\r\n    //\t\t\treturn;\r\n    //\t\t}\r\n    //\r\n    //\t\tdeepSeal(obj[key]);\r\n    //\t});\r\n    //\tif(!Object.isSealed(obj)) {\r\n    //\t\tconsole.log('NOT sealed');\r\n    //\t}\r\n    //}\r\n    /**\r\n     * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\r\n     * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\r\n     */\r\n    function mixin(destination, source, overwrite) {\r\n        if (overwrite === void 0) { overwrite = true; }\r\n        if (!Types.isObject(destination)) {\r\n            return source;\r\n        }\r\n        if (Types.isObject(source)) {\r\n            Object.keys(source).forEach(function (key) {\r\n                if (key in destination) {\r\n                    if (overwrite) {\r\n                        if (Types.isObject(destination[key]) && Types.isObject(source[key])) {\r\n                            mixin(destination[key], source[key], overwrite);\r\n                        }\r\n                        else {\r\n                            destination[key] = source[key];\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    destination[key] = source[key];\r\n                }\r\n            });\r\n        }\r\n        return destination;\r\n    }\r\n    exports.mixin = mixin;\r\n    function assign(destination) {\r\n        var sources = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            sources[_i - 1] = arguments[_i];\r\n        }\r\n        sources.forEach(function (source) { return Object.keys(source).forEach(function (key) { return destination[key] = source[key]; }); });\r\n        return destination;\r\n    }\r\n    exports.assign = assign;\r\n    /**\r\n     * Returns a new object that has all values of {{obj}}\r\n     * plus those from {{defaults}}.\r\n     */\r\n    function withDefaults(obj, defaults) {\r\n        return mixin(clone(defaults), obj || {});\r\n    }\r\n    exports.withDefaults = withDefaults;\r\n    function equals(one, other) {\r\n        if (one === other) {\r\n            return true;\r\n        }\r\n        if (one === null || one === undefined || other === null || other === undefined) {\r\n            return false;\r\n        }\r\n        if (typeof one !== typeof other) {\r\n            return false;\r\n        }\r\n        if (typeof one !== 'object') {\r\n            return false;\r\n        }\r\n        if ((Array.isArray(one)) !== (Array.isArray(other))) {\r\n            return false;\r\n        }\r\n        var i, key;\r\n        if (Array.isArray(one)) {\r\n            if (one.length !== other.length) {\r\n                return false;\r\n            }\r\n            for (i = 0; i < one.length; i++) {\r\n                if (!equals(one[i], other[i])) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var oneKeys = [];\r\n            for (key in one) {\r\n                oneKeys.push(key);\r\n            }\r\n            oneKeys.sort();\r\n            var otherKeys = [];\r\n            for (key in other) {\r\n                otherKeys.push(key);\r\n            }\r\n            otherKeys.sort();\r\n            if (!equals(oneKeys, otherKeys)) {\r\n                return false;\r\n            }\r\n            for (i = 0; i < oneKeys.length; i++) {\r\n                if (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    exports.equals = equals;\r\n    function ensureProperty(obj, property, defaultValue) {\r\n        if (typeof obj[property] === 'undefined') {\r\n            obj[property] = defaultValue;\r\n        }\r\n    }\r\n    exports.ensureProperty = ensureProperty;\r\n    function arrayToHash(array) {\r\n        var result = {};\r\n        for (var i = 0; i < array.length; ++i) {\r\n            result[array[i]] = true;\r\n        }\r\n        return result;\r\n    }\r\n    exports.arrayToHash = arrayToHash;\r\n    /**\r\n     * Given an array of strings, returns a function which, given a string\r\n     * returns true or false whether the string is in that array.\r\n     */\r\n    function createKeywordMatcher(arr, caseInsensitive) {\r\n        if (caseInsensitive === void 0) { caseInsensitive = false; }\r\n        if (caseInsensitive) {\r\n            arr = arr.map(function (x) { return x.toLowerCase(); });\r\n        }\r\n        var hash = arrayToHash(arr);\r\n        if (caseInsensitive) {\r\n            return function (word) {\r\n                return hash[word.toLowerCase()] !== undefined && hash.hasOwnProperty(word.toLowerCase());\r\n            };\r\n        }\r\n        else {\r\n            return function (word) {\r\n                return hash[word] !== undefined && hash.hasOwnProperty(word);\r\n            };\r\n        }\r\n    }\r\n    exports.createKeywordMatcher = createKeywordMatcher;\r\n    /**\r\n     * Started from TypeScript's __extends function to make a type a subclass of a specific class.\r\n     * Modified to work with properties already defined on the derivedClass, since we can't get TS\r\n     * to call this method before the constructor definition.\r\n     */\r\n    function derive(baseClass, derivedClass) {\r\n        for (var prop in baseClass) {\r\n            if (baseClass.hasOwnProperty(prop)) {\r\n                derivedClass[prop] = baseClass[prop];\r\n            }\r\n        }\r\n        derivedClass = derivedClass || function () { };\r\n        var basePrototype = baseClass.prototype;\r\n        var derivedPrototype = derivedClass.prototype;\r\n        derivedClass.prototype = Object.create(basePrototype);\r\n        for (var prop in derivedPrototype) {\r\n            if (derivedPrototype.hasOwnProperty(prop)) {\r\n                // handle getters and setters properly\r\n                Object.defineProperty(derivedClass.prototype, prop, Object.getOwnPropertyDescriptor(derivedPrototype, prop));\r\n            }\r\n        }\r\n        // Cast to any due to Bug 16188:PropertyDescriptor set and get function should be optional.\r\n        Object.defineProperty(derivedClass.prototype, 'constructor', { value: derivedClass, writable: true, configurable: true, enumerable: true });\r\n    }\r\n    exports.derive = derive;\r\n    /**\r\n     * Calls JSON.Stringify with a replacer to break apart any circular references.\r\n     * This prevents JSON.stringify from throwing the exception\r\n     *  \"Uncaught TypeError: Converting circular structure to JSON\"\r\n     */\r\n    function safeStringify(obj) {\r\n        var seen = [];\r\n        return JSON.stringify(obj, function (key, value) {\r\n            if (Types.isObject(value) || Array.isArray(value)) {\r\n                if (seen.indexOf(value) !== -1) {\r\n                    return '[Circular]';\r\n                }\r\n                else {\r\n                    seen.push(value);\r\n                }\r\n            }\r\n            return value;\r\n        });\r\n    }\r\n    exports.safeStringify = safeStringify;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/base/common/marshalling\", [\"require\", \"exports\", 'vs/base/common/objects', 'vs/base/common/types'], function (require, exports, objects, types) {\r\n    var marshallingContributions = [];\r\n    function registerMarshallingContribution(contribution) {\r\n        marshallingContributions.push(contribution);\r\n    }\r\n    exports.registerMarshallingContribution = registerMarshallingContribution;\r\n    var currentDynamicContrib = null;\r\n    function canSerialize(obj) {\r\n        for (var _i = 0; _i < marshallingContributions.length; _i++) {\r\n            var contrib = marshallingContributions[_i];\r\n            if (contrib.canSerialize(obj)) {\r\n                return true;\r\n            }\r\n        }\r\n        if (currentDynamicContrib && currentDynamicContrib.canSerialize(obj)) {\r\n            return true;\r\n        }\r\n    }\r\n    exports.canSerialize = canSerialize;\r\n    function serialize(obj) {\r\n        return objects.cloneAndChange(obj, function (orig) {\r\n            if (typeof orig === 'object') {\r\n                for (var i = 0; i < marshallingContributions.length; i++) {\r\n                    var contrib = marshallingContributions[i];\r\n                    if (contrib.canSerialize(orig)) {\r\n                        return contrib.serialize(orig, serialize);\r\n                    }\r\n                }\r\n                if (currentDynamicContrib && currentDynamicContrib.canSerialize(orig)) {\r\n                    return currentDynamicContrib.serialize(orig, serialize);\r\n                }\r\n            }\r\n            return undefined;\r\n        });\r\n    }\r\n    exports.serialize = serialize;\r\n    function deserialize(obj) {\r\n        return objects.cloneAndChange(obj, function (orig) {\r\n            if (types.isObject(orig)) {\r\n                for (var i = 0; i < marshallingContributions.length; i++) {\r\n                    var contrib = marshallingContributions[i];\r\n                    if (contrib.canDeserialize(orig)) {\r\n                        return contrib.deserialize(orig, deserialize);\r\n                    }\r\n                }\r\n                if (currentDynamicContrib && currentDynamicContrib.canDeserialize(orig)) {\r\n                    return currentDynamicContrib.deserialize(orig, deserialize);\r\n                }\r\n            }\r\n            return undefined;\r\n        });\r\n    }\r\n    exports.deserialize = deserialize;\r\n    registerMarshallingContribution({\r\n        canSerialize: function (obj) {\r\n            return obj instanceof RegExp;\r\n        },\r\n        serialize: function (regex, serialize) {\r\n            var flags = '';\r\n            if (regex.global) {\r\n                flags += 'g';\r\n            }\r\n            else if (regex.ignoreCase) {\r\n                flags += 'i';\r\n            }\r\n            else if (regex.multiline) {\r\n                flags += 'm';\r\n            }\r\n            return {\r\n                $isRegExp: true,\r\n                source: regex.source,\r\n                flags: flags\r\n            };\r\n        },\r\n        canDeserialize: function (obj) {\r\n            return obj.$isRegExp;\r\n        },\r\n        deserialize: function (obj, deserialize) {\r\n            return new RegExp(obj.source, obj.flags);\r\n        }\r\n    });\r\n    function marshallObject(obj, dynamicContrib) {\r\n        if (dynamicContrib === void 0) { dynamicContrib = null; }\r\n        currentDynamicContrib = dynamicContrib;\r\n        var r = JSON.stringify(serialize(obj));\r\n        currentDynamicContrib = null;\r\n        return r;\r\n    }\r\n    exports.marshallObject = marshallObject;\r\n    function demarshallObject(serialized, dynamicContrib) {\r\n        if (dynamicContrib === void 0) { dynamicContrib = null; }\r\n        currentDynamicContrib = dynamicContrib;\r\n        var r = deserialize(JSON.parse(serialized));\r\n        currentDynamicContrib = null;\r\n        return r;\r\n    }\r\n    exports.demarshallObject = demarshallObject;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/base/common/uri\", [\"require\", \"exports\", 'vs/base/common/marshalling', 'vs/base/common/platform'], function (require, exports, marshalling, platform) {\r\n    // see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent\r\n    function fixedEncodeURIComponent(str) {\r\n        return encodeURIComponent(str).replace(/[!'()*]/g, function (c) { return '%' + c.charCodeAt(0).toString(16).toUpperCase(); });\r\n    }\r\n    /**\r\n     * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\r\n     * This class is a simple parser which creates the basic component paths\r\n     * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\r\n     * and encoding.\r\n     *\r\n     *       foo://example.com:8042/over/there?name=ferret#nose\r\n     *       \\_/   \\______________/\\_________/ \\_________/ \\__/\r\n     *        |           |            |            |        |\r\n     *     scheme     authority       path        query   fragment\r\n     *        |   _____________________|__\r\n     *       / \\ /                        \\\r\n     *       urn:example:animal:ferret:nose\r\n     *\r\n     *\r\n     */\r\n    var URI = (function () {\r\n        function URI() {\r\n            this._scheme = URI._empty;\r\n            this._authority = URI._empty;\r\n            this._path = URI._empty;\r\n            this._query = URI._empty;\r\n            this._fragment = URI._empty;\r\n        }\r\n        Object.defineProperty(URI.prototype, \"scheme\", {\r\n            /**\r\n             * scheme is the 'http' part of 'http://www.msft.com/some/path?query#fragment'.\r\n             * The part before the first colon.\r\n             */\r\n            get: function () {\r\n                return this._scheme;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(URI.prototype, \"authority\", {\r\n            /**\r\n             * authority is the 'www.msft.com' part of 'http://www.msft.com/some/path?query#fragment'.\r\n             * The part between the first double slashes and the next slash.\r\n             */\r\n            get: function () {\r\n                return this._authority;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(URI.prototype, \"path\", {\r\n            /**\r\n             * path is the '/some/path' part of 'http://www.msft.com/some/path?query#fragment'.\r\n             */\r\n            get: function () {\r\n                return this._path;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(URI.prototype, \"query\", {\r\n            /**\r\n             * query is the 'query' part of 'http://www.msft.com/some/path?query#fragment'.\r\n             */\r\n            get: function () {\r\n                return this._query;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(URI.prototype, \"fragment\", {\r\n            /**\r\n             * fragment is the 'fragment' part of 'http://www.msft.com/some/path?query#fragment'.\r\n             */\r\n            get: function () {\r\n                return this._fragment;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(URI.prototype, \"fsPath\", {\r\n            /**\r\n             * Returns a string representing the corresponding file system path of this URI.\r\n             * Will handle UNC paths and normalize windows drive letters to lower-case. Also\r\n             * uses the platform specific path separator. Will *not* validate the path for\r\n             * invalid characters and semantics. Will *not* look at the scheme of this URI.\r\n             */\r\n            get: function () {\r\n                if (!this._fsPath) {\r\n                    var value;\r\n                    if (this._authority && this.scheme === 'file') {\r\n                        // unc path: file://shares/c$/far/boo\r\n                        value = \"//\" + this._authority + this._path;\r\n                    }\r\n                    else if (URI._driveLetterPath.test(this._path)) {\r\n                        // windows drive letter: file:///c:/far/boo\r\n                        value = this._path[1].toLowerCase() + this._path.substr(2);\r\n                    }\r\n                    else {\r\n                        // other path\r\n                        value = this._path;\r\n                    }\r\n                    if (platform.isWindows) {\r\n                        value = value.replace(/\\//g, '\\\\');\r\n                    }\r\n                    this._fsPath = value;\r\n                }\r\n                return this._fsPath;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        // ---- modify to new -------------------------\r\n        URI.prototype.with = function (scheme, authority, path, query, fragment) {\r\n            var ret = new URI();\r\n            ret._scheme = scheme || this.scheme;\r\n            ret._authority = authority || this.authority;\r\n            ret._path = path || this.path;\r\n            ret._query = query || this.query;\r\n            ret._fragment = fragment || this.fragment;\r\n            URI._validate(ret);\r\n            return ret;\r\n        };\r\n        URI.prototype.withScheme = function (value) {\r\n            return this.with(value, undefined, undefined, undefined, undefined);\r\n        };\r\n        URI.prototype.withAuthority = function (value) {\r\n            return this.with(undefined, value, undefined, undefined, undefined);\r\n        };\r\n        URI.prototype.withPath = function (value) {\r\n            return this.with(undefined, undefined, value, undefined, undefined);\r\n        };\r\n        URI.prototype.withQuery = function (value) {\r\n            return this.with(undefined, undefined, undefined, value, undefined);\r\n        };\r\n        URI.prototype.withFragment = function (value) {\r\n            return this.with(undefined, undefined, undefined, undefined, value);\r\n        };\r\n        // ---- parse & validate ------------------------\r\n        URI.parse = function (value) {\r\n            var ret = URI._parse(value);\r\n            ret = ret.with(undefined, decodeURIComponent(ret.authority), decodeURIComponent(ret.path), decodeURIComponent(ret.query), decodeURIComponent(ret.fragment));\r\n            return ret;\r\n        };\r\n        URI.file = function (path) {\r\n            path = path.replace(/\\\\/g, '/');\r\n            path = path.replace(/%/g, '%25');\r\n            path = path.replace(/#/g, '%23');\r\n            path = path.replace(/\\?/g, '%3F');\r\n            path = URI._driveLetter.test(path)\r\n                ? '/' + path\r\n                : path;\r\n            var ret = URI._parse(path);\r\n            if (ret.scheme || ret.fragment || ret.query) {\r\n                throw new Error('Path contains a scheme, fragment or a query. Can not convert it to a file uri.');\r\n            }\r\n            ret = ret.with('file', undefined, decodeURIComponent(ret.path), undefined, undefined);\r\n            return ret;\r\n        };\r\n        URI._parse = function (value) {\r\n            var ret = new URI();\r\n            var match = URI._regexp.exec(value);\r\n            if (match) {\r\n                ret._scheme = match[2] || ret._scheme;\r\n                ret._authority = match[4] || ret._authority;\r\n                ret._path = match[5] || ret._path;\r\n                ret._query = match[7] || ret._query;\r\n                ret._fragment = match[9] || ret._fragment;\r\n            }\r\n            ;\r\n            URI._validate(ret);\r\n            return ret;\r\n        };\r\n        URI.create = function (scheme, authority, path, query, fragment) {\r\n            return new URI().with(scheme, authority, path, query, fragment);\r\n        };\r\n        URI._validate = function (ret) {\r\n            // validation\r\n            // path, http://tools.ietf.org/html/rfc3986#section-3.3\r\n            // If a URI contains an authority component, then the path component\r\n            // must either be empty or begin with a slash (\"/\") character.  If a URI\r\n            // does not contain an authority component, then the path cannot begin\r\n            // with two slash characters (\"//\").\r\n            if (ret.authority && ret.path && ret.path[0] !== '/') {\r\n                throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\r\n            }\r\n            if (!ret.authority && ret.path.indexOf('//') === 0) {\r\n                throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\r\n            }\r\n        };\r\n        URI.prototype.toString = function () {\r\n            if (!this._formatted) {\r\n                var parts = [];\r\n                if (this._scheme) {\r\n                    parts.push(this._scheme);\r\n                    parts.push(':');\r\n                }\r\n                if (this._authority || this._scheme === 'file') {\r\n                    parts.push('//');\r\n                }\r\n                if (this._authority) {\r\n                    var authority = this._authority, idx;\r\n                    authority = authority.toLowerCase();\r\n                    idx = authority.indexOf(':');\r\n                    if (idx === -1) {\r\n                        parts.push(fixedEncodeURIComponent(authority));\r\n                    }\r\n                    else {\r\n                        parts.push(fixedEncodeURIComponent(authority.substr(0, idx)));\r\n                        parts.push(authority.substr(idx));\r\n                    }\r\n                }\r\n                if (this._path) {\r\n                    // encode every segment of the path\r\n                    var path = this._path, segments;\r\n                    // lower-case win drive letters in /C:/fff\r\n                    if (URI._driveLetterPath.test(path)) {\r\n                        path = '/' + path[1].toLowerCase() + path.substr(2);\r\n                    }\r\n                    else if (URI._driveLetter.test(path)) {\r\n                        path = path[0].toLowerCase() + path.substr(1);\r\n                    }\r\n                    segments = path.split('/');\r\n                    for (var i = 0, len = segments.length; i < len; i++) {\r\n                        segments[i] = fixedEncodeURIComponent(segments[i]);\r\n                    }\r\n                    parts.push(segments.join('/'));\r\n                }\r\n                if (this._query) {\r\n                    // in http(s) querys often use 'key=value'-pairs and\r\n                    // ampersand characters for multiple pairs\r\n                    var encoder = /https?/i.test(this.scheme)\r\n                        ? encodeURI\r\n                        : fixedEncodeURIComponent;\r\n                    parts.push('?');\r\n                    parts.push(encoder(this._query));\r\n                }\r\n                if (this._fragment) {\r\n                    parts.push('#');\r\n                    parts.push(fixedEncodeURIComponent(this._fragment));\r\n                }\r\n                this._formatted = parts.join('');\r\n            }\r\n            return this._formatted;\r\n        };\r\n        URI.prototype.toJSON = function () {\r\n            return this.toString();\r\n        };\r\n        URI.prototype._toSerialized = function () {\r\n            // because network.URL extends this class it is important that\r\n            // it can refine/override this method\r\n            return {\r\n                $isURI: true,\r\n                _scheme: this._scheme,\r\n                _authority: this._authority,\r\n                _path: this._path,\r\n                _query: this._query,\r\n                _fragment: this._fragment.replace(/URL_MARSHAL_REMOVE.*$/, ''),\r\n                _fsPath: this._fsPath,\r\n                _formatted: this._formatted && this._formatted.replace(/#?URL_MARSHAL_REMOVE.*$/, ''),\r\n            };\r\n        };\r\n        URI._fromSerialized = function (data) {\r\n            var result = new URI();\r\n            result._scheme = data._scheme;\r\n            result._authority = data._authority;\r\n            result._path = data._path;\r\n            result._query = data._query;\r\n            result._fragment = data._fragment;\r\n            result._fsPath = data._fsPath;\r\n            result._formatted = data._formatted;\r\n            return result;\r\n        };\r\n        URI.isURI = function (thing) {\r\n            if (thing instanceof URI) {\r\n                return true;\r\n            }\r\n            if (!thing) {\r\n                return false;\r\n            }\r\n            if (typeof thing.scheme !== 'string') {\r\n                return false;\r\n            }\r\n            if (typeof thing.authority !== 'string') {\r\n                return false;\r\n            }\r\n            if (typeof thing.fsPath !== 'string') {\r\n                return false;\r\n            }\r\n            if (typeof thing.query !== 'string') {\r\n                return false;\r\n            }\r\n            if (typeof thing.fragment !== 'string') {\r\n                return false;\r\n            }\r\n            if (typeof thing.with !== 'function') {\r\n                return false;\r\n            }\r\n            if (typeof thing.withScheme !== 'function') {\r\n                return false;\r\n            }\r\n            if (typeof thing.withAuthority !== 'function') {\r\n                return false;\r\n            }\r\n            if (typeof thing.withPath !== 'function') {\r\n                return false;\r\n            }\r\n            if (typeof thing.withQuery !== 'function') {\r\n                return false;\r\n            }\r\n            if (typeof thing.withFragment !== 'function') {\r\n                return false;\r\n            }\r\n            if (typeof thing.toString !== 'function') {\r\n                return false;\r\n            }\r\n            if (typeof thing.toJSON !== 'function') {\r\n                return false;\r\n            }\r\n            return true;\r\n        };\r\n        URI._empty = '';\r\n        URI._regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\r\n        URI._driveLetterPath = /^\\/[a-zA-z]:/;\r\n        URI._driveLetter = /^[a-zA-z]:/;\r\n        return URI;\r\n    })();\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.default = URI;\r\n    marshalling.registerMarshallingContribution({\r\n        canSerialize: function (obj) {\r\n            return URI.isURI(obj);\r\n        },\r\n        serialize: function (url, serialize) {\r\n            return url._toSerialized();\r\n        },\r\n        canDeserialize: function (obj) {\r\n            return obj.$isURI;\r\n        },\r\n        deserialize: function (obj, deserialize) {\r\n            return URI._fromSerialized(obj);\r\n        }\r\n    });\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\ndefine(\"vs/base/common/uuid\", [\"require\", \"exports\"], function (require, exports) {\r\n    var ValueUUID = (function () {\r\n        function ValueUUID(_value) {\r\n            this._value = _value;\r\n            // empty\r\n        }\r\n        ValueUUID.prototype.asHex = function () {\r\n            return this._value;\r\n        };\r\n        ValueUUID.prototype.equals = function (other) {\r\n            return this.asHex() === other.asHex();\r\n        };\r\n        return ValueUUID;\r\n    })();\r\n    var V4UUID = (function (_super) {\r\n        __extends(V4UUID, _super);\r\n        function V4UUID() {\r\n            _super.call(this, [\r\n                V4UUID._randomHex(),\r\n                V4UUID._randomHex(),\r\n                V4UUID._randomHex(),\r\n                V4UUID._randomHex(),\r\n                V4UUID._randomHex(),\r\n                V4UUID._randomHex(),\r\n                V4UUID._randomHex(),\r\n                V4UUID._randomHex(),\r\n                '-',\r\n                V4UUID._randomHex(),\r\n                V4UUID._randomHex(),\r\n                V4UUID._randomHex(),\r\n                V4UUID._randomHex(),\r\n                '-',\r\n                '4',\r\n                V4UUID._randomHex(),\r\n                V4UUID._randomHex(),\r\n                V4UUID._randomHex(),\r\n                '-',\r\n                V4UUID._oneOf(V4UUID._timeHighBits),\r\n                V4UUID._randomHex(),\r\n                V4UUID._randomHex(),\r\n                V4UUID._randomHex(),\r\n                '-',\r\n                V4UUID._randomHex(),\r\n                V4UUID._randomHex(),\r\n                V4UUID._randomHex(),\r\n                V4UUID._randomHex(),\r\n                V4UUID._randomHex(),\r\n                V4UUID._randomHex(),\r\n                V4UUID._randomHex(),\r\n                V4UUID._randomHex(),\r\n                V4UUID._randomHex(),\r\n                V4UUID._randomHex(),\r\n                V4UUID._randomHex(),\r\n                V4UUID._randomHex(),\r\n            ].join(''));\r\n        }\r\n        V4UUID._oneOf = function (array) {\r\n            var idx = Math.floor(array.length * Math.random());\r\n            return array[idx];\r\n        };\r\n        V4UUID._randomHex = function () {\r\n            return V4UUID._oneOf(V4UUID._chars);\r\n        };\r\n        V4UUID._chars = ['0', '1', '2', '3', '4', '5', '6', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\r\n        V4UUID._timeHighBits = ['8', '9', 'a', 'b'];\r\n        return V4UUID;\r\n    })(ValueUUID);\r\n    /**\r\n     * An empty UUID that contains only zeros.\r\n     */\r\n    exports.empty = new ValueUUID('00000000-0000-0000-0000-000000000000');\r\n    function v4() {\r\n        return new V4UUID();\r\n    }\r\n    exports.v4 = v4;\r\n    var _UUIDPattern = /^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$/;\r\n    /**\r\n     * Parses a UUID that is of the format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.\r\n     * @param value A uuid string.\r\n     */\r\n    function parse(value) {\r\n        if (!_UUIDPattern.test(value)) {\r\n            throw new Error('invalid uuid');\r\n        }\r\n        return new ValueUUID(value);\r\n    }\r\n    exports.parse = parse;\r\n    function generateUuid() {\r\n        return v4().asHex();\r\n    }\r\n    exports.generateUuid = generateUuid;\r\n});\r\n\n/// <loc filename=\"Metadata\\base_loc_oam.xml\" format=\"messagebundle\" />\n/*! @minifier_do_not_preserve\n  © Microsoft. All rights reserved.\n\n  This library is supported for use in Windows Store apps only.\n\n  Build: 1.0.9200.20602.win8_ldr.130108-1504\n\n  Version: Microsoft.WinJS.1.0\n*/\n\n/*\n\tNote: Copied out of base.js.\n\tChanges:\n\t\t- we have only kept the first 2554 lines.\n\t\t- we have patched WinJS.xhr to add the hedader X-Requested-With:XMLHttpRequest\n\t\t- we have wrapped the entire code in an if statement to make WinJS re-entrant (if already defined)\n\t\t- we have to define setImmediate if not running in IE 10 since its a IE 10 only function\n\t\t- we have removed some getter syntax\n*/\n\n// MONACO CHANGE: Make WinJS re-entrant (if already defined)\nif (typeof WinJS === 'undefined') {\n\n// MONACO CHANGE: define setImmediate\n(function (global) {\n    if (!global.setImmediate) {\n        if (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\n            // running in node\n            global.setImmediate = function(callback) {\n                return process.nextTick(callback);\n            };\n        } else {\n            // running in browser\n            global.setImmediate = function(callback) {\n                return setTimeout(callback, 0);\n            };\n        }\n\t}\n\n})(this);\n\n/// <reference path=\"ms-appx://Microsoft.WinJS.1.0/js/base.js\" />\n(function baseInit(global, undefined) {\n    \"use strict\";\n\n    function initializeProperties(target, members) {\n        var keys = Object.keys(members);\n        var properties;\n        var i, len;\n        for (i = 0, len = keys.length; i < len; i++) {\n            var key = keys[i];\n            var enumerable = key.charCodeAt(0) !== /*_*/95;\n            var member = members[key];\n            if (member && typeof member === 'object') {\n                if (member.value !== undefined || typeof member.get === 'function' || typeof member.set === 'function') {\n                    if (member.enumerable === undefined) {\n                        member.enumerable = enumerable;\n                    }\n                    properties = properties || {};\n                    properties[key] = member;\n                    continue;\n                }\n            }\n            if (!enumerable) {\n                properties = properties || {};\n                properties[key] = { value: member, enumerable: enumerable, configurable: true, writable: true }\n                continue;\n            }\n            target[key] = member;\n        }\n        if (properties) {\n            Object.defineProperties(target, properties);\n        }\n    }\n\n    (function (rootNamespace) {\n\n        // Create the rootNamespace in the global namespace\n        if (!global[rootNamespace]) {\n            global[rootNamespace] = Object.create(Object.prototype);\n        }\n\n        // Cache the rootNamespace we just created in a local variable\n        var _rootNamespace = global[rootNamespace];\n        if (!_rootNamespace.Namespace) {\n            _rootNamespace.Namespace = Object.create(Object.prototype);\n        }\n\n        function defineWithParent(parentNamespace, name, members) {\n            /// <signature helpKeyword=\"WinJS.Namespace.defineWithParent\">\n            /// <summary locid=\"WinJS.Namespace.defineWithParent\">\n            /// Defines a new namespace with the specified name under the specified parent namespace.\n            /// </summary>\n            /// <param name=\"parentNamespace\" type=\"Object\" locid=\"WinJS.Namespace.defineWithParent_p:parentNamespace\">\n            /// The parent namespace.\n            /// </param>\n            /// <param name=\"name\" type=\"String\" locid=\"WinJS.Namespace.defineWithParent_p:name\">\n            /// The name of the new namespace.\n            /// </param>\n            /// <param name=\"members\" type=\"Object\" locid=\"WinJS.Namespace.defineWithParent_p:members\">\n            /// The members of the new namespace.\n            /// </param>\n            /// <returns type=\"Object\" locid=\"WinJS.Namespace.defineWithParent_returnValue\">\n            /// The newly-defined namespace.\n            /// </returns>\n            /// </signature>\n            var currentNamespace = parentNamespace,\n                namespaceFragments = name.split(\".\");\n\n            for (var i = 0, len = namespaceFragments.length; i < len; i++) {\n                var namespaceName = namespaceFragments[i];\n                if (!currentNamespace[namespaceName]) {\n                    Object.defineProperty(currentNamespace, namespaceName,\n                        { value: {}, writable: false, enumerable: true, configurable: true }\n                    );\n                }\n                currentNamespace = currentNamespace[namespaceName];\n            }\n\n            if (members) {\n                initializeProperties(currentNamespace, members);\n            }\n\n            return currentNamespace;\n        }\n\n        function define(name, members) {\n            /// <signature helpKeyword=\"WinJS.Namespace.define\">\n            /// <summary locid=\"WinJS.Namespace.define\">\n            /// Defines a new namespace with the specified name.\n            /// </summary>\n            /// <param name=\"name\" type=\"String\" locid=\"WinJS.Namespace.define_p:name\">\n            /// The name of the namespace. This could be a dot-separated name for nested namespaces.\n            /// </param>\n            /// <param name=\"members\" type=\"Object\" locid=\"WinJS.Namespace.define_p:members\">\n            /// The members of the new namespace.\n            /// </param>\n            /// <returns type=\"Object\" locid=\"WinJS.Namespace.define_returnValue\">\n            /// The newly-defined namespace.\n            /// </returns>\n            /// </signature>\n            return defineWithParent(global, name, members);\n        }\n\n        // Establish members of the \"WinJS.Namespace\" namespace\n        Object.defineProperties(_rootNamespace.Namespace, {\n\n            defineWithParent: { value: defineWithParent, writable: true, enumerable: true, configurable: true },\n\n            define: { value: define, writable: true, enumerable: true, configurable: true }\n\n        });\n\n    })(\"WinJS\");\n\n    (function (WinJS) {\n\n        function define(constructor, instanceMembers, staticMembers) {\n            /// <signature helpKeyword=\"WinJS.Class.define\">\n            /// <summary locid=\"WinJS.Class.define\">\n            /// Defines a class using the given constructor and the specified instance members.\n            /// </summary>\n            /// <param name=\"constructor\" type=\"Function\" locid=\"WinJS.Class.define_p:constructor\">\n            /// A constructor function that is used to instantiate this class.\n            /// </param>\n            /// <param name=\"instanceMembers\" type=\"Object\" locid=\"WinJS.Class.define_p:instanceMembers\">\n            /// The set of instance fields, properties, and methods made available on the class.\n            /// </param>\n            /// <param name=\"staticMembers\" type=\"Object\" locid=\"WinJS.Class.define_p:staticMembers\">\n            /// The set of static fields, properties, and methods made available on the class.\n            /// </param>\n            /// <returns type=\"Function\" locid=\"WinJS.Class.define_returnValue\">\n            /// The newly-defined class.\n            /// </returns>\n            /// </signature>\n            constructor = constructor || function () { };\n            WinJS.Utilities.markSupportedForProcessing(constructor);\n            if (instanceMembers) {\n                initializeProperties(constructor.prototype, instanceMembers);\n            }\n            if (staticMembers) {\n                initializeProperties(constructor, staticMembers);\n            }\n            return constructor;\n        }\n\n        function derive(baseClass, constructor, instanceMembers, staticMembers) {\n            /// <signature helpKeyword=\"WinJS.Class.derive\">\n            /// <summary locid=\"WinJS.Class.derive\">\n            /// Creates a sub-class based on the supplied baseClass parameter, using prototypal inheritance.\n            /// </summary>\n            /// <param name=\"baseClass\" type=\"Function\" locid=\"WinJS.Class.derive_p:baseClass\">\n            /// The class to inherit from.\n            /// </param>\n            /// <param name=\"constructor\" type=\"Function\" locid=\"WinJS.Class.derive_p:constructor\">\n            /// A constructor function that is used to instantiate this class.\n            /// </param>\n            /// <param name=\"instanceMembers\" type=\"Object\" locid=\"WinJS.Class.derive_p:instanceMembers\">\n            /// The set of instance fields, properties, and methods to be made available on the class.\n            /// </param>\n            /// <param name=\"staticMembers\" type=\"Object\" locid=\"WinJS.Class.derive_p:staticMembers\">\n            /// The set of static fields, properties, and methods to be made available on the class.\n            /// </param>\n            /// <returns type=\"Function\" locid=\"WinJS.Class.derive_returnValue\">\n            /// The newly-defined class.\n            /// </returns>\n            /// </signature>\n            if (baseClass) {\n                constructor = constructor || function () { };\n                var basePrototype = baseClass.prototype;\n                constructor.prototype = Object.create(basePrototype);\n                WinJS.Utilities.markSupportedForProcessing(constructor);\n                Object.defineProperty(constructor.prototype, \"constructor\", { value: constructor, writable: true, configurable: true, enumerable: true });\n                if (instanceMembers) {\n                    initializeProperties(constructor.prototype, instanceMembers);\n                }\n                if (staticMembers) {\n                    initializeProperties(constructor, staticMembers);\n                }\n                return constructor;\n            } else {\n                return define(constructor, instanceMembers, staticMembers);\n            }\n        }\n\n        function mix(constructor) {\n            /// <signature helpKeyword=\"WinJS.Class.mix\">\n            /// <summary locid=\"WinJS.Class.mix\">\n            /// Defines a class using the given constructor and the union of the set of instance members\n            /// specified by all the mixin objects. The mixin parameter list is of variable length.\n            /// </summary>\n            /// <param name=\"constructor\" locid=\"WinJS.Class.mix_p:constructor\">\n            /// A constructor function that is used to instantiate this class.\n            /// </param>\n            /// <returns type=\"Function\" locid=\"WinJS.Class.mix_returnValue\">\n            /// The newly-defined class.\n            /// </returns>\n            /// </signature>\n            constructor = constructor || function () { };\n            var i, len;\n            for (i = 1, len = arguments.length; i < len; i++) {\n                initializeProperties(constructor.prototype, arguments[i]);\n            }\n            return constructor;\n        }\n\n        // Establish members of \"WinJS.Class\" namespace\n        WinJS.Namespace.define(\"WinJS.Class\", {\n            define: define,\n            derive: derive,\n            mix: mix\n        });\n\n    })(global.WinJS);\n\n})(this);\n\n\n(function baseUtilsInit(global, WinJS) {\n    \"use strict\";\n\n    var hasWinRT = !!global.Windows;\n\n    var strings = {\n\t\t// MONACOCHANGE\n        //get notSupportedForProcessing() { return WinJS.Resources._getWinJSString(\"base/notSupportedForProcessing\").value; }\n\t\tnotSupportedForProcessing: \"Value is not supported within a declarative processing context, if you want it to be supported mark it using WinJS.Utilities.markSupportedForProcessing. The value was: '{0}'\"\n    };\n\n    function nop(v) {\n        return v;\n    }\n\n    function getMemberFiltered(name, root, filter) {\n        return name.split(\".\").reduce(function (currentNamespace, name) {\n            if (currentNamespace) {\n                return filter(currentNamespace[name]);\n            }\n            return null;\n        }, root);\n    }\n\n    // Establish members of \"WinJS.Utilities\" namespace\n    WinJS.Namespace.define(\"WinJS.Utilities\", {\n        // Used for mocking in tests\n        _setHasWinRT: {\n            value: function (value) {\n                hasWinRT = value;\n            },\n            configurable: false,\n            writable: false,\n            enumerable: false\n        },\n\n        /// <field type=\"Boolean\" locid=\"WinJS.Utilities.hasWinRT\" helpKeyword=\"WinJS.Utilities.hasWinRT\">Determine if WinRT is accessible in this script context.</field>\n        hasWinRT: {\n            get: function () { return hasWinRT; },\n            configurable: false,\n            enumerable: true\n        },\n\n        _getMemberFiltered: getMemberFiltered,\n\n        getMember: function (name, root) {\n            /// <signature helpKeyword=\"WinJS.Utilities.getMember\">\n            /// <summary locid=\"WinJS.Utilities.getMember\">\n            /// Gets the leaf-level type or namespace specified by the name parameter.\n            /// </summary>\n            /// <param name=\"name\" locid=\"WinJS.Utilities.getMember_p:name\">\n            /// The name of the member.\n            /// </param>\n            /// <param name=\"root\" locid=\"WinJS.Utilities.getMember_p:root\">\n            /// The root to start in. Defaults to the global object.\n            /// </param>\n            /// <returns type=\"Object\" locid=\"WinJS.Utilities.getMember_returnValue\">\n            /// The leaf-level type or namespace in the specified parent namespace.\n            /// </returns>\n            /// </signature>\n            if (!name) {\n                return null;\n            }\n            return getMemberFiltered(name, root || global, nop);\n        },\n\n        ready: function (callback, async) {\n            /// <signature helpKeyword=\"WinJS.Utilities.ready\">\n            /// <summary locid=\"WinJS.Utilities.ready\">\n            /// Ensures that the specified function executes only after the DOMContentLoaded event has fired\n            /// for the current page.\n            /// </summary>\n            /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Utilities.ready_returnValue\">A promise that completes after DOMContentLoaded has occurred.</returns>\n            /// <param name=\"callback\" optional=\"true\" locid=\"WinJS.Utilities.ready_p:callback\">\n            /// A function that executes after DOMContentLoaded has occurred.\n            /// </param>\n            /// <param name=\"async\" optional=\"true\" locid=\"WinJS.Utilities.ready_p:async\">\n            /// If true, the callback should be executed asynchronously.\n            /// </param>\n            /// </signature>\n            return new WinJS.Promise(function (c, e) {\n                function complete() {\n                    if (callback) {\n                        try {\n                            callback();\n                            c();\n                        }\n                        catch (err) {\n                            e(err);\n                        }\n                    }\n                    else {\n                        c();\n                    }\n                }\n\n                var readyState = WinJS.Utilities.testReadyState;\n                if (!readyState) {\n                    if (global.document) {\n                        readyState = document.readyState;\n                    }\n                    else {\n                        readyState = \"complete\";\n                    }\n                }\n                if (readyState === \"complete\" || (global.document && document.body !== null)) {\n                    if (async) {\n                        global.setImmediate(complete);\n                    }\n                    else {\n                        complete();\n                    }\n                }\n                else {\n                    global.addEventListener(\"DOMContentLoaded\", complete, false);\n                }\n            });\n        },\n\n        /// <field type=\"Boolean\" locid=\"WinJS.Utilities.strictProcessing\" helpKeyword=\"WinJS.Utilities.strictProcessing\">Determines if strict declarative processing is enabled in this script context.</field>\n        strictProcessing: {\n            get: function () { return true; },\n            configurable: false,\n            enumerable: true,\n        },\n\n        markSupportedForProcessing: {\n            value: function (func) {\n                /// <signature helpKeyword=\"WinJS.Utilities.markSupportedForProcessing\">\n                /// <summary locid=\"WinJS.Utilities.markSupportedForProcessing\">\n                /// Marks a function as being compatible with declarative processing, such as WinJS.UI.processAll\n                /// or WinJS.Binding.processAll.\n                /// </summary>\n                /// <param name=\"func\" type=\"Function\" locid=\"WinJS.Utilities.markSupportedForProcessing_p:func\">\n                /// The function to be marked as compatible with declarative processing.\n                /// </param>\n                /// <returns type=\"Function\" locid=\"WinJS.Utilities.markSupportedForProcessing_returnValue\">\n                /// The input function.\n                /// </returns>\n                /// </signature>\n                func.supportedForProcessing = true;\n                return func;\n            },\n            configurable: false,\n            writable: false,\n            enumerable: true\n        },\n\n        requireSupportedForProcessing: {\n            value: function (value) {\n                /// <signature helpKeyword=\"WinJS.Utilities.requireSupportedForProcessing\">\n                /// <summary locid=\"WinJS.Utilities.requireSupportedForProcessing\">\n                /// Asserts that the value is compatible with declarative processing, such as WinJS.UI.processAll\n                /// or WinJS.Binding.processAll. If it is not compatible an exception will be thrown.\n                /// </summary>\n                /// <param name=\"value\" type=\"Object\" locid=\"WinJS.Utilities.requireSupportedForProcessing_p:value\">\n                /// The value to be tested for compatibility with declarative processing. If the\n                /// value is a function it must be marked with a property 'supportedForProcessing'\n                /// with a value of true.\n                /// </param>\n                /// <returns type=\"Object\" locid=\"WinJS.Utilities.requireSupportedForProcessing_returnValue\">\n                /// The input value.\n                /// </returns>\n                /// </signature>\n                var supportedForProcessing = true;\n\n                supportedForProcessing = supportedForProcessing && !(value === global);\n                supportedForProcessing = supportedForProcessing && !(value === global.location);\n                supportedForProcessing = supportedForProcessing && !(value instanceof HTMLIFrameElement);\n                supportedForProcessing = supportedForProcessing && !(typeof value === \"function\" && !value.supportedForProcessing);\n\n                switch (global.frames.length) {\n                    case 0:\n                        break;\n\n                    case 1:\n                        supportedForProcessing = supportedForProcessing && !(value === global.frames[0]);\n                        break;\n\n                    default:\n                        for (var i = 0, len = global.frames.length; supportedForProcessing && i < len; i++) {\n                            supportedForProcessing = supportedForProcessing && !(value === global.frames[i]);\n                        }\n                        break;\n                }\n\n                if (supportedForProcessing) {\n                    return value;\n                }\n\n                throw new WinJS.ErrorFromName(\"WinJS.Utilities.requireSupportedForProcessing\", WinJS.Resources._formatString(strings.notSupportedForProcessing, value));\n            },\n            configurable: false,\n            writable: false,\n            enumerable: true\n        },\n\n    });\n\n    WinJS.Namespace.define(\"WinJS\", {\n        validation: false,\n\n        strictProcessing: {\n            value: function () {\n                /// <signature helpKeyword=\"WinJS.strictProcessing\">\n                /// <summary locid=\"WinJS.strictProcessing\">\n                /// Strict processing is always enforced, this method has no effect.\n                /// </summary>\n                /// </signature>\n            },\n            configurable: false,\n            writable: false,\n            enumerable: false\n        },\n    });\n})(this, this.WinJS);\n\n\n(function logInit(WinJS) {\n    \"use strict\";\n\n    var spaceR = /\\s+/g;\n    var typeR = /^(error|warn|info|log)$/;\n\n    function format(message, tag, type) {\n        /// <signature helpKeyword=\"WinJS.Utilities.formatLog\">\n        /// <summary locid=\"WinJS.Utilities.formatLog\">\n        /// Adds tags and type to a logging message.\n        /// </summary>\n        /// <param name=\"message\" type=\"String\" locid=\"WinJS.Utilities.startLog_p:message\">The message to be formatted.</param>\n        /// <param name=\"tag\" type=\"String\" locid=\"WinJS.Utilities.startLog_p:tag\">The tag(s) to be applied to the message. Multiple tags should be separated by spaces.</param>\n        /// <param name=\"type\" type=\"String\" locid=\"WinJS.Utilities.startLog_p:type\">The type of the message.</param>\n        /// <returns type=\"String\" locid=\"WinJS.Utilities.startLog_returnValue\">The formatted message.</returns>\n        /// </signature>\n        var m = message;\n        if (typeof (m) === \"function\") { m = m(); }\n\n        return ((type && typeR.test(type)) ? (\"\") : (type ? (type + \": \") : \"\")) +\n            (tag ? tag.replace(spaceR, \":\") + \": \" : \"\") +\n            m;\n    }\n    function defAction(message, tag, type) {\n        var m = WinJS.Utilities.formatLog(message, tag, type);\n        console[(type && typeR.test(type)) ? type : \"log\"](m);\n    }\n    function escape(s) {\n        // \\s (whitespace) is used as separator, so don't escape it\n        return s.replace(/[-[\\]{}()*+?.,\\\\^$|#]/g, \"\\\\$&\");\n    }\n    WinJS.Namespace.define(\"WinJS.Utilities\", {\n        startLog: function (options) {\n            /// <signature helpKeyword=\"WinJS.Utilities.startLog\">\n            /// <summary locid=\"WinJS.Utilities.startLog\">\n            /// Configures a logger that writes messages containing the specified tags from WinJS.log to console.log.\n            /// </summary>\n            /// <param name=\"options\" type=\"String\" locid=\"WinJS.Utilities.startLog_p:options\">The tags for messages to log. Multiple tags should be separated by spaces.</param>\n            /// </signature>\n            /// <signature>\n            /// <summary locid=\"WinJS.Utilities.startLog2\">\n            /// Configure a logger to write WinJS.log output.\n            /// </summary>\n            /// <param name=\"options\" type=\"Object\" locid=\"WinJS.Utilities.startLog_p:options2\">\n            /// May contain .type, .tags, .excludeTags and .action properties.\n            /// - .type is a required tag.\n            /// - .excludeTags is a space-separated list of tags, any of which will result in a message not being logged.\n            /// - .tags is a space-separated list of tags, any of which will result in a message being logged.\n            /// - .action is a function that, if present, will be called with the log message, tags and type. The default is to log to the console.\n            /// </param>\n            /// </signature>\n            options = options || {};\n            if (typeof options === \"string\") {\n                options = { tags: options };\n            }\n            var el = options.type && new RegExp(\"^(\" + escape(options.type).replace(spaceR, \" \").split(\" \").join(\"|\") + \")$\");\n            var not = options.excludeTags && new RegExp(\"(^|\\\\s)(\" + escape(options.excludeTags).replace(spaceR, \" \").split(\" \").join(\"|\") + \")(\\\\s|$)\", \"i\");\n            var has = options.tags && new RegExp(\"(^|\\\\s)(\" + escape(options.tags).replace(spaceR, \" \").split(\" \").join(\"|\") + \")(\\\\s|$)\", \"i\");\n            var action = options.action || defAction;\n\n            if (!el && !not && !has && !WinJS.log) {\n                WinJS.log = action;\n                return;\n            }\n\n            var result = function (message, tag, type) {\n                if (!((el && !el.test(type))          // if the expected log level is not satisfied\n                    || (not && not.test(tag))         // if any of the excluded categories exist\n                    || (has && !has.test(tag)))) {    // if at least one of the included categories doesn't exist\n                        action(message, tag, type);\n                    }\n\n                result.next && result.next(message, tag, type);\n            };\n            result.next = WinJS.log;\n            WinJS.log = result;\n        },\n        stopLog: function () {\n            /// <signature helpKeyword=\"WinJS.Utilities.stopLog\">\n            /// <summary locid=\"WinJS.Utilities.stopLog\">\n            /// Removes the previously set up logger.\n            /// </summary>\n            /// </signature>\n            delete WinJS.log;\n        },\n        formatLog: format\n    });\n})(this.WinJS);\n\n(function eventsInit(WinJS, undefined) {\n    \"use strict\";\n\n\n    function createEventProperty(name) {\n        var eventPropStateName = \"_on\" + name + \"state\";\n\n        return {\n            get: function () {\n                var state = this[eventPropStateName];\n                return state && state.userHandler;\n            },\n            set: function (handler) {\n                var state = this[eventPropStateName];\n                if (handler) {\n                    if (!state) {\n                        state = { wrapper: function (evt) { return state.userHandler(evt); }, userHandler: handler };\n                        Object.defineProperty(this, eventPropStateName, { value: state, enumerable: false, writable:true, configurable: true });\n                        this.addEventListener(name, state.wrapper, false);\n                    }\n                    state.userHandler = handler;\n                } else if (state) {\n                    this.removeEventListener(name, state.wrapper, false);\n                    this[eventPropStateName] = null;\n                }\n            },\n            enumerable: true\n        }\n    }\n\n    function createEventProperties(events) {\n        /// <signature helpKeyword=\"WinJS.Utilities.createEventProperties\">\n        /// <summary locid=\"WinJS.Utilities.createEventProperties\">\n        /// Creates an object that has one property for each name passed to the function.\n        /// </summary>\n        /// <param name=\"events\" locid=\"WinJS.Utilities.createEventProperties_p:events\">\n        /// A variable list of property names.\n        /// </param>\n        /// <returns type=\"Object\" locid=\"WinJS.Utilities.createEventProperties_returnValue\">\n        /// The object with the specified properties. The names of the properties are prefixed with 'on'.\n        /// </returns>\n        /// </signature>\n        var props = {};\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            var name = arguments[i];\n            props[\"on\" + name] = createEventProperty(name);\n        }\n        return props;\n    }\n\n    var EventMixinEvent = WinJS.Class.define(\n        function EventMixinEvent_ctor(type, detail, target) {\n            this.detail = detail;\n            this.target = target;\n            this.timeStamp = Date.now();\n            this.type = type;\n        },\n        {\n            bubbles: { value: false, writable: false },\n            cancelable: { value: false, writable: false },\n            currentTarget: {\n                get: function () { return this.target; }\n            },\n            defaultPrevented: {\n                get: function () { return this._preventDefaultCalled; }\n            },\n            trusted: { value: false, writable: false },\n            eventPhase: { value: 0, writable: false },\n            target: null,\n            timeStamp: null,\n            type: null,\n\n            preventDefault: function () {\n                this._preventDefaultCalled = true;\n            },\n            stopImmediatePropagation: function () {\n                this._stopImmediatePropagationCalled = true;\n            },\n            stopPropagation: function () {\n            }\n        }, {\n            supportedForProcessing: false,\n        }\n    );\n\n    var eventMixin = {\n        _listeners: null,\n\n        addEventListener: function (type, listener, useCapture) {\n            /// <signature helpKeyword=\"WinJS.Utilities.eventMixin.addEventListener\">\n            /// <summary locid=\"WinJS.Utilities.eventMixin.addEventListener\">\n            /// Adds an event listener to the control.\n            /// </summary>\n            /// <param name=\"type\" locid=\"WinJS.Utilities.eventMixin.addEventListener_p:type\">\n            /// The type (name) of the event.\n            /// </param>\n            /// <param name=\"listener\" locid=\"WinJS.Utilities.eventMixin.addEventListener_p:listener\">\n            /// The listener to invoke when the event gets raised.\n            /// </param>\n            /// <param name=\"useCapture\" locid=\"WinJS.Utilities.eventMixin.addEventListener_p:useCapture\">\n            /// if true initiates capture, otherwise false.\n            /// </param>\n            /// </signature>\n            useCapture = useCapture || false;\n            this._listeners = this._listeners || {};\n            var eventListeners = (this._listeners[type] = this._listeners[type] || []);\n            for (var i = 0, len = eventListeners.length; i < len; i++) {\n                var l = eventListeners[i];\n                if (l.useCapture === useCapture && l.listener === listener) {\n                    return;\n                }\n            }\n            eventListeners.push({ listener: listener, useCapture: useCapture });\n        },\n        dispatchEvent: function (type, details) {\n            /// <signature helpKeyword=\"WinJS.Utilities.eventMixin.dispatchEvent\">\n            /// <summary locid=\"WinJS.Utilities.eventMixin.dispatchEvent\">\n            /// Raises an event of the specified type and with the specified additional properties.\n            /// </summary>\n            /// <param name=\"type\" locid=\"WinJS.Utilities.eventMixin.dispatchEvent_p:type\">\n            /// The type (name) of the event.\n            /// </param>\n            /// <param name=\"details\" locid=\"WinJS.Utilities.eventMixin.dispatchEvent_p:details\">\n            /// The set of additional properties to be attached to the event object when the event is raised.\n            /// </param>\n            /// <returns type=\"Boolean\" locid=\"WinJS.Utilities.eventMixin.dispatchEvent_returnValue\">\n            /// true if preventDefault was called on the event.\n            /// </returns>\n            /// </signature>\n            var listeners = this._listeners && this._listeners[type];\n            if (listeners) {\n                var eventValue = new EventMixinEvent(type, details, this);\n                // Need to copy the array to protect against people unregistering while we are dispatching\n                listeners = listeners.slice(0, listeners.length);\n                for (var i = 0, len = listeners.length; i < len && !eventValue._stopImmediatePropagationCalled; i++) {\n                    listeners[i].listener(eventValue);\n                }\n                return eventValue.defaultPrevented || false;\n            }\n            return false;\n        },\n        removeEventListener: function (type, listener, useCapture) {\n            /// <signature helpKeyword=\"WinJS.Utilities.eventMixin.removeEventListener\">\n            /// <summary locid=\"WinJS.Utilities.eventMixin.removeEventListener\">\n            /// Removes an event listener from the control.\n            /// </summary>\n            /// <param name=\"type\" locid=\"WinJS.Utilities.eventMixin.removeEventListener_p:type\">\n            /// The type (name) of the event.\n            /// </param>\n            /// <param name=\"listener\" locid=\"WinJS.Utilities.eventMixin.removeEventListener_p:listener\">\n            /// The listener to remove.\n            /// </param>\n            /// <param name=\"useCapture\" locid=\"WinJS.Utilities.eventMixin.removeEventListener_p:useCapture\">\n            /// Specifies whether to initiate capture.\n            /// </param>\n            /// </signature>\n            useCapture = useCapture || false;\n            var listeners = this._listeners && this._listeners[type];\n            if (listeners) {\n                for (var i = 0, len = listeners.length; i < len; i++) {\n                    var l = listeners[i];\n                    if (l.listener === listener && l.useCapture === useCapture) {\n                        listeners.splice(i, 1);\n                        if (listeners.length === 0) {\n                            delete this._listeners[type];\n                        }\n                        // Only want to remove one element for each call to removeEventListener\n                        break;\n                    }\n                }\n            }\n        }\n    };\n\n    WinJS.Namespace.define(\"WinJS.Utilities\", {\n        _createEventProperty: createEventProperty,\n        createEventProperties: createEventProperties,\n        eventMixin: eventMixin\n    });\n\n})(this.WinJS);\n\n\n(function resourcesInit(global, WinJS, undefined) {\n    \"use strict\";\n\n    var resourceMap;\n    var mrtEventHook = false;\n    var contextChangedET = \"contextchanged\";\n\n    var ListenerType = WinJS.Class.mix(WinJS.Class.define(null, { /* empty */ }, { supportedForProcessing: false }), WinJS.Utilities.eventMixin);\n    var listeners = new ListenerType();\n\n    var strings = {\n\t\t// MONACO CHANGE\n        //get malformedFormatStringInput() { return WinJS.Resources._getWinJSString(\"base/malformedFormatStringInput\").value; },\n\t\tmalformedFormatStringInput: \"Malformed, did you mean to escape your '{0}'?\"\n    };\n\n    WinJS.Namespace.define(\"WinJS.Resources\", {\n        addEventListener: function (type, listener, useCapture) {\n            /// <signature helpKeyword=\"WinJS.Resources.addEventListener\">\n            /// <summary locid=\"WinJS.Resources.addEventListener\">\n            /// Registers an event handler for the specified event.\n            /// </summary>\n            /// <param name=\"type\" type=\"String\" locid=\"WinJS.Resources.addEventListener_p:type\">\n            /// The name of the event to handle.\n            /// </param>\n            /// <param name=\"listener\" type=\"Function\" locid=\"WinJS.Resources.addEventListener_p:listener\">\n            /// The listener to invoke when the event gets raised.\n            /// </param>\n            /// <param name=\"useCapture\" type=\"Boolean\" locid=\"WinJS.Resources.addEventListener_p:useCapture\">\n            /// Set to true to register the event handler for the capturing phase; set to false to register for the bubbling phase.\n            /// </param>\n            /// </signature>\n            if (WinJS.Utilities.hasWinRT && !mrtEventHook) {\n                if (type === contextChangedET) {\n                    try {\n                        Windows.ApplicationModel.Resources.Core.ResourceManager.current.defaultContext.qualifierValues.addEventListener(\"mapchanged\", function (e) {\n                            WinJS.Resources.dispatchEvent(contextChangedET, { qualifier: e.key, changed: e.target[e.key] });\n                        }, false);\n\n                        mrtEventHook = true;\n                    } catch (e) {\n                    }\n                }\n            }\n            listeners.addEventListener(type, listener, useCapture);\n        },\n        removeEventListener: listeners.removeEventListener.bind(listeners),\n        dispatchEvent: listeners.dispatchEvent.bind(listeners),\n\n        _formatString: function (string) {\n            var args = arguments;\n            if (args.length > 1) {\n                string = string.replace(/({{)|(}})|{(\\d+)}|({)|(})/g, function (unused, left, right, index, illegalLeft, illegalRight) {\n                    if (illegalLeft || illegalRight) { throw WinJS.Resources._formatString(strings.malformedFormatStringInput, illegalLeft || illegalRight); }\n                    return (left && \"{\") || (right && \"}\") || args[(index|0) + 1];\n                });\n            }\n            return string;\n        },\n\n        _getStringWinRT: function (resourceId) {\n            if (!resourceMap) {\n                var mainResourceMap = Windows.ApplicationModel.Resources.Core.ResourceManager.current.mainResourceMap;\n                try {\n                    resourceMap = mainResourceMap.getSubtree('Resources');\n                }\n                catch (e) {\n                }\n                if (!resourceMap) {\n                    resourceMap = mainResourceMap;\n                }\n            }\n\n            var stringValue;\n            var langValue;\n            var resCandidate;\n            try {\n                resCandidate = resourceMap.getValue(resourceId);\n                if (resCandidate) {\n                    stringValue = resCandidate.valueAsString;\n                    if (stringValue === undefined) {\n                        stringValue = resCandidate.toString();\n                    }\n                }\n            }\n            catch (e) {}\n\n            if (!stringValue) {\n                return { value: resourceId, empty: true };\n            }\n\n            try {\n                langValue = resCandidate.getQualifierValue(\"Language\");\n            }\n            catch (e) {\n                return { value: stringValue };\n            }\n\n            return { value: stringValue, lang: langValue };\n        },\n\n        _getStringJS: function (resourceId) {\n            var str = global.strings && global.strings[resourceId];\n            if (typeof str === \"string\") {\n                str = { value: str };\n            }\n            return str || { value: resourceId, empty: true };\n        }\n    });\n\n    Object.defineProperties(WinJS.Resources, WinJS.Utilities.createEventProperties(contextChangedET));\n\n    var getStringImpl;\n\n    WinJS.Resources.getString = function (resourceId) {\n        /// <signature helpKeyword=\"WinJS.Resources.getString\">\n        /// <summary locid=\"WinJS.Resources.getString\">\n        /// Retrieves the resource string that has the specified resource id.\n        /// </summary>\n        /// <param name=\"resourceId\" type=\"Number\" locid=\"WinJS.Resources.getString._p:resourceId\">\n        /// The resource id of the string to retrieve.\n        /// </param>\n        /// <returns type=\"Object\" locid=\"WinJS.Resources.getString_returnValue\">\n        /// An object that can contain these properties:\n        ///\n        /// value:\n        /// The value of the requested string. This property is always present.\n        ///\n        /// empty:\n        /// A value that specifies whether the requested string wasn't found.\n        /// If its true, the string wasn't found. If its false or undefined,\n        /// the requested string was found.\n        ///\n        /// lang:\n        /// The language of the string, if specified. This property is only present\n        /// for multi-language resources.\n        ///\n        /// </returns>\n        /// </signature>\n        getStringImpl =\n            getStringImpl ||\n                (WinJS.Utilities.hasWinRT\n                    ? WinJS.Resources._getStringWinRT\n                    : WinJS.Resources._getStringJS);\n\n        return getStringImpl(resourceId);\n    };\n\n\n})(this, this.WinJS);\n\n\n(function promiseInit(global, WinJS, undefined) {\n    \"use strict\";\n\n    global.Debug && (global.Debug.setNonUserCodeExceptions = true);\n\n    var ListenerType = WinJS.Class.mix(WinJS.Class.define(null, { /*empty*/ }, { supportedForProcessing: false }), WinJS.Utilities.eventMixin);\n    var promiseEventListeners = new ListenerType();\n    // make sure there is a listeners collection so that we can do a more trivial check below\n    promiseEventListeners._listeners = {};\n    var errorET = \"error\";\n    var canceledName = \"Canceled\";\n    var tagWithStack = false;\n    var tag = {\n        promise:            0x01,\n        thenPromise:        0x02,\n        errorPromise:       0x04,\n        exceptionPromise:   0x08,\n        completePromise:    0x10,\n    };\n    tag.all = tag.promise | tag.thenPromise | tag.errorPromise | tag.exceptionPromise | tag.completePromise;\n\n    //\n    // Global error counter, for each error which enters the system we increment this once and then\n    // the error number travels with the error as it traverses the tree of potential handlers.\n    //\n    // When someone has registered to be told about errors (WinJS.Promise.callonerror) promises\n    // which are in error will get tagged with a ._errorId field. This tagged field is the\n    // contract by which nested promises with errors will be identified as chaining for the\n    // purposes of the callonerror semantics. If a nested promise in error is encountered without\n    // a ._errorId it will be assumed to be foreign and treated as an interop boundary and\n    // a new error id will be minted.\n    //\n    var error_number = 1;\n\n    //\n    // The state machine has a interesting hiccup in it with regards to notification, in order\n    // to flatten out notification and avoid recursion for synchronous completion we have an\n    // explicit set of *_notify states which are responsible for notifying their entire tree\n    // of children. They can do this because they know that immediate children are always\n    // ThenPromise instances and we can therefore reach into their state to access the\n    // _listeners collection.\n    //\n    // So, what happens is that a Promise will be fulfilled through the _completed or _error\n    // messages at which point it will enter a *_notify state and be responsible for to move\n    // its children into an (as appropriate) success or error state and also notify that child's\n    // listeners of the state transition, until leaf notes are reached.\n    //\n\n    var state_created,              // -> working\n        state_working,              // -> error | error_notify | success | success_notify | canceled | waiting\n        state_waiting,              // -> error | error_notify | success | success_notify | waiting_canceled\n        state_waiting_canceled,     // -> error | error_notify | success | success_notify | canceling\n        state_canceled,             // -> error | error_notify | success | success_notify | canceling\n        state_canceling,            // -> error_notify\n        state_success_notify,       // -> success\n        state_success,              // -> .\n        state_error_notify,         // -> error\n        state_error;                // -> .\n\n    // Noop function, used in the various states to indicate that they don't support a given\n    // message. Named with the somewhat cute name '_' because it reads really well in the states.\n\n    function _() { }\n\n    // Initial state\n    //\n    state_created = {\n        name: \"created\",\n        enter: function (promise) {\n            promise._setState(state_working);\n        },\n        cancel: _,\n        done: _,\n        then: _,\n        _completed: _,\n        _error: _,\n        _notify: _,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Ready state, waiting for a message (completed/error/progress), able to be canceled\n    //\n    state_working = {\n        name: \"working\",\n        enter: _,\n        cancel: function (promise) {\n            promise._setState(state_canceled);\n        },\n        done: done,\n        then: then,\n        _completed: completed,\n        _error: error,\n        _notify: _,\n        _progress: progress,\n        _setCompleteValue: setCompleteValue,\n        _setErrorValue: setErrorValue\n    };\n\n    // Waiting state, if a promise is completed with a value which is itself a promise\n    // (has a then() method) it signs up to be informed when that child promise is\n    // fulfilled at which point it will be fulfilled with that value.\n    //\n    state_waiting = {\n        name: \"waiting\",\n        enter: function (promise) {\n            var waitedUpon = promise._value;\n            var error = function (value) {\n                if (waitedUpon._errorId) {\n                    promise._chainedError(value, waitedUpon);\n                } else {\n                    // Because this is an interop boundary we want to indicate that this\n                    //  error has been handled by the promise infrastructure before we\n                    //  begin a new handling chain.\n                    //\n                    callonerror(promise, value, detailsForHandledError, waitedUpon, error);\n                    promise._error(value);\n                }\n            };\n            error.handlesOnError = true;\n            waitedUpon.then(\n                promise._completed.bind(promise),\n                error,\n                promise._progress.bind(promise)\n            );\n        },\n        cancel: function (promise) {\n            promise._setState(state_waiting_canceled);\n        },\n        done: done,\n        then: then,\n        _completed: completed,\n        _error: error,\n        _notify: _,\n        _progress: progress,\n        _setCompleteValue: setCompleteValue,\n        _setErrorValue: setErrorValue\n    };\n\n    // Waiting canceled state, when a promise has been in a waiting state and receives a\n    // request to cancel its pending work it will forward that request to the child promise\n    // and then waits to be informed of the result. This promise moves itself into the\n    // canceling state but understands that the child promise may instead push it to a\n    // different state.\n    //\n    state_waiting_canceled = {\n        name: \"waiting_canceled\",\n        enter: function (promise) {\n            // Initiate a transition to canceling. Triggering a cancel on the promise\n            // that we are waiting upon may result in a different state transition\n            // before the state machine pump runs again.\n            promise._setState(state_canceling);\n            var waitedUpon = promise._value;\n            if (waitedUpon.cancel) {\n                waitedUpon.cancel();\n            }\n        },\n        cancel: _,\n        done: done,\n        then: then,\n        _completed: completed,\n        _error: error,\n        _notify: _,\n        _progress: progress,\n        _setCompleteValue: setCompleteValue,\n        _setErrorValue: setErrorValue\n    };\n\n    // Canceled state, moves to the canceling state and then tells the promise to do\n    // whatever it might need to do on cancelation.\n    //\n    state_canceled = {\n        name: \"canceled\",\n        enter: function (promise) {\n            // Initiate a transition to canceling. The _cancelAction may change the state\n            // before the state machine pump runs again.\n            promise._setState(state_canceling);\n            promise._cancelAction();\n        },\n        cancel: _,\n        done: done,\n        then: then,\n        _completed: completed,\n        _error: error,\n        _notify: _,\n        _progress: progress,\n        _setCompleteValue: setCompleteValue,\n        _setErrorValue: setErrorValue\n    };\n\n    // Canceling state, commits to the promise moving to an error state with an error\n    // object whose 'name' and 'message' properties contain the string \"Canceled\"\n    //\n    state_canceling = {\n        name: \"canceling\",\n        enter: function (promise) {\n            var error = new Error(canceledName);\n            error.name = error.message;\n            promise._value = error;\n            promise._setState(state_error_notify);\n        },\n        cancel: _,\n        done: _,\n        then: _,\n        _completed: _,\n        _error: _,\n        _notify: _,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Success notify state, moves a promise to the success state and notifies all children\n    //\n    state_success_notify = {\n        name: \"complete_notify\",\n        enter: function (promise) {\n            promise.done = CompletePromise.prototype.done;\n            promise.then = CompletePromise.prototype.then;\n            if (promise._listeners) {\n                var queue = [promise];\n                var p;\n                while (queue.length) {\n                    p = queue.pop();\n                    p._state._notify(p, queue);\n                }\n            }\n            promise._setState(state_success);\n        },\n        cancel: _,\n        done: null, /*error to get here */\n        then: null, /*error to get here */\n        _completed: _,\n        _error: _,\n        _notify: notifySuccess,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Success state, moves a promise to the success state and does NOT notify any children.\n    // Some upstream promise is owning the notification pass.\n    //\n    state_success = {\n        name: \"success\",\n        enter: function (promise) {\n            promise.done = CompletePromise.prototype.done;\n            promise.then = CompletePromise.prototype.then;\n            promise._cleanupAction();\n        },\n        cancel: _,\n        done: null, /*error to get here */\n        then: null, /*error to get here */\n        _completed: _,\n        _error: _,\n        _notify: notifySuccess,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Error notify state, moves a promise to the error state and notifies all children\n    //\n    state_error_notify = {\n        name: \"error_notify\",\n        enter: function (promise) {\n            promise.done = ErrorPromise.prototype.done;\n            promise.then = ErrorPromise.prototype.then;\n            if (promise._listeners) {\n                var queue = [promise];\n                var p;\n                while (queue.length) {\n                    p = queue.pop();\n                    p._state._notify(p, queue);\n                }\n            }\n            promise._setState(state_error);\n        },\n        cancel: _,\n        done: null, /*error to get here*/\n        then: null, /*error to get here*/\n        _completed: _,\n        _error: _,\n        _notify: notifyError,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Error state, moves a promise to the error state and does NOT notify any children.\n    // Some upstream promise is owning the notification pass.\n    //\n    state_error = {\n        name: \"error\",\n        enter: function (promise) {\n            promise.done = ErrorPromise.prototype.done;\n            promise.then = ErrorPromise.prototype.then;\n            promise._cleanupAction();\n        },\n        cancel: _,\n        done: null, /*error to get here*/\n        then: null, /*error to get here*/\n        _completed: _,\n        _error: _,\n        _notify: notifyError,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    //\n    // The statemachine implementation follows a very particular pattern, the states are specified\n    // as static stateless bags of functions which are then indirected through the state machine\n    // instance (a Promise). As such all of the functions on each state have the promise instance\n    // passed to them explicitly as a parameter and the Promise instance members do a little\n    // dance where they indirect through the state and insert themselves in the argument list.\n    //\n    // We could instead call directly through the promise states however then every caller\n    // would have to remember to do things like pumping the state machine to catch state transitions.\n    //\n\n    var PromiseStateMachine = WinJS.Class.define(null, {\n        _listeners: null,\n        _nextState: null,\n        _state: null,\n        _value: null,\n\n        cancel: function () {\n            /// <signature helpKeyword=\"WinJS.PromiseStateMachine.cancel\">\n            /// <summary locid=\"WinJS.PromiseStateMachine.cancel\">\n            /// Attempts to cancel the fulfillment of a promised value. If the promise hasn't\n            /// already been fulfilled and cancellation is supported, the promise enters\n            /// the error state with a value of Error(\"Canceled\").\n            /// </summary>\n            /// </signature>\n            this._state.cancel(this);\n            this._run();\n        },\n        done: function Promise_done(onComplete, onError, onProgress) {\n            /// <signature helpKeyword=\"WinJS.PromiseStateMachine.done\">\n            /// <summary locid=\"WinJS.PromiseStateMachine.done\">\n            /// Allows you to specify the work to be done on the fulfillment of the promised value,\n            /// the error handling to be performed if the promise fails to fulfill\n            /// a value, and the handling of progress notifications along the way.\n            ///\n            /// After the handlers have finished executing, this function throws any error that would have been returned\n            /// from then() as a promise in the error state.\n            /// </summary>\n            /// <param name=\"onComplete\" type=\"Function\" locid=\"WinJS.PromiseStateMachine.done_p:onComplete\">\n            /// The function to be called if the promise is fulfilled successfully with a value.\n            /// The fulfilled value is passed as the single argument. If the value is null,\n            /// the fulfilled value is returned. The value returned\n            /// from the function becomes the fulfilled value of the promise returned by\n            /// then(). If an exception is thrown while executing the function, the promise returned\n            /// by then() moves into the error state.\n            /// </param>\n            /// <param name=\"onError\" type=\"Function\" optional=\"true\" locid=\"WinJS.PromiseStateMachine.done_p:onError\">\n            /// The function to be called if the promise is fulfilled with an error. The error\n            /// is passed as the single argument. If it is null, the error is forwarded.\n            /// The value returned from the function is the fulfilled value of the promise returned by then().\n            /// </param>\n            /// <param name=\"onProgress\" type=\"Function\" optional=\"true\" locid=\"WinJS.PromiseStateMachine.done_p:onProgress\">\n            /// the function to be called if the promise reports progress. Data about the progress\n            /// is passed as the single argument. Promises are not required to support\n            /// progress.\n            /// </param>\n            /// </signature>\n            this._state.done(this, onComplete, onError, onProgress);\n        },\n        then: function Promise_then(onComplete, onError, onProgress) {\n            /// <signature helpKeyword=\"WinJS.PromiseStateMachine.then\">\n            /// <summary locid=\"WinJS.PromiseStateMachine.then\">\n            /// Allows you to specify the work to be done on the fulfillment of the promised value,\n            /// the error handling to be performed if the promise fails to fulfill\n            /// a value, and the handling of progress notifications along the way.\n            /// </summary>\n            /// <param name=\"onComplete\" type=\"Function\" locid=\"WinJS.PromiseStateMachine.then_p:onComplete\">\n            /// The function to be called if the promise is fulfilled successfully with a value.\n            /// The value is passed as the single argument. If the value is null, the value is returned.\n            /// The value returned from the function becomes the fulfilled value of the promise returned by\n            /// then(). If an exception is thrown while this function is being executed, the promise returned\n            /// by then() moves into the error state.\n            /// </param>\n            /// <param name=\"onError\" type=\"Function\" optional=\"true\" locid=\"WinJS.PromiseStateMachine.then_p:onError\">\n            /// The function to be called if the promise is fulfilled with an error. The error\n            /// is passed as the single argument. If it is null, the error is forwarded.\n            /// The value returned from the function becomes the fulfilled value of the promise returned by then().\n            /// </param>\n            /// <param name=\"onProgress\" type=\"Function\" optional=\"true\" locid=\"WinJS.PromiseStateMachine.then_p:onProgress\">\n            /// The function to be called if the promise reports progress. Data about the progress\n            /// is passed as the single argument. Promises are not required to support\n            /// progress.\n            /// </param>\n            /// <returns type=\"WinJS.Promise\" locid=\"WinJS.PromiseStateMachine.then_returnValue\">\n            /// The promise whose value is the result of executing the complete or\n            /// error function.\n            /// </returns>\n            /// </signature>\n            return this._state.then(this, onComplete, onError, onProgress);\n        },\n\n        _chainedError: function (value, context) {\n            var result = this._state._error(this, value, detailsForChainedError, context);\n            this._run();\n            return result;\n        },\n        _completed: function (value) {\n            var result = this._state._completed(this, value);\n            this._run();\n            return result;\n        },\n        _error: function (value) {\n            var result = this._state._error(this, value, detailsForError);\n            this._run();\n            return result;\n        },\n        _progress: function (value) {\n            this._state._progress(this, value);\n        },\n        _setState: function (state) {\n            this._nextState = state;\n        },\n        _setCompleteValue: function (value) {\n            this._state._setCompleteValue(this, value);\n            this._run();\n        },\n        _setChainedErrorValue: function (value, context) {\n            var result = this._state._setErrorValue(this, value, detailsForChainedError, context);\n            this._run();\n            return result;\n        },\n        _setExceptionValue: function (value) {\n            var result = this._state._setErrorValue(this, value, detailsForException);\n            this._run();\n            return result;\n        },\n        _run: function () {\n            while (this._nextState) {\n                this._state = this._nextState;\n                this._nextState = null;\n                this._state.enter(this);\n            }\n        }\n    }, {\n        supportedForProcessing: false\n    });\n\n    //\n    // Implementations of shared state machine code.\n    //\n\n    function completed(promise, value) {\n        var targetState;\n        if (value && typeof value === \"object\" && typeof value.then === \"function\") {\n            targetState = state_waiting;\n        } else {\n            targetState = state_success_notify;\n        }\n        promise._value = value;\n        promise._setState(targetState);\n    }\n    function createErrorDetails(exception, error, promise, id, parent, handler) {\n        return {\n            exception: exception,\n            error: error,\n            promise: promise,\n            handler: handler,\n            id: id,\n            parent: parent\n        };\n    }\n    function detailsForHandledError(promise, errorValue, context, handler) {\n        var exception = context._isException;\n        var errorId = context._errorId;\n        return createErrorDetails(\n            exception ? errorValue : null,\n            exception ? null : errorValue,\n            promise,\n            errorId,\n            context,\n            handler\n        );\n    }\n    function detailsForChainedError(promise, errorValue, context) {\n        var exception = context._isException;\n        var errorId = context._errorId;\n        setErrorInfo(promise, errorId, exception);\n        return createErrorDetails(\n            exception ? errorValue : null,\n            exception ? null : errorValue,\n            promise,\n            errorId,\n            context\n        );\n    }\n    function detailsForError(promise, errorValue) {\n        var errorId = ++error_number;\n        setErrorInfo(promise, errorId);\n        return createErrorDetails(\n            null,\n            errorValue,\n            promise,\n            errorId\n        );\n    }\n    function detailsForException(promise, exceptionValue) {\n        var errorId = ++error_number;\n        setErrorInfo(promise, errorId, true);\n        return createErrorDetails(\n            exceptionValue,\n            null,\n            promise,\n            errorId\n        );\n    }\n    function done(promise, onComplete, onError, onProgress) {\n        pushListener(promise, { c: onComplete, e: onError, p: onProgress });\n    }\n    function error(promise, value, onerrorDetails, context) {\n        promise._value = value;\n        callonerror(promise, value, onerrorDetails, context);\n        promise._setState(state_error_notify);\n    }\n    function notifySuccess(promise, queue) {\n        var value = promise._value;\n        var listeners = promise._listeners;\n        if (!listeners) {\n            return;\n        }\n        promise._listeners = null;\n        var i, len;\n        for (i = 0, len = Array.isArray(listeners) ? listeners.length : 1; i < len; i++) {\n            var listener = len === 1 ? listeners : listeners[i];\n            var onComplete = listener.c;\n            var target = listener.promise;\n            if (target) {\n                try {\n                    target._setCompleteValue(onComplete ? onComplete(value) : value);\n                } catch (ex) {\n                    target._setExceptionValue(ex);\n                }\n                if (target._state !== state_waiting && target._listeners) {\n                    queue.push(target);\n                }\n            } else {\n                CompletePromise.prototype.done.call(promise, onComplete);\n            }\n        }\n    }\n    function notifyError(promise, queue) {\n        var value = promise._value;\n        var listeners = promise._listeners;\n        if (!listeners) {\n            return;\n        }\n        promise._listeners = null;\n        var i, len;\n        for (i = 0, len = Array.isArray(listeners) ? listeners.length : 1; i < len; i++) {\n            var listener = len === 1 ? listeners : listeners[i];\n            var onError = listener.e;\n            var target = listener.promise;\n            if (target) {\n                try {\n                    if (onError) {\n                        if (!onError.handlesOnError) {\n                            callonerror(target, value, detailsForHandledError, promise, onError);\n                        }\n                        target._setCompleteValue(onError(value))\n                    } else {\n                        target._setChainedErrorValue(value, promise);\n                    }\n                } catch (ex) {\n                    target._setExceptionValue(ex);\n                }\n                if (target._state !== state_waiting && target._listeners) {\n                    queue.push(target);\n                }\n            } else {\n                ErrorPromise.prototype.done.call(promise, null, onError);\n            }\n        }\n    }\n    function callonerror(promise, value, onerrorDetailsGenerator, context, handler) {\n        if (promiseEventListeners._listeners[errorET]) {\n            if (value instanceof Error && value.message === canceledName) {\n                return;\n            }\n            promiseEventListeners.dispatchEvent(errorET, onerrorDetailsGenerator(promise, value, context, handler));\n        }\n    }\n    function progress(promise, value) {\n        var listeners = promise._listeners;\n        if (listeners) {\n            var i, len;\n            for (i = 0, len = Array.isArray(listeners) ? listeners.length : 1; i < len; i++) {\n                var listener = len === 1 ? listeners : listeners[i];\n                var onProgress = listener.p;\n                if (onProgress) {\n                    try { onProgress(value); } catch (ex) { }\n                }\n                if (!(listener.c || listener.e) && listener.promise) {\n                    listener.promise._progress(value);\n                }\n            }\n        }\n    }\n    function pushListener(promise, listener) {\n        var listeners = promise._listeners;\n        if (listeners) {\n            // We may have either a single listener (which will never be wrapped in an array)\n            // or 2+ listeners (which will be wrapped). Since we are now adding one more listener\n            // we may have to wrap the single listener before adding the second.\n            listeners = Array.isArray(listeners) ? listeners : [listeners];\n            listeners.push(listener);\n        } else {\n            listeners = listener;\n        }\n        promise._listeners = listeners;\n    }\n    // The difference beween setCompleteValue()/setErrorValue() and complete()/error() is that setXXXValue() moves\n    // a promise directly to the success/error state without starting another notification pass (because one\n    // is already ongoing).\n    function setErrorInfo(promise, errorId, isException) {\n        promise._isException = isException || false;\n        promise._errorId = errorId;\n    }\n    function setErrorValue(promise, value, onerrorDetails, context) {\n        promise._value = value;\n        callonerror(promise, value, onerrorDetails, context);\n        promise._setState(state_error);\n    }\n    function setCompleteValue(promise, value) {\n        var targetState;\n        if (value && typeof value === \"object\" && typeof value.then === \"function\") {\n            targetState = state_waiting;\n        } else {\n            targetState = state_success;\n        }\n        promise._value = value;\n        promise._setState(targetState);\n    }\n    function then(promise, onComplete, onError, onProgress) {\n        var result = new ThenPromise(promise);\n        pushListener(promise, { promise: result, c: onComplete, e: onError, p: onProgress });\n        return result;\n    }\n\n    //\n    // Internal implementation detail promise, ThenPromise is created when a promise needs\n    // to be returned from a then() method.\n    //\n    var ThenPromise = WinJS.Class.derive(PromiseStateMachine,\n        function (creator) {\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.thenPromise))) {\n                this._stack = WinJS.Promise._getStack();\n            }\n\n            this._creator = creator;\n            this._setState(state_created);\n            this._run();\n        }, {\n            _creator: null,\n\n            _cancelAction: function () { if (this._creator) { this._creator.cancel(); } },\n            _cleanupAction: function () { this._creator = null; }\n        }, {\n            supportedForProcessing: false\n        }\n    );\n\n    //\n    // Slim promise implementations for already completed promises, these are created\n    // under the hood on synchronous completion paths as well as by WinJS.Promise.wrap\n    // and WinJS.Promise.wrapError.\n    //\n\n    var ErrorPromise = WinJS.Class.define(\n        function ErrorPromise_ctor(value) {\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.errorPromise))) {\n                this._stack = WinJS.Promise._getStack();\n            }\n\n            this._value = value;\n            callonerror(this, value, detailsForError);\n        }, {\n            cancel: function () {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.cancel\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.cancel\">\n                /// Attempts to cancel the fulfillment of a promised value. If the promise hasn't\n                /// already been fulfilled and cancellation is supported, the promise enters\n                /// the error state with a value of Error(\"Canceled\").\n                /// </summary>\n                /// </signature>\n            },\n            done: function ErrorPromise_done(unused, onError) {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.done\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.done\">\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\n                /// the error handling to be performed if the promise fails to fulfill\n                /// a value, and the handling of progress notifications along the way.\n                ///\n                /// After the handlers have finished executing, this function throws any error that would have been returned\n                /// from then() as a promise in the error state.\n                /// </summary>\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.done_p:onComplete\">\n                /// The function to be called if the promise is fulfilled successfully with a value.\n                /// The fulfilled value is passed as the single argument. If the value is null,\n                /// the fulfilled value is returned. The value returned\n                /// from the function becomes the fulfilled value of the promise returned by\n                /// then(). If an exception is thrown while executing the function, the promise returned\n                /// by then() moves into the error state.\n                /// </param>\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onError\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument. If it is null, the error is forwarded.\n                /// The value returned from the function is the fulfilled value of the promise returned by then().\n                /// </param>\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onProgress\">\n                /// the function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// </signature>\n                var value = this._value;\n                if (onError) {\n                    try {\n                        if (!onError.handlesOnError) {\n                            callonerror(null, value, detailsForHandledError, this, onError);\n                        }\n                        var result = onError(value);\n                        if (result && typeof result === \"object\" && typeof result.done === \"function\") {\n                            // If a promise is returned we need to wait on it.\n                            result.done();\n                        }\n                        return;\n                    } catch (ex) {\n                        value = ex;\n                    }\n                }\n                if (value instanceof Error && value.message === canceledName) {\n                    // suppress cancel\n                    return;\n                }\n                // force the exception to be thrown asyncronously to avoid any try/catch blocks\n                //\n                setImmediate(function () {\n                    throw value;\n                });\n            },\n            then: function ErrorPromise_then(unused, onError) {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.then\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.then\">\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\n                /// the error handling to be performed if the promise fails to fulfill\n                /// a value, and the handling of progress notifications along the way.\n                /// </summary>\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.then_p:onComplete\">\n                /// The function to be called if the promise is fulfilled successfully with a value.\n                /// The value is passed as the single argument. If the value is null, the value is returned.\n                /// The value returned from the function becomes the fulfilled value of the promise returned by\n                /// then(). If an exception is thrown while this function is being executed, the promise returned\n                /// by then() moves into the error state.\n                /// </param>\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onError\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument. If it is null, the error is forwarded.\n                /// The value returned from the function becomes the fulfilled value of the promise returned by then().\n                /// </param>\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onProgress\">\n                /// The function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.PromiseStateMachine.then_returnValue\">\n                /// The promise whose value is the result of executing the complete or\n                /// error function.\n                /// </returns>\n                /// </signature>\n\n                // If the promise is already in a error state and no error handler is provided\n                // we optimize by simply returning the promise instead of creating a new one.\n                //\n                if (!onError) { return this; }\n                var result;\n                var value = this._value;\n                try {\n                    if (!onError.handlesOnError) {\n                        callonerror(null, value, detailsForHandledError, this, onError);\n                    }\n                    result = new CompletePromise(onError(value));\n                } catch (ex) {\n                    // If the value throw from the error handler is the same as the value\n                    // provided to the error handler then there is no need for a new promise.\n                    //\n                    if (ex === value) {\n                        result = this;\n                    } else {\n                        result = new ExceptionPromise(ex);\n                    }\n                }\n                return result;\n            }\n        }, {\n            supportedForProcessing: false\n        }\n    );\n\n    var ExceptionPromise = WinJS.Class.derive(ErrorPromise,\n        function ExceptionPromise_ctor(value) {\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.exceptionPromise))) {\n                this._stack = WinJS.Promise._getStack();\n            }\n\n            this._value = value;\n            callonerror(this, value, detailsForException);\n        }, {\n            /* empty */\n        }, {\n            supportedForProcessing: false\n        }\n    );\n\n    var CompletePromise = WinJS.Class.define(\n        function CompletePromise_ctor(value) {\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.completePromise))) {\n                this._stack = WinJS.Promise._getStack();\n            }\n\n            if (value && typeof value === \"object\" && typeof value.then === \"function\") {\n                var result = new ThenPromise(null);\n                result._setCompleteValue(value);\n                return result;\n            }\n            this._value = value;\n        }, {\n            cancel: function () {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.cancel\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.cancel\">\n                /// Attempts to cancel the fulfillment of a promised value. If the promise hasn't\n                /// already been fulfilled and cancellation is supported, the promise enters\n                /// the error state with a value of Error(\"Canceled\").\n                /// </summary>\n                /// </signature>\n            },\n            done: function CompletePromise_done(onComplete) {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.done\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.done\">\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\n                /// the error handling to be performed if the promise fails to fulfill\n                /// a value, and the handling of progress notifications along the way.\n                ///\n                /// After the handlers have finished executing, this function throws any error that would have been returned\n                /// from then() as a promise in the error state.\n                /// </summary>\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.done_p:onComplete\">\n                /// The function to be called if the promise is fulfilled successfully with a value.\n                /// The fulfilled value is passed as the single argument. If the value is null,\n                /// the fulfilled value is returned. The value returned\n                /// from the function becomes the fulfilled value of the promise returned by\n                /// then(). If an exception is thrown while executing the function, the promise returned\n                /// by then() moves into the error state.\n                /// </param>\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onError\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument. If it is null, the error is forwarded.\n                /// The value returned from the function is the fulfilled value of the promise returned by then().\n                /// </param>\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onProgress\">\n                /// the function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// </signature>\n                if (!onComplete) { return; }\n                try {\n                    var result = onComplete(this._value);\n                    if (result && typeof result === \"object\" && typeof result.done === \"function\") {\n                        result.done();\n                    }\n                } catch (ex) {\n                    // force the exception to be thrown asynchronously to avoid any try/catch blocks\n                    setImmediate(function () {\n                        throw ex;\n                    });\n                }\n            },\n            then: function CompletePromise_then(onComplete) {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.then\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.then\">\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\n                /// the error handling to be performed if the promise fails to fulfill\n                /// a value, and the handling of progress notifications along the way.\n                /// </summary>\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.then_p:onComplete\">\n                /// The function to be called if the promise is fulfilled successfully with a value.\n                /// The value is passed as the single argument. If the value is null, the value is returned.\n                /// The value returned from the function becomes the fulfilled value of the promise returned by\n                /// then(). If an exception is thrown while this function is being executed, the promise returned\n                /// by then() moves into the error state.\n                /// </param>\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onError\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument. If it is null, the error is forwarded.\n                /// The value returned from the function becomes the fulfilled value of the promise returned by then().\n                /// </param>\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onProgress\">\n                /// The function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.PromiseStateMachine.then_returnValue\">\n                /// The promise whose value is the result of executing the complete or\n                /// error function.\n                /// </returns>\n                /// </signature>\n                try {\n                    // If the value returned from the completion handler is the same as the value\n                    // provided to the completion handler then there is no need for a new promise.\n                    //\n                    var newValue = onComplete ? onComplete(this._value) : this._value;\n                    return newValue === this._value ? this : new CompletePromise(newValue);\n                } catch (ex) {\n                    return new ExceptionPromise(ex);\n                }\n            }\n        }, {\n            supportedForProcessing: false\n        }\n    );\n\n    //\n    // Promise is the user-creatable WinJS.Promise object.\n    //\n\n    function timeout(timeoutMS) {\n        var id;\n        return new WinJS.Promise(\n            function (c) {\n                if (timeoutMS) {\n                    id = setTimeout(c, timeoutMS);\n                } else {\n                    setImmediate(c);\n                }\n            },\n            function () {\n                if (id) {\n                    clearTimeout(id);\n                }\n            }\n        );\n    }\n\n    function timeoutWithPromise(timeout, promise) {\n        var cancelPromise = function () { promise.cancel(); }\n        var cancelTimeout = function () { timeout.cancel(); }\n        timeout.then(cancelPromise);\n        promise.then(cancelTimeout, cancelTimeout);\n        return promise;\n    }\n\n    var staticCanceledPromise;\n\n    var Promise = WinJS.Class.derive(PromiseStateMachine,\n        function Promise_ctor(init, oncancel) {\n            /// <signature helpKeyword=\"WinJS.Promise\">\n            /// <summary locid=\"WinJS.Promise\">\n            /// A promise provides a mechanism to schedule work to be done on a value that\n            /// has not yet been computed. It is a convenient abstraction for managing\n            /// interactions with asynchronous APIs.\n            /// </summary>\n            /// <param name=\"init\" type=\"Function\" locid=\"WinJS.Promise_p:init\">\n            /// The function that is called during construction of the  promise. The function\n            /// is given three arguments (complete, error, progress). Inside this function\n            /// you should add event listeners for the notifications supported by this value.\n            /// </param>\n            /// <param name=\"oncancel\" optional=\"true\" locid=\"WinJS.Promise_p:oncancel\">\n            /// The function to call if a consumer of this promise wants\n            /// to cancel its undone work. Promises are not required to\n            /// support cancellation.\n            /// </param>\n            /// </signature>\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.promise))) {\n                this._stack = WinJS.Promise._getStack();\n            }\n\n            this._oncancel = oncancel;\n            this._setState(state_created);\n            this._run();\n\n            try {\n                var complete = this._completed.bind(this);\n                var error = this._error.bind(this);\n                var progress = this._progress.bind(this);\n                init(complete, error, progress);\n            } catch (ex) {\n                this._setExceptionValue(ex);\n            }\n        }, {\n            _oncancel: null,\n\n            _cancelAction: function () {\n\t\t\t\ttry {\n            \t\tif (this._oncancel) {\n\t\t\t\t\t\tthis._oncancel();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error('Promise did not implement oncancel');\n\t\t\t\t\t}\n\t\t\t\t} catch (ex) {\n\t\t\t\t\t// Access fields to get them created\n\t\t\t\t\tvar msg = ex.message;\n\t\t\t\t\tvar stack = ex.stack;\n\t\t\t\t\tpromiseEventListeners.dispatchEvent('error', ex);\n\t\t\t\t}\n            },\n            _cleanupAction: function () { this._oncancel = null; }\n        }, {\n\n            addEventListener: function Promise_addEventListener(eventType, listener, capture) {\n                /// <signature helpKeyword=\"WinJS.Promise.addEventListener\">\n                /// <summary locid=\"WinJS.Promise.addEventListener\">\n                /// Adds an event listener to the control.\n                /// </summary>\n                /// <param name=\"eventType\" locid=\"WinJS.Promise.addEventListener_p:eventType\">\n                /// The type (name) of the event.\n                /// </param>\n                /// <param name=\"listener\" locid=\"WinJS.Promise.addEventListener_p:listener\">\n                /// The listener to invoke when the event is raised.\n                /// </param>\n                /// <param name=\"capture\" locid=\"WinJS.Promise.addEventListener_p:capture\">\n                /// Specifies whether or not to initiate capture.\n                /// </param>\n                /// </signature>\n                promiseEventListeners.addEventListener(eventType, listener, capture);\n            },\n            any: function Promise_any(values) {\n                /// <signature helpKeyword=\"WinJS.Promise.any\">\n                /// <summary locid=\"WinJS.Promise.any\">\n                /// Returns a promise that is fulfilled when one of the input promises\n                /// has been fulfilled.\n                /// </summary>\n                /// <param name=\"values\" type=\"Array\" locid=\"WinJS.Promise.any_p:values\">\n                /// An array that contains promise objects or objects whose property\n                /// values include promise objects.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.any_returnValue\">\n                /// A promise that on fulfillment yields the value of the input (complete or error).\n                /// </returns>\n                /// </signature>\n                return new Promise(\n                    function (complete, error, progress) {\n                        var keys = Object.keys(values);\n                        var errors = Array.isArray(values) ? [] : {};\n                        if (keys.length === 0) {\n                            complete();\n                        }\n                        var canceled = 0;\n                        keys.forEach(function (key) {\n                            Promise.as(values[key]).then(\n                                function () { complete({ key: key, value: values[key] }); },\n                                function (e) {\n                                    if (e instanceof Error && e.name === canceledName) {\n                                        if ((++canceled) === keys.length) {\n                                            complete(WinJS.Promise.cancel);\n                                        }\n                                        return;\n                                    }\n                                    error({ key: key, value: values[key] });\n                                }\n                            );\n                        });\n                    },\n                    function () {\n                        var keys = Object.keys(values);\n                        keys.forEach(function (key) {\n                            var promise = Promise.as(values[key]);\n                            if (typeof promise.cancel === \"function\") {\n                                promise.cancel();\n                            }\n                        });\n                    }\n                );\n            },\n            as: function Promise_as(value) {\n                /// <signature helpKeyword=\"WinJS.Promise.as\">\n                /// <summary locid=\"WinJS.Promise.as\">\n                /// Returns a promise. If the object is already a promise it is returned;\n                /// otherwise the object is wrapped in a promise.\n                /// </summary>\n                /// <param name=\"value\" locid=\"WinJS.Promise.as_p:value\">\n                /// The value to be treated as a promise.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.as_returnValue\">\n                /// A promise.\n                /// </returns>\n                /// </signature>\n                if (value && typeof value === \"object\" && typeof value.then === \"function\") {\n                    return value;\n                }\n                return new CompletePromise(value);\n            },\n            /// <field type=\"WinJS.Promise\" helpKeyword=\"WinJS.Promise.cancel\" locid=\"WinJS.Promise.cancel\">\n            /// Canceled promise value, can be returned from a promise completion handler\n            /// to indicate cancelation of the promise chain.\n            /// </field>\n            cancel: {\n                get: function () {\n                    return (staticCanceledPromise = staticCanceledPromise || new ErrorPromise(new WinJS.ErrorFromName(canceledName)));\n                }\n            },\n            dispatchEvent: function Promise_dispatchEvent(eventType, details) {\n                /// <signature helpKeyword=\"WinJS.Promise.dispatchEvent\">\n                /// <summary locid=\"WinJS.Promise.dispatchEvent\">\n                /// Raises an event of the specified type and properties.\n                /// </summary>\n                /// <param name=\"eventType\" locid=\"WinJS.Promise.dispatchEvent_p:eventType\">\n                /// The type (name) of the event.\n                /// </param>\n                /// <param name=\"details\" locid=\"WinJS.Promise.dispatchEvent_p:details\">\n                /// The set of additional properties to be attached to the event object.\n                /// </param>\n                /// <returns type=\"Boolean\" locid=\"WinJS.Promise.dispatchEvent_returnValue\">\n                /// Specifies whether preventDefault was called on the event.\n                /// </returns>\n                /// </signature>\n                return promiseEventListeners.dispatchEvent(eventType, details);\n            },\n            is: function Promise_is(value) {\n                /// <signature helpKeyword=\"WinJS.Promise.is\">\n                /// <summary locid=\"WinJS.Promise.is\">\n                /// Determines whether a value fulfills the promise contract.\n                /// </summary>\n                /// <param name=\"value\" locid=\"WinJS.Promise.is_p:value\">\n                /// A value that may be a promise.\n                /// </param>\n                /// <returns type=\"Boolean\" locid=\"WinJS.Promise.is_returnValue\">\n                /// true if the specified value is a promise, otherwise false.\n                /// </returns>\n                /// </signature>\n                return value && typeof value === \"object\" && typeof value.then === \"function\";\n            },\n            join: function Promise_join(values) {\n                /// <signature helpKeyword=\"WinJS.Promise.join\">\n                /// <summary locid=\"WinJS.Promise.join\">\n                /// Creates a promise that is fulfilled when all the values are fulfilled.\n                /// </summary>\n                /// <param name=\"values\" type=\"Object\" locid=\"WinJS.Promise.join_p:values\">\n                /// An object whose fields contain values, some of which may be promises.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.join_returnValue\">\n                /// A promise whose value is an object with the same field names as those of the object in the values parameter, where\n                /// each field value is the fulfilled value of a promise.\n                /// </returns>\n                /// </signature>\n                return new Promise(\n                    function (complete, error, progress) {\n                        var keys = Object.keys(values);\n                        var errors = Array.isArray(values) ? [] : {};\n                        var results = Array.isArray(values) ? [] : {};\n                        var undefineds = 0;\n                        var pending = keys.length;\n                        var argDone = function (key) {\n                            if ((--pending) === 0) {\n                                var errorCount = Object.keys(errors).length;\n                                if (errorCount === 0) {\n                                    complete(results);\n                                } else {\n                                    var canceledCount = 0;\n                                    keys.forEach(function (key) {\n                                        var e = errors[key];\n                                        if (e instanceof Error && e.name === canceledName) {\n                                            canceledCount++;\n                                        }\n                                    });\n                                    if (canceledCount === errorCount) {\n                                        complete(WinJS.Promise.cancel);\n                                    } else {\n                                        error(errors);\n                                    }\n                                }\n                            } else {\n                                progress({ Key: key, Done: true });\n                            }\n                        };\n                        keys.forEach(function (key) {\n                            var value = values[key];\n                            if (value === undefined) {\n                                undefineds++;\n                            } else {\n                                Promise.then(value,\n                                    function (value) { results[key] = value; argDone(key); },\n                                    function (value) { errors[key] = value; argDone(key); }\n                                );\n                            }\n                        });\n                        pending -= undefineds;\n                        if (pending === 0) {\n                            complete(results);\n                            return;\n                        }\n                    },\n                    function () {\n                        Object.keys(values).forEach(function (key) {\n                            var promise = Promise.as(values[key]);\n                            if (typeof promise.cancel === \"function\") {\n                                promise.cancel();\n                            }\n                        });\n                    }\n                );\n            },\n            removeEventListener: function Promise_removeEventListener(eventType, listener, capture) {\n                /// <signature helpKeyword=\"WinJS.Promise.removeEventListener\">\n                /// <summary locid=\"WinJS.Promise.removeEventListener\">\n                /// Removes an event listener from the control.\n                /// </summary>\n                /// <param name='eventType' locid=\"WinJS.Promise.removeEventListener_eventType\">\n                /// The type (name) of the event.\n                /// </param>\n                /// <param name='listener' locid=\"WinJS.Promise.removeEventListener_listener\">\n                /// The listener to remove.\n                /// </param>\n                /// <param name='capture' locid=\"WinJS.Promise.removeEventListener_capture\">\n                /// Specifies whether or not to initiate capture.\n                /// </param>\n                /// </signature>\n                promiseEventListeners.removeEventListener(eventType, listener, capture);\n            },\n            supportedForProcessing: false,\n            then: function Promise_then(value, onComplete, onError, onProgress) {\n                /// <signature helpKeyword=\"WinJS.Promise.then\">\n                /// <summary locid=\"WinJS.Promise.then\">\n                /// A static version of the promise instance method then().\n                /// </summary>\n                /// <param name=\"value\" locid=\"WinJS.Promise.then_p:value\">\n                /// the value to be treated as a promise.\n                /// </param>\n                /// <param name=\"onComplete\" type=\"Function\" locid=\"WinJS.Promise.then_p:complete\">\n                /// The function to be called if the promise is fulfilled with a value.\n                /// If it is null, the promise simply\n                /// returns the value. The value is passed as the single argument.\n                /// </param>\n                /// <param name=\"onError\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.then_p:error\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument.\n                /// </param>\n                /// <param name=\"onProgress\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.then_p:progress\">\n                /// The function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.then_returnValue\">\n                /// A promise whose value is the result of executing the provided complete function.\n                /// </returns>\n                /// </signature>\n                return Promise.as(value).then(onComplete, onError, onProgress);\n            },\n            thenEach: function Promise_thenEach(values, onComplete, onError, onProgress) {\n                /// <signature helpKeyword=\"WinJS.Promise.thenEach\">\n                /// <summary locid=\"WinJS.Promise.thenEach\">\n                /// Performs an operation on all the input promises and returns a promise\n                /// that has the shape of the input and contains the result of the operation\n                /// that has been performed on each input.\n                /// </summary>\n                /// <param name=\"values\" locid=\"WinJS.Promise.thenEach_p:values\">\n                /// A set of values (which could be either an array or an object) of which some or all are promises.\n                /// </param>\n                /// <param name=\"onComplete\" type=\"Function\" locid=\"WinJS.Promise.thenEach_p:complete\">\n                /// The function to be called if the promise is fulfilled with a value.\n                /// If the value is null, the promise returns the value.\n                /// The value is passed as the single argument.\n                /// </param>\n                /// <param name=\"onError\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.thenEach_p:error\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument.\n                /// </param>\n                /// <param name=\"onProgress\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.thenEach_p:progress\">\n                /// The function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.thenEach_returnValue\">\n                /// A promise that is the result of calling Promise.join on the values parameter.\n                /// </returns>\n                /// </signature>\n                var result = Array.isArray(values) ? [] : {};\n                Object.keys(values).forEach(function (key) {\n                    result[key] = Promise.as(values[key]).then(onComplete, onError, onProgress);\n                });\n                return Promise.join(result);\n            },\n            timeout: function Promise_timeout(time, promise) {\n                /// <signature helpKeyword=\"WinJS.Promise.timeout\">\n                /// <summary locid=\"WinJS.Promise.timeout\">\n                /// Creates a promise that is fulfilled after a timeout.\n                /// </summary>\n                /// <param name=\"timeout\" type=\"Number\" optional=\"true\" locid=\"WinJS.Promise.timeout_p:timeout\">\n                /// The timeout period in milliseconds. If this value is zero or not specified\n                /// setImmediate is called, otherwise setTimeout is called.\n                /// </param>\n                /// <param name=\"promise\" type=\"Promise\" optional=\"true\" locid=\"WinJS.Promise.timeout_p:promise\">\n                /// A promise that will be canceled if it doesn't complete before the\n                /// timeout has expired.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.timeout_returnValue\">\n                /// A promise that is completed asynchronously after the specified timeout.\n                /// </returns>\n                /// </signature>\n                var to = timeout(time);\n                return promise ? timeoutWithPromise(to, promise) : to;\n            },\n            wrap: function Promise_wrap(value) {\n                /// <signature helpKeyword=\"WinJS.Promise.wrap\">\n                /// <summary locid=\"WinJS.Promise.wrap\">\n                /// Wraps a non-promise value in a promise. You can use this function if you need\n                /// to pass a value to a function that requires a promise.\n                /// </summary>\n                /// <param name=\"value\" locid=\"WinJS.Promise.wrap_p:value\">\n                /// Some non-promise value to be wrapped in a promise.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.wrap_returnValue\">\n                /// A promise that is successfully fulfilled with the specified value\n                /// </returns>\n                /// </signature>\n                return new CompletePromise(value);\n            },\n            wrapError: function Promise_wrapError(error) {\n                /// <signature helpKeyword=\"WinJS.Promise.wrapError\">\n                /// <summary locid=\"WinJS.Promise.wrapError\">\n                /// Wraps a non-promise error value in a promise. You can use this function if you need\n                /// to pass an error to a function that requires a promise.\n                /// </summary>\n                /// <param name=\"error\" locid=\"WinJS.Promise.wrapError_p:error\">\n                /// A non-promise error value to be wrapped in a promise.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.wrapError_returnValue\">\n                /// A promise that is in an error state with the specified value.\n                /// </returns>\n                /// </signature>\n                return new ErrorPromise(error);\n            },\n\n            _veryExpensiveTagWithStack: {\n                get: function () { return tagWithStack; },\n                set: function (value) { tagWithStack = value; }\n            },\n            _veryExpensiveTagWithStack_tag: tag,\n            _getStack: function () {\n                if (Debug.debuggerEnabled) {\n                    try { throw new Error(); } catch (e) { return e.stack; }\n                }\n            },\n\n        }\n    );\n    Object.defineProperties(Promise, WinJS.Utilities.createEventProperties(errorET));\n\n    var SignalPromise = WinJS.Class.derive(PromiseStateMachine,\n        function (cancel) {\n            this._oncancel = cancel;\n            this._setState(state_created);\n            this._run();\n        }, {\n            _cancelAction: function () { this._oncancel && this._oncancel(); },\n            _cleanupAction: function () { this._oncancel = null; }\n        }, {\n            supportedForProcessing: false\n        }\n    );\n\n    var Signal = WinJS.Class.define(\n        function Signal_ctor(oncancel) {\n            this._promise = new SignalPromise(oncancel);\n        }, {\n            promise: {\n                get: function () { return this._promise; }\n            },\n\n            cancel: function Signal_cancel() {\n                this._promise.cancel();\n            },\n            complete: function Signal_complete(value) {\n                this._promise._completed(value);\n            },\n            error: function Signal_error(value) {\n                this._promise._error(value);\n            },\n            progress: function Signal_progress(value) {\n                this._promise._progress(value);\n            }\n        }, {\n            supportedForProcessing: false,\n        }\n    );\n\n    // Publish WinJS.Promise\n    //\n    WinJS.Namespace.define(\"WinJS\", {\n        Promise: Promise,\n        _Signal: Signal\n    });\n\n}(this, this.WinJS));\n\n(function errorsInit(global, WinJS) {\n    \"use strict\";\n\n\n    WinJS.Namespace.define(\"WinJS\", {\n        // ErrorFromName establishes a simple pattern for returning error codes.\n        //\n        ErrorFromName: WinJS.Class.derive(Error, function (name, message) {\n            /// <signature helpKeyword=\"WinJS.ErrorFromName\">\n            /// <summary locid=\"WinJS.ErrorFromName\">\n            /// Creates an Error object with the specified name and message properties.\n            /// </summary>\n            /// <param name=\"name\" type=\"String\" locid=\"WinJS.ErrorFromName_p:name\">The name of this error. The name is meant to be consumed programmatically and should not be localized.</param>\n            /// <param name=\"message\" type=\"String\" optional=\"true\" locid=\"WinJS.ErrorFromName_p:message\">The message for this error. The message is meant to be consumed by humans and should be localized.</param>\n            /// <returns type=\"Error\" locid=\"WinJS.ErrorFromName_returnValue\">Error instance with .name and .message properties populated</returns>\n            /// </signature>\n            this.name = name;\n            this.message = message || name;\n        }, {\n            /* empty */\n        }, {\n            supportedForProcessing: false,\n        })\n    });\n\n})(this, this.WinJS);\n\n\n(function xhrInit(WinJS) {\n    \"use strict\";\n\n\n    WinJS.Namespace.define(\"WinJS\", {\n        xhr: function (options) {\n            /// <signature helpKeyword=\"WinJS.xhr\">\n            /// <summary locid=\"WinJS.xhr\">\n            /// Wraps calls to XMLHttpRequest in a promise.\n            /// </summary>\n            /// <param name=\"options\" type=\"Object\" locid=\"WinJS.xhr_p:options\">\n            /// The options that are applied to the XMLHttpRequest object. They are: type,\n            /// url, user, password, headers, responseType, data, and customRequestInitializer.\n            /// </param>\n            /// <returns type=\"WinJS.Promise\" locid=\"WinJS.xhr_returnValue\">\n            /// A promise that returns the XMLHttpRequest object when it completes.\n            /// </returns>\n            /// </signature>\n            var req;\n            return new WinJS.Promise(\n                function (c, e, p) {\n                    /// <returns value=\"c(new XMLHttpRequest())\" locid=\"WinJS.xhr.constructor._returnValue\" />\n                    req = new XMLHttpRequest();\n                    req.onreadystatechange = function () {\n                        if (req._canceled) { return; }\n\n                        if (req.readyState === 4) {\n\t\t\t\t\t\t\t// MONACO CHANGE: Handle 1223: http://bugs.jquery.com/ticket/1450\n                            if ((req.status >= 200 && req.status < 300) || req.status === 1223) {\n                                c(req);\n                            } else {\n                                e(req);\n                            }\n                            req.onreadystatechange = function () { };\n                        } else {\n                            p(req);\n                        }\n                    };\n\n                    req.open(\n                        options.type || \"GET\",\n                        options.url,\n                        // Promise based XHR does not support sync.\n                        //\n                        true,\n                        options.user,\n                        options.password\n                    );\n                    req.responseType = options.responseType || \"\";\n\n                    Object.keys(options.headers || {}).forEach(function (k) {\n                        req.setRequestHeader(k, options.headers[k]);\n                    });\n\n                    if (options.customRequestInitializer) {\n                        options.customRequestInitializer(req);\n                    }\n\n                    req.send(options.data);\n                },\n                function () {\n                    req._canceled = true;\n                    req.abort();\n                }\n            );\n        }\n    });\n\n})(this.WinJS);\n\n\n(function safeHTMLInit(global, WinJS, undefined) {\n    \"use strict\";\n\n\n    var setInnerHTML,\n        setInnerHTMLUnsafe,\n        setOuterHTML,\n        setOuterHTMLUnsafe,\n        insertAdjacentHTML,\n        insertAdjacentHTMLUnsafe;\n\n    var strings = {\n\t\t// MONACO CHANGE\n        //get nonStaticHTML() { return WinJS.Resources._getWinJSString(\"base/nonStaticHTML\").value; },\n\t\tnonStaticHTML: \"Unable to add dynamic content. A script attempted to inject dynamic content, or elements previously modified dynamically, that might be unsafe. For example, using the innerHTML property or the document.write method to add a script element will generate this exception. If the content is safe and from a trusted source, use a method to explicitly manipulate elements and attributes, such as createElement, or use setInnerHTMLUnsafe (or other unsafe method).\"\n    };\n\n    setInnerHTML = setInnerHTMLUnsafe = function (element, text) {\n        /// <signature helpKeyword=\"WinJS.Utilities.setInnerHTML\">\n        /// <summary locid=\"WinJS.Utilities.setInnerHTML\">\n        /// Sets the innerHTML property of the specified element to the specified text.\n        /// </summary>\n        /// <param name=\"element\" type=\"HTMLElement\" locid=\"WinJS.Utilities.setInnerHTML_p:element\">\n        /// The element on which the innerHTML property is to be set.\n        /// </param>\n        /// <param name=\"text\" type=\"String\" locid=\"WinJS.Utilities.setInnerHTML_p:text\">\n        /// The value to be set to the innerHTML property.\n        /// </param>\n        /// </signature>\n        element.innerHTML = text;\n    };\n    setOuterHTML = setOuterHTMLUnsafe = function (element, text) {\n        /// <signature helpKeyword=\"WinJS.Utilities.setOuterHTML\">\n        /// <summary locid=\"WinJS.Utilities.setOuterHTML\">\n        /// Sets the outerHTML property of the specified element to the specified text.\n        /// </summary>\n        /// <param name=\"element\" type=\"HTMLElement\" locid=\"WinJS.Utilities.setOuterHTML_p:element\">\n        /// The element on which the outerHTML property is to be set.\n        /// </param>\n        /// <param name=\"text\" type=\"String\" locid=\"WinJS.Utilities.setOuterHTML_p:text\">\n        /// The value to be set to the outerHTML property.\n        /// </param>\n        /// </signature>\n        element.outerHTML = text;\n    };\n    insertAdjacentHTML = insertAdjacentHTMLUnsafe = function (element, position, text) {\n        /// <signature helpKeyword=\"WinJS.Utilities.insertAdjacentHTML\">\n        /// <summary locid=\"WinJS.Utilities.insertAdjacentHTML\">\n        /// Calls insertAdjacentHTML on the specified element.\n        /// </summary>\n        /// <param name=\"element\" type=\"HTMLElement\" locid=\"WinJS.Utilities.insertAdjacentHTML_p:element\">\n        /// The element on which insertAdjacentHTML is to be called.\n        /// </param>\n        /// <param name=\"position\" type=\"String\" locid=\"WinJS.Utilities.insertAdjacentHTML_p:position\">\n        /// The position relative to the element at which to insert the HTML.\n        /// </param>\n        /// <param name=\"text\" type=\"String\" locid=\"WinJS.Utilities.insertAdjacentHTML_p:text\">\n        /// The value to be provided to insertAdjacentHTML.\n        /// </param>\n        /// </signature>\n        element.insertAdjacentHTML(position, text);\n    };\n\n    var msApp = global.MSApp;\n    if (msApp) {\n        setInnerHTMLUnsafe = function (element, text) {\n            /// <signature helpKeyword=\"WinJS.Utilities.setInnerHTMLUnsafe\">\n            /// <summary locid=\"WinJS.Utilities.setInnerHTMLUnsafe\">\n            /// Sets the innerHTML property of the specified element to the specified text.\n            /// </summary>\n            /// <param name='element' type='HTMLElement' locid=\"WinJS.Utilities.setInnerHTMLUnsafe_p:element\">\n            /// The element on which the innerHTML property is to be set.\n            /// </param>\n            /// <param name='text' type=\"String\" locid=\"WinJS.Utilities.setInnerHTMLUnsafe_p:text\">\n            /// The value to be set to the innerHTML property.\n            /// </param>\n            /// </signature>\n            msApp.execUnsafeLocalFunction(function () {\n                element.innerHTML = text;\n            });\n        };\n        setOuterHTMLUnsafe = function (element, text) {\n            /// <signature helpKeyword=\"WinJS.Utilities.setOuterHTMLUnsafe\">\n            /// <summary locid=\"WinJS.Utilities.setOuterHTMLUnsafe\">\n            /// Sets the outerHTML property of the specified element to the specified text\n            /// in the context of msWWA.execUnsafeLocalFunction.\n            /// </summary>\n            /// <param name=\"element\" type=\"HTMLElement\" locid=\"WinJS.Utilities.setOuterHTMLUnsafe_p:element\">\n            /// The element on which the outerHTML property is to be set.\n            /// </param>\n            /// <param name=\"text\" type=\"String\" locid=\"WinJS.Utilities.setOuterHTMLUnsafe_p:text\">\n            /// The value to be set to the outerHTML property.\n            /// </param>\n            /// </signature>\n            msApp.execUnsafeLocalFunction(function () {\n                element.outerHTML = text;\n            });\n        };\n        insertAdjacentHTMLUnsafe = function (element, position, text) {\n            /// <signature helpKeyword=\"WinJS.Utilities.insertAdjacentHTMLUnsafe\">\n            /// <summary locid=\"WinJS.Utilities.insertAdjacentHTMLUnsafe\">\n            /// Calls insertAdjacentHTML on the specified element in the context\n            /// of msWWA.execUnsafeLocalFunction.\n            /// </summary>\n            /// <param name=\"element\" type=\"HTMLElement\" locid=\"WinJS.Utilities.insertAdjacentHTMLUnsafe_p:element\">\n            /// The element on which insertAdjacentHTML is to be called.\n            /// </param>\n            /// <param name=\"position\" type=\"String\" locid=\"WinJS.Utilities.insertAdjacentHTMLUnsafe_p:position\">\n            /// The position relative to the element at which to insert the HTML.\n            /// </param>\n            /// <param name=\"text\" type=\"String\" locid=\"WinJS.Utilities.insertAdjacentHTMLUnsafe_p:text\">\n            /// Value to be provided to insertAdjacentHTML.\n            /// </param>\n            /// </signature>\n            msApp.execUnsafeLocalFunction(function () {\n                element.insertAdjacentHTML(position, text);\n            });\n        };\n    }\n    else if (global.msIsStaticHTML) {\n        var check = function (str) {\n            if (!global.msIsStaticHTML(str)) {\n                throw new WinJS.ErrorFromName(\"WinJS.Utitilies.NonStaticHTML\", strings.nonStaticHTML);\n            }\n        }\n        // If we ever get isStaticHTML we can attempt to recreate the behavior we have in the local\n        // compartment, in the mean-time all we can do is sanitize the input.\n        //\n        setInnerHTML = function (element, text) {\n            /// <signature helpKeyword=\"WinJS.Utilities.setInnerHTML\">\n            /// <summary locid=\"WinJS.Utilities.msIsStaticHTML.setInnerHTML\">\n            /// Sets the innerHTML property of a element to the specified text\n            /// if it passes a msIsStaticHTML check.\n            /// </summary>\n            /// <param name=\"element\" type=\"HTMLElement\" locid=\"WinJS.Utilities.msIsStaticHTML.setInnerHTML_p:element\">\n            /// The element on which the innerHTML property is to be set.\n            /// </param>\n            /// <param name=\"text\" type=\"String\" locid=\"WinJS.Utilities.msIsStaticHTML.setInnerHTML_p:text\">\n            /// The value to be set to the innerHTML property.\n            /// </param>\n            /// </signature>\n            check(text);\n            element.innerHTML = text;\n        };\n        setOuterHTML = function (element, text) {\n            /// <signature helpKeyword=\"WinJS.Utilities.setOuterHTML\">\n            /// <summary locid=\"WinJS.Utilities.msIsStaticHTML.setOuterHTML\">\n            /// Sets the outerHTML property of a element to the specified text\n            /// if it passes a msIsStaticHTML check.\n            /// </summary>\n            /// <param name=\"element\" type=\"HTMLElement\" locid=\"WinJS.Utilities.msIsStaticHTML.setOuterHTML_p:element\">\n            /// The element on which the outerHTML property is to be set.\n            /// </param>\n            /// <param name=\"text\" type=\"String\" locid=\"WinJS.Utilities.msIsStaticHTML.setOuterHTML_p:text\">\n            /// The value to be set to the outerHTML property.\n            /// </param>\n            /// </signature>\n            check(text);\n            element.outerHTML = text;\n        };\n        insertAdjacentHTML = function (element, position, text) {\n            /// <signature helpKeyword=\"WinJS.Utilities.insertAdjacentHTML\">\n            /// <summary locid=\"WinJS.Utilities.msIsStaticHTML.insertAdjacentHTML\">\n            /// Calls insertAdjacentHTML on the element if it passes\n            /// a msIsStaticHTML check.\n            /// </summary>\n            /// <param name=\"element\" type=\"HTMLElement\" locid=\"WinJS.Utilities.msIsStaticHTML.insertAdjacentHTML_p:element\">\n            /// The element on which insertAdjacentHTML is to be called.\n            /// </param>\n            /// <param name=\"position\" type=\"String\" locid=\"WinJS.Utilities.msIsStaticHTML.insertAdjacentHTML_p:position\">\n            /// The position relative to the element at which to insert the HTML.\n            /// </param>\n            /// <param name=\"text\" type=\"String\" locid=\"WinJS.Utilities.msIsStaticHTML.insertAdjacentHTML_p:text\">\n            /// The value to be provided to insertAdjacentHTML.\n            /// </param>\n            /// </signature>\n            check(text);\n            element.insertAdjacentHTML(position, text);\n        };\n    }\n\n    WinJS.Namespace.define(\"WinJS.Utilities\", {\n        setInnerHTML: setInnerHTML,\n        setInnerHTMLUnsafe: setInnerHTMLUnsafe,\n        setOuterHTML: setOuterHTML,\n        setOuterHTMLUnsafe: setOuterHTMLUnsafe,\n        insertAdjacentHTML: insertAdjacentHTML,\n        insertAdjacentHTMLUnsafe: insertAdjacentHTMLUnsafe\n    });\n\n}(this, this.WinJS));\n\n\n\n// MONACO CHANGE\n} // if (typeof WinJS === 'undefined')\n\n(function(global) {\n\n    if (typeof exports === 'undefined' && typeof define === 'function' && define.amd) {\n        define(\"vs/base/common/winjs.base.raw\", global.WinJS);\n    } else {\n        module.exports = global.WinJS;\n    }\n\n})(this);\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/base/node/flow\", [\"require\", \"exports\", 'assert'], function (require, exports, assert) {\r\n    /**\r\n     * Executes the given function (fn) over the given array of items (list) in parallel and returns the resulting errors and results as\r\n     * array to the callback (callback). The resulting errors and results are evaluated by calling the provided callback function.\r\n     */\r\n    function parallel(list, fn, callback) {\r\n        var results = new Array(list.length);\r\n        var errors = new Array(list.length);\r\n        var didErrorOccur = false;\r\n        var doneCount = 0;\r\n        if (list.length === 0) {\r\n            return callback(null, []);\r\n        }\r\n        list.forEach(function (item, index) {\r\n            fn(item, function (error, result) {\r\n                if (error) {\r\n                    didErrorOccur = true;\r\n                    results[index] = null;\r\n                    errors[index] = error;\r\n                }\r\n                else {\r\n                    results[index] = result;\r\n                    errors[index] = null;\r\n                }\r\n                if (++doneCount === list.length) {\r\n                    return callback(didErrorOccur ? errors : null, results);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    exports.parallel = parallel;\r\n    ;\r\n    function loop(param, fn, callback) {\r\n        // Assert\r\n        assert.ok(param, 'Missing first parameter');\r\n        assert.ok(typeof (fn) === 'function', 'Second parameter must be a function that is called for each element');\r\n        assert.ok(typeof (callback) === 'function', 'Third parameter must be a function that is called on error and success');\r\n        // Param is function, execute to retrieve array\r\n        if (typeof (param) === 'function') {\r\n            try {\r\n                param(function (error, result) {\r\n                    if (error) {\r\n                        callback(error, null);\r\n                    }\r\n                    else {\r\n                        loop(result, fn, callback);\r\n                    }\r\n                });\r\n            }\r\n            catch (error) {\r\n                callback(error, null);\r\n            }\r\n        }\r\n        else {\r\n            var results = [];\r\n            var looper = function (i) {\r\n                // Still work to do\r\n                if (i < param.length) {\r\n                    // Execute function on array element\r\n                    try {\r\n                        fn(param[i], function (error, result) {\r\n                            // A method might only send a boolean value as return value (e.g. fs.exists), support this case gracefully\r\n                            if (error === true || error === false) {\r\n                                result = error;\r\n                                error = null;\r\n                            }\r\n                            // Quit looping on error\r\n                            if (error) {\r\n                                callback(error, null);\r\n                            }\r\n                            else {\r\n                                if (result) {\r\n                                    results.push(result);\r\n                                }\r\n                                process.nextTick(function () {\r\n                                    looper(i + 1);\r\n                                });\r\n                            }\r\n                        }, i, param.length);\r\n                    }\r\n                    catch (error) {\r\n                        callback(error, null);\r\n                    }\r\n                }\r\n                else {\r\n                    callback(null, results);\r\n                }\r\n            };\r\n            // Start looping with first element in array\r\n            looper(0);\r\n        }\r\n    }\r\n    exports.loop = loop;\r\n    ;\r\n    function Sequence(sequences) {\r\n        // Assert\r\n        assert.ok(sequences.length > 1, 'Need at least one error handler and one function to process sequence');\r\n        sequences.forEach(function (sequence) {\r\n            assert.ok(typeof (sequence) === 'function');\r\n        });\r\n        // Execute in Loop\r\n        var errorHandler = sequences.splice(0, 1)[0]; //Remove error handler\r\n        var sequenceResult = null;\r\n        loop(sequences, function (sequence, clb) {\r\n            var sequenceFunction = function (error, result) {\r\n                // A method might only send a boolean value as return value (e.g. fs.exists), support this case gracefully\r\n                if (error === true || error === false) {\r\n                    result = error;\r\n                    error = null;\r\n                }\r\n                // Handle Error and Result\r\n                if (error) {\r\n                    clb(error, null);\r\n                }\r\n                else {\r\n                    sequenceResult = result; //Remember result of sequence\r\n                    clb(null, null); //Don't pass on result to Looper as we are not aggregating it\r\n                }\r\n            };\r\n            // We call the sequence function setting \"this\" to be the callback we define here\r\n            // and we pass in the \"sequenceResult\" as first argument. Doing all this avoids having\r\n            // to pass in a callback to the sequence because the callback is already \"this\".\r\n            try {\r\n                sequence.call(sequenceFunction, sequenceResult);\r\n            }\r\n            catch (error) {\r\n                clb(error, null);\r\n            }\r\n        }, function (error, result) {\r\n            if (error) {\r\n                errorHandler(error);\r\n            }\r\n        });\r\n    }\r\n    function sequence(sequences) {\r\n        Sequence((Array.isArray(sequences)) ? sequences : Array.prototype.slice.call(arguments));\r\n    }\r\n    exports.sequence = sequence;\r\n    ;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/base/node/stdFork\", [\"require\", \"exports\", 'path', 'os', 'net', 'child_process', 'vs/base/common/uri'], function (require, exports, path, os, net, cp, uri_1) {\r\n    function makeRandomHexString(length) {\r\n        var chars = ['0', '1', '2', '3', '4', '5', '6', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\r\n        var result = '';\r\n        for (var i = 0; i < length; i++) {\r\n            var idx = Math.floor(chars.length * Math.random());\r\n            result += chars[idx];\r\n        }\r\n        return result;\r\n    }\r\n    function generatePipeName() {\r\n        var randomName = 'vscode-' + makeRandomHexString(40);\r\n        if (process.platform === 'win32') {\r\n            return '\\\\\\\\.\\\\pipe\\\\' + randomName + '-sock';\r\n        }\r\n        // Mac/Unix: use socket file\r\n        return path.join(os.tmpdir(), randomName + '.sock');\r\n    }\r\n    function generatePatchedEnv(env, stdInPipeName, stdOutPipeName) {\r\n        // Set the two unique pipe names and the electron flag as process env\r\n        var newEnv = {};\r\n        for (var key in env) {\r\n            newEnv[key] = env[key];\r\n        }\r\n        newEnv['STDIN_PIPE_NAME'] = stdInPipeName;\r\n        newEnv['STDOUT_PIPE_NAME'] = stdOutPipeName;\r\n        newEnv['ATOM_SHELL_INTERNAL_RUN_AS_NODE'] = '1';\r\n        return newEnv;\r\n    }\r\n    function fork(modulePath, args, options, callback) {\r\n        var callbackCalled = false;\r\n        var resolve = function (result) {\r\n            if (callbackCalled) {\r\n                return;\r\n            }\r\n            callbackCalled = true;\r\n            callback(null, result);\r\n        };\r\n        var reject = function (err) {\r\n            if (callbackCalled) {\r\n                return;\r\n            }\r\n            callbackCalled = true;\r\n            callback(err, null);\r\n        };\r\n        // Generate two unique pipe names\r\n        var stdInPipeName = generatePipeName();\r\n        var stdOutPipeName = generatePipeName();\r\n        var newEnv = generatePatchedEnv(options.env || process.env, stdInPipeName, stdOutPipeName);\r\n        var childProcess;\r\n        // Begin listening to stdout pipe\r\n        var server = net.createServer(function (stream) {\r\n            // The child process will write exactly one chunk with content `ready` when it has installed a listener to the stdin pipe\r\n            stream.once('data', function (chunk) {\r\n                // The child process is sending me the `ready` chunk, time to connect to the stdin pipe\r\n                childProcess.stdin = net.connect(stdInPipeName);\r\n                // From now on the childProcess.stdout is available for reading\r\n                childProcess.stdout = stream;\r\n                resolve(childProcess);\r\n            });\r\n        });\r\n        server.listen(stdOutPipeName);\r\n        var serverClosed = false;\r\n        var closeServer = function () {\r\n            if (serverClosed) {\r\n                return;\r\n            }\r\n            serverClosed = true;\r\n            server.close();\r\n        };\r\n        // Create the process\r\n        var bootstrapperPath = (uri_1.default.parse(require.toUrl('./stdForkStart.js')).fsPath);\r\n        childProcess = cp.fork(bootstrapperPath, [modulePath].concat(args), {\r\n            silent: true,\r\n            cwd: options.cwd,\r\n            env: newEnv,\r\n            execArgv: options.execArgv\r\n        });\r\n        childProcess.once('error', function (err) {\r\n            closeServer();\r\n            reject(err);\r\n        });\r\n        childProcess.once('exit', function (err) {\r\n            closeServer();\r\n            reject(err);\r\n        });\r\n    }\r\n    exports.fork = fork;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/editor/common/core/arrays\", [\"require\", \"exports\"], function (require, exports) {\r\n    var Arrays;\r\n    (function (Arrays) {\r\n        /**\r\n         * Given a sorted array of natural number segments, find the segment containing a natural number.\r\n         *    For example, the segments [0, 5), [5, 9), [9, infinity) will be represented in the following manner:\r\n         *       [{ startIndex: 0 }, { startIndex: 5 }, { startIndex: 9 }]\r\n         *    Searching for 0, 1, 2, 3 or 4 will return 0.\r\n         *    Searching for 5, 6, 7 or 8 will return 1.\r\n         *    Searching for 9, 10, 11, ... will return 2.\r\n         * @param arr A sorted array representing natural number segments\r\n         * @param desiredIndex The search\r\n         * @return The index of the containing segment in the array.\r\n         */\r\n        function findIndexInSegmentsArray(arr, desiredIndex) {\r\n            var low = 0, high = arr.length - 1, mid;\r\n            while (low < high) {\r\n                mid = low + Math.ceil((high - low) / 2);\r\n                if (arr[mid].startIndex > desiredIndex) {\r\n                    high = mid - 1;\r\n                }\r\n                else {\r\n                    low = mid;\r\n                }\r\n            }\r\n            return low;\r\n        }\r\n        Arrays.findIndexInSegmentsArray = findIndexInSegmentsArray;\r\n    })(Arrays = exports.Arrays || (exports.Arrays = {}));\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/editor/common/core/position\", [\"require\", \"exports\"], function (require, exports) {\r\n    var Position = (function () {\r\n        function Position(lineNumber, column) {\r\n            this.lineNumber = lineNumber;\r\n            this.column = column;\r\n        }\r\n        Position.prototype.equals = function (other) {\r\n            return (!!other && this.lineNumber === other.lineNumber && this.column === other.column);\r\n        };\r\n        Position.prototype.isBefore = function (other) {\r\n            if (this.lineNumber < other.lineNumber) {\r\n                return true;\r\n            }\r\n            if (other.lineNumber < this.lineNumber) {\r\n                return false;\r\n            }\r\n            return this.column < other.column;\r\n        };\r\n        Position.prototype.isBeforeOrEqual = function (other) {\r\n            if (this.lineNumber < other.lineNumber) {\r\n                return true;\r\n            }\r\n            if (other.lineNumber < this.lineNumber) {\r\n                return false;\r\n            }\r\n            return this.column <= other.column;\r\n        };\r\n        Position.prototype.clone = function () {\r\n            return new Position(this.lineNumber, this.column);\r\n        };\r\n        Position.prototype.toString = function () {\r\n            return '(' + this.lineNumber + ',' + this.column + ')';\r\n        };\r\n        // ---\r\n        Position.lift = function (pos) {\r\n            return new Position(pos.lineNumber, pos.column);\r\n        };\r\n        Position.isIPosition = function (obj) {\r\n            return (obj\r\n                && (typeof obj.lineNumber === 'number')\r\n                && (typeof obj.column === 'number'));\r\n        };\r\n        Position.asEmptyRange = function (position) {\r\n            return {\r\n                startLineNumber: position.lineNumber,\r\n                startColumn: position.column,\r\n                endLineNumber: position.lineNumber,\r\n                endColumn: position.column\r\n            };\r\n        };\r\n        Position.startPosition = function (range) {\r\n            return {\r\n                lineNumber: range.startLineNumber,\r\n                column: range.startColumn\r\n            };\r\n        };\r\n        Position.endPosition = function (range) {\r\n            return {\r\n                lineNumber: range.endLineNumber,\r\n                column: range.endColumn\r\n            };\r\n        };\r\n        return Position;\r\n    })();\r\n    exports.Position = Position;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/editor/common/core/range\", [\"require\", \"exports\", 'vs/editor/common/core/position'], function (require, exports, position_1) {\r\n    var Range = (function () {\r\n        function Range(startLineNumber, startColumn, endLineNumber, endColumn) {\r\n            if ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\r\n                this.startLineNumber = endLineNumber;\r\n                this.startColumn = endColumn;\r\n                this.endLineNumber = startLineNumber;\r\n                this.endColumn = startColumn;\r\n            }\r\n            else {\r\n                this.startLineNumber = startLineNumber;\r\n                this.startColumn = startColumn;\r\n                this.endLineNumber = endLineNumber;\r\n                this.endColumn = endColumn;\r\n            }\r\n        }\r\n        Range.prototype.isEmpty = function () {\r\n            return Range.isEmpty(this);\r\n        };\r\n        Range.prototype.containsPosition = function (position) {\r\n            return Range.containsPosition(this, position);\r\n        };\r\n        Range.prototype.containsRange = function (range) {\r\n            return Range.containsRange(this, range);\r\n        };\r\n        Range.prototype.plusRange = function (range) {\r\n            return Range.plusRange(this, range);\r\n        };\r\n        Range.prototype.intersectRanges = function (range) {\r\n            return Range.intersectRanges(this, range);\r\n        };\r\n        Range.prototype.equalsRange = function (other) {\r\n            return Range.equalsRange(this, other);\r\n        };\r\n        Range.prototype.getEndPosition = function () {\r\n            return new position_1.Position(this.endLineNumber, this.endColumn);\r\n        };\r\n        Range.prototype.getStartPosition = function () {\r\n            return new position_1.Position(this.startLineNumber, this.startColumn);\r\n        };\r\n        Range.prototype.cloneRange = function () {\r\n            return new Range(this.startLineNumber, this.startColumn, this.endLineNumber, this.endColumn);\r\n        };\r\n        Range.prototype.toString = function () {\r\n            return '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\r\n        };\r\n        Range.prototype.setEndPosition = function (endLineNumber, endColumn) {\r\n            return new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\r\n        };\r\n        Range.prototype.setStartPosition = function (startLineNumber, startColumn) {\r\n            return new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\r\n        };\r\n        Range.prototype.collapseToStart = function () {\r\n            return new Range(this.startLineNumber, this.startColumn, this.startLineNumber, this.startColumn);\r\n        };\r\n        // ---\r\n        Range.lift = function (range) {\r\n            if (!range) {\r\n                return null;\r\n            }\r\n            return new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\r\n        };\r\n        Range.isIRange = function (obj) {\r\n            return (obj\r\n                && (typeof obj.startLineNumber === 'number')\r\n                && (typeof obj.startColumn === 'number')\r\n                && (typeof obj.endLineNumber === 'number')\r\n                && (typeof obj.endColumn === 'number'));\r\n        };\r\n        Range.isEmpty = function (range) {\r\n            return (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\r\n        };\r\n        Range.containsPosition = function (range, position) {\r\n            if (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\r\n                return false;\r\n            }\r\n            if (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\r\n                return false;\r\n            }\r\n            if (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\r\n                return false;\r\n            }\r\n            return true;\r\n        };\r\n        Range.containsRange = function (range, otherRange) {\r\n            if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\r\n                return false;\r\n            }\r\n            if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\r\n                return false;\r\n            }\r\n            if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\r\n                return false;\r\n            }\r\n            if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\r\n                return false;\r\n            }\r\n            return true;\r\n        };\r\n        Range.areIntersectingOrTouching = function (a, b) {\r\n            // Check if `a` is before `b`\r\n            if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\r\n                return false;\r\n            }\r\n            // Check if `b` is before `a`\r\n            if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\r\n                return false;\r\n            }\r\n            // These ranges must intersect\r\n            return true;\r\n        };\r\n        Range.intersectRanges = function (a, b) {\r\n            var resultStartLineNumber = a.startLineNumber, resultStartColumn = a.startColumn, resultEndLineNumber = a.endLineNumber, resultEndColumn = a.endColumn, otherStartLineNumber = b.startLineNumber, otherStartColumn = b.startColumn, otherEndLineNumber = b.endLineNumber, otherEndColumn = b.endColumn;\r\n            if (resultStartLineNumber < otherStartLineNumber) {\r\n                resultStartLineNumber = otherStartLineNumber;\r\n                resultStartColumn = otherStartColumn;\r\n            }\r\n            else if (resultStartLineNumber === otherStartLineNumber) {\r\n                resultStartColumn = Math.max(resultStartColumn, otherStartColumn);\r\n            }\r\n            if (resultEndLineNumber > otherEndLineNumber) {\r\n                resultEndLineNumber = otherEndLineNumber;\r\n                resultEndColumn = otherEndColumn;\r\n            }\r\n            else if (resultEndLineNumber === otherEndLineNumber) {\r\n                resultEndColumn = Math.min(resultEndColumn, otherEndColumn);\r\n            }\r\n            // Check if selection is now empty\r\n            if (resultStartLineNumber > resultEndLineNumber) {\r\n                return null;\r\n            }\r\n            if (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\r\n                return null;\r\n            }\r\n            return new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\r\n        };\r\n        Range.plusRange = function (a, b) {\r\n            var startLineNumber, startColumn, endLineNumber, endColumn;\r\n            if (b.startLineNumber < a.startLineNumber) {\r\n                startLineNumber = b.startLineNumber;\r\n                startColumn = b.startColumn;\r\n            }\r\n            else if (b.startLineNumber === a.startLineNumber) {\r\n                startLineNumber = b.startLineNumber;\r\n                startColumn = Math.min(b.startColumn, a.startColumn);\r\n            }\r\n            else {\r\n                startLineNumber = a.startLineNumber;\r\n                startColumn = a.startColumn;\r\n            }\r\n            if (b.endLineNumber > a.endLineNumber) {\r\n                endLineNumber = b.endLineNumber;\r\n                endColumn = b.endColumn;\r\n            }\r\n            else if (b.endLineNumber === a.endLineNumber) {\r\n                endLineNumber = b.endLineNumber;\r\n                endColumn = Math.max(b.endColumn, a.endColumn);\r\n            }\r\n            else {\r\n                endLineNumber = a.endLineNumber;\r\n                endColumn = a.endColumn;\r\n            }\r\n            return new Range(startLineNumber, startColumn, endLineNumber, endColumn);\r\n        };\r\n        Range.equalsRange = function (a, b) {\r\n            return (!!a &&\r\n                !!b &&\r\n                a.startLineNumber === b.startLineNumber &&\r\n                a.startColumn === b.startColumn &&\r\n                a.endLineNumber === b.endLineNumber &&\r\n                a.endColumn === b.endColumn);\r\n        };\r\n        /**\r\n         * A function that compares ranges, useful for sorting ranges\r\n         * It will first compare ranges on the startPosition and then on the endPosition\r\n         */\r\n        Range.compareRangesUsingStarts = function (a, b) {\r\n            if (a.startLineNumber === b.startLineNumber) {\r\n                if (a.startColumn === b.startColumn) {\r\n                    if (a.endLineNumber === b.endLineNumber) {\r\n                        return a.endColumn - b.endColumn;\r\n                    }\r\n                    return a.endLineNumber - b.endLineNumber;\r\n                }\r\n                return a.startColumn - b.startColumn;\r\n            }\r\n            return a.startLineNumber - b.startLineNumber;\r\n        };\r\n        /**\r\n         * A function that compares ranges, useful for sorting ranges\r\n         * It will first compare ranges on the endPosition and then on the startPosition\r\n         */\r\n        Range.compareRangesUsingEnds = function (a, b) {\r\n            if (a.endLineNumber === b.endLineNumber) {\r\n                if (a.endColumn === b.endColumn) {\r\n                    if (a.startLineNumber === b.startLineNumber) {\r\n                        return a.startColumn - b.startColumn;\r\n                    }\r\n                    return a.startLineNumber - b.startLineNumber;\r\n                }\r\n                return a.endColumn - b.endColumn;\r\n            }\r\n            return a.endLineNumber - b.endLineNumber;\r\n        };\r\n        Range.spansMultipleLines = function (range) {\r\n            return range.endLineNumber > range.startLineNumber;\r\n        };\r\n        Range.hashCode = function (range) {\r\n            return (range.startLineNumber * 17) + (range.startColumn * 23) + (range.endLineNumber * 29) + (range.endColumn * 37);\r\n        };\r\n        Range.collapseToStart = function (range) {\r\n            return {\r\n                startLineNumber: range.startLineNumber,\r\n                startColumn: range.startColumn,\r\n                endLineNumber: range.startLineNumber,\r\n                endColumn: range.startColumn\r\n            };\r\n        };\r\n        return Range;\r\n    })();\r\n    exports.Range = Range;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/editor/common/core/editOperation\", [\"require\", \"exports\", 'vs/editor/common/core/range'], function (require, exports, range_1) {\r\n    var EditOperation = (function () {\r\n        function EditOperation() {\r\n        }\r\n        EditOperation.insert = function (position, text) {\r\n            return {\r\n                identifier: null,\r\n                range: new range_1.Range(position.lineNumber, position.column, position.lineNumber, position.column),\r\n                text: text,\r\n                forceMoveMarkers: true\r\n            };\r\n        };\r\n        EditOperation.delete = function (range) {\r\n            return {\r\n                identifier: null,\r\n                range: range,\r\n                text: null,\r\n                forceMoveMarkers: true\r\n            };\r\n        };\r\n        EditOperation.replace = function (range, text) {\r\n            return {\r\n                identifier: null,\r\n                range: range,\r\n                text: text,\r\n                forceMoveMarkers: false\r\n            };\r\n        };\r\n        EditOperation.replaceMove = function (range, text) {\r\n            return {\r\n                identifier: null,\r\n                range: range,\r\n                text: text,\r\n                forceMoveMarkers: true\r\n            };\r\n        };\r\n        return EditOperation;\r\n    })();\r\n    exports.EditOperation = EditOperation;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/editor/common/modes\", [\"require\", \"exports\"], function (require, exports) {\r\n    (function (Bracket) {\r\n        Bracket[Bracket[\"None\"] = 0] = \"None\";\r\n        Bracket[Bracket[\"Open\"] = 1] = \"Open\";\r\n        Bracket[Bracket[\"Close\"] = -1] = \"Close\";\r\n    })(exports.Bracket || (exports.Bracket = {}));\r\n    var Bracket = exports.Bracket;\r\n    (function (IndentAction) {\r\n        IndentAction[IndentAction[\"None\"] = 0] = \"None\";\r\n        IndentAction[IndentAction[\"Indent\"] = 1] = \"Indent\";\r\n        IndentAction[IndentAction[\"IndentOutdent\"] = 2] = \"IndentOutdent\";\r\n        IndentAction[IndentAction[\"Outdent\"] = 3] = \"Outdent\";\r\n    })(exports.IndentAction || (exports.IndentAction = {}));\r\n    var IndentAction = exports.IndentAction;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/editor/common/modes/abstractState\", [\"require\", \"exports\"], function (require, exports) {\r\n    var AbstractState = (function () {\r\n        function AbstractState(mode, stateData) {\r\n            if (stateData === void 0) { stateData = null; }\r\n            this.mode = mode;\r\n            this.stateData = stateData;\r\n        }\r\n        AbstractState.prototype.getMode = function () {\r\n            return this.mode;\r\n        };\r\n        AbstractState.prototype.clone = function () {\r\n            var result = this.makeClone();\r\n            result.initializeFrom(this);\r\n            return result;\r\n        };\r\n        AbstractState.prototype.makeClone = function () {\r\n            throw new Error('Abstract Method');\r\n        };\r\n        AbstractState.prototype.initializeFrom = function (other) {\r\n            this.stateData = other.stateData !== null ? other.stateData.clone() : null;\r\n        };\r\n        AbstractState.prototype.getStateData = function () {\r\n            return this.stateData;\r\n        };\r\n        AbstractState.prototype.setStateData = function (state) {\r\n            this.stateData = state;\r\n        };\r\n        AbstractState.prototype.equals = function (other) {\r\n            if (other === null || this.mode !== other.getMode()) {\r\n                return false;\r\n            }\r\n            if (other instanceof AbstractState) {\r\n                return AbstractState.safeEquals(this.stateData, other.stateData);\r\n            }\r\n            return false;\r\n        };\r\n        AbstractState.prototype.tokenize = function (stream) {\r\n            throw new Error('Abstract Method');\r\n        };\r\n        AbstractState.safeEquals = function (a, b) {\r\n            if (a === null && b === null) {\r\n                return true;\r\n            }\r\n            if (a === null || b === null) {\r\n                return false;\r\n            }\r\n            return a.equals(b);\r\n        };\r\n        AbstractState.safeClone = function (state) {\r\n            if (state) {\r\n                return state.clone();\r\n            }\r\n            return null;\r\n        };\r\n        return AbstractState;\r\n    })();\r\n    exports.AbstractState = AbstractState;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/editor/common/modes/lineStream\", [\"require\", \"exports\"], function (require, exports) {\r\n    var LineStream = (function () {\r\n        function LineStream(source) {\r\n            this._source = source;\r\n            this.sourceLength = source.length;\r\n            this._pos = 0;\r\n            this.whitespace = '\\t \\u00a0';\r\n            this.whitespaceArr = this.stringToArray(this.whitespace);\r\n            this.separators = '';\r\n            this.separatorsArr = this.stringToArray(this.separators);\r\n            this.tokenStart = -1;\r\n            this.tokenEnd = -1;\r\n        }\r\n        LineStream.prototype.stringToArray = function (str) {\r\n            if (!LineStream.STRING_TO_ARRAY_CACHE.hasOwnProperty(str)) {\r\n                LineStream.STRING_TO_ARRAY_CACHE[str] = this.actualStringToArray(str);\r\n            }\r\n            return LineStream.STRING_TO_ARRAY_CACHE[str];\r\n        };\r\n        LineStream.prototype.actualStringToArray = function (str) {\r\n            var maxCharCode = 0;\r\n            for (var i = 0; i < str.length; i++) {\r\n                maxCharCode = Math.max(maxCharCode, str.charCodeAt(i));\r\n            }\r\n            var r = [];\r\n            for (var i = 0; i <= maxCharCode; i++) {\r\n                r[i] = false;\r\n            }\r\n            for (var i = 0; i < str.length; i++) {\r\n                r[str.charCodeAt(i)] = true;\r\n            }\r\n            return r;\r\n        };\r\n        LineStream.prototype.pos = function () {\r\n            return this._pos;\r\n        };\r\n        LineStream.prototype.eos = function () {\r\n            return this._pos >= this.sourceLength;\r\n        };\r\n        LineStream.prototype.peek = function () {\r\n            // Check EOS\r\n            if (this._pos >= this.sourceLength) {\r\n                throw new Error('Stream is at the end');\r\n            }\r\n            return this._source[this._pos];\r\n        };\r\n        LineStream.prototype.next = function () {\r\n            // Check EOS\r\n            if (this._pos >= this.sourceLength) {\r\n                throw new Error('Stream is at the end');\r\n            }\r\n            // Reset peeked token\r\n            this.tokenStart = -1;\r\n            this.tokenEnd = -1;\r\n            return this._source[this._pos++];\r\n        };\r\n        LineStream.prototype.next2 = function () {\r\n            // Check EOS\r\n            if (this._pos >= this.sourceLength) {\r\n                throw new Error('Stream is at the end');\r\n            }\r\n            // Reset peeked token\r\n            this.tokenStart = -1;\r\n            this.tokenEnd = -1;\r\n            this._pos++;\r\n        };\r\n        LineStream.prototype.advance = function (n) {\r\n            if (n === 0) {\r\n                return '';\r\n            }\r\n            var oldPos = this._pos;\r\n            this._pos += n;\r\n            // Reset peeked token\r\n            this.tokenStart = -1;\r\n            this.tokenEnd = -1;\r\n            return this._source.substring(oldPos, this._pos);\r\n        };\r\n        LineStream.prototype._advance2 = function (n) {\r\n            if (n === 0) {\r\n                return n;\r\n            }\r\n            this._pos += n;\r\n            // Reset peeked token\r\n            this.tokenStart = -1;\r\n            this.tokenEnd = -1;\r\n            return n;\r\n        };\r\n        LineStream.prototype.advanceToEOS = function () {\r\n            var oldPos = this._pos;\r\n            this._pos = this.sourceLength;\r\n            this.resetPeekedToken();\r\n            return this._source.substring(oldPos, this._pos);\r\n        };\r\n        LineStream.prototype.goBack = function (n) {\r\n            this._pos -= n;\r\n            this.resetPeekedToken();\r\n        };\r\n        LineStream.prototype.createPeeker = function (condition) {\r\n            var _this = this;\r\n            if (condition instanceof RegExp) {\r\n                return function () {\r\n                    var result = condition.exec(_this._source.substr(_this._pos));\r\n                    if (result === null) {\r\n                        return 0;\r\n                    }\r\n                    else if (result.index !== 0) {\r\n                        throw new Error('Regular expression must begin with the character \"^\"');\r\n                    }\r\n                    return result[0].length;\r\n                };\r\n            }\r\n            else if ((condition instanceof String || (typeof condition) === 'string') && condition) {\r\n                return function () {\r\n                    var len = condition.length, match = _this._pos + len <= _this.sourceLength;\r\n                    for (var i = 0; match && i < len; i++) {\r\n                        match = _this._source.charCodeAt(_this._pos + i) === condition.charCodeAt(i);\r\n                    }\r\n                    return match ? len : 0;\r\n                };\r\n            }\r\n            throw new Error('Condition must be either a regular expression, function or a non-empty string');\r\n        };\r\n        // --- BEGIN `_advanceIfStringCaseInsensitive`\r\n        LineStream.prototype._advanceIfStringCaseInsensitive = function (condition) {\r\n            var oldPos = this._pos, source = this._source, len = condition.length, i;\r\n            if (len < 1 || oldPos + len > this.sourceLength) {\r\n                return 0;\r\n            }\r\n            for (i = 0; i < len; i++) {\r\n                if (source.charAt(oldPos + i).toLowerCase() !== condition.charAt(i).toLowerCase()) {\r\n                    return 0;\r\n                }\r\n            }\r\n            return len;\r\n        };\r\n        LineStream.prototype.advanceIfStringCaseInsensitive = function (condition) {\r\n            return this.advance(this._advanceIfStringCaseInsensitive(condition));\r\n        };\r\n        LineStream.prototype.advanceIfStringCaseInsensitive2 = function (condition) {\r\n            return this._advance2(this._advanceIfStringCaseInsensitive(condition));\r\n        };\r\n        // --- END\r\n        // --- BEGIN `advanceIfString`\r\n        LineStream.prototype._advanceIfString = function (condition) {\r\n            var oldPos = this._pos, source = this._source, len = condition.length, i;\r\n            if (len < 1 || oldPos + len > this.sourceLength) {\r\n                return 0;\r\n            }\r\n            for (i = 0; i < len; i++) {\r\n                if (source.charCodeAt(oldPos + i) !== condition.charCodeAt(i)) {\r\n                    return 0;\r\n                }\r\n            }\r\n            return len;\r\n        };\r\n        LineStream.prototype.advanceIfString = function (condition) {\r\n            return this.advance(this._advanceIfString(condition));\r\n        };\r\n        LineStream.prototype.advanceIfString2 = function (condition) {\r\n            return this._advance2(this._advanceIfString(condition));\r\n        };\r\n        // --- END\r\n        // --- BEGIN `advanceIfString`\r\n        LineStream.prototype._advanceIfCharCode = function (charCode) {\r\n            if (this._pos < this.sourceLength && this._source.charCodeAt(this._pos) === charCode) {\r\n                return 1;\r\n            }\r\n            return 0;\r\n        };\r\n        LineStream.prototype.advanceIfCharCode = function (charCode) {\r\n            return this.advance(this._advanceIfCharCode(charCode));\r\n        };\r\n        LineStream.prototype.advanceIfCharCode2 = function (charCode) {\r\n            return this._advance2(this._advanceIfCharCode(charCode));\r\n        };\r\n        // --- END\r\n        // --- BEGIN `advanceIfRegExp`\r\n        LineStream.prototype._advanceIfRegExp = function (condition) {\r\n            if (this._pos >= this.sourceLength) {\r\n                return 0;\r\n            }\r\n            if (!condition.test(this._source.substr(this._pos))) {\r\n                return 0;\r\n            }\r\n            return RegExp.lastMatch.length;\r\n        };\r\n        LineStream.prototype.advanceIfRegExp = function (condition) {\r\n            return this.advance(this._advanceIfRegExp(condition));\r\n        };\r\n        LineStream.prototype.advanceIfRegExp2 = function (condition) {\r\n            return this._advance2(this._advanceIfRegExp(condition));\r\n        };\r\n        // --- END\r\n        LineStream.prototype.advanceLoop = function (condition, isWhile, including) {\r\n            if (this.eos()) {\r\n                return '';\r\n            }\r\n            var peeker = this.createPeeker(condition);\r\n            var oldPos = this._pos;\r\n            var n = 0;\r\n            var f = null;\r\n            if (isWhile) {\r\n                f = function (n) {\r\n                    return n > 0;\r\n                };\r\n            }\r\n            else {\r\n                f = function (n) {\r\n                    return n === 0;\r\n                };\r\n            }\r\n            while (!this.eos() && f(n = peeker())) {\r\n                if (n > 0) {\r\n                    this.advance(n);\r\n                }\r\n                else {\r\n                    this.next();\r\n                }\r\n            }\r\n            if (including && !this.eos()) {\r\n                this.advance(n);\r\n            }\r\n            return this._source.substring(oldPos, this._pos);\r\n        };\r\n        LineStream.prototype.advanceWhile = function (condition) {\r\n            return this.advanceLoop(condition, true, false);\r\n        };\r\n        LineStream.prototype.advanceUntil = function (condition, including) {\r\n            return this.advanceLoop(condition, false, including);\r\n        };\r\n        // --- BEGIN `advanceUntilString`\r\n        LineStream.prototype._advanceUntilString = function (condition, including) {\r\n            if (this.eos() || condition.length === 0) {\r\n                return 0;\r\n            }\r\n            var oldPos = this._pos;\r\n            var index = this._source.indexOf(condition, oldPos);\r\n            if (index === -1) {\r\n                // String was not found => advanced to `eos`\r\n                return (this.sourceLength - oldPos);\r\n            }\r\n            if (including) {\r\n                // String was found => advance to include `condition`\r\n                return (index + condition.length - oldPos);\r\n            }\r\n            // String was found => advance right before `condition`\r\n            return (index - oldPos);\r\n        };\r\n        LineStream.prototype.advanceUntilString = function (condition, including) {\r\n            return this.advance(this._advanceUntilString(condition, including));\r\n        };\r\n        LineStream.prototype.advanceUntilString2 = function (condition, including) {\r\n            return this._advance2(this._advanceUntilString(condition, including));\r\n        };\r\n        // --- END\r\n        LineStream.prototype.resetPeekedToken = function () {\r\n            this.tokenStart = -1;\r\n            this.tokenEnd = -1;\r\n        };\r\n        LineStream.prototype.setTokenRules = function (separators, whitespace) {\r\n            if (this.separators !== separators || this.whitespace !== whitespace) {\r\n                this.separators = separators;\r\n                this.separatorsArr = this.stringToArray(this.separators);\r\n                this.whitespace = whitespace;\r\n                this.whitespaceArr = this.stringToArray(this.whitespace);\r\n                this.resetPeekedToken();\r\n            }\r\n        };\r\n        // --- tokens\r\n        LineStream.prototype.peekToken = function () {\r\n            if (this.tokenStart !== -1) {\r\n                return this._source.substring(this.tokenStart, this.tokenEnd);\r\n            }\r\n            var source = this._source, sourceLength = this.sourceLength, whitespaceArr = this.whitespaceArr, separatorsArr = this.separatorsArr, tokenStart = this._pos;\r\n            // Check EOS\r\n            if (tokenStart >= sourceLength) {\r\n                throw new Error('Stream is at the end');\r\n            }\r\n            // Skip whitespace\r\n            while (whitespaceArr[source.charCodeAt(tokenStart)] && tokenStart < sourceLength) {\r\n                tokenStart++;\r\n            }\r\n            var tokenEnd = tokenStart;\r\n            // If a separator is hit, it is a token\r\n            if (separatorsArr[source.charCodeAt(tokenEnd)] && tokenEnd < sourceLength) {\r\n                tokenEnd++;\r\n            }\r\n            else {\r\n                // Advance until a separator or a whitespace is hit\r\n                while (!separatorsArr[source.charCodeAt(tokenEnd)] && !whitespaceArr[source.charCodeAt(tokenEnd)] && tokenEnd < sourceLength) {\r\n                    tokenEnd++;\r\n                }\r\n            }\r\n            // Cache peeked token\r\n            this.tokenStart = tokenStart;\r\n            this.tokenEnd = tokenEnd;\r\n            return source.substring(tokenStart, tokenEnd);\r\n        };\r\n        LineStream.prototype.nextToken = function () {\r\n            // Check EOS\r\n            if (this._pos >= this.sourceLength) {\r\n                throw new Error('Stream is at the end');\r\n            }\r\n            // Peek token if necessary\r\n            var result;\r\n            if (this.tokenStart === -1) {\r\n                result = this.peekToken();\r\n            }\r\n            else {\r\n                result = this._source.substring(this.tokenStart, this.tokenEnd);\r\n            }\r\n            // Advance to tokenEnd\r\n            this._pos = this.tokenEnd;\r\n            // Reset peeked token\r\n            this.tokenStart = -1;\r\n            this.tokenEnd = -1;\r\n            return result;\r\n        };\r\n        // -- whitespace\r\n        LineStream.prototype.peekWhitespace = function () {\r\n            var source = this._source, sourceLength = this.sourceLength, whitespaceArr = this.whitespaceArr, peek = this._pos;\r\n            while (whitespaceArr[source.charCodeAt(peek)] && peek < sourceLength) {\r\n                peek++;\r\n            }\r\n            return source.substring(this._pos, peek);\r\n        };\r\n        // --- BEGIN `advanceIfRegExp`\r\n        LineStream.prototype._skipWhitespace = function () {\r\n            var source = this._source, sourceLength = this.sourceLength, whitespaceArr = this.whitespaceArr, oldPos = this._pos, peek = this._pos;\r\n            while (whitespaceArr[source.charCodeAt(peek)] && peek < sourceLength) {\r\n                peek++;\r\n            }\r\n            return (peek - oldPos);\r\n        };\r\n        LineStream.prototype.skipWhitespace = function () {\r\n            return this.advance(this._skipWhitespace());\r\n        };\r\n        LineStream.prototype.skipWhitespace2 = function () {\r\n            return this._advance2(this._skipWhitespace());\r\n        };\r\n        LineStream.STRING_TO_ARRAY_CACHE = {};\r\n        return LineStream;\r\n    })();\r\n    exports.LineStream = LineStream;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/editor/common/modes/monarch/monarchCommon\", [\"require\", \"exports\"], function (require, exports) {\r\n    // Small helper functions\r\n    /**\r\n     * Is a string null, undefined, or empty?\r\n     */\r\n    function empty(s) {\r\n        return (s ? false : true);\r\n    }\r\n    exports.empty = empty;\r\n    /**\r\n     * Puts a string to lower case if 'ignoreCase' is set.\r\n     */\r\n    function fixCase(lexer, str) {\r\n        return (lexer.ignoreCase && str ? str.toLowerCase() : str);\r\n    }\r\n    exports.fixCase = fixCase;\r\n    /**\r\n     * Ensures there are no bad characters in a CSS token class.\r\n     */\r\n    function sanitize(s) {\r\n        return s.replace(/[&<>'\"_]/g, '-'); // used on all output token CSS classes\r\n    }\r\n    exports.sanitize = sanitize;\r\n    // Logging\r\n    /**\r\n     * Logs a message.\r\n     */\r\n    function log(lexer, msg) {\r\n        console.log(lexer.name + \": \" + msg);\r\n    }\r\n    exports.log = log;\r\n    // Throwing errors\r\n    /**\r\n     * Throws error. May actually just log the error and continue.\r\n     */\r\n    function throwError(lexer, msg) {\r\n        throw new Error(lexer.name + \": \" + msg);\r\n    }\r\n    exports.throwError = throwError;\r\n    // Helper functions for rule finding and substitution\r\n    /**\r\n     * substituteMatches is used on lexer strings and can substitutes predefined patterns:\r\n     * \t\t$$  => $\r\n     * \t\t$#  => id\r\n     * \t\t$n  => matched entry n\r\n     * \t\t@attr => contents of lexer[attr]\r\n     *\r\n     * See documentation for more info\r\n     */\r\n    function substituteMatches(lexer, str, id, matches, state) {\r\n        var re = /\\$((\\$)|(#)|(\\d\\d?)|[sS](\\d\\d?)|@(\\w+))/g;\r\n        var stateMatches = null;\r\n        return str.replace(re, function (full, sub, dollar, hash, n, s, attr, ofs, total) {\r\n            if (!empty(dollar))\r\n                return '$'; // $$\r\n            if (!empty(hash))\r\n                return fixCase(lexer, id); // default $#\r\n            if (!empty(n) && n < matches.length)\r\n                return fixCase(lexer, matches[n]); // $n\r\n            if (!empty(attr) && lexer && typeof (lexer[attr]) === 'string')\r\n                return lexer[attr]; //@attribute\r\n            if (stateMatches === null) {\r\n                stateMatches = state.split('.');\r\n                stateMatches.unshift(state);\r\n            }\r\n            if (!empty(s) && s < stateMatches.length)\r\n                return fixCase(lexer, stateMatches[s]); //$Sn\r\n            return '';\r\n        });\r\n    }\r\n    exports.substituteMatches = substituteMatches;\r\n    /**\r\n     * Find the tokenizer rules for a specific state (i.e. next action)\r\n     */\r\n    function findRules(lexer, state) {\r\n        while (state && state.length > 0) {\r\n            var rules = lexer.tokenizer[state];\r\n            if (rules)\r\n                return rules;\r\n            var idx = state.lastIndexOf('.');\r\n            if (idx < 0)\r\n                state = null; // no further parent\r\n            else\r\n                state = state.substr(0, idx);\r\n        }\r\n        return null;\r\n    }\r\n    exports.findRules = findRules;\r\n    /**\r\n     * Is a certain state defined? In contrast to 'findRules' this works on a ILexerMin.\r\n     * This is used during compilation where we may know the defined states\r\n     * but not yet whether the corresponding rules are correct.\r\n     */\r\n    function stateExists(lexer, state) {\r\n        while (state && state.length > 0) {\r\n            var exist = lexer.stateNames[state];\r\n            if (exist)\r\n                return true;\r\n            var idx = state.lastIndexOf('.');\r\n            if (idx < 0)\r\n                state = null; // no further parent\r\n            else\r\n                state = state.substr(0, idx);\r\n        }\r\n        return false;\r\n    }\r\n    exports.stateExists = stateExists;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/editor/common/modes/monarch/monarchCompile\", [\"require\", \"exports\", 'vs/editor/common/modes/monarch/monarchCommon', 'vs/editor/common/modes', 'vs/base/common/objects'], function (require, exports, MonarchCommonTypes, Modes, Objects) {\r\n    /*\r\n     * Type helpers\r\n     *\r\n     * Note: this is just for sanity checks on the JSON description which is\r\n     * helpful for the programmer. No checks are done anymore once the lexer is\r\n     * already 'compiled and checked'.\r\n     *\r\n     */\r\n    function isArrayOf(elemType, obj) {\r\n        if (!obj)\r\n            return false;\r\n        if (!(Array.isArray(obj)))\r\n            return false;\r\n        var idx;\r\n        for (idx in obj) {\r\n            if (obj.hasOwnProperty(idx)) {\r\n                if (!(elemType(obj[idx])))\r\n                    return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    function bool(prop, def, onerr) {\r\n        if (typeof (prop) === 'boolean')\r\n            return prop;\r\n        if (onerr && (prop || def === undefined))\r\n            onerr(); // type is wrong, or there is no default\r\n        return (def === undefined ? null : def);\r\n    }\r\n    function string(prop, def, onerr) {\r\n        if (typeof (prop) === 'string')\r\n            return prop;\r\n        if (onerr && (prop || def === undefined))\r\n            onerr(); // type is wrong, or there is no default\r\n        return (def === undefined ? null : def);\r\n    }\r\n    function regExString(prop, def, onerr) {\r\n        // for now just a string\r\n        return string(prop, def, onerr);\r\n    }\r\n    function number(prop, def, onerr) {\r\n        if (typeof (prop) === 'number')\r\n            return prop;\r\n        if (onerr && (prop || def === undefined))\r\n            onerr(); // type is wrong, or there is no default\r\n        return (def === undefined ? null : def);\r\n    }\r\n    function stringArray(prop, def, onerr) {\r\n        if (isArrayOf(function (elem) { return (typeof (elem) === 'string'); }, prop))\r\n            return prop.slice(0);\r\n        if (typeof (prop) === 'string')\r\n            return [prop];\r\n        if (onerr && (prop || def === undefined))\r\n            onerr(); // type is wrong, or there is no default\r\n        return (def === undefined ? null : def);\r\n    }\r\n    // Lexer helpers\r\n    /**\r\n     * Compiles a regular expression string, adding the 'i' flag if 'ignoreCase' is set.\r\n     * Also replaces @\\w+ or sequences with the content of the specified attribute\r\n     */\r\n    function compileRegExp(lexer, str) {\r\n        if (typeof (str) !== 'string')\r\n            return null;\r\n        var n = 0;\r\n        while (str.indexOf('@') >= 0 && n < 5) {\r\n            n++;\r\n            str = str.replace(/@(\\w+)/g, function (s, attr) {\r\n                var sub = '';\r\n                if (typeof (lexer[attr]) === 'string') {\r\n                    sub = lexer[attr];\r\n                }\r\n                else if (lexer[attr] && lexer[attr] instanceof RegExp) {\r\n                    sub = lexer[attr].source;\r\n                }\r\n                else {\r\n                    if (lexer[attr] === undefined)\r\n                        MonarchCommonTypes.throwError(lexer, 'language definition does not contain attribute \\'' + attr + '\\', used at: ' + str);\r\n                    else\r\n                        MonarchCommonTypes.throwError(lexer, 'attribute reference \\'' + attr + '\\' must be a string, used at: ' + str);\r\n                }\r\n                return (MonarchCommonTypes.empty(sub) ? '' : '(?:' + sub + ')');\r\n            });\r\n        }\r\n        return new RegExp(str, (lexer.ignoreCase ? 'i' : ''));\r\n    }\r\n    /**\r\n     * Compiles guard functions for case matches.\r\n     * This compiles 'cases' attributes into efficient match functions.\r\n     *\r\n     */\r\n    function selectScrutinee(id, matches, state, num) {\r\n        if (num < 0)\r\n            return id;\r\n        if (num < matches.length)\r\n            return matches[num];\r\n        if (num >= 100) {\r\n            num = num - 100;\r\n            var parts = state.split('.');\r\n            parts.unshift(state);\r\n            if (num < parts.length)\r\n                return parts[num];\r\n        }\r\n        return null;\r\n    }\r\n    function createGuard(lexer, ruleName, tkey, val) {\r\n        // get the scrutinee and pattern\r\n        var scrut = -1; // -1: $!, 0-99: $n, 100+n: $Sn\r\n        var oppat = tkey;\r\n        var matches = tkey.match(/^\\$(([sS]?)(\\d\\d?)|#)(.*)$/);\r\n        if (matches) {\r\n            if (matches[3]) {\r\n                scrut = parseInt(matches[3]);\r\n                if (matches[2])\r\n                    scrut = scrut + 100; // if [sS] present\r\n            }\r\n            oppat = matches[4];\r\n        }\r\n        // get operator\r\n        var op = '~';\r\n        var pat = oppat;\r\n        if (!oppat || oppat.length === 0) {\r\n            op = '!=';\r\n            pat = '';\r\n        }\r\n        else if (/^\\w*$/.test(pat)) {\r\n            op = '==';\r\n        }\r\n        else {\r\n            matches = oppat.match(/^(@|!@|~|!~|==|!=)(.*)$/);\r\n            if (matches) {\r\n                op = matches[1];\r\n                pat = matches[2];\r\n            }\r\n        }\r\n        // set the tester function\r\n        var tester;\r\n        // special case a regexp that matches just words\r\n        if ((op === '~' || op === '!~') && /^(\\w|\\|)*$/.test(pat)) {\r\n            var inWords = Objects.createKeywordMatcher(pat.split('|'), lexer.ignoreCase);\r\n            tester = function (s) { return (op === '~' ? inWords(s) : !inWords(s)); };\r\n        }\r\n        else if (op === '@' || op === '!@') {\r\n            var words = lexer[pat];\r\n            if (!words) {\r\n                MonarchCommonTypes.throwError(lexer, 'the @ match target \\'' + pat + '\\' is not defined, in rule: ' + ruleName);\r\n            }\r\n            if (!(isArrayOf(function (elem) { return (typeof (elem) === 'string'); }, words))) {\r\n                MonarchCommonTypes.throwError(lexer, 'the @ match target \\'' + pat + '\\' must be an array of strings, in rule: ' + ruleName);\r\n            }\r\n            var inWords = Objects.createKeywordMatcher(words, lexer.ignoreCase);\r\n            tester = function (s) { return (op === '@' ? inWords(s) : !inWords(s)); };\r\n        }\r\n        else if (op === '~' || op === '!~') {\r\n            if (pat.indexOf('$') < 0) {\r\n                // precompile regular expression\r\n                var re = compileRegExp(lexer, '^' + pat + '$');\r\n                tester = function (s) { return (op === '~' ? re.test(s) : !re.test(s)); };\r\n            }\r\n            else {\r\n                tester = function (s, id, matches, state) {\r\n                    var re = compileRegExp(lexer, '^' + MonarchCommonTypes.substituteMatches(lexer, pat, id, matches, state) + '$');\r\n                    return re.test(s);\r\n                };\r\n            }\r\n        }\r\n        else {\r\n            if (pat.indexOf('$') < 0) {\r\n                var patx = MonarchCommonTypes.fixCase(lexer, pat);\r\n                tester = function (s) { return (op === '==' ? s === patx : s !== patx); };\r\n            }\r\n            else {\r\n                var patx = MonarchCommonTypes.fixCase(lexer, pat);\r\n                tester = function (s, id, matches, state, eos) {\r\n                    var patexp = MonarchCommonTypes.substituteMatches(lexer, patx, id, matches, state);\r\n                    return (op === '==' ? s === patexp : s !== patexp);\r\n                };\r\n            }\r\n        }\r\n        // return the branch object\r\n        if (scrut === -1) {\r\n            return {\r\n                name: tkey, value: val, test: function (id, matches, state, eos) {\r\n                    return tester(id, id, matches, state, eos);\r\n                }\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                name: tkey, value: val, test: function (id, matches, state, eos) {\r\n                    var scrutinee = selectScrutinee(id, matches, state, scrut);\r\n                    return tester(!scrutinee ? '' : scrutinee, id, matches, state, eos);\r\n                }\r\n            };\r\n        }\r\n    }\r\n    /**\r\n     * Compiles an action: i.e. optimize regular expressions and case matches\r\n     * and do many sanity checks.\r\n     *\r\n     * This is called only during compilation but if the lexer definition\r\n     * contains user functions as actions (which is usually not allowed), then this\r\n     * may be called during lexing. It is important therefore to compile common cases efficiently\r\n     */\r\n    function compileAction(lexer, ruleName, action) {\r\n        if (!action) {\r\n            return { token: '' };\r\n        }\r\n        else if (typeof (action) === 'string') {\r\n            return action; // { token: action };\r\n        }\r\n        else if (action.token || action.token === '') {\r\n            if (typeof (action.token) !== 'string') {\r\n                MonarchCommonTypes.throwError(lexer, 'a \\'token\\' attribute must be of type string, in rule: ' + ruleName);\r\n                return { token: '' };\r\n            }\r\n            else {\r\n                // only copy specific typed fields (only happens once during compile Lexer)\r\n                var newAction = { token: action.token };\r\n                if (action.token.indexOf('$') >= 0) {\r\n                    newAction.tokenSubst = true;\r\n                }\r\n                if (typeof (action.bracket) === 'string') {\r\n                    if (action.bracket === '@open')\r\n                        newAction.bracket = Modes.Bracket.Open;\r\n                    else if (action.bracket === '@close')\r\n                        newAction.bracket = Modes.Bracket.Close;\r\n                    else {\r\n                        MonarchCommonTypes.throwError(lexer, 'a \\'bracket\\' attribute must be either \\'@open\\' or \\'@close\\', in rule: ' + ruleName);\r\n                    }\r\n                }\r\n                if (action.next) {\r\n                    if (typeof (action.next) !== 'string') {\r\n                        MonarchCommonTypes.throwError(lexer, 'the next state must be a string value in rule: ' + ruleName);\r\n                    }\r\n                    else {\r\n                        var next = action.next;\r\n                        if (!/^(@pop|@push|@popall)$/.test(next)) {\r\n                            if (next[0] === '@')\r\n                                next = next.substr(1); // peel off starting @ sign\r\n                            if (next.indexOf('$') < 0) {\r\n                                if (!MonarchCommonTypes.stateExists(lexer, MonarchCommonTypes.substituteMatches(lexer, next, '', [], ''))) {\r\n                                    MonarchCommonTypes.throwError(lexer, 'the next state \\'' + action.next + '\\' is not defined in rule: ' + ruleName);\r\n                                }\r\n                            }\r\n                        }\r\n                        newAction.next = next;\r\n                    }\r\n                }\r\n                if (typeof (action.goBack) === 'number')\r\n                    newAction.goBack = action.goBack;\r\n                if (typeof (action.switchTo) === 'string')\r\n                    newAction.switchTo = action.switchTo;\r\n                if (typeof (action.log) === 'string')\r\n                    newAction.log = action.log;\r\n                if (typeof (action.nextEmbedded) === 'string') {\r\n                    newAction.nextEmbedded = action.nextEmbedded;\r\n                    lexer.usesEmbedded = true;\r\n                }\r\n                return newAction;\r\n            }\r\n        }\r\n        else if (Array.isArray(action)) {\r\n            var results = [];\r\n            var idx;\r\n            for (idx in action) {\r\n                if (action.hasOwnProperty(idx)) {\r\n                    results[idx] = compileAction(lexer, ruleName, action[idx]);\r\n                }\r\n            }\r\n            return { group: results };\r\n        }\r\n        else if (action.cases) {\r\n            // build an array of test cases\r\n            var cases = [];\r\n            // for each case, push a test function and result value\r\n            var tkey;\r\n            for (tkey in action.cases) {\r\n                if (action.cases.hasOwnProperty(tkey)) {\r\n                    var val = compileAction(lexer, ruleName, action.cases[tkey]);\r\n                    // what kind of case\r\n                    if (tkey === '@default' || tkey === '@' || tkey === '') {\r\n                        cases.push({ test: null, value: val, name: tkey });\r\n                    }\r\n                    else if (tkey === '@eos') {\r\n                        cases.push({ test: function (id, matches, state, eos) { return eos; }, value: val, name: tkey });\r\n                    }\r\n                    else {\r\n                        cases.push(createGuard(lexer, ruleName, tkey, val)); // call separate function to avoid local variable capture\r\n                    }\r\n                }\r\n            }\r\n            // create a matching function\r\n            var def = lexer.defaultToken;\r\n            return {\r\n                test: function (id, matches, state, eos) {\r\n                    var idx;\r\n                    for (idx in cases) {\r\n                        if (cases.hasOwnProperty(idx)) {\r\n                            var didmatch = (!cases[idx].test || cases[idx].test(id, matches, state, eos));\r\n                            if (didmatch) {\r\n                                return cases[idx].value;\r\n                            }\r\n                        }\r\n                    }\r\n                    return def;\r\n                }\r\n            };\r\n        }\r\n        else {\r\n            MonarchCommonTypes.throwError(lexer, 'an action must be a string, an object with a \\'token\\' or \\'cases\\' attribute, or an array of actions; in rule: ' + ruleName);\r\n            return '';\r\n        }\r\n    }\r\n    /**\r\n     * Helper class for creating matching rules\r\n     */\r\n    var Rule = (function () {\r\n        function Rule(name) {\r\n            this.regex = new RegExp('');\r\n            this.action = { token: '' };\r\n            this.matchOnlyAtLineStart = false;\r\n            this.name = '';\r\n            this.name = name;\r\n        }\r\n        Rule.prototype.setRegex = function (lexer, re) {\r\n            var sregex;\r\n            if (typeof (re) === 'string') {\r\n                sregex = re;\r\n            }\r\n            else if (re instanceof RegExp) {\r\n                sregex = re.source;\r\n            }\r\n            else {\r\n                MonarchCommonTypes.throwError(lexer, 'rules must start with a match string or regular expression: ' + this.name);\r\n            }\r\n            this.matchOnlyAtLineStart = (sregex.length > 0 && sregex[0] === '^');\r\n            this.name = this.name + ': ' + sregex;\r\n            this.regex = compileRegExp(lexer, '^(?:' + (this.matchOnlyAtLineStart ? sregex.substr(1) : sregex) + ')');\r\n        };\r\n        Rule.prototype.setAction = function (lexer, act) {\r\n            this.action = compileAction(lexer, this.name, act);\r\n        };\r\n        return Rule;\r\n    })();\r\n    /**\r\n     * Compiles a json description function into json where all regular expressions,\r\n     * case matches etc, are compiled and all include rules are expanded.\r\n     * We also compile the bracket definitions, supply defaults, and do many sanity checks.\r\n     * If the 'jsonStrict' parameter is 'false', we allow at certain locations\r\n     * regular expression objects and functions that get called during lexing.\r\n     * (Currently we have no samples that need this so perhaps we should always have\r\n     * jsonStrict to true).\r\n     */\r\n    function compile(json) {\r\n        if (!json || typeof (json) !== 'object') {\r\n            throw new Error('Monarch: expecting a language definition object');\r\n        }\r\n        // Get names\r\n        if (typeof (json.name) !== 'string') {\r\n            throw new Error('Monarch: a language definition must include a string \\'name\\' attribute');\r\n        }\r\n        // Create our lexer\r\n        var lexer = {};\r\n        lexer.name = json.name;\r\n        lexer.displayName = string(json.displayName, lexer.name);\r\n        lexer.noThrow = false; // raise exceptions during compilation\r\n        lexer.maxStack = 100;\r\n        // Set standard fields: be defensive about types\r\n        lexer.start = string(json.start);\r\n        lexer.ignoreCase = bool(json.ignoreCase, false);\r\n        lexer.lineComment = string(json.lineComment, '//');\r\n        lexer.blockCommentStart = string(json.blockCommentStart, '/*');\r\n        lexer.blockCommentEnd = string(json.blockCommentEnd, '*/');\r\n        lexer.tokenPostfix = string(json.tokenPostfix, '.' + lexer.name);\r\n        lexer.defaultToken = string(json.defaultToken, 'source', function () { MonarchCommonTypes.throwError(lexer, 'the \\'defaultToken\\' must be a string'); });\r\n        lexer.usesEmbedded = false; // becomes true if we find a nextEmbedded action\r\n        lexer.wordDefinition = json.wordDefinition || undefined;\r\n        // COMPAT: with earlier monarch versions\r\n        if (!lexer.lineComment && json.lineComments) {\r\n            if (typeof (json.lineComments) === 'string') {\r\n                lexer.lineComment = json.lineComments;\r\n            }\r\n            else if (typeof (json.lineComments[0]) === 'string') {\r\n                lexer.lineComment = json.lineComments[0];\r\n            }\r\n        }\r\n        lexer.suggestSupport = {\r\n            textualCompletions: true,\r\n            disableAutoTrigger: false,\r\n            triggerCharacters: [],\r\n            snippets: []\r\n        };\r\n        if (typeof json.suggestSupport !== 'undefined') {\r\n            var suggestSupport = json.suggestSupport;\r\n            if (Array.isArray(suggestSupport.snippets)) {\r\n                var _snippets = suggestSupport.snippets;\r\n                for (var i = 0, len = _snippets.length; i < len; i++) {\r\n                    if (typeof _snippets[i] === 'string') {\r\n                        lexer.suggestSupport.snippets.push({\r\n                            type: 'snippet',\r\n                            label: _snippets[i],\r\n                            codeSnippet: _snippets[i]\r\n                        });\r\n                    }\r\n                    else {\r\n                        lexer.suggestSupport.snippets.push(_snippets[i]);\r\n                    }\r\n                }\r\n            }\r\n            if (Array.isArray(suggestSupport.triggerCharacters)) {\r\n                lexer.suggestSupport.triggerCharacters = suggestSupport.triggerCharacters;\r\n            }\r\n            if (typeof suggestSupport.textualCompletions !== 'undefined') {\r\n                lexer.suggestSupport.textualCompletions = suggestSupport.textualCompletions;\r\n            }\r\n            if (typeof suggestSupport.disableAutoTrigger !== 'undefined') {\r\n                lexer.suggestSupport.disableAutoTrigger = suggestSupport.disableAutoTrigger;\r\n            }\r\n        }\r\n        // For calling compileAction later on\r\n        var lexerMin = json;\r\n        lexerMin.name = lexer.name;\r\n        lexerMin.displayName = lexer.displayName;\r\n        lexerMin.ignoreCase = lexer.ignoreCase;\r\n        lexerMin.noThrow = lexer.noThrow;\r\n        lexerMin.usesEmbedded = lexer.usesEmbedded;\r\n        lexerMin.stateNames = json.tokenizer;\r\n        lexerMin.defaultToken = lexer.defaultToken;\r\n        // Compile an array of rules into newrules where RegExp objects are created.\r\n        function addRules(state, newrules, rules) {\r\n            var idx;\r\n            for (idx in rules) {\r\n                if (rules.hasOwnProperty(idx)) {\r\n                    var rule = rules[idx];\r\n                    var include = rule.include;\r\n                    if (include) {\r\n                        if (typeof (include) !== 'string') {\r\n                            MonarchCommonTypes.throwError(lexer, 'an \\'include\\' attribute must be a string at: ' + state);\r\n                        }\r\n                        if (include[0] === '@')\r\n                            include = include.substr(1); // peel off starting @\r\n                        if (!json.tokenizer[include]) {\r\n                            MonarchCommonTypes.throwError(lexer, 'include target \\'' + include + '\\' is not defined at: ' + state);\r\n                        }\r\n                        addRules(state + '.' + include, newrules, json.tokenizer[include]);\r\n                    }\r\n                    else {\r\n                        var newrule = new Rule(state);\r\n                        // Set up new rule attributes\r\n                        if (Array.isArray(rule) && rule.length >= 1 && rule.length <= 3) {\r\n                            newrule.setRegex(lexerMin, rule[0]);\r\n                            if (rule.length >= 3) {\r\n                                if (typeof (rule[1]) === 'string') {\r\n                                    newrule.setAction(lexerMin, { token: rule[1], next: rule[2] });\r\n                                }\r\n                                else if (typeof (rule[1]) === 'object') {\r\n                                    var rule1 = rule[1];\r\n                                    rule1.next = rule[2];\r\n                                    newrule.setAction(lexerMin, rule1);\r\n                                }\r\n                                else {\r\n                                    MonarchCommonTypes.throwError(lexer, 'a next state as the last element of a rule can only be given if the action is either an object or a string, at: ' + state);\r\n                                }\r\n                            }\r\n                            else {\r\n                                newrule.setAction(lexerMin, rule[1]);\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (!rule.regex) {\r\n                                MonarchCommonTypes.throwError(lexer, 'a rule must either be an array, or an object with a \\'regex\\' or \\'include\\' field at: ' + state);\r\n                            }\r\n                            if (rule.name)\r\n                                newrule.name = string(rule.name);\r\n                            if (rule.matchOnlyAtStart)\r\n                                newrule.matchOnlyAtLineStart = bool(rule.matchOnlyAtLineStart);\r\n                            newrule.setRegex(lexerMin, rule.regex);\r\n                            newrule.setAction(lexerMin, rule.action);\r\n                        }\r\n                        newrules.push(newrule);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // compile the tokenizer rules\r\n        if (!json.tokenizer || typeof (json.tokenizer) !== 'object') {\r\n            MonarchCommonTypes.throwError(lexer, 'a language definition must define the \\'tokenizer\\' attribute as an object');\r\n        }\r\n        lexer.tokenizer = [];\r\n        var key;\r\n        for (key in json.tokenizer) {\r\n            if (json.tokenizer.hasOwnProperty(key)) {\r\n                if (!lexer.start)\r\n                    lexer.start = key;\r\n                var rules = json.tokenizer[key];\r\n                lexer.tokenizer[key] = new Array();\r\n                addRules('tokenizer.' + key, lexer.tokenizer[key], rules);\r\n            }\r\n        }\r\n        lexer.usesEmbedded = lexerMin.usesEmbedded; // can be set during compileAction\r\n        // Set simple brackets\r\n        if (json.brackets) {\r\n            if (!(Array.isArray(json.brackets))) {\r\n                MonarchCommonTypes.throwError(lexer, 'the \\'brackets\\' attribute must be defined as an array');\r\n            }\r\n        }\r\n        else {\r\n            json.brackets = [\r\n                { open: '{', close: '}', token: 'delimiter.curly' },\r\n                { open: '[', close: ']', token: 'delimiter.square' },\r\n                { open: '(', close: ')', token: 'delimiter.parenthesis' },\r\n                { open: '<', close: '>', token: 'delimiter.angle' }];\r\n        }\r\n        var brackets = [];\r\n        for (var bracketIdx in json.brackets) {\r\n            if (json.brackets.hasOwnProperty(bracketIdx)) {\r\n                var desc = json.brackets[bracketIdx];\r\n                if (desc && Array.isArray(desc) && desc.length === 3) {\r\n                    desc = { token: desc[2], open: desc[0], close: desc[1] };\r\n                }\r\n                if (desc.open === desc.close) {\r\n                    MonarchCommonTypes.throwError(lexer, 'open and close brackets in a \\'brackets\\' attribute must be different: ' + desc.open +\r\n                        '\\n hint: use the \\'bracket\\' attribute if matching on equal brackets is required.');\r\n                }\r\n                if (typeof (desc.open) === 'string' && typeof (desc.token) === 'string') {\r\n                    brackets.push({\r\n                        token: string(desc.token) + lexer.tokenPostfix,\r\n                        open: MonarchCommonTypes.fixCase(lexer, string(desc.open)),\r\n                        close: MonarchCommonTypes.fixCase(lexer, string(desc.close))\r\n                    });\r\n                }\r\n                else {\r\n                    MonarchCommonTypes.throwError(lexer, 'every element in the \\'brackets\\' array must be a \\'{open,close,token}\\' object or array');\r\n                }\r\n            }\r\n        }\r\n        lexer.brackets = brackets;\r\n        // Set default auto closing pairs\r\n        var autoClosingPairs;\r\n        if (json.autoClosingPairs) {\r\n            if (!(Array.isArray(json.autoClosingPairs))) {\r\n                MonarchCommonTypes.throwError(lexer, 'the \\'autoClosingPairs\\' attribute must be an array of string pairs (as arrays)');\r\n            }\r\n            autoClosingPairs = json.autoClosingPairs.slice(0);\r\n        }\r\n        else {\r\n            autoClosingPairs = [['\"', '\"'], ['\\'', '\\''], ['@brackets']];\r\n        }\r\n        // set auto closing pairs\r\n        lexer.autoClosingPairs = [];\r\n        if (autoClosingPairs) {\r\n            for (var autoClosingPairIdx in autoClosingPairs) {\r\n                if (autoClosingPairs.hasOwnProperty(autoClosingPairIdx)) {\r\n                    var pair = autoClosingPairs[autoClosingPairIdx];\r\n                    var openClose;\r\n                    if (pair === '@brackets' || pair[0] === '@brackets') {\r\n                        var bidx;\r\n                        for (bidx in brackets) {\r\n                            if (brackets.hasOwnProperty(bidx)) {\r\n                                if (brackets[bidx].open && brackets[bidx].open.length === 1 &&\r\n                                    brackets[bidx].close && brackets[bidx].close.length === 1) {\r\n                                    openClose = { open: brackets[bidx].open, close: brackets[bidx].close, notIn: ['string', 'comment'] };\r\n                                    lexer.autoClosingPairs.push(openClose);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (Array.isArray(pair) && pair.length === 2 &&\r\n                        typeof (pair[0]) === 'string' && pair[0].length === 1 &&\r\n                        typeof (pair[1]) === 'string' && pair[1].length === 1) {\r\n                        openClose = { open: MonarchCommonTypes.fixCase(lexer, pair[0]), close: MonarchCommonTypes.fixCase(lexer, pair[1]), notIn: ['string', 'comment'] };\r\n                        lexer.autoClosingPairs.push(openClose);\r\n                    }\r\n                    else if (typeof (pair.open) === 'string' && pair.open.length === 1 &&\r\n                        typeof (pair.close) === 'string' && pair.close.length === 1) {\r\n                        openClose = { open: MonarchCommonTypes.fixCase(lexer, pair.open[0]), close: MonarchCommonTypes.fixCase(lexer, pair.close[0]), notIn: ['string', 'comment'] };\r\n                        lexer.autoClosingPairs.push(openClose);\r\n                    }\r\n                    else {\r\n                        MonarchCommonTypes.throwError(lexer, 'every element in an \\'autoClosingPairs\\' array must be a pair of 1 character strings, or a \\'@brackets\\' directive');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // Set enhanced brackets\r\n        var enhancedBrackets = [];\r\n        if (json.enhancedBrackets) {\r\n            if (!(Array.isArray(json.enhancedBrackets))) {\r\n                MonarchCommonTypes.throwError(lexer, 'the \\'enhancedBrackets\\' attribute must be defined as an array');\r\n            }\r\n            for (var bracketIdx in json.enhancedBrackets) {\r\n                if (json.enhancedBrackets.hasOwnProperty(bracketIdx)) {\r\n                    var desc = json.enhancedBrackets[bracketIdx];\r\n                    if (desc.hasOwnProperty('openTrigger') && typeof (desc.openTrigger) !== 'string') {\r\n                        MonarchCommonTypes.throwError(lexer, 'openTrigger in the \\'enhancedBrackets\\' array must be a string');\r\n                    }\r\n                    if (desc.hasOwnProperty('open') && !(desc.open instanceof RegExp)) {\r\n                        MonarchCommonTypes.throwError(lexer, 'open in the \\'enhancedBrackets\\' array must be a regex');\r\n                    }\r\n                    if (desc.hasOwnProperty('closeComplete') && typeof (desc.closeComplete) !== 'string') {\r\n                        MonarchCommonTypes.throwError(lexer, 'closeComplete in the \\'enhancedBrackets\\' array must be a string');\r\n                    }\r\n                    if (desc.hasOwnProperty('matchCase') && typeof (desc.matchCase) !== 'boolean') {\r\n                        MonarchCommonTypes.throwError(lexer, 'matchCase in the \\'enhancedBrackets\\' array must be a boolean');\r\n                    }\r\n                    if (desc.hasOwnProperty('closeTrigger') && typeof (desc.closeTrigger) !== 'string') {\r\n                        MonarchCommonTypes.throwError(lexer, 'closeTrigger in the \\'enhancedBrackets\\' array must be a string');\r\n                    }\r\n                    if (desc.hasOwnProperty('close') && !(desc.close instanceof RegExp)) {\r\n                        MonarchCommonTypes.throwError(lexer, 'close in the \\'enhancedBrackets\\' array must be a regex');\r\n                    }\r\n                    if (desc.hasOwnProperty('tokenType')) {\r\n                        if (typeof (desc.tokenType) !== 'string') {\r\n                            MonarchCommonTypes.throwError(lexer, 'tokenType in the \\'enhancedBrackets\\' array must be a string');\r\n                        }\r\n                        else {\r\n                            desc.tokenType += lexer.tokenPostfix;\r\n                        }\r\n                    }\r\n                    enhancedBrackets.push(desc);\r\n                }\r\n            }\r\n        }\r\n        lexer.enhancedBrackets = enhancedBrackets;\r\n        var standardBrackets = [];\r\n        for (var i = 0; i < brackets.length; ++i) {\r\n            standardBrackets.push({\r\n                tokenType: brackets[i].token,\r\n                open: brackets[i].open,\r\n                close: brackets[i].close,\r\n                isElectric: true\r\n            });\r\n        }\r\n        lexer.standardBrackets = standardBrackets;\r\n        lexer.outdentTriggers = string(json.outdentTriggers, '');\r\n        // Disable throw so the syntax highlighter goes, no matter what\r\n        lexer.noThrow = true;\r\n        return lexer;\r\n    }\r\n    exports.compile = compile;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/editor/common/modes/nullMode\", [\"require\", \"exports\", 'vs/editor/common/modes'], function (require, exports, Modes) {\r\n    var NullState = (function () {\r\n        function NullState(mode, stateData) {\r\n            this.mode = mode;\r\n            this.stateData = stateData;\r\n        }\r\n        NullState.prototype.clone = function () {\r\n            var stateDataClone = (this.stateData ? this.stateData.clone() : null);\r\n            return new NullState(this.mode, stateDataClone);\r\n        };\r\n        NullState.prototype.equals = function (other) {\r\n            if (this.mode !== other.getMode()) {\r\n                return false;\r\n            }\r\n            var otherStateData = other.getStateData();\r\n            if (!this.stateData && !otherStateData) {\r\n                return true;\r\n            }\r\n            if (this.stateData && otherStateData) {\r\n                return this.stateData.equals(otherStateData);\r\n            }\r\n            return false;\r\n        };\r\n        NullState.prototype.getMode = function () {\r\n            return this.mode;\r\n        };\r\n        NullState.prototype.tokenize = function (stream) {\r\n            stream.advanceToEOS();\r\n            return { type: '' };\r\n        };\r\n        NullState.prototype.getStateData = function () {\r\n            return this.stateData;\r\n        };\r\n        NullState.prototype.setStateData = function (stateData) {\r\n            this.stateData = stateData;\r\n        };\r\n        return NullState;\r\n    })();\r\n    exports.NullState = NullState;\r\n    var NullMode = (function () {\r\n        function NullMode() {\r\n            this.tokenTypeClassificationSupport = this;\r\n        }\r\n        /**\r\n         * Create a word definition regular expression based on default word separators.\r\n         * Optionally provide allowed separators that should be included in words.\r\n         *\r\n         * The default would look like this:\r\n         * /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\r\n         */\r\n        NullMode.createWordRegExp = function (allowInWords) {\r\n            if (allowInWords === void 0) { allowInWords = ''; }\r\n            var usualSeparators = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\r\n            var source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\r\n            for (var i = 0; i < usualSeparators.length; i++) {\r\n                if (allowInWords.indexOf(usualSeparators[i]) >= 0) {\r\n                    continue;\r\n                }\r\n                source += '\\\\' + usualSeparators[i];\r\n            }\r\n            source += '\\\\s]+)';\r\n            return new RegExp(source, 'g');\r\n        };\r\n        NullMode.prototype.getId = function () {\r\n            return NullMode.ID;\r\n        };\r\n        NullMode.prototype.toSimplifiedMode = function () {\r\n            return this;\r\n        };\r\n        NullMode.prototype.getWordDefinition = function () {\r\n            return NullMode.DEFAULT_WORD_REGEXP;\r\n        };\r\n        // catches numbers (including floating numbers) in the first group, and alphanum in the second\r\n        NullMode.DEFAULT_WORD_REGEXP = NullMode.createWordRegExp();\r\n        NullMode.ID = 'vs.editor.modes.nullMode';\r\n        return NullMode;\r\n    })();\r\n    exports.NullMode = NullMode;\r\n    function nullTokenize(mode, buffer, state, deltaOffset, stopAtOffset) {\r\n        if (deltaOffset === void 0) { deltaOffset = 0; }\r\n        var tokens = [\r\n            {\r\n                startIndex: deltaOffset,\r\n                type: '',\r\n                bracket: Modes.Bracket.None\r\n            }\r\n        ];\r\n        var modeTransitions = [\r\n            {\r\n                startIndex: deltaOffset,\r\n                mode: mode\r\n            }\r\n        ];\r\n        return {\r\n            tokens: tokens,\r\n            actualStopOffset: deltaOffset + buffer.length,\r\n            endState: state,\r\n            modeTransitions: modeTransitions\r\n        };\r\n    }\r\n    exports.nullTokenize = nullTokenize;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/editor/common/viewModel/prefixSumComputer\", [\"require\", \"exports\"], function (require, exports) {\r\n    var PrefixSumComputer = (function () {\r\n        function PrefixSumComputer(values) {\r\n            this.values = values;\r\n            this.prefixSum = [];\r\n            for (var i = 0, len = this.values.length; i < len; i++) {\r\n                this.prefixSum[i] = 0;\r\n            }\r\n            this.prefixSumValidIndex = -1;\r\n        }\r\n        PrefixSumComputer.prototype.getCount = function () {\r\n            return this.values.length;\r\n        };\r\n        PrefixSumComputer.prototype.insertValue = function (insertIndex, value) {\r\n            this.values.splice(insertIndex, 0, value);\r\n            this.prefixSum.splice(insertIndex, 0, 0);\r\n            if (insertIndex - 1 < this.prefixSumValidIndex) {\r\n                this.prefixSumValidIndex = insertIndex - 1;\r\n            }\r\n        };\r\n        PrefixSumComputer.prototype.insertValues = function (insertIndex, values) {\r\n            if (values.length === 0) {\r\n                return;\r\n            }\r\n            this.values = this.values.slice(0, insertIndex).concat(values).concat(this.values.slice(insertIndex));\r\n            this.prefixSum = this.prefixSum.slice(0, insertIndex).concat(PrefixSumComputer._zeroArray(values.length)).concat(this.prefixSum.slice(insertIndex));\r\n            if (insertIndex - 1 < this.prefixSumValidIndex) {\r\n                this.prefixSumValidIndex = insertIndex - 1;\r\n            }\r\n        };\r\n        PrefixSumComputer._zeroArray = function (count) {\r\n            var r = new Array(count);\r\n            for (var i = 0; i < count; i++) {\r\n                r[i] = 0;\r\n            }\r\n            return r;\r\n        };\r\n        PrefixSumComputer.prototype.changeValue = function (index, value) {\r\n            if (this.values[index] === value) {\r\n                return;\r\n            }\r\n            this.values[index] = value;\r\n            if (index - 1 < this.prefixSumValidIndex) {\r\n                this.prefixSumValidIndex = index - 1;\r\n            }\r\n        };\r\n        PrefixSumComputer.prototype.removeValues = function (startIndex, cnt) {\r\n            this.values.splice(startIndex, cnt);\r\n            this.prefixSum.splice(startIndex, cnt);\r\n            if (startIndex - 1 < this.prefixSumValidIndex) {\r\n                this.prefixSumValidIndex = startIndex - 1;\r\n            }\r\n        };\r\n        PrefixSumComputer.prototype.getTotalValue = function () {\r\n            if (this.values.length === 0) {\r\n                return 0;\r\n            }\r\n            return this.getAccumulatedValue(this.values.length - 1);\r\n        };\r\n        PrefixSumComputer.prototype.getAccumulatedValue = function (index) {\r\n            if (index < 0) {\r\n                return 0;\r\n            }\r\n            if (index <= this.prefixSumValidIndex) {\r\n                return this.prefixSum[index];\r\n            }\r\n            var startIndex = this.prefixSumValidIndex + 1;\r\n            if (startIndex === 0) {\r\n                this.prefixSum[0] = this.values[0];\r\n                startIndex++;\r\n            }\r\n            if (index >= this.values.length) {\r\n                index = this.values.length - 1;\r\n            }\r\n            for (var i = startIndex; i <= index; i++) {\r\n                this.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\r\n            }\r\n            this.prefixSumValidIndex = Math.max(this.prefixSumValidIndex, index);\r\n            return this.prefixSum[index];\r\n        };\r\n        PrefixSumComputer.prototype.getIndexOf = function (accumulatedValue, result) {\r\n            var low = 0, high = this.values.length - 1, mid, midStart, midStop;\r\n            while (low <= high) {\r\n                mid = low + ((high - low) / 2) | 0;\r\n                midStop = this.getAccumulatedValue(mid);\r\n                midStart = midStop - this.values[mid];\r\n                if (accumulatedValue < midStart) {\r\n                    high = mid - 1;\r\n                }\r\n                else if (accumulatedValue >= midStop) {\r\n                    low = mid + 1;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            result.index = mid;\r\n            result.remainder = accumulatedValue - midStart;\r\n        };\r\n        return PrefixSumComputer;\r\n    })();\r\n    exports.PrefixSumComputer = PrefixSumComputer;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/languages/lib/common/wireProtocol\", [\"require\", \"exports\"], function (require, exports) {\r\n    var DefaultSize = 8192;\r\n    var ContentLength = 'Content-Length: ';\r\n    var ContentLengthSize = Buffer.byteLength(ContentLength, 'utf8');\r\n    var Blank = new Buffer(' ', 'utf8')[0];\r\n    var BackslashR = new Buffer('\\r', 'utf8')[0];\r\n    var BackslashN = new Buffer('\\n', 'utf8')[0];\r\n    var ProtocolBuffer = (function () {\r\n        function ProtocolBuffer() {\r\n            this.index = 0;\r\n            this.buffer = new Buffer(DefaultSize);\r\n        }\r\n        ProtocolBuffer.prototype.append = function (data) {\r\n            var toAppend = null;\r\n            if (Buffer.isBuffer(data)) {\r\n                toAppend = data;\r\n            }\r\n            else {\r\n                toAppend = new Buffer(data, 'utf8');\r\n            }\r\n            if (this.buffer.length - this.index >= toAppend.length) {\r\n                toAppend.copy(this.buffer, this.index, 0, toAppend.length);\r\n            }\r\n            else {\r\n                var newSize = (Math.ceil((this.index + toAppend.length) / DefaultSize) + 1) * DefaultSize;\r\n                if (this.index === 0) {\r\n                    this.buffer = new Buffer(newSize);\r\n                    toAppend.copy(this.buffer, 0, 0, toAppend.length);\r\n                }\r\n                else {\r\n                    this.buffer = Buffer.concat([this.buffer.slice(0, this.index), toAppend], newSize);\r\n                }\r\n            }\r\n            this.index += toAppend.length;\r\n        };\r\n        ProtocolBuffer.prototype.tryReadContentLength = function () {\r\n            var result = -1;\r\n            var current = 0;\r\n            // we are utf8 encoding...\r\n            while (current < this.index && (this.buffer[current] === Blank || this.buffer[current] === BackslashR || this.buffer[current] === BackslashN)) {\r\n                current++;\r\n            }\r\n            if (this.index < current + ContentLengthSize) {\r\n                return result;\r\n            }\r\n            current += ContentLengthSize;\r\n            var start = current;\r\n            while (current < this.index && this.buffer[current] !== BackslashR) {\r\n                current++;\r\n            }\r\n            if (current + 3 >= this.index || this.buffer[current + 1] !== BackslashN || this.buffer[current + 2] !== BackslashR || this.buffer[current + 3] !== BackslashN) {\r\n                return result;\r\n            }\r\n            var data = this.buffer.toString('utf8', start, current);\r\n            result = parseInt(data);\r\n            this.buffer = this.buffer.slice(current + 4);\r\n            this.index = this.index - (current + 4);\r\n            return result;\r\n        };\r\n        ProtocolBuffer.prototype.tryReadContent = function (length) {\r\n            if (this.index < length) {\r\n                return null;\r\n            }\r\n            var result = this.buffer.toString('utf8', 0, length);\r\n            var sourceStart = length;\r\n            while (sourceStart < this.index && (this.buffer[sourceStart] === BackslashR || this.buffer[sourceStart] === BackslashN)) {\r\n                sourceStart++;\r\n            }\r\n            this.buffer.copy(this.buffer, 0, sourceStart);\r\n            this.index = this.index - sourceStart;\r\n            return result;\r\n        };\r\n        ProtocolBuffer.prototype.tryReadLine = function () {\r\n            var end = 0;\r\n            while (end < this.index && this.buffer[end] !== BackslashR && this.buffer[end] !== BackslashN) {\r\n                end++;\r\n            }\r\n            if (end >= this.index) {\r\n                return null;\r\n            }\r\n            var result = this.buffer.toString('utf8', 0, end);\r\n            while (end < this.index && (this.buffer[end] === BackslashR || this.buffer[end] === BackslashN)) {\r\n                end++;\r\n            }\r\n            if (this.index === end) {\r\n                this.index = 0;\r\n            }\r\n            else {\r\n                this.buffer.copy(this.buffer, 0, end);\r\n                this.index = this.index - end;\r\n            }\r\n            return result;\r\n        };\r\n        Object.defineProperty(ProtocolBuffer.prototype, \"numberOfBytes\", {\r\n            get: function () {\r\n                return this.index;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return ProtocolBuffer;\r\n    })();\r\n    (function (ReaderType) {\r\n        ReaderType[ReaderType[\"Length\"] = 0] = \"Length\";\r\n        ReaderType[ReaderType[\"Line\"] = 1] = \"Line\";\r\n    })(exports.ReaderType || (exports.ReaderType = {}));\r\n    var ReaderType = exports.ReaderType;\r\n    var Reader = (function () {\r\n        function Reader(readable, callback, type) {\r\n            var _this = this;\r\n            if (type === void 0) { type = ReaderType.Length; }\r\n            this.readable = readable;\r\n            this.buffer = new ProtocolBuffer();\r\n            this.callback = callback;\r\n            this.nextMessageLength = -1;\r\n            if (type === ReaderType.Length) {\r\n                this.readable.on('data', function (data) {\r\n                    _this.onLengthData(data);\r\n                });\r\n            }\r\n            else if (type === ReaderType.Line) {\r\n                this.readable.on('data', function (data) {\r\n                    _this.onLineData(data);\r\n                });\r\n            }\r\n        }\r\n        Reader.prototype.onLengthData = function (data) {\r\n            this.buffer.append(data);\r\n            while (true) {\r\n                if (this.nextMessageLength === -1) {\r\n                    this.nextMessageLength = this.buffer.tryReadContentLength();\r\n                    if (this.nextMessageLength === -1) {\r\n                        return;\r\n                    }\r\n                }\r\n                var msg = this.buffer.tryReadContent(this.nextMessageLength);\r\n                if (msg === null) {\r\n                    return;\r\n                }\r\n                this.nextMessageLength = -1;\r\n                var json = JSON.parse(msg);\r\n                this.callback(json);\r\n            }\r\n        };\r\n        Reader.prototype.onLineData = function (data) {\r\n            this.buffer.append(data);\r\n            while (true) {\r\n                var msg = this.buffer.tryReadLine();\r\n                if (msg === null) {\r\n                    return;\r\n                }\r\n                this.callback(JSON.parse(msg));\r\n            }\r\n        };\r\n        return Reader;\r\n    })();\r\n    exports.Reader = Reader;\r\n    var Writer = (function () {\r\n        function Writer(writable) {\r\n            this.writable = writable;\r\n        }\r\n        Writer.prototype.write = function (msg) {\r\n            var json = JSON.stringify(msg);\r\n            var buffer = [\r\n                ContentLength,\r\n                Buffer.byteLength(json, 'utf8').toString(),\r\n                '\\r\\n\\r\\n',\r\n                json,\r\n                '\\r\\n'\r\n            ];\r\n            this.writable.write(buffer.join(''), 'utf8');\r\n        };\r\n        return Writer;\r\n    })();\r\n    exports.Writer = Writer;\r\n});\r\n\ndefine(\"vs/nls!vs/base/common/errors\",['vs/nls', 'vs/nls!vs/workbench/node/pluginHostProcess'], function(nls, data) { return nls.create(\"vs/base/common/errors\", data); });\ndefine(\"vs/nls!vs/base/common/http\",['vs/nls', 'vs/nls!vs/workbench/node/pluginHostProcess'], function(nls, data) { return nls.create(\"vs/base/common/http\", data); });\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/base/common/http\", [\"require\", \"exports\", 'vs/nls!vs/base/common/http'], function (require, exports, nls) {\r\n    // Methods\r\n    exports.GET = 'GET';\r\n    exports.POST = 'POST';\r\n    exports.PUT = 'PUT';\r\n    exports.DELETE = 'DELETE';\r\n    // Header\r\n    var Header;\r\n    (function (Header) {\r\n        Header.CONTENT_TYPE = 'Content-Type';\r\n        Header.CONTENT_LENGTH = 'Content-Length';\r\n        Header.LAST_MODIFIED = 'Last-Modified';\r\n        Header.LOCATION = 'Location';\r\n        Header.ETAG = 'ETag';\r\n        Header.X_CONTENT_CHARSET = 'X-Content-Charset';\r\n        Header.X_CONTENT_TYPES = 'X-Content-Types';\r\n        Header.X_CONTENT_HASH = 'X-Content-Hash';\r\n        Header.X_FILEPATH = 'X-Filepath';\r\n        Header.X_RESOURCE = 'X-Resource';\r\n    })(Header = exports.Header || (exports.Header = {}));\r\n    // Mime\r\n    var Mime;\r\n    (function (Mime) {\r\n        Mime.RAW = 'application/octet-stream';\r\n        Mime.JSON = 'application/json';\r\n        Mime.TEXT = 'text/plain';\r\n        Mime.HTML = 'text/html';\r\n    })(Mime = exports.Mime || (exports.Mime = {}));\r\n    // Charset\r\n    var Charset;\r\n    (function (Charset) {\r\n        Charset.UTF8 = 'utf-8';\r\n        Charset.UTF8_BOM = 'UTF8_BOM';\r\n    })(Charset = exports.Charset || (exports.Charset = {}));\r\n    function isRedirect(status) {\r\n        return status >= 300 && status <= 303 || status === 307;\r\n    }\r\n    exports.isRedirect = isRedirect;\r\n    var contentLengthPattern = /X-Chunk-Length:(\\d+)\\r\\n\\r\\n/gi, headerPattern = /(.+?):(.+?)\\r\\n(\\r\\n)?/gm;\r\n    function newDataChunk(responseText, headerStartOffset, headerEndOffset, contentLength) {\r\n        var _value, _headers;\r\n        return {\r\n            header: function (name) {\r\n                if (typeof _headers === 'undefined') {\r\n                    _headers = Object.create(null);\r\n                    headerPattern.lastIndex = headerStartOffset;\r\n                    while (true) {\r\n                        var match = headerPattern.exec(responseText);\r\n                        if (!match) {\r\n                            // no header found\r\n                            break;\r\n                        }\r\n                        _headers[match[1].toLowerCase()] = match[2];\r\n                        if (match[3]) {\r\n                            // the last header found\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                return _headers[name.toLowerCase()];\r\n            },\r\n            value: function () {\r\n                if (typeof _value === 'undefined') {\r\n                    _value = responseText.substr(headerEndOffset + 2 /*crlf*/, contentLength);\r\n                }\r\n                return _value;\r\n            }\r\n        };\r\n    }\r\n    /**\r\n     * Parses the response text of the provided request into individual data chunks. The chunks\r\n     * are filled into the provided array.\r\n     */\r\n    function parseChunkedData(request, collection, offset) {\r\n        if (offset === void 0) { offset = 0; }\r\n        var responseText = request.responseText;\r\n        contentLengthPattern.lastIndex = offset;\r\n        while (true) {\r\n            var match = contentLengthPattern.exec(responseText);\r\n            if (!match) {\r\n                return offset;\r\n            }\r\n            var contentLength = parseInt(match[1], 10);\r\n            if (responseText.length < contentLengthPattern.lastIndex + contentLength) {\r\n                return offset;\r\n            }\r\n            collection.push(newDataChunk(responseText, offset, contentLengthPattern.lastIndex - 2, contentLength));\r\n            offset = contentLengthPattern.lastIndex + contentLength;\r\n        }\r\n    }\r\n    exports.parseChunkedData = parseChunkedData;\r\n    function getErrorStatusDescription(status) {\r\n        if (status < 400) {\r\n            return void 0;\r\n        }\r\n        switch (status) {\r\n            case 400: return nls.localize(0, null);\r\n            case 401: return nls.localize(1, null);\r\n            case 403: return nls.localize(2, null);\r\n            case 404: return nls.localize(3, null);\r\n            case 405: return nls.localize(4, null);\r\n            case 406: return nls.localize(5, null);\r\n            case 407: return nls.localize(6, null);\r\n            case 408: return nls.localize(7, null);\r\n            case 409: return nls.localize(8, null);\r\n            case 410: return nls.localize(9, null);\r\n            case 411: return nls.localize(10, null);\r\n            case 412: return nls.localize(11, null);\r\n            case 413: return nls.localize(12, null);\r\n            case 414: return nls.localize(13, null);\r\n            case 415: return nls.localize(14, null);\r\n            case 500: return nls.localize(15, null);\r\n            case 501: return nls.localize(16, null);\r\n            case 503: return nls.localize(17, null);\r\n            default: return nls.localize(18, null, status);\r\n        }\r\n    }\r\n    exports.getErrorStatusDescription = getErrorStatusDescription;\r\n});\r\n\ndefine(\"vs/nls!vs/base/common/json\",['vs/nls', 'vs/nls!vs/workbench/node/pluginHostProcess'], function(nls, data) { return nls.create(\"vs/base/common/json\", data); });\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/base/common/json\", [\"require\", \"exports\", 'vs/nls!vs/base/common/json'], function (require, exports, nls) {\r\n    (function (ScanError) {\r\n        ScanError[ScanError[\"None\"] = 0] = \"None\";\r\n        ScanError[ScanError[\"UnexpectedEndOfComment\"] = 1] = \"UnexpectedEndOfComment\";\r\n        ScanError[ScanError[\"UnexpectedEndOfString\"] = 2] = \"UnexpectedEndOfString\";\r\n        ScanError[ScanError[\"UnexpectedEndOfNumber\"] = 3] = \"UnexpectedEndOfNumber\";\r\n        ScanError[ScanError[\"InvalidUnicode\"] = 4] = \"InvalidUnicode\";\r\n        ScanError[ScanError[\"InvalidEscapeCharacter\"] = 5] = \"InvalidEscapeCharacter\";\r\n    })(exports.ScanError || (exports.ScanError = {}));\r\n    var ScanError = exports.ScanError;\r\n    (function (SyntaxKind) {\r\n        SyntaxKind[SyntaxKind[\"Unknown\"] = 0] = \"Unknown\";\r\n        SyntaxKind[SyntaxKind[\"OpenBraceToken\"] = 1] = \"OpenBraceToken\";\r\n        SyntaxKind[SyntaxKind[\"CloseBraceToken\"] = 2] = \"CloseBraceToken\";\r\n        SyntaxKind[SyntaxKind[\"OpenBracketToken\"] = 3] = \"OpenBracketToken\";\r\n        SyntaxKind[SyntaxKind[\"CloseBracketToken\"] = 4] = \"CloseBracketToken\";\r\n        SyntaxKind[SyntaxKind[\"CommaToken\"] = 5] = \"CommaToken\";\r\n        SyntaxKind[SyntaxKind[\"ColonToken\"] = 6] = \"ColonToken\";\r\n        SyntaxKind[SyntaxKind[\"NullKeyword\"] = 7] = \"NullKeyword\";\r\n        SyntaxKind[SyntaxKind[\"TrueKeyword\"] = 8] = \"TrueKeyword\";\r\n        SyntaxKind[SyntaxKind[\"FalseKeyword\"] = 9] = \"FalseKeyword\";\r\n        SyntaxKind[SyntaxKind[\"StringLiteral\"] = 10] = \"StringLiteral\";\r\n        SyntaxKind[SyntaxKind[\"NumericLiteral\"] = 11] = \"NumericLiteral\";\r\n        SyntaxKind[SyntaxKind[\"LineCommentTrivia\"] = 12] = \"LineCommentTrivia\";\r\n        SyntaxKind[SyntaxKind[\"BlockCommentTrivia\"] = 13] = \"BlockCommentTrivia\";\r\n        SyntaxKind[SyntaxKind[\"LineBreakTrivia\"] = 14] = \"LineBreakTrivia\";\r\n        SyntaxKind[SyntaxKind[\"Trivia\"] = 15] = \"Trivia\";\r\n        SyntaxKind[SyntaxKind[\"EOF\"] = 16] = \"EOF\";\r\n    })(exports.SyntaxKind || (exports.SyntaxKind = {}));\r\n    var SyntaxKind = exports.SyntaxKind;\r\n    function createScanner(text, ignoreTrivia) {\r\n        if (ignoreTrivia === void 0) { ignoreTrivia = false; }\r\n        var pos = 0, len = text.length, value = '', tokenOffset = 0, token = SyntaxKind.Unknown, scanError = ScanError.None;\r\n        function scanHexDigits(count, exact) {\r\n            var digits = 0;\r\n            var value = 0;\r\n            while (digits < count || !exact) {\r\n                var ch = text.charCodeAt(pos);\r\n                if (ch >= CharacterCodes._0 && ch <= CharacterCodes._9) {\r\n                    value = value * 16 + ch - CharacterCodes._0;\r\n                }\r\n                else if (ch >= CharacterCodes.A && ch <= CharacterCodes.F) {\r\n                    value = value * 16 + ch - CharacterCodes.A + 10;\r\n                }\r\n                else if (ch >= CharacterCodes.a && ch <= CharacterCodes.f) {\r\n                    value = value * 16 + ch - CharacterCodes.a + 10;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n                pos++;\r\n                digits++;\r\n            }\r\n            if (digits < count) {\r\n                value = -1;\r\n            }\r\n            return value;\r\n        }\r\n        function scanNumber() {\r\n            var start = pos;\r\n            if (text.charCodeAt(pos) === CharacterCodes._0) {\r\n                pos++;\r\n            }\r\n            else {\r\n                pos++;\r\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\r\n                    pos++;\r\n                }\r\n            }\r\n            if (pos < text.length && text.charCodeAt(pos) === CharacterCodes.dot) {\r\n                pos++;\r\n                if (pos < text.length && isDigit(text.charCodeAt(pos))) {\r\n                    pos++;\r\n                    while (pos < text.length && isDigit(text.charCodeAt(pos))) {\r\n                        pos++;\r\n                    }\r\n                }\r\n                else {\r\n                    scanError = ScanError.UnexpectedEndOfNumber;\r\n                    return text.substring(start, end);\r\n                }\r\n            }\r\n            var end = pos;\r\n            if (pos < text.length && (text.charCodeAt(pos) === CharacterCodes.E || text.charCodeAt(pos) === CharacterCodes.e)) {\r\n                pos++;\r\n                if (pos < text.length && text.charCodeAt(pos) === CharacterCodes.plus || text.charCodeAt(pos) === CharacterCodes.minus) {\r\n                    pos++;\r\n                }\r\n                if (pos < text.length && isDigit(text.charCodeAt(pos))) {\r\n                    pos++;\r\n                    while (pos < text.length && isDigit(text.charCodeAt(pos))) {\r\n                        pos++;\r\n                    }\r\n                    end = pos;\r\n                }\r\n                else {\r\n                    scanError = ScanError.UnexpectedEndOfNumber;\r\n                }\r\n            }\r\n            return text.substring(start, end);\r\n        }\r\n        function scanString() {\r\n            var result = '', start = pos;\r\n            while (true) {\r\n                if (pos >= len) {\r\n                    result += text.substring(start, pos);\r\n                    scanError = ScanError.UnexpectedEndOfString;\r\n                    break;\r\n                }\r\n                var ch = text.charCodeAt(pos);\r\n                if (ch === CharacterCodes.doubleQuote) {\r\n                    result += text.substring(start, pos);\r\n                    pos++;\r\n                    break;\r\n                }\r\n                if (ch === CharacterCodes.backslash) {\r\n                    result += text.substring(start, pos);\r\n                    pos++;\r\n                    if (pos >= len) {\r\n                        scanError = ScanError.UnexpectedEndOfString;\r\n                        break;\r\n                    }\r\n                    ch = text.charCodeAt(pos++);\r\n                    switch (ch) {\r\n                        case CharacterCodes.doubleQuote:\r\n                            result += '\\\"';\r\n                            break;\r\n                        case CharacterCodes.backslash:\r\n                            result += '\\\\';\r\n                            break;\r\n                        case CharacterCodes.slash:\r\n                            result += '/';\r\n                            break;\r\n                        case CharacterCodes.b:\r\n                            result += '\\b';\r\n                            break;\r\n                        case CharacterCodes.f:\r\n                            result += '\\f';\r\n                            break;\r\n                        case CharacterCodes.n:\r\n                            result += '\\n';\r\n                            break;\r\n                        case CharacterCodes.r:\r\n                            result += '\\r';\r\n                            break;\r\n                        case CharacterCodes.t:\r\n                            result += '\\t';\r\n                            break;\r\n                        case CharacterCodes.u:\r\n                            var ch = scanHexDigits(4, true);\r\n                            if (ch >= 0) {\r\n                                result += String.fromCharCode(ch);\r\n                            }\r\n                            else {\r\n                                scanError = ScanError.InvalidUnicode;\r\n                            }\r\n                            break;\r\n                        default:\r\n                            scanError = ScanError.InvalidEscapeCharacter;\r\n                    }\r\n                    start = pos;\r\n                    continue;\r\n                }\r\n                if (isLineBreak(ch)) {\r\n                    result += text.substring(start, pos);\r\n                    scanError = ScanError.UnexpectedEndOfString;\r\n                    break;\r\n                }\r\n                pos++;\r\n            }\r\n            return result;\r\n        }\r\n        function scanNext() {\r\n            value = '';\r\n            scanError = ScanError.None,\r\n                tokenOffset = pos;\r\n            if (pos >= len) {\r\n                // at the end\r\n                tokenOffset = len;\r\n                return token = SyntaxKind.EOF;\r\n            }\r\n            var code = text.charCodeAt(pos);\r\n            // trivia: whitespace\r\n            if (isWhiteSpace(code)) {\r\n                do {\r\n                    pos++;\r\n                    value += String.fromCharCode(code);\r\n                    code = text.charCodeAt(pos);\r\n                } while (isWhiteSpace(code));\r\n                return token = SyntaxKind.Trivia;\r\n            }\r\n            // trivia: newlines\r\n            if (isLineBreak(code)) {\r\n                pos++;\r\n                value += String.fromCharCode(code);\r\n                if (code === CharacterCodes.carriageReturn && text.charCodeAt(pos) === CharacterCodes.lineFeed) {\r\n                    pos++;\r\n                    value += '\\n';\r\n                }\r\n                return token = SyntaxKind.LineBreakTrivia;\r\n            }\r\n            switch (code) {\r\n                // tokens: []{}:,\r\n                case CharacterCodes.openBrace:\r\n                    pos++;\r\n                    return token = SyntaxKind.OpenBraceToken;\r\n                case CharacterCodes.closeBrace:\r\n                    pos++;\r\n                    return token = SyntaxKind.CloseBraceToken;\r\n                case CharacterCodes.openBracket:\r\n                    pos++;\r\n                    return token = SyntaxKind.OpenBracketToken;\r\n                case CharacterCodes.closeBracket:\r\n                    pos++;\r\n                    return token = SyntaxKind.CloseBracketToken;\r\n                case CharacterCodes.colon:\r\n                    pos++;\r\n                    return token = SyntaxKind.ColonToken;\r\n                case CharacterCodes.comma:\r\n                    pos++;\r\n                    return token = SyntaxKind.CommaToken;\r\n                // strings\r\n                case CharacterCodes.doubleQuote:\r\n                    pos++;\r\n                    value = scanString();\r\n                    return token = SyntaxKind.StringLiteral;\r\n                // comments\r\n                case CharacterCodes.slash:\r\n                    var start = pos - 1;\r\n                    // Single-line comment\r\n                    if (text.charCodeAt(pos + 1) === CharacterCodes.slash) {\r\n                        pos += 2;\r\n                        while (pos < len) {\r\n                            if (isLineBreak(text.charCodeAt(pos))) {\r\n                                break;\r\n                            }\r\n                            pos++;\r\n                        }\r\n                        value = text.substring(start, pos);\r\n                        return token = SyntaxKind.LineCommentTrivia;\r\n                    }\r\n                    // Multi-line comment\r\n                    if (text.charCodeAt(pos + 1) === CharacterCodes.asterisk) {\r\n                        pos += 2;\r\n                        var safeLength = len - 1; // For lookahead.\r\n                        var commentClosed = false;\r\n                        while (pos < safeLength) {\r\n                            var ch = text.charCodeAt(pos);\r\n                            if (ch === CharacterCodes.asterisk && text.charCodeAt(pos + 1) === CharacterCodes.slash) {\r\n                                pos += 2;\r\n                                commentClosed = true;\r\n                                break;\r\n                            }\r\n                            pos++;\r\n                        }\r\n                        if (!commentClosed) {\r\n                            pos++;\r\n                            scanError = ScanError.UnexpectedEndOfComment;\r\n                        }\r\n                        value = text.substring(start, pos);\r\n                        return token = SyntaxKind.BlockCommentTrivia;\r\n                    }\r\n                    // just a single slash\r\n                    value += String.fromCharCode(code);\r\n                    pos++;\r\n                    return token = SyntaxKind.Unknown;\r\n                // numbers\r\n                case CharacterCodes.minus:\r\n                    value += String.fromCharCode(code);\r\n                    pos++;\r\n                    if (pos === len || !isDigit(text.charCodeAt(pos))) {\r\n                        return token = SyntaxKind.Unknown;\r\n                    }\r\n                // found a minus, followed by a number so\r\n                // we fall through to proceed with scanning\r\n                // numbers\r\n                case CharacterCodes._0:\r\n                case CharacterCodes._1:\r\n                case CharacterCodes._2:\r\n                case CharacterCodes._3:\r\n                case CharacterCodes._4:\r\n                case CharacterCodes._5:\r\n                case CharacterCodes._6:\r\n                case CharacterCodes._7:\r\n                case CharacterCodes._8:\r\n                case CharacterCodes._9:\r\n                    value += scanNumber();\r\n                    return token = SyntaxKind.NumericLiteral;\r\n                // literals and unknown symbols\r\n                default:\r\n                    // is a literal? Read the full word.\r\n                    while (pos < len && isUnknownContentCharacter(code)) {\r\n                        pos++;\r\n                        code = text.charCodeAt(pos);\r\n                    }\r\n                    if (tokenOffset !== pos) {\r\n                        value = text.substring(tokenOffset, pos);\r\n                        // keywords: true, false, null\r\n                        switch (value) {\r\n                            case 'true': return token = SyntaxKind.TrueKeyword;\r\n                            case 'false': return token = SyntaxKind.FalseKeyword;\r\n                            case 'null': return token = SyntaxKind.NullKeyword;\r\n                        }\r\n                        return token = SyntaxKind.Unknown;\r\n                    }\r\n                    // some\r\n                    value += String.fromCharCode(code);\r\n                    pos++;\r\n                    return token = SyntaxKind.Unknown;\r\n            }\r\n        }\r\n        function isUnknownContentCharacter(code) {\r\n            if (isWhiteSpace(code) || isLineBreak(code)) {\r\n                return false;\r\n            }\r\n            switch (code) {\r\n                case CharacterCodes.closeBrace:\r\n                case CharacterCodes.closeBracket:\r\n                case CharacterCodes.openBrace:\r\n                case CharacterCodes.openBracket:\r\n                case CharacterCodes.doubleQuote:\r\n                case CharacterCodes.colon:\r\n                case CharacterCodes.comma:\r\n                    return false;\r\n            }\r\n            return true;\r\n        }\r\n        function scanNextNonTrivia() {\r\n            var result;\r\n            do {\r\n                result = scanNext();\r\n            } while (result >= SyntaxKind.LineCommentTrivia && result <= SyntaxKind.Trivia);\r\n            return result;\r\n        }\r\n        return {\r\n            getPosition: function () { return pos; },\r\n            scan: ignoreTrivia ? scanNextNonTrivia : scanNext,\r\n            getToken: function () { return token; },\r\n            getTokenValue: function () { return value; },\r\n            getTokenOffset: function () { return tokenOffset; },\r\n            getTokenLength: function () { return pos - tokenOffset; },\r\n            getTokenError: function () { return scanError; }\r\n        };\r\n    }\r\n    exports.createScanner = createScanner;\r\n    function isWhiteSpace(ch) {\r\n        return ch === CharacterCodes.space || ch === CharacterCodes.tab || ch === CharacterCodes.verticalTab || ch === CharacterCodes.formFeed ||\r\n            ch === CharacterCodes.nonBreakingSpace || ch === CharacterCodes.ogham || ch >= CharacterCodes.enQuad && ch <= CharacterCodes.zeroWidthSpace ||\r\n            ch === CharacterCodes.narrowNoBreakSpace || ch === CharacterCodes.mathematicalSpace || ch === CharacterCodes.ideographicSpace || ch === CharacterCodes.byteOrderMark;\r\n    }\r\n    function isLineBreak(ch) {\r\n        return ch === CharacterCodes.lineFeed || ch === CharacterCodes.carriageReturn || ch === CharacterCodes.lineSeparator || ch === CharacterCodes.paragraphSeparator;\r\n    }\r\n    function isDigit(ch) {\r\n        return ch >= CharacterCodes._0 && ch <= CharacterCodes._9;\r\n    }\r\n    function isLetter(ch) {\r\n        return ch >= CharacterCodes.a && ch <= CharacterCodes.z || ch >= CharacterCodes.A && ch <= CharacterCodes.Z;\r\n    }\r\n    exports.isLetter = isLetter;\r\n    var CharacterCodes;\r\n    (function (CharacterCodes) {\r\n        CharacterCodes[CharacterCodes[\"nullCharacter\"] = 0] = \"nullCharacter\";\r\n        CharacterCodes[CharacterCodes[\"maxAsciiCharacter\"] = 127] = \"maxAsciiCharacter\";\r\n        CharacterCodes[CharacterCodes[\"lineFeed\"] = 10] = \"lineFeed\";\r\n        CharacterCodes[CharacterCodes[\"carriageReturn\"] = 13] = \"carriageReturn\";\r\n        CharacterCodes[CharacterCodes[\"lineSeparator\"] = 8232] = \"lineSeparator\";\r\n        CharacterCodes[CharacterCodes[\"paragraphSeparator\"] = 8233] = \"paragraphSeparator\";\r\n        // REVIEW: do we need to support this?  The scanner doesn't, but our IText does.  This seems\r\n        // like an odd disparity?  (Or maybe it's completely fine for them to be different).\r\n        CharacterCodes[CharacterCodes[\"nextLine\"] = 133] = \"nextLine\";\r\n        // Unicode 3.0 space characters\r\n        CharacterCodes[CharacterCodes[\"space\"] = 32] = \"space\";\r\n        CharacterCodes[CharacterCodes[\"nonBreakingSpace\"] = 160] = \"nonBreakingSpace\";\r\n        CharacterCodes[CharacterCodes[\"enQuad\"] = 8192] = \"enQuad\";\r\n        CharacterCodes[CharacterCodes[\"emQuad\"] = 8193] = \"emQuad\";\r\n        CharacterCodes[CharacterCodes[\"enSpace\"] = 8194] = \"enSpace\";\r\n        CharacterCodes[CharacterCodes[\"emSpace\"] = 8195] = \"emSpace\";\r\n        CharacterCodes[CharacterCodes[\"threePerEmSpace\"] = 8196] = \"threePerEmSpace\";\r\n        CharacterCodes[CharacterCodes[\"fourPerEmSpace\"] = 8197] = \"fourPerEmSpace\";\r\n        CharacterCodes[CharacterCodes[\"sixPerEmSpace\"] = 8198] = \"sixPerEmSpace\";\r\n        CharacterCodes[CharacterCodes[\"figureSpace\"] = 8199] = \"figureSpace\";\r\n        CharacterCodes[CharacterCodes[\"punctuationSpace\"] = 8200] = \"punctuationSpace\";\r\n        CharacterCodes[CharacterCodes[\"thinSpace\"] = 8201] = \"thinSpace\";\r\n        CharacterCodes[CharacterCodes[\"hairSpace\"] = 8202] = \"hairSpace\";\r\n        CharacterCodes[CharacterCodes[\"zeroWidthSpace\"] = 8203] = \"zeroWidthSpace\";\r\n        CharacterCodes[CharacterCodes[\"narrowNoBreakSpace\"] = 8239] = \"narrowNoBreakSpace\";\r\n        CharacterCodes[CharacterCodes[\"ideographicSpace\"] = 12288] = \"ideographicSpace\";\r\n        CharacterCodes[CharacterCodes[\"mathematicalSpace\"] = 8287] = \"mathematicalSpace\";\r\n        CharacterCodes[CharacterCodes[\"ogham\"] = 5760] = \"ogham\";\r\n        CharacterCodes[CharacterCodes[\"_\"] = 95] = \"_\";\r\n        CharacterCodes[CharacterCodes[\"$\"] = 36] = \"$\";\r\n        CharacterCodes[CharacterCodes[\"_0\"] = 48] = \"_0\";\r\n        CharacterCodes[CharacterCodes[\"_1\"] = 49] = \"_1\";\r\n        CharacterCodes[CharacterCodes[\"_2\"] = 50] = \"_2\";\r\n        CharacterCodes[CharacterCodes[\"_3\"] = 51] = \"_3\";\r\n        CharacterCodes[CharacterCodes[\"_4\"] = 52] = \"_4\";\r\n        CharacterCodes[CharacterCodes[\"_5\"] = 53] = \"_5\";\r\n        CharacterCodes[CharacterCodes[\"_6\"] = 54] = \"_6\";\r\n        CharacterCodes[CharacterCodes[\"_7\"] = 55] = \"_7\";\r\n        CharacterCodes[CharacterCodes[\"_8\"] = 56] = \"_8\";\r\n        CharacterCodes[CharacterCodes[\"_9\"] = 57] = \"_9\";\r\n        CharacterCodes[CharacterCodes[\"a\"] = 97] = \"a\";\r\n        CharacterCodes[CharacterCodes[\"b\"] = 98] = \"b\";\r\n        CharacterCodes[CharacterCodes[\"c\"] = 99] = \"c\";\r\n        CharacterCodes[CharacterCodes[\"d\"] = 100] = \"d\";\r\n        CharacterCodes[CharacterCodes[\"e\"] = 101] = \"e\";\r\n        CharacterCodes[CharacterCodes[\"f\"] = 102] = \"f\";\r\n        CharacterCodes[CharacterCodes[\"g\"] = 103] = \"g\";\r\n        CharacterCodes[CharacterCodes[\"h\"] = 104] = \"h\";\r\n        CharacterCodes[CharacterCodes[\"i\"] = 105] = \"i\";\r\n        CharacterCodes[CharacterCodes[\"j\"] = 106] = \"j\";\r\n        CharacterCodes[CharacterCodes[\"k\"] = 107] = \"k\";\r\n        CharacterCodes[CharacterCodes[\"l\"] = 108] = \"l\";\r\n        CharacterCodes[CharacterCodes[\"m\"] = 109] = \"m\";\r\n        CharacterCodes[CharacterCodes[\"n\"] = 110] = \"n\";\r\n        CharacterCodes[CharacterCodes[\"o\"] = 111] = \"o\";\r\n        CharacterCodes[CharacterCodes[\"p\"] = 112] = \"p\";\r\n        CharacterCodes[CharacterCodes[\"q\"] = 113] = \"q\";\r\n        CharacterCodes[CharacterCodes[\"r\"] = 114] = \"r\";\r\n        CharacterCodes[CharacterCodes[\"s\"] = 115] = \"s\";\r\n        CharacterCodes[CharacterCodes[\"t\"] = 116] = \"t\";\r\n        CharacterCodes[CharacterCodes[\"u\"] = 117] = \"u\";\r\n        CharacterCodes[CharacterCodes[\"v\"] = 118] = \"v\";\r\n        CharacterCodes[CharacterCodes[\"w\"] = 119] = \"w\";\r\n        CharacterCodes[CharacterCodes[\"x\"] = 120] = \"x\";\r\n        CharacterCodes[CharacterCodes[\"y\"] = 121] = \"y\";\r\n        CharacterCodes[CharacterCodes[\"z\"] = 122] = \"z\";\r\n        CharacterCodes[CharacterCodes[\"A\"] = 65] = \"A\";\r\n        CharacterCodes[CharacterCodes[\"B\"] = 66] = \"B\";\r\n        CharacterCodes[CharacterCodes[\"C\"] = 67] = \"C\";\r\n        CharacterCodes[CharacterCodes[\"D\"] = 68] = \"D\";\r\n        CharacterCodes[CharacterCodes[\"E\"] = 69] = \"E\";\r\n        CharacterCodes[CharacterCodes[\"F\"] = 70] = \"F\";\r\n        CharacterCodes[CharacterCodes[\"G\"] = 71] = \"G\";\r\n        CharacterCodes[CharacterCodes[\"H\"] = 72] = \"H\";\r\n        CharacterCodes[CharacterCodes[\"I\"] = 73] = \"I\";\r\n        CharacterCodes[CharacterCodes[\"J\"] = 74] = \"J\";\r\n        CharacterCodes[CharacterCodes[\"K\"] = 75] = \"K\";\r\n        CharacterCodes[CharacterCodes[\"L\"] = 76] = \"L\";\r\n        CharacterCodes[CharacterCodes[\"M\"] = 77] = \"M\";\r\n        CharacterCodes[CharacterCodes[\"N\"] = 78] = \"N\";\r\n        CharacterCodes[CharacterCodes[\"O\"] = 79] = \"O\";\r\n        CharacterCodes[CharacterCodes[\"P\"] = 80] = \"P\";\r\n        CharacterCodes[CharacterCodes[\"Q\"] = 81] = \"Q\";\r\n        CharacterCodes[CharacterCodes[\"R\"] = 82] = \"R\";\r\n        CharacterCodes[CharacterCodes[\"S\"] = 83] = \"S\";\r\n        CharacterCodes[CharacterCodes[\"T\"] = 84] = \"T\";\r\n        CharacterCodes[CharacterCodes[\"U\"] = 85] = \"U\";\r\n        CharacterCodes[CharacterCodes[\"V\"] = 86] = \"V\";\r\n        CharacterCodes[CharacterCodes[\"W\"] = 87] = \"W\";\r\n        CharacterCodes[CharacterCodes[\"X\"] = 88] = \"X\";\r\n        CharacterCodes[CharacterCodes[\"Y\"] = 89] = \"Y\";\r\n        CharacterCodes[CharacterCodes[\"Z\"] = 90] = \"Z\";\r\n        CharacterCodes[CharacterCodes[\"ampersand\"] = 38] = \"ampersand\";\r\n        CharacterCodes[CharacterCodes[\"asterisk\"] = 42] = \"asterisk\";\r\n        CharacterCodes[CharacterCodes[\"at\"] = 64] = \"at\";\r\n        CharacterCodes[CharacterCodes[\"backslash\"] = 92] = \"backslash\";\r\n        CharacterCodes[CharacterCodes[\"bar\"] = 124] = \"bar\";\r\n        CharacterCodes[CharacterCodes[\"caret\"] = 94] = \"caret\";\r\n        CharacterCodes[CharacterCodes[\"closeBrace\"] = 125] = \"closeBrace\";\r\n        CharacterCodes[CharacterCodes[\"closeBracket\"] = 93] = \"closeBracket\";\r\n        CharacterCodes[CharacterCodes[\"closeParen\"] = 41] = \"closeParen\";\r\n        CharacterCodes[CharacterCodes[\"colon\"] = 58] = \"colon\";\r\n        CharacterCodes[CharacterCodes[\"comma\"] = 44] = \"comma\";\r\n        CharacterCodes[CharacterCodes[\"dot\"] = 46] = \"dot\";\r\n        CharacterCodes[CharacterCodes[\"doubleQuote\"] = 34] = \"doubleQuote\";\r\n        CharacterCodes[CharacterCodes[\"equals\"] = 61] = \"equals\";\r\n        CharacterCodes[CharacterCodes[\"exclamation\"] = 33] = \"exclamation\";\r\n        CharacterCodes[CharacterCodes[\"greaterThan\"] = 62] = \"greaterThan\";\r\n        CharacterCodes[CharacterCodes[\"lessThan\"] = 60] = \"lessThan\";\r\n        CharacterCodes[CharacterCodes[\"minus\"] = 45] = \"minus\";\r\n        CharacterCodes[CharacterCodes[\"openBrace\"] = 123] = \"openBrace\";\r\n        CharacterCodes[CharacterCodes[\"openBracket\"] = 91] = \"openBracket\";\r\n        CharacterCodes[CharacterCodes[\"openParen\"] = 40] = \"openParen\";\r\n        CharacterCodes[CharacterCodes[\"percent\"] = 37] = \"percent\";\r\n        CharacterCodes[CharacterCodes[\"plus\"] = 43] = \"plus\";\r\n        CharacterCodes[CharacterCodes[\"question\"] = 63] = \"question\";\r\n        CharacterCodes[CharacterCodes[\"semicolon\"] = 59] = \"semicolon\";\r\n        CharacterCodes[CharacterCodes[\"singleQuote\"] = 39] = \"singleQuote\";\r\n        CharacterCodes[CharacterCodes[\"slash\"] = 47] = \"slash\";\r\n        CharacterCodes[CharacterCodes[\"tilde\"] = 126] = \"tilde\";\r\n        CharacterCodes[CharacterCodes[\"backspace\"] = 8] = \"backspace\";\r\n        CharacterCodes[CharacterCodes[\"formFeed\"] = 12] = \"formFeed\";\r\n        CharacterCodes[CharacterCodes[\"byteOrderMark\"] = 65279] = \"byteOrderMark\";\r\n        CharacterCodes[CharacterCodes[\"tab\"] = 9] = \"tab\";\r\n        CharacterCodes[CharacterCodes[\"verticalTab\"] = 11] = \"verticalTab\";\r\n    })(CharacterCodes || (CharacterCodes = {}));\r\n    /**\r\n     * Takes JSON with JavaScript-style comments and remove\r\n     * them. Optionally replaces every none-newline character\r\n     * of comments with a replaceCharacter\r\n     */\r\n    function stripComments(text, replaceCh) {\r\n        var _scanner = createScanner(text), parts = [], kind, offset = 0, pos;\r\n        do {\r\n            pos = _scanner.getPosition();\r\n            kind = _scanner.scan();\r\n            switch (kind) {\r\n                case SyntaxKind.LineCommentTrivia:\r\n                case SyntaxKind.BlockCommentTrivia:\r\n                case SyntaxKind.EOF:\r\n                    if (offset !== pos) {\r\n                        parts.push(text.substring(offset, pos));\r\n                    }\r\n                    if (replaceCh !== void 0) {\r\n                        parts.push(_scanner.getTokenValue().replace(/[^\\r\\n]/g, replaceCh));\r\n                    }\r\n                    offset = _scanner.getPosition();\r\n                    break;\r\n            }\r\n        } while (kind !== SyntaxKind.EOF);\r\n        return parts.join('');\r\n    }\r\n    exports.stripComments = stripComments;\r\n    function parse(text, errors) {\r\n        if (errors === void 0) { errors = []; }\r\n        var noMatch = Object();\r\n        var _scanner = createScanner(text, true);\r\n        function scanNext() {\r\n            var token = _scanner.scan();\r\n            while (token === SyntaxKind.Unknown) {\r\n                handleError(nls.localize(0, null));\r\n                token = _scanner.scan();\r\n            }\r\n            return token;\r\n        }\r\n        function handleError(message, skipUntilAfter, skipUntil) {\r\n            if (skipUntilAfter === void 0) { skipUntilAfter = []; }\r\n            if (skipUntil === void 0) { skipUntil = []; }\r\n            errors.push(message);\r\n            if (skipUntilAfter.length + skipUntil.length > 0) {\r\n                var token = _scanner.getToken();\r\n                while (token !== SyntaxKind.EOF) {\r\n                    if (skipUntilAfter.indexOf(token) !== -1) {\r\n                        scanNext();\r\n                        break;\r\n                    }\r\n                    else if (skipUntil.indexOf(token) !== -1) {\r\n                        break;\r\n                    }\r\n                    token = scanNext();\r\n                }\r\n            }\r\n        }\r\n        function parseString() {\r\n            if (_scanner.getToken() !== SyntaxKind.StringLiteral) {\r\n                return noMatch;\r\n            }\r\n            var value = _scanner.getTokenValue();\r\n            scanNext();\r\n            return value;\r\n        }\r\n        function parseLiteral() {\r\n            var value;\r\n            switch (_scanner.getToken()) {\r\n                case SyntaxKind.NumericLiteral:\r\n                    try {\r\n                        value = JSON.parse(_scanner.getTokenValue());\r\n                        if (typeof value !== 'number') {\r\n                            handleError(nls.localize(1, null));\r\n                            value = 0;\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        value = 0;\r\n                    }\r\n                    break;\r\n                case SyntaxKind.NullKeyword:\r\n                    value = null;\r\n                    break;\r\n                case SyntaxKind.TrueKeyword:\r\n                    value = true;\r\n                    break;\r\n                case SyntaxKind.FalseKeyword:\r\n                    value = false;\r\n                    break;\r\n                default:\r\n                    return noMatch;\r\n            }\r\n            scanNext();\r\n            return value;\r\n        }\r\n        function parseProperty(result) {\r\n            var key = parseString();\r\n            if (key === noMatch) {\r\n                handleError(nls.localize(2, null), [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\r\n                return false;\r\n            }\r\n            if (_scanner.getToken() === SyntaxKind.ColonToken) {\r\n                scanNext(); // consume colon\r\n                var value = parseValue();\r\n                if (value !== noMatch) {\r\n                    result[key] = value;\r\n                }\r\n                else {\r\n                    handleError(nls.localize(3, null), [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\r\n                }\r\n            }\r\n            else {\r\n                handleError(nls.localize(4, null), [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\r\n            }\r\n            return true;\r\n        }\r\n        function parseObject() {\r\n            if (_scanner.getToken() !== SyntaxKind.OpenBraceToken) {\r\n                return noMatch;\r\n            }\r\n            var obj = {};\r\n            scanNext(); // consume open brace\r\n            var needsComma = false;\r\n            while (_scanner.getToken() !== SyntaxKind.CloseBraceToken && _scanner.getToken() !== SyntaxKind.EOF) {\r\n                if (_scanner.getToken() === SyntaxKind.CommaToken) {\r\n                    if (!needsComma) {\r\n                        handleError(nls.localize(5, null), [], []);\r\n                    }\r\n                    scanNext(); // consume comma\r\n                }\r\n                else if (needsComma) {\r\n                    handleError(nls.localize(6, null), [], []);\r\n                }\r\n                var propertyParsed = parseProperty(obj);\r\n                if (!propertyParsed) {\r\n                    handleError(nls.localize(7, null), [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\r\n                }\r\n                needsComma = true;\r\n            }\r\n            if (_scanner.getToken() !== SyntaxKind.CloseBraceToken) {\r\n                handleError(nls.localize(8, null), [SyntaxKind.CloseBraceToken], []);\r\n            }\r\n            else {\r\n                scanNext(); // consume close brace\r\n            }\r\n            return obj;\r\n        }\r\n        function parseArray() {\r\n            if (_scanner.getToken() !== SyntaxKind.OpenBracketToken) {\r\n                return noMatch;\r\n            }\r\n            var arr = [];\r\n            scanNext(); // consume open bracket\r\n            var needsComma = false;\r\n            while (_scanner.getToken() !== SyntaxKind.CloseBracketToken && _scanner.getToken() !== SyntaxKind.EOF) {\r\n                if (_scanner.getToken() === SyntaxKind.CommaToken) {\r\n                    if (!needsComma) {\r\n                        handleError(nls.localize(9, null), [], []);\r\n                    }\r\n                    scanNext(); // consume comma\r\n                }\r\n                else if (needsComma) {\r\n                    handleError(nls.localize(10, null), [], []);\r\n                }\r\n                var value = parseValue();\r\n                if (value === noMatch) {\r\n                    handleError(nls.localize(11, null), [], [SyntaxKind.CloseBracketToken, SyntaxKind.CommaToken]);\r\n                }\r\n                else {\r\n                    arr.push(value);\r\n                }\r\n                needsComma = true;\r\n            }\r\n            if (_scanner.getToken() !== SyntaxKind.CloseBracketToken) {\r\n                handleError(nls.localize(12, null), [SyntaxKind.CloseBracketToken], []);\r\n            }\r\n            else {\r\n                scanNext(); // consume close bracket\r\n            }\r\n            return arr;\r\n        }\r\n        function parseValue() {\r\n            var result = parseArray();\r\n            if (result !== noMatch) {\r\n                return result;\r\n            }\r\n            result = parseObject();\r\n            if (result !== noMatch) {\r\n                return result;\r\n            }\r\n            result = parseString();\r\n            if (result !== noMatch) {\r\n                return result;\r\n            }\r\n            return parseLiteral();\r\n        }\r\n        scanNext();\r\n        var value = parseValue();\r\n        if (value === noMatch) {\r\n            handleError(nls.localize(13, null), [], []);\r\n            return void 0;\r\n        }\r\n        if (_scanner.getToken() !== SyntaxKind.EOF) {\r\n            handleError(nls.localize(14, null), [], []);\r\n        }\r\n        return value;\r\n    }\r\n    exports.parse = parse;\r\n});\r\n\ndefine(\"vs/nls!vs/base/common/keyCodes\",['vs/nls', 'vs/nls!vs/workbench/node/pluginHostProcess'], function(nls, data) { return nls.create(\"vs/base/common/keyCodes\", data); });\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\"use strict\";\r\ndefine(\"vs/base/common/keyCodes\", [\"require\", \"exports\", 'vs/nls!vs/base/common/keyCodes', 'vs/base/common/platform'], function (require, exports, nls, Platform) {\r\n    /**\r\n     * Virtual Key Codes, the value does not hold any inherent meaning.\r\n     * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\r\n     * But these are \"more general\", as they should work across browsers & OS`s.\r\n     */\r\n    (function (KeyCode) {\r\n        /**\r\n         * Placed first to cover the 0 value of the enum.\r\n         */\r\n        KeyCode[KeyCode[\"Unknown\"] = 0] = \"Unknown\";\r\n        KeyCode[KeyCode[\"Backspace\"] = 1] = \"Backspace\";\r\n        KeyCode[KeyCode[\"Tab\"] = 2] = \"Tab\";\r\n        KeyCode[KeyCode[\"Enter\"] = 3] = \"Enter\";\r\n        KeyCode[KeyCode[\"Shift\"] = 4] = \"Shift\";\r\n        KeyCode[KeyCode[\"Ctrl\"] = 5] = \"Ctrl\";\r\n        KeyCode[KeyCode[\"Alt\"] = 6] = \"Alt\";\r\n        KeyCode[KeyCode[\"PauseBreak\"] = 7] = \"PauseBreak\";\r\n        KeyCode[KeyCode[\"CapsLock\"] = 8] = \"CapsLock\";\r\n        KeyCode[KeyCode[\"Escape\"] = 9] = \"Escape\";\r\n        KeyCode[KeyCode[\"Space\"] = 10] = \"Space\";\r\n        KeyCode[KeyCode[\"PageUp\"] = 11] = \"PageUp\";\r\n        KeyCode[KeyCode[\"PageDown\"] = 12] = \"PageDown\";\r\n        KeyCode[KeyCode[\"End\"] = 13] = \"End\";\r\n        KeyCode[KeyCode[\"Home\"] = 14] = \"Home\";\r\n        KeyCode[KeyCode[\"LeftArrow\"] = 15] = \"LeftArrow\";\r\n        KeyCode[KeyCode[\"UpArrow\"] = 16] = \"UpArrow\";\r\n        KeyCode[KeyCode[\"RightArrow\"] = 17] = \"RightArrow\";\r\n        KeyCode[KeyCode[\"DownArrow\"] = 18] = \"DownArrow\";\r\n        KeyCode[KeyCode[\"Insert\"] = 19] = \"Insert\";\r\n        KeyCode[KeyCode[\"Delete\"] = 20] = \"Delete\";\r\n        KeyCode[KeyCode[\"KEY_0\"] = 21] = \"KEY_0\";\r\n        KeyCode[KeyCode[\"KEY_1\"] = 22] = \"KEY_1\";\r\n        KeyCode[KeyCode[\"KEY_2\"] = 23] = \"KEY_2\";\r\n        KeyCode[KeyCode[\"KEY_3\"] = 24] = \"KEY_3\";\r\n        KeyCode[KeyCode[\"KEY_4\"] = 25] = \"KEY_4\";\r\n        KeyCode[KeyCode[\"KEY_5\"] = 26] = \"KEY_5\";\r\n        KeyCode[KeyCode[\"KEY_6\"] = 27] = \"KEY_6\";\r\n        KeyCode[KeyCode[\"KEY_7\"] = 28] = \"KEY_7\";\r\n        KeyCode[KeyCode[\"KEY_8\"] = 29] = \"KEY_8\";\r\n        KeyCode[KeyCode[\"KEY_9\"] = 30] = \"KEY_9\";\r\n        KeyCode[KeyCode[\"KEY_A\"] = 31] = \"KEY_A\";\r\n        KeyCode[KeyCode[\"KEY_B\"] = 32] = \"KEY_B\";\r\n        KeyCode[KeyCode[\"KEY_C\"] = 33] = \"KEY_C\";\r\n        KeyCode[KeyCode[\"KEY_D\"] = 34] = \"KEY_D\";\r\n        KeyCode[KeyCode[\"KEY_E\"] = 35] = \"KEY_E\";\r\n        KeyCode[KeyCode[\"KEY_F\"] = 36] = \"KEY_F\";\r\n        KeyCode[KeyCode[\"KEY_G\"] = 37] = \"KEY_G\";\r\n        KeyCode[KeyCode[\"KEY_H\"] = 38] = \"KEY_H\";\r\n        KeyCode[KeyCode[\"KEY_I\"] = 39] = \"KEY_I\";\r\n        KeyCode[KeyCode[\"KEY_J\"] = 40] = \"KEY_J\";\r\n        KeyCode[KeyCode[\"KEY_K\"] = 41] = \"KEY_K\";\r\n        KeyCode[KeyCode[\"KEY_L\"] = 42] = \"KEY_L\";\r\n        KeyCode[KeyCode[\"KEY_M\"] = 43] = \"KEY_M\";\r\n        KeyCode[KeyCode[\"KEY_N\"] = 44] = \"KEY_N\";\r\n        KeyCode[KeyCode[\"KEY_O\"] = 45] = \"KEY_O\";\r\n        KeyCode[KeyCode[\"KEY_P\"] = 46] = \"KEY_P\";\r\n        KeyCode[KeyCode[\"KEY_Q\"] = 47] = \"KEY_Q\";\r\n        KeyCode[KeyCode[\"KEY_R\"] = 48] = \"KEY_R\";\r\n        KeyCode[KeyCode[\"KEY_S\"] = 49] = \"KEY_S\";\r\n        KeyCode[KeyCode[\"KEY_T\"] = 50] = \"KEY_T\";\r\n        KeyCode[KeyCode[\"KEY_U\"] = 51] = \"KEY_U\";\r\n        KeyCode[KeyCode[\"KEY_V\"] = 52] = \"KEY_V\";\r\n        KeyCode[KeyCode[\"KEY_W\"] = 53] = \"KEY_W\";\r\n        KeyCode[KeyCode[\"KEY_X\"] = 54] = \"KEY_X\";\r\n        KeyCode[KeyCode[\"KEY_Y\"] = 55] = \"KEY_Y\";\r\n        KeyCode[KeyCode[\"KEY_Z\"] = 56] = \"KEY_Z\";\r\n        KeyCode[KeyCode[\"Meta\"] = 57] = \"Meta\";\r\n        KeyCode[KeyCode[\"ContextMenu\"] = 58] = \"ContextMenu\";\r\n        KeyCode[KeyCode[\"F1\"] = 59] = \"F1\";\r\n        KeyCode[KeyCode[\"F2\"] = 60] = \"F2\";\r\n        KeyCode[KeyCode[\"F3\"] = 61] = \"F3\";\r\n        KeyCode[KeyCode[\"F4\"] = 62] = \"F4\";\r\n        KeyCode[KeyCode[\"F5\"] = 63] = \"F5\";\r\n        KeyCode[KeyCode[\"F6\"] = 64] = \"F6\";\r\n        KeyCode[KeyCode[\"F7\"] = 65] = \"F7\";\r\n        KeyCode[KeyCode[\"F8\"] = 66] = \"F8\";\r\n        KeyCode[KeyCode[\"F9\"] = 67] = \"F9\";\r\n        KeyCode[KeyCode[\"F10\"] = 68] = \"F10\";\r\n        KeyCode[KeyCode[\"F11\"] = 69] = \"F11\";\r\n        KeyCode[KeyCode[\"F12\"] = 70] = \"F12\";\r\n        KeyCode[KeyCode[\"F13\"] = 71] = \"F13\";\r\n        KeyCode[KeyCode[\"F14\"] = 72] = \"F14\";\r\n        KeyCode[KeyCode[\"F15\"] = 73] = \"F15\";\r\n        KeyCode[KeyCode[\"F16\"] = 74] = \"F16\";\r\n        KeyCode[KeyCode[\"F17\"] = 75] = \"F17\";\r\n        KeyCode[KeyCode[\"F18\"] = 76] = \"F18\";\r\n        KeyCode[KeyCode[\"F19\"] = 77] = \"F19\";\r\n        KeyCode[KeyCode[\"NumLock\"] = 78] = \"NumLock\";\r\n        KeyCode[KeyCode[\"ScrollLock\"] = 79] = \"ScrollLock\";\r\n        /**\r\n         * For the US standard keyboard, the ';:' key\r\n         */\r\n        KeyCode[KeyCode[\"US_SEMICOLON\"] = 80] = \"US_SEMICOLON\";\r\n        /**\r\n         * For the US standard keyboard, the '=+' key\r\n         */\r\n        KeyCode[KeyCode[\"US_EQUAL\"] = 81] = \"US_EQUAL\";\r\n        /**\r\n         * For the US standard keyboard, the ',<' key\r\n         */\r\n        KeyCode[KeyCode[\"US_COMMA\"] = 82] = \"US_COMMA\";\r\n        /**\r\n         * For the US standard keyboard, the '-_' key\r\n         */\r\n        KeyCode[KeyCode[\"US_MINUS\"] = 83] = \"US_MINUS\";\r\n        /**\r\n         * For the US standard keyboard, the '.>' key\r\n         */\r\n        KeyCode[KeyCode[\"US_DOT\"] = 84] = \"US_DOT\";\r\n        /**\r\n         * For the US standard keyboard, the '/?' key\r\n         */\r\n        KeyCode[KeyCode[\"US_SLASH\"] = 85] = \"US_SLASH\";\r\n        /**\r\n         * For the US standard keyboard, the '`~' key\r\n         */\r\n        KeyCode[KeyCode[\"US_BACKTICK\"] = 86] = \"US_BACKTICK\";\r\n        /**\r\n         * For the US standard keyboard, the '[{' key\r\n         */\r\n        KeyCode[KeyCode[\"US_OPEN_SQUARE_BRACKET\"] = 87] = \"US_OPEN_SQUARE_BRACKET\";\r\n        /**\r\n         * For the US standard keyboard, the '\\|' key\r\n         */\r\n        KeyCode[KeyCode[\"US_BACKSLASH\"] = 88] = \"US_BACKSLASH\";\r\n        /**\r\n         * For the US standard keyboard, the ']}' key\r\n         */\r\n        KeyCode[KeyCode[\"US_CLOSE_SQUARE_BRACKET\"] = 89] = \"US_CLOSE_SQUARE_BRACKET\";\r\n        /**\r\n         * For the US standard keyboard, the ''\"' key\r\n         */\r\n        KeyCode[KeyCode[\"US_QUOTE\"] = 90] = \"US_QUOTE\";\r\n        KeyCode[KeyCode[\"NUMPAD_0\"] = 91] = \"NUMPAD_0\";\r\n        KeyCode[KeyCode[\"NUMPAD_1\"] = 92] = \"NUMPAD_1\";\r\n        KeyCode[KeyCode[\"NUMPAD_2\"] = 93] = \"NUMPAD_2\";\r\n        KeyCode[KeyCode[\"NUMPAD_3\"] = 94] = \"NUMPAD_3\";\r\n        KeyCode[KeyCode[\"NUMPAD_4\"] = 95] = \"NUMPAD_4\";\r\n        KeyCode[KeyCode[\"NUMPAD_5\"] = 96] = \"NUMPAD_5\";\r\n        KeyCode[KeyCode[\"NUMPAD_6\"] = 97] = \"NUMPAD_6\";\r\n        KeyCode[KeyCode[\"NUMPAD_7\"] = 98] = \"NUMPAD_7\";\r\n        KeyCode[KeyCode[\"NUMPAD_8\"] = 99] = \"NUMPAD_8\";\r\n        KeyCode[KeyCode[\"NUMPAD_9\"] = 100] = \"NUMPAD_9\";\r\n        KeyCode[KeyCode[\"NUMPAD_MULTIPLY\"] = 101] = \"NUMPAD_MULTIPLY\";\r\n        KeyCode[KeyCode[\"NUMPAD_ADD\"] = 102] = \"NUMPAD_ADD\";\r\n        KeyCode[KeyCode[\"NUMPAD_SEPARATOR\"] = 103] = \"NUMPAD_SEPARATOR\";\r\n        KeyCode[KeyCode[\"NUMPAD_SUBTRACT\"] = 104] = \"NUMPAD_SUBTRACT\";\r\n        KeyCode[KeyCode[\"NUMPAD_DECIMAL\"] = 105] = \"NUMPAD_DECIMAL\";\r\n        KeyCode[KeyCode[\"NUMPAD_DIVIDE\"] = 106] = \"NUMPAD_DIVIDE\";\r\n        /**\r\n         * Placed last to cover the length of the enum.\r\n         */\r\n        KeyCode[KeyCode[\"MAX_VALUE\"] = 107] = \"MAX_VALUE\";\r\n    })(exports.KeyCode || (exports.KeyCode = {}));\r\n    var KeyCode = exports.KeyCode;\r\n    var TO_STRING_MAP = [];\r\n    (function () {\r\n        TO_STRING_MAP[KeyCode.Unknown] = 'unknown';\r\n        TO_STRING_MAP[KeyCode.Backspace] = 'Backspace';\r\n        TO_STRING_MAP[KeyCode.Tab] = 'Tab';\r\n        TO_STRING_MAP[KeyCode.Enter] = 'Enter';\r\n        TO_STRING_MAP[KeyCode.Shift] = 'Shift';\r\n        TO_STRING_MAP[KeyCode.Ctrl] = 'Ctrl';\r\n        TO_STRING_MAP[KeyCode.Alt] = 'Alt';\r\n        TO_STRING_MAP[KeyCode.PauseBreak] = 'PauseBreak';\r\n        TO_STRING_MAP[KeyCode.CapsLock] = 'CapsLock';\r\n        TO_STRING_MAP[KeyCode.Escape] = 'Escape';\r\n        TO_STRING_MAP[KeyCode.Space] = 'Space';\r\n        TO_STRING_MAP[KeyCode.PageUp] = 'PageUp';\r\n        TO_STRING_MAP[KeyCode.PageDown] = 'PageDown';\r\n        TO_STRING_MAP[KeyCode.End] = 'End';\r\n        TO_STRING_MAP[KeyCode.Home] = 'Home';\r\n        TO_STRING_MAP[KeyCode.LeftArrow] = 'LeftArrow';\r\n        TO_STRING_MAP[KeyCode.UpArrow] = 'UpArrow';\r\n        TO_STRING_MAP[KeyCode.RightArrow] = 'RightArrow';\r\n        TO_STRING_MAP[KeyCode.DownArrow] = 'DownArrow';\r\n        TO_STRING_MAP[KeyCode.Insert] = 'Insert';\r\n        TO_STRING_MAP[KeyCode.Delete] = 'Delete';\r\n        TO_STRING_MAP[KeyCode.KEY_0] = '0';\r\n        TO_STRING_MAP[KeyCode.KEY_1] = '1';\r\n        TO_STRING_MAP[KeyCode.KEY_2] = '2';\r\n        TO_STRING_MAP[KeyCode.KEY_3] = '3';\r\n        TO_STRING_MAP[KeyCode.KEY_4] = '4';\r\n        TO_STRING_MAP[KeyCode.KEY_5] = '5';\r\n        TO_STRING_MAP[KeyCode.KEY_6] = '6';\r\n        TO_STRING_MAP[KeyCode.KEY_7] = '7';\r\n        TO_STRING_MAP[KeyCode.KEY_8] = '8';\r\n        TO_STRING_MAP[KeyCode.KEY_9] = '9';\r\n        TO_STRING_MAP[KeyCode.KEY_A] = 'A';\r\n        TO_STRING_MAP[KeyCode.KEY_B] = 'B';\r\n        TO_STRING_MAP[KeyCode.KEY_C] = 'C';\r\n        TO_STRING_MAP[KeyCode.KEY_D] = 'D';\r\n        TO_STRING_MAP[KeyCode.KEY_E] = 'E';\r\n        TO_STRING_MAP[KeyCode.KEY_F] = 'F';\r\n        TO_STRING_MAP[KeyCode.KEY_G] = 'G';\r\n        TO_STRING_MAP[KeyCode.KEY_H] = 'H';\r\n        TO_STRING_MAP[KeyCode.KEY_I] = 'I';\r\n        TO_STRING_MAP[KeyCode.KEY_J] = 'J';\r\n        TO_STRING_MAP[KeyCode.KEY_K] = 'K';\r\n        TO_STRING_MAP[KeyCode.KEY_L] = 'L';\r\n        TO_STRING_MAP[KeyCode.KEY_M] = 'M';\r\n        TO_STRING_MAP[KeyCode.KEY_N] = 'N';\r\n        TO_STRING_MAP[KeyCode.KEY_O] = 'O';\r\n        TO_STRING_MAP[KeyCode.KEY_P] = 'P';\r\n        TO_STRING_MAP[KeyCode.KEY_Q] = 'Q';\r\n        TO_STRING_MAP[KeyCode.KEY_R] = 'R';\r\n        TO_STRING_MAP[KeyCode.KEY_S] = 'S';\r\n        TO_STRING_MAP[KeyCode.KEY_T] = 'T';\r\n        TO_STRING_MAP[KeyCode.KEY_U] = 'U';\r\n        TO_STRING_MAP[KeyCode.KEY_V] = 'V';\r\n        TO_STRING_MAP[KeyCode.KEY_W] = 'W';\r\n        TO_STRING_MAP[KeyCode.KEY_X] = 'X';\r\n        TO_STRING_MAP[KeyCode.KEY_Y] = 'Y';\r\n        TO_STRING_MAP[KeyCode.KEY_Z] = 'Z';\r\n        TO_STRING_MAP[KeyCode.ContextMenu] = 'ContextMenu';\r\n        TO_STRING_MAP[KeyCode.F1] = 'F1';\r\n        TO_STRING_MAP[KeyCode.F2] = 'F2';\r\n        TO_STRING_MAP[KeyCode.F3] = 'F3';\r\n        TO_STRING_MAP[KeyCode.F4] = 'F4';\r\n        TO_STRING_MAP[KeyCode.F5] = 'F5';\r\n        TO_STRING_MAP[KeyCode.F6] = 'F6';\r\n        TO_STRING_MAP[KeyCode.F7] = 'F7';\r\n        TO_STRING_MAP[KeyCode.F8] = 'F8';\r\n        TO_STRING_MAP[KeyCode.F9] = 'F9';\r\n        TO_STRING_MAP[KeyCode.F10] = 'F10';\r\n        TO_STRING_MAP[KeyCode.F11] = 'F11';\r\n        TO_STRING_MAP[KeyCode.F12] = 'F12';\r\n        TO_STRING_MAP[KeyCode.F13] = 'F13';\r\n        TO_STRING_MAP[KeyCode.F14] = 'F14';\r\n        TO_STRING_MAP[KeyCode.F15] = 'F15';\r\n        TO_STRING_MAP[KeyCode.F16] = 'F16';\r\n        TO_STRING_MAP[KeyCode.F17] = 'F17';\r\n        TO_STRING_MAP[KeyCode.F18] = 'F18';\r\n        TO_STRING_MAP[KeyCode.F19] = 'F19';\r\n        TO_STRING_MAP[KeyCode.NumLock] = 'NumLock';\r\n        TO_STRING_MAP[KeyCode.ScrollLock] = 'ScrollLock';\r\n        TO_STRING_MAP[KeyCode.US_SEMICOLON] = ';';\r\n        TO_STRING_MAP[KeyCode.US_EQUAL] = '=';\r\n        TO_STRING_MAP[KeyCode.US_COMMA] = ',';\r\n        TO_STRING_MAP[KeyCode.US_MINUS] = '-';\r\n        TO_STRING_MAP[KeyCode.US_DOT] = '.';\r\n        TO_STRING_MAP[KeyCode.US_SLASH] = '/';\r\n        TO_STRING_MAP[KeyCode.US_BACKTICK] = '`';\r\n        TO_STRING_MAP[KeyCode.US_OPEN_SQUARE_BRACKET] = '[';\r\n        TO_STRING_MAP[KeyCode.US_BACKSLASH] = '\\\\';\r\n        TO_STRING_MAP[KeyCode.US_CLOSE_SQUARE_BRACKET] = ']';\r\n        TO_STRING_MAP[KeyCode.US_QUOTE] = '\\'';\r\n        TO_STRING_MAP[KeyCode.NUMPAD_0] = 'NumPad0';\r\n        TO_STRING_MAP[KeyCode.NUMPAD_1] = 'NumPad1';\r\n        TO_STRING_MAP[KeyCode.NUMPAD_2] = 'NumPad2';\r\n        TO_STRING_MAP[KeyCode.NUMPAD_3] = 'NumPad3';\r\n        TO_STRING_MAP[KeyCode.NUMPAD_4] = 'NumPad4';\r\n        TO_STRING_MAP[KeyCode.NUMPAD_5] = 'NumPad5';\r\n        TO_STRING_MAP[KeyCode.NUMPAD_6] = 'NumPad6';\r\n        TO_STRING_MAP[KeyCode.NUMPAD_7] = 'NumPad7';\r\n        TO_STRING_MAP[KeyCode.NUMPAD_8] = 'NumPad8';\r\n        TO_STRING_MAP[KeyCode.NUMPAD_9] = 'NumPad9';\r\n        TO_STRING_MAP[KeyCode.NUMPAD_MULTIPLY] = 'NumPad_Multiply';\r\n        TO_STRING_MAP[KeyCode.NUMPAD_ADD] = 'NumPad_Add';\r\n        TO_STRING_MAP[KeyCode.NUMPAD_SEPARATOR] = 'NumPad_Separator';\r\n        TO_STRING_MAP[KeyCode.NUMPAD_SUBTRACT] = 'NumPad_Subtract';\r\n        TO_STRING_MAP[KeyCode.NUMPAD_DECIMAL] = 'NumPad_Decimal';\r\n        TO_STRING_MAP[KeyCode.NUMPAD_DIVIDE] = 'NumPad_Divide';\r\n        // for (let i = 0; i < KeyCode.MAX_VALUE; i++) {\r\n        // \tif (!TO_STRING_MAP[i]) {\r\n        // \t\tconsole.warn('Missing string representation for ' + KeyCode[i]);\r\n        // \t}\r\n        // }\r\n    })();\r\n    var FROM_STRING_MAP = {};\r\n    FROM_STRING_MAP['\\r'] = KeyCode.Enter;\r\n    (function () {\r\n        for (var i = 0, len = TO_STRING_MAP.length; i < len; i++) {\r\n            if (!TO_STRING_MAP[i]) {\r\n                continue;\r\n            }\r\n            FROM_STRING_MAP[TO_STRING_MAP[i]] = i;\r\n            FROM_STRING_MAP[TO_STRING_MAP[i].toLowerCase()] = i;\r\n        }\r\n    })();\r\n    var KeyCode;\r\n    (function (KeyCode) {\r\n        function toString(key) {\r\n            return TO_STRING_MAP[key];\r\n        }\r\n        KeyCode.toString = toString;\r\n        function fromString(key) {\r\n            if (FROM_STRING_MAP.hasOwnProperty(key)) {\r\n                return FROM_STRING_MAP[key];\r\n            }\r\n            return KeyCode.Unknown;\r\n        }\r\n        KeyCode.fromString = fromString;\r\n    })(KeyCode = exports.KeyCode || (exports.KeyCode = {}));\r\n    // Binary encoding strategy:\r\n    // 15:  1 bit for ctrlCmd\r\n    // 14:  1 bit for shift\r\n    // 13:  1 bit for alt\r\n    // 12:  1 bit for winCtrl\r\n    //  0: 12 bits for keyCode (up to a maximum keyCode of 4096. Given we have 83 at this point thats good enough)\r\n    var BIN_CTRLCMD_MASK = 1 << 15;\r\n    var BIN_SHIFT_MASK = 1 << 14;\r\n    var BIN_ALT_MASK = 1 << 13;\r\n    var BIN_WINCTRL_MASK = 1 << 12;\r\n    var BIN_KEYCODE_MASK = 0x00000fff;\r\n    var BinaryKeybindings = (function () {\r\n        function BinaryKeybindings() {\r\n        }\r\n        BinaryKeybindings.extractFirstPart = function (keybinding) {\r\n            return keybinding & 0x0000ffff;\r\n        };\r\n        BinaryKeybindings.extractChordPart = function (keybinding) {\r\n            return (keybinding >> 16) & 0x0000ffff;\r\n        };\r\n        BinaryKeybindings.hasChord = function (keybinding) {\r\n            return (this.extractChordPart(keybinding) !== 0);\r\n        };\r\n        BinaryKeybindings.hasCtrlCmd = function (keybinding) {\r\n            return (keybinding & BIN_CTRLCMD_MASK ? true : false);\r\n        };\r\n        BinaryKeybindings.hasShift = function (keybinding) {\r\n            return (keybinding & BIN_SHIFT_MASK ? true : false);\r\n        };\r\n        BinaryKeybindings.hasAlt = function (keybinding) {\r\n            return (keybinding & BIN_ALT_MASK ? true : false);\r\n        };\r\n        BinaryKeybindings.hasWinCtrl = function (keybinding) {\r\n            return (keybinding & BIN_WINCTRL_MASK ? true : false);\r\n        };\r\n        BinaryKeybindings.extractKeyCode = function (keybinding) {\r\n            return (keybinding & BIN_KEYCODE_MASK);\r\n        };\r\n        return BinaryKeybindings;\r\n    })();\r\n    exports.BinaryKeybindings = BinaryKeybindings;\r\n    var KeyMod = (function () {\r\n        function KeyMod() {\r\n        }\r\n        KeyMod.chord = function (firstPart, secondPart) {\r\n            return firstPart | ((secondPart & 0x0000ffff) << 16);\r\n        };\r\n        KeyMod.CtrlCmd = BIN_CTRLCMD_MASK;\r\n        KeyMod.Shift = BIN_SHIFT_MASK;\r\n        KeyMod.Alt = BIN_ALT_MASK;\r\n        KeyMod.WinCtrl = BIN_WINCTRL_MASK;\r\n        return KeyMod;\r\n    })();\r\n    exports.KeyMod = KeyMod;\r\n    /**\r\n     * A set of usual keybindings that can be reused in code\r\n     */\r\n    var CommonKeybindings = (function () {\r\n        function CommonKeybindings() {\r\n        }\r\n        CommonKeybindings.ENTER = KeyCode.Enter;\r\n        CommonKeybindings.SHIFT_ENTER = KeyMod.Shift | KeyCode.Enter;\r\n        CommonKeybindings.CTRLCMD_ENTER = KeyMod.CtrlCmd | KeyCode.Enter;\r\n        CommonKeybindings.WINCTRL_ENTER = KeyMod.WinCtrl | KeyCode.Enter;\r\n        CommonKeybindings.TAB = KeyCode.Tab;\r\n        CommonKeybindings.ESCAPE = KeyCode.Escape;\r\n        CommonKeybindings.SPACE = KeyCode.Space;\r\n        CommonKeybindings.DELETE = KeyCode.Delete;\r\n        CommonKeybindings.SHIFT_DELETE = KeyMod.Shift | KeyCode.Delete;\r\n        CommonKeybindings.CTRLCMD_BACKSPACE = KeyMod.CtrlCmd | KeyCode.Backspace;\r\n        CommonKeybindings.UP_ARROW = KeyCode.UpArrow;\r\n        CommonKeybindings.SHIFT_UP_ARROW = KeyMod.Shift | KeyCode.UpArrow;\r\n        CommonKeybindings.CTRLCMD_UP_ARROW = KeyMod.CtrlCmd | KeyCode.UpArrow;\r\n        CommonKeybindings.DOWN_ARROW = KeyCode.DownArrow;\r\n        CommonKeybindings.SHIFT_DOWN_ARROW = KeyMod.Shift | KeyCode.DownArrow;\r\n        CommonKeybindings.CTRLCMD_DOWN_ARROW = KeyMod.CtrlCmd | KeyCode.DownArrow;\r\n        CommonKeybindings.LEFT_ARROW = KeyCode.LeftArrow;\r\n        CommonKeybindings.RIGHT_ARROW = KeyCode.RightArrow;\r\n        CommonKeybindings.PAGE_UP = KeyCode.PageUp;\r\n        CommonKeybindings.SHIFT_PAGE_UP = KeyMod.Shift | KeyCode.PageUp;\r\n        CommonKeybindings.PAGE_DOWN = KeyCode.PageDown;\r\n        CommonKeybindings.SHIFT_PAGE_DOWN = KeyMod.Shift | KeyCode.PageDown;\r\n        CommonKeybindings.F2 = KeyCode.F2;\r\n        CommonKeybindings.CTRLCMD_S = KeyMod.CtrlCmd | KeyCode.KEY_S;\r\n        CommonKeybindings.CTRLCMD_C = KeyMod.CtrlCmd | KeyCode.KEY_C;\r\n        CommonKeybindings.CTRLCMD_V = KeyMod.CtrlCmd | KeyCode.KEY_V;\r\n        return CommonKeybindings;\r\n    })();\r\n    exports.CommonKeybindings = CommonKeybindings;\r\n    var Keybinding = (function () {\r\n        function Keybinding(keybinding) {\r\n            this.value = keybinding;\r\n        }\r\n        /**\r\n         * Format the binding to a format appropiate for rendering in the UI\r\n         */\r\n        Keybinding._toUSLabel = function (value) {\r\n            return _asString(value, (Platform.isMacintosh ? MacUIKeyLabelProvider.INSTANCE : ClassicUIKeyLabelProvider.INSTANCE));\r\n        };\r\n        /**\r\n         * Format the binding to a format appropiate for rendering in the UI\r\n         */\r\n        Keybinding._toUSHTMLLabel = function (value) {\r\n            return _asHTML(value, (Platform.isMacintosh ? MacUIKeyLabelProvider.INSTANCE : ClassicUIKeyLabelProvider.INSTANCE));\r\n        };\r\n        /**\r\n         * Format the binding to a format appropiate for rendering in the UI\r\n         */\r\n        Keybinding._toCustomLabel = function (value, labelProvider) {\r\n            return _asString(value, labelProvider);\r\n        };\r\n        /**\r\n         * Format the binding to a format appropiate for rendering in the UI\r\n         */\r\n        Keybinding._toCustomHTMLLabel = function (value, labelProvider) {\r\n            return _asHTML(value, labelProvider);\r\n        };\r\n        /**\r\n         * This prints the binding in a format suitable for electron's accelerators.\r\n         * See https://github.com/atom/electron/blob/master/docs/api/accelerator.md\r\n         */\r\n        Keybinding._toElectronAccelerator = function (value) {\r\n            if (BinaryKeybindings.hasChord(value)) {\r\n                // Electron cannot handle chords\r\n                return null;\r\n            }\r\n            return _asString(value, ElectronAcceleratorLabelProvider.INSTANCE);\r\n        };\r\n        /**\r\n         * Format the binding to a format appropiate for the user settings file.\r\n         */\r\n        Keybinding.toUserSettingsLabel = function (value) {\r\n            var result = _asString(value, UserSettingsKeyLabelProvider.INSTANCE);\r\n            result = result.toLowerCase().replace(/arrow/g, '');\r\n            if (Platform.isMacintosh) {\r\n                result = result.replace(/meta/g, 'cmd');\r\n            }\r\n            else if (Platform.isWindows) {\r\n                result = result.replace(/meta/g, 'win');\r\n            }\r\n            return result;\r\n        };\r\n        Keybinding.prototype.hasCtrlCmd = function () {\r\n            return BinaryKeybindings.hasCtrlCmd(this.value);\r\n        };\r\n        Keybinding.prototype.hasShift = function () {\r\n            return BinaryKeybindings.hasShift(this.value);\r\n        };\r\n        Keybinding.prototype.hasAlt = function () {\r\n            return BinaryKeybindings.hasAlt(this.value);\r\n        };\r\n        Keybinding.prototype.hasWinCtrl = function () {\r\n            return BinaryKeybindings.hasWinCtrl(this.value);\r\n        };\r\n        Keybinding.prototype.extractKeyCode = function () {\r\n            return BinaryKeybindings.extractKeyCode(this.value);\r\n        };\r\n        /**\r\n         * Format the binding to a format appropiate for rendering in the UI\r\n         */\r\n        Keybinding.prototype._toUSLabel = function () {\r\n            return Keybinding._toUSLabel(this.value);\r\n        };\r\n        /**\r\n         * Format the binding to a format appropiate for rendering in the UI\r\n         */\r\n        Keybinding.prototype._toUSHTMLLabel = function () {\r\n            return Keybinding._toUSHTMLLabel(this.value);\r\n        };\r\n        /**\r\n         * Format the binding to a format appropiate for rendering in the UI\r\n         */\r\n        Keybinding.prototype.toCustomLabel = function (labelProvider) {\r\n            return Keybinding._toCustomLabel(this.value, labelProvider);\r\n        };\r\n        /**\r\n         * Format the binding to a format appropiate for rendering in the UI\r\n         */\r\n        Keybinding.prototype.toCustomHTMLLabel = function (labelProvider) {\r\n            return Keybinding._toCustomHTMLLabel(this.value, labelProvider);\r\n        };\r\n        /**\r\n         * This prints the binding in a format suitable for electron's accelerators.\r\n         * See https://github.com/atom/electron/blob/master/docs/api/accelerator.md\r\n         */\r\n        Keybinding.prototype._toElectronAccelerator = function () {\r\n            return Keybinding._toElectronAccelerator(this.value);\r\n        };\r\n        /**\r\n         * Format the binding to a format appropiate for the user settings file.\r\n         */\r\n        Keybinding.prototype.toUserSettingsLabel = function () {\r\n            return Keybinding.toUserSettingsLabel(this.value);\r\n        };\r\n        return Keybinding;\r\n    })();\r\n    exports.Keybinding = Keybinding;\r\n    /**\r\n     * Print for Electron\r\n     */\r\n    var ElectronAcceleratorLabelProvider = (function () {\r\n        function ElectronAcceleratorLabelProvider() {\r\n            this.ctrlKeyLabel = 'Ctrl';\r\n            this.shiftKeyLabel = 'Shift';\r\n            this.altKeyLabel = 'Alt';\r\n            this.cmdKeyLabel = 'Cmd';\r\n            this.windowsKeyLabel = 'Super';\r\n            this.modifierSeparator = '+';\r\n        }\r\n        ElectronAcceleratorLabelProvider.prototype.getLabelForKey = function (keyCode) {\r\n            switch (keyCode) {\r\n                case KeyCode.UpArrow:\r\n                    return 'Up';\r\n                case KeyCode.DownArrow:\r\n                    return 'Down';\r\n                case KeyCode.LeftArrow:\r\n                    return 'Left';\r\n                case KeyCode.RightArrow:\r\n                    return 'Right';\r\n            }\r\n            return KeyCode.toString(keyCode);\r\n        };\r\n        ElectronAcceleratorLabelProvider.INSTANCE = new ElectronAcceleratorLabelProvider();\r\n        return ElectronAcceleratorLabelProvider;\r\n    })();\r\n    exports.ElectronAcceleratorLabelProvider = ElectronAcceleratorLabelProvider;\r\n    /**\r\n     * Print for Mac UI\r\n     */\r\n    var MacUIKeyLabelProvider = (function () {\r\n        function MacUIKeyLabelProvider() {\r\n            this.ctrlKeyLabel = '\\u2303';\r\n            this.shiftKeyLabel = '\\u21E7';\r\n            this.altKeyLabel = '\\u2325';\r\n            this.cmdKeyLabel = '\\u2318';\r\n            this.windowsKeyLabel = nls.localize(0, null);\r\n            this.modifierSeparator = '';\r\n        }\r\n        MacUIKeyLabelProvider.prototype.getLabelForKey = function (keyCode) {\r\n            switch (keyCode) {\r\n                case KeyCode.LeftArrow:\r\n                    return MacUIKeyLabelProvider.leftArrowUnicodeLabel;\r\n                case KeyCode.UpArrow:\r\n                    return MacUIKeyLabelProvider.upArrowUnicodeLabel;\r\n                case KeyCode.RightArrow:\r\n                    return MacUIKeyLabelProvider.rightArrowUnicodeLabel;\r\n                case KeyCode.DownArrow:\r\n                    return MacUIKeyLabelProvider.downArrowUnicodeLabel;\r\n            }\r\n            return KeyCode.toString(keyCode);\r\n        };\r\n        MacUIKeyLabelProvider.INSTANCE = new MacUIKeyLabelProvider();\r\n        MacUIKeyLabelProvider.leftArrowUnicodeLabel = String.fromCharCode(8592);\r\n        MacUIKeyLabelProvider.upArrowUnicodeLabel = String.fromCharCode(8593);\r\n        MacUIKeyLabelProvider.rightArrowUnicodeLabel = String.fromCharCode(8594);\r\n        MacUIKeyLabelProvider.downArrowUnicodeLabel = String.fromCharCode(8595);\r\n        return MacUIKeyLabelProvider;\r\n    })();\r\n    exports.MacUIKeyLabelProvider = MacUIKeyLabelProvider;\r\n    /**\r\n     * Print for Windows, Linux UI\r\n     */\r\n    var ClassicUIKeyLabelProvider = (function () {\r\n        function ClassicUIKeyLabelProvider() {\r\n            this.ctrlKeyLabel = nls.localize(1, null);\r\n            this.shiftKeyLabel = nls.localize(2, null);\r\n            this.altKeyLabel = nls.localize(3, null);\r\n            this.cmdKeyLabel = nls.localize(4, null);\r\n            this.windowsKeyLabel = nls.localize(5, null);\r\n            this.modifierSeparator = '+';\r\n        }\r\n        ClassicUIKeyLabelProvider.prototype.getLabelForKey = function (keyCode) {\r\n            return KeyCode.toString(keyCode);\r\n        };\r\n        ClassicUIKeyLabelProvider.INSTANCE = new ClassicUIKeyLabelProvider();\r\n        return ClassicUIKeyLabelProvider;\r\n    })();\r\n    exports.ClassicUIKeyLabelProvider = ClassicUIKeyLabelProvider;\r\n    /**\r\n     * Print for the user settings file.\r\n     */\r\n    var UserSettingsKeyLabelProvider = (function () {\r\n        function UserSettingsKeyLabelProvider() {\r\n            this.ctrlKeyLabel = 'Ctrl';\r\n            this.shiftKeyLabel = 'Shift';\r\n            this.altKeyLabel = 'Alt';\r\n            this.cmdKeyLabel = 'Meta';\r\n            this.windowsKeyLabel = 'Meta';\r\n            this.modifierSeparator = '+';\r\n        }\r\n        UserSettingsKeyLabelProvider.prototype.getLabelForKey = function (keyCode) {\r\n            return KeyCode.toString(keyCode);\r\n        };\r\n        UserSettingsKeyLabelProvider.INSTANCE = new UserSettingsKeyLabelProvider();\r\n        return UserSettingsKeyLabelProvider;\r\n    })();\r\n    function _asString(keybinding, labelProvider) {\r\n        var result = [], ctrlCmd = BinaryKeybindings.hasCtrlCmd(keybinding), shift = BinaryKeybindings.hasShift(keybinding), alt = BinaryKeybindings.hasAlt(keybinding), winCtrl = BinaryKeybindings.hasWinCtrl(keybinding), keyCode = BinaryKeybindings.extractKeyCode(keybinding);\r\n        var keyLabel = labelProvider.getLabelForKey(keyCode);\r\n        if (!keyLabel) {\r\n            // cannot trigger this key code under this kb layout\r\n            return '';\r\n        }\r\n        // translate modifier keys: Ctrl-Shift-Alt-Meta\r\n        if ((ctrlCmd && !Platform.isMacintosh) || (winCtrl && Platform.isMacintosh)) {\r\n            result.push(labelProvider.ctrlKeyLabel);\r\n        }\r\n        if (shift) {\r\n            result.push(labelProvider.shiftKeyLabel);\r\n        }\r\n        if (alt) {\r\n            result.push(labelProvider.altKeyLabel);\r\n        }\r\n        if (ctrlCmd && Platform.isMacintosh) {\r\n            result.push(labelProvider.cmdKeyLabel);\r\n        }\r\n        if (winCtrl && !Platform.isMacintosh) {\r\n            result.push(labelProvider.windowsKeyLabel);\r\n        }\r\n        // the actual key\r\n        result.push(keyLabel);\r\n        var actualResult = result.join(labelProvider.modifierSeparator);\r\n        if (BinaryKeybindings.hasChord(keybinding)) {\r\n            return actualResult + ' ' + _asString(BinaryKeybindings.extractChordPart(keybinding), labelProvider);\r\n        }\r\n        return actualResult;\r\n    }\r\n    function _pushKey(result, str) {\r\n        if (result.length > 0) {\r\n            result.push({\r\n                tagName: 'span',\r\n                text: '+'\r\n            });\r\n        }\r\n        result.push({\r\n            tagName: 'span',\r\n            className: 'monaco-kbkey',\r\n            text: str\r\n        });\r\n    }\r\n    function _asHTML(keybinding, labelProvider, isChord) {\r\n        if (isChord === void 0) { isChord = false; }\r\n        var result = [], ctrlCmd = BinaryKeybindings.hasCtrlCmd(keybinding), shift = BinaryKeybindings.hasShift(keybinding), alt = BinaryKeybindings.hasAlt(keybinding), winCtrl = BinaryKeybindings.hasWinCtrl(keybinding), keyCode = BinaryKeybindings.extractKeyCode(keybinding);\r\n        var keyLabel = labelProvider.getLabelForKey(keyCode);\r\n        if (!keyLabel) {\r\n            // cannot trigger this key code under this kb layout\r\n            return [];\r\n        }\r\n        // translate modifier keys: Ctrl-Shift-Alt-Meta\r\n        if ((ctrlCmd && !Platform.isMacintosh) || (winCtrl && Platform.isMacintosh)) {\r\n            _pushKey(result, labelProvider.ctrlKeyLabel);\r\n        }\r\n        if (shift) {\r\n            _pushKey(result, labelProvider.shiftKeyLabel);\r\n        }\r\n        if (alt) {\r\n            _pushKey(result, labelProvider.altKeyLabel);\r\n        }\r\n        if (ctrlCmd && Platform.isMacintosh) {\r\n            _pushKey(result, labelProvider.cmdKeyLabel);\r\n        }\r\n        if (winCtrl && !Platform.isMacintosh) {\r\n            _pushKey(result, labelProvider.windowsKeyLabel);\r\n        }\r\n        // the actual key\r\n        _pushKey(result, keyLabel);\r\n        var chordTo = null;\r\n        if (BinaryKeybindings.hasChord(keybinding)) {\r\n            chordTo = _asHTML(BinaryKeybindings.extractChordPart(keybinding), labelProvider, true);\r\n            result.push({\r\n                tagName: 'span',\r\n                text: ' '\r\n            });\r\n            result = result.concat(chordTo);\r\n        }\r\n        if (isChord) {\r\n            return result;\r\n        }\r\n        return [{\r\n                tagName: 'span',\r\n                className: 'monaco-kb',\r\n                children: result\r\n            }];\r\n        return result;\r\n    }\r\n});\r\n\ndefine(\"vs/nls!vs/base/common/severity\",['vs/nls', 'vs/nls!vs/workbench/node/pluginHostProcess'], function(nls, data) { return nls.create(\"vs/base/common/severity\", data); });\ndefine(\"vs/nls!vs/base/common/strings\",['vs/nls', 'vs/nls!vs/workbench/node/pluginHostProcess'], function(nls, data) { return nls.create(\"vs/base/common/strings\", data); });\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/base/common/strings\", [\"require\", \"exports\", 'vs/nls!vs/base/common/strings'], function (require, exports, nls) {\r\n    /**\r\n     * The empty string.\r\n     */\r\n    exports.empty = '';\r\n    /**\r\n     * @returns the provided number with the given number of preceding zeros.\r\n     */\r\n    function pad(n, l, char) {\r\n        if (char === void 0) { char = '0'; }\r\n        var str = '' + n;\r\n        var r = [str];\r\n        for (var i = str.length; i < l; i++) {\r\n            r.push(char);\r\n        }\r\n        return r.reverse().join('');\r\n    }\r\n    exports.pad = pad;\r\n    var _formatRegexp = /{(\\d+)}/g;\r\n    /**\r\n     * Helper to produce a string with a variable number of arguments. Insert variable segments\r\n     * into the string using the {n} notation where N is the index of the argument following the string.\r\n     * @param value string to which formatting is applied\r\n     * @param args replacements for {n}-entries\r\n     */\r\n    function format(value) {\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        if (args.length === 0) {\r\n            return value;\r\n        }\r\n        return value.replace(_formatRegexp, function (match, group) {\r\n            var idx = parseInt(group, 10);\r\n            return isNaN(idx) || idx < 0 || idx >= args.length ?\r\n                match :\r\n                args[idx];\r\n        });\r\n    }\r\n    exports.format = format;\r\n    /**\r\n     * Simple, non-language-aware date formatter.\r\n     */\r\n    function formatDate(date) {\r\n        if (date === void 0) { date = new Date(); }\r\n        return nls.localize(0, null, pad(date.getMonth() + 1, 2), pad(date.getDate(), 2), pad(date.getFullYear(), 4), pad(date.getHours(), 2), pad(date.getMinutes(), 2), pad(date.getSeconds(), 2));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n    exports.formatDate = formatDate;\r\n    /**\r\n     * Simple, non-language-aware time formatter.\r\n     */\r\n    function formatTime(date) {\r\n        if (date === void 0) { date = new Date(); }\r\n        return nls.localize(1, null, pad(date.getHours(), 2), pad(date.getMinutes(), 2), pad(date.getSeconds(), 2));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n    exports.formatTime = formatTime;\r\n    /**\r\n     * Converts HTML characters inside the string to use entities instead. Makes the string safe from\r\n     * being used e.g. in HTMLElement.innerHTML.\r\n     */\r\n    function escape(html) {\r\n        return html.replace(/[<|>|&]/g, function (match) {\r\n            switch (match) {\r\n                case '<': return '&lt;';\r\n                case '>': return '&gt;';\r\n                case '&': return '&amp;';\r\n                default: return match;\r\n            }\r\n        });\r\n    }\r\n    exports.escape = escape;\r\n    /**\r\n     * Escapes regular expression characters in a given string\r\n     */\r\n    function escapeRegExpCharacters(value) {\r\n        return value.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&');\r\n    }\r\n    exports.escapeRegExpCharacters = escapeRegExpCharacters;\r\n    /**\r\n     * Searches for all occurrences of needle in haystack and replaces them with replacement.\r\n     */\r\n    function replaceAll(haystack, needle, replacement) {\r\n        return haystack.replace(new RegExp(escapeRegExpCharacters(needle.toString()), 'g'), replacement);\r\n    }\r\n    exports.replaceAll = replaceAll;\r\n    /**\r\n     * Removes all occurrences of needle from the beginning and end of haystack.\r\n     * @param haystack string to trim\r\n     * @param needle the thing to trim (default is a blank)\r\n     */\r\n    function trim(haystack, needle) {\r\n        if (needle === void 0) { needle = ' '; }\r\n        var trimmed = ltrim(haystack, needle);\r\n        return rtrim(trimmed, needle);\r\n    }\r\n    exports.trim = trim;\r\n    /**\r\n     * Removes all occurrences of needle from the beginning of haystack.\r\n     * @param haystack string to trim\r\n     * @param needle the thing to trim\r\n     */\r\n    function ltrim(haystack, needle) {\r\n        if (!haystack || !needle) {\r\n            return haystack;\r\n        }\r\n        var needleLen = needle.length;\r\n        if (needleLen === 0 || haystack.length === 0) {\r\n            return haystack;\r\n        }\r\n        var offset = 0, idx = -1;\r\n        while ((idx = haystack.indexOf(needle, offset)) === offset) {\r\n            offset = offset + needleLen;\r\n        }\r\n        return haystack.substring(offset);\r\n    }\r\n    exports.ltrim = ltrim;\r\n    /**\r\n     * Removes all occurrences of needle from the end of haystack.\r\n     * @param haystack string to trim\r\n     * @param needle the thing to trim\r\n     */\r\n    function rtrim(haystack, needle) {\r\n        if (!haystack || !needle) {\r\n            return haystack;\r\n        }\r\n        var needleLen = needle.length, haystackLen = haystack.length;\r\n        if (needleLen === 0 || haystackLen === 0) {\r\n            return haystack;\r\n        }\r\n        var offset = haystackLen, idx = -1;\r\n        while (true) {\r\n            idx = haystack.lastIndexOf(needle, offset - 1);\r\n            if (idx === -1 || idx + needleLen !== offset) {\r\n                break;\r\n            }\r\n            if (idx === 0) {\r\n                return '';\r\n            }\r\n            offset = idx;\r\n        }\r\n        return haystack.substring(0, offset);\r\n    }\r\n    exports.rtrim = rtrim;\r\n    /**\r\n     * Removes all occurrences of whitespaces from the beginning and end of haystack.\r\n     */\r\n    function trimWhitespace(haystack) {\r\n        return haystack.replace(/(^\\s+|\\s+$)/g, '');\r\n    }\r\n    exports.trimWhitespace = trimWhitespace;\r\n    function convertSimple2RegExpPattern(pattern) {\r\n        return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\r\n    }\r\n    exports.convertSimple2RegExpPattern = convertSimple2RegExpPattern;\r\n    function stripWildcards(pattern) {\r\n        return replaceAll(pattern, '*', '');\r\n    }\r\n    exports.stripWildcards = stripWildcards;\r\n    /**\r\n     * Determines if haystack starts with needle.\r\n     */\r\n    function startsWith(haystack, needle) {\r\n        if (haystack.length < needle.length) {\r\n            return false;\r\n        }\r\n        for (var i = 0; i < needle.length; i++) {\r\n            if (haystack[i] !== needle[i]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    exports.startsWith = startsWith;\r\n    /**\r\n     * Determines if haystack ends with needle.\r\n     */\r\n    function endsWith(haystack, needle) {\r\n        var diff = haystack.length - needle.length;\r\n        if (diff > 0) {\r\n            return haystack.lastIndexOf(needle) === haystack.length - needle.length;\r\n        }\r\n        else if (diff === 0) {\r\n            return haystack === needle;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    exports.endsWith = endsWith;\r\n    function splice(haystack, offset, length, value) {\r\n        if (value === void 0) { value = ''; }\r\n        return haystack.substring(0, offset) + value + haystack.substring(offset + length);\r\n    }\r\n    exports.splice = splice;\r\n    function createRegExp(searchString, isRegex, matchCase, wholeWord) {\r\n        if (searchString === '') {\r\n            throw new Error('Cannot create regex from empty string');\r\n        }\r\n        if (!isRegex) {\r\n            searchString = searchString.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&');\r\n        }\r\n        if (wholeWord) {\r\n            if (!/\\B/.test(searchString.charAt(0))) {\r\n                searchString = '\\\\b' + searchString;\r\n            }\r\n            if (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\r\n                searchString = searchString + '\\\\b';\r\n            }\r\n        }\r\n        var modifiers = 'g';\r\n        if (!matchCase) {\r\n            modifiers += 'i';\r\n        }\r\n        return new RegExp(searchString, modifiers);\r\n    }\r\n    exports.createRegExp = createRegExp;\r\n    function regExpLeadsToEndlessLoop(regexp) {\r\n        // Exit early if it's one of these special cases which are meant to match\r\n        // against an empty string\r\n        if (regexp.source === \"^\" || regexp.source === \"^$\" || regexp.source === \"$\") {\r\n            return false;\r\n        }\r\n        // We check against an empty string. If the regular expression doesn't advance\r\n        // (e.g. ends in an endless loop) it will match an empty string.\r\n        var match = regexp.exec('');\r\n        return (match && regexp.lastIndex === 0);\r\n    }\r\n    exports.regExpLeadsToEndlessLoop = regExpLeadsToEndlessLoop;\r\n    /**\r\n     * The normalize() method returns the Unicode Normalization Form of a given string. The form will be\r\n     * the Normalization Form Canonical Composition.\r\n     *\r\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize}\r\n     */\r\n    exports.canNormalize = typeof (''.normalize) === 'function';\r\n    function normalizeNFC(str, cache) {\r\n        if (!exports.canNormalize || !str) {\r\n            return str;\r\n        }\r\n        if (cache && cache[str]) {\r\n            return cache[str];\r\n        }\r\n        var res = str.normalize('NFC');\r\n        if (cache) {\r\n            cache[str] = res;\r\n        }\r\n        return res;\r\n    }\r\n    exports.normalizeNFC = normalizeNFC;\r\n    function encodeURIPart(haystack, keepSlashes) {\r\n        if (!haystack) {\r\n            return haystack;\r\n        }\r\n        if (!keepSlashes) {\r\n            return encodeURIComponent(haystack);\r\n        }\r\n        else {\r\n            var parts = haystack.split('/');\r\n            for (var i = 0, len = parts.length; i < len; i++) {\r\n                parts[i] = encodeURIComponent(parts[i]);\r\n            }\r\n            return parts.join('/');\r\n        }\r\n    }\r\n    exports.encodeURIPart = encodeURIPart;\r\n    function isCamelCasePattern(pattern) {\r\n        return (/^\\w[\\w.]*$/).test(pattern);\r\n    }\r\n    exports.isCamelCasePattern = isCamelCasePattern;\r\n    function isFalsyOrWhitespace(s) {\r\n        return !s || !s.trim();\r\n    }\r\n    exports.isFalsyOrWhitespace = isFalsyOrWhitespace;\r\n    function anchorPattern(value, start, end) {\r\n        if (start) {\r\n            value = '^' + value;\r\n        }\r\n        if (end) {\r\n            value = value + '$';\r\n        }\r\n        return value;\r\n    }\r\n    exports.anchorPattern = anchorPattern;\r\n    function assertRegExp(pattern, modifiers) {\r\n        if (regExpLeadsToEndlessLoop(new RegExp(pattern, modifiers))) {\r\n            throw new Error('Regular expression /' + pattern + '/g results in infinitive matches');\r\n        }\r\n    }\r\n    exports.assertRegExp = assertRegExp;\r\n    function normalizePath(path) {\r\n        // No path provided, assume root\r\n        if (!path) {\r\n            return '';\r\n        }\r\n        // Paths must not start with a slash because they are always relative to the workspace root\r\n        if (path.indexOf('/') === 0) {\r\n            path = path.substring(1);\r\n        }\r\n        return encodeURIPart(path, true);\r\n    }\r\n    exports.normalizePath = normalizePath;\r\n    function colorize(code, value) {\r\n        return '\\x1b[' + code + 'm' + value + '\\x1b[0m';\r\n    }\r\n    exports.colorize = colorize;\r\n    ;\r\n    /**\r\n     * Returns first index of the string that is not whitespace.\r\n     * If string is empty or contains only whitespaces, returns -1\r\n     */\r\n    function firstNonWhitespaceIndex(str) {\r\n        for (var i = 0, len = str.length; i < len; i++) {\r\n            if (str.charAt(i) !== ' ' && str.charAt(i) !== '\\t') {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    exports.firstNonWhitespaceIndex = firstNonWhitespaceIndex;\r\n    /**\r\n     * Returns the leading whitespace of the string.\r\n     * If the string contains only whitespaces, returns entire string\r\n     */\r\n    function getLeadingWhitespace(str) {\r\n        for (var i = 0, len = str.length; i < len; i++) {\r\n            if (str.charAt(i) !== ' ' && str.charAt(i) !== '\\t') {\r\n                return str.substring(0, i);\r\n            }\r\n        }\r\n        return str;\r\n    }\r\n    exports.getLeadingWhitespace = getLeadingWhitespace;\r\n    /**\r\n     * Returns last index of the string that is not whitespace.\r\n     * If string is empty or contains only whitespaces, returns -1\r\n     */\r\n    function lastNonWhitespaceIndex(str) {\r\n        for (var i = str.length - 1; i >= 0; i--) {\r\n            if (str.charAt(i) !== ' ' && str.charAt(i) !== '\\t') {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    exports.lastNonWhitespaceIndex = lastNonWhitespaceIndex;\r\n    function localeCompare(strA, strB) {\r\n        return strA.localeCompare(strB);\r\n    }\r\n    exports.localeCompare = localeCompare;\r\n    function isAsciiChar(code) {\r\n        return (code >= 97 && code <= 122) || (code >= 65 && code <= 90);\r\n    }\r\n    function equalsIgnoreCase(a, b) {\r\n        var len1 = a.length, len2 = b.length;\r\n        if (len1 !== len2) {\r\n            return false;\r\n        }\r\n        for (var i = 0; i < len1; i++) {\r\n            var codeA = a.charCodeAt(i), codeB = b.charCodeAt(i);\r\n            if (codeA === codeB) {\r\n                continue;\r\n            }\r\n            else if (isAsciiChar(codeA) && isAsciiChar(codeB)) {\r\n                var diff = Math.abs(codeA - codeB);\r\n                if (diff !== 0 && diff !== 32) {\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                if (String.fromCharCode(codeA).toLocaleLowerCase() !== String.fromCharCode(codeB).toLocaleLowerCase()) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    exports.equalsIgnoreCase = equalsIgnoreCase;\r\n    /**\r\n     * @returns the length of the common prefix of the two strings.\r\n     */\r\n    function commonPrefixLength(a, b) {\r\n        var i, len = Math.min(a.length, b.length);\r\n        for (i = 0; i < len; i++) {\r\n            if (a.charCodeAt(i) !== b.charCodeAt(i)) {\r\n                return i;\r\n            }\r\n        }\r\n        return len;\r\n    }\r\n    exports.commonPrefixLength = commonPrefixLength;\r\n    /**\r\n     * @returns the length of the common suffix of the two strings.\r\n     */\r\n    function commonSuffixLength(a, b) {\r\n        var i, len = Math.min(a.length, b.length);\r\n        var aLastIndex = a.length - 1;\r\n        var bLastIndex = b.length - 1;\r\n        for (i = 0; i < len; i++) {\r\n            if (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\r\n                return i;\r\n            }\r\n        }\r\n        return len;\r\n    }\r\n    exports.commonSuffixLength = commonSuffixLength;\r\n    // --- unicode\r\n    // http://en.wikipedia.org/wiki/Surrogate_pair\r\n    // Returns the code point starting at a specified index in a string\r\n    // Code points U+0000 to U+D7FF and U+E000 to U+FFFF are represented on a single character\r\n    // Code points U+10000 to U+10FFFF are represented on two consecutive characters\r\n    //export function getUnicodePoint(str:string, index:number, len:number):number {\r\n    //\tvar chrCode = str.charCodeAt(index);\r\n    //\tif (0xD800 <= chrCode && chrCode <= 0xDBFF && index + 1 < len) {\r\n    //\t\tvar nextChrCode = str.charCodeAt(index + 1);\r\n    //\t\tif (0xDC00 <= nextChrCode && nextChrCode <= 0xDFFF) {\r\n    //\t\t\treturn (chrCode - 0xD800) << 10 + (nextChrCode - 0xDC00) + 0x10000;\r\n    //\t\t}\r\n    //\t}\r\n    //\treturn chrCode;\r\n    //}\r\n    //export function isLeadSurrogate(chr:string) {\r\n    //\tvar chrCode = chr.charCodeAt(0);\r\n    //\treturn ;\r\n    //}\r\n    //\r\n    //export function isTrailSurrogate(chr:string) {\r\n    //\tvar chrCode = chr.charCodeAt(0);\r\n    //\treturn 0xDC00 <= chrCode && chrCode <= 0xDFFF;\r\n    //}\r\n    /**\r\n     * Computes the difference score for two strings. More similar strings have a higher score.\r\n     * We use largest common subsequence dynamic programming approach but penalize in the end for length differences.\r\n     * Strings that have a large length difference will get a bad default score 0.\r\n     * Complexity - both time and space O(first.length * second.length)\r\n     * Dynamic programming LCS computation http://en.wikipedia.org/wiki/Longest_common_subsequence_problem\r\n     *\r\n     * @param first a string\r\n     * @param second a string\r\n     */\r\n    function difference(first, second, maxLenDelta) {\r\n        if (maxLenDelta === void 0) { maxLenDelta = 4; }\r\n        var lengthDifference = Math.abs(first.length - second.length);\r\n        // We only compute score if length of the currentWord and length of entry.name are similar.\r\n        if (lengthDifference > maxLenDelta) {\r\n            return 0;\r\n        }\r\n        // Initialize LCS (largest common subsequence) matrix.\r\n        var LCS = [];\r\n        var zeroArray = [];\r\n        var i, j;\r\n        for (i = 0; i < second.length + 1; ++i) {\r\n            zeroArray.push(0);\r\n        }\r\n        for (i = 0; i < first.length + 1; ++i) {\r\n            LCS.push(zeroArray);\r\n        }\r\n        for (i = 1; i < first.length + 1; ++i) {\r\n            for (j = 1; j < second.length + 1; ++j) {\r\n                if (first[i - 1] === second[j - 1]) {\r\n                    LCS[i][j] = LCS[i - 1][j - 1] + 1;\r\n                }\r\n                else {\r\n                    LCS[i][j] = Math.max(LCS[i - 1][j], LCS[i][j - 1]);\r\n                }\r\n            }\r\n        }\r\n        return LCS[first.length][second.length] - Math.sqrt(lengthDifference);\r\n    }\r\n    exports.difference = difference;\r\n    /**\r\n     * Returns an array in which every entry is the offset of a\r\n     * line. There is always one entry which is zero.\r\n     */\r\n    function computeLineStarts(text) {\r\n        var regexp = /\\r\\n|\\r|\\n/g, ret = [0], match;\r\n        while ((match = regexp.exec(text))) {\r\n            ret.push(regexp.lastIndex);\r\n        }\r\n        return ret;\r\n    }\r\n    exports.computeLineStarts = computeLineStarts;\r\n    /**\r\n     * Given a string and a max length returns a shorted version. Shorting\r\n     * happens at favorable positions - such as whitespace or punctuation characters.\r\n     */\r\n    function lcut(text, n) {\r\n        if (text.length < n) {\r\n            return text;\r\n        }\r\n        var segments = text.split(/\\b/), count = 0;\r\n        for (var i = segments.length - 1; i >= 0; i--) {\r\n            count += segments[i].length;\r\n            if (count > n) {\r\n                segments.splice(0, i);\r\n                break;\r\n            }\r\n        }\r\n        return segments.join(exports.empty).replace(/^\\s/, exports.empty);\r\n    }\r\n    exports.lcut = lcut;\r\n    // Escape codes\r\n    // http://en.wikipedia.org/wiki/ANSI_escape_code\r\n    var EL = /\\x1B\\x5B[12]?K/g; // Erase in line\r\n    var LF = /\\xA/g; // line feed\r\n    var COLOR_START = /\\x1b\\[\\d+m/g; // Color\r\n    var COLOR_END = /\\x1b\\[0?m/g; // Color\r\n    function removeAnsiEscapeCodes(str) {\r\n        if (str) {\r\n            str = str.replace(EL, '');\r\n            str = str.replace(LF, '\\n');\r\n            str = str.replace(COLOR_START, '');\r\n            str = str.replace(COLOR_END, '');\r\n        }\r\n        return str;\r\n    }\r\n    exports.removeAnsiEscapeCodes = removeAnsiEscapeCodes;\r\n    // -- UTF-8 BOM\r\n    var __utf8_bom = 65279;\r\n    exports.UTF8_BOM_CHARACTER = String.fromCharCode(__utf8_bom);\r\n    function startsWithUTF8BOM(str) {\r\n        return (str && str.length > 0 && str.charCodeAt(0) === __utf8_bom);\r\n    }\r\n    exports.startsWithUTF8BOM = startsWithUTF8BOM;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/base/common/errors\", [\"require\", \"exports\", 'vs/nls!vs/base/common/errors', 'vs/base/common/objects', 'vs/base/common/platform', 'vs/base/common/types', 'vs/base/common/arrays', 'vs/base/common/strings'], function (require, exports, nls, objects, platform, types, arrays, strings) {\r\n    // Avoid circular dependency on EventEmitter by implementing a subset of the interface.\r\n    var ErrorHandler = (function () {\r\n        function ErrorHandler() {\r\n            this.listeners = [];\r\n            this.unexpectedErrorHandler = function (e) {\r\n                platform.setTimeout(function () {\r\n                    if (e.stack) {\r\n                        throw new Error(e.message + '\\n\\n' + e.stack);\r\n                    }\r\n                    throw e;\r\n                }, 0);\r\n            };\r\n        }\r\n        ErrorHandler.prototype.addListener = function (listener) {\r\n            var _this = this;\r\n            this.listeners.push(listener);\r\n            return function () {\r\n                _this._removeListener(listener);\r\n            };\r\n        };\r\n        ErrorHandler.prototype.emit = function (e) {\r\n            this.listeners.forEach(function (listener) {\r\n                listener(e);\r\n            });\r\n        };\r\n        ErrorHandler.prototype._removeListener = function (listener) {\r\n            this.listeners.splice(this.listeners.indexOf(listener), 1);\r\n        };\r\n        ErrorHandler.prototype.setUnexpectedErrorHandler = function (newUnexpectedErrorHandler) {\r\n            this.unexpectedErrorHandler = newUnexpectedErrorHandler;\r\n        };\r\n        ErrorHandler.prototype.getUnexpectedErrorHandler = function () {\r\n            return this.unexpectedErrorHandler;\r\n        };\r\n        ErrorHandler.prototype.onUnexpectedError = function (e) {\r\n            this.unexpectedErrorHandler(e);\r\n            this.emit(e);\r\n        };\r\n        return ErrorHandler;\r\n    })();\r\n    exports.ErrorHandler = ErrorHandler;\r\n    exports.errorHandler = new ErrorHandler();\r\n    function setUnexpectedErrorHandler(newUnexpectedErrorHandler) {\r\n        exports.errorHandler.setUnexpectedErrorHandler(newUnexpectedErrorHandler);\r\n    }\r\n    exports.setUnexpectedErrorHandler = setUnexpectedErrorHandler;\r\n    function onUnexpectedError(e) {\r\n        // ignore errors from cancelled promises\r\n        if (!isPromiseCanceledError(e)) {\r\n            exports.errorHandler.onUnexpectedError(e);\r\n        }\r\n    }\r\n    exports.onUnexpectedError = onUnexpectedError;\r\n    function transformErrorForSerialization(error) {\r\n        if (!(error instanceof Error)) {\r\n            return error;\r\n        }\r\n        var data = {};\r\n        if (error.stacktrace) {\r\n            data.stack = error.stacktrace;\r\n        }\r\n        else if (error.stack) {\r\n            data.stack = error.stack;\r\n        }\r\n        data.message = error.toString();\r\n        return data;\r\n    }\r\n    exports.transformErrorForSerialization = transformErrorForSerialization;\r\n    /**\r\n     * The base class for all connection errors originating from XHR requests.\r\n     */\r\n    var ConnectionError = (function () {\r\n        function ConnectionError(arg) {\r\n            this.status = arg.status;\r\n            this.statusText = arg.statusText;\r\n            this.name = 'ConnectionError';\r\n            try {\r\n                this.responseText = arg.responseText;\r\n            }\r\n            catch (e) {\r\n                this.responseText = '';\r\n            }\r\n            this.errorMessage = null;\r\n            this.errorCode = null;\r\n            this.errorObject = null;\r\n            if (this.responseText) {\r\n                try {\r\n                    var errorObj = JSON.parse(this.responseText);\r\n                    this.errorMessage = errorObj.message;\r\n                    this.errorCode = errorObj.code;\r\n                    this.errorObject = errorObj;\r\n                }\r\n                catch (error) {\r\n                }\r\n            }\r\n        }\r\n        Object.defineProperty(ConnectionError.prototype, \"message\", {\r\n            get: function () {\r\n                return this.connectionErrorToMessage(this, false);\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(ConnectionError.prototype, \"verboseMessage\", {\r\n            get: function () {\r\n                return this.connectionErrorToMessage(this, true);\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        ConnectionError.prototype.connectionErrorDetailsToMessage = function (error, verbose) {\r\n            var errorCode = error.errorCode;\r\n            var errorMessage = error.errorMessage;\r\n            if (errorCode !== null && errorMessage !== null) {\r\n                return nls.localize(0, null, strings.rtrim(errorMessage, '.'), errorCode);\r\n\r\n\r\n\r\n\r\n\r\n\r\n            }\r\n            if (errorMessage !== null) {\r\n                return errorMessage;\r\n            }\r\n            if (verbose && error.responseText !== null) {\r\n                return error.responseText;\r\n            }\r\n            return null;\r\n        };\r\n        ConnectionError.prototype.connectionErrorToMessage = function (error, verbose) {\r\n            var details = this.connectionErrorDetailsToMessage(error, verbose);\r\n            // Status Code based Error\r\n            if (error.status === 401) {\r\n                if (details !== null) {\r\n                    return nls.localize(1, null, details);\r\n\r\n\r\n\r\n\r\n\r\n                }\r\n                return nls.localize(2, null);\r\n            }\r\n            // Return error details if present\r\n            if (details) {\r\n                return details;\r\n            }\r\n            // Fallback to HTTP Status and Code\r\n            if (error.status > 0 && error.statusText !== null) {\r\n                if (verbose && error.responseText !== null && error.responseText.length > 0) {\r\n                    return nls.localize(3, null, error.statusText, error.status, error.responseText);\r\n                }\r\n                return nls.localize(4, null, error.statusText, error.status);\r\n            }\r\n            // Finally its an Unknown Connection Error\r\n            if (verbose && error.responseText !== null && error.responseText.length > 0) {\r\n                return nls.localize(5, null, error.responseText);\r\n            }\r\n            return nls.localize(6, null);\r\n        };\r\n        return ConnectionError;\r\n    })();\r\n    exports.ConnectionError = ConnectionError;\r\n    // Bug: Can not subclass a JS Type. Do it manually (as done in WinJS.Class.derive)\r\n    objects.derive(Error, ConnectionError);\r\n    function _xhrToErrorMessage(xhr, verbose) {\r\n        var ce = new ConnectionError(xhr);\r\n        if (verbose) {\r\n            return ce.verboseMessage;\r\n        }\r\n        else {\r\n            return ce.message;\r\n        }\r\n    }\r\n    function _exceptionToErrorMessage(exception, verbose) {\r\n        if (verbose && exception.message && (exception.stack || exception.stacktrace)) {\r\n            return nls.localize(7, null, exception.message, exception.stack || exception.stacktrace);\r\n        }\r\n        if (exception.message) {\r\n            return exception.message;\r\n        }\r\n        return nls.localize(8, null);\r\n    }\r\n    /**\r\n     * Tries to generate a human readable error message out of the error. If the verbose parameter\r\n     * is set to true, the error message will include stacktrace details if provided.\r\n     * @returns A string containing the error message.\r\n     */\r\n    function toErrorMessage(error, verbose) {\r\n        if (error === void 0) { error = null; }\r\n        if (verbose === void 0) { verbose = false; }\r\n        if (!error) {\r\n            return nls.localize(9, null);\r\n        }\r\n        if (Array.isArray(error)) {\r\n            var errors = arrays.coalesce(error);\r\n            var msg = toErrorMessage(errors[0], verbose);\r\n            if (errors.length > 1) {\r\n                return nls.localize(10, null, msg, errors.length);\r\n            }\r\n            return msg;\r\n        }\r\n        if (types.isString(error)) {\r\n            return error;\r\n        }\r\n        if (!types.isUndefinedOrNull(error.status)) {\r\n            return _xhrToErrorMessage(error, verbose);\r\n        }\r\n        if (error.detail) {\r\n            var detail = error.detail;\r\n            if (detail.error) {\r\n                if (detail.error && !types.isUndefinedOrNull(detail.error.status)) {\r\n                    return _xhrToErrorMessage(detail.error, verbose);\r\n                }\r\n                if (types.isArray(detail.error)) {\r\n                    for (var i = 0; i < detail.error.length; i++) {\r\n                        if (detail.error[i] && !types.isUndefinedOrNull(detail.error[i].status)) {\r\n                            return _xhrToErrorMessage(detail.error[i], verbose);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    return _exceptionToErrorMessage(detail.error, verbose);\r\n                }\r\n            }\r\n            if (detail.exception) {\r\n                if (!types.isUndefinedOrNull(detail.exception.status)) {\r\n                    return _xhrToErrorMessage(detail.exception, verbose);\r\n                }\r\n                return _exceptionToErrorMessage(detail.exception, verbose);\r\n            }\r\n        }\r\n        if (error.stack) {\r\n            return _exceptionToErrorMessage(error, verbose);\r\n        }\r\n        if (error.message) {\r\n            return error.message;\r\n        }\r\n        return nls.localize(11, null);\r\n    }\r\n    exports.toErrorMessage = toErrorMessage;\r\n    /**\r\n     * Looks for an HTTP Status in the provided error parameter.\r\n     */\r\n    function getHttpStatus(error) {\r\n        if (error) {\r\n            if (types.isArray(error)) {\r\n                for (var i = 0; i < error.length; i++) {\r\n                    if (error[i] && error[i].status) {\r\n                        return error[i].status;\r\n                    }\r\n                }\r\n            }\r\n            else if (error.status) {\r\n                return error.status;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    exports.getHttpStatus = getHttpStatus;\r\n    var canceledName = 'Canceled';\r\n    /**\r\n     * Checks if the given error is a promise in canceled state\r\n     */\r\n    function isPromiseCanceledError(error) {\r\n        return error instanceof Error && error.name === canceledName && error.message === canceledName;\r\n    }\r\n    exports.isPromiseCanceledError = isPromiseCanceledError;\r\n    /**\r\n     * Returns an error that signals cancellation.\r\n     */\r\n    function canceled() {\r\n        var error = new Error(canceledName);\r\n        error.name = error.message;\r\n        return error;\r\n    }\r\n    exports.canceled = canceled;\r\n    /**\r\n     * Returns an error that signals something is not implemented.\r\n     */\r\n    function notImplemented() {\r\n        return new Error(nls.localize(12, null));\r\n    }\r\n    exports.notImplemented = notImplemented;\r\n    function illegalArgument(name) {\r\n        if (name) {\r\n            return new Error(nls.localize(13, null, name));\r\n        }\r\n        else {\r\n            return new Error(nls.localize(14, null));\r\n        }\r\n    }\r\n    exports.illegalArgument = illegalArgument;\r\n    function illegalState(name) {\r\n        if (name) {\r\n            return new Error(nls.localize(15, null, name));\r\n        }\r\n        else {\r\n            return new Error(nls.localize(16, null));\r\n        }\r\n    }\r\n    exports.illegalState = illegalState;\r\n    function readonly() {\r\n        return new Error('readonly property cannot be changed');\r\n    }\r\n    exports.readonly = readonly;\r\n    function loaderError(err) {\r\n        if (platform.isWeb) {\r\n            return new Error(nls.localize(17, null));\r\n        }\r\n        return new Error(nls.localize(18, null, JSON.stringify(err)));\r\n    }\r\n    exports.loaderError = loaderError;\r\n    function create(message, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var result = new Error(message);\r\n        if (types.isNumber(options.severity)) {\r\n            result.severity = options.severity;\r\n        }\r\n        if (options.actions) {\r\n            result.actions = options.actions;\r\n        }\r\n        return result;\r\n    }\r\n    exports.create = create;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/base/common/callbackList\", [\"require\", \"exports\", 'vs/base/common/errors'], function (require, exports, errors_1) {\r\n    var CallbackList = (function () {\r\n        function CallbackList() {\r\n        }\r\n        CallbackList.prototype.add = function (callback, context, bucket) {\r\n            var _this = this;\r\n            if (context === void 0) { context = null; }\r\n            if (!this._callbacks) {\r\n                this._callbacks = [];\r\n                this._contexts = [];\r\n            }\r\n            this._callbacks.push(callback);\r\n            this._contexts.push(context);\r\n            if (Array.isArray(bucket)) {\r\n                bucket.push({ dispose: function () { return _this.remove(callback, context); } });\r\n            }\r\n        };\r\n        CallbackList.prototype.remove = function (callback, context) {\r\n            if (context === void 0) { context = null; }\r\n            if (!this._callbacks) {\r\n                return;\r\n            }\r\n            var foundCallbackWithDifferentContext = false;\r\n            for (var i = 0, len = this._callbacks.length; i < len; i++) {\r\n                if (this._callbacks[i] === callback) {\r\n                    if (this._contexts[i] === context) {\r\n                        // callback & context match => remove it\r\n                        this._callbacks.splice(i, 1);\r\n                        this._contexts.splice(i, 1);\r\n                        return;\r\n                    }\r\n                    else {\r\n                        foundCallbackWithDifferentContext = true;\r\n                    }\r\n                }\r\n            }\r\n            if (foundCallbackWithDifferentContext) {\r\n                throw new Error('When adding a listener with a context, you should remove it with the same context');\r\n            }\r\n        };\r\n        CallbackList.prototype.invoke = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i - 0] = arguments[_i];\r\n            }\r\n            if (!this._callbacks) {\r\n                return;\r\n            }\r\n            var ret = [], callbacks = this._callbacks.slice(0), contexts = this._contexts.slice(0);\r\n            for (var i = 0, len = callbacks.length; i < len; i++) {\r\n                try {\r\n                    ret.push(callbacks[i].apply(contexts[i], args));\r\n                }\r\n                catch (e) {\r\n                    errors_1.onUnexpectedError(e);\r\n                }\r\n            }\r\n            return ret;\r\n        };\r\n        CallbackList.prototype.isEmpty = function () {\r\n            return !this._callbacks || this._callbacks.length === 0;\r\n        };\r\n        CallbackList.prototype.dispose = function () {\r\n            this._callbacks = undefined;\r\n            this._contexts = undefined;\r\n        };\r\n        return CallbackList;\r\n    })();\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.default = CallbackList;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/base/common/event\", [\"require\", \"exports\", 'vs/base/common/callbackList'], function (require, exports, callbackList_1) {\r\n    var Event;\r\n    (function (Event) {\r\n        var _disposable = { dispose: function () { } };\r\n        Event.None = function () { return _disposable; };\r\n    })(Event || (Event = {}));\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.default = Event;\r\n    /**\r\n     * The Emitter can be used to expose an Event to the public\r\n     * to fire it from the insides.\r\n     * Sample:\r\n        class Document {\r\n    \r\n            private _onDidChange = new Emitter<(value:string)=>any>();\r\n    \r\n            public onDidChange = this._onDidChange.event;\r\n    \r\n            // getter-style\r\n            // get onDidChange(): Event<(value:string)=>any> {\r\n            // \treturn this._onDidChange.event;\r\n            // }\r\n    \r\n            private _doIt() {\r\n                //...\r\n                this._onDidChange.fire(value);\r\n            }\r\n        }\r\n     */\r\n    var Emitter = (function () {\r\n        function Emitter(_options) {\r\n            this._options = _options;\r\n        }\r\n        Object.defineProperty(Emitter.prototype, \"event\", {\r\n            /**\r\n             * For the public to allow to subscribe\r\n             * to events from this Emitter\r\n             */\r\n            get: function () {\r\n                var _this = this;\r\n                if (!this._event) {\r\n                    this._event = function (listener, thisArgs, disposables) {\r\n                        if (!_this._callbacks) {\r\n                            _this._callbacks = new callbackList_1.default();\r\n                        }\r\n                        if (_this._options && _this._options.onFirstListenerAdd && _this._callbacks.isEmpty()) {\r\n                            _this._options.onFirstListenerAdd(_this);\r\n                        }\r\n                        _this._callbacks.add(listener, thisArgs);\r\n                        var result;\r\n                        result = {\r\n                            dispose: function () {\r\n                                result.dispose = Emitter._noop;\r\n                                if (!_this._disposed) {\r\n                                    _this._callbacks.remove(listener, thisArgs);\r\n                                    if (_this._options && _this._options.onLastListenerRemove && _this._callbacks.isEmpty()) {\r\n                                        _this._options.onLastListenerRemove(_this);\r\n                                    }\r\n                                }\r\n                            }\r\n                        };\r\n                        if (Array.isArray(disposables)) {\r\n                            disposables.push(result);\r\n                        }\r\n                        return result;\r\n                    };\r\n                }\r\n                return this._event;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * To be kept private to fire an event to\r\n         * subscribers\r\n         */\r\n        Emitter.prototype.fire = function (event) {\r\n            if (this._callbacks) {\r\n                this._callbacks.invoke.call(this._callbacks, event);\r\n            }\r\n        };\r\n        Emitter.prototype.dispose = function () {\r\n            if (this._callbacks) {\r\n                this._callbacks.dispose();\r\n                this._callbacks = undefined;\r\n                this._disposed = true;\r\n            }\r\n        };\r\n        Emitter._noop = function () { };\r\n        return Emitter;\r\n    })();\r\n    exports.Emitter = Emitter;\r\n    /**\r\n     * Creates an Event which is backed-up by the event emitter. This allows\r\n     * to use the existing eventing pattern and is likely using less memory.\r\n     * Sample:\r\n     *\r\n     * \tclass Document {\r\n     *\r\n     *\t\tprivate _eventbus = new EventEmitter();\r\n     *\r\n     *\t\tpublic onDidChange = fromEventEmitter(this._eventbus, 'changed');\r\n     *\r\n     *\t\t// getter-style\r\n     *\t\t// get onDidChange(): Event<(value:string)=>any> {\r\n     *\t\t// \tcache fromEventEmitter result and return\r\n     *\t\t// }\r\n     *\r\n     *\t\tprivate _doIt() {\r\n     *\t\t\t// ...\r\n     *\t\t\tthis._eventbus.emit('changed', value)\r\n     *\t\t}\r\n     *\t}\r\n     */\r\n    function fromEventEmitter(emitter, eventType) {\r\n        return function (listener, thisArgs, disposables) {\r\n            var result = emitter.addListener2(eventType, function () {\r\n                listener.apply(thisArgs, arguments);\r\n            });\r\n            if (Array.isArray(disposables)) {\r\n                disposables.push(result);\r\n            }\r\n            return result;\r\n        };\r\n    }\r\n    exports.fromEventEmitter = fromEventEmitter;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/base/common/cancellation\", [\"require\", \"exports\", 'vs/base/common/event'], function (require, exports, event_1) {\r\n    var CancellationToken;\r\n    (function (CancellationToken) {\r\n        CancellationToken.None = Object.freeze({\r\n            isCancellationRequested: false,\r\n            onCancellationRequested: event_1.default.None\r\n        });\r\n        CancellationToken.Cancelled = Object.freeze({\r\n            isCancellationRequested: true,\r\n            onCancellationRequested: event_1.default.None\r\n        });\r\n    })(CancellationToken = exports.CancellationToken || (exports.CancellationToken = {}));\r\n    var ShortcutEvent = Object.freeze(function (callback, context) {\r\n        var handle = setTimeout(callback.bind(context), 0);\r\n        return { dispose: function () { clearTimeout(handle); } };\r\n    });\r\n    var MutableToken = (function () {\r\n        function MutableToken() {\r\n            this._isCancelled = false;\r\n        }\r\n        MutableToken.prototype.cancel = function () {\r\n            if (!this._isCancelled) {\r\n                this._isCancelled = true;\r\n                if (this._emitter) {\r\n                    this._emitter.fire(undefined);\r\n                    this._emitter = undefined;\r\n                }\r\n            }\r\n        };\r\n        Object.defineProperty(MutableToken.prototype, \"isCancellationRequested\", {\r\n            get: function () {\r\n                return this._isCancelled;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(MutableToken.prototype, \"onCancellationRequested\", {\r\n            get: function () {\r\n                if (this._isCancelled) {\r\n                    return ShortcutEvent;\r\n                }\r\n                if (!this._emitter) {\r\n                    this._emitter = new event_1.Emitter();\r\n                }\r\n                return this._emitter.event;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return MutableToken;\r\n    })();\r\n    var CancellationTokenSource = (function () {\r\n        function CancellationTokenSource() {\r\n        }\r\n        Object.defineProperty(CancellationTokenSource.prototype, \"token\", {\r\n            get: function () {\r\n                if (!this._token) {\r\n                    // be lazy and create the token only when\r\n                    // actually needed\r\n                    this._token = new MutableToken();\r\n                }\r\n                return this._token;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        CancellationTokenSource.prototype.cancel = function () {\r\n            if (!this._token) {\r\n                // save an object by returning the default\r\n                // cancelled token when cancellation happens\r\n                // before someone asks for the token\r\n                this._token = CancellationToken.Cancelled;\r\n            }\r\n            else {\r\n                this._token.cancel();\r\n            }\r\n        };\r\n        CancellationTokenSource.prototype.dispose = function () {\r\n            this.cancel();\r\n        };\r\n        return CancellationTokenSource;\r\n    })();\r\n    exports.CancellationTokenSource = CancellationTokenSource;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\ndefine(\"vs/base/common/eventEmitter\", [\"require\", \"exports\", 'vs/base/common/errors'], function (require, exports, Errors) {\r\n    var EmitterEvent = (function () {\r\n        function EmitterEvent(eventType, data, emitterType) {\r\n            if (emitterType === void 0) { emitterType = null; }\r\n            this._type = eventType;\r\n            this._data = data;\r\n            this._emitterType = emitterType;\r\n        }\r\n        EmitterEvent.prototype.getType = function () {\r\n            return this._type;\r\n        };\r\n        EmitterEvent.prototype.getData = function () {\r\n            return this._data;\r\n        };\r\n        EmitterEvent.prototype.getEmitterType = function () {\r\n            return this._emitterType;\r\n        };\r\n        return EmitterEvent;\r\n    })();\r\n    exports.EmitterEvent = EmitterEvent;\r\n    var EventEmitter = (function () {\r\n        function EventEmitter(allowedEventTypes) {\r\n            if (allowedEventTypes === void 0) { allowedEventTypes = null; }\r\n            this._listeners = {};\r\n            this._bulkListeners = [];\r\n            this._collectedEvents = [];\r\n            this._deferredCnt = 0;\r\n            if (allowedEventTypes) {\r\n                this._allowedEventTypes = {};\r\n                for (var i = 0; i < allowedEventTypes.length; i++) {\r\n                    this._allowedEventTypes[allowedEventTypes[i]] = true;\r\n                }\r\n            }\r\n            else {\r\n                this._allowedEventTypes = null;\r\n            }\r\n        }\r\n        EventEmitter.prototype.dispose = function () {\r\n            this._listeners = {};\r\n            this._bulkListeners = [];\r\n            this._collectedEvents = [];\r\n            this._deferredCnt = 0;\r\n            this._allowedEventTypes = null;\r\n        };\r\n        EventEmitter.prototype.addListener = function (eventType, listener) {\r\n            if (eventType === '*') {\r\n                throw new Error('Use addBulkListener(listener) to register your listener!');\r\n            }\r\n            if (this._allowedEventTypes && !this._allowedEventTypes.hasOwnProperty(eventType)) {\r\n                throw new Error('This object will never emit this event type!');\r\n            }\r\n            if (this._listeners.hasOwnProperty(eventType)) {\r\n                this._listeners[eventType].push(listener);\r\n            }\r\n            else {\r\n                this._listeners[eventType] = [listener];\r\n            }\r\n            var bound = this;\r\n            return function () {\r\n                if (!bound) {\r\n                    // Already called\r\n                    return;\r\n                }\r\n                bound._removeListener(eventType, listener);\r\n                // Prevent leakers from holding on to the event emitter\r\n                bound = null;\r\n                listener = null;\r\n            };\r\n        };\r\n        EventEmitter.prototype.addListener2 = function (eventType, listener) {\r\n            var dispose = this.addListener(eventType, listener);\r\n            return {\r\n                dispose: dispose\r\n            };\r\n        };\r\n        EventEmitter.prototype.on = function (eventType, listener) {\r\n            return this.addListener(eventType, listener);\r\n        };\r\n        EventEmitter.prototype.addOneTimeListener = function (eventType, listener) {\r\n            var unbind = this.addListener(eventType, function (value) {\r\n                unbind();\r\n                listener(value);\r\n            });\r\n            return unbind;\r\n        };\r\n        EventEmitter.prototype.addOneTimeDisposableListener = function (eventType, listener) {\r\n            var dispose = this.addOneTimeListener(eventType, listener);\r\n            return {\r\n                dispose: dispose\r\n            };\r\n        };\r\n        EventEmitter.prototype.addBulkListener = function (listener) {\r\n            var _this = this;\r\n            this._bulkListeners.push(listener);\r\n            return function () {\r\n                _this._removeBulkListener(listener);\r\n            };\r\n        };\r\n        EventEmitter.prototype.addBulkListener2 = function (listener) {\r\n            var dispose = this.addBulkListener(listener);\r\n            return {\r\n                dispose: dispose\r\n            };\r\n        };\r\n        EventEmitter.prototype.addEmitter = function (eventEmitter, emitterType) {\r\n            var _this = this;\r\n            if (emitterType === void 0) { emitterType = null; }\r\n            return eventEmitter.addBulkListener(function (events) {\r\n                var newEvents = events;\r\n                if (emitterType) {\r\n                    // If the emitter has an emitterType, recreate events\r\n                    newEvents = [];\r\n                    for (var i = 0, len = events.length; i < len; i++) {\r\n                        newEvents.push(new EmitterEvent(events[i].getType(), events[i].getData(), emitterType));\r\n                    }\r\n                }\r\n                if (_this._deferredCnt === 0) {\r\n                    _this._emitEvents(newEvents);\r\n                }\r\n                else {\r\n                    // Collect for later\r\n                    _this._collectedEvents.push.apply(_this._collectedEvents, newEvents);\r\n                }\r\n            });\r\n        };\r\n        EventEmitter.prototype.addEmitter2 = function (eventEmitter, emitterType) {\r\n            var dispose = this.addEmitter(eventEmitter, emitterType);\r\n            return {\r\n                dispose: dispose\r\n            };\r\n        };\r\n        EventEmitter.prototype.addEmitterTypeListener = function (eventType, emitterType, listener) {\r\n            if (emitterType) {\r\n                if (eventType === '*') {\r\n                    throw new Error('Bulk listeners cannot specify an emitter type');\r\n                }\r\n                return this.addListener(eventType + '/' + emitterType, listener);\r\n            }\r\n            else {\r\n                return this.addListener(eventType, listener);\r\n            }\r\n        };\r\n        EventEmitter.prototype._removeListener = function (eventType, listener) {\r\n            if (this._listeners.hasOwnProperty(eventType)) {\r\n                var listeners = this._listeners[eventType];\r\n                for (var i = 0, len = listeners.length; i < len; i++) {\r\n                    if (listeners[i] === listener) {\r\n                        listeners.splice(i, 1);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        EventEmitter.prototype._removeBulkListener = function (listener) {\r\n            for (var i = 0, len = this._bulkListeners.length; i < len; i++) {\r\n                if (this._bulkListeners[i] === listener) {\r\n                    this._bulkListeners.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n        };\r\n        EventEmitter.prototype._emitToSpecificTypeListeners = function (eventType, data) {\r\n            if (this._listeners.hasOwnProperty(eventType)) {\r\n                var listeners = this._listeners[eventType].slice(0);\r\n                for (var i = 0, len = listeners.length; i < len; i++) {\r\n                    try {\r\n                        listeners[i](data);\r\n                    }\r\n                    catch (e) {\r\n                        Errors.onUnexpectedError(e);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        EventEmitter.prototype._emitToBulkListeners = function (events) {\r\n            var bulkListeners = this._bulkListeners.slice(0);\r\n            for (var i = 0, len = bulkListeners.length; i < len; i++) {\r\n                try {\r\n                    bulkListeners[i](events);\r\n                }\r\n                catch (e) {\r\n                    Errors.onUnexpectedError(e);\r\n                }\r\n            }\r\n        };\r\n        EventEmitter.prototype._emitEvents = function (events) {\r\n            if (this._bulkListeners.length > 0) {\r\n                this._emitToBulkListeners(events);\r\n            }\r\n            for (var i = 0, len = events.length; i < len; i++) {\r\n                var e = events[i];\r\n                this._emitToSpecificTypeListeners(e.getType(), e.getData());\r\n                if (e.getEmitterType()) {\r\n                    this._emitToSpecificTypeListeners(e.getType() + '/' + e.getEmitterType(), e.getData());\r\n                }\r\n            }\r\n        };\r\n        EventEmitter.prototype.emit = function (eventType, data) {\r\n            if (data === void 0) { data = {}; }\r\n            if (this._allowedEventTypes && !this._allowedEventTypes.hasOwnProperty(eventType)) {\r\n                throw new Error('Cannot emit this event type because it wasn\\'t white-listed!');\r\n            }\r\n            // Early return if no listeners would get this\r\n            if (!this._listeners.hasOwnProperty(eventType) && this._bulkListeners.length === 0) {\r\n                return;\r\n            }\r\n            var emitterEvent = new EmitterEvent(eventType, data);\r\n            if (this._deferredCnt === 0) {\r\n                this._emitEvents([emitterEvent]);\r\n            }\r\n            else {\r\n                // Collect for later\r\n                this._collectedEvents.push(emitterEvent);\r\n            }\r\n        };\r\n        EventEmitter.prototype.deferredEmit = function (callback) {\r\n            this._deferredCnt = this._deferredCnt + 1;\r\n            var result = null;\r\n            try {\r\n                result = callback();\r\n            }\r\n            catch (e) {\r\n                Errors.onUnexpectedError(e);\r\n            }\r\n            this._deferredCnt = this._deferredCnt - 1;\r\n            if (this._deferredCnt === 0) {\r\n                this._emitCollected();\r\n            }\r\n            return result;\r\n        };\r\n        EventEmitter.prototype._emitCollected = function () {\r\n            // Flush collected events\r\n            var events = this._collectedEvents;\r\n            this._collectedEvents = [];\r\n            if (events.length > 0) {\r\n                this._emitEvents(events);\r\n            }\r\n        };\r\n        return EventEmitter;\r\n    })();\r\n    exports.EventEmitter = EventEmitter;\r\n    var EmitQueueElement = (function () {\r\n        function EmitQueueElement(target, arg) {\r\n            this.target = target;\r\n            this.arg = arg;\r\n        }\r\n        return EmitQueueElement;\r\n    })();\r\n    /**\r\n     * Same as EventEmitter, but guarantees events are delivered in order to each listener\r\n     */\r\n    var OrderGuaranteeEventEmitter = (function (_super) {\r\n        __extends(OrderGuaranteeEventEmitter, _super);\r\n        function OrderGuaranteeEventEmitter(allowedEventTypes) {\r\n            if (allowedEventTypes === void 0) { allowedEventTypes = null; }\r\n            _super.call(this, allowedEventTypes);\r\n            this._emitQueue = [];\r\n        }\r\n        OrderGuaranteeEventEmitter.prototype._emitToSpecificTypeListeners = function (eventType, data) {\r\n            if (this._listeners.hasOwnProperty(eventType)) {\r\n                var listeners = this._listeners[eventType];\r\n                for (var i = 0, len = listeners.length; i < len; i++) {\r\n                    this._emitQueue.push(new EmitQueueElement(listeners[i], data));\r\n                }\r\n            }\r\n        };\r\n        OrderGuaranteeEventEmitter.prototype._emitToBulkListeners = function (events) {\r\n            var bulkListeners = this._bulkListeners;\r\n            for (var i = 0, len = bulkListeners.length; i < len; i++) {\r\n                this._emitQueue.push(new EmitQueueElement(bulkListeners[i], events));\r\n            }\r\n        };\r\n        OrderGuaranteeEventEmitter.prototype._emitEvents = function (events) {\r\n            _super.prototype._emitEvents.call(this, events);\r\n            while (this._emitQueue.length > 0) {\r\n                var queueElement = this._emitQueue.shift();\r\n                try {\r\n                    queueElement.target(queueElement.arg);\r\n                }\r\n                catch (e) {\r\n                    Errors.onUnexpectedError(e);\r\n                }\r\n            }\r\n        };\r\n        return OrderGuaranteeEventEmitter;\r\n    })(EventEmitter);\r\n    exports.OrderGuaranteeEventEmitter = OrderGuaranteeEventEmitter;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/base/common/eventSource\", [\"require\", \"exports\", 'vs/base/common/callbackList'], function (require, exports, callbackList_1) {\r\n    var EventSource = (function () {\r\n        function EventSource() {\r\n        }\r\n        EventSource.prototype.fire = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i - 0] = arguments[_i];\r\n            }\r\n            if (!this._value) {\r\n                return;\r\n            }\r\n            return this._value.invoke.apply(this._value, args);\r\n        };\r\n        Object.defineProperty(EventSource.prototype, \"value\", {\r\n            get: function () {\r\n                var _this = this;\r\n                if (!this._value) {\r\n                    this._value = new callbackList_1.default();\r\n                }\r\n                return {\r\n                    add: function (callback, context, bucket) {\r\n                        _this._value.add(callback, context, bucket);\r\n                    },\r\n                    remove: this._value.remove.bind(this._value)\r\n                };\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return EventSource;\r\n    })();\r\n    exports.EventSource = EventSource;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/base/common/filters\", [\"require\", \"exports\", 'vs/base/common/strings'], function (require, exports, strings) {\r\n    // Combined filters\r\n    /**\r\n     * @returns A filter which combines the provided set\r\n     * of filters with an or. The *first* filters that\r\n     * matches defined the return value of the returned\r\n     * filter.\r\n     */\r\n    function or() {\r\n        var filter = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            filter[_i - 0] = arguments[_i];\r\n        }\r\n        return function (word, wordToMatchAgainst) {\r\n            for (var i = 0, len = filter.length; i < len; i++) {\r\n                var match = filter[i](word, wordToMatchAgainst);\r\n                if (match) {\r\n                    return match;\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n    }\r\n    exports.or = or;\r\n    /**\r\n     * @returns A filter which combines the provided set\r\n     * of filters with an and. The combines matches are\r\n     * returned if *all* filters match.\r\n     */\r\n    function and() {\r\n        var filter = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            filter[_i - 0] = arguments[_i];\r\n        }\r\n        return function (word, wordToMatchAgainst) {\r\n            var result = [];\r\n            for (var i = 0, len = filter.length; i < len; i++) {\r\n                var match = filter[i](word, wordToMatchAgainst);\r\n                if (!match) {\r\n                    return null;\r\n                }\r\n                result = result.concat(match);\r\n            }\r\n            return result;\r\n        };\r\n    }\r\n    exports.and = and;\r\n    // Prefix\r\n    exports.matchesStrictPrefix = function (word, wordToMatchAgainst) { return _matchesPrefix(false, word, wordToMatchAgainst); };\r\n    exports.matchesPrefix = function (word, wordToMatchAgainst) { return _matchesPrefix(true, word, wordToMatchAgainst); };\r\n    function _matchesPrefix(ignoreCase, word, wordToMatchAgainst) {\r\n        if (wordToMatchAgainst.length === 0 || wordToMatchAgainst.length < word.length) {\r\n            return null;\r\n        }\r\n        if (ignoreCase) {\r\n            word = word.toLowerCase();\r\n            wordToMatchAgainst = wordToMatchAgainst.toLowerCase();\r\n        }\r\n        for (var i = 0; i < word.length; i++) {\r\n            if (word[i] !== wordToMatchAgainst[i]) {\r\n                return null;\r\n            }\r\n        }\r\n        return word.length > 0 ? [{ start: 0, end: word.length }] : [];\r\n    }\r\n    // Contiguous Substring\r\n    function matchesContiguousSubString(word, wordToMatchAgainst) {\r\n        var index = wordToMatchAgainst.toLowerCase().indexOf(word.toLowerCase());\r\n        if (index === -1) {\r\n            return null;\r\n        }\r\n        return [{ start: index, end: index + word.length }];\r\n    }\r\n    exports.matchesContiguousSubString = matchesContiguousSubString;\r\n    // Substring\r\n    function matchesSubString(word, wordToMatchAgainst) {\r\n        return _matchesSubString(word.toLowerCase(), wordToMatchAgainst.toLowerCase(), 0, 0);\r\n    }\r\n    exports.matchesSubString = matchesSubString;\r\n    function _matchesSubString(word, wordToMatchAgainst, i, j) {\r\n        if (i === word.length) {\r\n            return [];\r\n        }\r\n        else if (j === wordToMatchAgainst.length) {\r\n            return null;\r\n        }\r\n        else {\r\n            if (word[i] === wordToMatchAgainst[j]) {\r\n                var result = null;\r\n                if (result = _matchesSubString(word, wordToMatchAgainst, i + 1, j + 1)) {\r\n                    return join({ start: j, end: j + 1 }, result);\r\n                }\r\n            }\r\n            return _matchesSubString(word, wordToMatchAgainst, i, j + 1);\r\n        }\r\n    }\r\n    // CamelCase\r\n    function isLower(code) {\r\n        return 97 <= code && code <= 122;\r\n    }\r\n    function isUpper(code) {\r\n        return 65 <= code && code <= 90;\r\n    }\r\n    function isNumber(code) {\r\n        return 48 <= code && code <= 57;\r\n    }\r\n    function isWhitespace(code) {\r\n        return [32, 9, 10, 13].indexOf(code) > -1;\r\n    }\r\n    function isAlphanumeric(code) {\r\n        return isLower(code) || isUpper(code) || isNumber(code);\r\n    }\r\n    function join(head, tail) {\r\n        if (tail.length === 0) {\r\n            tail = [head];\r\n        }\r\n        else if (head.end === tail[0].start) {\r\n            tail[0].start = head.start;\r\n        }\r\n        else {\r\n            tail.unshift(head);\r\n        }\r\n        return tail;\r\n    }\r\n    function nextAnchor(camelCaseWord, start) {\r\n        for (var i = start; i < camelCaseWord.length; i++) {\r\n            var c = camelCaseWord.charCodeAt(i);\r\n            if (isUpper(c) || isNumber(c) || (i > 0 && !isAlphanumeric(camelCaseWord.charCodeAt(i - 1)))) {\r\n                return i;\r\n            }\r\n        }\r\n        return camelCaseWord.length;\r\n    }\r\n    function _matchesCamelCase(word, camelCaseWord, i, j) {\r\n        if (i === word.length) {\r\n            return [];\r\n        }\r\n        else if (j === camelCaseWord.length) {\r\n            return null;\r\n        }\r\n        else if (word[i] !== camelCaseWord[j].toLowerCase()) {\r\n            return null;\r\n        }\r\n        else {\r\n            var result = null;\r\n            var nextUpperIndex = j + 1;\r\n            result = _matchesCamelCase(word, camelCaseWord, i + 1, j + 1);\r\n            while (!result && (nextUpperIndex = nextAnchor(camelCaseWord, nextUpperIndex)) < camelCaseWord.length) {\r\n                result = _matchesCamelCase(word, camelCaseWord, i + 1, nextUpperIndex);\r\n                nextUpperIndex++;\r\n            }\r\n            return result === null ? null : join({ start: j, end: j + 1 }, result);\r\n        }\r\n    }\r\n    // Heuristic to avoid computing camel case matcher for words that don't\r\n    // look like camelCaseWords.\r\n    function isCamelCaseWord(word) {\r\n        if (word.length > 40) {\r\n            return false;\r\n        }\r\n        var upper = 0, lower = 0, alpha = 0, code = 0;\r\n        for (var i = 0; i < word.length; i++) {\r\n            code = word.charCodeAt(i);\r\n            isUpper(code) && upper++;\r\n            isLower(code) && lower++;\r\n            isAlphanumeric(code) && alpha++;\r\n        }\r\n        var upperPercent = upper / word.length;\r\n        var lowerPercent = lower / word.length;\r\n        var alphaPercent = alpha / word.length;\r\n        return lowerPercent > 0.2 && upperPercent < 0.8 && alphaPercent > 0.6;\r\n    }\r\n    // Heuristic to avoid computing camel case matcher for words that don't\r\n    // look like camel case patterns.\r\n    function isCamelCasePattern(word) {\r\n        var upper = 0, lower = 0, code = 0, whitespace = 0;\r\n        for (var i = 0; i < word.length; i++) {\r\n            code = word.charCodeAt(i);\r\n            isUpper(code) && upper++;\r\n            isLower(code) && lower++;\r\n            isWhitespace(code) && whitespace++;\r\n        }\r\n        if ((upper === 0 || lower === 0) && whitespace === 0) {\r\n            return word.length <= 30;\r\n        }\r\n        else {\r\n            return upper <= 5;\r\n        }\r\n    }\r\n    function matchesCamelCase(word, camelCaseWord) {\r\n        if (camelCaseWord.length === 0) {\r\n            return null;\r\n        }\r\n        if (!isCamelCasePattern(word)) {\r\n            return null;\r\n        }\r\n        if (!isCamelCaseWord(camelCaseWord)) {\r\n            return null;\r\n        }\r\n        var result = null;\r\n        var i = 0;\r\n        while (i < camelCaseWord.length && (result = _matchesCamelCase(word.toLowerCase(), camelCaseWord, 0, i)) === null) {\r\n            i = nextAnchor(camelCaseWord, i + 1);\r\n        }\r\n        return result;\r\n    }\r\n    exports.matchesCamelCase = matchesCamelCase;\r\n    // Fuzzy\r\n    (function (SubstringMatching) {\r\n        SubstringMatching[SubstringMatching[\"Contiguous\"] = 0] = \"Contiguous\";\r\n        SubstringMatching[SubstringMatching[\"Separate\"] = 1] = \"Separate\";\r\n    })(exports.SubstringMatching || (exports.SubstringMatching = {}));\r\n    var SubstringMatching = exports.SubstringMatching;\r\n    var fuzzyContiguousFilter = or(exports.matchesPrefix, matchesCamelCase, matchesContiguousSubString);\r\n    var fuzzySeparateFilter = or(exports.matchesPrefix, matchesCamelCase, matchesSubString);\r\n    var fuzzyRegExpCache = {};\r\n    function matchesFuzzy(word, wordToMatchAgainst, enableSeparateSubstringMatching) {\r\n        if (enableSeparateSubstringMatching === void 0) { enableSeparateSubstringMatching = false; }\r\n        // Form RegExp for wildcard matches\r\n        var regexp = fuzzyRegExpCache[word];\r\n        if (!regexp) {\r\n            regexp = new RegExp(strings.convertSimple2RegExpPattern(word), 'i');\r\n            fuzzyRegExpCache[word] = regexp;\r\n        }\r\n        // RegExp Filter\r\n        var match = regexp.exec(wordToMatchAgainst);\r\n        if (match) {\r\n            return [{ start: match.index, end: match.index + match[0].length }];\r\n        }\r\n        // Default Filter\r\n        return enableSeparateSubstringMatching ? fuzzySeparateFilter(word, wordToMatchAgainst) : fuzzyContiguousFilter(word, wordToMatchAgainst);\r\n    }\r\n    exports.matchesFuzzy = matchesFuzzy;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/base/common/glob\", [\"require\", \"exports\", 'vs/base/common/strings', 'vs/base/common/paths'], function (require, exports, strings, paths) {\r\n    var CACHE = Object.create(null);\r\n    var PATH_REGEX = '[/\\\\\\\\]'; // any slash or backslash\r\n    var NO_PATH_REGEX = '[^/\\\\\\\\]'; // any non-slash and non-backslash\r\n    function starsToRegExp(starCount) {\r\n        switch (starCount) {\r\n            case 0:\r\n                return '';\r\n            case 1:\r\n                return NO_PATH_REGEX + '*?'; // 1 star matches any number of characters except path separator (/ and \\) - non greedy (?)\r\n            default:\r\n                // Matches:  (Path Sep    OR     Path Val followed by Path Sep     OR    Path Sep followed by Path Val) 0-many times\r\n                // Group is non capturing because we don't need to capture at all (?:...)\r\n                // Overall we use non-greedy matching because it could be that we match too much\r\n                return '(?:' + PATH_REGEX + '|' + NO_PATH_REGEX + '+' + PATH_REGEX + '|' + PATH_REGEX + NO_PATH_REGEX + '+)*?';\r\n        }\r\n    }\r\n    function splitGlobAware(pattern, splitChar) {\r\n        if (!pattern) {\r\n            return [];\r\n        }\r\n        var segments = [];\r\n        var inBraces = false;\r\n        var inBrackets = false;\r\n        var char;\r\n        var curVal = '';\r\n        for (var i = 0; i < pattern.length; i++) {\r\n            char = pattern[i];\r\n            switch (char) {\r\n                case splitChar:\r\n                    if (!inBraces && !inBrackets) {\r\n                        segments.push(curVal);\r\n                        curVal = '';\r\n                        continue;\r\n                    }\r\n                    break;\r\n                case '{':\r\n                    inBraces = true;\r\n                    break;\r\n                case '}':\r\n                    inBraces = false;\r\n                    break;\r\n                case '[':\r\n                    inBrackets = true;\r\n                    break;\r\n                case ']':\r\n                    inBrackets = false;\r\n                    break;\r\n            }\r\n            curVal += char;\r\n        }\r\n        // Tail\r\n        if (curVal) {\r\n            segments.push(curVal);\r\n        }\r\n        return segments;\r\n    }\r\n    exports.splitGlobAware = splitGlobAware;\r\n    function parseRegExp(pattern) {\r\n        if (!pattern) {\r\n            return '';\r\n        }\r\n        var regEx = '';\r\n        // Split up into segments for each slash found\r\n        var segments = splitGlobAware(pattern, '/');\r\n        // Special case where we only have globstars\r\n        if (segments.every(function (s) { return s === '**'; })) {\r\n            regEx = '.*';\r\n        }\r\n        else {\r\n            var previousSegmentWasGlobStar = false;\r\n            segments.forEach(function (segment, index) {\r\n                // Globstar is special\r\n                if (segment === '**') {\r\n                    // if we have more than one globstar after another, just ignore it\r\n                    if (!previousSegmentWasGlobStar) {\r\n                        regEx += starsToRegExp(2);\r\n                        previousSegmentWasGlobStar = true;\r\n                    }\r\n                    return;\r\n                }\r\n                // States\r\n                var inBraces = false;\r\n                var braceVal = '';\r\n                var inBrackets = false;\r\n                var bracketVal = '';\r\n                var char;\r\n                for (var i = 0; i < segment.length; i++) {\r\n                    char = segment[i];\r\n                    // Support brace expansion\r\n                    if (char !== '}' && inBraces) {\r\n                        braceVal += char;\r\n                        continue;\r\n                    }\r\n                    // Support brackets\r\n                    if (char !== ']' && inBrackets) {\r\n                        var res;\r\n                        switch (char) {\r\n                            case '-':\r\n                                res = char;\r\n                                break;\r\n                            case '^':\r\n                                res = char;\r\n                                break;\r\n                            default:\r\n                                res = strings.escapeRegExpCharacters(char);\r\n                        }\r\n                        bracketVal += res;\r\n                        continue;\r\n                    }\r\n                    switch (char) {\r\n                        case '{':\r\n                            inBraces = true;\r\n                            continue;\r\n                        case '[':\r\n                            inBrackets = true;\r\n                            continue;\r\n                        case '}':\r\n                            var choices = splitGlobAware(braceVal, ',');\r\n                            // Converts {foo,bar} => [foo|bar]\r\n                            var braceRegExp = '(?:' + choices.reduce(function (prevValue, curValue, index, array) {\r\n                                return prevValue + '|' + parseRegExp(curValue);\r\n                            }, parseRegExp(choices[0]) /* parse the first segment as regex and give as initial value */) + ')';\r\n                            regEx += braceRegExp;\r\n                            inBraces = false;\r\n                            braceVal = '';\r\n                            break;\r\n                        case ']':\r\n                            regEx += ('[' + bracketVal + ']');\r\n                            inBrackets = false;\r\n                            bracketVal = '';\r\n                            break;\r\n                        case '?':\r\n                            regEx += NO_PATH_REGEX; // 1 ? matches any single character except path separator (/ and \\)\r\n                            continue;\r\n                        case '*':\r\n                            regEx += starsToRegExp(1);\r\n                            continue;\r\n                        default:\r\n                            regEx += strings.escapeRegExpCharacters(char);\r\n                    }\r\n                }\r\n                // Tail: Add the slash we had split on if there is more to come and the next one is not a globstar\r\n                if (index < segments.length - 1 && segments[index + 1] !== '**') {\r\n                    regEx += PATH_REGEX;\r\n                }\r\n                // reset state\r\n                previousSegmentWasGlobStar = false;\r\n            });\r\n        }\r\n        return regEx;\r\n    }\r\n    function globToRegExp(pattern) {\r\n        if (!pattern) {\r\n            return null;\r\n        }\r\n        // Whitespace trimming\r\n        pattern = pattern.trim();\r\n        // Check cache\r\n        if (CACHE[pattern]) {\r\n            var cached = CACHE[pattern];\r\n            cached.lastIndex = 0; // reset RegExp to its initial state to reuse it!\r\n            return cached;\r\n        }\r\n        var regEx = parseRegExp(pattern);\r\n        // Wrap it\r\n        regEx = '^' + regEx + '$';\r\n        // Convert to regexp and be ready for errors\r\n        var result;\r\n        try {\r\n            result = new RegExp(regEx);\r\n        }\r\n        catch (error) {\r\n            result = /.^/; // create a regex that matches nothing if we cannot parse the pattern\r\n        }\r\n        // Make sure to cache\r\n        CACHE[pattern] = result;\r\n        return result;\r\n    }\r\n    function match(arg1, path, siblings) {\r\n        if (!arg1 || !path) {\r\n            return false;\r\n        }\r\n        // Glob with String\r\n        if (typeof arg1 === 'string') {\r\n            try {\r\n                return globToRegExp(arg1).test(path);\r\n            }\r\n            catch (error) {\r\n                return false; // ignore pattern if the regex is invalid\r\n            }\r\n        }\r\n        // Glob with Expression\r\n        return matchExpression(arg1, path, siblings);\r\n    }\r\n    exports.match = match;\r\n    function matchExpression(expression, path, siblings) {\r\n        var patterns = Object.getOwnPropertyNames(expression);\r\n        for (var i = 0; i < patterns.length; i++) {\r\n            var pattern = patterns[i];\r\n            // Pattern matches path\r\n            if (match(pattern, path)) {\r\n                var value = expression[pattern];\r\n                // Expression Pattern is <boolean>\r\n                if (typeof value === 'boolean') {\r\n                    if (value === false) {\r\n                        continue; // pattern is disabled\r\n                    }\r\n                    return pattern;\r\n                }\r\n                // Expression Pattern is <SiblingClause>\r\n                if (value && typeof value.when === 'string') {\r\n                    if (!siblings || !siblings.length) {\r\n                        continue; // pattern is malformed or we don't have siblings\r\n                    }\r\n                    var clause = value;\r\n                    var basename = strings.rtrim(paths.basename(path), paths.extname(path));\r\n                    var clausePattern = strings.replaceAll(clause.when, '$(basename)', basename);\r\n                    if (siblings.some(function (sibling) { return sibling === clausePattern; })) {\r\n                        return pattern;\r\n                    }\r\n                    else {\r\n                        continue; // pattern does not match in the end because the when clause is not satisfied\r\n                    }\r\n                }\r\n                // Expression is Anything\r\n                return pattern;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/base/common/labels\", [\"require\", \"exports\", 'vs/base/common/platform', 'vs/base/common/types', 'vs/base/common/strings', 'vs/base/common/paths'], function (require, exports, platform, types, strings, paths) {\r\n    var PathLabelProvider = (function () {\r\n        function PathLabelProvider(arg1) {\r\n            this.root = arg1 && getPath(arg1);\r\n        }\r\n        PathLabelProvider.prototype.getLabel = function (arg1) {\r\n            return getPathLabel(getPath(arg1), this.root);\r\n        };\r\n        return PathLabelProvider;\r\n    })();\r\n    exports.PathLabelProvider = PathLabelProvider;\r\n    function getPathLabel(arg1, arg2) {\r\n        var basepath = arg2 && getPath(arg2);\r\n        var absolutePath = getPath(arg1);\r\n        if (basepath && paths.isEqualOrParent(absolutePath, basepath)) {\r\n            return paths.normalize(strings.ltrim(absolutePath.substr(basepath.length), paths.nativeSep), true);\r\n        }\r\n        if (platform.isWindows && absolutePath[1] === ':') {\r\n            return paths.normalize(absolutePath.charAt(0).toUpperCase() + absolutePath.slice(1), true);\r\n        }\r\n        return paths.normalize(absolutePath, true);\r\n    }\r\n    exports.getPathLabel = getPathLabel;\r\n    function getPath(arg1) {\r\n        if (!arg1) {\r\n            return null;\r\n        }\r\n        if (typeof arg1 === 'string') {\r\n            return arg1;\r\n        }\r\n        if (types.isFunction(arg1.getWorkspace)) {\r\n            var ws = arg1.getWorkspace();\r\n            return ws ? ws.resource.fsPath : void 0;\r\n        }\r\n        return arg1.fsPath;\r\n    }\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/base/common/mime\", [\"require\", \"exports\", 'vs/base/common/paths', 'vs/base/common/types', 'vs/base/common/strings'], function (require, exports, paths, types, strings) {\r\n    exports.MIME_TEXT = 'text/plain';\r\n    exports.MIME_BINARY = 'application/octet-stream';\r\n    exports.MIME_UNKNOWN = 'application/unknown';\r\n    var registeredTextMimesByFilename = Object.create(null);\r\n    var registeredTextMimesByFirstLine = [];\r\n    // This is for automatic generation at native.guplfile.js#41 => darwinBundleDocumentTypes.extensions\r\n    function generateKnownFilenames(onlyExtensions) {\r\n        if (onlyExtensions === void 0) { onlyExtensions = true; }\r\n        var filter = function (ext) {\r\n            if (onlyExtensions) {\r\n                return /^\\./.test(ext);\r\n            }\r\n            return true;\r\n        };\r\n        var removeLeadingDot = function (ext) {\r\n            return ext.replace(/^\\./, '');\r\n        };\r\n        var list = [];\r\n        list = list.concat(Object.keys(registeredTextMimesByFilename));\r\n        list = list.filter(filter).map(removeLeadingDot);\r\n        list.sort();\r\n        var result = [];\r\n        var currentLetter = null;\r\n        var previousItem = null;\r\n        var currentRow = [];\r\n        var pushCurrentRow = function () {\r\n            if (currentRow.length > 0) {\r\n                result.push('\\'' + currentRow.join('\\', \\'') + '\\'');\r\n            }\r\n        };\r\n        for (var i = 0, len = list.length; i < len; i++) {\r\n            var item = list[i];\r\n            if (item.length === 0) {\r\n                continue;\r\n            }\r\n            if (item === previousItem) {\r\n                continue;\r\n            }\r\n            var letter = item.charAt(0);\r\n            if (currentLetter !== letter) {\r\n                pushCurrentRow();\r\n                currentLetter = letter;\r\n                currentRow = [];\r\n            }\r\n            currentRow.push(item);\r\n            previousItem = item;\r\n        }\r\n        pushCurrentRow();\r\n        return result.join(',\\n');\r\n    }\r\n    exports.generateKnownFilenames = generateKnownFilenames;\r\n    /**\r\n     * Allow to register extra text mimes dynamically based on filename\r\n     */\r\n    function registerTextMimeByFilename(nameOrExtension, mime) {\r\n        if (nameOrExtension && mime) {\r\n            if (registeredTextMimesByFilename[nameOrExtension] && registeredTextMimesByFilename[nameOrExtension] !== mime) {\r\n                console.warn('Overwriting filename <<' + nameOrExtension + '>> to now point to mime <<' + mime + '>>');\r\n            }\r\n            registeredTextMimesByFilename[nameOrExtension] = mime;\r\n        }\r\n    }\r\n    exports.registerTextMimeByFilename = registerTextMimeByFilename;\r\n    /**\r\n     * Allow to register extra text mimes dynamically based on firstline\r\n     */\r\n    function registerTextMimeByFirstLine(firstLineRegexp, mime) {\r\n        if (firstLineRegexp && mime) {\r\n            registeredTextMimesByFirstLine.push({ regexp: firstLineRegexp, mime: mime });\r\n        }\r\n    }\r\n    exports.registerTextMimeByFirstLine = registerTextMimeByFirstLine;\r\n    function isBinaryMime(mimes) {\r\n        if (!mimes) {\r\n            return false;\r\n        }\r\n        var mimeVals;\r\n        if (types.isArray(mimes)) {\r\n            mimeVals = mimes;\r\n        }\r\n        else {\r\n            mimeVals = mimes.split(',').map(function (mime) { return mime.trim(); });\r\n        }\r\n        return mimeVals.indexOf(exports.MIME_BINARY) >= 0;\r\n    }\r\n    exports.isBinaryMime = isBinaryMime;\r\n    /**\r\n     * New function for mime type detection supporting application/unknown as concept.\r\n     */\r\n    function guessMimeTypes(path, firstLine) {\r\n        if (!path) {\r\n            return [exports.MIME_UNKNOWN];\r\n        }\r\n        // 1.) Firstline gets highest priority\r\n        if (firstLine) {\r\n            if (strings.startsWithUTF8BOM(firstLine)) {\r\n                firstLine = firstLine.substr(1);\r\n            }\r\n            if (firstLine.length > 0) {\r\n                for (var i = 0; i < registeredTextMimesByFirstLine.length; ++i) {\r\n                    // Make sure the entire line matches, not just a subpart.\r\n                    var matches = firstLine.match(registeredTextMimesByFirstLine[i].regexp);\r\n                    if (matches && matches.length > 0 && matches[0].length === firstLine.length) {\r\n                        return [registeredTextMimesByFirstLine[i].mime, exports.MIME_TEXT];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // Check with file name and extension\r\n        path = path.toLowerCase();\r\n        var filename = paths.basename(path);\r\n        var extension = paths.extname(path);\r\n        var exactNameMatch;\r\n        var extensionMatch;\r\n        // Check for dynamically registered match based on filename and extension\r\n        for (var nameOrExtension in registeredTextMimesByFilename) {\r\n            var nameOrExtensionLower = nameOrExtension.toLowerCase();\r\n            // First exact name match\r\n            if (!exactNameMatch && filename === nameOrExtensionLower) {\r\n                exactNameMatch = nameOrExtension;\r\n                break; // take it!\r\n            }\r\n            // Longest extension match\r\n            if (nameOrExtension[0] === '.' && strings.endsWith(filename, nameOrExtensionLower)) {\r\n                if (!extensionMatch || nameOrExtensionLower.length > extensionMatch.length) {\r\n                    extensionMatch = nameOrExtension;\r\n                }\r\n            }\r\n        }\r\n        // 2.) Exact name match has second highest prio\r\n        if (exactNameMatch) {\r\n            return [registeredTextMimesByFilename[exactNameMatch], exports.MIME_TEXT];\r\n        }\r\n        // 3.) Match on extension comes last\r\n        if (extensionMatch) {\r\n            return [registeredTextMimesByFilename[extensionMatch], exports.MIME_TEXT];\r\n        }\r\n        return [exports.MIME_UNKNOWN];\r\n    }\r\n    exports.guessMimeTypes = guessMimeTypes;\r\n    function isUnspecific(mime) {\r\n        if (!mime) {\r\n            return true;\r\n        }\r\n        if (typeof mime === 'string') {\r\n            return mime === exports.MIME_BINARY || mime === exports.MIME_TEXT || mime === exports.MIME_UNKNOWN;\r\n        }\r\n        return mime.length === 1 && isUnspecific(mime[0]);\r\n    }\r\n    exports.isUnspecific = isUnspecific;\r\n    function suggestFilename(theMime, prefix) {\r\n        for (var fileExtension in registeredTextMimesByFilename) {\r\n            var mime = registeredTextMimesByFilename[fileExtension];\r\n            if (mime === theMime) {\r\n                return prefix + fileExtension;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    exports.suggestFilename = suggestFilename;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/base/common/severity\", [\"require\", \"exports\", 'vs/nls!vs/base/common/severity', 'vs/base/common/strings'], function (require, exports, nls, strings) {\r\n    var Severity;\r\n    (function (Severity) {\r\n        Severity[Severity[\"Ignore\"] = 0] = \"Ignore\";\r\n        Severity[Severity[\"Info\"] = 1] = \"Info\";\r\n        Severity[Severity[\"Warning\"] = 2] = \"Warning\";\r\n        Severity[Severity[\"Error\"] = 3] = \"Error\";\r\n    })(Severity || (Severity = {}));\r\n    var Severity;\r\n    (function (Severity) {\r\n        var _error = 'error', _warning = 'warning', _warn = 'warn', _info = 'info';\r\n        var _displayStrings = Object.create(null);\r\n        _displayStrings[Severity.Error] = nls.localize(0, null);\r\n        _displayStrings[Severity.Warning] = nls.localize(1, null);\r\n        _displayStrings[Severity.Info] = nls.localize(2, null);\r\n        /**\r\n         * Parses 'error', 'warning', 'warn', 'info' in call casings\r\n         * and falls back to ignore.\r\n         */\r\n        function fromValue(value) {\r\n            if (!value) {\r\n                return Severity.Ignore;\r\n            }\r\n            if (strings.equalsIgnoreCase(_error, value)) {\r\n                return Severity.Error;\r\n            }\r\n            if (strings.equalsIgnoreCase(_warning, value) || strings.equalsIgnoreCase(_warn, value)) {\r\n                return Severity.Warning;\r\n            }\r\n            if (strings.equalsIgnoreCase(_info, value)) {\r\n                return Severity.Info;\r\n            }\r\n            return Severity.Ignore;\r\n        }\r\n        Severity.fromValue = fromValue;\r\n        function toString(value) {\r\n            return _displayStrings[value] || strings.empty;\r\n        }\r\n        Severity.toString = toString;\r\n        function compare(a, b) {\r\n            return b - a;\r\n        }\r\n        Severity.compare = compare;\r\n    })(Severity || (Severity = {}));\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.default = Severity;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/base/common/timer\", [\"require\", \"exports\", 'vs/base/common/platform', 'vs/base/common/errors', 'vs/base/common/stopwatch'], function (require, exports, Platform, errors, precision) {\r\n    exports.ENABLE_TIMER = false;\r\n    var msWriteProfilerMark = Platform.globals['msWriteProfilerMark'];\r\n    (function (Topic) {\r\n        Topic[Topic[\"EDITOR\"] = 0] = \"EDITOR\";\r\n        Topic[Topic[\"LANGUAGES\"] = 1] = \"LANGUAGES\";\r\n        Topic[Topic[\"WORKER\"] = 2] = \"WORKER\";\r\n        Topic[Topic[\"WORKBENCH\"] = 3] = \"WORKBENCH\";\r\n        Topic[Topic[\"STARTUP\"] = 4] = \"STARTUP\";\r\n    })(exports.Topic || (exports.Topic = {}));\r\n    var Topic = exports.Topic;\r\n    var NullTimerEvent = (function () {\r\n        function NullTimerEvent() {\r\n        }\r\n        NullTimerEvent.prototype.stop = function () {\r\n            return;\r\n        };\r\n        NullTimerEvent.prototype.timeTaken = function () {\r\n            return -1;\r\n        };\r\n        return NullTimerEvent;\r\n    })();\r\n    var TimerEvent = (function () {\r\n        function TimerEvent(timeKeeper, name, topic, startTime, description) {\r\n            this.timeKeeper = timeKeeper;\r\n            this.name = name;\r\n            this.description = description;\r\n            this.topic = topic;\r\n            this.stopTime = null;\r\n            if (startTime) {\r\n                this.startTime = startTime;\r\n                return;\r\n            }\r\n            this.startTime = new Date();\r\n            this.sw = precision.StopWatch.create();\r\n            if (msWriteProfilerMark) {\r\n                var profilerName = ['Monaco', this.topic, this.name, 'start'];\r\n                msWriteProfilerMark(profilerName.join('|'));\r\n            }\r\n        }\r\n        TimerEvent.prototype.stop = function (stopTime) {\r\n            // already stopped\r\n            if (this.stopTime !== null) {\r\n                return;\r\n            }\r\n            if (stopTime) {\r\n                this.stopTime = stopTime;\r\n                this.sw = null;\r\n                this.timeKeeper._onEventStopped(this);\r\n                return;\r\n            }\r\n            this.stopTime = new Date();\r\n            if (this.sw) {\r\n                this.sw.stop();\r\n            }\r\n            this.timeKeeper._onEventStopped(this);\r\n            if (msWriteProfilerMark) {\r\n                var profilerName = ['Monaco', this.topic, this.name, 'stop'];\r\n                msWriteProfilerMark(profilerName.join('|'));\r\n            }\r\n        };\r\n        TimerEvent.prototype.timeTaken = function () {\r\n            if (this.sw) {\r\n                return this.sw.elapsed();\r\n            }\r\n            if (this.stopTime) {\r\n                return this.stopTime.getTime() - this.startTime.getTime();\r\n            }\r\n            return -1;\r\n        };\r\n        return TimerEvent;\r\n    })();\r\n    var TimeKeeper /*extends EventEmitter.EventEmitter*/ = (function () {\r\n        function TimeKeeper /*extends EventEmitter.EventEmitter*/() {\r\n            this.cleaningIntervalId = -1;\r\n            this.collectedEvents = [];\r\n            this.listeners = [];\r\n        }\r\n        TimeKeeper /*extends EventEmitter.EventEmitter*/.prototype.isEnabled = function () {\r\n            return exports.ENABLE_TIMER;\r\n        };\r\n        TimeKeeper /*extends EventEmitter.EventEmitter*/.prototype.start = function (topic, name, start, description) {\r\n            if (!this.isEnabled()) {\r\n                return exports.nullEvent;\r\n            }\r\n            var strTopic;\r\n            if (typeof topic === 'string') {\r\n                strTopic = topic;\r\n            }\r\n            else if (topic === Topic.EDITOR) {\r\n                strTopic = 'Editor';\r\n            }\r\n            else if (topic === Topic.LANGUAGES) {\r\n                strTopic = 'Languages';\r\n            }\r\n            else if (topic === Topic.WORKER) {\r\n                strTopic = 'Worker';\r\n            }\r\n            else if (topic === Topic.WORKBENCH) {\r\n                strTopic = 'Workbench';\r\n            }\r\n            else if (topic === Topic.STARTUP) {\r\n                strTopic = 'Startup';\r\n            }\r\n            this.initAutoCleaning();\r\n            var event = new TimerEvent(this, name, strTopic, start, description);\r\n            this.addEvent(event);\r\n            return event;\r\n        };\r\n        TimeKeeper /*extends EventEmitter.EventEmitter*/.prototype.dispose = function () {\r\n            if (this.cleaningIntervalId !== -1) {\r\n                Platform.clearInterval(this.cleaningIntervalId);\r\n                this.cleaningIntervalId = -1;\r\n            }\r\n        };\r\n        TimeKeeper /*extends EventEmitter.EventEmitter*/.prototype.addListener = function (listener) {\r\n            this.listeners.push(listener);\r\n        };\r\n        TimeKeeper /*extends EventEmitter.EventEmitter*/.prototype.removeListener = function (listener) {\r\n            for (var i = 0; i < this.listeners.length; i++) {\r\n                if (this.listeners[i] === listener) {\r\n                    this.listeners.splice(i, 1);\r\n                    return;\r\n                }\r\n            }\r\n        };\r\n        TimeKeeper /*extends EventEmitter.EventEmitter*/.prototype.addEvent = function (event) {\r\n            event.id = TimeKeeper.EVENT_ID;\r\n            TimeKeeper.EVENT_ID++;\r\n            this.collectedEvents.push(event);\r\n            // expire items from the front of the cache\r\n            if (this.collectedEvents.length > TimeKeeper._EVENT_CACHE_LIMIT) {\r\n                this.collectedEvents.shift();\r\n            }\r\n        };\r\n        TimeKeeper /*extends EventEmitter.EventEmitter*/.prototype.initAutoCleaning = function () {\r\n            var _this = this;\r\n            if (this.cleaningIntervalId === -1) {\r\n                this.cleaningIntervalId = Platform.setInterval(function () {\r\n                    var now = Date.now();\r\n                    _this.collectedEvents.forEach(function (event) {\r\n                        if (!event.stopTime && (now - event.startTime.getTime()) >= TimeKeeper._MAX_TIMER_LENGTH) {\r\n                            event.stop();\r\n                        }\r\n                    });\r\n                }, TimeKeeper._CLEAN_UP_INTERVAL);\r\n            }\r\n        };\r\n        TimeKeeper /*extends EventEmitter.EventEmitter*/.prototype.getCollectedEvents = function () {\r\n            return this.collectedEvents.slice(0);\r\n        };\r\n        TimeKeeper /*extends EventEmitter.EventEmitter*/.prototype.clearCollectedEvents = function () {\r\n            this.collectedEvents = [];\r\n        };\r\n        TimeKeeper /*extends EventEmitter.EventEmitter*/.prototype._onEventStopped = function (event) {\r\n            var emitEvents = [event];\r\n            var listeners = this.listeners.slice(0);\r\n            for (var i = 0; i < listeners.length; i++) {\r\n                try {\r\n                    listeners[i](emitEvents);\r\n                }\r\n                catch (e) {\r\n                    errors.onUnexpectedError(e);\r\n                }\r\n            }\r\n        };\r\n        TimeKeeper /*extends EventEmitter.EventEmitter*/.prototype.setInitialCollectedEvents = function (events, startTime) {\r\n            var _this = this;\r\n            if (!this.isEnabled()) {\r\n                return;\r\n            }\r\n            if (startTime) {\r\n                TimeKeeper.PARSE_TIME = startTime;\r\n            }\r\n            events.forEach(function (event) {\r\n                var e = new TimerEvent(_this, event.name, event.topic, event.startTime, event.description);\r\n                e.stop(event.stopTime);\r\n                _this.addEvent(e);\r\n            });\r\n        };\r\n        /**\r\n         * After being started for 1 minute, all timers are automatically stopped.\r\n         */\r\n        TimeKeeper /*extends EventEmitter.EventEmitter*/._MAX_TIMER_LENGTH = 60000; // 1 minute\r\n        /**\r\n         * Every 2 minutes, a sweep of current started timers is done.\r\n         */\r\n        TimeKeeper /*extends EventEmitter.EventEmitter*/._CLEAN_UP_INTERVAL = 120000; // 2 minutes\r\n        /**\r\n         * Collect at most 1000 events.\r\n         */\r\n        TimeKeeper /*extends EventEmitter.EventEmitter*/._EVENT_CACHE_LIMIT = 1000;\r\n        TimeKeeper /*extends EventEmitter.EventEmitter*/.EVENT_ID = 1;\r\n        TimeKeeper /*extends EventEmitter.EventEmitter*/.PARSE_TIME = new Date();\r\n        return TimeKeeper /*extends EventEmitter.EventEmitter*/;\r\n    })();\r\n    exports.TimeKeeper /*extends EventEmitter.EventEmitter*/ = TimeKeeper /*extends EventEmitter.EventEmitter*/;\r\n    var timeKeeper = new TimeKeeper();\r\n    exports.nullEvent = new NullTimerEvent();\r\n    function start(topic, name, start, description) {\r\n        return timeKeeper.start(topic, name, start, description);\r\n    }\r\n    exports.start = start;\r\n    function getTimeKeeper() {\r\n        return timeKeeper;\r\n    }\r\n    exports.getTimeKeeper = getTimeKeeper;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\ndefine(\"vs/base/common/winjs.base\", ['./winjs.base.raw', 'vs/base/common/errors'], function (raw, __Errors__) {\n\t'use strict';\n\n\tvar winjs = raw;\n\n\tvar outstandingPromiseErrors = {};\n\tfunction promiseErrorHandler(e) {\n\n\t\t//\n\t\t// e.detail looks like: { exception, error, promise, handler, id, parent }\n\t\t//\n\t\tvar details = e.detail;\n\t\tvar id = details.id;\n\n\t\t// If the error has a parent promise then this is not the origination of the\n\t\t//  error so we check if it has a handler, and if so we mark that the error\n\t\t//  was handled by removing it from outstandingPromiseErrors\n\t\t//\n\t\tif (details.parent) {\n\t\t\tif (details.handler && outstandingPromiseErrors) {\n\t\t\t\tdelete outstandingPromiseErrors[id];\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// Indicate that this error was originated and needs to be handled\n\t\toutstandingPromiseErrors[id] = details;\n\n\t\t// The first time the queue fills up this iteration, schedule a timeout to\n\t\t// check if any errors are still unhandled.\n\t\tif (Object.keys(outstandingPromiseErrors).length === 1) {\n\t\t\tsetTimeout(function () {\n\t\t\t\tvar errors = outstandingPromiseErrors;\n\t\t\t\toutstandingPromiseErrors = {};\n\t\t\t\tObject.keys(errors).forEach(function (errorId) {\n\t\t\t\t\tvar error = errors[errorId];\n\t\t\t\t\tif(error.exception) {\n\t\t\t\t\t\t__Errors__.onUnexpectedError(error.exception);\n\t\t\t\t\t} else if(error.error) {\n\t\t\t\t\t\t__Errors__.onUnexpectedError(error.error);\n\t\t\t\t\t}\n\t\t\t\t\tconsole.log(\"WARNING: Promise with no error callback:\" + error.id);\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t\tif(error.exception) {\n\t\t\t\t\t\tconsole.log(error.exception.stack);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}, 0);\n\t\t}\n\t}\n\n\twinjs.Promise.addEventListener(\"error\", promiseErrorHandler);\n\n\n\tfunction decoratePromise(promise, completeCallback, errorCallback) {\n\t\tvar pc, pe, pp;\n\n\t\tvar resultPromise = new winjs.Promise(\n\t\t\tfunction (c, e, p) {\n\t\t\t\tpc = c;\n\t\t\t\tpe = e;\n\t\t\t\tpp = p;\n\t\t\t}, function () {\n\t\t\t\tpromise.cancel();\n\t\t\t}\n\t\t);\n\n\t\tpromise.then(function (r) {\n\t\t\tif (completeCallback) {\n\t\t\t\tcompleteCallback(r);\n\t\t\t}\n\t\t\tpc(r);\n\t\t}, function (e) {\n\t\t\tif (errorCallback) {\n\t\t\t\terrorCallback(e);\n\t\t\t}\n\t\t\tpe(e);\n\t\t}, pp);\n\n\t\treturn resultPromise;\n\t}\n\n\treturn {\n\t\tdecoratePromise: decoratePromise,\n\t\tClass: winjs.Class,\n\t\txhr: winjs.xhr,\n\t\tPromise: winjs.Promise,\n\t\tTPromise: winjs.Promise,\n\t\tPPromise: winjs.Promise,\n\t\tUtilities: winjs.Utilities\n\t};\n});\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\ndefine(\"vs/base/common/actions\", [\"require\", \"exports\", 'vs/base/common/winjs.base', 'vs/base/common/eventEmitter', 'vs/base/common/events'], function (require, exports, winjs_base_1, eventEmitter_1, Events) {\r\n    /**\r\n     * Checks if the provided object is compatible\r\n     * with the IAction interface.\r\n     * @param thing an object\r\n     */\r\n    function isAction(thing) {\r\n        if (!thing) {\r\n            return false;\r\n        }\r\n        else if (thing instanceof Action) {\r\n            return true;\r\n        }\r\n        else if (typeof thing.id !== 'string') {\r\n            return false;\r\n        }\r\n        else if (typeof thing.label !== 'string') {\r\n            return false;\r\n        }\r\n        else if (typeof thing.class !== 'string') {\r\n            return false;\r\n        }\r\n        else if (typeof thing.enabled !== 'boolean') {\r\n            return false;\r\n        }\r\n        else if (typeof thing.checked !== 'boolean') {\r\n            return false;\r\n        }\r\n        else if (typeof thing.run !== 'function') {\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n    exports.isAction = isAction;\r\n    var Action = (function (_super) {\r\n        __extends(Action, _super);\r\n        function Action(id, label, cssClass, enabled, actionCallback) {\r\n            if (label === void 0) { label = ''; }\r\n            if (cssClass === void 0) { cssClass = ''; }\r\n            if (enabled === void 0) { enabled = true; }\r\n            if (actionCallback === void 0) { actionCallback = null; }\r\n            _super.call(this);\r\n            this._id = id;\r\n            this._label = label;\r\n            this._cssClass = cssClass;\r\n            this._enabled = enabled;\r\n            this._actionCallback = actionCallback;\r\n        }\r\n        Object.defineProperty(Action.prototype, \"id\", {\r\n            get: function () {\r\n                return this._id;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Action.prototype, \"label\", {\r\n            get: function () {\r\n                return this._label;\r\n            },\r\n            set: function (value) {\r\n                this._setLabel(value);\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Action.prototype._setLabel = function (value) {\r\n            if (this._label !== value) {\r\n                this._label = value;\r\n                this.emit(Action.LABEL, { source: this });\r\n            }\r\n        };\r\n        Object.defineProperty(Action.prototype, \"tooltip\", {\r\n            get: function () {\r\n                return this._tooltip;\r\n            },\r\n            set: function (value) {\r\n                this._setTooltip(value);\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Action.prototype._setTooltip = function (value) {\r\n            if (this._tooltip !== value) {\r\n                this._tooltip = value;\r\n                this.emit(Action.TOOLTIP, { source: this });\r\n            }\r\n        };\r\n        Object.defineProperty(Action.prototype, \"class\", {\r\n            get: function () {\r\n                return this._cssClass;\r\n            },\r\n            set: function (value) {\r\n                this._setClass(value);\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Action.prototype._setClass = function (value) {\r\n            if (this._cssClass !== value) {\r\n                this._cssClass = value;\r\n                this.emit(Action.CLASS, { source: this });\r\n            }\r\n        };\r\n        Object.defineProperty(Action.prototype, \"enabled\", {\r\n            get: function () {\r\n                return this._enabled;\r\n            },\r\n            set: function (value) {\r\n                this._setEnabled(value);\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Action.prototype._setEnabled = function (value) {\r\n            if (this._enabled !== value) {\r\n                this._enabled = value;\r\n                this.emit(Action.ENABLED, { source: this });\r\n            }\r\n        };\r\n        Object.defineProperty(Action.prototype, \"checked\", {\r\n            get: function () {\r\n                return this._checked;\r\n            },\r\n            set: function (value) {\r\n                this._setChecked(value);\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Action.prototype._setChecked = function (value) {\r\n            if (this._checked !== value) {\r\n                this._checked = value;\r\n                this.emit(Action.CHECKED, { source: this });\r\n            }\r\n        };\r\n        Object.defineProperty(Action.prototype, \"order\", {\r\n            get: function () {\r\n                return this._order;\r\n            },\r\n            set: function (value) {\r\n                this._order = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Action.prototype, \"actionCallback\", {\r\n            get: function () {\r\n                return this._actionCallback;\r\n            },\r\n            set: function (value) {\r\n                this._actionCallback = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Action.prototype.run = function (event) {\r\n            if (this._actionCallback !== null) {\r\n                return this._actionCallback(event);\r\n            }\r\n            else {\r\n                return winjs_base_1.Promise.as(true);\r\n            }\r\n        };\r\n        Action.LABEL = 'label';\r\n        Action.TOOLTIP = 'tooltip';\r\n        Action.CLASS = 'class';\r\n        Action.ENABLED = 'enabled';\r\n        Action.CHECKED = 'checked';\r\n        return Action;\r\n    })(eventEmitter_1.EventEmitter);\r\n    exports.Action = Action;\r\n    var ProxyAction = (function (_super) {\r\n        __extends(ProxyAction, _super);\r\n        function ProxyAction(delegate, runHandler) {\r\n            _super.call(this, delegate.id, delegate.label, delegate.class, delegate.enabled, null);\r\n            this.delegate = delegate;\r\n            this.runHandler = runHandler;\r\n        }\r\n        Object.defineProperty(ProxyAction.prototype, \"id\", {\r\n            get: function () {\r\n                return this.delegate.id;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(ProxyAction.prototype, \"label\", {\r\n            get: function () {\r\n                return this.delegate.label;\r\n            },\r\n            set: function (value) {\r\n                this.delegate.label = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(ProxyAction.prototype, \"class\", {\r\n            get: function () {\r\n                return this.delegate.class;\r\n            },\r\n            set: function (value) {\r\n                this.delegate.class = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(ProxyAction.prototype, \"enabled\", {\r\n            get: function () {\r\n                return this.delegate.enabled;\r\n            },\r\n            set: function (value) {\r\n                this.delegate.enabled = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(ProxyAction.prototype, \"checked\", {\r\n            get: function () {\r\n                return this.delegate.checked;\r\n            },\r\n            set: function (value) {\r\n                this.delegate.checked = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        ProxyAction.prototype.run = function (event) {\r\n            this.runHandler(event);\r\n            return this.delegate.run(event);\r\n        };\r\n        ProxyAction.prototype.addListener = function (eventType, listener) {\r\n            return this.delegate.addListener(eventType, listener);\r\n        };\r\n        ProxyAction.prototype.addBulkListener = function (listener) {\r\n            return this.delegate.addBulkListener(listener);\r\n        };\r\n        ProxyAction.prototype.addEmitter = function (eventEmitter, emitterType) {\r\n            return this.delegate.addEmitter(eventEmitter, emitterType);\r\n        };\r\n        ProxyAction.prototype.addEmitterTypeListener = function (eventType, emitterType, listener) {\r\n            return this.delegate.addEmitterTypeListener(eventType, emitterType, listener);\r\n        };\r\n        ProxyAction.prototype.emit = function (eventType, data) {\r\n            this.delegate.emit(eventType, data);\r\n        };\r\n        return ProxyAction;\r\n    })(Action);\r\n    function radioGroup(actions) {\r\n        function newCecker(action) {\r\n            return function () {\r\n                actions.forEach(function (otherAction) {\r\n                    otherAction.checked = (otherAction === action);\r\n                });\r\n            };\r\n        }\r\n        ;\r\n        return actions.map(function (action) {\r\n            return new ProxyAction(action, newCecker(action));\r\n        });\r\n    }\r\n    exports.radioGroup = radioGroup;\r\n    var ActionRunner = (function (_super) {\r\n        __extends(ActionRunner, _super);\r\n        function ActionRunner() {\r\n            _super.apply(this, arguments);\r\n        }\r\n        ActionRunner.prototype.run = function (action, context) {\r\n            var _this = this;\r\n            if (!action.enabled) {\r\n                return winjs_base_1.Promise.as(null);\r\n            }\r\n            this.emit(Events.EventType.BEFORE_RUN, { action: action });\r\n            return winjs_base_1.Promise.as(action.run(context)).then(function (result) {\r\n                _this.emit(Events.EventType.RUN, { action: action, result: result });\r\n            }, function (error) {\r\n                _this.emit(Events.EventType.RUN, { action: action, error: error });\r\n            });\r\n        };\r\n        return ActionRunner;\r\n    })(eventEmitter_1.EventEmitter);\r\n    exports.ActionRunner = ActionRunner;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\ndefine(\"vs/base/common/async\", [\"require\", \"exports\", 'vs/base/common/errors', 'vs/base/common/winjs.base', 'vs/base/common/platform', 'vs/base/common/cancellation'], function (require, exports, errors, winjs_base_1, platform, cancellation_1) {\r\n    function wrapAsWinJSPromise(callback, context) {\r\n        if (!callback) {\r\n            return;\r\n        }\r\n        var result = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i - 0] = arguments[_i];\r\n            }\r\n            var source = new cancellation_1.CancellationTokenSource();\r\n            return new winjs_base_1.TPromise(function (c, e) {\r\n                args.push(source.token);\r\n                var value = callback.apply(context, args);\r\n                if (value && typeof value['then'] === 'function') {\r\n                    value.then(c, e);\r\n                }\r\n                else {\r\n                    c(value);\r\n                }\r\n            }, function () {\r\n                source.cancel();\r\n            });\r\n        };\r\n        return result;\r\n    }\r\n    exports.wrapAsWinJSPromise = wrapAsWinJSPromise;\r\n    /**\r\n     * A helper to prevent accumulation of sequential async tasks.\r\n     *\r\n     * Imagine a mail man with the sole task of delivering letters. As soon as\r\n     * a letter submitted for delivery, he drives to the destination, delivers it\r\n     * and returns to his base. Imagine that during the trip, N more letters were submitted.\r\n     * When the mail man returns, he picks those N letters and delivers them all in a\r\n     * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\r\n     *\r\n     * The throttler implements this via the queue() method, by providing it a task\r\n     * factory. Following the example:\r\n     *\r\n     * \t\tvar throttler = new Throttler();\r\n     * \t\tvar letters = [];\r\n     *\r\n     * \t\tfunction letterReceived(l) {\r\n     * \t\t\tletters.push(l);\r\n     * \t\t\tthrottler.queue(() => { return makeTheTrip(); });\r\n     * \t\t}\r\n     */\r\n    var Throttler = (function () {\r\n        function Throttler() {\r\n            this.activePromise = null;\r\n            this.queuedPromise = null;\r\n            this.queuedPromiseFactory = null;\r\n        }\r\n        Throttler.prototype.queue = function (promiseFactory) {\r\n            var _this = this;\r\n            if (this.activePromise) {\r\n                this.queuedPromiseFactory = promiseFactory;\r\n                if (!this.queuedPromise) {\r\n                    var onComplete = function () {\r\n                        _this.queuedPromise = null;\r\n                        var result = _this.queue(_this.queuedPromiseFactory);\r\n                        _this.queuedPromiseFactory = null;\r\n                        return result;\r\n                    };\r\n                    this.queuedPromise = new winjs_base_1.Promise(function (c, e, p) {\r\n                        _this.activePromise.then(onComplete, onComplete, p).done(c);\r\n                    }, function () {\r\n                        _this.activePromise.cancel();\r\n                    });\r\n                }\r\n                return new winjs_base_1.Promise(function (c, e, p) {\r\n                    _this.queuedPromise.then(c, e, p);\r\n                }, function () {\r\n                    // no-op\r\n                });\r\n            }\r\n            this.activePromise = promiseFactory();\r\n            return new winjs_base_1.Promise(function (c, e, p) {\r\n                _this.activePromise.done(function (result) {\r\n                    _this.activePromise = null;\r\n                    c(result);\r\n                }, function (err) {\r\n                    _this.activePromise = null;\r\n                    e(err);\r\n                }, p);\r\n            }, function () {\r\n                _this.activePromise.cancel();\r\n            });\r\n        };\r\n        return Throttler;\r\n    })();\r\n    exports.Throttler = Throttler;\r\n    /**\r\n     * A helper to delay execution of a task that is being requested often.\r\n     *\r\n     * Following the throttler, now imagine the mail man wants to optimize the number of\r\n     * trips proactively. The trip itself can be long, so the he decides not to make the trip\r\n     * as soon as a letter is submitted. Instead he waits a while, in case more\r\n     * letters are submitted. After said waiting period, if no letters were submitted, he\r\n     * decides to make the trip. Imagine that N more letters were submitted after the first\r\n     * one, all within a short period of time between each other. Even though N+1\r\n     * submissions occurred, only 1 delivery was made.\r\n     *\r\n     * The delayer offers this behavior via the trigger() method, into which both the task\r\n     * to be executed and the waiting period (delay) must be passed in as arguments. Following\r\n     * the example:\r\n     *\r\n     * \t\tvar delayer = new Delayer(WAITING_PERIOD);\r\n     * \t\tvar letters = [];\r\n     *\r\n     * \t\tfunction letterReceived(l) {\r\n     * \t\t\tletters.push(l);\r\n     * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\r\n     * \t\t}\r\n     */\r\n    var Delayer = (function () {\r\n        function Delayer(defaultDelay) {\r\n            this.defaultDelay = defaultDelay;\r\n            this.timeout = null;\r\n            this.completionPromise = null;\r\n            this.onSuccess = null;\r\n            this.task = null;\r\n        }\r\n        Delayer.prototype.trigger = function (task, delay) {\r\n            var _this = this;\r\n            if (delay === void 0) { delay = this.defaultDelay; }\r\n            this.task = task;\r\n            this.cancelTimeout();\r\n            if (!this.completionPromise) {\r\n                this.completionPromise = new winjs_base_1.Promise(function (c) {\r\n                    _this.onSuccess = c;\r\n                }, function () {\r\n                    // no-op\r\n                }).then(function () {\r\n                    _this.completionPromise = null;\r\n                    _this.onSuccess = null;\r\n                    var result = _this.task();\r\n                    _this.task = null;\r\n                    return result;\r\n                });\r\n            }\r\n            this.timeout = setTimeout(function () {\r\n                _this.timeout = null;\r\n                _this.onSuccess(null);\r\n            }, delay);\r\n            return this.completionPromise;\r\n        };\r\n        Delayer.prototype.isTriggered = function () {\r\n            return this.timeout !== null;\r\n        };\r\n        Delayer.prototype.cancel = function () {\r\n            this.cancelTimeout();\r\n            if (this.completionPromise) {\r\n                this.completionPromise.cancel();\r\n                this.completionPromise = null;\r\n            }\r\n        };\r\n        Delayer.prototype.cancelTimeout = function () {\r\n            if (this.timeout !== null) {\r\n                clearTimeout(this.timeout);\r\n                this.timeout = null;\r\n            }\r\n        };\r\n        return Delayer;\r\n    })();\r\n    exports.Delayer = Delayer;\r\n    /**\r\n     * A helper to delay execution of a task that is being requested often, while\r\n     * preventing accumulation of consecutive executions, while the task runs.\r\n     *\r\n     * Simply combine the two mail man strategies from the Throttler and Delayer\r\n     * helpers, for an analogy.\r\n     */\r\n    var ThrottledDelayer = (function (_super) {\r\n        __extends(ThrottledDelayer, _super);\r\n        function ThrottledDelayer(defaultDelay) {\r\n            _super.call(this, defaultDelay);\r\n            this.throttler = new Throttler();\r\n        }\r\n        ThrottledDelayer.prototype.trigger = function (promiseFactory, delay) {\r\n            var _this = this;\r\n            return _super.prototype.trigger.call(this, function () { return _this.throttler.queue(promiseFactory); }, delay);\r\n        };\r\n        return ThrottledDelayer;\r\n    })(Delayer);\r\n    exports.ThrottledDelayer = ThrottledDelayer;\r\n    /**\r\n     * Similar to the ThrottledDelayer, except it also guarantees that the promise\r\n     * factory doesn't get called more often than every `minimumPeriod` milliseconds.\r\n     */\r\n    var PeriodThrottledDelayer = (function (_super) {\r\n        __extends(PeriodThrottledDelayer, _super);\r\n        function PeriodThrottledDelayer(defaultDelay, minimumPeriod) {\r\n            if (minimumPeriod === void 0) { minimumPeriod = 0; }\r\n            _super.call(this, defaultDelay);\r\n            this.minimumPeriod = minimumPeriod;\r\n            this.periodThrottler = new Throttler();\r\n        }\r\n        PeriodThrottledDelayer.prototype.trigger = function (promiseFactory, delay) {\r\n            var _this = this;\r\n            return _super.prototype.trigger.call(this, function () {\r\n                return _this.periodThrottler.queue(function () {\r\n                    return winjs_base_1.Promise.join([\r\n                        winjs_base_1.Promise.timeout(_this.minimumPeriod),\r\n                        promiseFactory()\r\n                    ]).then(function (r) { return r[1]; });\r\n                });\r\n            }, delay);\r\n        };\r\n        return PeriodThrottledDelayer;\r\n    })(ThrottledDelayer);\r\n    exports.PeriodThrottledDelayer = PeriodThrottledDelayer;\r\n    var PromiseSource = (function () {\r\n        function PromiseSource() {\r\n            var _this = this;\r\n            this._value = new winjs_base_1.TPromise(function (c, e) {\r\n                _this._completeCallback = c;\r\n                _this._errorCallback = e;\r\n            });\r\n        }\r\n        Object.defineProperty(PromiseSource.prototype, \"value\", {\r\n            get: function () {\r\n                return this._value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        PromiseSource.prototype.complete = function (value) {\r\n            this._completeCallback(value);\r\n        };\r\n        PromiseSource.prototype.error = function (err) {\r\n            this._errorCallback(err);\r\n        };\r\n        return PromiseSource;\r\n    })();\r\n    exports.PromiseSource = PromiseSource;\r\n    var ShallowCancelThenPromise = (function (_super) {\r\n        __extends(ShallowCancelThenPromise, _super);\r\n        function ShallowCancelThenPromise(outer) {\r\n            var completeCallback, errorCallback, progressCallback;\r\n            _super.call(this, function (c, e, p) {\r\n                completeCallback = c,\r\n                    errorCallback = e;\r\n                progressCallback = p;\r\n            }, function () {\r\n                // cancel this promise but not the\r\n                // outer promise\r\n                errorCallback(errors.canceled());\r\n            });\r\n            outer.then(completeCallback, errorCallback, progressCallback);\r\n        }\r\n        return ShallowCancelThenPromise;\r\n    })(winjs_base_1.TPromise);\r\n    exports.ShallowCancelThenPromise = ShallowCancelThenPromise;\r\n    /**\r\n     * Returns a new promise that joins the provided promise. Upon completion of\r\n     * the provided promise the provided function will always be called. This\r\n     * method is comparable to a try-finally code block.\r\n     * @param promise a promise\r\n     * @param f a function that will be call in the success and error case.\r\n     */\r\n    function always(promise, f) {\r\n        return new winjs_base_1.TPromise(function (c, e, p) {\r\n            promise.done(function (result) {\r\n                try {\r\n                    f(result);\r\n                }\r\n                catch (e1) {\r\n                    errors.onUnexpectedError(e1);\r\n                }\r\n                c(result);\r\n            }, function (err) {\r\n                try {\r\n                    f(err);\r\n                }\r\n                catch (e1) {\r\n                    errors.onUnexpectedError(e1);\r\n                }\r\n                e(err);\r\n            }, function (progress) {\r\n                p(progress);\r\n            });\r\n        }, function () {\r\n            promise.cancel();\r\n        });\r\n    }\r\n    exports.always = always;\r\n    /**\r\n     * Runs the provided list of promise factories in sequential order. The returned\r\n     * promise will complete to an array of results from each promise.\r\n     */\r\n    function sequence(promiseFactory) {\r\n        var results = [];\r\n        // Reverse since we start with last element using pop()\r\n        promiseFactory = promiseFactory.reverse();\r\n        function next() {\r\n            if (promiseFactory.length) {\r\n                return promiseFactory.pop()();\r\n            }\r\n            return null;\r\n        }\r\n        function thenHandler(result) {\r\n            if (result) {\r\n                results.push(result);\r\n            }\r\n            var n = next();\r\n            if (n) {\r\n                return n.then(thenHandler);\r\n            }\r\n            return winjs_base_1.TPromise.as(results);\r\n        }\r\n        return winjs_base_1.Promise.as(null).then(thenHandler);\r\n    }\r\n    exports.sequence = sequence;\r\n    function once(fn) {\r\n        var _this = this;\r\n        var didCall = false;\r\n        var result;\r\n        return function () {\r\n            if (didCall) {\r\n                return result;\r\n            }\r\n            didCall = true;\r\n            result = fn.apply(_this, arguments);\r\n            return result;\r\n        };\r\n    }\r\n    exports.once = once;\r\n    /**\r\n     * A helper to queue N promises and run them all with a max degree of parallelism. The helper\r\n     * ensures that at any time no more than M promises are running at the same time.\r\n     */\r\n    var Limiter = (function () {\r\n        function Limiter(maxDegreeOfParalellism) {\r\n            this.maxDegreeOfParalellism = maxDegreeOfParalellism;\r\n            this.outstandingPromises = [];\r\n            this.runningPromises = 0;\r\n        }\r\n        Limiter.prototype.queue = function (promiseFactory) {\r\n            var _this = this;\r\n            return new winjs_base_1.TPromise(function (c, e, p) {\r\n                _this.outstandingPromises.push({\r\n                    factory: promiseFactory,\r\n                    c: c,\r\n                    e: e,\r\n                    p: p\r\n                });\r\n                _this.consume();\r\n            });\r\n        };\r\n        Limiter.prototype.consume = function () {\r\n            var _this = this;\r\n            while (this.outstandingPromises.length && this.runningPromises < this.maxDegreeOfParalellism) {\r\n                var iLimitedTask = this.outstandingPromises.shift();\r\n                this.runningPromises++;\r\n                var promise = iLimitedTask.factory();\r\n                promise.done(iLimitedTask.c, iLimitedTask.e, iLimitedTask.p);\r\n                promise.done(function () { return _this.consumed(); }, function () { return _this.consumed(); });\r\n            }\r\n        };\r\n        Limiter.prototype.consumed = function () {\r\n            this.runningPromises--;\r\n            this.consume();\r\n        };\r\n        return Limiter;\r\n    })();\r\n    exports.Limiter = Limiter;\r\n    var RunOnceScheduler = (function () {\r\n        function RunOnceScheduler(runner, timeout) {\r\n            this.timeoutToken = -1;\r\n            this.runner = runner;\r\n            this.timeout = timeout;\r\n            this.timeoutHandler = this.onTimeout.bind(this);\r\n        }\r\n        /**\r\n         * Dispose RunOnceScheduler\r\n         */\r\n        RunOnceScheduler.prototype.dispose = function () {\r\n            this.cancel();\r\n            this.runner = null;\r\n        };\r\n        /**\r\n         * Cancel current scheduled runner (if any).\r\n         */\r\n        RunOnceScheduler.prototype.cancel = function () {\r\n            if (this.timeoutToken !== -1) {\r\n                platform.clearTimeout(this.timeoutToken);\r\n                this.timeoutToken = -1;\r\n            }\r\n        };\r\n        /**\r\n         * Replace runner. If there is a runner already scheduled, the new runner will be called.\r\n         */\r\n        RunOnceScheduler.prototype.setRunner = function (runner) {\r\n            this.runner = runner;\r\n        };\r\n        /**\r\n         * Set timeout. This change will only impact new schedule calls.\r\n         */\r\n        RunOnceScheduler.prototype.setTimeout = function (timeout) {\r\n            this.timeout = timeout;\r\n        };\r\n        /**\r\n         * Cancel previous runner (if any) & schedule a new runner.\r\n         */\r\n        RunOnceScheduler.prototype.schedule = function () {\r\n            this.cancel();\r\n            this.timeoutToken = platform.setTimeout(this.timeoutHandler, this.timeout);\r\n        };\r\n        RunOnceScheduler.prototype.onTimeout = function () {\r\n            this.timeoutToken = -1;\r\n            if (this.runner) {\r\n                this.runner();\r\n            }\r\n        };\r\n        return RunOnceScheduler;\r\n    })();\r\n    exports.RunOnceScheduler = RunOnceScheduler;\r\n    function nfcall(fn) {\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        return new winjs_base_1.Promise(function (c, e) { return fn.apply(void 0, args.concat([function (err, result) { return err ? e(err) : c(result); }])); });\r\n    }\r\n    exports.nfcall = nfcall;\r\n    function ninvoke(thisArg, fn) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        return new winjs_base_1.Promise(function (c, e) { return fn.call.apply(fn, [thisArg].concat(args, [function (err, result) { return err ? e(err) : c(result); }])); });\r\n    }\r\n    exports.ninvoke = ninvoke;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/base/common/service\", [\"require\", \"exports\", 'vs/base/common/winjs.base', 'vs/base/common/objects', 'vs/base/common/lifecycle', 'vs/base/common/event'], function (require, exports, winjs_base_1, objects_1, lifecycle_1, event_1) {\r\n    var RequestType;\r\n    (function (RequestType) {\r\n        RequestType[RequestType[\"Common\"] = 0] = \"Common\";\r\n        RequestType[RequestType[\"Cancel\"] = 1] = \"Cancel\";\r\n    })(RequestType || (RequestType = {}));\r\n    var ResponseType;\r\n    (function (ResponseType) {\r\n        ResponseType[ResponseType[\"Initialize\"] = 0] = \"Initialize\";\r\n        ResponseType[ResponseType[\"Success\"] = 1] = \"Success\";\r\n        ResponseType[ResponseType[\"Progress\"] = 2] = \"Progress\";\r\n        ResponseType[ResponseType[\"Error\"] = 3] = \"Error\";\r\n        ResponseType[ResponseType[\"ErrorObj\"] = 4] = \"ErrorObj\";\r\n    })(ResponseType || (ResponseType = {}));\r\n    var ServiceState;\r\n    (function (ServiceState) {\r\n        ServiceState[ServiceState[\"Uninitialized\"] = 0] = \"Uninitialized\";\r\n        ServiceState[ServiceState[\"Idle\"] = 1] = \"Idle\";\r\n    })(ServiceState || (ServiceState = {}));\r\n    var ServiceEventProperty = '$__SERVICE_EVENT';\r\n    /**\r\n     * Use this as a property decorator.\r\n     */\r\n    function ServiceEvent(target, key) {\r\n        target[key] = (_a = {}, _a[ServiceEventProperty] = true, _a);\r\n        var _a;\r\n    }\r\n    exports.ServiceEvent = ServiceEvent;\r\n    function isServiceEvent(target) {\r\n        return target[ServiceEventProperty];\r\n    }\r\n    exports.isServiceEvent = isServiceEvent;\r\n    var Server = (function () {\r\n        function Server(protocol) {\r\n            var _this = this;\r\n            this.protocol = protocol;\r\n            this.services = Object.create(null);\r\n            this.activeRequests = Object.create(null);\r\n            this.protocol.onMessage(function (r) { return _this.onMessage(r); });\r\n            this.protocol.send({ type: ResponseType.Initialize });\r\n        }\r\n        Server.prototype.registerService = function (serviceName, service) {\r\n            this.services[serviceName] = service;\r\n        };\r\n        Server.prototype.onMessage = function (request) {\r\n            switch (request.type) {\r\n                case RequestType.Common:\r\n                    this.onCommonRequest(request);\r\n                    break;\r\n                case RequestType.Cancel:\r\n                    this.onCancelRequest(request);\r\n                    break;\r\n            }\r\n        };\r\n        Server.prototype.onCommonRequest = function (request) {\r\n            var service = this.services[request.serviceName];\r\n            var servicePrototype = service.constructor.prototype;\r\n            var prototypeMethod = servicePrototype && servicePrototype[request.name];\r\n            var isEvent = prototypeMethod && prototypeMethod[ServiceEventProperty];\r\n            var method = service[request.name];\r\n            var promise;\r\n            if (isEvent) {\r\n                var disposable;\r\n                promise = new winjs_base_1.Promise(function (c, e, p) { return disposable = method.call(service, p); }, function () { return disposable.dispose(); });\r\n            }\r\n            else {\r\n                if (!method) {\r\n                    promise = winjs_base_1.Promise.wrapError(new Error(request.name + \" is not a valid method on \" + request.serviceName));\r\n                }\r\n                else {\r\n                    try {\r\n                        promise = method.call.apply(method, [service].concat(request.args));\r\n                    }\r\n                    catch (err) {\r\n                        promise = winjs_base_1.Promise.wrapError(err);\r\n                    }\r\n                }\r\n                if (!winjs_base_1.Promise.is(promise)) {\r\n                    var message = \"'\" + request.name + \"' did not return a promise\";\r\n                    console.warn(message);\r\n                    promise = winjs_base_1.Promise.wrapError(new Error(message));\r\n                }\r\n            }\r\n            this.onPromiseRequest(promise, request);\r\n        };\r\n        Server.prototype.onPromiseRequest = function (promise, request) {\r\n            var _this = this;\r\n            var id = request.id;\r\n            var requestPromise = promise.then(function (data) {\r\n                _this.protocol.send({ id: id, data: data, type: ResponseType.Success });\r\n                delete _this.activeRequests[request.id];\r\n            }, function (data) {\r\n                if (data instanceof Error) {\r\n                    _this.protocol.send({ id: id, data: {\r\n                            message: data.message,\r\n                            name: data.name,\r\n                            stack: data.stack ? data.stack.split('\\n') : void 0\r\n                        }, type: ResponseType.Error });\r\n                }\r\n                else {\r\n                    _this.protocol.send({ id: id, data: data, type: ResponseType.ErrorObj });\r\n                }\r\n                delete _this.activeRequests[request.id];\r\n            }, function (data) {\r\n                _this.protocol.send({ id: id, data: data, type: ResponseType.Progress });\r\n            });\r\n            this.activeRequests[request.id] = lifecycle_1.fnToDisposable(function () { return requestPromise.cancel(); });\r\n        };\r\n        Server.prototype.onCancelRequest = function (request) {\r\n            var disposable = this.activeRequests[request.id];\r\n            if (disposable) {\r\n                disposable.dispose();\r\n                delete this.activeRequests[request.id];\r\n            }\r\n        };\r\n        Server.prototype.dispose = function () {\r\n            var _this = this;\r\n            Object.keys(this.activeRequests).forEach(function (id) {\r\n                _this.activeRequests[id].dispose();\r\n            });\r\n            this.activeRequests = null;\r\n        };\r\n        return Server;\r\n    })();\r\n    exports.Server = Server;\r\n    var Client = (function () {\r\n        function Client(protocol) {\r\n            var _this = this;\r\n            this.protocol = protocol;\r\n            this.state = ServiceState.Uninitialized;\r\n            this.bufferedRequests = [];\r\n            this.handlers = Object.create(null);\r\n            this.lastRequestId = 0;\r\n            this.protocol.onMessage(function (r) { return _this.onMessage(r); });\r\n        }\r\n        Client.prototype.getService = function (serviceName, serviceCtor) {\r\n            var _this = this;\r\n            var props = Object.keys(serviceCtor.prototype)\r\n                .filter(function (key) { return key !== 'constructor'; });\r\n            return props.reduce(function (service, key) {\r\n                if (serviceCtor.prototype[key][ServiceEventProperty]) {\r\n                    var promise;\r\n                    var emitter = new event_1.Emitter({\r\n                        onFirstListenerAdd: function () {\r\n                            promise = _this.request(serviceName, key)\r\n                                .then(null, null, function (event) { return emitter.fire(event); });\r\n                        },\r\n                        onLastListenerRemove: function () {\r\n                            promise.cancel();\r\n                            promise = null;\r\n                        }\r\n                    });\r\n                    return objects_1.assign(service, (_a = {}, _a[key] = emitter.event, _a));\r\n                }\r\n                return objects_1.assign(service, (_b = {}, _b[key] = function () {\r\n                    var args = [];\r\n                    for (var _i = 0; _i < arguments.length; _i++) {\r\n                        args[_i - 0] = arguments[_i];\r\n                    }\r\n                    return _this.request.apply(_this, [serviceName, key].concat(args));\r\n                }, _b));\r\n                var _a, _b;\r\n            }, {});\r\n        };\r\n        Client.prototype.request = function (serviceName, name) {\r\n            var args = [];\r\n            for (var _i = 2; _i < arguments.length; _i++) {\r\n                args[_i - 2] = arguments[_i];\r\n            }\r\n            var request = {\r\n                raw: {\r\n                    id: this.lastRequestId++,\r\n                    type: RequestType.Common,\r\n                    serviceName: serviceName,\r\n                    name: name,\r\n                    args: args\r\n                }\r\n            };\r\n            if (this.state === ServiceState.Uninitialized) {\r\n                return this.bufferRequest(request);\r\n            }\r\n            return this.doRequest(request);\r\n        };\r\n        Client.prototype.doRequest = function (request) {\r\n            var _this = this;\r\n            var id = request.raw.id;\r\n            return new winjs_base_1.Promise(function (c, e, p) {\r\n                _this.handlers[id] = function (response) {\r\n                    switch (response.type) {\r\n                        case ResponseType.Success:\r\n                            delete _this.handlers[id];\r\n                            c(response.data);\r\n                            break;\r\n                        case ResponseType.Error:\r\n                            delete _this.handlers[id];\r\n                            var error = new Error(response.data.message);\r\n                            error.stack = response.data.stack;\r\n                            error.name = response.data.name;\r\n                            e(error);\r\n                            break;\r\n                        case ResponseType.ErrorObj:\r\n                            delete _this.handlers[id];\r\n                            e(response.data);\r\n                            break;\r\n                        case ResponseType.Progress:\r\n                            p(response.data);\r\n                            break;\r\n                    }\r\n                };\r\n                _this.send(request.raw);\r\n            }, function () { return _this.send({ id: id, type: RequestType.Cancel }); });\r\n        };\r\n        Client.prototype.bufferRequest = function (request) {\r\n            var _this = this;\r\n            var flushedRequest = null;\r\n            return new winjs_base_1.Promise(function (c, e, p) {\r\n                _this.bufferedRequests.push(request);\r\n                request.flush = function () {\r\n                    request.flush = null;\r\n                    flushedRequest = _this.doRequest(request).then(c, e, p);\r\n                };\r\n            }, function () {\r\n                request.flush = null;\r\n                if (_this.state !== ServiceState.Uninitialized) {\r\n                    if (flushedRequest) {\r\n                        flushedRequest.cancel();\r\n                        flushedRequest = null;\r\n                    }\r\n                    return;\r\n                }\r\n                var idx = _this.bufferedRequests.indexOf(request);\r\n                if (idx === -1) {\r\n                    return;\r\n                }\r\n                _this.bufferedRequests.splice(idx, 1);\r\n            });\r\n        };\r\n        Client.prototype.onMessage = function (response) {\r\n            if (this.state === ServiceState.Uninitialized && response.type === ResponseType.Initialize) {\r\n                this.state = ServiceState.Idle;\r\n                this.bufferedRequests.forEach(function (r) { return r.flush && r.flush(); });\r\n                this.bufferedRequests = null;\r\n                return;\r\n            }\r\n            var handler = this.handlers[response.id];\r\n            if (handler) {\r\n                handler(response);\r\n            }\r\n        };\r\n        Client.prototype.send = function (raw) {\r\n            try {\r\n                this.protocol.send(raw);\r\n            }\r\n            catch (err) {\r\n            }\r\n        };\r\n        return Client;\r\n    })();\r\n    exports.Client = Client;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/base/node/extfs\", [\"require\", \"exports\", 'vs/base/common/uuid', 'vs/base/common/strings', 'vs/base/common/platform', 'vs/base/node/flow', 'fs', 'path'], function (require, exports, uuid, strings, platform, flow, fs, paths) {\r\n    var loop = flow.loop;\r\n    var sequence = flow.sequence;\r\n    var normalizedCache = Object.create(null);\r\n    function readdir(path, callback) {\r\n        // Mac: uses NFD unicode form on disk, but we want NFC\r\n        // See also https://github.com/nodejs/node/issues/2165\r\n        if (platform.isMacintosh) {\r\n            return readdirNormalize(path, function (error, children) {\r\n                if (error) {\r\n                    return callback(error, null);\r\n                }\r\n                return callback(null, children.map(function (c) { return strings.normalizeNFC(c, normalizedCache); }));\r\n            });\r\n        }\r\n        return readdirNormalize(path, callback);\r\n    }\r\n    exports.readdir = readdir;\r\n    ;\r\n    function readdirNormalize(path, callback) {\r\n        fs.readdir(path, function (error, children) {\r\n            if (error) {\r\n                return callback(error, null);\r\n            }\r\n            // Bug in node: In some environments we get \".\" and \"..\" as entries from the call to readdir().\r\n            // For example Sharepoint via WebDav on Windows includes them. We never want those\r\n            // entries in the result set though because they are not valid children of the folder\r\n            // for our concerns.\r\n            // See https://github.com/nodejs/node/issues/4002\r\n            return callback(null, children.filter(function (c) { return c !== '.' && c !== '..'; }));\r\n        });\r\n    }\r\n    function mkdirp(path, mode, callback) {\r\n        fs.exists(path, function (exists) {\r\n            if (exists) {\r\n                return isDirectory(path, function (err, itIs) {\r\n                    if (err) {\r\n                        return callback(err);\r\n                    }\r\n                    if (!itIs) {\r\n                        return callback(new Error('\"' + path + '\" is not a directory.'));\r\n                    }\r\n                    callback(null);\r\n                });\r\n            }\r\n            mkdirp(paths.dirname(path), mode, function (err) {\r\n                if (err) {\r\n                    callback(err);\r\n                    return;\r\n                }\r\n                if (mode) {\r\n                    fs.mkdir(path, mode, function (error) {\r\n                        if (error) {\r\n                            return callback(error);\r\n                        }\r\n                        fs.chmod(path, mode, callback); // we need to explicitly chmod because of https://github.com/nodejs/node/issues/1104\r\n                    });\r\n                }\r\n                else {\r\n                    fs.mkdir(path, null, callback);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    exports.mkdirp = mkdirp;\r\n    function isDirectory(path, callback) {\r\n        fs.stat(path, function (error, stat) {\r\n            if (error) {\r\n                return callback(error);\r\n            }\r\n            callback(null, stat.isDirectory());\r\n        });\r\n    }\r\n    function copy(source, target, callback, copiedSources) {\r\n        if (!copiedSources) {\r\n            copiedSources = Object.create(null);\r\n        }\r\n        fs.stat(source, function (error, stat) {\r\n            if (error) {\r\n                return callback(error);\r\n            }\r\n            if (!stat.isDirectory()) {\r\n                return pipeFs(source, target, stat.mode & 511, callback);\r\n            }\r\n            if (copiedSources[source]) {\r\n                return callback(null); // escape when there are cycles (can happen with symlinks)\r\n            }\r\n            else {\r\n                copiedSources[source] = true; // remember as copied\r\n            }\r\n            mkdirp(target, stat.mode & 511, function (err) {\r\n                readdir(source, function (err, files) {\r\n                    loop(files, function (file, clb) {\r\n                        copy(paths.join(source, file), paths.join(target, file), clb, copiedSources);\r\n                    }, callback);\r\n                });\r\n            });\r\n        });\r\n    }\r\n    exports.copy = copy;\r\n    function pipeFs(source, target, mode, callback) {\r\n        var callbackHandled = false;\r\n        var readStream = fs.createReadStream(source);\r\n        var writeStream = fs.createWriteStream(target, { mode: mode });\r\n        var onError = function (error) {\r\n            if (!callbackHandled) {\r\n                callbackHandled = true;\r\n                callback(error);\r\n            }\r\n        };\r\n        readStream.on('error', onError);\r\n        writeStream.on('error', onError);\r\n        readStream.on('end', function () {\r\n            writeStream.end(function () {\r\n                if (!callbackHandled) {\r\n                    callbackHandled = true;\r\n                    fs.chmod(target, mode, callback); // we need to explicitly chmod because of https://github.com/nodejs/node/issues/1104\r\n                }\r\n            });\r\n        });\r\n        // In node 0.8 there is no easy way to find out when the pipe operation has finished. As such, we use the end property = false\r\n        // so that we are in charge of calling end() on the write stream and we will be notified when the write stream is really done.\r\n        // We can do this because file streams have an end() method that allows to pass in a callback.\r\n        // In node 0.10 there is an event 'finish' emitted from the write stream that can be used. See\r\n        // https://groups.google.com/forum/?fromgroups=#!topic/nodejs/YWQ1sRoXOdI\r\n        readStream.pipe(writeStream, { end: false });\r\n    }\r\n    // Deletes the given path by first moving it out of the workspace. This has two benefits. For one, the operation can return fast because\r\n    // after the rename, the contents are out of the workspace although not yet deleted. The greater benefit however is that this operation\r\n    // will fail in case any file is used by another process. fs.unlink() in node will not bail if a file unlinked is used by another process.\r\n    // However, the consequences are bad as outlined in all the related bugs from https://github.com/joyent/node/issues/7164\r\n    function del(path, tmpFolder, callback, done) {\r\n        fs.exists(path, function (exists) {\r\n            if (!exists) {\r\n                return callback(null);\r\n            }\r\n            fs.stat(path, function (err, stat) {\r\n                if (err || !stat) {\r\n                    return callback(err);\r\n                }\r\n                // Special windows workaround: A file or folder that ends with a \".\" cannot be moved to another place\r\n                // because it is not a valid file name. In this case, we really have to do the deletion without prior move.\r\n                if (path[path.length - 1] === '.' || strings.endsWith(path, './') || strings.endsWith(path, '.\\\\')) {\r\n                    return rmRecursive(path, callback);\r\n                }\r\n                var pathInTemp = paths.join(tmpFolder, uuid.generateUuid());\r\n                fs.rename(path, pathInTemp, function (error) {\r\n                    if (error) {\r\n                        return rmRecursive(path, callback); // if rename fails, delete without tmp dir\r\n                    }\r\n                    // Return early since the move succeeded\r\n                    callback(null);\r\n                    // do the heavy deletion outside the callers callback\r\n                    rmRecursive(pathInTemp, function (error) {\r\n                        if (error) {\r\n                            console.error(error);\r\n                        }\r\n                        if (done) {\r\n                            done(error);\r\n                        }\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    }\r\n    exports.del = del;\r\n    function rmRecursive(path, callback) {\r\n        if (path === '\\\\' || path === '/') {\r\n            return callback(new Error('Will not delete root!'));\r\n        }\r\n        fs.exists(path, function (exists) {\r\n            if (!exists) {\r\n                callback(null);\r\n            }\r\n            else {\r\n                fs.lstat(path, function (err, stat) {\r\n                    if (err || !stat) {\r\n                        callback(err);\r\n                    }\r\n                    else if (!stat.isDirectory() || stat.isSymbolicLink() /* !!! never recurse into links when deleting !!! */) {\r\n                        var mode = stat.mode;\r\n                        if (!(mode & 128)) {\r\n                            fs.chmod(path, mode | 128, function (err) {\r\n                                if (err) {\r\n                                    callback(err);\r\n                                }\r\n                                else {\r\n                                    fs.unlink(path, callback);\r\n                                }\r\n                            });\r\n                        }\r\n                        else {\r\n                            fs.unlink(path, callback);\r\n                        }\r\n                    }\r\n                    else {\r\n                        readdir(path, function (err, children) {\r\n                            if (err || !children) {\r\n                                callback(err);\r\n                            }\r\n                            else if (children.length === 0) {\r\n                                fs.rmdir(path, callback);\r\n                            }\r\n                            else {\r\n                                var firstError = null;\r\n                                var childrenLeft = children.length;\r\n                                children.forEach(function (child) {\r\n                                    rmRecursive(paths.join(path, child), function (err) {\r\n                                        childrenLeft--;\r\n                                        if (err) {\r\n                                            firstError = firstError || err;\r\n                                        }\r\n                                        if (childrenLeft === 0) {\r\n                                            if (firstError) {\r\n                                                callback(firstError);\r\n                                            }\r\n                                            else {\r\n                                                fs.rmdir(path, callback);\r\n                                            }\r\n                                        }\r\n                                    });\r\n                                });\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n    function mv(source, target, callback) {\r\n        if (source === target) {\r\n            return callback(null);\r\n        }\r\n        function updateMtime(err) {\r\n            if (err) {\r\n                return callback(err);\r\n            }\r\n            fs.stat(target, function (error, stat) {\r\n                if (error) {\r\n                    return callback(error);\r\n                }\r\n                if (stat.isDirectory()) {\r\n                    return callback(null);\r\n                }\r\n                fs.open(target, 'a', null, function (err, fd) {\r\n                    if (err) {\r\n                        return callback(err);\r\n                    }\r\n                    fs.futimes(fd, stat.atime, new Date(), function (err) {\r\n                        if (err) {\r\n                            return callback(err);\r\n                        }\r\n                        fs.close(fd, callback);\r\n                    });\r\n                });\r\n            });\r\n        }\r\n        // Try native rename()\r\n        fs.rename(source, target, function (err) {\r\n            if (!err) {\r\n                return updateMtime(null);\r\n            }\r\n            // In two cases we fallback to classic copy and delete:\r\n            //\r\n            // 1.) The EXDEV error indicates that source and target are on different devices\r\n            // In this case, fallback to using a copy() operation as there is no way to\r\n            // rename() between different devices.\r\n            //\r\n            // 2.) The user tries to rename a file/folder that ends with a dot. This is not\r\n            // really possible to move then, at least on UNC devices.\r\n            if (err && source.toLowerCase() !== target.toLowerCase() && (err.code === 'EXDEV') || strings.endsWith(source, '.')) {\r\n                return copy(source, target, function (err) {\r\n                    if (err) {\r\n                        return callback(err);\r\n                    }\r\n                    rmRecursive(source, updateMtime);\r\n                });\r\n            }\r\n            return callback(err);\r\n        });\r\n    }\r\n    exports.mv = mv;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/base/node/pfs\", [\"require\", \"exports\", 'vs/base/common/winjs.base', 'vs/base/node/extfs', 'vs/base/common/paths', 'path', 'vs/base/common/async', 'fs'], function (require, exports, winjs_base_1, extfs, paths, path_1, async_1, fs) {\r\n    function isRoot(path) {\r\n        return path === path_1.dirname(path);\r\n    }\r\n    exports.isRoot = isRoot;\r\n    function readdir(path) {\r\n        return async_1.nfcall(extfs.readdir, path);\r\n    }\r\n    exports.readdir = readdir;\r\n    function exists(path) {\r\n        return new winjs_base_1.Promise(function (c) { return fs.exists(path, c); });\r\n    }\r\n    exports.exists = exists;\r\n    function chmod(path, mode) {\r\n        return async_1.nfcall(fs.chmod, path, mode);\r\n    }\r\n    exports.chmod = chmod;\r\n    function mkdirp(path, mode) {\r\n        var mkdir = function () { return async_1.nfcall(fs.mkdir, path, mode)\r\n            .then(null, function (err) {\r\n            if (err.code === 'EEXIST') {\r\n                return async_1.nfcall(fs.stat, path)\r\n                    .then(function (stat) { return stat.isDirectory\r\n                    ? null\r\n                    : winjs_base_1.Promise.wrapError(new Error(\"'\" + path + \"' exists and is not a directory.\")); });\r\n            }\r\n            return winjs_base_1.TPromise.wrapError(err);\r\n        }); };\r\n        if (isRoot(path)) {\r\n            return winjs_base_1.TPromise.as(true);\r\n        }\r\n        return mkdir().then(null, function (err) {\r\n            if (err.code === 'ENOENT') {\r\n                return mkdirp(path_1.dirname(path), mode).then(mkdir);\r\n            }\r\n            return winjs_base_1.TPromise.wrapError(err);\r\n        });\r\n    }\r\n    exports.mkdirp = mkdirp;\r\n    function rimraf(path) {\r\n        return stat(path).then(function (stat) {\r\n            if (stat.isDirectory()) {\r\n                return readdir(path)\r\n                    .then(function (children) { return winjs_base_1.TPromise.join(children.map(function (child) { return rimraf(path_1.join(path, child)); })); })\r\n                    .then(function () { return rmdir(path); });\r\n            }\r\n            else {\r\n                return unlink(path);\r\n            }\r\n        }, function (err) {\r\n            if (err.code === 'ENOENT') {\r\n                return;\r\n            }\r\n            return winjs_base_1.TPromise.wrapError(err);\r\n        });\r\n    }\r\n    exports.rimraf = rimraf;\r\n    function realpath(path) {\r\n        return async_1.nfcall(fs.realpath, path, null);\r\n    }\r\n    exports.realpath = realpath;\r\n    function stat(path) {\r\n        return async_1.nfcall(fs.stat, path);\r\n    }\r\n    exports.stat = stat;\r\n    function mstat(paths) {\r\n        return doStatMultiple(paths.slice(0));\r\n    }\r\n    exports.mstat = mstat;\r\n    function rename(oldPath, newPath) {\r\n        return async_1.nfcall(fs.rename, oldPath, newPath);\r\n    }\r\n    exports.rename = rename;\r\n    function rmdir(path) {\r\n        return async_1.nfcall(fs.rmdir, path);\r\n    }\r\n    exports.rmdir = rmdir;\r\n    function unlink(path) {\r\n        return async_1.nfcall(fs.unlink, path);\r\n    }\r\n    exports.unlink = unlink;\r\n    function doStatMultiple(paths) {\r\n        var path = paths.shift();\r\n        return stat(path).then(function (value) {\r\n            return {\r\n                path: path,\r\n                stats: value\r\n            };\r\n        }, function (err) {\r\n            if (paths.length === 0) {\r\n                return err;\r\n            }\r\n            return mstat(paths);\r\n        });\r\n    }\r\n    function readFile(path, encoding) {\r\n        return async_1.nfcall(fs.readFile, path, encoding);\r\n    }\r\n    exports.readFile = readFile;\r\n    function writeFile(path, data, encoding) {\r\n        if (encoding === void 0) { encoding = 'utf8'; }\r\n        return async_1.nfcall(fs.writeFile, path, data, encoding);\r\n    }\r\n    exports.writeFile = writeFile;\r\n    /**\r\n    * Read a dir and return only subfolders\r\n    */\r\n    function readDirsInDir(dirPath) {\r\n        return readdir(dirPath).then(function (children) {\r\n            return winjs_base_1.TPromise.join(children.map(function (child) { return dirExistsWithResult(paths.join(dirPath, child), child); })).then(function (subdirs) {\r\n                return removeNull(subdirs);\r\n            });\r\n        });\r\n    }\r\n    exports.readDirsInDir = readDirsInDir;\r\n    function dirExistsWithResult(path, successResult) {\r\n        return dirExists(path).then(function (exists) {\r\n            return exists ? successResult : null;\r\n        });\r\n    }\r\n    /**\r\n    * `path` exists and is a directory\r\n    */\r\n    function dirExists(path) {\r\n        return stat(path).then(function (stat) { return stat.isDirectory(); }, function () { return false; });\r\n    }\r\n    exports.dirExists = dirExists;\r\n    /**\r\n    * `path` exists and is a file.\r\n    */\r\n    function fileExists(path) {\r\n        return stat(path).then(function (stat) { return stat.isFile(); }, function () { return false; });\r\n    }\r\n    exports.fileExists = fileExists;\r\n    /**\r\n    * Read dir at `path` and return only files matching `pattern`\r\n    */\r\n    function readFiles(path, pattern) {\r\n        return readdir(path).then(function (children) {\r\n            children = children.filter(function (child) {\r\n                return pattern.test(child);\r\n            });\r\n            var fileChildren = children.map(function (child) {\r\n                return fileExistsWithResult(paths.join(path, child), child);\r\n            });\r\n            return winjs_base_1.TPromise.join(fileChildren).then(function (subdirs) {\r\n                return removeNull(subdirs);\r\n            });\r\n        });\r\n    }\r\n    exports.readFiles = readFiles;\r\n    function fileExistsWithResult(path, successResult) {\r\n        return fileExists(path).then(function (exists) {\r\n            return exists ? successResult : null;\r\n        }, function (err) {\r\n            return winjs_base_1.TPromise.wrapError(err);\r\n        });\r\n    }\r\n    exports.fileExistsWithResult = fileExistsWithResult;\r\n    function removeNull(arr) {\r\n        return arr.filter(function (item) { return (item !== null); });\r\n    }\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/base/node/request\", [\"require\", \"exports\", 'vs/base/common/winjs.base', 'https', 'http', 'url', 'fs', 'vs/base/common/objects'], function (require, exports, winjs_base_1, https, http, url_1, fs_1, objects_1) {\r\n    function request(options) {\r\n        var req;\r\n        return new winjs_base_1.TPromise(function (c, e) {\r\n            var endpoint = url_1.parse(options.url);\r\n            var opts = {\r\n                hostname: endpoint.hostname,\r\n                port: endpoint.port ? parseInt(endpoint.port) : (endpoint.protocol === 'https:' ? 443 : 80),\r\n                path: endpoint.path,\r\n                method: options.type || 'GET',\r\n                headers: options.headers,\r\n                agent: options.agent\r\n            };\r\n            if (options.user && options.password) {\r\n                opts.auth = options.user + ':' + options.password;\r\n            }\r\n            var protocol = endpoint.protocol === 'https:' ? https : http;\r\n            req = protocol.request(opts, function (res) {\r\n                if (res.statusCode >= 300 && res.statusCode < 400 && options.followRedirects && options.followRedirects > 0 && res.headers['location']) {\r\n                    c(request(objects_1.assign({}, options, {\r\n                        url: res.headers['location'],\r\n                        followRedirects: options.followRedirects - 1\r\n                    })));\r\n                }\r\n                else {\r\n                    c({ req: req, res: res });\r\n                }\r\n            });\r\n            req.on('error', e);\r\n            options.timeout && req.setTimeout(options.timeout);\r\n            options.data && req.write(options.data);\r\n            req.end();\r\n        }, function () { return req && req.abort(); });\r\n    }\r\n    exports.request = request;\r\n    function download(filePath, opts) {\r\n        return request(objects_1.assign(opts, { followRedirects: 3 })).then(function (pair) { return new winjs_base_1.Promise(function (c, e) {\r\n            var out = fs_1.createWriteStream(filePath);\r\n            out.once('finish', function () { return c(null); });\r\n            pair.res.once('error', e);\r\n            pair.res.pipe(out);\r\n        }); });\r\n    }\r\n    exports.download = download;\r\n    function json(opts) {\r\n        return request(opts).then(function (pair) { return new winjs_base_1.Promise(function (c, e) {\r\n            if (!((pair.res.statusCode >= 200 && pair.res.statusCode < 300) || pair.res.statusCode === 1223)) {\r\n                return e('Server returned ' + pair.res.statusCode);\r\n            }\r\n            if (pair.res.statusCode === 204) {\r\n                return c(null);\r\n            }\r\n            if (!/application\\/json/.test(pair.res.headers['content-type'])) {\r\n                return e('Response doesn\\'t appear to be JSON');\r\n            }\r\n            var buffer = [];\r\n            pair.res.on('data', function (d) { return buffer.push(d); });\r\n            pair.res.on('end', function () { return c(JSON.parse(buffer.join(''))); });\r\n            pair.res.on('error', e);\r\n        }); });\r\n    }\r\n    exports.json = json;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/base/node/service.net\", [\"require\", \"exports\", 'net', 'vs/base/common/service', 'vs/base/common/winjs.base'], function (require, exports, net, service_1, winjs_base_1) {\r\n    function bufferIndexOf(buffer, value, start) {\r\n        if (start === void 0) { start = 0; }\r\n        while (start < buffer.length && buffer[start] !== value) {\r\n            start++;\r\n        }\r\n        return start;\r\n    }\r\n    var Protocol = (function () {\r\n        function Protocol(socket) {\r\n            this.socket = socket;\r\n            this.buffer = null;\r\n        }\r\n        Protocol.prototype.send = function (message) {\r\n            this.socket.write(JSON.stringify(message));\r\n            this.socket.write(Protocol.Boundary);\r\n        };\r\n        Protocol.prototype.onMessage = function (callback) {\r\n            var _this = this;\r\n            this.socket.on('data', function (data) {\r\n                var lastIndex = 0;\r\n                var index = 0;\r\n                while ((index = bufferIndexOf(data, 0, lastIndex)) < data.length) {\r\n                    var dataToParse = data.slice(lastIndex, index);\r\n                    if (_this.buffer) {\r\n                        callback(JSON.parse(Buffer.concat([_this.buffer, dataToParse]).toString('utf8')));\r\n                        _this.buffer = null;\r\n                    }\r\n                    else {\r\n                        callback(JSON.parse(dataToParse.toString('utf8')));\r\n                    }\r\n                    lastIndex = index + 1;\r\n                }\r\n                if (index - lastIndex > 0) {\r\n                    var dataToBuffer = data.slice(lastIndex, index);\r\n                    if (_this.buffer) {\r\n                        _this.buffer = Buffer.concat([_this.buffer, dataToBuffer]);\r\n                    }\r\n                    else {\r\n                        _this.buffer = dataToBuffer;\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        Protocol.Boundary = new Buffer([0]);\r\n        return Protocol;\r\n    })();\r\n    var Server = (function () {\r\n        function Server(server) {\r\n            var _this = this;\r\n            this.server = server;\r\n            this.services = Object.create(null);\r\n            this.server.on('connection', function (socket) {\r\n                var ipcServer = new service_1.Server(new Protocol(socket));\r\n                Object.keys(_this.services)\r\n                    .forEach(function (name) { return ipcServer.registerService(name, _this.services[name]); });\r\n                socket.once('close', function () { return ipcServer.dispose(); });\r\n            });\r\n        }\r\n        Server.prototype.registerService = function (serviceName, service) {\r\n            this.services[serviceName] = service;\r\n        };\r\n        Server.prototype.dispose = function () {\r\n            this.services = null;\r\n            this.server.close();\r\n            this.server = null;\r\n        };\r\n        return Server;\r\n    })();\r\n    exports.Server = Server;\r\n    var Client = (function () {\r\n        function Client(socket) {\r\n            this.socket = socket;\r\n            this.ipcClient = new service_1.Client(new Protocol(socket));\r\n        }\r\n        Client.prototype.getService = function (serviceName, serviceCtor) {\r\n            return this.ipcClient.getService(serviceName, serviceCtor);\r\n        };\r\n        Client.prototype.dispose = function () {\r\n            this.socket.end();\r\n            this.socket = null;\r\n            this.ipcClient = null;\r\n        };\r\n        return Client;\r\n    })();\r\n    exports.Client = Client;\r\n    function serve(hook) {\r\n        return new winjs_base_1.TPromise(function (c, e) {\r\n            var server = net.createServer();\r\n            server.on('error', e);\r\n            server.listen(hook, function () {\r\n                server.removeListener('error', e);\r\n                c(new Server(server));\r\n            });\r\n        });\r\n    }\r\n    exports.serve = serve;\r\n    function connect(hook) {\r\n        return new winjs_base_1.TPromise(function (c, e) {\r\n            var socket = net.createConnection(hook, function () {\r\n                socket.removeListener('error', e);\r\n                c(new Client(socket));\r\n            });\r\n            socket.once('error', e);\r\n        });\r\n    }\r\n    exports.connect = connect;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/editor/common/model/tokensBinaryEncoding\", [\"require\", \"exports\", 'vs/base/common/strings', 'vs/base/common/errors'], function (require, exports, Strings, Errors) {\r\n    var InflatedToken = (function () {\r\n        function InflatedToken(startIndex, type, bracket) {\r\n            this.startIndex = startIndex;\r\n            this.type = type;\r\n            this.bracket = bracket;\r\n        }\r\n        InflatedToken.prototype.toString = function () {\r\n            return '{ ' + this.startIndex + ', \\'' + this.type + '\\', ' + this.bracket + '}';\r\n        };\r\n        return InflatedToken;\r\n    })();\r\n    exports.START_INDEX_MASK = 0xffffffff;\r\n    exports.TYPE_MASK = 0xffff;\r\n    exports.BRACKET_MASK = 0xff;\r\n    exports.START_INDEX_OFFSET = 1;\r\n    exports.TYPE_OFFSET = Math.pow(2, 32);\r\n    exports.BRACKET_OFFSET = Math.pow(2, 48);\r\n    var DEFAULT_TOKEN = {\r\n        startIndex: 0,\r\n        type: '',\r\n        bracket: 0\r\n    };\r\n    var INFLATED_TOKENS_EMPTY_TEXT = [];\r\n    var DEFLATED_TOKENS_EMPTY_TEXT = [];\r\n    var INFLATED_TOKENS_NON_EMPTY_TEXT = [DEFAULT_TOKEN];\r\n    var DEFLATED_TOKENS_NON_EMPTY_TEXT = [0];\r\n    function deflateArr(map, tokens) {\r\n        if (tokens.length === 0) {\r\n            return DEFLATED_TOKENS_EMPTY_TEXT;\r\n        }\r\n        if (tokens.length === 1 && tokens[0].startIndex === 0 && !tokens[0].type && !tokens[0].bracket) {\r\n            return DEFLATED_TOKENS_NON_EMPTY_TEXT;\r\n        }\r\n        var i, len, deflatedToken, deflatedBracket, deflated, token, inflateMap = map._inflate, deflateMap = map._deflate, prevStartIndex = -1, result = new Array(tokens.length);\r\n        for (i = 0, len = tokens.length; i < len; i++) {\r\n            token = tokens[i];\r\n            if (token.startIndex <= prevStartIndex) {\r\n                token.startIndex = prevStartIndex + 1;\r\n                Errors.onUnexpectedError({\r\n                    message: 'Invalid tokens detected',\r\n                    tokens: tokens\r\n                });\r\n            }\r\n            if (deflateMap.hasOwnProperty(token.type)) {\r\n                deflatedToken = deflateMap[token.type];\r\n            }\r\n            else {\r\n                deflatedToken = inflateMap.length;\r\n                deflateMap[token.type] = deflatedToken;\r\n                inflateMap.push(token.type);\r\n            }\r\n            deflatedBracket = token.bracket;\r\n            if (deflatedBracket < 0) {\r\n                deflatedBracket = 2;\r\n            }\r\n            // http://stackoverflow.com/a/2803010\r\n            // All numbers in JavaScript are actually IEEE-754 compliant floating-point doubles.\r\n            // These have a 53-bit mantissa which should mean that any integer value with a magnitude\r\n            // of approximately 9 quadrillion or less -- more specifically, 9,007,199,254,740,991 --\r\n            // will be represented accurately.\r\n            // http://stackoverflow.com/a/6729252\r\n            // Bitwise operations cast numbers to 32bit representation in JS\r\n            // 32 bits for startIndex => up to 2^32 = 4,294,967,296\r\n            // 16 bits for token => up to 2^16 = 65,536\r\n            // 2 bits for bracket => up to 2^2 = 4\r\n            // [bracket][token][startIndex]\r\n            deflated = deflatedBracket * exports.BRACKET_OFFSET + deflatedToken * exports.TYPE_OFFSET + token.startIndex * exports.START_INDEX_OFFSET;\r\n            result[i] = deflated;\r\n            prevStartIndex = token.startIndex;\r\n        }\r\n        return result;\r\n    }\r\n    exports.deflateArr = deflateArr;\r\n    function inflate(map, binaryEncodedToken) {\r\n        if (binaryEncodedToken === 0) {\r\n            return DEFAULT_TOKEN;\r\n        }\r\n        var startIndex = (binaryEncodedToken / exports.START_INDEX_OFFSET) & exports.START_INDEX_MASK;\r\n        var deflatedType = (binaryEncodedToken / exports.TYPE_OFFSET) & exports.TYPE_MASK;\r\n        var deflatedBracket = (binaryEncodedToken / exports.BRACKET_OFFSET) & exports.BRACKET_MASK;\r\n        if (deflatedBracket === 2) {\r\n            deflatedBracket = -1;\r\n        }\r\n        return new InflatedToken(startIndex, map._inflate[deflatedType], deflatedBracket);\r\n    }\r\n    exports.inflate = inflate;\r\n    function getStartIndex(binaryEncodedToken) {\r\n        return (binaryEncodedToken / exports.START_INDEX_OFFSET) & exports.START_INDEX_MASK;\r\n    }\r\n    exports.getStartIndex = getStartIndex;\r\n    function getType(map, binaryEncodedToken) {\r\n        var deflatedType = (binaryEncodedToken / exports.TYPE_OFFSET) & exports.TYPE_MASK;\r\n        if (deflatedType === 0) {\r\n            return Strings.empty;\r\n        }\r\n        return map._inflate[deflatedType];\r\n    }\r\n    exports.getType = getType;\r\n    function getBracket(binaryEncodedToken) {\r\n        var deflatedBracket = (binaryEncodedToken / exports.BRACKET_OFFSET) & exports.BRACKET_MASK;\r\n        if (deflatedBracket === 2) {\r\n            deflatedBracket = -1;\r\n        }\r\n        return deflatedBracket;\r\n    }\r\n    exports.getBracket = getBracket;\r\n    function inflateArr(map, binaryEncodedTokens) {\r\n        if (binaryEncodedTokens.length === 0) {\r\n            return INFLATED_TOKENS_EMPTY_TEXT;\r\n        }\r\n        if (binaryEncodedTokens.length === 1 && binaryEncodedTokens[0] === 0) {\r\n            return INFLATED_TOKENS_NON_EMPTY_TEXT;\r\n        }\r\n        var result = new Array(binaryEncodedTokens.length), i, len, deflated, startIndex, deflatedBracket, deflatedType, inflateMap = map._inflate;\r\n        for (i = 0, len = binaryEncodedTokens.length; i < len; i++) {\r\n            deflated = binaryEncodedTokens[i];\r\n            startIndex = (deflated / exports.START_INDEX_OFFSET) & exports.START_INDEX_MASK;\r\n            deflatedType = (deflated / exports.TYPE_OFFSET) & exports.TYPE_MASK;\r\n            deflatedBracket = (deflated / exports.BRACKET_OFFSET) & exports.BRACKET_MASK;\r\n            if (deflatedBracket === 2) {\r\n                deflatedBracket = -1;\r\n            }\r\n            result[i] = new InflatedToken(startIndex, inflateMap[deflatedType], deflatedBracket);\r\n        }\r\n        return result;\r\n    }\r\n    exports.inflateArr = inflateArr;\r\n    function findIndexOfOffset(binaryEncodedTokens, offset) {\r\n        return findIndexInSegmentsArray(binaryEncodedTokens, offset);\r\n    }\r\n    exports.findIndexOfOffset = findIndexOfOffset;\r\n    function sliceAndInflate(map, binaryEncodedTokens, startOffset, endOffset, deltaStartIndex) {\r\n        if (binaryEncodedTokens.length === 0) {\r\n            return INFLATED_TOKENS_EMPTY_TEXT;\r\n        }\r\n        if (binaryEncodedTokens.length === 1 && binaryEncodedTokens[0] === 0) {\r\n            return INFLATED_TOKENS_NON_EMPTY_TEXT;\r\n        }\r\n        var startIndex = findIndexInSegmentsArray(binaryEncodedTokens, startOffset), i, len, originalToken, originalStartIndex, newStartIndex, deflatedType, deflatedBracket, result = [], inflateMap = map._inflate;\r\n        originalToken = binaryEncodedTokens[startIndex];\r\n        deflatedType = (originalToken / exports.TYPE_OFFSET) & exports.TYPE_MASK;\r\n        deflatedBracket = (originalToken / exports.BRACKET_OFFSET) & exports.BRACKET_MASK;\r\n        newStartIndex = 0;\r\n        result.push(new InflatedToken(newStartIndex, inflateMap[deflatedType], deflatedBracket));\r\n        for (i = startIndex + 1, len = binaryEncodedTokens.length; i < len; i++) {\r\n            originalToken = binaryEncodedTokens[i];\r\n            originalStartIndex = (originalToken / exports.START_INDEX_OFFSET) & exports.START_INDEX_MASK;\r\n            if (originalStartIndex >= endOffset) {\r\n                break;\r\n            }\r\n            deflatedType = (originalToken / exports.TYPE_OFFSET) & exports.TYPE_MASK;\r\n            deflatedBracket = (originalToken / exports.BRACKET_OFFSET) & exports.BRACKET_MASK;\r\n            newStartIndex = originalStartIndex - startOffset + deltaStartIndex;\r\n            result.push(new InflatedToken(newStartIndex, inflateMap[deflatedType], deflatedBracket));\r\n        }\r\n        return result;\r\n    }\r\n    exports.sliceAndInflate = sliceAndInflate;\r\n    function findIndexInSegmentsArray(arr, desiredIndex) {\r\n        var low = 0, high = arr.length - 1, mid, value;\r\n        while (low < high) {\r\n            mid = low + Math.ceil((high - low) / 2);\r\n            value = arr[mid] & 0xffffffff;\r\n            if (value > desiredIndex) {\r\n                high = mid - 1;\r\n            }\r\n            else {\r\n                low = mid;\r\n            }\r\n        }\r\n        return low;\r\n    }\r\n    exports.findIndexInSegmentsArray = findIndexInSegmentsArray;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/editor/common/editorCommon\", [\"require\", \"exports\", 'vs/editor/common/model/tokensBinaryEncoding'], function (require, exports, TokensBinaryEncoding) {\r\n    /**\r\n     * The direction of a selection.\r\n     */\r\n    (function (SelectionDirection) {\r\n        /**\r\n         * The selection starts above where it ends.\r\n         */\r\n        SelectionDirection[SelectionDirection[\"LTR\"] = 0] = \"LTR\";\r\n        /**\r\n         * The selection starts below where it ends.\r\n         */\r\n        SelectionDirection[SelectionDirection[\"RTL\"] = 1] = \"RTL\";\r\n    })(exports.SelectionDirection || (exports.SelectionDirection = {}));\r\n    var SelectionDirection = exports.SelectionDirection;\r\n    ;\r\n    (function (WrappingIndent) {\r\n        WrappingIndent[WrappingIndent[\"None\"] = 0] = \"None\";\r\n        WrappingIndent[WrappingIndent[\"Same\"] = 1] = \"Same\";\r\n        WrappingIndent[WrappingIndent[\"Indent\"] = 2] = \"Indent\";\r\n    })(exports.WrappingIndent || (exports.WrappingIndent = {}));\r\n    var WrappingIndent = exports.WrappingIndent;\r\n    function wrappingIndentFromString(wrappingIndent) {\r\n        if (wrappingIndent === 'indent') {\r\n            return WrappingIndent.Indent;\r\n        }\r\n        else if (wrappingIndent === 'same') {\r\n            return WrappingIndent.Same;\r\n        }\r\n        else {\r\n            return WrappingIndent.None;\r\n        }\r\n    }\r\n    exports.wrappingIndentFromString = wrappingIndentFromString;\r\n    /**\r\n     * Vertical Lane in the overview ruler of the editor.\r\n     */\r\n    (function (OverviewRulerLane) {\r\n        OverviewRulerLane[OverviewRulerLane[\"Left\"] = 1] = \"Left\";\r\n        OverviewRulerLane[OverviewRulerLane[\"Center\"] = 2] = \"Center\";\r\n        OverviewRulerLane[OverviewRulerLane[\"Right\"] = 4] = \"Right\";\r\n        OverviewRulerLane[OverviewRulerLane[\"Full\"] = 7] = \"Full\";\r\n    })(exports.OverviewRulerLane || (exports.OverviewRulerLane = {}));\r\n    var OverviewRulerLane = exports.OverviewRulerLane;\r\n    /**\r\n     * End of line character preference.\r\n     */\r\n    (function (EndOfLinePreference) {\r\n        /**\r\n         * Use the end of line character identified in the text buffer.\r\n         */\r\n        EndOfLinePreference[EndOfLinePreference[\"TextDefined\"] = 0] = \"TextDefined\";\r\n        /**\r\n         * Use line feed (\\n) as the end of line character.\r\n         */\r\n        EndOfLinePreference[EndOfLinePreference[\"LF\"] = 1] = \"LF\";\r\n        /**\r\n         * Use carriage return and line feed (\\r\\n) as the end of line character.\r\n         */\r\n        EndOfLinePreference[EndOfLinePreference[\"CRLF\"] = 2] = \"CRLF\";\r\n    })(exports.EndOfLinePreference || (exports.EndOfLinePreference = {}));\r\n    var EndOfLinePreference = exports.EndOfLinePreference;\r\n    /**\r\n     * End of line character preference.\r\n     */\r\n    (function (EndOfLineSequence) {\r\n        /**\r\n         * Use line feed (\\n) as the end of line character.\r\n         */\r\n        EndOfLineSequence[EndOfLineSequence[\"LF\"] = 0] = \"LF\";\r\n        /**\r\n         * Use carriage return and line feed (\\r\\n) as the end of line character.\r\n         */\r\n        EndOfLineSequence[EndOfLineSequence[\"CRLF\"] = 1] = \"CRLF\";\r\n    })(exports.EndOfLineSequence || (exports.EndOfLineSequence = {}));\r\n    var EndOfLineSequence = exports.EndOfLineSequence;\r\n    exports.LineTokensBinaryEncoding = TokensBinaryEncoding;\r\n    (function (TrackedRangeStickiness) {\r\n        TrackedRangeStickiness[TrackedRangeStickiness[\"AlwaysGrowsWhenTypingAtEdges\"] = 0] = \"AlwaysGrowsWhenTypingAtEdges\";\r\n        TrackedRangeStickiness[TrackedRangeStickiness[\"NeverGrowsWhenTypingAtEdges\"] = 1] = \"NeverGrowsWhenTypingAtEdges\";\r\n        TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingBefore\"] = 2] = \"GrowsOnlyWhenTypingBefore\";\r\n        TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingAfter\"] = 3] = \"GrowsOnlyWhenTypingAfter\";\r\n    })(exports.TrackedRangeStickiness || (exports.TrackedRangeStickiness = {}));\r\n    var TrackedRangeStickiness = exports.TrackedRangeStickiness;\r\n    (function (VerticalRevealType) {\r\n        VerticalRevealType[VerticalRevealType[\"Simple\"] = 0] = \"Simple\";\r\n        VerticalRevealType[VerticalRevealType[\"Center\"] = 1] = \"Center\";\r\n        VerticalRevealType[VerticalRevealType[\"CenterIfOutsideViewport\"] = 2] = \"CenterIfOutsideViewport\";\r\n    })(exports.VerticalRevealType || (exports.VerticalRevealType = {}));\r\n    var VerticalRevealType = exports.VerticalRevealType;\r\n    /**\r\n     * Type of hit element with the mouse in the editor.\r\n     */\r\n    (function (MouseTargetType) {\r\n        /**\r\n         * Mouse is on top of an unknown element.\r\n         */\r\n        MouseTargetType[MouseTargetType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\r\n        /**\r\n         * Mouse is on top of the textarea used for input.\r\n         */\r\n        MouseTargetType[MouseTargetType[\"TEXTAREA\"] = 1] = \"TEXTAREA\";\r\n        /**\r\n         * Mouse is on top of the glyph margin\r\n         */\r\n        MouseTargetType[MouseTargetType[\"GUTTER_GLYPH_MARGIN\"] = 2] = \"GUTTER_GLYPH_MARGIN\";\r\n        /**\r\n         * Mouse is on top of the line numbers\r\n         */\r\n        MouseTargetType[MouseTargetType[\"GUTTER_LINE_NUMBERS\"] = 3] = \"GUTTER_LINE_NUMBERS\";\r\n        /**\r\n         * Mouse is on top of the line decorations\r\n         */\r\n        MouseTargetType[MouseTargetType[\"GUTTER_LINE_DECORATIONS\"] = 4] = \"GUTTER_LINE_DECORATIONS\";\r\n        /**\r\n         * Mouse is on top of the whitespace left in the gutter by a view zone.\r\n         */\r\n        MouseTargetType[MouseTargetType[\"GUTTER_VIEW_ZONE\"] = 5] = \"GUTTER_VIEW_ZONE\";\r\n        /**\r\n         * Mouse is on top of text in the content.\r\n         */\r\n        MouseTargetType[MouseTargetType[\"CONTENT_TEXT\"] = 6] = \"CONTENT_TEXT\";\r\n        /**\r\n         * Mouse is on top of empty space in the content (e.g. after line text or below last line)\r\n         */\r\n        MouseTargetType[MouseTargetType[\"CONTENT_EMPTY\"] = 7] = \"CONTENT_EMPTY\";\r\n        /**\r\n         * Mouse is on top of a view zone in the content.\r\n         */\r\n        MouseTargetType[MouseTargetType[\"CONTENT_VIEW_ZONE\"] = 8] = \"CONTENT_VIEW_ZONE\";\r\n        /**\r\n         * Mouse is on top of a content widget.\r\n         */\r\n        MouseTargetType[MouseTargetType[\"CONTENT_WIDGET\"] = 9] = \"CONTENT_WIDGET\";\r\n        /**\r\n         * Mouse is on top of the decorations overview ruler.\r\n         */\r\n        MouseTargetType[MouseTargetType[\"OVERVIEW_RULER\"] = 10] = \"OVERVIEW_RULER\";\r\n        /**\r\n         * Mouse is on top of a scrollbar.\r\n         */\r\n        MouseTargetType[MouseTargetType[\"SCROLLBAR\"] = 11] = \"SCROLLBAR\";\r\n        /**\r\n         * Mouse is on top of an overlay widget.\r\n         */\r\n        MouseTargetType[MouseTargetType[\"OVERLAY_WIDGET\"] = 12] = \"OVERLAY_WIDGET\";\r\n    })(exports.MouseTargetType || (exports.MouseTargetType = {}));\r\n    var MouseTargetType = exports.MouseTargetType;\r\n    exports.KEYBINDING_CONTEXT_EDITOR_TEXT_FOCUS = 'editorTextFocus';\r\n    exports.KEYBINDING_CONTEXT_EDITOR_FOCUS = 'editorFocus';\r\n    exports.KEYBINDING_CONTEXT_EDITOR_TAB_MOVES_FOCUS = 'editorTabMovesFocus';\r\n    exports.KEYBINDING_CONTEXT_EDITOR_HAS_MULTIPLE_SELECTIONS = 'editorHasMultipleSelections';\r\n    exports.KEYBINDING_CONTEXT_EDITOR_HAS_NON_EMPTY_SELECTION = 'editorHasSelection';\r\n    exports.KEYBINDING_CONTEXT_EDITOR_LANGUAGE_ID = 'editorLangId';\r\n    exports.ViewEventNames = {\r\n        ModelFlushedEvent: 'modelFlushedEvent',\r\n        LinesDeletedEvent: 'linesDeletedEvent',\r\n        LinesInsertedEvent: 'linesInsertedEvent',\r\n        LineChangedEvent: 'lineChangedEvent',\r\n        TokensChangedEvent: 'tokensChangedEvent',\r\n        DecorationsChangedEvent: 'decorationsChangedEvent',\r\n        CursorPositionChangedEvent: 'cursorPositionChangedEvent',\r\n        CursorSelectionChangedEvent: 'cursorSelectionChangedEvent',\r\n        RevealRangeEvent: 'revealRangeEvent',\r\n        LineMappingChangedEvent: 'lineMappingChangedEvent',\r\n        ScrollRequestEvent: 'scrollRequestEvent'\r\n    };\r\n    (function (CodeEditorStateFlag) {\r\n        CodeEditorStateFlag[CodeEditorStateFlag[\"Value\"] = 0] = \"Value\";\r\n        CodeEditorStateFlag[CodeEditorStateFlag[\"Selection\"] = 1] = \"Selection\";\r\n        CodeEditorStateFlag[CodeEditorStateFlag[\"Position\"] = 2] = \"Position\";\r\n        CodeEditorStateFlag[CodeEditorStateFlag[\"Scroll\"] = 3] = \"Scroll\";\r\n    })(exports.CodeEditorStateFlag || (exports.CodeEditorStateFlag = {}));\r\n    var CodeEditorStateFlag = exports.CodeEditorStateFlag;\r\n    exports.EditorType = {\r\n        ICodeEditor: 'vs.editor.ICodeEditor',\r\n        IDiffEditor: 'vs.editor.IDiffEditor'\r\n    };\r\n    exports.ClassName = {\r\n        EditorWarningDecoration: 'greensquiggly',\r\n        EditorErrorDecoration: 'redsquiggly'\r\n    };\r\n    exports.EventType = {\r\n        Disposed: 'disposed',\r\n        ConfigurationChanged: 'configurationChanged',\r\n        ModelDispose: 'modelDispose',\r\n        ModelChanged: 'modelChanged',\r\n        ModelTokensChanged: 'modelTokensChanged',\r\n        ModelModeChanged: 'modelsModeChanged',\r\n        ModelModeSupportChanged: 'modelsModeSupportChanged',\r\n        ModelContentChanged: 'contentChanged',\r\n        ModelContentChanged2: 'contentChanged2',\r\n        ModelContentChangedFlush: 'flush',\r\n        ModelContentChangedLinesDeleted: 'linesDeleted',\r\n        ModelContentChangedLinesInserted: 'linesInserted',\r\n        ModelContentChangedLineChanged: 'lineChanged',\r\n        EditorTextBlur: 'blur',\r\n        EditorTextFocus: 'focus',\r\n        EditorFocus: 'widgetFocus',\r\n        EditorBlur: 'widgetBlur',\r\n        ModelPropertiesChanged: 'propertiesChanged',\r\n        ModelDecorationsChanged: 'decorationsChanged',\r\n        CursorPositionChanged: 'positionChanged',\r\n        CursorSelectionChanged: 'selectionChanged',\r\n        CursorRevealRange: 'revealRange',\r\n        CursorScrollRequest: 'scrollRequest',\r\n        ViewFocusGained: 'focusGained',\r\n        ViewFocusLost: 'focusLost',\r\n        ViewFocusChanged: 'focusChanged',\r\n        ViewScrollWidthChanged: 'scrollWidthChanged',\r\n        ViewScrollHeightChanged: 'scrollHeightChanged',\r\n        ViewScrollChanged: 'scrollChanged',\r\n        ViewZonesChanged: 'zonesChanged',\r\n        ViewLayoutChanged: 'viewLayoutChanged',\r\n        ContextMenu: 'contextMenu',\r\n        MouseDown: 'mousedown',\r\n        MouseUp: 'mouseup',\r\n        MouseMove: 'mousemove',\r\n        MouseLeave: 'mouseleave',\r\n        KeyDown: 'keydown',\r\n        KeyUp: 'keyup',\r\n        EditorLayout: 'editorLayout',\r\n        DiffUpdated: 'diffUpdated'\r\n    };\r\n    exports.Handler = {\r\n        ExecuteCommand: 'executeCommand',\r\n        ExecuteCommands: 'executeCommands',\r\n        CursorLeft: 'cursorLeft',\r\n        CursorLeftSelect: 'cursorLeftSelect',\r\n        CursorWordLeft: 'cursorWordLeft',\r\n        CursorWordLeftSelect: 'cursorWordLeftSelect',\r\n        CursorRight: 'cursorRight',\r\n        CursorRightSelect: 'cursorRightSelect',\r\n        CursorWordRight: 'cursorWordRight',\r\n        CursorWordRightSelect: 'cursorWordRightSelect',\r\n        CursorUp: 'cursorUp',\r\n        CursorUpSelect: 'cursorUpSelect',\r\n        CursorDown: 'cursorDown',\r\n        CursorDownSelect: 'cursorDownSelect',\r\n        CursorPageUp: 'cursorPageUp',\r\n        CursorPageUpSelect: 'cursorPageUpSelect',\r\n        CursorPageDown: 'cursorPageDown',\r\n        CursorPageDownSelect: 'cursorPageDownSelect',\r\n        CursorHome: 'cursorHome',\r\n        CursorHomeSelect: 'cursorHomeSelect',\r\n        CursorEnd: 'cursorEnd',\r\n        CursorEndSelect: 'cursorEndSelect',\r\n        ExpandLineSelection: 'expandLineSelection',\r\n        CursorTop: 'cursorTop',\r\n        CursorTopSelect: 'cursorTopSelect',\r\n        CursorBottom: 'cursorBottom',\r\n        CursorBottomSelect: 'cursorBottomSelect',\r\n        AddCursorDown: 'addCursorDown',\r\n        AddCursorUp: 'addCursorUp',\r\n        CursorUndo: 'cursorUndo',\r\n        MoveTo: 'moveTo',\r\n        MoveToSelect: 'moveToSelect',\r\n        CreateCursor: 'createCursor',\r\n        LastCursorMoveToSelect: 'lastCursorMoveToSelect',\r\n        JumpToBracket: 'jumpToBracket',\r\n        Type: 'type',\r\n        ReplacePreviousChar: 'replacePreviousChar',\r\n        Paste: 'paste',\r\n        Tab: 'tab',\r\n        Indent: 'indent',\r\n        Outdent: 'outdent',\r\n        DeleteLeft: 'deleteLeft',\r\n        DeleteRight: 'deleteRight',\r\n        DeleteWordLeft: 'deleteWordLeft',\r\n        DeleteWordRight: 'deleteWordRight',\r\n        DeleteAllLeft: 'deleteAllLeft',\r\n        DeleteAllRight: 'deleteAllRight',\r\n        Enter: 'enter',\r\n        RemoveSecondaryCursors: 'removeSecondaryCursors',\r\n        CancelSelection: 'cancelSelection',\r\n        Cut: 'cut',\r\n        Undo: 'undo',\r\n        Redo: 'redo',\r\n        WordSelect: 'wordSelect',\r\n        WordSelectDrag: 'wordSelectDrag',\r\n        LastCursorWordSelect: 'lastCursorWordSelect',\r\n        LineSelect: 'lineSelect',\r\n        LineSelectDrag: 'lineSelectDrag',\r\n        LastCursorLineSelect: 'lastCursorLineSelect',\r\n        LastCursorLineSelectDrag: 'lastCursorLineSelectDrag',\r\n        LineInsertBefore: 'lineInsertBefore',\r\n        LineInsertAfter: 'lineInsertAfter',\r\n        LineBreakInsert: 'lineBreakInsert',\r\n        SelectAll: 'selectAll',\r\n        ScrollLineUp: 'scrollLineUp',\r\n        ScrollLineDown: 'scrollLineDown',\r\n        ScrollPageUp: 'scrollPageUp',\r\n        ScrollPageDown: 'scrollPageDown'\r\n    };\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\ndefine(\"vs/editor/common/core/selection\", [\"require\", \"exports\", 'vs/editor/common/core/range', 'vs/editor/common/editorCommon'], function (require, exports, range_1, EditorCommon) {\r\n    var Selection = (function (_super) {\r\n        __extends(Selection, _super);\r\n        function Selection(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) {\r\n            this.selectionStartLineNumber = selectionStartLineNumber;\r\n            this.selectionStartColumn = selectionStartColumn;\r\n            this.positionLineNumber = positionLineNumber;\r\n            this.positionColumn = positionColumn;\r\n            _super.call(this, selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn);\r\n        }\r\n        Selection.prototype.clone = function () {\r\n            return new Selection(this.selectionStartLineNumber, this.selectionStartColumn, this.positionLineNumber, this.positionColumn);\r\n        };\r\n        Selection.prototype.toString = function () {\r\n            return '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\r\n        };\r\n        Selection.prototype.equalsSelection = function (other) {\r\n            return (Selection.selectionsEqual(this, other));\r\n        };\r\n        Selection.prototype.getDirection = function () {\r\n            if (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\r\n                return EditorCommon.SelectionDirection.LTR;\r\n            }\r\n            return EditorCommon.SelectionDirection.RTL;\r\n        };\r\n        Selection.prototype.setEndPosition = function (endLineNumber, endColumn) {\r\n            if (this.getDirection() === EditorCommon.SelectionDirection.LTR) {\r\n                return new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\r\n            }\r\n            return new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn);\r\n        };\r\n        Selection.prototype.setStartPosition = function (startLineNumber, startColumn) {\r\n            if (this.getDirection() === EditorCommon.SelectionDirection.LTR) {\r\n                return new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\r\n            }\r\n            return new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn);\r\n        };\r\n        // ----\r\n        Selection.createSelection = function (selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) {\r\n            return new Selection(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn);\r\n        };\r\n        Selection.liftSelection = function (sel) {\r\n            return new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\r\n        };\r\n        Selection.selectionsEqual = function (a, b) {\r\n            return (a.selectionStartLineNumber === b.selectionStartLineNumber &&\r\n                a.selectionStartColumn === b.selectionStartColumn &&\r\n                a.positionLineNumber === b.positionLineNumber &&\r\n                a.positionColumn === b.positionColumn);\r\n        };\r\n        Selection.selectionsArrEqual = function (a, b) {\r\n            if (a && !b || !a && b) {\r\n                return false;\r\n            }\r\n            if (!a && !b) {\r\n                return true;\r\n            }\r\n            if (a.length !== b.length) {\r\n                return false;\r\n            }\r\n            for (var i = 0, len = a.length; i < len; i++) {\r\n                if (!this.selectionsEqual(a[i], b[i])) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        };\r\n        Selection.isISelection = function (obj) {\r\n            return (obj\r\n                && (typeof obj.selectionStartLineNumber === 'number')\r\n                && (typeof obj.selectionStartColumn === 'number')\r\n                && (typeof obj.positionLineNumber === 'number')\r\n                && (typeof obj.positionColumn === 'number'));\r\n        };\r\n        Selection.createWithDirection = function (startLineNumber, startColumn, endLineNumber, endColumn, direction) {\r\n            if (direction === EditorCommon.SelectionDirection.LTR) {\r\n                return new Selection(startLineNumber, startColumn, endLineNumber, endColumn);\r\n            }\r\n            return new Selection(endLineNumber, endColumn, startLineNumber, startColumn);\r\n        };\r\n        return Selection;\r\n    })(range_1.Range);\r\n    exports.Selection = Selection;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/editor/common/model/textModelWithTokensHelpers\", [\"require\", \"exports\", 'vs/editor/common/modes/nullMode', 'vs/editor/common/core/range', 'vs/editor/common/editorCommon', 'vs/editor/common/core/arrays', 'vs/base/common/errors'], function (require, exports, nullMode_1, range_1, EditorCommon, arrays_1, Errors) {\r\n    var getType = EditorCommon.LineTokensBinaryEncoding.getType;\r\n    var getBracket = EditorCommon.LineTokensBinaryEncoding.getBracket;\r\n    var getStartIndex = EditorCommon.LineTokensBinaryEncoding.getStartIndex;\r\n    var WordHelper = (function () {\r\n        function WordHelper() {\r\n        }\r\n        WordHelper._safeGetWordDefinition = function (mode) {\r\n            var result = null;\r\n            if (mode.tokenTypeClassificationSupport) {\r\n                try {\r\n                    result = mode.tokenTypeClassificationSupport.getWordDefinition();\r\n                }\r\n                catch (e) {\r\n                    Errors.onUnexpectedError(e);\r\n                }\r\n            }\r\n            return result;\r\n        };\r\n        WordHelper.ensureValidWordDefinition = function (wordDefinition) {\r\n            var result = nullMode_1.NullMode.DEFAULT_WORD_REGEXP;\r\n            if (wordDefinition && (wordDefinition instanceof RegExp)) {\r\n                if (!wordDefinition.global) {\r\n                    var flags = 'g';\r\n                    if (wordDefinition.ignoreCase) {\r\n                        flags += 'i';\r\n                    }\r\n                    if (wordDefinition.multiline) {\r\n                        flags += 'm';\r\n                    }\r\n                    result = new RegExp(wordDefinition.source, flags);\r\n                }\r\n                else {\r\n                    result = wordDefinition;\r\n                }\r\n            }\r\n            result.lastIndex = 0;\r\n            return result;\r\n        };\r\n        WordHelper.massageWordDefinitionOf = function (mode) {\r\n            return WordHelper.ensureValidWordDefinition(WordHelper._safeGetWordDefinition(mode));\r\n        };\r\n        WordHelper.getWords = function (textSource, lineNumber) {\r\n            if (!textSource._lineIsTokenized(lineNumber)) {\r\n                return WordHelper._getWordsInText(textSource.getLineContent(lineNumber), WordHelper.massageWordDefinitionOf(textSource.getMode()));\r\n            }\r\n            var r = [], txt = textSource.getLineContent(lineNumber);\r\n            if (txt.length > 0) {\r\n                var modeTransitions = textSource._getLineModeTransitions(lineNumber), i, len, k, lenK, currentModeStartIndex, currentModeEndIndex, currentWordDefinition, currentModeText, words, startWord, endWord, word;\r\n                // Go through all the modes\r\n                for (i = 0, currentModeStartIndex = 0, len = modeTransitions.length; i < len; i++) {\r\n                    currentWordDefinition = WordHelper.massageWordDefinitionOf(modeTransitions[i].mode);\r\n                    currentModeStartIndex = modeTransitions[i].startIndex;\r\n                    currentModeEndIndex = (i + 1 < len ? modeTransitions[i + 1].startIndex : txt.length);\r\n                    currentModeText = txt.substring(currentModeStartIndex, currentModeEndIndex);\r\n                    words = currentModeText.match(currentWordDefinition);\r\n                    if (!words) {\r\n                        continue;\r\n                    }\r\n                    endWord = 0;\r\n                    for (k = 0, lenK = words.length; k < lenK; k++) {\r\n                        word = words[k];\r\n                        if (word.length > 0) {\r\n                            startWord = currentModeText.indexOf(word, endWord);\r\n                            endWord = startWord + word.length;\r\n                            r.push({\r\n                                start: currentModeStartIndex + startWord,\r\n                                end: currentModeStartIndex + endWord\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return r;\r\n        };\r\n        WordHelper._getWordsInText = function (text, wordDefinition) {\r\n            var words = text.match(wordDefinition) || [], k, startWord, endWord, startColumn, endColumn, word, r = [];\r\n            for (k = 0; k < words.length; k++) {\r\n                word = words[k].trim();\r\n                if (word.length > 0) {\r\n                    startWord = text.indexOf(word, endWord);\r\n                    endWord = startWord + word.length;\r\n                    startColumn = startWord;\r\n                    endColumn = endWord;\r\n                    r.push({\r\n                        start: startColumn,\r\n                        end: endColumn\r\n                    });\r\n                }\r\n            }\r\n            return r;\r\n        };\r\n        WordHelper._getWordAtColumn = function (txt, column, modeIndex, modeTransitions) {\r\n            var modeStartIndex = modeTransitions[modeIndex].startIndex, modeEndIndex = (modeIndex + 1 < modeTransitions.length ? modeTransitions[modeIndex + 1].startIndex : txt.length), mode = modeTransitions[modeIndex].mode;\r\n            return WordHelper._getWordAtText(column, WordHelper.massageWordDefinitionOf(mode), txt.substring(modeStartIndex, modeEndIndex), modeStartIndex);\r\n        };\r\n        WordHelper.getWordAtPosition = function (textSource, position) {\r\n            if (!textSource._lineIsTokenized(position.lineNumber)) {\r\n                return WordHelper._getWordAtText(position.column, WordHelper.massageWordDefinitionOf(textSource.getMode()), textSource.getLineContent(position.lineNumber), 0);\r\n            }\r\n            var result = null;\r\n            var txt = textSource.getLineContent(position.lineNumber), modeTransitions = textSource._getLineModeTransitions(position.lineNumber), columnIndex = position.column - 1, modeIndex = arrays_1.Arrays.findIndexInSegmentsArray(modeTransitions, columnIndex);\r\n            result = WordHelper._getWordAtColumn(txt, position.column, modeIndex, modeTransitions);\r\n            if (!result && modeIndex > 0 && modeTransitions[modeIndex].startIndex === columnIndex) {\r\n                // The position is right at the beginning of `modeIndex`, so try looking at `modeIndex` - 1 too\r\n                result = WordHelper._getWordAtColumn(txt, position.column, modeIndex - 1, modeTransitions);\r\n            }\r\n            return result;\r\n        };\r\n        WordHelper._getWordAtText = function (column, wordDefinition, text, textOffset) {\r\n            // console.log('_getWordAtText: ', column, text, textOffset);\r\n            var words = text.match(wordDefinition), k, startWord, endWord, startColumn, endColumn, word;\r\n            if (words) {\r\n                for (k = 0; k < words.length; k++) {\r\n                    word = words[k].trim();\r\n                    if (word.length > 0) {\r\n                        startWord = text.indexOf(word, endWord);\r\n                        endWord = startWord + word.length;\r\n                        startColumn = textOffset + startWord + 1;\r\n                        endColumn = textOffset + endWord + 1;\r\n                        if (startColumn <= column && column <= endColumn) {\r\n                            return {\r\n                                word: word,\r\n                                startColumn: startColumn,\r\n                                endColumn: endColumn\r\n                            };\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        return WordHelper;\r\n    })();\r\n    exports.WordHelper = WordHelper;\r\n    var BracketsHelper = (function () {\r\n        function BracketsHelper() {\r\n        }\r\n        BracketsHelper._sign = function (n) {\r\n            return n < 0 ? -1 : n > 0 ? 1 : 0;\r\n        };\r\n        BracketsHelper._findMatchingBracketUp = function (textSource, type, lineNumber, tokenIndex, initialCount) {\r\n            var i, end, j, count = initialCount;\r\n            for (i = lineNumber; i >= 1; i--) {\r\n                var lineTokens = textSource.getLineTokens(i, false), tokens = lineTokens.getBinaryEncodedTokens(), tokensMap = lineTokens.getBinaryEncodedTokensMap(), lineText = textSource.getLineContent(i);\r\n                for (j = (i === lineNumber ? tokenIndex : tokens.length) - 1; j >= 0; j--) {\r\n                    if (getType(tokensMap, tokens[j]) === type) {\r\n                        count += BracketsHelper._sign(getBracket(tokens[j]));\r\n                        if (count === 0) {\r\n                            end = (j === tokens.length - 1 ? lineText.length : getStartIndex(tokens[j + 1]));\r\n                            return new range_1.Range(i, getStartIndex(tokens[j]) + 1, i, end + 1);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        BracketsHelper._findMatchingBracketDown = function (textSource, type, lineNumber, tokenIndex, inaccurateResultAcceptable) {\r\n            var i, len, end, j, lenJ, count = 1;\r\n            for (i = lineNumber, len = textSource.getLineCount(); i <= len; i++) {\r\n                if (inaccurateResultAcceptable && !textSource._lineIsTokenized(i)) {\r\n                    return {\r\n                        range: null,\r\n                        isAccurate: false\r\n                    };\r\n                }\r\n                var lineTokens = textSource.getLineTokens(i, false), tokens = lineTokens.getBinaryEncodedTokens(), tokensMap = lineTokens.getBinaryEncodedTokensMap(), lineText = textSource.getLineContent(i);\r\n                for (j = (i === lineNumber ? tokenIndex + 1 : 0), lenJ = tokens.length; j < lenJ; j++) {\r\n                    if (getType(tokensMap, tokens[j]) === type) {\r\n                        count += BracketsHelper._sign(getBracket(tokens[j]));\r\n                        if (count === 0) {\r\n                            end = (j === tokens.length - 1 ? lineText.length : getStartIndex(tokens[j + 1]));\r\n                            return {\r\n                                range: new range_1.Range(i, getStartIndex(tokens[j]) + 1, i, end + 1),\r\n                                isAccurate: true\r\n                            };\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return {\r\n                range: null,\r\n                isAccurate: true\r\n            };\r\n        };\r\n        BracketsHelper.findMatchingBracketUp = function (textSource, tokenType, position) {\r\n            var i, len, end, columnIndex = position.column - 1, tokenIndex = -1, lineTokens = textSource.getLineTokens(position.lineNumber, false), tokens = lineTokens.getBinaryEncodedTokens(), lineText = textSource.getLineContent(position.lineNumber);\r\n            for (i = 0, len = tokens.length; tokenIndex === -1 && i < len; i++) {\r\n                end = i === len - 1 ? lineText.length : getStartIndex(tokens[i + 1]);\r\n                if (getStartIndex(tokens[i]) <= columnIndex && columnIndex <= end) {\r\n                    tokenIndex = i;\r\n                }\r\n            }\r\n            // Start looking one token after the bracket\r\n            return BracketsHelper._findMatchingBracketUp(textSource, tokenType, position.lineNumber, tokenIndex + 1, 0);\r\n        };\r\n        BracketsHelper.matchBracket = function (textSource, position, inaccurateResultAcceptable) {\r\n            if (inaccurateResultAcceptable && !textSource._lineIsTokenized(position.lineNumber)) {\r\n                return {\r\n                    brackets: null,\r\n                    isAccurate: false\r\n                };\r\n            }\r\n            var lineText = textSource.getLineContent(position.lineNumber), i, len;\r\n            var result = {\r\n                brackets: null,\r\n                isAccurate: true\r\n            };\r\n            if (lineText.length > 0) {\r\n                var columnIndex = position.column - 1;\r\n                var token;\r\n                var end;\r\n                var lineTokens = textSource.getLineTokens(position.lineNumber, false), tokens = lineTokens.getBinaryEncodedTokens(), tokensMap = lineTokens.getBinaryEncodedTokensMap(), tokenStartIndex, tokenBracket, tokenType;\r\n                for (i = 0, len = tokens.length; result.brackets === null && i < len; i++) {\r\n                    token = tokens[i];\r\n                    tokenStartIndex = getStartIndex(token);\r\n                    tokenType = getType(tokensMap, token);\r\n                    tokenBracket = getBracket(token);\r\n                    end = i === len - 1 ? lineText.length : getStartIndex(tokens[i + 1]);\r\n                    if (tokenStartIndex <= columnIndex && columnIndex <= end) {\r\n                        if (tokenBracket < 0) {\r\n                            var upMatch = BracketsHelper._findMatchingBracketUp(textSource, tokenType, position.lineNumber, i, -1);\r\n                            if (upMatch) {\r\n                                result.brackets = [new range_1.Range(position.lineNumber, tokenStartIndex + 1, position.lineNumber, end + 1), upMatch];\r\n                            }\r\n                        }\r\n                        if (result.brackets === null && tokenBracket > 0) {\r\n                            var downMatch = BracketsHelper._findMatchingBracketDown(textSource, tokenType, position.lineNumber, i, inaccurateResultAcceptable);\r\n                            result.isAccurate = downMatch.isAccurate;\r\n                            if (downMatch.range) {\r\n                                result.brackets = [new range_1.Range(position.lineNumber, tokenStartIndex + 1, position.lineNumber, end + 1), downMatch.range];\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return result;\r\n        };\r\n        return BracketsHelper;\r\n    })();\r\n    exports.BracketsHelper = BracketsHelper;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/editor/common/modes/autoIndentation\", [\"require\", \"exports\", 'vs/base/common/strings', 'vs/editor/common/modes'], function (require, exports, Strings, Modes) {\r\n    var Lettercase;\r\n    (function (Lettercase) {\r\n        Lettercase[Lettercase[\"Unknown\"] = 0] = \"Unknown\";\r\n        Lettercase[Lettercase[\"Lowercase\"] = 1] = \"Lowercase\";\r\n        Lettercase[Lettercase[\"Uppercase\"] = 2] = \"Uppercase\";\r\n        Lettercase[Lettercase[\"Camelcase\"] = 3] = \"Camelcase\";\r\n    })(Lettercase || (Lettercase = {}));\r\n    var Brackets = (function () {\r\n        /**\r\n         * In case of case insensitive brackets, these assumptions must be met:\r\n         * - all standard brackets are passed as lowercase\r\n         * - the passed regular expressions already contain the /i flag\r\n         *\r\n         * Brackets defined in 'regexBrackets' are not used in the following methods:\r\n         * - stringIsBracket\r\n         *\r\n         */\r\n        function Brackets(brackets, regexBrackets, docComment, caseInsensitive) {\r\n            if (regexBrackets === void 0) { regexBrackets = []; }\r\n            if (docComment === void 0) { docComment = null; }\r\n            if (caseInsensitive === void 0) { caseInsensitive = false; }\r\n            this.brackets = brackets;\r\n            this.regexBrackets = regexBrackets ? regexBrackets : [];\r\n            this.docComment = docComment ? docComment : null;\r\n            this.caseInsensitive = caseInsensitive ? caseInsensitive : false;\r\n        }\r\n        Brackets.prototype.getElectricCharacters = function () {\r\n            var result = [];\r\n            // Plain brackets\r\n            var bracketPair;\r\n            var length = this.brackets.length;\r\n            for (var i = 0; i < length; i++) {\r\n                bracketPair = this.brackets[i];\r\n                if (bracketPair.isElectric) {\r\n                    var lastChar = bracketPair.close.charAt(bracketPair.close.length - 1);\r\n                    result.push(this.caseInsensitive ? lastChar.toLowerCase() : lastChar);\r\n                }\r\n            }\r\n            // Regexp brackets (always electric)\r\n            var regexBracketPair;\r\n            length = this.regexBrackets.length;\r\n            for (var i = 0; i < length; i++) {\r\n                regexBracketPair = this.regexBrackets[i];\r\n                if (regexBracketPair.openTrigger) {\r\n                    result.push(this.caseInsensitive ? regexBracketPair.openTrigger.toLowerCase() : regexBracketPair.openTrigger);\r\n                }\r\n                if (regexBracketPair.closeTrigger) {\r\n                    result.push(this.caseInsensitive ? regexBracketPair.closeTrigger.toLowerCase() : regexBracketPair.closeTrigger);\r\n                }\r\n            }\r\n            // Doc comments\r\n            if (this.docComment) {\r\n                result.push(this.docComment.open.charAt(this.docComment.open.length - 1));\r\n            }\r\n            // Add uppercase if needed\r\n            if (this.caseInsensitive) {\r\n                var oldLength = result.length;\r\n                for (var i = 0; i < oldLength; ++i) {\r\n                    result.push(result[i].toUpperCase());\r\n                }\r\n            }\r\n            // Filter duplicate entries\r\n            result = result.filter(function (item, pos, array) {\r\n                return array.indexOf(item) == pos;\r\n            });\r\n            return result;\r\n        };\r\n        Brackets.prototype.onEnter = function (context, offset) {\r\n            if (context.getTokenCount() === 0) {\r\n                return null;\r\n            }\r\n            return this._onEnterRegexBrackets(context, offset);\r\n        };\r\n        Brackets.prototype.onElectricCharacter = function (context, offset) {\r\n            if (context.getTokenCount() === 0) {\r\n                return null;\r\n            }\r\n            return (this._onElectricCharacterDocComment(context, offset) ||\r\n                this._onElectricCharacterRegexBrackets(context, offset) ||\r\n                this._onElectricCharacterStandardBrackets(context, offset));\r\n        };\r\n        Brackets.prototype.stringIsBracket = function (text) {\r\n            var caseCorrectString = text;\r\n            if (this.caseInsensitive) {\r\n                caseCorrectString = text.toLowerCase();\r\n            }\r\n            var bracketPair;\r\n            for (var i = 0; i < this.brackets.length; i++) {\r\n                bracketPair = this.brackets[i];\r\n                if (caseCorrectString === bracketPair.open || caseCorrectString === bracketPair.close) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        };\r\n        Brackets.prototype.containsTokenTypes = function (fullTokenSpec, tokensToLookFor) {\r\n            var array = tokensToLookFor.split('.');\r\n            for (var i = 0; i < array.length; ++i) {\r\n                if (fullTokenSpec.indexOf(array[i]) < 0) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        };\r\n        Brackets.prototype._onEnterRegexBrackets = function (context, offset) {\r\n            // Handle regular expression brackets\r\n            for (var i = 0; i < this.regexBrackets.length; ++i) {\r\n                var regexBracket = this.regexBrackets[i];\r\n                var line = context.getLineContent();\r\n                if (this.caseInsensitive) {\r\n                    line = line.toLowerCase(); // Even with the /../i regexes we need this for the indexof below\r\n                }\r\n                // Check if an open bracket matches the line up to offset.\r\n                var matchLine = line.substr(0, offset);\r\n                var matches = matchLine.match(regexBracket.open);\r\n                if (matches) {\r\n                    // The opening bracket matches. Check the closing one.\r\n                    if (regexBracket.closeComplete) {\r\n                        matchLine = line.substring(offset);\r\n                        var matchAfter = matches[0].replace(regexBracket.open, regexBracket.closeComplete);\r\n                        if (matchLine.indexOf(matchAfter) === 0) {\r\n                            return { indentAction: Modes.IndentAction.IndentOutdent };\r\n                        }\r\n                    }\r\n                    return { indentAction: Modes.IndentAction.Indent };\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        Brackets.prototype._onElectricCharacterStandardBrackets = function (context, offset) {\r\n            var tokenIndex = context.findIndexOfOffset(offset);\r\n            var tokenText = context.getTokenText(tokenIndex);\r\n            var tokenType = context.getTokenType(tokenIndex);\r\n            if (!this.stringIsBracket(tokenText)) {\r\n                // This is not a brace type that we are aware of.\r\n                // Keep in mind that tokenType above might be different than what this.tokenTypeFromString(tokenText)\r\n                // returns, which could happen when using TextMate bundles.\r\n                return null;\r\n            }\r\n            if (tokenIndex >= 0 && context.getTokenEndIndex(tokenIndex) - 1 > offset) {\r\n                // We're in the middle of a token, do not do anything\r\n                return null;\r\n            }\r\n            var firstNonWhitespaceIndex = Strings.firstNonWhitespaceIndex(context.getLineContent());\r\n            if (firstNonWhitespaceIndex !== -1 && firstNonWhitespaceIndex <= offset - tokenText.length) {\r\n                return null;\r\n            }\r\n            return { matchBracketType: tokenType };\r\n        };\r\n        Brackets.prototype._onElectricCharacterRegexBrackets = function (context, offset) {\r\n            // Handle regular expression brackets\r\n            var line = context.getLineContent();\r\n            for (var i = 0; i < this.regexBrackets.length; ++i) {\r\n                var regexBracket = this.regexBrackets[i];\r\n                // Check if an open bracket matches the line up to offset.\r\n                if (regexBracket.openTrigger && regexBracket.closeComplete &&\r\n                    (line.charAt(offset) === regexBracket.openTrigger ||\r\n                        (this.caseInsensitive && line.charAt(offset).toLowerCase() === regexBracket.openTrigger.toLowerCase()))) {\r\n                    var matchLine = line.substr(0, offset + 1);\r\n                    var matches = matchLine.match(regexBracket.open);\r\n                    if (matches) {\r\n                        // Auto-complete with closing bracket.\r\n                        var finalText = matches[0].replace(regexBracket.open, regexBracket.closeComplete);\r\n                        if (regexBracket.matchCase) {\r\n                            finalText = this._changeLettercase(finalText, this._detectLetercase(matches[0]));\r\n                        }\r\n                        return { appendText: finalText };\r\n                    }\r\n                }\r\n                // Check if a close bracket matches the line up to offset.\r\n                if (regexBracket.closeTrigger &&\r\n                    (line.charAt(offset) === regexBracket.closeTrigger ||\r\n                        (this.caseInsensitive && line.charAt(offset).toLowerCase() === regexBracket.closeTrigger.toLowerCase()))) {\r\n                    var matches = matchLine.match(regexBracket.close);\r\n                    if (matches) {\r\n                        // Auto-indent to the level of the opening bracket.\r\n                        var properCaseMatch = matches[0];\r\n                        if (this.caseInsensitive) {\r\n                            properCaseMatch = properCaseMatch.toLowerCase();\r\n                        }\r\n                        return { matchBracketType: properCaseMatch.replace(regexBracket.close, regexBracket.tokenType) };\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        Brackets.prototype._onElectricCharacterDocComment = function (context, offset) {\r\n            // We only auto-close, so do nothing if there is no closing part.\r\n            if (!this.docComment || !this.docComment.close) {\r\n                return null;\r\n            }\r\n            var line = context.getLineContent();\r\n            var char = line[offset];\r\n            // See if the right electric character was pressed\r\n            if (char !== this.docComment.open.charAt(this.docComment.open.length - 1)) {\r\n                return null;\r\n            }\r\n            // If this line already contains the closing tag, do nothing.\r\n            if (line.indexOf(this.docComment.close, offset) >= 0) {\r\n                return null;\r\n            }\r\n            // If we're not in a documentation comment, do nothing.\r\n            var lastTokenIndex = context.findIndexOfOffset(offset);\r\n            if (!this.containsTokenTypes(context.getTokenType(lastTokenIndex), this.docComment.scope)) {\r\n                return null;\r\n            }\r\n            if (line.substring(context.getTokenStartIndex(lastTokenIndex), offset + 1 /* include electric char*/) !== this.docComment.open) {\r\n                return null;\r\n            }\r\n            return { appendText: this.docComment.close };\r\n        };\r\n        Brackets.prototype._detectLetercase = function (s) {\r\n            if (s.toLowerCase() === s) {\r\n                return Lettercase.Lowercase;\r\n            }\r\n            if (s.toUpperCase() === s) {\r\n                return Lettercase.Uppercase;\r\n            }\r\n            if (s.length > 1) {\r\n                if (s.charAt(0).toUpperCase() === s.charAt(0) && s.charAt(1).toLowerCase() === s.charAt(1)) {\r\n                    return Lettercase.Camelcase;\r\n                }\r\n            }\r\n            return Lettercase.Unknown;\r\n        };\r\n        Brackets.prototype._changeLettercase = function (s, newCase) {\r\n            switch (newCase) {\r\n                case Lettercase.Lowercase:\r\n                    return s.toLowerCase();\r\n                case Lettercase.Uppercase:\r\n                    return s.toUpperCase();\r\n                case Lettercase.Camelcase:\r\n                    var words = s.toLowerCase().split(' ');\r\n                    for (var i = 0; i < words.length; ++i) {\r\n                        words[i] = words[i].charAt(0).toUpperCase() + words[i].substr(1);\r\n                    }\r\n                    return words.join(' ');\r\n                default:\r\n                    return s;\r\n            }\r\n        };\r\n        return Brackets;\r\n    })();\r\n    exports.Brackets = Brackets;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/editor/common/modes/languageSelector\", [\"require\", \"exports\", 'vs/base/common/glob'], function (require, exports, glob_1) {\r\n    function matches(selection, uri, language) {\r\n        return score(selection, uri, language) > 0;\r\n    }\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.default = matches;\r\n    function score(selector, uri, language) {\r\n        if (Array.isArray(selector)) {\r\n            // for each\r\n            var values = selector.map(function (item) { return score(item, uri, language); });\r\n            return Math.max.apply(Math, values);\r\n        }\r\n        else if (typeof selector === 'string') {\r\n            // compare language id\r\n            if (selector === language) {\r\n                return 10;\r\n            }\r\n            else if (selector === '*') {\r\n                return 5;\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        }\r\n        else if (selector) {\r\n            var filter = selector;\r\n            var value = 0;\r\n            // language id\r\n            if (filter.language) {\r\n                if (filter.language === language) {\r\n                    value += 10;\r\n                }\r\n                else if (filter.language === '*') {\r\n                    value += 5;\r\n                }\r\n                else {\r\n                    return 0;\r\n                }\r\n            }\r\n            // scheme\r\n            if (filter.scheme) {\r\n                if (filter.scheme === uri.scheme) {\r\n                    value += 10;\r\n                }\r\n                else {\r\n                    return 0;\r\n                }\r\n            }\r\n            // match fsPath with pattern\r\n            if (filter.pattern) {\r\n                if (filter.pattern === uri.fsPath) {\r\n                    value += 10;\r\n                }\r\n                else if (glob_1.match(filter.pattern, uri.fsPath)) {\r\n                    value += 5;\r\n                }\r\n                else {\r\n                    return 0;\r\n                }\r\n            }\r\n            return value;\r\n        }\r\n    }\r\n    exports.score = score;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/editor/common/modes/languageFeatureRegistry\", [\"require\", \"exports\", 'vs/base/common/event', 'vs/base/common/arrays', 'vs/editor/common/modes/languageSelector'], function (require, exports, event_1, arrays_1, languageSelector_1) {\r\n    var LanguageFeatureRegistry = (function () {\r\n        function LanguageFeatureRegistry(supportName) {\r\n            this._entries = [];\r\n            this._onDidChange = new event_1.Emitter();\r\n            this._supportName = supportName;\r\n        }\r\n        Object.defineProperty(LanguageFeatureRegistry.prototype, \"onDidChange\", {\r\n            get: function () {\r\n                return this._onDidChange.event;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        LanguageFeatureRegistry.prototype.register = function (selector, provider) {\r\n            var _this = this;\r\n            var entry = {\r\n                selector: selector,\r\n                provider: provider,\r\n                _score: -1,\r\n                _time: Date.now()\r\n            };\r\n            this._entries.push(entry);\r\n            this._lastCandidate = undefined;\r\n            this._onDidChange.fire(this._entries.length);\r\n            return {\r\n                dispose: function () {\r\n                    if (entry) {\r\n                        var idx = _this._entries.indexOf(entry);\r\n                        if (idx >= 0) {\r\n                            _this._entries.splice(idx, 1);\r\n                            _this._lastCandidate = undefined;\r\n                            _this._onDidChange.fire(_this._entries.length);\r\n                            entry = undefined;\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        };\r\n        LanguageFeatureRegistry.prototype.has = function (model) {\r\n            return this.all(model).length > 0;\r\n        };\r\n        LanguageFeatureRegistry.prototype.all = function (model) {\r\n            if (!model || model.isTooLargeForHavingAMode()) {\r\n                return [];\r\n            }\r\n            this._updateScores(model);\r\n            var result = [];\r\n            // (1) from registry\r\n            for (var _i = 0, _a = this._entries; _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                if (entry._score > 0) {\r\n                    result.push(entry.provider);\r\n                }\r\n            }\r\n            // (2) from mode\r\n            if (model.getMode() && model.getMode()[this._supportName]) {\r\n                result.push(model.getMode()[this._supportName]);\r\n            }\r\n            return result;\r\n        };\r\n        LanguageFeatureRegistry.prototype.ordered = function (model) {\r\n            var result = [];\r\n            this._orderedForEach(model, function (entry) { return result.push(entry.provider); });\r\n            return result;\r\n        };\r\n        LanguageFeatureRegistry.prototype.orderedGroups = function (model) {\r\n            var result = [];\r\n            var lastBucket;\r\n            var lastBucketScore;\r\n            this._orderedForEach(model, function (entry) {\r\n                if (lastBucket && lastBucketScore === entry._score) {\r\n                    lastBucket.push(entry.provider);\r\n                }\r\n                else {\r\n                    lastBucketScore = entry._score;\r\n                    lastBucket = [entry.provider];\r\n                    result.push(lastBucket);\r\n                }\r\n            });\r\n            return result;\r\n        };\r\n        LanguageFeatureRegistry.prototype._orderedForEach = function (model, callback) {\r\n            if (!model || model.isTooLargeForHavingAMode()) {\r\n                return;\r\n            }\r\n            if (this._updateScores(model)) {\r\n                this._sortByScore();\r\n            }\r\n            var supportIndex = -1;\r\n            var supportEntry;\r\n            if (model.getMode() && model.getMode()[this._supportName]) {\r\n                supportEntry = {\r\n                    selector: undefined,\r\n                    provider: model.getMode()[this._supportName],\r\n                    _score: .5,\r\n                    _time: 0\r\n                };\r\n                supportIndex = ~arrays_1.binarySearch(this._entries, supportEntry, LanguageFeatureRegistry._compareByScoreAndTime);\r\n            }\r\n            var to = Math.max(supportIndex + 1, this._entries.length);\r\n            for (var from = 0; from < to; from++) {\r\n                if (from === supportIndex) {\r\n                    callback(supportEntry);\r\n                }\r\n                else {\r\n                    var entry = this._entries[from];\r\n                    if (entry._score > 0) {\r\n                        callback(entry);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        LanguageFeatureRegistry.prototype._updateScores = function (model) {\r\n            var candidate = {\r\n                uri: model.getAssociatedResource().toString(),\r\n                language: model.getModeId()\r\n            };\r\n            if (this._lastCandidate\r\n                && this._lastCandidate.language === candidate.language\r\n                && this._lastCandidate.uri === candidate.uri) {\r\n                // nothing has changed\r\n                return;\r\n            }\r\n            this._lastCandidate = candidate;\r\n            for (var _i = 0, _a = this._entries; _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                entry._score = languageSelector_1.score(entry.selector, model.getAssociatedResource(), model.getModeId());\r\n            }\r\n            return true;\r\n        };\r\n        LanguageFeatureRegistry.prototype._sortByScore = function () {\r\n            this._entries.sort(LanguageFeatureRegistry._compareByScoreAndTime);\r\n        };\r\n        LanguageFeatureRegistry._compareByScoreAndTime = function (a, b) {\r\n            if (a._score < b._score) {\r\n                return 1;\r\n            }\r\n            else if (a._score > b._score) {\r\n                return -1;\r\n            }\r\n            else if (a._time < b._time) {\r\n                return 1;\r\n            }\r\n            else if (a._time > b._time) {\r\n                return -1;\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        };\r\n        return LanguageFeatureRegistry;\r\n    })();\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.default = LanguageFeatureRegistry;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/editor/common/modes/modesFilters\", [\"require\", \"exports\", 'vs/base/common/filters', 'vs/base/common/arrays'], function (require, exports, Filters, arrays_1) {\r\n    function wrapBaseFilter(filter) {\r\n        return function (word, suggestion) {\r\n            var result = filter(word, suggestion.filterText || suggestion.label);\r\n            return arrays_1.isFalsyOrEmpty(result) ? undefined : result;\r\n        };\r\n    }\r\n    exports.StrictPrefix = wrapBaseFilter(Filters.matchesStrictPrefix);\r\n    exports.Prefix = wrapBaseFilter(Filters.matchesPrefix);\r\n    exports.CamelCase = wrapBaseFilter(Filters.matchesCamelCase);\r\n    exports.ContiguousSubString = wrapBaseFilter(Filters.matchesContiguousSubString);\r\n    // Combined Filters\r\n    function or(first, second) {\r\n        return function (word, suggestion) { return first(word, suggestion) || second(word, suggestion); };\r\n    }\r\n    exports.or = or;\r\n    function and(first, second) {\r\n        return function (word, suggestion) { return first(word, suggestion) && second(word, suggestion); };\r\n    }\r\n    exports.and = and;\r\n    exports.DefaultFilter = or(or(exports.Prefix, exports.CamelCase), exports.ContiguousSubString);\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\ndefine(\"vs/editor/common/modes/supports\", [\"require\", \"exports\", 'vs/base/common/winjs.base', 'vs/base/common/strings', 'vs/editor/common/modes/lineStream', 'vs/editor/common/modes/nullMode', 'vs/editor/common/modes/autoIndentation', 'vs/editor/common/modes/modesFilters', 'vs/editor/common/modes', 'vs/editor/common/core/arrays'], function (require, exports, winjs_base_1, Strings, lineStream_1, nullMode_1, autoIndentation_1, modesFilters_1, Modes, arrays_1) {\r\n    var Token = (function () {\r\n        function Token(startIndex, type, bracket) {\r\n            this.startIndex = startIndex;\r\n            this.type = type;\r\n            this.bracket = bracket;\r\n        }\r\n        Token.prototype.toString = function () {\r\n            return '(' + this.startIndex + ', ' + this.type + ', ' + this.bracket + ')';\r\n        };\r\n        return Token;\r\n    })();\r\n    exports.Token = Token;\r\n    function handleEvent(context, offset, runner) {\r\n        var modeTransitions = context.modeTransitions;\r\n        if (modeTransitions.length === 1) {\r\n            return runner(modeTransitions[0].mode, context, offset);\r\n        }\r\n        var modeIndex = arrays_1.Arrays.findIndexInSegmentsArray(modeTransitions, offset);\r\n        var nestedMode = modeTransitions[modeIndex].mode;\r\n        var modeStartIndex = modeTransitions[modeIndex].startIndex;\r\n        var firstTokenInModeIndex = context.findIndexOfOffset(modeStartIndex);\r\n        var nextCharacterAfterModeIndex = -1;\r\n        var nextTokenAfterMode = -1;\r\n        if (modeIndex + 1 < modeTransitions.length) {\r\n            nextTokenAfterMode = context.findIndexOfOffset(modeTransitions[modeIndex + 1].startIndex);\r\n            nextCharacterAfterModeIndex = context.getTokenStartIndex(nextTokenAfterMode);\r\n        }\r\n        else {\r\n            nextTokenAfterMode = context.getTokenCount();\r\n            nextCharacterAfterModeIndex = context.getLineContent().length;\r\n        }\r\n        var firstTokenCharacterOffset = context.getTokenStartIndex(firstTokenInModeIndex);\r\n        var newCtx = new FilteredLineContext(context, nestedMode, firstTokenInModeIndex, nextTokenAfterMode, firstTokenCharacterOffset, nextCharacterAfterModeIndex);\r\n        return runner(nestedMode, newCtx, offset - firstTokenCharacterOffset);\r\n    }\r\n    exports.handleEvent = handleEvent;\r\n    /**\r\n     * Returns {{true}} if the line token at the specified\r\n     * offset matches one of the provided types. Matching\r\n     * happens on a substring start from the end, unless\r\n     * anywhereInToken is set to true in which case matches\r\n     * happen on a substring at any position.\r\n     */\r\n    function isLineToken(context, offset, types, anywhereInToken) {\r\n        if (anywhereInToken === void 0) { anywhereInToken = false; }\r\n        if (!Array.isArray(types) || types.length === 0) {\r\n            return false;\r\n        }\r\n        if (context.getLineContent().length <= offset) {\r\n            return false;\r\n        }\r\n        var tokenIdx = context.findIndexOfOffset(offset);\r\n        var type = context.getTokenType(tokenIdx);\r\n        for (var i = 0, len = types.length; i < len; i++) {\r\n            if (anywhereInToken) {\r\n                if (type.indexOf(types[i]) >= 0) {\r\n                    return true;\r\n                }\r\n            }\r\n            else {\r\n                if (Strings.endsWith(type, types[i])) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    exports.isLineToken = isLineToken;\r\n    var FilteredLineContext = (function () {\r\n        function FilteredLineContext(actual, mode, firstTokenInModeIndex, nextTokenAfterMode, firstTokenCharacterOffset, nextCharacterAfterModeIndex) {\r\n            this.modeTransitions = [{\r\n                    startIndex: 0,\r\n                    mode: mode\r\n                }];\r\n            this._actual = actual;\r\n            this._firstTokenInModeIndex = firstTokenInModeIndex;\r\n            this._nextTokenAfterMode = nextTokenAfterMode;\r\n            this._firstTokenCharacterOffset = firstTokenCharacterOffset;\r\n            this._nextCharacterAfterModeIndex = nextCharacterAfterModeIndex;\r\n        }\r\n        FilteredLineContext.prototype.getLineContent = function () {\r\n            var actualLineContent = this._actual.getLineContent();\r\n            return actualLineContent.substring(this._firstTokenCharacterOffset, this._nextCharacterAfterModeIndex);\r\n        };\r\n        FilteredLineContext.prototype.getTokenCount = function () {\r\n            return this._nextTokenAfterMode - this._firstTokenInModeIndex;\r\n        };\r\n        FilteredLineContext.prototype.findIndexOfOffset = function (offset) {\r\n            return this._actual.findIndexOfOffset(offset + this._firstTokenCharacterOffset) - this._firstTokenInModeIndex;\r\n        };\r\n        FilteredLineContext.prototype.getTokenStartIndex = function (tokenIndex) {\r\n            return this._actual.getTokenStartIndex(tokenIndex + this._firstTokenInModeIndex) - this._firstTokenCharacterOffset;\r\n        };\r\n        FilteredLineContext.prototype.getTokenEndIndex = function (tokenIndex) {\r\n            return this._actual.getTokenEndIndex(tokenIndex + this._firstTokenInModeIndex) - this._firstTokenCharacterOffset;\r\n        };\r\n        FilteredLineContext.prototype.getTokenType = function (tokenIndex) {\r\n            return this._actual.getTokenType(tokenIndex + this._firstTokenInModeIndex);\r\n        };\r\n        FilteredLineContext.prototype.getTokenBracket = function (tokenIndex) {\r\n            return this._actual.getTokenBracket(tokenIndex + this._firstTokenInModeIndex);\r\n        };\r\n        FilteredLineContext.prototype.getTokenText = function (tokenIndex) {\r\n            return this._actual.getTokenText(tokenIndex + this._firstTokenInModeIndex);\r\n        };\r\n        return FilteredLineContext;\r\n    })();\r\n    exports.FilteredLineContext = FilteredLineContext;\r\n    var AbstractSupport = (function () {\r\n        function AbstractSupport(mode) {\r\n            this._mode = mode;\r\n        }\r\n        Object.defineProperty(AbstractSupport.prototype, \"mode\", {\r\n            get: function () {\r\n                return this._mode;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return AbstractSupport;\r\n    })();\r\n    exports.AbstractSupport = AbstractSupport;\r\n    function isFunction(something) {\r\n        return typeof something === 'function';\r\n    }\r\n    var TokenizationSupport = (function (_super) {\r\n        __extends(TokenizationSupport, _super);\r\n        function TokenizationSupport(mode, customization, supportsNestedModes, shouldGenerateEmbeddedModels) {\r\n            _super.call(this, mode);\r\n            this.customization = customization;\r\n            this.supportsNestedModes = supportsNestedModes;\r\n            this._embeddedModesListeners = {};\r\n            if (this.supportsNestedModes) {\r\n                if (!this.mode.registerSupport) {\r\n                    throw new Error('Cannot be a mode with nested modes unless I can emit a tokenizationSupport changed event!');\r\n                }\r\n            }\r\n            this.shouldGenerateEmbeddedModels = shouldGenerateEmbeddedModels;\r\n            this.defaults = {\r\n                enterNestedMode: !isFunction(customization.enterNestedMode),\r\n                getNestedMode: !isFunction(customization.getNestedMode),\r\n                getNestedModeInitialState: !isFunction(customization.getNestedModeInitialState),\r\n                getLeavingNestedModeData: !isFunction(customization.getLeavingNestedModeData),\r\n                onReturningFromNestedMode: !isFunction(customization.onReturningFromNestedMode)\r\n            };\r\n        }\r\n        TokenizationSupport.prototype.dispose = function () {\r\n            for (var listener in this._embeddedModesListeners) {\r\n                this._embeddedModesListeners[listener].dispose();\r\n                delete this._embeddedModesListeners[listener];\r\n            }\r\n        };\r\n        TokenizationSupport.prototype.getInitialState = function () {\r\n            return this.customization.getInitialState();\r\n        };\r\n        TokenizationSupport.prototype.tokenize = function (line, state, deltaOffset, stopAtOffset) {\r\n            if (deltaOffset === void 0) { deltaOffset = 0; }\r\n            if (stopAtOffset === void 0) { stopAtOffset = deltaOffset + line.length; }\r\n            if (state.getMode() !== this.mode) {\r\n                return this._nestedTokenize(line, state, deltaOffset, stopAtOffset, [], []);\r\n            }\r\n            else {\r\n                return this._myTokenize(line, state, deltaOffset, stopAtOffset, [], []);\r\n            }\r\n        };\r\n        /**\r\n         * Precondition is: nestedModeState.getMode() !== this\r\n         * This means we are in a nested mode when parsing starts on this line.\r\n         */\r\n        TokenizationSupport.prototype._nestedTokenize = function (buffer, nestedModeState, deltaOffset, stopAtOffset, prependTokens, prependModeTransitions) {\r\n            var myStateBeforeNestedMode = nestedModeState.getStateData();\r\n            var leavingNestedModeData = this.getLeavingNestedModeData(buffer, myStateBeforeNestedMode);\r\n            // Be sure to give every embedded mode the\r\n            // opportunity to leave nested mode.\r\n            // i.e. Don't go straight to the most nested mode\r\n            var stepOnceNestedState = nestedModeState;\r\n            while (stepOnceNestedState.getStateData() && stepOnceNestedState.getStateData().getMode() !== this.mode) {\r\n                stepOnceNestedState = stepOnceNestedState.getStateData();\r\n            }\r\n            var nestedMode = stepOnceNestedState.getMode();\r\n            if (!leavingNestedModeData) {\r\n                // tokenization will not leave nested mode\r\n                var result;\r\n                if (nestedMode.tokenizationSupport) {\r\n                    result = nestedMode.tokenizationSupport.tokenize(buffer, nestedModeState, deltaOffset, stopAtOffset);\r\n                }\r\n                else {\r\n                    // The nested mode doesn't have tokenization support,\r\n                    // unfortunatelly this means we have to fake it\r\n                    result = nullMode_1.nullTokenize(nestedMode, buffer, nestedModeState, deltaOffset);\r\n                }\r\n                result.tokens = prependTokens.concat(result.tokens);\r\n                result.modeTransitions = prependModeTransitions.concat(result.modeTransitions);\r\n                return result;\r\n            }\r\n            var nestedModeBuffer = leavingNestedModeData.nestedModeBuffer;\r\n            if (nestedModeBuffer.length > 0) {\r\n                // Tokenize with the nested mode\r\n                var nestedModeLineTokens;\r\n                if (nestedMode.tokenizationSupport) {\r\n                    nestedModeLineTokens = nestedMode.tokenizationSupport.tokenize(nestedModeBuffer, nestedModeState, deltaOffset, stopAtOffset);\r\n                }\r\n                else {\r\n                    // The nested mode doesn't have tokenization support,\r\n                    // unfortunatelly this means we have to fake it\r\n                    nestedModeLineTokens = nullMode_1.nullTokenize(nestedMode, nestedModeBuffer, nestedModeState, deltaOffset);\r\n                }\r\n                // Save last state of nested mode\r\n                nestedModeState = nestedModeLineTokens.endState;\r\n                // Prepend nested mode's result to our result\r\n                prependTokens = prependTokens.concat(nestedModeLineTokens.tokens);\r\n                prependModeTransitions = prependModeTransitions.concat(nestedModeLineTokens.modeTransitions);\r\n            }\r\n            var bufferAfterNestedMode = leavingNestedModeData.bufferAfterNestedMode;\r\n            var myStateAfterNestedMode = leavingNestedModeData.stateAfterNestedMode;\r\n            myStateAfterNestedMode.setStateData(myStateBeforeNestedMode.getStateData());\r\n            this.onReturningFromNestedMode(myStateAfterNestedMode, nestedModeState);\r\n            return this._myTokenize(bufferAfterNestedMode, myStateAfterNestedMode, deltaOffset + nestedModeBuffer.length, stopAtOffset, prependTokens, prependModeTransitions);\r\n        };\r\n        /**\r\n         * Precondition is: state.getMode() === this\r\n         * This means we are in the current mode when parsing starts on this line.\r\n         */\r\n        TokenizationSupport.prototype._myTokenize = function (buffer, myState, deltaOffset, stopAtOffset, prependTokens, prependModeTransitions) {\r\n            var _this = this;\r\n            var lineStream = new lineStream_1.LineStream(buffer);\r\n            var tokenResult, beforeTokenizeStreamPos;\r\n            var previousType = null;\r\n            var retokenize = null;\r\n            myState = myState.clone();\r\n            if (prependModeTransitions.length <= 0 || prependModeTransitions[prependModeTransitions.length - 1].mode !== this.mode) {\r\n                // Avoid transitioning to the same mode (this can happen in case of empty embedded modes)\r\n                prependModeTransitions.push({\r\n                    startIndex: deltaOffset,\r\n                    mode: this.mode\r\n                });\r\n            }\r\n            var maxPos = Math.min(stopAtOffset - deltaOffset, buffer.length);\r\n            var noneBracket = Modes.Bracket.None;\r\n            while (lineStream.pos() < maxPos) {\r\n                beforeTokenizeStreamPos = lineStream.pos();\r\n                do {\r\n                    tokenResult = myState.tokenize(lineStream);\r\n                    if (tokenResult === null || tokenResult === undefined ||\r\n                        ((tokenResult.type === undefined || tokenResult.type === null) &&\r\n                            (tokenResult.nextState === undefined || tokenResult.nextState === null))) {\r\n                        throw new Error('Tokenizer must return a valid state');\r\n                    }\r\n                    if (tokenResult.nextState) {\r\n                        tokenResult.nextState.setStateData(myState.getStateData());\r\n                        myState = tokenResult.nextState;\r\n                    }\r\n                    if (lineStream.pos() <= beforeTokenizeStreamPos) {\r\n                        throw new Error('Stream did not advance while tokenizing. Mode id is ' + this.mode.getId() + ' (stuck at token type: \"' + tokenResult.type + '\", prepend tokens: \"' + (prependTokens.map(function (t) { return t.type; }).join(',')) + '\").');\r\n                    }\r\n                } while (!tokenResult.type && tokenResult.type !== '');\r\n                if (previousType !== tokenResult.type || tokenResult.bracket || previousType === null) {\r\n                    prependTokens.push(new Token(beforeTokenizeStreamPos + deltaOffset, tokenResult.type, tokenResult.bracket || noneBracket));\r\n                }\r\n                previousType = tokenResult.type;\r\n                if (this.supportsNestedModes && this.enterNestedMode(myState)) {\r\n                    var currentEmbeddedLevels = this._getEmbeddedLevel(myState);\r\n                    if (currentEmbeddedLevels < TokenizationSupport.MAX_EMBEDDED_LEVELS) {\r\n                        var nestedModeState = this.getNestedModeInitialState(myState);\r\n                        // Re-emit tokenizationSupport change events from all modes that I ever embedded\r\n                        var embeddedMode = nestedModeState.state.getMode();\r\n                        if (typeof embeddedMode.addSupportChangedListener === 'function' && !this._embeddedModesListeners.hasOwnProperty(embeddedMode.getId())) {\r\n                            var emitting = false;\r\n                            this._embeddedModesListeners[embeddedMode.getId()] = embeddedMode.addSupportChangedListener(function (e) {\r\n                                if (emitting) {\r\n                                    return;\r\n                                }\r\n                                if (e.tokenizationSupport) {\r\n                                    emitting = true;\r\n                                    _this.mode.registerSupport('tokenizationSupport', function (mode) {\r\n                                        return mode.tokenizationSupport;\r\n                                    });\r\n                                    emitting = false;\r\n                                }\r\n                            });\r\n                        }\r\n                        if (!lineStream.eos()) {\r\n                            // There is content from the embedded mode\r\n                            var restOfBuffer = buffer.substr(lineStream.pos());\r\n                            var result = this._nestedTokenize(restOfBuffer, nestedModeState.state, deltaOffset + lineStream.pos(), stopAtOffset, prependTokens, prependModeTransitions);\r\n                            result.retokenize = result.retokenize || nestedModeState.missingModePromise;\r\n                            return result;\r\n                        }\r\n                        else {\r\n                            // Transition to the nested mode state\r\n                            myState = nestedModeState.state;\r\n                            retokenize = nestedModeState.missingModePromise;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return {\r\n                tokens: prependTokens,\r\n                actualStopOffset: lineStream.pos() + deltaOffset,\r\n                modeTransitions: prependModeTransitions,\r\n                endState: myState,\r\n                retokenize: retokenize\r\n            };\r\n        };\r\n        TokenizationSupport.prototype._getEmbeddedLevel = function (state) {\r\n            var result = -1;\r\n            while (state) {\r\n                result++;\r\n                state = state.getStateData();\r\n            }\r\n            return result;\r\n        };\r\n        TokenizationSupport.prototype.enterNestedMode = function (state) {\r\n            if (this.defaults.enterNestedMode) {\r\n                return false;\r\n            }\r\n            return this.customization.enterNestedMode(state);\r\n        };\r\n        TokenizationSupport.prototype.getNestedMode = function (state) {\r\n            if (this.defaults.getNestedMode) {\r\n                return null;\r\n            }\r\n            return this.customization.getNestedMode(state);\r\n        };\r\n        TokenizationSupport._validatedNestedMode = function (input) {\r\n            var mode = new nullMode_1.NullMode(), missingModePromise = null;\r\n            if (input && input.mode) {\r\n                mode = input.mode;\r\n            }\r\n            if (input && input.missingModePromise) {\r\n                missingModePromise = input.missingModePromise;\r\n            }\r\n            return {\r\n                mode: mode,\r\n                missingModePromise: missingModePromise\r\n            };\r\n        };\r\n        TokenizationSupport.prototype.getNestedModeInitialState = function (state) {\r\n            if (this.defaults.getNestedModeInitialState) {\r\n                var nestedMode = TokenizationSupport._validatedNestedMode(this.getNestedMode(state));\r\n                var missingModePromise = nestedMode.missingModePromise;\r\n                var nestedModeState;\r\n                if (nestedMode.mode.tokenizationSupport) {\r\n                    nestedModeState = nestedMode.mode.tokenizationSupport.getInitialState();\r\n                }\r\n                else {\r\n                    nestedModeState = new nullMode_1.NullState(nestedMode.mode, null);\r\n                }\r\n                nestedModeState.setStateData(state);\r\n                return {\r\n                    state: nestedModeState,\r\n                    missingModePromise: missingModePromise\r\n                };\r\n            }\r\n            return this.customization.getNestedModeInitialState(state);\r\n        };\r\n        TokenizationSupport.prototype.getLeavingNestedModeData = function (line, state) {\r\n            if (this.defaults.getLeavingNestedModeData) {\r\n                return null;\r\n            }\r\n            return this.customization.getLeavingNestedModeData(line, state);\r\n        };\r\n        TokenizationSupport.prototype.onReturningFromNestedMode = function (myStateAfterNestedMode, lastNestedModeState) {\r\n            if (this.defaults.onReturningFromNestedMode) {\r\n                return null;\r\n            }\r\n            return this.customization.onReturningFromNestedMode(myStateAfterNestedMode, lastNestedModeState);\r\n        };\r\n        TokenizationSupport.MAX_EMBEDDED_LEVELS = 5;\r\n        return TokenizationSupport;\r\n    })(AbstractSupport);\r\n    exports.TokenizationSupport = TokenizationSupport;\r\n    var BracketElectricCharacterSupport = (function (_super) {\r\n        __extends(BracketElectricCharacterSupport, _super);\r\n        function BracketElectricCharacterSupport(mode, contribution) {\r\n            _super.call(this, mode);\r\n            this.contribution = contribution;\r\n            this.brackets = new autoIndentation_1.Brackets(contribution.brackets, contribution.regexBrackets, contribution.docComment, contribution.caseInsensitive);\r\n        }\r\n        BracketElectricCharacterSupport.prototype.getElectricCharacters = function () {\r\n            if (Array.isArray(this.contribution.embeddedElectricCharacters)) {\r\n                return this.contribution.embeddedElectricCharacters.concat(this.brackets.getElectricCharacters());\r\n            }\r\n            return this.brackets.getElectricCharacters();\r\n        };\r\n        BracketElectricCharacterSupport.prototype.onElectricCharacter = function (context, offset) {\r\n            var _this = this;\r\n            return handleEvent(context, offset, function (nestedMode, context, offset) {\r\n                if (_this.mode === nestedMode) {\r\n                    return _this.brackets.onElectricCharacter(context, offset);\r\n                }\r\n                else if (nestedMode.electricCharacterSupport) {\r\n                    return nestedMode.electricCharacterSupport.onElectricCharacter(context, offset);\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            });\r\n        };\r\n        BracketElectricCharacterSupport.prototype.onEnter = function (context, offset) {\r\n            var _this = this;\r\n            return handleEvent(context, offset, function (nestedMode, context, offset) {\r\n                if (_this.mode === nestedMode) {\r\n                    return _this.brackets.onEnter(context, offset);\r\n                }\r\n                else if (nestedMode.electricCharacterSupport) {\r\n                    return nestedMode.electricCharacterSupport.onEnter(context, offset);\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            });\r\n        };\r\n        return BracketElectricCharacterSupport;\r\n    })(AbstractSupport);\r\n    exports.BracketElectricCharacterSupport = BracketElectricCharacterSupport;\r\n    var DeclarationSupport = (function (_super) {\r\n        __extends(DeclarationSupport, _super);\r\n        /**\r\n         * Provide the token type postfixes for the tokens where a declaration can be found in the 'tokens' argument.\r\n         */\r\n        function DeclarationSupport(mode, contribution) {\r\n            _super.call(this, mode);\r\n            this.contribution = contribution;\r\n        }\r\n        DeclarationSupport.prototype.canFindDeclaration = function (context, offset) {\r\n            var _this = this;\r\n            return handleEvent(context, offset, function (nestedMode, context, offset) {\r\n                if (_this.mode === nestedMode) {\r\n                    return (!Array.isArray(_this.contribution.tokens) ||\r\n                        _this.contribution.tokens.length < 1 ||\r\n                        isLineToken(context, offset, _this.contribution.tokens));\r\n                }\r\n                else if (nestedMode.declarationSupport) {\r\n                    return nestedMode.declarationSupport.canFindDeclaration(context, offset);\r\n                }\r\n                else {\r\n                    return false;\r\n                }\r\n            });\r\n        };\r\n        DeclarationSupport.prototype.findDeclaration = function (resource, position) {\r\n            return this.contribution.findDeclaration(resource, position);\r\n        };\r\n        return DeclarationSupport;\r\n    })(AbstractSupport);\r\n    exports.DeclarationSupport = DeclarationSupport;\r\n    var TypeDeclarationSupport = (function (_super) {\r\n        __extends(TypeDeclarationSupport, _super);\r\n        /**\r\n         * Provide the token type postfixes for the tokens where a declaration can be found in the 'tokens' argument.\r\n         */\r\n        function TypeDeclarationSupport(mode, contribution) {\r\n            _super.call(this, mode);\r\n            this.contribution = contribution;\r\n        }\r\n        TypeDeclarationSupport.prototype.canFindTypeDeclaration = function (context, offset) {\r\n            var _this = this;\r\n            return handleEvent(context, offset, function (nestedMode, context, offset) {\r\n                if (_this.mode === nestedMode) {\r\n                    return (!Array.isArray(_this.contribution.tokens) ||\r\n                        _this.contribution.tokens.length < 1 ||\r\n                        isLineToken(context, offset, _this.contribution.tokens));\r\n                }\r\n                else if (nestedMode.typeDeclarationSupport) {\r\n                    return nestedMode.typeDeclarationSupport.canFindTypeDeclaration(context, offset);\r\n                }\r\n                else {\r\n                    return false;\r\n                }\r\n            });\r\n        };\r\n        TypeDeclarationSupport.prototype.findTypeDeclaration = function (resource, position) {\r\n            return this.contribution.findTypeDeclaration(resource, position);\r\n        };\r\n        return TypeDeclarationSupport;\r\n    })(AbstractSupport);\r\n    exports.TypeDeclarationSupport = TypeDeclarationSupport;\r\n    var ReferenceSupport = (function (_super) {\r\n        __extends(ReferenceSupport, _super);\r\n        /**\r\n         * Provide the token type postfixes for the tokens where a reference can be found in the 'tokens' argument.\r\n         */\r\n        function ReferenceSupport(mode, contribution) {\r\n            _super.call(this, mode);\r\n            this.contribution = contribution;\r\n        }\r\n        ReferenceSupport.prototype.canFindReferences = function (context, offset) {\r\n            var _this = this;\r\n            return handleEvent(context, offset, function (nestedMode, context, offset) {\r\n                if (_this.mode === nestedMode) {\r\n                    return (!Array.isArray(_this.contribution.tokens) ||\r\n                        _this.contribution.tokens.length < 1 ||\r\n                        isLineToken(context, offset, _this.contribution.tokens));\r\n                }\r\n                else if (nestedMode.referenceSupport) {\r\n                    return nestedMode.referenceSupport.canFindReferences(context, offset);\r\n                }\r\n                else {\r\n                    return false;\r\n                }\r\n            });\r\n        };\r\n        ReferenceSupport.prototype.findReferences = function (resource, position, includeDeclaration) {\r\n            return this.contribution.findReferences(resource, position, includeDeclaration);\r\n        };\r\n        return ReferenceSupport;\r\n    })(AbstractSupport);\r\n    exports.ReferenceSupport = ReferenceSupport;\r\n    var ParameterHintsSupport = (function (_super) {\r\n        __extends(ParameterHintsSupport, _super);\r\n        function ParameterHintsSupport(mode, contribution) {\r\n            _super.call(this, mode);\r\n            this.contribution = contribution;\r\n        }\r\n        ParameterHintsSupport.prototype.getParameterHintsTriggerCharacters = function () {\r\n            return this.contribution.triggerCharacters;\r\n        };\r\n        ParameterHintsSupport.prototype.shouldTriggerParameterHints = function (context, offset) {\r\n            var _this = this;\r\n            return handleEvent(context, offset, function (nestedMode, context, offset) {\r\n                if (_this.mode === nestedMode) {\r\n                    if (!Array.isArray(_this.contribution.excludeTokens)) {\r\n                        return true;\r\n                    }\r\n                    if (_this.contribution.excludeTokens.length === 1 && _this.contribution.excludeTokens[0] === '*') {\r\n                        return false;\r\n                    }\r\n                    return !isLineToken(context, offset - 1, _this.contribution.excludeTokens);\r\n                }\r\n                else if (nestedMode.parameterHintsSupport) {\r\n                    return nestedMode.parameterHintsSupport.shouldTriggerParameterHints(context, offset);\r\n                }\r\n                else {\r\n                    return false;\r\n                }\r\n            });\r\n        };\r\n        ParameterHintsSupport.prototype.getParameterHints = function (resource, position) {\r\n            return this.contribution.getParameterHints(resource, position);\r\n        };\r\n        return ParameterHintsSupport;\r\n    })(AbstractSupport);\r\n    exports.ParameterHintsSupport = ParameterHintsSupport;\r\n    var SuggestSupport = (function (_super) {\r\n        __extends(SuggestSupport, _super);\r\n        function SuggestSupport(mode, contribution) {\r\n            _super.call(this, mode);\r\n            this.contribution = contribution;\r\n            this.suggest = function (resource, position) { return contribution.suggest(resource, position); };\r\n            if (typeof contribution.getSuggestionDetails === 'function') {\r\n                this.getSuggestionDetails = function (resource, position, suggestion) { return contribution.getSuggestionDetails(resource, position, suggestion); };\r\n            }\r\n            this.sortByType = [];\r\n            this.separatorForType = [];\r\n            if (Array.isArray(contribution.sortBy) && contribution.sortBy.length > 0) {\r\n                for (var i = 0; i < contribution.sortBy.length; ++i) {\r\n                    this.sortByType.push(contribution.sortBy[i].type);\r\n                    this.separatorForType.push(contribution.sortBy[i].partSeparator);\r\n                }\r\n            }\r\n        }\r\n        SuggestSupport.prototype.shouldAutotriggerSuggest = function (context, offset, triggeredByCharacter) {\r\n            var _this = this;\r\n            return handleEvent(context, offset, function (nestedMode, context, offset) {\r\n                if (_this.mode === nestedMode) {\r\n                    if (_this.contribution.disableAutoTrigger) {\r\n                        return false;\r\n                    }\r\n                    if (!Array.isArray(_this.contribution.excludeTokens)) {\r\n                        return true;\r\n                    }\r\n                    if (_this.contribution.excludeTokens.length === 1 && _this.contribution.excludeTokens[0] === '*') {\r\n                        return false;\r\n                    }\r\n                    return !isLineToken(context, offset - 1, _this.contribution.excludeTokens, true);\r\n                }\r\n                else if (nestedMode.suggestSupport) {\r\n                    return nestedMode.suggestSupport.shouldAutotriggerSuggest(context, offset, triggeredByCharacter);\r\n                }\r\n                else {\r\n                    return false;\r\n                }\r\n            });\r\n        };\r\n        SuggestSupport.prototype.getFilter = function () {\r\n            return modesFilters_1.DefaultFilter;\r\n        };\r\n        SuggestSupport.prototype.getSorter = function () {\r\n            var _this = this;\r\n            return function (one, other) {\r\n                if (_this.sortByType.length > 0) {\r\n                    var oneTypeIndex = _this.sortByType.indexOf(one.type);\r\n                    var otherTypeIndex = _this.sortByType.indexOf(other.type);\r\n                    if (oneTypeIndex < 0) {\r\n                        oneTypeIndex = _this.sortByType.length;\r\n                    }\r\n                    if (otherTypeIndex < 0) {\r\n                        otherTypeIndex = _this.sortByType.length;\r\n                    }\r\n                    if (oneTypeIndex < otherTypeIndex) {\r\n                        return -1;\r\n                    }\r\n                    if (otherTypeIndex < oneTypeIndex) {\r\n                        return 1;\r\n                    }\r\n                    // TypeIndices are equal\r\n                    if (oneTypeIndex < _this.sortByType.length) {\r\n                        var separator = _this.separatorForType[oneTypeIndex];\r\n                        var oneParts = ((typeof separator === 'string' && separator.length > 0) ? one.label.split(separator) : [one.label]);\r\n                        var otherParts = ((typeof separator === 'string' && separator.length > 0) ? other.label.split(separator) : [other.label]);\r\n                        if (oneParts.length < otherParts.length) {\r\n                            return -1;\r\n                        }\r\n                        else if (oneParts.length > otherParts.length) {\r\n                            return 1;\r\n                        }\r\n                        else {\r\n                            for (var i = 0; i < oneParts.length; i++) {\r\n                                var result = Strings.localeCompare(oneParts[i], otherParts[i]);\r\n                                if (result !== 0) {\r\n                                    return result;\r\n                                }\r\n                            }\r\n                            return 0;\r\n                        }\r\n                    }\r\n                }\r\n                var cmp = 0;\r\n                if (one.sortText && other.sortText) {\r\n                    cmp = one.sortText.localeCompare(other.sortText);\r\n                }\r\n                if (!cmp) {\r\n                    cmp = Strings.localeCompare(one.label.toLowerCase(), other.label.toLowerCase());\r\n                }\r\n                return Strings.localeCompare(one.documentationLabel || '', other.documentationLabel || '');\r\n            };\r\n        };\r\n        SuggestSupport.prototype.getTriggerCharacters = function () {\r\n            return this.contribution.triggerCharacters;\r\n        };\r\n        SuggestSupport.prototype.shouldShowEmptySuggestionList = function () {\r\n            return true;\r\n        };\r\n        return SuggestSupport;\r\n    })(AbstractSupport);\r\n    exports.SuggestSupport = SuggestSupport;\r\n    var ComposableSuggestSupport = (function (_super) {\r\n        __extends(ComposableSuggestSupport, _super);\r\n        function ComposableSuggestSupport(mode, contribution) {\r\n            _super.call(this, mode, contribution);\r\n            this.suggest = function (resource, position) {\r\n                return (contribution.suggest(resource, position)\r\n                    .then(function (superSuggestions) { return contribution.composeSuggest(resource, position, superSuggestions); }));\r\n            };\r\n        }\r\n        return ComposableSuggestSupport;\r\n    })(SuggestSupport);\r\n    exports.ComposableSuggestSupport = ComposableSuggestSupport;\r\n    var CharacterPairSupport = (function (_super) {\r\n        __extends(CharacterPairSupport, _super);\r\n        function CharacterPairSupport(mode, contribution) {\r\n            _super.call(this, mode);\r\n            this._autoClosingPairs = contribution.autoClosingPairs;\r\n            this._surroundingPairs = Array.isArray(contribution.surroundingPairs) ? contribution.surroundingPairs : contribution.autoClosingPairs;\r\n        }\r\n        CharacterPairSupport.prototype.getAutoClosingPairs = function () {\r\n            return this._autoClosingPairs;\r\n        };\r\n        CharacterPairSupport.prototype.shouldAutoClosePair = function (character, context, offset) {\r\n            var _this = this;\r\n            return handleEvent(context, offset, function (nestedMode, context, offset) {\r\n                if (_this.mode === nestedMode) {\r\n                    // Always complete on empty line\r\n                    if (context.getTokenCount() === 0) {\r\n                        return true;\r\n                    }\r\n                    var tokenIndex = context.findIndexOfOffset(offset - 1);\r\n                    var tokenType = context.getTokenType(tokenIndex);\r\n                    for (var i = 0; i < _this._autoClosingPairs.length; ++i) {\r\n                        if (_this._autoClosingPairs[i].open === character) {\r\n                            if (_this._autoClosingPairs[i].notIn) {\r\n                                for (var notInIndex = 0; notInIndex < _this._autoClosingPairs[i].notIn.length; ++notInIndex) {\r\n                                    if (tokenType.indexOf(_this._autoClosingPairs[i].notIn[notInIndex]) > -1) {\r\n                                        return false;\r\n                                    }\r\n                                }\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                    return true;\r\n                }\r\n                else if (nestedMode.characterPairSupport) {\r\n                    return nestedMode.characterPairSupport.shouldAutoClosePair(character, context, offset);\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            });\r\n        };\r\n        CharacterPairSupport.prototype.getSurroundingPairs = function () {\r\n            return this._surroundingPairs;\r\n        };\r\n        return CharacterPairSupport;\r\n    })(AbstractSupport);\r\n    exports.CharacterPairSupport = CharacterPairSupport;\r\n    var ReplaceSupportHelperImpl = (function () {\r\n        function ReplaceSupportHelperImpl() {\r\n        }\r\n        ReplaceSupportHelperImpl.prototype.valueSetsReplace = function (valueSets, value, up) {\r\n            var result = null;\r\n            for (var i = 0, len = valueSets.length; result === null && i < len; i++) {\r\n                result = this.valueSetReplace(valueSets[i], value, up);\r\n            }\r\n            return result;\r\n        };\r\n        ReplaceSupportHelperImpl.prototype.valueSetReplace = function (valueSet, value, up) {\r\n            var idx = valueSet.indexOf(value);\r\n            if (idx >= 0) {\r\n                idx += up ? +1 : -1;\r\n                if (idx < 0) {\r\n                    idx = valueSet.length - 1;\r\n                }\r\n                else {\r\n                    idx %= valueSet.length;\r\n                }\r\n                return valueSet[idx];\r\n            }\r\n            return null;\r\n        };\r\n        return ReplaceSupportHelperImpl;\r\n    })();\r\n    exports.ReplaceSupport = new ReplaceSupportHelperImpl();\r\n    var AbstractInplaceReplaceSupport = (function () {\r\n        function AbstractInplaceReplaceSupport(customization) {\r\n            if (customization === void 0) { customization = null; }\r\n            this._defaultValueSet = [\r\n                ['true', 'false'],\r\n                ['True', 'False'],\r\n                ['Private', 'Public', 'Friend', 'ReadOnly', 'Partial', 'Protected', 'WriteOnly'],\r\n                ['public', 'protected', 'private'],\r\n            ];\r\n            this.defaults = {\r\n                textReplace: !customization || !isFunction(customization.textReplace),\r\n                navigateValueSetFallback: !customization || !isFunction(customization.navigateValueSetFallback)\r\n            };\r\n            this.customization = customization;\r\n        }\r\n        AbstractInplaceReplaceSupport.prototype.navigateValueSet = function (resource, range, up) {\r\n            var result = this.doNavigateValueSet(resource, range, up, true);\r\n            if (result && result.value && result.range) {\r\n                return winjs_base_1.TPromise.as(result);\r\n            }\r\n            if (this.defaults.navigateValueSetFallback) {\r\n                return winjs_base_1.TPromise.as(null);\r\n            }\r\n            return this.customization.navigateValueSetFallback(resource, range, up);\r\n        };\r\n        AbstractInplaceReplaceSupport.prototype.doNavigateValueSet = function (resource, range, up, selection) {\r\n            var model = this.getModel(resource), result = { range: null, value: null }, text;\r\n            if (selection) {\r\n                // Replace selection\r\n                if (range.startColumn === range.endColumn) {\r\n                    range.endColumn += 1;\r\n                }\r\n                text = model.getValueInRange(range);\r\n                result.range = range;\r\n            }\r\n            else {\r\n                // Replace word\r\n                var position = { lineNumber: range.startLineNumber, column: range.startColumn };\r\n                var wordPos = model.getWordAtPosition(position);\r\n                if (!wordPos || wordPos.startColumn === -1) {\r\n                    return null;\r\n                }\r\n                text = wordPos.word;\r\n                result.range = { startLineNumber: range.startLineNumber, endLineNumber: range.endLineNumber, startColumn: wordPos.startColumn, endColumn: wordPos.endColumn };\r\n            }\r\n            // Try to replace numbers or text\r\n            var numberResult = this.numberReplace(text, up);\r\n            if (numberResult !== null) {\r\n                result.value = numberResult;\r\n            }\r\n            else {\r\n                var textResult = this.textReplace(text, up);\r\n                if (textResult !== null) {\r\n                    result.value = textResult;\r\n                }\r\n                else if (selection) {\r\n                    return this.doNavigateValueSet(resource, range, up, false);\r\n                }\r\n            }\r\n            return result;\r\n        };\r\n        AbstractInplaceReplaceSupport.prototype.numberReplace = function (value, up) {\r\n            var precision = Math.pow(10, value.length - (value.lastIndexOf('.') + 1)), n1 = Number(value), n2 = parseFloat(value);\r\n            if (!isNaN(n1) && !isNaN(n2) && n1 === n2) {\r\n                if (n1 === 0 && !up) {\r\n                    return null; // don't do negative\r\n                }\r\n                else {\r\n                    n1 = Math.floor(n1 * precision);\r\n                    n1 += up ? precision : -precision;\r\n                    return String(n1 / precision);\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        AbstractInplaceReplaceSupport.prototype.textReplace = function (value, up) {\r\n            if (this.defaults.textReplace) {\r\n                return exports.ReplaceSupport.valueSetsReplace(this._defaultValueSet, value, up);\r\n            }\r\n            return this.customization.textReplace(value, up)\r\n                || exports.ReplaceSupport.valueSetsReplace(this._defaultValueSet, value, up);\r\n        };\r\n        AbstractInplaceReplaceSupport.prototype.getModel = function (resource) {\r\n            throw new Error('Not implemented');\r\n        };\r\n        return AbstractInplaceReplaceSupport;\r\n    })();\r\n    exports.AbstractInplaceReplaceSupport = AbstractInplaceReplaceSupport;\r\n    var WorkerInplaceReplaceSupport = (function (_super) {\r\n        __extends(WorkerInplaceReplaceSupport, _super);\r\n        function WorkerInplaceReplaceSupport(resourceService, customization) {\r\n            if (customization === void 0) { customization = null; }\r\n            _super.call(this, customization);\r\n            this.resourceService = resourceService;\r\n        }\r\n        WorkerInplaceReplaceSupport.prototype.getModel = function (resource) {\r\n            return this.resourceService.get(resource);\r\n        };\r\n        return WorkerInplaceReplaceSupport;\r\n    })(AbstractInplaceReplaceSupport);\r\n    exports.WorkerInplaceReplaceSupport = WorkerInplaceReplaceSupport;\r\n    var MainInplaceReplaceSupport = (function (_super) {\r\n        __extends(MainInplaceReplaceSupport, _super);\r\n        function MainInplaceReplaceSupport(modelService, customization) {\r\n            if (customization === void 0) { customization = null; }\r\n            _super.call(this, customization);\r\n            this.modelService = modelService;\r\n        }\r\n        MainInplaceReplaceSupport.prototype.getModel = function (resource) {\r\n            return this.modelService.getModel(resource);\r\n        };\r\n        return MainInplaceReplaceSupport;\r\n    })(AbstractInplaceReplaceSupport);\r\n    exports.MainInplaceReplaceSupport = MainInplaceReplaceSupport;\r\n    var CommentsSupport = (function () {\r\n        function CommentsSupport(contribution) {\r\n            this._contribution = contribution;\r\n        }\r\n        CommentsSupport.prototype.getCommentsConfiguration = function () {\r\n            return this._contribution.commentsConfiguration;\r\n        };\r\n        return CommentsSupport;\r\n    })();\r\n    exports.CommentsSupport = CommentsSupport;\r\n    var TokenTypeClassificationSupport = (function () {\r\n        function TokenTypeClassificationSupport(contribution) {\r\n            this._contribution = contribution;\r\n        }\r\n        TokenTypeClassificationSupport.prototype.getWordDefinition = function () {\r\n            if (typeof this._contribution.wordDefinition === 'undefined') {\r\n                return nullMode_1.NullMode.DEFAULT_WORD_REGEXP;\r\n            }\r\n            return this._contribution.wordDefinition;\r\n        };\r\n        return TokenTypeClassificationSupport;\r\n    })();\r\n    exports.TokenTypeClassificationSupport = TokenTypeClassificationSupport;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/editor/common/modes/supports/onEnter\", [\"require\", \"exports\", 'vs/editor/common/modes/supports', 'vs/editor/common/modes', 'vs/base/common/errors', 'vs/base/common/strings', 'vs/editor/common/core/position'], function (require, exports, supports_1, modes_1, Errors, Strings, position_1) {\r\n    var OnEnterSupport = (function () {\r\n        function OnEnterSupport(modeId, opts) {\r\n            opts = opts || {};\r\n            opts.brackets = opts.brackets || [\r\n                { open: '(', close: ')' },\r\n                { open: '{', close: '}' },\r\n                { open: '[', close: ']' }\r\n            ];\r\n            this._modeId = modeId;\r\n            this._brackets = opts.brackets.map(function (bracket) {\r\n                return {\r\n                    open: bracket.open,\r\n                    openRegExp: OnEnterSupport._createOpenBracketRegExp(bracket.open),\r\n                    close: bracket.close,\r\n                    closeRegExp: OnEnterSupport._createCloseBracketRegExp(bracket.close),\r\n                };\r\n            });\r\n            this._regExpRules = opts.regExpRules || [];\r\n            this._indentationRules = opts.indentationRules;\r\n        }\r\n        OnEnterSupport.prototype.onEnter = function (model, position) {\r\n            var _this = this;\r\n            var context = model.getLineContext(position.lineNumber);\r\n            return supports_1.handleEvent(context, position.column - 1, function (nestedMode, context, offset) {\r\n                if (_this._modeId === nestedMode.getId()) {\r\n                    return _this._onEnter(model, position);\r\n                }\r\n                else if (nestedMode.onEnterSupport) {\r\n                    return nestedMode.onEnterSupport.onEnter(model, position);\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            });\r\n        };\r\n        OnEnterSupport.prototype._onEnter = function (model, position) {\r\n            var lineText = model.getLineContent(position.lineNumber);\r\n            var beforeEnterText = lineText.substr(0, position.column - 1);\r\n            var afterEnterText = lineText.substr(position.column - 1);\r\n            var oneLineAboveText = position.lineNumber === 1 ? '' : model.getLineContent(position.lineNumber - 1);\r\n            return this._actualOnEnter(oneLineAboveText, beforeEnterText, afterEnterText);\r\n        };\r\n        OnEnterSupport.prototype._actualOnEnter = function (oneLineAboveText, beforeEnterText, afterEnterText) {\r\n            // (1): `regExpRules`\r\n            for (var i = 0, len = this._regExpRules.length; i < len; i++) {\r\n                var rule = this._regExpRules[i];\r\n                if (rule.beforeText.test(beforeEnterText)) {\r\n                    if (rule.afterText) {\r\n                        if (rule.afterText.test(afterEnterText)) {\r\n                            return rule.action;\r\n                        }\r\n                    }\r\n                    else {\r\n                        return rule.action;\r\n                    }\r\n                }\r\n            }\r\n            // (2): Special indent-outdent\r\n            if (beforeEnterText.length > 0 && afterEnterText.length > 0) {\r\n                for (var i = 0, len = this._brackets.length; i < len; i++) {\r\n                    var bracket = this._brackets[i];\r\n                    if (bracket.openRegExp.test(beforeEnterText) && bracket.closeRegExp.test(afterEnterText)) {\r\n                        return OnEnterSupport._INDENT_OUTDENT;\r\n                    }\r\n                }\r\n            }\r\n            // (3): Indentation Support\r\n            if (this._indentationRules) {\r\n                if (this._indentationRules.increaseIndentPattern && this._indentationRules.increaseIndentPattern.test(beforeEnterText)) {\r\n                    return OnEnterSupport._INDENT;\r\n                }\r\n                if (this._indentationRules.indentNextLinePattern && this._indentationRules.indentNextLinePattern.test(beforeEnterText)) {\r\n                    return OnEnterSupport._INDENT;\r\n                }\r\n                if (/^\\s/.test(beforeEnterText)) {\r\n                    // No reason to run regular expressions if there is nothing to outdent from\r\n                    if (this._indentationRules.decreaseIndentPattern && this._indentationRules.decreaseIndentPattern.test(afterEnterText)) {\r\n                        return OnEnterSupport._OUTDENT;\r\n                    }\r\n                    if (this._indentationRules.indentNextLinePattern && this._indentationRules.indentNextLinePattern.test(oneLineAboveText)) {\r\n                        return OnEnterSupport._OUTDENT;\r\n                    }\r\n                }\r\n            }\r\n            // (4): Open Bracket based logic\r\n            if (beforeEnterText.length > 0) {\r\n                for (var i = 0, len = this._brackets.length; i < len; i++) {\r\n                    var bracket = this._brackets[i];\r\n                    if (bracket.openRegExp.test(beforeEnterText)) {\r\n                        return OnEnterSupport._INDENT;\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        OnEnterSupport._createOpenBracketRegExp = function (bracket) {\r\n            var str = Strings.escapeRegExpCharacters(bracket);\r\n            if (!/\\B/.test(str.charAt(0))) {\r\n                str = '\\\\b' + str;\r\n            }\r\n            str += '\\\\s*$';\r\n            return OnEnterSupport._safeRegExp(str);\r\n        };\r\n        OnEnterSupport._createCloseBracketRegExp = function (bracket) {\r\n            var str = Strings.escapeRegExpCharacters(bracket);\r\n            if (!/\\B/.test(str.charAt(str.length - 1))) {\r\n                str = str + '\\\\b';\r\n            }\r\n            str = '^\\\\s*' + str;\r\n            return OnEnterSupport._safeRegExp(str);\r\n        };\r\n        OnEnterSupport._safeRegExp = function (def) {\r\n            try {\r\n                return new RegExp(def);\r\n            }\r\n            catch (err) {\r\n                Errors.onUnexpectedError(err);\r\n                return null;\r\n            }\r\n        };\r\n        OnEnterSupport._INDENT = { indentAction: modes_1.IndentAction.Indent };\r\n        OnEnterSupport._INDENT_OUTDENT = { indentAction: modes_1.IndentAction.IndentOutdent };\r\n        OnEnterSupport._OUTDENT = { indentAction: modes_1.IndentAction.Outdent };\r\n        return OnEnterSupport;\r\n    })();\r\n    exports.OnEnterSupport = OnEnterSupport;\r\n    function getRawEnterActionAtPosition(model, lineNumber, column) {\r\n        var enterAction;\r\n        if (model.getMode().onEnterSupport) {\r\n            try {\r\n                enterAction = model.getMode().onEnterSupport.onEnter(model, new position_1.Position(lineNumber, column));\r\n            }\r\n            catch (e) {\r\n                Errors.onUnexpectedError(e);\r\n            }\r\n        }\r\n        if (!enterAction) {\r\n            if (model.getMode().electricCharacterSupport) {\r\n                var lineContext = model.getLineContext(lineNumber);\r\n                try {\r\n                    enterAction = model.getMode().electricCharacterSupport.onEnter(lineContext, column - 1);\r\n                }\r\n                catch (e) {\r\n                    Errors.onUnexpectedError(e);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n        }\r\n        return enterAction;\r\n    }\r\n    exports.getRawEnterActionAtPosition = getRawEnterActionAtPosition;\r\n    function getEnterActionAtPosition(model, lineNumber, column) {\r\n        var lineText = model.getLineContent(lineNumber);\r\n        var indentation = Strings.getLeadingWhitespace(lineText);\r\n        if (indentation.length > column - 1) {\r\n            indentation = indentation.substring(0, column - 1);\r\n        }\r\n        var enterAction = getRawEnterActionAtPosition(model, lineNumber, column);\r\n        if (!enterAction) {\r\n            enterAction = {\r\n                indentAction: modes_1.IndentAction.None,\r\n                appendText: '',\r\n            };\r\n        }\r\n        else {\r\n            if (!enterAction.appendText) {\r\n                if ((enterAction.indentAction === modes_1.IndentAction.Indent) ||\r\n                    (enterAction.indentAction === modes_1.IndentAction.IndentOutdent)) {\r\n                    enterAction.appendText = '\\t';\r\n                }\r\n                else {\r\n                    enterAction.appendText = '';\r\n                }\r\n            }\r\n        }\r\n        if (enterAction.removeText) {\r\n            indentation = indentation.substring(0, indentation.length - 1);\r\n        }\r\n        return {\r\n            enterAction: enterAction,\r\n            indentation: indentation\r\n        };\r\n    }\r\n    exports.getEnterActionAtPosition = getEnterActionAtPosition;\r\n});\r\n\ndefine(\"vs/nls!vs/base/node/zip\",['vs/nls', 'vs/nls!vs/workbench/node/pluginHostProcess'], function(nls, data) { return nls.create(\"vs/base/node/zip\", data); });\ndefine(\"vs/nls!vs/editor/common/modes/languageExtensionPoint\",['vs/nls', 'vs/nls!vs/workbench/node/pluginHostProcess'], function(nls, data) { return nls.create(\"vs/editor/common/modes/languageExtensionPoint\", data); });\ndefine(\"vs/nls!vs/editor/common/services/bulkEdit\",['vs/nls', 'vs/nls!vs/workbench/node/pluginHostProcess'], function(nls, data) { return nls.create(\"vs/editor/common/services/bulkEdit\", data); });\ndefine(\"vs/nls!vs/editor/contrib/rename/common/rename\",['vs/nls', 'vs/nls!vs/workbench/node/pluginHostProcess'], function(nls, data) { return nls.create(\"vs/editor/contrib/rename/common/rename\", data); });\ndefine(\"vs/nls!vs/platform/jsonschemas/common/jsonContributionRegistry\",['vs/nls', 'vs/nls!vs/workbench/node/pluginHostProcess'], function(nls, data) { return nls.create(\"vs/platform/jsonschemas/common/jsonContributionRegistry\", data); });\ndefine(\"vs/nls!vs/platform/message/common/message\",['vs/nls', 'vs/nls!vs/workbench/node/pluginHostProcess'], function(nls, data) { return nls.create(\"vs/platform/message/common/message\", data); });\ndefine(\"vs/nls!vs/platform/plugins/common/abstractPluginService\",['vs/nls', 'vs/nls!vs/workbench/node/pluginHostProcess'], function(nls, data) { return nls.create(\"vs/platform/plugins/common/abstractPluginService\", data); });\ndefine(\"vs/nls!vs/platform/plugins/common/pluginsRegistry\",['vs/nls', 'vs/nls!vs/workbench/node/pluginHostProcess'], function(nls, data) { return nls.create(\"vs/platform/plugins/common/pluginsRegistry\", data); });\ndefine(\"vs/nls!vs/platform/plugins/node/pluginVersionValidator\",['vs/nls', 'vs/nls!vs/workbench/node/pluginHostProcess'], function(nls, data) { return nls.create(\"vs/platform/plugins/node/pluginVersionValidator\", data); });\ndefine(\"vs/nls!vs/workbench/api/common/pluginHostMessageService\",['vs/nls', 'vs/nls!vs/workbench/node/pluginHostProcess'], function(nls, data) { return nls.create(\"vs/workbench/api/common/pluginHostMessageService\", data); });\ndefine(\"vs/nls!vs/workbench/node/pluginHostMain\",['vs/nls', 'vs/nls!vs/workbench/node/pluginHostProcess'], function(nls, data) { return nls.create(\"vs/workbench/node/pluginHostMain\", data); });\ndefine(\"vs/nls!vs/workbench/parts/extensions/node/extensionsService\",['vs/nls', 'vs/nls!vs/workbench/node/pluginHostProcess'], function(nls, data) { return nls.create(\"vs/workbench/parts/extensions/node/extensionsService\", data); });\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\ndefine(\"vs/platform/instantiation/common/descriptors\", [\"require\", \"exports\", 'vs/base/common/errors', 'vs/base/common/marshalling', 'vs/base/common/hash'], function (require, exports, errors, marshalling, hash) {\r\n    var AbstractDescriptor = (function () {\r\n        function AbstractDescriptor(_staticArguments) {\r\n            this._staticArguments = _staticArguments;\r\n            // empty\r\n        }\r\n        AbstractDescriptor.prototype.appendStaticArguments = function (more) {\r\n            this._staticArguments.push.apply(this._staticArguments, more);\r\n        };\r\n        AbstractDescriptor.prototype.staticArguments = function (nth) {\r\n            if (isNaN(nth)) {\r\n                return this._staticArguments.slice(0);\r\n            }\r\n            else {\r\n                return this._staticArguments[nth];\r\n            }\r\n        };\r\n        AbstractDescriptor.prototype._validate = function (type) {\r\n            if (!type) {\r\n                throw errors.illegalArgument('can not be falsy');\r\n            }\r\n        };\r\n        return AbstractDescriptor;\r\n    })();\r\n    exports.AbstractDescriptor = AbstractDescriptor;\r\n    var SyncDescriptor = (function (_super) {\r\n        __extends(SyncDescriptor, _super);\r\n        function SyncDescriptor(_ctor) {\r\n            var staticArguments = [];\r\n            for (var _i = 1; _i < arguments.length; _i++) {\r\n                staticArguments[_i - 1] = arguments[_i];\r\n            }\r\n            _super.call(this, staticArguments);\r\n            this._ctor = _ctor;\r\n        }\r\n        Object.defineProperty(SyncDescriptor.prototype, \"ctor\", {\r\n            get: function () {\r\n                return this._ctor;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        SyncDescriptor.prototype.equals = function (other) {\r\n            if (other === this) {\r\n                return true;\r\n            }\r\n            if (!(other instanceof SyncDescriptor)) {\r\n                return false;\r\n            }\r\n            return other.ctor === this.ctor;\r\n        };\r\n        SyncDescriptor.prototype.hashCode = function () {\r\n            return 61 * (1 + this.ctor.length);\r\n        };\r\n        SyncDescriptor.prototype.bind = function () {\r\n            var moreStaticArguments = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                moreStaticArguments[_i - 0] = arguments[_i];\r\n            }\r\n            var allArgs = [];\r\n            allArgs = allArgs.concat(this.staticArguments());\r\n            allArgs = allArgs.concat(moreStaticArguments);\r\n            return new (SyncDescriptor.bind.apply(SyncDescriptor, [void 0].concat([this._ctor], allArgs)))();\r\n        };\r\n        return SyncDescriptor;\r\n    })(AbstractDescriptor);\r\n    exports.SyncDescriptor = SyncDescriptor;\r\n    exports.createSyncDescriptor = function (ctor) {\r\n        var staticArguments = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            staticArguments[_i - 1] = arguments[_i];\r\n        }\r\n        return new (SyncDescriptor.bind.apply(SyncDescriptor, [void 0].concat([ctor], staticArguments)))();\r\n    };\r\n    marshalling.registerMarshallingContribution({\r\n        canSerialize: function (obj) {\r\n            return obj instanceof AsyncDescriptor;\r\n        },\r\n        serialize: function (asyncDescriptor, serialize) {\r\n            return {\r\n                $isAsyncDescriptor: true,\r\n                $moduleName: asyncDescriptor.moduleName,\r\n                $ctorName: asyncDescriptor.ctorName,\r\n                $staticArguments: serialize(asyncDescriptor.staticArguments())\r\n            };\r\n        },\r\n        canDeserialize: function (obj) {\r\n            return obj.$isAsyncDescriptor;\r\n        },\r\n        deserialize: function (obj, deserialize) {\r\n            var r = new AsyncDescriptor(obj.$moduleName, obj.$ctorName);\r\n            r.appendStaticArguments(deserialize(obj.$staticArguments));\r\n            return r;\r\n        }\r\n    });\r\n    var AsyncDescriptor = (function (_super) {\r\n        __extends(AsyncDescriptor, _super);\r\n        function AsyncDescriptor(_moduleName, _ctorName) {\r\n            var staticArguments = [];\r\n            for (var _i = 2; _i < arguments.length; _i++) {\r\n                staticArguments[_i - 2] = arguments[_i];\r\n            }\r\n            _super.call(this, staticArguments);\r\n            this._moduleName = _moduleName;\r\n            this._ctorName = _ctorName;\r\n        }\r\n        AsyncDescriptor.create = function (moduleName, ctorName) {\r\n            return new AsyncDescriptor(moduleName, ctorName);\r\n        };\r\n        Object.defineProperty(AsyncDescriptor.prototype, \"moduleName\", {\r\n            get: function () {\r\n                return this._moduleName;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(AsyncDescriptor.prototype, \"ctorName\", {\r\n            get: function () {\r\n                return this._ctorName;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        AsyncDescriptor.prototype.equals = function (other) {\r\n            if (other === this) {\r\n                return true;\r\n            }\r\n            if (!(other instanceof AsyncDescriptor)) {\r\n                return false;\r\n            }\r\n            return other.moduleName === this.moduleName &&\r\n                other.ctorName === this.ctorName;\r\n        };\r\n        AsyncDescriptor.prototype.hashCode = function () {\r\n            return hash.computeMurmur2StringHashCode(this.moduleName) * hash.computeMurmur2StringHashCode(this.ctorName);\r\n        };\r\n        AsyncDescriptor.prototype.bind = function () {\r\n            var moreStaticArguments = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                moreStaticArguments[_i - 0] = arguments[_i];\r\n            }\r\n            var allArgs = [];\r\n            allArgs = allArgs.concat(this.staticArguments());\r\n            allArgs = allArgs.concat(moreStaticArguments);\r\n            return new (AsyncDescriptor.bind.apply(AsyncDescriptor, [void 0].concat([this.moduleName, this.ctorName], allArgs)))();\r\n        };\r\n        return AsyncDescriptor;\r\n    })(AbstractDescriptor);\r\n    exports.AsyncDescriptor = AsyncDescriptor;\r\n    var _createAsyncDescriptor = function (moduleName, ctorName) {\r\n        var staticArguments = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            staticArguments[_i - 2] = arguments[_i];\r\n        }\r\n        return new (AsyncDescriptor.bind.apply(AsyncDescriptor, [void 0].concat([moduleName, ctorName], staticArguments)))();\r\n    };\r\n    exports.createAsyncDescriptor0 = _createAsyncDescriptor;\r\n    exports.createAsyncDescriptor1 = _createAsyncDescriptor;\r\n    exports.createAsyncDescriptor2 = _createAsyncDescriptor;\r\n    exports.createAsyncDescriptor3 = _createAsyncDescriptor;\r\n    exports.createAsyncDescriptor4 = _createAsyncDescriptor;\r\n    exports.createAsyncDescriptor5 = _createAsyncDescriptor;\r\n    exports.createAsyncDescriptor6 = _createAsyncDescriptor;\r\n    exports.createAsyncDescriptor7 = _createAsyncDescriptor;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/platform/instantiation/common/instantiation\", [\"require\", \"exports\"], function (require, exports) {\r\n    // ----------------------- internal util -----------------------\r\n    var _util;\r\n    (function (_util) {\r\n        _util.DI_TARGET = '$di$target';\r\n        _util.DI_DEPENDENCIES = '$di$dependencies';\r\n        _util.DI_DEPENDENCIES_USES = '$di$dependencies_uses';\r\n        _util.DI_PROVIDES = '$di$provides_service';\r\n        function getServiceId(id) {\r\n            return id[_util.DI_PROVIDES];\r\n        }\r\n        _util.getServiceId = getServiceId;\r\n        function getServiceDependencies(ctor) {\r\n            var a = ctor[_util.DI_DEPENDENCIES];\r\n            var b = ctor[_util.DI_DEPENDENCIES_USES];\r\n            return !a ? b : !b ? a : a.slice(0).concat(b);\r\n        }\r\n        _util.getServiceDependencies = getServiceDependencies;\r\n    })(_util = exports._util || (exports._util = {}));\r\n    exports.IInstantiationService = createDecorator('instantiationService');\r\n    /**\r\n     * A *only* valid way to create a {{ServiceIdentifier}}.\r\n     */\r\n    function createDecorator(serviceId) {\r\n        var ret = function (target, key, index) {\r\n            if (arguments.length !== 3) {\r\n                throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\r\n            }\r\n            if (target[_util.DI_TARGET] === target) {\r\n                target[_util.DI_DEPENDENCIES].push({ serviceId: serviceId, index: index });\r\n            }\r\n            else {\r\n                target[_util.DI_DEPENDENCIES] = [{ serviceId: serviceId, index: index }];\r\n                target[_util.DI_TARGET] = target;\r\n            }\r\n        };\r\n        ret[_util.DI_PROVIDES] = serviceId;\r\n        // ret['type'] = undefined;\r\n        return ret;\r\n    }\r\n    exports.createDecorator = createDecorator;\r\n    /**\r\n     *\r\n     */\r\n    function Uses() {\r\n        var ids = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            ids[_i - 0] = arguments[_i];\r\n        }\r\n        var serviceIds = [];\r\n        for (var _a = 0; _a < ids.length; _a++) {\r\n            var id = ids[_a];\r\n            serviceIds.push({ serviceId: _util.getServiceId(id) });\r\n        }\r\n        return function (target) {\r\n            var existing = target[_util.DI_DEPENDENCIES_USES];\r\n            if (!existing) {\r\n                target[_util.DI_DEPENDENCIES_USES] = serviceIds;\r\n            }\r\n            else {\r\n                existing.push.apply(existing, serviceIds);\r\n            }\r\n            return target;\r\n        };\r\n    }\r\n    exports.Uses = Uses;\r\n    /*\r\n     * Dummy service to make signal that the new service injection is used. I will go away once we remove the old way (using ctx)\r\n     */\r\n    exports.INullService = createDecorator('nullService');\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/editor/common/services/codeEditorService\", [\"require\", \"exports\", 'vs/platform/instantiation/common/instantiation'], function (require, exports, instantiation_1) {\r\n    exports.ID_CODE_EDITOR_SERVICE = 'codeEditorService';\r\n    exports.ICodeEditorService = instantiation_1.createDecorator(exports.ID_CODE_EDITOR_SERVICE);\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/editor/common/services/modeService\", [\"require\", \"exports\", 'vs/platform/instantiation/common/instantiation'], function (require, exports, instantiation_1) {\r\n    exports.IModeService = instantiation_1.createDecorator('modeService');\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/editor/common/services/modelService\", [\"require\", \"exports\", 'vs/platform/instantiation/common/instantiation'], function (require, exports, instantiation_1) {\r\n    exports.IModelService = instantiation_1.createDecorator('modelService');\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\ndefine(\"vs/platform/configuration/common/configuration\", [\"require\", \"exports\", 'vs/platform/instantiation/common/instantiation'], function (require, exports, instantiation_1) {\r\n    exports.IConfigurationService = instantiation_1.createDecorator('configurationService');\r\n    var ConfigurationServiceEventTypes = (function () {\r\n        function ConfigurationServiceEventTypes() {\r\n        }\r\n        /**\r\n         * This event happens after configuration is updated either programmatically\r\n         * or through a file change. It will include a IConfigurationServiceEvent\r\n         * object that includes the new config and which section was updated\r\n         * or null if entire config was updated.\r\n         *\r\n         * Subscribers can use the provided updated configuration\r\n         * rather than re-pulling for updates\r\n         */\r\n        ConfigurationServiceEventTypes.UPDATED = 'update';\r\n        return ConfigurationServiceEventTypes;\r\n    })();\r\n    exports.ConfigurationServiceEventTypes = ConfigurationServiceEventTypes;\r\n    function extractSetting(config, settingPath) {\r\n        function accessSetting(config, path) {\r\n            var current = config;\r\n            for (var i = 0; i < path.length; i++) {\r\n                current = current[path[i]];\r\n                if (!current) {\r\n                    return undefined;\r\n                }\r\n            }\r\n            return current;\r\n        }\r\n        var path = settingPath.split('.');\r\n        return accessSetting(config, path);\r\n    }\r\n    exports.extractSetting = extractSetting;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/platform/editor/common/editor\", [\"require\", \"exports\", 'vs/platform/instantiation/common/instantiation'], function (require, exports, instantiation_1) {\r\n    exports.IEditorService = instantiation_1.createDecorator('editorService');\r\n    /**\r\n     * Possible locations for opening an editor.\r\n     */\r\n    (function (Position) {\r\n        /** Opens the editor in the LEFT most position replacing the input currently showing */\r\n        Position[Position[\"LEFT\"] = 0] = \"LEFT\";\r\n        /** Opens the editor in the CENTER position replacing the input currently showing */\r\n        Position[Position[\"CENTER\"] = 1] = \"CENTER\";\r\n        /** Opens the editor in the RIGHT most position replacing the input currently showing */\r\n        Position[Position[\"RIGHT\"] = 2] = \"RIGHT\";\r\n    })(exports.Position || (exports.Position = {}));\r\n    var Position = exports.Position;\r\n    exports.POSITIONS = [Position.LEFT, Position.CENTER, Position.RIGHT];\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/platform/event/common/event\", [\"require\", \"exports\", 'vs/platform/instantiation/common/instantiation'], function (require, exports, instantiation_1) {\r\n    exports.IEventService = instantiation_1.createDecorator('eventService');\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\ndefine(\"vs/platform/files/common/files\", [\"require\", \"exports\", 'vs/base/common/paths', 'vs/base/common/events', 'vs/platform/instantiation/common/instantiation'], function (require, exports, paths, events, instantiation_1) {\r\n    exports.IFileService = instantiation_1.createDecorator('fileService');\r\n    /**\r\n     * Possible changes that can occur to a file.\r\n     */\r\n    (function (FileChangeType) {\r\n        FileChangeType[FileChangeType[\"UPDATED\"] = 0] = \"UPDATED\";\r\n        FileChangeType[FileChangeType[\"ADDED\"] = 1] = \"ADDED\";\r\n        FileChangeType[FileChangeType[\"DELETED\"] = 2] = \"DELETED\";\r\n    })(exports.FileChangeType || (exports.FileChangeType = {}));\r\n    var FileChangeType = exports.FileChangeType;\r\n    /**\r\n     * Possible events to subscribe to\r\n     */\r\n    exports.EventType = {\r\n        /**\r\n        * Send on file changes.\r\n        */\r\n        FILE_CHANGES: 'files:fileChanges'\r\n    };\r\n    ;\r\n    var FileChangesEvent = (function (_super) {\r\n        __extends(FileChangesEvent, _super);\r\n        function FileChangesEvent(changes) {\r\n            _super.call(this);\r\n            this._changes = changes;\r\n        }\r\n        Object.defineProperty(FileChangesEvent.prototype, \"changes\", {\r\n            get: function () {\r\n                return this._changes;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * Returns true if this change event contains the provided file with the given change type. In case of\r\n         * type DELETED, this method will also return true if a folder got deleted that is the parent of the\r\n         * provided file path.\r\n         */\r\n        FileChangesEvent.prototype.contains = function (resource, type) {\r\n            if (!resource) {\r\n                return false;\r\n            }\r\n            return this.containsAny([resource], type);\r\n        };\r\n        /**\r\n         * Returns true if this change event contains any of the provided files with the given change type. In case of\r\n         * type DELETED, this method will also return true if a folder got deleted that is the parent of any of the\r\n         * provided file paths.\r\n         */\r\n        FileChangesEvent.prototype.containsAny = function (resources, type) {\r\n            if (!resources || !resources.length) {\r\n                return false;\r\n            }\r\n            return this._changes.some(function (change) {\r\n                if (change.type !== type) {\r\n                    return false;\r\n                }\r\n                // For deleted also return true when deleted folder is parent of target path\r\n                if (type === FileChangeType.DELETED) {\r\n                    return resources.some(function (a) {\r\n                        if (!a) {\r\n                            return false;\r\n                        }\r\n                        return paths.isEqualOrParent(a.fsPath, change.resource.fsPath);\r\n                    });\r\n                }\r\n                return resources.some(function (a) {\r\n                    if (!a) {\r\n                        return false;\r\n                    }\r\n                    return a.fsPath === change.resource.fsPath;\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Returns the changes that describe added files.\r\n         */\r\n        FileChangesEvent.prototype.getAdded = function () {\r\n            return this.getOfType(FileChangeType.ADDED);\r\n        };\r\n        /**\r\n         * Returns if this event contains added files.\r\n         */\r\n        FileChangesEvent.prototype.gotAdded = function () {\r\n            return this.hasType(FileChangeType.ADDED);\r\n        };\r\n        /**\r\n         * Returns the changes that describe deleted files.\r\n         */\r\n        FileChangesEvent.prototype.getDeleted = function () {\r\n            return this.getOfType(FileChangeType.DELETED);\r\n        };\r\n        /**\r\n         * Returns if this event contains deleted files.\r\n         */\r\n        FileChangesEvent.prototype.gotDeleted = function () {\r\n            return this.hasType(FileChangeType.DELETED);\r\n        };\r\n        /**\r\n         * Returns the changes that describe updated files.\r\n         */\r\n        FileChangesEvent.prototype.getUpdated = function () {\r\n            return this.getOfType(FileChangeType.UPDATED);\r\n        };\r\n        /**\r\n         * Returns if this event contains updated files.\r\n         */\r\n        FileChangesEvent.prototype.gotUpdated = function () {\r\n            return this.hasType(FileChangeType.UPDATED);\r\n        };\r\n        FileChangesEvent.prototype.getOfType = function (type) {\r\n            return this._changes.filter(function (change) { return change.type === type; });\r\n        };\r\n        FileChangesEvent.prototype.hasType = function (type) {\r\n            return this._changes.some(function (change) {\r\n                return change.type === type;\r\n            });\r\n        };\r\n        return FileChangesEvent;\r\n    })(events.Event);\r\n    exports.FileChangesEvent = FileChangesEvent;\r\n    (function (FileOperationResult) {\r\n        FileOperationResult[FileOperationResult[\"FILE_IS_BINARY\"] = 0] = \"FILE_IS_BINARY\";\r\n        FileOperationResult[FileOperationResult[\"FILE_IS_DIRECTORY\"] = 1] = \"FILE_IS_DIRECTORY\";\r\n        FileOperationResult[FileOperationResult[\"FILE_NOT_FOUND\"] = 2] = \"FILE_NOT_FOUND\";\r\n        FileOperationResult[FileOperationResult[\"FILE_NOT_MODIFIED_SINCE\"] = 3] = \"FILE_NOT_MODIFIED_SINCE\";\r\n        FileOperationResult[FileOperationResult[\"FILE_MODIFIED_SINCE\"] = 4] = \"FILE_MODIFIED_SINCE\";\r\n        FileOperationResult[FileOperationResult[\"FILE_MOVE_CONFLICT\"] = 5] = \"FILE_MOVE_CONFLICT\";\r\n        FileOperationResult[FileOperationResult[\"FILE_READ_ONLY\"] = 6] = \"FILE_READ_ONLY\";\r\n        FileOperationResult[FileOperationResult[\"FILE_TOO_LARGE\"] = 7] = \"FILE_TOO_LARGE\";\r\n    })(exports.FileOperationResult || (exports.FileOperationResult = {}));\r\n    var FileOperationResult = exports.FileOperationResult;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\ndefine(\"vs/editor/common/services/bulkEdit\", [\"require\", \"exports\", 'vs/nls!vs/editor/common/services/bulkEdit', 'vs/base/common/uri', 'vs/base/common/arrays', 'vs/base/common/collections', 'vs/base/common/winjs.base', 'vs/editor/common/core/range', 'vs/editor/common/core/selection', 'vs/platform/files/common/files', 'vs/editor/common/core/editOperation'], function (require, exports, nls, uri_1, arrays_1, collections_1, winjs_base_1, range_1, selection_1, files_1, editOperation_1) {\r\n    var ChangeRecorder = (function () {\r\n        function ChangeRecorder(eventService) {\r\n            this._eventService = eventService;\r\n        }\r\n        ChangeRecorder.prototype.start = function () {\r\n            var changes = Object.create(null);\r\n            var stop = this._eventService.addListener(files_1.EventType.FILE_CHANGES, function (event) {\r\n                event.changes.forEach(function (change) {\r\n                    var key = String(change.resource), array = changes[key];\r\n                    if (!array) {\r\n                        changes[key] = array = [];\r\n                    }\r\n                    array.push(change);\r\n                });\r\n            });\r\n            return {\r\n                stop: stop,\r\n                hasChanged: function (resource) { return !!changes[resource.toString()]; },\r\n                allChanges: function () { return arrays_1.merge(collections_1.values(changes)); }\r\n            };\r\n        };\r\n        return ChangeRecorder;\r\n    })();\r\n    var EditTask = (function () {\r\n        function EditTask(model) {\r\n            this._endCursorSelection = null;\r\n            this._model = model;\r\n            this._edits = [];\r\n        }\r\n        EditTask.prototype.addEdit = function (edit) {\r\n            var range;\r\n            if (!edit.range) {\r\n                range = this._model.getFullModelRange();\r\n            }\r\n            else {\r\n                range = edit.range;\r\n            }\r\n            this._edits.push(editOperation_1.EditOperation.replace(range_1.Range.lift(range), edit.newText));\r\n        };\r\n        EditTask.prototype.apply = function () {\r\n            var _this = this;\r\n            if (this._edits.length === 0) {\r\n                return;\r\n            }\r\n            this._edits.sort(EditTask._editCompare);\r\n            this._initialSelections = this._getInitialSelections();\r\n            this._model.pushEditOperations(this._initialSelections, this._edits, function (edits) { return _this._getEndCursorSelections(edits); });\r\n        };\r\n        EditTask.prototype._getInitialSelections = function () {\r\n            var firstRange = this._edits[0].range;\r\n            var initialSelection = selection_1.Selection.createSelection(firstRange.startLineNumber, firstRange.startColumn, firstRange.endLineNumber, firstRange.endColumn);\r\n            return [initialSelection];\r\n        };\r\n        EditTask.prototype._getEndCursorSelections = function (inverseEditOperations) {\r\n            var relevantEditIndex = 0;\r\n            for (var i = 0; i < inverseEditOperations.length; i++) {\r\n                var editRange = inverseEditOperations[i].range;\r\n                for (var j = 0; j < this._initialSelections.length; j++) {\r\n                    var selectionRange = this._initialSelections[j];\r\n                    if (range_1.Range.areIntersectingOrTouching(editRange, selectionRange)) {\r\n                        relevantEditIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            var srcRange = inverseEditOperations[relevantEditIndex].range;\r\n            this._endCursorSelection = selection_1.Selection.createSelection(srcRange.endLineNumber, srcRange.endColumn, srcRange.endLineNumber, srcRange.endColumn);\r\n            return [this._endCursorSelection];\r\n        };\r\n        EditTask.prototype.getEndCursorSelection = function () {\r\n            return this._endCursorSelection;\r\n        };\r\n        EditTask._editCompare = function (a, b) {\r\n            return range_1.Range.compareRangesUsingStarts(a.range, b.range);\r\n        };\r\n        return EditTask;\r\n    })();\r\n    var SourceModelEditTask = (function (_super) {\r\n        __extends(SourceModelEditTask, _super);\r\n        function SourceModelEditTask(model, initialSelections) {\r\n            _super.call(this, model);\r\n            this._knownInitialSelections = initialSelections;\r\n        }\r\n        SourceModelEditTask.prototype._getInitialSelections = function () {\r\n            return this._knownInitialSelections;\r\n        };\r\n        return SourceModelEditTask;\r\n    })(EditTask);\r\n    var BulkEditModel = (function () {\r\n        function BulkEditModel(editorService, sourceModel, sourceSelections, edits) {\r\n            this._numberOfResourcesToModify = 0;\r\n            this._numberOfChanges = 0;\r\n            this._edits = Object.create(null);\r\n            this._editorService = editorService;\r\n            this._sourceModel = sourceModel;\r\n            this._sourceSelections = sourceSelections;\r\n            this._sourceModelTask = null;\r\n            for (var _i = 0; _i < edits.length; _i++) {\r\n                var edit = edits[_i];\r\n                this._addEdit(edit);\r\n            }\r\n        }\r\n        BulkEditModel.prototype.resourcesCount = function () {\r\n            return this._numberOfResourcesToModify;\r\n        };\r\n        BulkEditModel.prototype.changeCount = function () {\r\n            return this._numberOfChanges;\r\n        };\r\n        BulkEditModel.prototype._addEdit = function (edit) {\r\n            var array = this._edits[edit.resource.toString()];\r\n            if (!array) {\r\n                this._edits[edit.resource.toString()] = array = [];\r\n                this._numberOfResourcesToModify += 1;\r\n            }\r\n            this._numberOfChanges += 1;\r\n            array.push(edit);\r\n        };\r\n        BulkEditModel.prototype.prepare = function () {\r\n            var _this = this;\r\n            if (this._tasks) {\r\n                throw new Error('illegal state - already prepared');\r\n            }\r\n            this._tasks = [];\r\n            var promises = [];\r\n            collections_1.forEach(this._edits, function (entry) {\r\n                var promise = _this._editorService.resolveEditorModel({ resource: uri_1.default.parse(entry.key) }).then(function (model) {\r\n                    if (!model || !model.textEditorModel) {\r\n                        throw new Error(\"Cannot load file \" + entry.key);\r\n                    }\r\n                    var textEditorModel = model.textEditorModel, task;\r\n                    if (textEditorModel.getAssociatedResource().toString() === _this._sourceModel.toString()) {\r\n                        _this._sourceModelTask = new SourceModelEditTask(textEditorModel, _this._sourceSelections);\r\n                        task = _this._sourceModelTask;\r\n                    }\r\n                    else {\r\n                        task = new EditTask(textEditorModel);\r\n                    }\r\n                    entry.value.forEach(function (edit) { return task.addEdit(edit); });\r\n                    _this._tasks.push(task);\r\n                });\r\n                promises.push(promise);\r\n            });\r\n            return winjs_base_1.TPromise.join(promises).then(function (_) { return _this; });\r\n        };\r\n        BulkEditModel.prototype.apply = function () {\r\n            this._tasks.forEach(function (task) { return task.apply(); });\r\n            var r = null;\r\n            if (this._sourceModelTask) {\r\n                r = this._sourceModelTask.getEndCursorSelection();\r\n            }\r\n            return r;\r\n        };\r\n        return BulkEditModel;\r\n    })();\r\n    function bulkEdit(eventService, editorService, editor, edits) {\r\n        var bulk = createBulkEdit(eventService, editorService, editor);\r\n        bulk.add(edits);\r\n        return bulk.finish();\r\n    }\r\n    exports.bulkEdit = bulkEdit;\r\n    function createBulkEdit(eventService, editorService, editor) {\r\n        var all = [];\r\n        var recording = new ChangeRecorder(eventService).start();\r\n        function add(edits) {\r\n            all.push.apply(all, edits);\r\n        }\r\n        function getConcurrentEdits() {\r\n            var names;\r\n            for (var _i = 0; _i < all.length; _i++) {\r\n                var edit = all[_i];\r\n                if (recording.hasChanged(edit.resource)) {\r\n                    if (!names) {\r\n                        names = [];\r\n                    }\r\n                    names.push(edit.resource.fsPath);\r\n                }\r\n            }\r\n            if (names) {\r\n                return nls.localize(0, null, names.join(', '));\r\n            }\r\n        }\r\n        function finish() {\r\n            if (all.length === 0) {\r\n                return;\r\n            }\r\n            var concurrentEdits = getConcurrentEdits();\r\n            if (concurrentEdits) {\r\n                return winjs_base_1.TPromise.wrapError(concurrentEdits);\r\n            }\r\n            var uri;\r\n            var selections;\r\n            if (editor) {\r\n                uri = editor.getModel().getAssociatedResource();\r\n                selections = editor.getSelections();\r\n            }\r\n            var model = new BulkEditModel(editorService, uri, selections, all);\r\n            return model.prepare().then(function (_) {\r\n                var concurrentEdits = getConcurrentEdits();\r\n                if (concurrentEdits) {\r\n                    throw new Error(concurrentEdits);\r\n                }\r\n                recording.stop();\r\n                return model.apply();\r\n            });\r\n        }\r\n        return {\r\n            add: add,\r\n            finish: finish\r\n        };\r\n    }\r\n    exports.createBulkEdit = createBulkEdit;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/platform/instantiation/common/instantiationService\", [\"require\", \"exports\", 'vs/base/common/winjs.base', 'vs/base/common/errors', 'vs/base/common/strings', 'vs/base/common/types', 'vs/base/common/collections', './descriptors', 'vs/base/common/graph', './instantiation'], function (require, exports, winjs, errors, strings, types, collections, descriptors, graph_1, instantiation) {\r\n    var IInstantiationService = instantiation.IInstantiationService;\r\n    /**\r\n     * Creates a new instance of an instantiation service.\r\n     */\r\n    function create(services) {\r\n        if (services === void 0) { services = Object.create(null); }\r\n        var result = new InstantiationService(services, new AccessLock());\r\n        return result;\r\n    }\r\n    exports.create = create;\r\n    /**\r\n     * Creates a {{MutableContext}} which can be used to create objects\r\n     * that use property bag injection. *Only* use this for testing and\r\n     * *not* in production code.\r\n     */\r\n    function createContext() {\r\n        var idx = Object.create(null);\r\n        function add(service, id) {\r\n            if (typeof id === 'string') {\r\n                idx[id] = service;\r\n            }\r\n            else {\r\n                idx[instantiation._util.getServiceId(id)] = service;\r\n            }\r\n        }\r\n        function get(id) {\r\n            var name = id[instantiation._util.DI_PROVIDES];\r\n            if (!name) {\r\n                throw new Error('@ServiceName decoration expected');\r\n            }\r\n            var service = idx[name];\r\n            if (!service) {\r\n                throw new Error(\"service '\" + name + \"' not found. @Uses-decorator incomplete?\");\r\n            }\r\n            return service;\r\n        }\r\n        return {\r\n            get: get,\r\n            add: add\r\n        };\r\n    }\r\n    exports.createContext = createContext;\r\n    var AccessLock = (function () {\r\n        function AccessLock() {\r\n            this._value = 0;\r\n        }\r\n        Object.defineProperty(AccessLock.prototype, \"locked\", {\r\n            get: function () {\r\n                return this._value === 0;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        AccessLock.prototype.runUnlocked = function (r) {\r\n            this._value++;\r\n            try {\r\n                return r();\r\n            }\r\n            finally {\r\n                this._value--;\r\n            }\r\n        };\r\n        return AccessLock;\r\n    })();\r\n    var ServicesMap = (function () {\r\n        function ServicesMap(_services, _lock) {\r\n            var _this = this;\r\n            this._services = _services;\r\n            this._lock = _lock;\r\n            collections.forEach(this._services, function (entry) {\r\n                // add a accessor to myselves\r\n                _this.registerService(entry.key, entry.value);\r\n            });\r\n        }\r\n        ServicesMap.prototype.registerService = function (name, service) {\r\n            var _this = this;\r\n            // add a accessor to myselves\r\n            Object.defineProperty(this, name, {\r\n                get: function () {\r\n                    if (_this._lock.locked) {\r\n                        throw errors.illegalState('the services map can only be used during construction');\r\n                    }\r\n                    if (!service) {\r\n                        throw errors.illegalArgument(strings.format('service with \\'{0}\\' not found', name));\r\n                    }\r\n                    if (service instanceof descriptors.SyncDescriptor) {\r\n                        var cached = _this._services[name];\r\n                        if (cached instanceof descriptors.SyncDescriptor) {\r\n                            _this._ensureInstances(name, service);\r\n                            service = _this._services[name];\r\n                        }\r\n                        else {\r\n                            service = cached;\r\n                        }\r\n                    }\r\n                    return service;\r\n                },\r\n                set: function (value) {\r\n                    throw errors.illegalState('services cannot be changed');\r\n                },\r\n                configurable: false,\r\n                enumerable: false\r\n            });\r\n            // add to services map\r\n            this._services[name] = service;\r\n        };\r\n        Object.defineProperty(ServicesMap.prototype, \"lock\", {\r\n            get: function () {\r\n                return this._lock;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(ServicesMap.prototype, \"services\", {\r\n            get: function () {\r\n                return this._services;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        ServicesMap.prototype._ensureInstances = function (serviceId, desc) {\r\n            var seen = Object.create(null);\r\n            var graph = new graph_1.Graph(function (i) { return i.serviceId; });\r\n            var stack = [{ serviceId: serviceId, desc: desc }];\r\n            while (stack.length) {\r\n                var item = stack.pop();\r\n                graph.lookupOrInsertNode(item);\r\n                // check for cycles between the descriptors\r\n                if (seen[item.serviceId]) {\r\n                    throw new Error(\"[createInstance] cyclic dependency: \" + Object.keys(seen).join('>>'));\r\n                }\r\n                seen[item.serviceId] = true;\r\n                // check all dependencies for existence and if the need to be created first\r\n                var dependencies = instantiation._util.getServiceDependencies(item.desc.ctor);\r\n                if (Array.isArray(dependencies)) {\r\n                    for (var _i = 0; _i < dependencies.length; _i++) {\r\n                        var dependency = dependencies[_i];\r\n                        var instanceOrDesc = this.services[dependency.serviceId];\r\n                        if (!instanceOrDesc) {\r\n                            throw new Error(\"[createInstance] \" + serviceId + \" depends on \" + dependency.serviceId + \" which is NOT registered.\");\r\n                        }\r\n                        if (instanceOrDesc instanceof descriptors.SyncDescriptor) {\r\n                            var d = { serviceId: dependency.serviceId, desc: instanceOrDesc };\r\n                            stack.push(d);\r\n                            graph.insertEdge(item, d);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            while (true) {\r\n                var roots = graph.roots();\r\n                // if there is no more roots but still\r\n                // nodes in the graph we have a cycle\r\n                if (roots.length === 0) {\r\n                    if (graph.length !== 0) {\r\n                        throw new Error('[createInstance] cyclinc dependency!');\r\n                    }\r\n                    break;\r\n                }\r\n                for (var _a = 0; _a < roots.length; _a++) {\r\n                    var root = roots[_a];\r\n                    var instance = this.createInstance(root.data.desc, []);\r\n                    this._services[root.data.serviceId] = instance;\r\n                    graph.removeNode(root.data);\r\n                }\r\n            }\r\n        };\r\n        ServicesMap.prototype.invokeFunction = function (fn, args) {\r\n            var _this = this;\r\n            return this._lock.runUnlocked(function () {\r\n                var accessor = {\r\n                    get: function (id) {\r\n                        var value = instantiation._util.getServiceId(id);\r\n                        return _this[value];\r\n                    }\r\n                };\r\n                return fn.apply(undefined, [accessor].concat(args));\r\n            });\r\n        };\r\n        ServicesMap.prototype.createInstance = function (descriptor, args) {\r\n            var _this = this;\r\n            var allArguments = [];\r\n            var serviceInjections = instantiation._util.getServiceDependencies(descriptor.ctor);\r\n            if (Array.isArray(serviceInjections)) {\r\n                var fixedArguments = descriptor.staticArguments().concat(args);\r\n                var expectedFirstServiceIndex = fixedArguments.length;\r\n                var actualFirstServiceIndex = Number.MAX_VALUE;\r\n                var ctx;\r\n                serviceInjections.forEach(function (si) {\r\n                    var serviceId = si.serviceId, index = si.index;\r\n                    var service = _this._lock.runUnlocked(function () { return _this[serviceId]; });\r\n                    if (index === void 0) {\r\n                        // @Uses\r\n                        if (!ctx) {\r\n                            ctx = createContext();\r\n                            allArguments[0] = ctx; // ctx goes first\r\n                            expectedFirstServiceIndex += 1;\r\n                        }\r\n                        ctx.add(service, serviceId);\r\n                    }\r\n                    else {\r\n                        // @IServiceName\r\n                        allArguments[index] = service;\r\n                        actualFirstServiceIndex = Math.min(actualFirstServiceIndex, si.index);\r\n                    }\r\n                });\r\n                // insert the fixed arguments into the array of all ctor\r\n                // arguments. don't overwrite existing values tho it indicates\r\n                // something is off\r\n                var i = ctx ? 1 : 0;\r\n                for (var _i = 0; _i < fixedArguments.length; _i++) {\r\n                    var arg = fixedArguments[_i];\r\n                    var hasValue = allArguments[i] !== void 0;\r\n                    if (!hasValue) {\r\n                        allArguments[i] = arg;\r\n                    }\r\n                    i += 1;\r\n                }\r\n                allArguments.unshift(descriptor.ctor); // ctor is first arg\r\n                // services are the last arguments of ctor-calls. We check if static ctor arguments\r\n                // (like those from a [sync|async] desriptor) or args that are passed by createInstance\r\n                // don't override positions of those arguments\r\n                if (actualFirstServiceIndex !== Number.MAX_VALUE\r\n                    && actualFirstServiceIndex !== expectedFirstServiceIndex) {\r\n                    var msg = (\"[createInstance] constructor '\" + descriptor.ctor.name + \"' has first\") +\r\n                        (\" service dependency at position \" + (actualFirstServiceIndex + 1) + \" but is called with\") +\r\n                        (\" \" + (expectedFirstServiceIndex - 1) + \" static arguments that are expected to come first\");\r\n                    // throw new Error(msg);\r\n                    console.warn(msg);\r\n                }\r\n            }\r\n            else {\r\n                allArguments = [descriptor.ctor, this /*this === ctx*/];\r\n                allArguments.push.apply(allArguments, descriptor.staticArguments());\r\n                allArguments.push.apply(allArguments, args);\r\n            }\r\n            return this._lock.runUnlocked(function () {\r\n                var instance = types.create.apply(null, allArguments);\r\n                descriptor._validate(instance);\r\n                return instance;\r\n            });\r\n        };\r\n        return ServicesMap;\r\n    })();\r\n    var InstantiationService = (function () {\r\n        function InstantiationService(services, lock) {\r\n            this.serviceId = IInstantiationService;\r\n            services['instantiationService'] = this;\r\n            this._servicesMap = new ServicesMap(services, lock);\r\n        }\r\n        InstantiationService.prototype.createChild = function (services) {\r\n            var childServices = {};\r\n            // copy existing services\r\n            collections.forEach(this._servicesMap.services, function (entry) {\r\n                childServices[entry.key] = entry.value;\r\n            });\r\n            // insert new services (might overwrite)\r\n            collections.forEach(services, function (entry) {\r\n                childServices[entry.key] = entry.value;\r\n            });\r\n            return new InstantiationService(childServices, this._servicesMap.lock);\r\n        };\r\n        InstantiationService.prototype.registerService = function (name, service) {\r\n            this._servicesMap.registerService(name, service);\r\n        };\r\n        InstantiationService.prototype.addSingleton = function (id, instanceOrDescriptor) {\r\n            var name = instantiation._util.getServiceId(id);\r\n            this._servicesMap.registerService(name, instanceOrDescriptor);\r\n        };\r\n        InstantiationService.prototype.getInstance = function (id) {\r\n            var _this = this;\r\n            var name = instantiation._util.getServiceId(id);\r\n            var result = this._servicesMap.lock.runUnlocked(function () { return _this._servicesMap[name]; });\r\n            return result;\r\n        };\r\n        InstantiationService.prototype.createInstance = function (param) {\r\n            var rest = new Array(arguments.length - 1);\r\n            for (var i = 1, len = arguments.length; i < len; i++) {\r\n                rest[i - 1] = arguments[i];\r\n            }\r\n            if (param instanceof descriptors.SyncDescriptor) {\r\n                return this._servicesMap.createInstance(param, rest);\r\n            }\r\n            else if (param instanceof descriptors.AsyncDescriptor) {\r\n                return this._createInstanceAsync(param, rest);\r\n            }\r\n            else {\r\n                return this._servicesMap.createInstance(new descriptors.SyncDescriptor(param), rest);\r\n            }\r\n        };\r\n        InstantiationService.prototype._createInstanceAsync = function (descriptor, args) {\r\n            var _this = this;\r\n            var canceled;\r\n            return new winjs.TPromise(function (c, e, p) {\r\n                require([descriptor.moduleName], function (_module) {\r\n                    if (canceled) {\r\n                        e(canceled);\r\n                    }\r\n                    if (!_module) {\r\n                        return e(errors.illegalArgument('module not found: ' + descriptor.moduleName));\r\n                    }\r\n                    var ctor;\r\n                    if (!descriptor.ctorName) {\r\n                        ctor = _module;\r\n                    }\r\n                    else {\r\n                        ctor = _module[descriptor.ctorName];\r\n                    }\r\n                    if (typeof ctor !== 'function') {\r\n                        return e(errors.illegalArgument('not a function: ' + descriptor.ctorName || descriptor.moduleName));\r\n                    }\r\n                    try {\r\n                        args.unshift.apply(args, descriptor.staticArguments()); // instead of spread in ctor call\r\n                        c(_this._servicesMap.createInstance(new descriptors.SyncDescriptor(ctor), args));\r\n                    }\r\n                    catch (error) {\r\n                        return e(error);\r\n                    }\r\n                }, e);\r\n            }, function () {\r\n                canceled = errors.canceled();\r\n            });\r\n        };\r\n        InstantiationService.prototype.invokeFunction = function (signature) {\r\n            var args = [];\r\n            for (var _i = 1; _i < arguments.length; _i++) {\r\n                args[_i - 1] = arguments[_i];\r\n            }\r\n            return this._servicesMap.invokeFunction(signature, args);\r\n        };\r\n        return InstantiationService;\r\n    })();\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/platform/keybinding/common/keybindingService\", [\"require\", \"exports\", 'vs/platform/instantiation/common/instantiation'], function (require, exports, instantiation_1) {\r\n    exports.IKeybindingService = instantiation_1.createDecorator('keybindingService');\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/platform/keybinding/common/keybindingsUtils\", [\"require\", \"exports\", 'vs/base/common/platform'], function (require, exports, Platform) {\r\n    var KeybindingsUtils = (function () {\r\n        function KeybindingsUtils() {\r\n        }\r\n        /**\r\n         * Take current platform into account and reduce to primary & secondary.\r\n         */\r\n        KeybindingsUtils.bindToCurrentPlatform = function (kb) {\r\n            if (Platform.isWindows) {\r\n                if (kb && kb.win) {\r\n                    return kb.win;\r\n                }\r\n            }\r\n            else if (Platform.isMacintosh) {\r\n                if (kb && kb.mac) {\r\n                    return kb.mac;\r\n                }\r\n            }\r\n            else {\r\n                if (kb && kb.linux) {\r\n                    return kb.linux;\r\n                }\r\n            }\r\n            return kb;\r\n        };\r\n        return KeybindingsUtils;\r\n    })();\r\n    exports.KeybindingsUtils = KeybindingsUtils;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/platform/lifecycle/common/lifecycle\", [\"require\", \"exports\", 'vs/platform/instantiation/common/instantiation'], function (require, exports, instantiation_1) {\r\n    exports.ILifecycleService = instantiation_1.createDecorator('lifecycleService');\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/platform/markers/common/markers\", [\"require\", \"exports\", 'vs/platform/instantiation/common/instantiation'], function (require, exports, instantiation_1) {\r\n    exports.IMarkerService = instantiation_1.createDecorator('markerService');\r\n    (function (MarkerType) {\r\n        MarkerType[MarkerType[\"transient\"] = 1] = \"transient\";\r\n        MarkerType[MarkerType[\"permanent\"] = 2] = \"permanent\";\r\n    })(exports.MarkerType || (exports.MarkerType = {}));\r\n    var MarkerType = exports.MarkerType;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/platform/message/common/message\", [\"require\", \"exports\", 'vs/nls!vs/platform/message/common/message', 'vs/base/common/winjs.base', 'vs/base/common/severity', 'vs/platform/instantiation/common/instantiation', 'vs/base/common/actions'], function (require, exports, nls, winjs_base_1, severity_1, instantiation_1, actions_1) {\r\n    exports.CloseAction = new actions_1.Action('close.message', nls.localize(0, null), null, true, function () { return winjs_base_1.Promise.as(true); });\r\n    exports.CancelAction = new actions_1.Action('close.message', nls.localize(1, null), null, true, function () { return winjs_base_1.Promise.as(true); });\r\n    exports.IMessageService = instantiation_1.createDecorator('messageService');\r\n    exports.Severity = severity_1.default;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/platform/platform\", [\"require\", \"exports\", 'vs/base/common/types', 'vs/base/common/assert'], function (require, exports, Types, Assert) {\r\n    var RegistryImpl = (function () {\r\n        function RegistryImpl() {\r\n            this.data = {};\r\n        }\r\n        RegistryImpl.prototype.add = function (id, data) {\r\n            Assert.ok(Types.isString(id));\r\n            Assert.ok(Types.isObject(data));\r\n            Assert.ok(!this.data.hasOwnProperty(id), 'There is already an extension with this id');\r\n            this.data[id] = data;\r\n        };\r\n        RegistryImpl.prototype.knows = function (id) {\r\n            return this.data.hasOwnProperty(id);\r\n        };\r\n        RegistryImpl.prototype.as = function (id) {\r\n            return this.data[id] || null;\r\n        };\r\n        return RegistryImpl;\r\n    })();\r\n    exports.Registry = new RegistryImpl();\r\n    /**\r\n     * A base class for registries that leverage the instantiation service to create instances.\r\n     */\r\n    var BaseRegistry = (function () {\r\n        function BaseRegistry() {\r\n            this.toBeInstantiated = [];\r\n            this.instances = [];\r\n        }\r\n        BaseRegistry.prototype.setInstantiationService = function (service) {\r\n            this.instantiationService = service;\r\n            while (this.toBeInstantiated.length > 0) {\r\n                var entry = this.toBeInstantiated.shift();\r\n                this.instantiate(entry);\r\n            }\r\n        };\r\n        BaseRegistry.prototype.instantiate = function (ctor) {\r\n            var instance = this.instantiationService.createInstance(ctor);\r\n            this.instances.push(instance);\r\n        };\r\n        BaseRegistry.prototype._register = function (ctor) {\r\n            if (this.instantiationService) {\r\n                this.instantiate(ctor);\r\n            }\r\n            else {\r\n                this.toBeInstantiated.push(ctor);\r\n            }\r\n        };\r\n        BaseRegistry.prototype._getInstances = function () {\r\n            return this.instances.slice(0);\r\n        };\r\n        BaseRegistry.prototype._setInstances = function (instances) {\r\n            this.instances = instances;\r\n        };\r\n        return BaseRegistry;\r\n    })();\r\n    exports.BaseRegistry = BaseRegistry;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/platform/jsonschemas/common/jsonContributionRegistry\", [\"require\", \"exports\", 'vs/nls!vs/platform/jsonschemas/common/jsonContributionRegistry', 'vs/platform/platform', 'vs/base/common/eventEmitter'], function (require, exports, nls, platform, eventEmitter_1) {\r\n    exports.Extensions = {\r\n        JSONContribution: 'base.contributions.json'\r\n    };\r\n    function normalizeId(id) {\r\n        if (id.length > 0 && id.charAt(id.length - 1) === '#') {\r\n            return id.substring(0, id.length - 1);\r\n        }\r\n        return id;\r\n    }\r\n    var JSONContributionRegistry = (function () {\r\n        function JSONContributionRegistry() {\r\n            this.schemasById = {};\r\n            this.schemaAssociations = {};\r\n            this.eventEmitter = new eventEmitter_1.EventEmitter();\r\n        }\r\n        JSONContributionRegistry.prototype.addRegistryChangedListener = function (callback) {\r\n            return this.eventEmitter.addListener2('registryChanged', callback);\r\n        };\r\n        JSONContributionRegistry.prototype.registerSchema = function (uri, unresolvedSchemaContent) {\r\n            this.schemasById[normalizeId(uri)] = unresolvedSchemaContent;\r\n            this.eventEmitter.emit('registryChanged', {});\r\n        };\r\n        JSONContributionRegistry.prototype.addSchemaFileAssociation = function (pattern, uri) {\r\n            var uris = this.schemaAssociations[pattern];\r\n            if (!uris) {\r\n                uris = [];\r\n                this.schemaAssociations[pattern] = uris;\r\n            }\r\n            uris.push(uri);\r\n            this.eventEmitter.emit('registryChanged', {});\r\n        };\r\n        JSONContributionRegistry.prototype.getSchemaContributions = function () {\r\n            return {\r\n                schemas: this.schemasById,\r\n                schemaAssociations: this.schemaAssociations\r\n            };\r\n        };\r\n        return JSONContributionRegistry;\r\n    })();\r\n    var jsonContributionRegistry = new JSONContributionRegistry();\r\n    platform.Registry.add(exports.Extensions.JSONContribution, jsonContributionRegistry);\r\n    // preload the schema-schema with a version that contains descriptions.\r\n    jsonContributionRegistry.registerSchema('http://json-schema.org/draft-04/schema#', {\r\n        'id': 'http://json-schema.org/draft-04/schema#',\r\n        'title': nls.localize(0, null),\r\n        '$schema': 'http://json-schema.org/draft-04/schema#',\r\n        'definitions': {\r\n            'schemaArray': {\r\n                'type': 'array',\r\n                'minItems': 1,\r\n                'items': { '$ref': '#' }\r\n            },\r\n            'positiveInteger': {\r\n                'type': 'integer',\r\n                'minimum': 0\r\n            },\r\n            'positiveIntegerDefault0': {\r\n                'allOf': [{ '$ref': '#/definitions/positiveInteger' }, { 'default': 0 }]\r\n            },\r\n            'simpleTypes': {\r\n                'type': 'string',\r\n                'enum': ['array', 'boolean', 'integer', 'null', 'number', 'object', 'string']\r\n            },\r\n            'stringArray': {\r\n                'type': 'array',\r\n                'items': { 'type': 'string' },\r\n                'minItems': 1,\r\n                'uniqueItems': true\r\n            }\r\n        },\r\n        'type': 'object',\r\n        'properties': {\r\n            'id': {\r\n                'type': 'string',\r\n                'format': 'uri',\r\n                'description': nls.localize(1, null)\r\n            },\r\n            '$schema': {\r\n                'type': 'string',\r\n                'format': 'uri',\r\n                'description': nls.localize(2, null)\r\n            },\r\n            'title': {\r\n                'type': 'string',\r\n                'description': nls.localize(3, null)\r\n            },\r\n            'description': {\r\n                'type': 'string',\r\n                'description': nls.localize(4, null)\r\n            },\r\n            'default': {\r\n                'description': nls.localize(5, null)\r\n            },\r\n            'multipleOf': {\r\n                'type': 'number',\r\n                'minimum': 0,\r\n                'exclusiveMinimum': true,\r\n                'description': nls.localize(6, null)\r\n            },\r\n            'maximum': {\r\n                'type': 'number',\r\n                'description': nls.localize(7, null)\r\n            },\r\n            'exclusiveMaximum': {\r\n                'type': 'boolean',\r\n                'default': false,\r\n                'description': nls.localize(8, null)\r\n            },\r\n            'minimum': {\r\n                'type': 'number',\r\n                'description': nls.localize(9, null)\r\n            },\r\n            'exclusiveMinimum': {\r\n                'type': 'boolean',\r\n                'default': false,\r\n                'description': nls.localize(10, null)\r\n            },\r\n            'maxLength': {\r\n                'allOf': [\r\n                    { '$ref': '#/definitions/positiveInteger' }\r\n                ],\r\n                'description': nls.localize(11, null)\r\n            },\r\n            'minLength': {\r\n                'allOf': [\r\n                    { '$ref': '#/definitions/positiveIntegerDefault0' }\r\n                ],\r\n                'description': nls.localize(12, null)\r\n            },\r\n            'pattern': {\r\n                'type': 'string',\r\n                'format': 'regex',\r\n                'description': nls.localize(13, null)\r\n            },\r\n            'additionalItems': {\r\n                'anyOf': [\r\n                    { 'type': 'boolean' },\r\n                    { '$ref': '#' }\r\n                ],\r\n                'default': {},\r\n                'description': nls.localize(14, null)\r\n            },\r\n            'items': {\r\n                'anyOf': [\r\n                    { '$ref': '#' },\r\n                    { '$ref': '#/definitions/schemaArray' }\r\n                ],\r\n                'default': {},\r\n                'description': nls.localize(15, null)\r\n            },\r\n            'maxItems': {\r\n                'allOf': [\r\n                    { '$ref': '#/definitions/positiveInteger' }\r\n                ],\r\n                'description': nls.localize(16, null)\r\n            },\r\n            'minItems': {\r\n                'allOf': [\r\n                    { '$ref': '#/definitions/positiveIntegerDefault0' }\r\n                ],\r\n                'description': nls.localize(17, null)\r\n            },\r\n            'uniqueItems': {\r\n                'type': 'boolean',\r\n                'default': false,\r\n                'description': nls.localize(18, null)\r\n            },\r\n            'maxProperties': {\r\n                'allOf': [\r\n                    { '$ref': '#/definitions/positiveInteger' }\r\n                ],\r\n                'description': nls.localize(19, null)\r\n            },\r\n            'minProperties': {\r\n                'allOf': [\r\n                    { '$ref': '#/definitions/positiveIntegerDefault0' },\r\n                ],\r\n                'description': nls.localize(20, null)\r\n            },\r\n            'required': {\r\n                'allOf': [\r\n                    { '$ref': '#/definitions/stringArray' }\r\n                ],\r\n                'description': nls.localize(21, null)\r\n            },\r\n            'additionalProperties': {\r\n                'anyOf': [\r\n                    { 'type': 'boolean' },\r\n                    { '$ref': '#' }\r\n                ],\r\n                'default': {},\r\n                'description': nls.localize(22, null)\r\n            },\r\n            'definitions': {\r\n                'type': 'object',\r\n                'additionalProperties': { '$ref': '#' },\r\n                'default': {},\r\n                'description': nls.localize(23, null)\r\n            },\r\n            'properties': {\r\n                'type': 'object',\r\n                'additionalProperties': { '$ref': '#' },\r\n                'default': {},\r\n                'description': nls.localize(24, null)\r\n            },\r\n            'patternProperties': {\r\n                'type': 'object',\r\n                'additionalProperties': { '$ref': '#' },\r\n                'default': {},\r\n                'description': nls.localize(25, null)\r\n            },\r\n            'dependencies': {\r\n                'type': 'object',\r\n                'additionalProperties': {\r\n                    'anyOf': [\r\n                        { '$ref': '#' },\r\n                        { '$ref': '#/definitions/stringArray' }\r\n                    ]\r\n                },\r\n                'description': nls.localize(26, null)\r\n            },\r\n            'enum': {\r\n                'type': 'array',\r\n                'minItems': 1,\r\n                'uniqueItems': true,\r\n                'description': nls.localize(27, null)\r\n            },\r\n            'type': {\r\n                'anyOf': [\r\n                    { '$ref': '#/definitions/simpleTypes' },\r\n                    {\r\n                        'type': 'array',\r\n                        'items': { '$ref': '#/definitions/simpleTypes' },\r\n                        'minItems': 1,\r\n                        'uniqueItems': true\r\n                    }\r\n                ],\r\n                'description': nls.localize(28, null)\r\n            },\r\n            'allOf': {\r\n                'allOf': [\r\n                    { '$ref': '#/definitions/schemaArray' }\r\n                ],\r\n                'description': nls.localize(29, null)\r\n            },\r\n            'anyOf': {\r\n                'allOf': [\r\n                    { '$ref': '#/definitions/schemaArray' }\r\n                ],\r\n                'description': nls.localize(30, null)\r\n            },\r\n            'oneOf': {\r\n                'allOf': [\r\n                    { '$ref': '#/definitions/schemaArray' }\r\n                ],\r\n                'description': nls.localize(31, null)\r\n            },\r\n            'not': {\r\n                'allOf': [\r\n                    { '$ref': '#' }\r\n                ],\r\n                'description': nls.localize(32, null)\r\n            }\r\n        },\r\n        'dependencies': {\r\n            'exclusiveMaximum': ['maximum'],\r\n            'exclusiveMinimum': ['minimum']\r\n        },\r\n        'default': {}\r\n    });\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/platform/keybinding/common/keybindingsRegistry\", [\"require\", \"exports\", 'vs/platform/platform', 'vs/base/common/types', 'vs/platform/keybinding/common/keybindingsUtils', 'vs/base/common/keyCodes', 'vs/base/common/platform'], function (require, exports, platform_1, types_1, keybindingsUtils_1, keyCodes_1, Platform) {\r\n    var KeybindingsRegistryImpl = (function () {\r\n        function KeybindingsRegistryImpl() {\r\n            this.KEYBINDING_CONTEXT_OPERATOR_EQUAL = 'equal';\r\n            this.KEYBINDING_CONTEXT_OPERATOR_NOT_EQUAL = 'not_equal';\r\n            this.WEIGHT = {\r\n                editorCore: function (importance) {\r\n                    if (importance === void 0) { importance = 0; }\r\n                    return 0 + importance;\r\n                },\r\n                editorContrib: function (importance) {\r\n                    if (importance === void 0) { importance = 0; }\r\n                    return 100 + importance;\r\n                },\r\n                workbenchContrib: function (importance) {\r\n                    if (importance === void 0) { importance = 0; }\r\n                    return 200 + importance;\r\n                },\r\n                builtinExtension: function (importance) {\r\n                    if (importance === void 0) { importance = 0; }\r\n                    return 300 + importance;\r\n                },\r\n                externalExtension: function (importance) {\r\n                    if (importance === void 0) { importance = 0; }\r\n                    return 400 + importance;\r\n                }\r\n            };\r\n            this._keybindings = [];\r\n            this._commands = Object.create(null);\r\n        }\r\n        KeybindingsRegistryImpl.prototype.registerCommandRule = function (rule) {\r\n            var _this = this;\r\n            var actualKb = keybindingsUtils_1.KeybindingsUtils.bindToCurrentPlatform(rule);\r\n            if (actualKb && actualKb.primary) {\r\n                this.registerDefaultKeybinding(actualKb.primary, rule.id, rule.weight, 0, rule.context);\r\n            }\r\n            if (actualKb && Array.isArray(actualKb.secondary)) {\r\n                actualKb.secondary.forEach(function (k, i) { return _this.registerDefaultKeybinding(k, rule.id, rule.weight, -i - 1, rule.context); });\r\n            }\r\n        };\r\n        KeybindingsRegistryImpl.prototype.registerCommandDesc = function (desc) {\r\n            this.registerCommandRule(desc);\r\n            // if (_commands[desc.id]) {\r\n            // \tconsole.warn('Duplicate handler for command: ' + desc.id);\r\n            // }\r\n            // this._commands[desc.id] = desc.handler;\r\n            var handler = desc.handler;\r\n            var description = desc.description || handler.description;\r\n            // add argument validation if rich command metadata is provided\r\n            if (typeof description === 'object') {\r\n                var metadata = description;\r\n                var constraints = [];\r\n                for (var _i = 0, _a = metadata.args; _i < _a.length; _i++) {\r\n                    var arg = _a[_i];\r\n                    constraints.push(arg.constraint);\r\n                }\r\n                handler = function (accesor, args) {\r\n                    types_1.validateConstraints(args, constraints);\r\n                    return desc.handler(accesor, args);\r\n                };\r\n            }\r\n            // make sure description is there\r\n            handler.description = description;\r\n            // register handler\r\n            this._commands[desc.id] = handler;\r\n        };\r\n        KeybindingsRegistryImpl.prototype.getCommands = function () {\r\n            return this._commands;\r\n        };\r\n        KeybindingsRegistryImpl.prototype.registerDefaultKeybinding = function (keybinding, commandId, weight1, weight2, context) {\r\n            if (Platform.isWindows) {\r\n                if (keyCodes_1.BinaryKeybindings.hasCtrlCmd(keybinding) && !keyCodes_1.BinaryKeybindings.hasShift(keybinding) && keyCodes_1.BinaryKeybindings.hasAlt(keybinding) && !keyCodes_1.BinaryKeybindings.hasWinCtrl(keybinding)) {\r\n                    if (/^[A-Z0-9\\[\\]\\|\\;\\'\\,\\.\\/\\`]$/.test(keyCodes_1.KeyCode.toString(keyCodes_1.BinaryKeybindings.extractKeyCode(keybinding)))) {\r\n                        console.warn('Ctrl+Alt+ keybindings should not be used by default under Windows. Offender: ', keybinding, ' for ', commandId);\r\n                    }\r\n                }\r\n            }\r\n            this._keybindings.push({\r\n                keybinding: keybinding,\r\n                command: commandId,\r\n                context: context,\r\n                weight1: weight1,\r\n                weight2: weight2\r\n            });\r\n        };\r\n        KeybindingsRegistryImpl.prototype.getDefaultKeybindings = function () {\r\n            return this._keybindings;\r\n        };\r\n        return KeybindingsRegistryImpl;\r\n    })();\r\n    exports.KeybindingsRegistry = new KeybindingsRegistryImpl();\r\n    // Define extension point ids\r\n    exports.Extensions = {\r\n        EditorModes: 'platform.keybindingsRegistry'\r\n    };\r\n    platform_1.Registry.add(exports.Extensions.EditorModes, exports.KeybindingsRegistry);\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/editor/common/config/config\", [\"require\", \"exports\", 'vs/platform/keybinding/common/keybindingsRegistry', 'vs/platform/editor/common/editor', 'vs/editor/common/services/codeEditorService', 'vs/editor/common/editorCommon', 'vs/base/common/keyCodes'], function (require, exports, keybindingsRegistry_1, editor_1, codeEditorService_1, EditorCommon, keyCodes_1) {\r\n    function findFocusedEditor(commandId, accessor, args, complain) {\r\n        var codeEditorService = accessor.get(codeEditorService_1.ICodeEditorService);\r\n        var editorId = args.context.editorId;\r\n        if (!editorId) {\r\n            if (complain) {\r\n                console.warn('Cannot execute ' + commandId + ' because no editor is focused.');\r\n            }\r\n            return null;\r\n        }\r\n        var editor = codeEditorService.getCodeEditor(editorId);\r\n        if (!editor) {\r\n            if (complain) {\r\n                console.warn('Cannot execute ' + commandId + ' because editor `' + editorId + '` could not be found.');\r\n            }\r\n            return null;\r\n        }\r\n        return editor;\r\n    }\r\n    exports.findFocusedEditor = findFocusedEditor;\r\n    function withCodeEditorFromCommandHandler(commandId, accessor, args, callback) {\r\n        var editor = findFocusedEditor(commandId, accessor, args, true);\r\n        if (editor) {\r\n            callback(editor);\r\n        }\r\n    }\r\n    exports.withCodeEditorFromCommandHandler = withCodeEditorFromCommandHandler;\r\n    function getActiveEditor(accessor) {\r\n        var editorService = accessor.get(editor_1.IEditorService);\r\n        var activeEditor = editorService.getActiveEditor && editorService.getActiveEditor();\r\n        if (activeEditor) {\r\n            var editor = activeEditor.getControl();\r\n            // Substitute for (editor instanceof ICodeEditor)\r\n            if (editor && typeof editor.getEditorType === 'function') {\r\n                var codeEditor = editor;\r\n                return codeEditor;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    exports.getActiveEditor = getActiveEditor;\r\n    function triggerEditorHandler(handlerId, accessor, args) {\r\n        withCodeEditorFromCommandHandler(handlerId, accessor, args, function (editor) {\r\n            editor.trigger('keyboard', handlerId, args);\r\n        });\r\n    }\r\n    function registerCoreCommand(handlerId, kb, weight, context) {\r\n        if (weight === void 0) { weight = keybindingsRegistry_1.KeybindingsRegistry.WEIGHT.editorCore(); }\r\n        var desc = {\r\n            id: handlerId,\r\n            handler: triggerEditorHandler.bind(null, handlerId),\r\n            weight: weight,\r\n            context: (context ? context : [{ key: EditorCommon.KEYBINDING_CONTEXT_EDITOR_TEXT_FOCUS }]),\r\n            primary: kb.primary,\r\n            secondary: kb.secondary,\r\n            win: kb.win,\r\n            mac: kb.mac,\r\n            linux: kb.linux\r\n        };\r\n        keybindingsRegistry_1.KeybindingsRegistry.registerCommandDesc(desc);\r\n    }\r\n    function getMacWordNavigationKB(shift, key) {\r\n        // For macs, word navigation is based on the alt modifier\r\n        if (shift) {\r\n            return keyCodes_1.KeyMod.Shift | keyCodes_1.KeyMod.Alt | key;\r\n        }\r\n        else {\r\n            return keyCodes_1.KeyMod.Alt | key;\r\n        }\r\n    }\r\n    function getWordNavigationKB(shift, key) {\r\n        // Normally word navigation is based on the ctrl modifier\r\n        if (shift) {\r\n            return keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyMod.Shift | key;\r\n        }\r\n        else {\r\n            return keyCodes_1.KeyMod.CtrlCmd | key;\r\n        }\r\n    }\r\n    var H = EditorCommon.Handler;\r\n    // https://support.apple.com/en-gb/HT201236\r\n    // [ADDED] Control-H\t\t\t\t\tDelete the character to the left of the insertion point. Or use Delete.\r\n    // [ADDED] Control-D\t\t\t\t\tDelete the character to the right of the insertion point. Or use Fn-Delete.\r\n    // [ADDED] Control-K\t\t\t\t\tDelete the text between the insertion point and the end of the line or paragraph.\r\n    // [ADDED] Command–Up Arrow\t\t\t\tMove the insertion point to the beginning of the document.\r\n    // [ADDED] Command–Down Arrow\t\t\tMove the insertion point to the end of the document.\r\n    // [ADDED] Command–Left Arrow\t\t\tMove the insertion point to the beginning of the current line.\r\n    // [ADDED] Command–Right Arrow\t\t\tMove the insertion point to the end of the current line.\r\n    // [ADDED] Option–Left Arrow\t\t\tMove the insertion point to the beginning of the previous word.\r\n    // [ADDED] Option–Right Arrow\t\t\tMove the insertion point to the end of the next word.\r\n    // [ADDED] Command–Shift–Up Arrow\t\tSelect the text between the insertion point and the beginning of the document.\r\n    // [ADDED] Command–Shift–Down Arrow\t\tSelect the text between the insertion point and the end of the document.\r\n    // [ADDED] Command–Shift–Left Arrow\t\tSelect the text between the insertion point and the beginning of the current line.\r\n    // [ADDED] Command–Shift–Right Arrow\tSelect the text between the insertion point and the end of the current line.\r\n    // [USED BY DUPLICATE LINES] Shift–Option–Up Arrow\t\tExtend text selection to the beginning of the current paragraph, then to the beginning of the following paragraph if pressed again.\r\n    // [USED BY DUPLICATE LINES] Shift–Option–Down Arrow\tExtend text selection to the end of the current paragraph, then to the end of the following paragraph if pressed again.\r\n    // [ADDED] Shift–Option–Left Arrow\t\tExtend text selection to the beginning of the current word, then to the beginning of the following word if pressed again.\r\n    // [ADDED] Shift–Option–Right Arrow\t\tExtend text selection to the end of the current word, then to the end of the following word if pressed again.\r\n    // [ADDED] Control-A\t\t\t\t\tMove to the beginning of the line or paragraph.\r\n    // [ADDED] Control-E\t\t\t\t\tMove to the end of a line or paragraph.\r\n    // [ADDED] Control-F\t\t\t\t\tMove one character forward.\r\n    // [ADDED] Control-B\t\t\t\t\tMove one character backward.\r\n    //Control-L\t\t\t\t\t\t\t\tCenter the cursor or selection in the visible area.\r\n    // [ADDED] Control-P\t\t\t\t\tMove up one line.\r\n    // [ADDED] Control-N\t\t\t\t\tMove down one line.\r\n    // [ADDED] Control-O\t\t\t\t\tInsert a new line after the insertion point.\r\n    //Control-T\t\t\t\t\t\t\t\tSwap the character behind the insertion point with the character in front of the insertion point.\r\n    // Unconfirmed????\r\n    //\tConfig.addKeyBinding(EditorCommon.Handler.CursorPageDown,\t\tKeyMod.WinCtrl | KeyCode.KEY_V);\r\n    // OS X built in commands\r\n    // Control+y => yank\r\n    // [ADDED] Command+backspace => Delete to Hard BOL\r\n    // [ADDED] Command+delete => Delete to Hard EOL\r\n    // [ADDED] Control+k => Delete to Hard EOL\r\n    // Control+l => show_at_center\r\n    // Control+Command+d => noop\r\n    // Control+Command+shift+d => noop\r\n    registerCoreCommand(H.CursorLeft, {\r\n        primary: keyCodes_1.KeyCode.LeftArrow,\r\n        mac: { primary: keyCodes_1.KeyCode.LeftArrow, secondary: [keyCodes_1.KeyMod.WinCtrl | keyCodes_1.KeyCode.KEY_B] }\r\n    });\r\n    registerCoreCommand(H.CursorLeftSelect, {\r\n        primary: keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.LeftArrow\r\n    });\r\n    registerCoreCommand(H.CursorRight, {\r\n        primary: keyCodes_1.KeyCode.RightArrow,\r\n        mac: { primary: keyCodes_1.KeyCode.RightArrow, secondary: [keyCodes_1.KeyMod.WinCtrl | keyCodes_1.KeyCode.KEY_F] }\r\n    });\r\n    registerCoreCommand(H.CursorRightSelect, {\r\n        primary: keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.RightArrow\r\n    });\r\n    registerCoreCommand(H.CursorUp, {\r\n        primary: keyCodes_1.KeyCode.UpArrow,\r\n        mac: { primary: keyCodes_1.KeyCode.UpArrow, secondary: [keyCodes_1.KeyMod.WinCtrl | keyCodes_1.KeyCode.KEY_P] }\r\n    });\r\n    registerCoreCommand(H.CursorUpSelect, {\r\n        primary: keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.UpArrow,\r\n        secondary: [getWordNavigationKB(true, keyCodes_1.KeyCode.UpArrow)],\r\n        mac: { primary: keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.UpArrow },\r\n        linux: { primary: keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.UpArrow }\r\n    });\r\n    registerCoreCommand(H.CursorDown, {\r\n        primary: keyCodes_1.KeyCode.DownArrow,\r\n        mac: { primary: keyCodes_1.KeyCode.DownArrow, secondary: [keyCodes_1.KeyMod.WinCtrl | keyCodes_1.KeyCode.KEY_N] }\r\n    });\r\n    registerCoreCommand(H.CursorDownSelect, {\r\n        primary: keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.DownArrow,\r\n        secondary: [getWordNavigationKB(true, keyCodes_1.KeyCode.DownArrow)],\r\n        mac: { primary: keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.DownArrow },\r\n        linux: { primary: keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.DownArrow }\r\n    });\r\n    registerCoreCommand(H.CursorPageUp, {\r\n        primary: keyCodes_1.KeyCode.PageUp\r\n    });\r\n    registerCoreCommand(H.CursorPageUpSelect, {\r\n        primary: keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.PageUp\r\n    });\r\n    registerCoreCommand(H.CursorPageDown, {\r\n        primary: keyCodes_1.KeyCode.PageDown\r\n    });\r\n    registerCoreCommand(H.CursorPageDownSelect, {\r\n        primary: keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.PageDown\r\n    });\r\n    registerCoreCommand(H.CursorHome, {\r\n        primary: keyCodes_1.KeyCode.Home,\r\n        mac: { primary: keyCodes_1.KeyCode.Home, secondary: [keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.LeftArrow, keyCodes_1.KeyMod.WinCtrl | keyCodes_1.KeyCode.KEY_A] }\r\n    });\r\n    registerCoreCommand(H.CursorHomeSelect, {\r\n        primary: keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.Home,\r\n        mac: { primary: keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.Home, secondary: [keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.LeftArrow] }\r\n    });\r\n    registerCoreCommand(H.CursorEnd, {\r\n        primary: keyCodes_1.KeyCode.End,\r\n        mac: { primary: keyCodes_1.KeyCode.End, secondary: [keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.RightArrow, keyCodes_1.KeyMod.WinCtrl | keyCodes_1.KeyCode.KEY_E] }\r\n    });\r\n    registerCoreCommand(H.CursorEndSelect, {\r\n        primary: keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.End,\r\n        mac: { primary: keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.End, secondary: [keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.RightArrow] }\r\n    });\r\n    registerCoreCommand(H.ExpandLineSelection, {\r\n        primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.KEY_I\r\n    });\r\n    registerCoreCommand(H.ScrollLineUp, {\r\n        primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.UpArrow,\r\n        mac: { primary: keyCodes_1.KeyMod.WinCtrl | keyCodes_1.KeyCode.PageUp }\r\n    });\r\n    registerCoreCommand(H.ScrollLineDown, {\r\n        primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.DownArrow,\r\n        mac: { primary: keyCodes_1.KeyMod.WinCtrl | keyCodes_1.KeyCode.PageDown }\r\n    });\r\n    registerCoreCommand(H.ScrollPageUp, {\r\n        primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.PageUp\r\n    });\r\n    registerCoreCommand(H.ScrollPageDown, {\r\n        primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.PageDown\r\n    });\r\n    registerCoreCommand(H.Tab, {\r\n        primary: keyCodes_1.KeyCode.Tab\r\n    }, keybindingsRegistry_1.KeybindingsRegistry.WEIGHT.editorCore(), [\r\n        { key: EditorCommon.KEYBINDING_CONTEXT_EDITOR_TEXT_FOCUS },\r\n        { key: EditorCommon.KEYBINDING_CONTEXT_EDITOR_TAB_MOVES_FOCUS, operator: keybindingsRegistry_1.KeybindingsRegistry.KEYBINDING_CONTEXT_OPERATOR_NOT_EQUAL, operand: true }\r\n    ]);\r\n    registerCoreCommand(H.Outdent, {\r\n        primary: keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.Tab\r\n    }, keybindingsRegistry_1.KeybindingsRegistry.WEIGHT.editorCore(), [\r\n        { key: EditorCommon.KEYBINDING_CONTEXT_EDITOR_TEXT_FOCUS },\r\n        { key: EditorCommon.KEYBINDING_CONTEXT_EDITOR_TAB_MOVES_FOCUS, operator: keybindingsRegistry_1.KeybindingsRegistry.KEYBINDING_CONTEXT_OPERATOR_NOT_EQUAL, operand: true }\r\n    ]);\r\n    registerCoreCommand(H.DeleteLeft, {\r\n        primary: keyCodes_1.KeyCode.Backspace,\r\n        secondary: [keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.Backspace],\r\n        mac: { primary: keyCodes_1.KeyCode.Backspace, secondary: [keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.Backspace, keyCodes_1.KeyMod.WinCtrl | keyCodes_1.KeyCode.KEY_H, keyCodes_1.KeyMod.WinCtrl | keyCodes_1.KeyCode.Backspace] }\r\n    });\r\n    registerCoreCommand(H.DeleteRight, {\r\n        primary: keyCodes_1.KeyCode.Delete,\r\n        mac: { primary: keyCodes_1.KeyCode.Delete, secondary: [keyCodes_1.KeyMod.WinCtrl | keyCodes_1.KeyCode.KEY_D, keyCodes_1.KeyMod.WinCtrl | keyCodes_1.KeyCode.Delete] }\r\n    });\r\n    registerCoreCommand(H.DeleteAllLeft, {\r\n        primary: null,\r\n        mac: { primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.Backspace }\r\n    });\r\n    registerCoreCommand(H.DeleteAllRight, {\r\n        primary: null,\r\n        mac: { primary: keyCodes_1.KeyMod.WinCtrl | keyCodes_1.KeyCode.KEY_K, secondary: [keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.Delete] }\r\n    });\r\n    function registerWordCommand(handlerId, shift, key) {\r\n        registerCoreCommand(handlerId, {\r\n            primary: getWordNavigationKB(shift, key),\r\n            mac: { primary: getMacWordNavigationKB(shift, key) }\r\n        });\r\n    }\r\n    registerWordCommand(H.CursorWordLeft, false, keyCodes_1.KeyCode.LeftArrow);\r\n    registerWordCommand(H.CursorWordLeftSelect, true, keyCodes_1.KeyCode.LeftArrow);\r\n    registerWordCommand(H.CursorWordRight, false, keyCodes_1.KeyCode.RightArrow);\r\n    registerWordCommand(H.CursorWordRightSelect, true, keyCodes_1.KeyCode.RightArrow);\r\n    registerWordCommand(H.DeleteWordLeft, false, keyCodes_1.KeyCode.Backspace);\r\n    registerWordCommand(H.DeleteWordRight, false, keyCodes_1.KeyCode.Delete);\r\n    registerCoreCommand(H.CancelSelection, {\r\n        primary: keyCodes_1.KeyCode.Escape\r\n    }, keybindingsRegistry_1.KeybindingsRegistry.WEIGHT.editorCore(), [\r\n        { key: EditorCommon.KEYBINDING_CONTEXT_EDITOR_TEXT_FOCUS },\r\n        { key: EditorCommon.KEYBINDING_CONTEXT_EDITOR_HAS_NON_EMPTY_SELECTION }\r\n    ]);\r\n    registerCoreCommand(H.RemoveSecondaryCursors, {\r\n        primary: keyCodes_1.KeyCode.Escape\r\n    }, keybindingsRegistry_1.KeybindingsRegistry.WEIGHT.editorCore(1), [\r\n        { key: EditorCommon.KEYBINDING_CONTEXT_EDITOR_TEXT_FOCUS },\r\n        { key: EditorCommon.KEYBINDING_CONTEXT_EDITOR_HAS_MULTIPLE_SELECTIONS }\r\n    ]);\r\n    registerCoreCommand(H.CursorTop, {\r\n        primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.Home,\r\n        mac: { primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.UpArrow }\r\n    });\r\n    registerCoreCommand(H.CursorTopSelect, {\r\n        primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.Home,\r\n        mac: { primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.UpArrow }\r\n    });\r\n    registerCoreCommand(H.CursorBottom, {\r\n        primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.End,\r\n        mac: { primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.DownArrow }\r\n    });\r\n    registerCoreCommand(H.CursorBottomSelect, {\r\n        primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.End,\r\n        mac: { primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.DownArrow }\r\n    });\r\n    registerCoreCommand(H.LineBreakInsert, {\r\n        primary: null,\r\n        mac: { primary: keyCodes_1.KeyMod.WinCtrl | keyCodes_1.KeyCode.KEY_O }\r\n    });\r\n    registerCoreCommand(H.Undo, {\r\n        primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.KEY_Z\r\n    });\r\n    registerCoreCommand(H.CursorUndo, {\r\n        primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.KEY_U\r\n    });\r\n    registerCoreCommand(H.Redo, {\r\n        primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.KEY_Y,\r\n        secondary: [keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.KEY_Z],\r\n        mac: { primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyMod.Shift | keyCodes_1.KeyCode.KEY_Z }\r\n    });\r\n    function selectAll(accessor, args) {\r\n        var HANDLER = EditorCommon.Handler.SelectAll;\r\n        // If editor text focus\r\n        if (args.context[EditorCommon.KEYBINDING_CONTEXT_EDITOR_TEXT_FOCUS]) {\r\n            var focusedEditor = findFocusedEditor(HANDLER, accessor, args, false);\r\n            if (focusedEditor) {\r\n                focusedEditor.trigger('keyboard', HANDLER, args);\r\n                return;\r\n            }\r\n        }\r\n        // Ignore this action when user is focussed on an element that allows for entering text\r\n        var activeElement = document.activeElement;\r\n        if (activeElement && ['input', 'textarea'].indexOf(activeElement.tagName.toLowerCase()) >= 0) {\r\n            activeElement.select();\r\n            return;\r\n        }\r\n        // Redirecting to last active editor\r\n        var activeEditor = getActiveEditor(accessor);\r\n        if (activeEditor) {\r\n            activeEditor.trigger('keyboard', HANDLER, args);\r\n            return;\r\n        }\r\n    }\r\n    keybindingsRegistry_1.KeybindingsRegistry.registerCommandDesc({\r\n        id: 'editor.action.selectAll',\r\n        handler: selectAll,\r\n        weight: keybindingsRegistry_1.KeybindingsRegistry.WEIGHT.editorCore(),\r\n        context: null,\r\n        primary: keyCodes_1.KeyMod.CtrlCmd | keyCodes_1.KeyCode.KEY_A\r\n    });\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/platform/plugins/common/ipcRemoteCom\", [\"require\", \"exports\", 'vs/base/common/winjs.base', 'vs/base/common/marshalling', 'vs/base/common/remote', 'vs/base/common/errors'], function (require, exports, winjs, marshalling, remote, errors) {\r\n    var pendingRPCReplies = {};\r\n    function createRPC(serializeAndSend) {\r\n        var lastMessageId = 0;\r\n        return function rpc(rpcId, method, args) {\r\n            var req = String(++lastMessageId);\r\n            var reply = {\r\n                c: null,\r\n                e: null,\r\n                p: null\r\n            };\r\n            var r = new winjs.TPromise(function (c, e, p) {\r\n                reply.c = c;\r\n                reply.e = e;\r\n                reply.p = p;\r\n            }, function () {\r\n                serializeAndSend({\r\n                    cancel: req\r\n                });\r\n            });\r\n            pendingRPCReplies[req] = reply;\r\n            serializeAndSend({\r\n                req: req,\r\n                rpcId: rpcId,\r\n                method: method,\r\n                args: args\r\n            });\r\n            return r;\r\n        };\r\n    }\r\n    ;\r\n    function create(send) {\r\n        var rpc = createRPC(serializeAndSend);\r\n        var bigHandler = null;\r\n        var invokedHandlers = Object.create(null);\r\n        var r = {\r\n            callOnRemote: rpc,\r\n            registerBigHandler: function (_bigHandler) {\r\n                bigHandler = _bigHandler;\r\n            },\r\n            handle: function (rawmsg) {\r\n                var msg = marshalling.demarshallObject(rawmsg, proxiesMarshalling);\r\n                if (msg.seq) {\r\n                    if (!pendingRPCReplies.hasOwnProperty(msg.seq)) {\r\n                        console.warn('Got reply to unknown seq');\r\n                        return;\r\n                    }\r\n                    var reply = pendingRPCReplies[msg.seq];\r\n                    delete pendingRPCReplies[msg.seq];\r\n                    if (msg.err) {\r\n                        reply.e(msg.err);\r\n                        return;\r\n                    }\r\n                    reply.c(msg.res);\r\n                    return;\r\n                }\r\n                if (msg.cancel) {\r\n                    if (invokedHandlers[msg.cancel]) {\r\n                        invokedHandlers[msg.cancel].cancel();\r\n                    }\r\n                    return;\r\n                }\r\n                if (msg.err) {\r\n                    console.error(msg.err);\r\n                    return;\r\n                }\r\n                var rpcId = msg.rpcId;\r\n                if (!bigHandler) {\r\n                    throw new Error('got message before big handler attached!');\r\n                }\r\n                var req = msg.req;\r\n                invokedHandlers[req] = invokeHandler(rpcId, msg.method, msg.args);\r\n                invokedHandlers[req].then(function (r) {\r\n                    delete invokedHandlers[req];\r\n                    serializeAndSend({\r\n                        seq: req,\r\n                        res: r\r\n                    });\r\n                }, function (err) {\r\n                    delete invokedHandlers[req];\r\n                    serializeAndSend({\r\n                        seq: req,\r\n                        err: errors.transformErrorForSerialization(err)\r\n                    });\r\n                });\r\n            }\r\n        };\r\n        var proxiesMarshalling = new remote.ProxiesMarshallingContribution(r);\r\n        function serializeAndSend(msg) {\r\n            send(marshalling.marshallObject(msg, proxiesMarshalling));\r\n        }\r\n        function invokeHandler(rpcId, method, args) {\r\n            try {\r\n                return winjs.TPromise.as(bigHandler.handle(rpcId, method, args));\r\n            }\r\n            catch (err) {\r\n                return winjs.TPromise.wrapError(err);\r\n            }\r\n        }\r\n        return r;\r\n    }\r\n    exports.create = create;\r\n    ;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/platform/plugins/common/plugins\", [\"require\", \"exports\", 'vs/platform/instantiation/common/instantiation'], function (require, exports, instantiation_1) {\r\n    exports.IPluginService = instantiation_1.createDecorator('pluginService');\r\n    exports.INSTANCE = null;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/platform/plugins/common/pluginsRegistry\", [\"require\", \"exports\", 'vs/platform/platform', 'vs/base/common/errors', 'vs/platform/jsonschemas/common/jsonContributionRegistry', 'vs/nls!vs/platform/plugins/common/pluginsRegistry', 'vs/base/common/paths', 'vs/base/common/severity'], function (require, exports, platform_1, Errors, JSONContributionRegistry, nls, paths, severity_1) {\r\n    var ScopedMessageCollector = (function () {\r\n        function ScopedMessageCollector(scope, actual) {\r\n            this._scope = scope;\r\n            this._actual = actual;\r\n        }\r\n        ScopedMessageCollector.prototype.error = function (message) {\r\n            this._actual.error(this._scope, message);\r\n        };\r\n        ScopedMessageCollector.prototype.warn = function (message) {\r\n            this._actual.warn(this._scope, message);\r\n        };\r\n        ScopedMessageCollector.prototype.info = function (message) {\r\n            this._actual.info(this._scope, message);\r\n        };\r\n        return ScopedMessageCollector;\r\n    })();\r\n    var PluginsMessageForwarder = (function () {\r\n        function PluginsMessageForwarder(handler) {\r\n            this._handler = handler;\r\n        }\r\n        PluginsMessageForwarder.prototype._pushMessage = function (type, source, message) {\r\n            this._handler(type, source, this._ensureString(message));\r\n        };\r\n        PluginsMessageForwarder.prototype._ensureString = function (e) {\r\n            if (e && e.message && e.stack) {\r\n                return e.message + '\\n\\n' + e.stack;\r\n            }\r\n            return String(e);\r\n        };\r\n        PluginsMessageForwarder.prototype.error = function (source, message) {\r\n            this._pushMessage(severity_1.default.Error, source, message);\r\n        };\r\n        PluginsMessageForwarder.prototype.warn = function (source, message) {\r\n            this._pushMessage(severity_1.default.Warning, source, message);\r\n        };\r\n        PluginsMessageForwarder.prototype.info = function (source, message) {\r\n            this._pushMessage(severity_1.default.Info, source, message);\r\n        };\r\n        PluginsMessageForwarder.prototype.scopeTo = function (source) {\r\n            return new ScopedMessageCollector(source, this);\r\n        };\r\n        return PluginsMessageForwarder;\r\n    })();\r\n    var PluginsMessageCollector = (function () {\r\n        function PluginsMessageCollector() {\r\n            this._messages = [];\r\n        }\r\n        PluginsMessageCollector.prototype.getMessages = function () {\r\n            return this._messages;\r\n        };\r\n        PluginsMessageCollector.prototype._pushMessage = function (type, source, message) {\r\n            this._messages.push({\r\n                type: type,\r\n                message: this._ensureString(message),\r\n                source: source\r\n            });\r\n        };\r\n        PluginsMessageCollector.prototype._ensureString = function (e) {\r\n            if (e && e.message && e.stack) {\r\n                return e.message + '\\n\\n' + e.stack;\r\n            }\r\n            return String(e);\r\n        };\r\n        PluginsMessageCollector.prototype.error = function (source, message) {\r\n            this._pushMessage(severity_1.default.Error, source, message);\r\n        };\r\n        PluginsMessageCollector.prototype.warn = function (source, message) {\r\n            this._pushMessage(severity_1.default.Warning, source, message);\r\n        };\r\n        PluginsMessageCollector.prototype.info = function (source, message) {\r\n            this._pushMessage(severity_1.default.Info, source, message);\r\n        };\r\n        PluginsMessageCollector.prototype.scopeTo = function (source) {\r\n            return new ScopedMessageCollector(source, this);\r\n        };\r\n        return PluginsMessageCollector;\r\n    })();\r\n    exports.PluginsMessageCollector = PluginsMessageCollector;\r\n    function isValidPluginDescription(extensionFolderPath, pluginDescription, notices) {\r\n        if (!pluginDescription) {\r\n            notices.push(nls.localize(0, null));\r\n            return false;\r\n        }\r\n        if (typeof pluginDescription.publisher !== 'string') {\r\n            notices.push(nls.localize(1, null, 'publisher'));\r\n            return false;\r\n        }\r\n        if (typeof pluginDescription.name !== 'string') {\r\n            notices.push(nls.localize(2, null, 'name'));\r\n            return false;\r\n        }\r\n        if (typeof pluginDescription.version !== 'string') {\r\n            notices.push(nls.localize(3, null, 'version'));\r\n            return false;\r\n        }\r\n        if (!pluginDescription.engines) {\r\n            notices.push(nls.localize(4, null, 'engines'));\r\n            return false;\r\n        }\r\n        if (typeof pluginDescription.engines.vscode !== 'string') {\r\n            notices.push(nls.localize(5, null, 'engines.vscode'));\r\n            return false;\r\n        }\r\n        if (typeof pluginDescription.extensionDependencies !== 'undefined') {\r\n            if (!_isStringArray(pluginDescription.extensionDependencies)) {\r\n                notices.push(nls.localize(6, null, 'extensionDependencies'));\r\n                return false;\r\n            }\r\n        }\r\n        if (typeof pluginDescription.activationEvents !== 'undefined') {\r\n            if (!_isStringArray(pluginDescription.activationEvents)) {\r\n                notices.push(nls.localize(7, null, 'activationEvents'));\r\n                return false;\r\n            }\r\n            if (typeof pluginDescription.main === 'undefined') {\r\n                notices.push(nls.localize(8, null, 'activationEvents', 'main'));\r\n                return false;\r\n            }\r\n        }\r\n        if (typeof pluginDescription.main !== 'undefined') {\r\n            if (typeof pluginDescription.main !== 'string') {\r\n                notices.push(nls.localize(9, null, 'main'));\r\n                return false;\r\n            }\r\n            else {\r\n                var normalizedAbsolutePath = paths.normalize(paths.join(extensionFolderPath, pluginDescription.main));\r\n                if (normalizedAbsolutePath.indexOf(extensionFolderPath)) {\r\n                    notices.push(nls.localize(10, null, normalizedAbsolutePath, extensionFolderPath));\r\n                }\r\n            }\r\n            if (typeof pluginDescription.activationEvents === 'undefined') {\r\n                notices.push(nls.localize(11, null, 'activationEvents', 'main'));\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    exports.isValidPluginDescription = isValidPluginDescription;\r\n    var hasOwnProperty = Object.hasOwnProperty;\r\n    var schemaRegistry = platform_1.Registry.as(JSONContributionRegistry.Extensions.JSONContribution);\r\n    var ExtensionPoint = (function () {\r\n        function ExtensionPoint(name, registry) {\r\n            this.name = name;\r\n            this._registry = registry;\r\n            this._handler = null;\r\n            this._collector = null;\r\n        }\r\n        ExtensionPoint.prototype.setHandler = function (handler) {\r\n            if (this._handler) {\r\n                throw new Error('Handler already set!');\r\n            }\r\n            this._handler = handler;\r\n            this._handle();\r\n        };\r\n        ExtensionPoint.prototype.handle = function (collector) {\r\n            this._collector = collector;\r\n            this._handle();\r\n        };\r\n        ExtensionPoint.prototype._handle = function () {\r\n            var _this = this;\r\n            if (!this._handler || !this._collector) {\r\n                return;\r\n            }\r\n            this._registry.registerPointListener(this.name, function (descriptions) {\r\n                var users = descriptions.map(function (desc) {\r\n                    return {\r\n                        description: desc,\r\n                        value: desc.contributes[_this.name],\r\n                        collector: _this._collector.scopeTo(desc.extensionFolderPath)\r\n                    };\r\n                });\r\n                _this._handler(users);\r\n            });\r\n        };\r\n        return ExtensionPoint;\r\n    })();\r\n    var PluginsRegistryImpl = (function () {\r\n        function PluginsRegistryImpl() {\r\n            this._pluginsMap = {};\r\n            this._pluginsArr = [];\r\n            this._activationMap = {};\r\n            this._pointListeners = [];\r\n            this._extensionPoints = {};\r\n            this._oneTimeActivationEventListeners = {};\r\n        }\r\n        PluginsRegistryImpl.prototype.registerPointListener = function (point, handler) {\r\n            var entry = {\r\n                extensionPoint: point,\r\n                listener: handler\r\n            };\r\n            this._pointListeners.push(entry);\r\n            this._triggerPointListener(entry, PluginsRegistryImpl._filterWithExtPoint(this.getAllPluginDescriptions(), point));\r\n        };\r\n        PluginsRegistryImpl.prototype.registerExtensionPoint = function (extensionPoint, jsonSchema) {\r\n            if (hasOwnProperty.call(this._extensionPoints, extensionPoint)) {\r\n                throw new Error('Duplicate extension point: ' + extensionPoint);\r\n            }\r\n            var result = new ExtensionPoint(extensionPoint, this);\r\n            this._extensionPoints[extensionPoint] = result;\r\n            schema.properties.contributes.properties[extensionPoint] = jsonSchema;\r\n            schemaRegistry.registerSchema(schemaId, schema);\r\n            return result;\r\n        };\r\n        PluginsRegistryImpl.prototype.handleExtensionPoints = function (messageHandler) {\r\n            var _this = this;\r\n            var collector = new PluginsMessageForwarder(messageHandler);\r\n            Object.keys(this._extensionPoints).forEach(function (extensionPointName) {\r\n                _this._extensionPoints[extensionPointName].handle(collector);\r\n            });\r\n        };\r\n        PluginsRegistryImpl.prototype._triggerPointListener = function (handler, desc) {\r\n            // console.log('_triggerPointListeners: ' + desc.length + ' OF ' + handler.extensionPoint);\r\n            if (!desc || desc.length === 0) {\r\n                return;\r\n            }\r\n            try {\r\n                handler.listener(desc);\r\n            }\r\n            catch (e) {\r\n                Errors.onUnexpectedError(e);\r\n            }\r\n        };\r\n        PluginsRegistryImpl.prototype.registerPlugins = function (pluginDescriptions) {\r\n            for (var i = 0, len = pluginDescriptions.length; i < len; i++) {\r\n                var pluginDescription = pluginDescriptions[i];\r\n                if (hasOwnProperty.call(this._pluginsMap, pluginDescription.id)) {\r\n                    // No overwriting allowed!\r\n                    console.error('Plugin `' + pluginDescription.id + '` is already registered');\r\n                    continue;\r\n                }\r\n                this._pluginsMap[pluginDescription.id] = pluginDescription;\r\n                this._pluginsArr.push(pluginDescription);\r\n                if (Array.isArray(pluginDescription.activationEvents)) {\r\n                    for (var j = 0, lenJ = pluginDescription.activationEvents.length; j < lenJ; j++) {\r\n                        var activationEvent = pluginDescription.activationEvents[j];\r\n                        this._activationMap[activationEvent] = this._activationMap[activationEvent] || [];\r\n                        this._activationMap[activationEvent].push(pluginDescription);\r\n                    }\r\n                }\r\n            }\r\n            for (var i = 0, len = this._pointListeners.length; i < len; i++) {\r\n                var listenerEntry = this._pointListeners[i];\r\n                var descriptions = PluginsRegistryImpl._filterWithExtPoint(pluginDescriptions, listenerEntry.extensionPoint);\r\n                this._triggerPointListener(listenerEntry, descriptions);\r\n            }\r\n        };\r\n        PluginsRegistryImpl._filterWithExtPoint = function (input, point) {\r\n            return input.filter(function (desc) {\r\n                return (desc.contributes && hasOwnProperty.call(desc.contributes, point));\r\n            });\r\n        };\r\n        PluginsRegistryImpl.prototype.getPluginDescriptionsForActivationEvent = function (activationEvent) {\r\n            if (!hasOwnProperty.call(this._activationMap, activationEvent)) {\r\n                return [];\r\n            }\r\n            return this._activationMap[activationEvent].slice(0);\r\n        };\r\n        PluginsRegistryImpl.prototype.getAllPluginDescriptions = function () {\r\n            return this._pluginsArr.slice(0);\r\n        };\r\n        PluginsRegistryImpl.prototype.getPluginDescription = function (pluginId) {\r\n            if (!hasOwnProperty.call(this._pluginsMap, pluginId)) {\r\n                return null;\r\n            }\r\n            return this._pluginsMap[pluginId];\r\n        };\r\n        PluginsRegistryImpl.prototype.registerOneTimeActivationEventListener = function (activationEvent, listener) {\r\n            if (!hasOwnProperty.call(this._oneTimeActivationEventListeners, activationEvent)) {\r\n                this._oneTimeActivationEventListeners[activationEvent] = [];\r\n            }\r\n            this._oneTimeActivationEventListeners[activationEvent].push(listener);\r\n        };\r\n        PluginsRegistryImpl.prototype.triggerActivationEventListeners = function (activationEvent) {\r\n            if (hasOwnProperty.call(this._oneTimeActivationEventListeners, activationEvent)) {\r\n                var listeners = this._oneTimeActivationEventListeners[activationEvent];\r\n                delete this._oneTimeActivationEventListeners[activationEvent];\r\n                for (var i = 0, len = listeners.length; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    try {\r\n                        listener();\r\n                    }\r\n                    catch (e) {\r\n                        Errors.onUnexpectedError(e);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        return PluginsRegistryImpl;\r\n    })();\r\n    function _isStringArray(arr) {\r\n        if (!Array.isArray(arr)) {\r\n            return false;\r\n        }\r\n        for (var i = 0, len = arr.length; i < len; i++) {\r\n            if (typeof arr[i] !== 'string') {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    var Extensions = {\r\n        PluginsRegistry: 'PluginsRegistry'\r\n    };\r\n    platform_1.Registry.add(Extensions.PluginsRegistry, new PluginsRegistryImpl());\r\n    exports.PluginsRegistry = platform_1.Registry.as(Extensions.PluginsRegistry);\r\n    var schemaId = 'local://schemas/vscode-extension';\r\n    var schema = {\r\n        default: {\r\n            'name': '{{name}}',\r\n            'description': '{{description}}',\r\n            'author': '{{author}}',\r\n            'version': '{{1.0.0}}',\r\n            'main': '{{pathToMain}}',\r\n            'dependencies': {}\r\n        },\r\n        properties: {\r\n            // engines: {\r\n            // \trequired: [ 'vscode' ],\r\n            // \tproperties: {\r\n            // \t\t'vscode': {\r\n            // \t\t\ttype: 'string',\r\n            // \t\t\tdescription: nls.localize('vscode.extension.engines.vscode', 'Specifies that this package only runs inside VSCode of the given version.'),\r\n            // \t\t}\r\n            // \t}\r\n            // },\r\n            displayName: {\r\n                description: nls.localize(12, null),\r\n                type: 'string'\r\n            },\r\n            categories: {\r\n                description: nls.localize(13, null),\r\n                type: 'array',\r\n                items: {\r\n                    type: 'string',\r\n                    enum: ['Languages', 'Snippets', 'Linters', 'Themes', 'Debuggers', 'Other']\r\n                }\r\n            },\r\n            galleryBanner: {\r\n                type: 'object',\r\n                description: nls.localize(14, null),\r\n                properties: {\r\n                    color: {\r\n                        description: nls.localize(15, null),\r\n                        type: 'string'\r\n                    },\r\n                    theme: {\r\n                        description: nls.localize(16, null),\r\n                        type: 'string',\r\n                        enum: ['dark', 'light']\r\n                    }\r\n                }\r\n            },\r\n            publisher: {\r\n                description: nls.localize(17, null),\r\n                type: 'string'\r\n            },\r\n            activationEvents: {\r\n                description: nls.localize(18, null),\r\n                type: 'array',\r\n                items: {\r\n                    type: 'string'\r\n                }\r\n            },\r\n            extensionDependencies: {\r\n                description: nls.localize(19, null),\r\n                type: 'array',\r\n                items: {\r\n                    type: 'string'\r\n                }\r\n            },\r\n            scripts: {\r\n                type: 'object',\r\n                properties: {\r\n                    'vscode:prepublish': {\r\n                        description: nls.localize(20, null),\r\n                        type: 'string'\r\n                    }\r\n                }\r\n            },\r\n            contributes: {\r\n                description: nls.localize(21, null),\r\n                type: 'object',\r\n                properties: {},\r\n                default: {}\r\n            },\r\n            isAMD: {\r\n                description: nls.localize(22, null),\r\n                type: 'boolean'\r\n            }\r\n        }\r\n    };\r\n    schemaRegistry.registerSchema(schemaId, schema);\r\n    schemaRegistry.addSchemaFileAssociation('/package.json', schemaId);\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/platform/plugins/common/abstractPluginService\", [\"require\", \"exports\", 'vs/nls!vs/platform/plugins/common/abstractPluginService', 'vs/platform/plugins/common/plugins', 'vs/base/common/winjs.base', 'vs/platform/plugins/common/pluginsRegistry', 'vs/base/common/severity'], function (require, exports, nls, plugins_1, WinJS, pluginsRegistry_1, severity_1) {\r\n    var hasOwnProperty = Object.hasOwnProperty;\r\n    var global = this;\r\n    var ActivatedPlugin = (function () {\r\n        function ActivatedPlugin(activationFailed, module, exports, subscriptions) {\r\n            this.activationFailed = activationFailed;\r\n            this.module = module;\r\n            this.exports = exports;\r\n            this.subscriptions = subscriptions;\r\n        }\r\n        return ActivatedPlugin;\r\n    })();\r\n    exports.ActivatedPlugin = ActivatedPlugin;\r\n    var AbstractPluginService = (function () {\r\n        function AbstractPluginService(isReadyByDefault) {\r\n            var _this = this;\r\n            this.serviceId = plugins_1.IPluginService;\r\n            if (isReadyByDefault) {\r\n                this._onReady = WinJS.TPromise.as(true);\r\n                this._onReadyC = function (v) { };\r\n            }\r\n            else {\r\n                this._onReady = new WinJS.TPromise(function (c, e, p) {\r\n                    _this._onReadyC = c;\r\n                }, function () {\r\n                    console.warn('You should really not try to cancel this ready promise!');\r\n                });\r\n            }\r\n            this.activatingPlugins = {};\r\n            this.activatedPlugins = {};\r\n        }\r\n        AbstractPluginService.prototype.showMessage = function (severity, source, message) {\r\n            this._showMessage(severity, (source ? '[' + source + ']: ' : '') + message);\r\n        };\r\n        AbstractPluginService.prototype.registrationDone = function (messages) {\r\n            var _this = this;\r\n            messages.forEach(function (entry) {\r\n                _this.showMessage(entry.type, entry.source, entry.message);\r\n            });\r\n            this._onReadyC(true);\r\n        };\r\n        AbstractPluginService.prototype.registerOneTimeActivationEventListener = function (activationEvent, listener) {\r\n            pluginsRegistry_1.PluginsRegistry.registerOneTimeActivationEventListener(activationEvent, listener);\r\n        };\r\n        AbstractPluginService.prototype.onReady = function () {\r\n            return this._onReady;\r\n        };\r\n        AbstractPluginService.prototype.get = function (pluginId) {\r\n            if (!hasOwnProperty.call(this.activatedPlugins, pluginId)) {\r\n                throw new Error('Plugin `' + pluginId + '` is not known or not activated');\r\n            }\r\n            return this.activatedPlugins[pluginId].exports;\r\n        };\r\n        AbstractPluginService.prototype.getPluginsStatus = function () {\r\n            return null;\r\n        };\r\n        AbstractPluginService.prototype.isActivated = function (pluginId) {\r\n            return hasOwnProperty.call(this.activatedPlugins, pluginId);\r\n        };\r\n        AbstractPluginService.prototype.activateByEvent = function (activationEvent) {\r\n            var _this = this;\r\n            return this._onReady.then(function () {\r\n                pluginsRegistry_1.PluginsRegistry.triggerActivationEventListeners(activationEvent);\r\n                var activatePlugins = pluginsRegistry_1.PluginsRegistry.getPluginDescriptionsForActivationEvent(activationEvent);\r\n                return _this._activatePlugins(activatePlugins, 0);\r\n            });\r\n        };\r\n        AbstractPluginService.prototype.activateAndGet = function (pluginId) {\r\n            var _this = this;\r\n            return this._onReady.then(function () {\r\n                var desc = pluginsRegistry_1.PluginsRegistry.getPluginDescription(pluginId);\r\n                if (!desc) {\r\n                    throw new Error('Plugin `' + pluginId + '` is not known');\r\n                }\r\n                return _this._activatePlugins([desc], 0).then(function () {\r\n                    return _this.get(pluginId);\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Handle semantics related to dependencies for `currentPlugin`.\r\n         * semantics: `redExtensions` must wait for `greenExtensions`.\r\n         */\r\n        AbstractPluginService.prototype._handleActivateRequest = function (currentPlugin, greenExtensions, redExtensions) {\r\n            var depIds = (typeof currentPlugin.extensionDependencies === 'undefined' ? [] : currentPlugin.extensionDependencies);\r\n            var currentPluginGetsGreenLight = true;\r\n            for (var j = 0, lenJ = depIds.length; j < lenJ; j++) {\r\n                var depId = depIds[j];\r\n                var depDesc = pluginsRegistry_1.PluginsRegistry.getPluginDescription(depId);\r\n                if (!depDesc) {\r\n                    // Error condition 1: unknown dependency\r\n                    this._showMessage(severity_1.default.Error, nls.localize(0, null, depId, currentPlugin.id));\r\n                    this.activatedPlugins[currentPlugin.id] = new ActivatedPlugin(true, { activate: undefined, deactivate: undefined }, {}, []);\r\n                    return;\r\n                }\r\n                if (hasOwnProperty.call(this.activatedPlugins, depId)) {\r\n                    var dep = this.activatedPlugins[depId];\r\n                    if (dep.activationFailed) {\r\n                        // Error condition 2: a dependency has already failed activation\r\n                        this._showMessage(severity_1.default.Error, nls.localize(1, null, depId, currentPlugin.id));\r\n                        this.activatedPlugins[currentPlugin.id] = new ActivatedPlugin(true, { activate: undefined, deactivate: undefined }, {}, []);\r\n                        return;\r\n                    }\r\n                }\r\n                else {\r\n                    // must first wait for the dependency to activate\r\n                    currentPluginGetsGreenLight = false;\r\n                    greenExtensions[depId] = depDesc;\r\n                }\r\n            }\r\n            if (currentPluginGetsGreenLight) {\r\n                greenExtensions[currentPlugin.id] = currentPlugin;\r\n            }\r\n            else {\r\n                redExtensions.push(currentPlugin);\r\n            }\r\n        };\r\n        AbstractPluginService.prototype._activatePlugins = function (pluginDescriptions, recursionLevel) {\r\n            var _this = this;\r\n            // console.log(recursionLevel, '_activatePlugins: ', pluginDescriptions.map(p => p.id));\r\n            if (pluginDescriptions.length === 0) {\r\n                return WinJS.TPromise.as(void 0);\r\n            }\r\n            pluginDescriptions = pluginDescriptions.filter(function (p) { return !hasOwnProperty.call(_this.activatedPlugins, p.id); });\r\n            if (pluginDescriptions.length === 0) {\r\n                return WinJS.TPromise.as(void 0);\r\n            }\r\n            if (recursionLevel > 10) {\r\n                // More than 10 dependencies deep => most likely a dependency loop\r\n                for (var i = 0, len = pluginDescriptions.length; i < len; i++) {\r\n                    // Error condition 3: dependency loop\r\n                    this._showMessage(severity_1.default.Error, nls.localize(2, null, pluginDescriptions[i].id));\r\n                    this.activatedPlugins[pluginDescriptions[i].id] = new ActivatedPlugin(true, { activate: undefined, deactivate: undefined }, {}, []);\r\n                }\r\n                return WinJS.TPromise.as(void 0);\r\n            }\r\n            var greenMap = Object.create(null), red = [];\r\n            for (var i = 0, len = pluginDescriptions.length; i < len; i++) {\r\n                this._handleActivateRequest(pluginDescriptions[i], greenMap, red);\r\n            }\r\n            // Make sure no red is also green\r\n            for (var i = 0, len = red.length; i < len; i++) {\r\n                if (greenMap[red[i].id]) {\r\n                    delete greenMap[red[i].id];\r\n                }\r\n            }\r\n            var green = Object.keys(greenMap).map(function (id) { return greenMap[id]; });\r\n            // console.log('greenExtensions: ', green.map(p => p.id));\r\n            // console.log('redExtensions: ', red.map(p => p.id));\r\n            if (red.length === 0) {\r\n                // Finally reached only leafs!\r\n                return WinJS.TPromise.join(green.map(function (p) { return _this._activatePlugin(p); })).then(function (_) { return void 0; });\r\n            }\r\n            return this._activatePlugins(green, recursionLevel + 1).then(function (_) {\r\n                return _this._activatePlugins(red, recursionLevel + 1);\r\n            });\r\n        };\r\n        AbstractPluginService.prototype._activatePlugin = function (pluginDescription) {\r\n            var _this = this;\r\n            if (hasOwnProperty.call(this.activatedPlugins, pluginDescription.id)) {\r\n                return WinJS.TPromise.as(this.activatedPlugins[pluginDescription.id].exports);\r\n            }\r\n            if (hasOwnProperty.call(this.activatingPlugins, pluginDescription.id)) {\r\n                return this.activatingPlugins[pluginDescription.id];\r\n            }\r\n            this.activatingPlugins[pluginDescription.id] = this._actualActivatePlugin(pluginDescription).then(null, function (err) {\r\n                _this._showMessage(severity_1.default.Error, nls.localize(3, null, pluginDescription.id, err.message));\r\n                console.error('Activating extension `' + pluginDescription.id + '` failed: ', err.message);\r\n                console.log('Here is the error stack: ', err.stack);\r\n                // Treat the plugin as being empty\r\n                return new ActivatedPlugin(true, { activate: undefined, deactivate: undefined }, {}, []);\r\n            }).then(function (x) {\r\n                _this.activatedPlugins[pluginDescription.id] = x;\r\n                delete _this.activatingPlugins[pluginDescription.id];\r\n                return x.exports;\r\n            });\r\n            return this.activatingPlugins[pluginDescription.id];\r\n        };\r\n        AbstractPluginService.prototype._actualActivatePlugin = function (pluginDescription) {\r\n            var _this = this;\r\n            if (!pluginDescription.main) {\r\n                // Treat the plugin as being empty => NOT AN ERROR CASE\r\n                return WinJS.TPromise.as(new ActivatedPlugin(false, { activate: undefined, deactivate: undefined }, {}, []));\r\n            }\r\n            return this._loadPluginModule(pluginDescription).then(function (pluginModule) {\r\n                return _this._loadPluginContext(pluginDescription).then(function (context) {\r\n                    return AbstractPluginService._callActivate(pluginModule, context);\r\n                });\r\n            });\r\n        };\r\n        AbstractPluginService.prototype._loadPluginModule = function (pluginDescription) {\r\n            return loadAMDModule(pluginDescription.main);\r\n        };\r\n        AbstractPluginService.prototype._loadPluginContext = function (pluginDescription) {\r\n            return WinJS.TPromise.as(undefined);\r\n        };\r\n        AbstractPluginService._callActivate = function (pluginModule, context) {\r\n            // Make sure the plugin's surface is not undefined\r\n            pluginModule = pluginModule || {\r\n                activate: undefined,\r\n                deactivate: undefined\r\n            };\r\n            // let subscriptions:IDisposable[] = [];\r\n            return this._callActivateOptional(pluginModule, context).then(function (pluginExports) {\r\n                return new ActivatedPlugin(false, pluginModule, pluginExports, context.subscriptions);\r\n            });\r\n        };\r\n        AbstractPluginService._callActivateOptional = function (pluginModule, context) {\r\n            if (typeof pluginModule.activate === 'function') {\r\n                try {\r\n                    return WinJS.TPromise.as(pluginModule.activate.apply(global, [context]));\r\n                }\r\n                catch (err) {\r\n                    return WinJS.TPromise.wrapError(err);\r\n                }\r\n            }\r\n            else {\r\n                // No activate found => the module is the plugin's exports\r\n                return WinJS.TPromise.as(pluginModule);\r\n            }\r\n        };\r\n        return AbstractPluginService;\r\n    })();\r\n    exports.AbstractPluginService = AbstractPluginService;\r\n    function loadAMDModule(moduleId) {\r\n        return new WinJS.TPromise(function (c, e, p) {\r\n            require([moduleId], function (r) {\r\n                c(r);\r\n            }, e);\r\n        });\r\n    }\r\n    exports.loadAMDModule = loadAMDModule;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/platform/plugins/node/pluginVersionValidator\", [\"require\", \"exports\", 'vs/nls!vs/platform/plugins/node/pluginVersionValidator', 'vs/platform/plugins/common/pluginsRegistry', 'semver'], function (require, exports, nls, pluginsRegistry_1, semver) {\r\n    var VERSION_REGEXP = /^(\\^)?((\\d+)|x)\\.((\\d+)|x)\\.((\\d+)|x)(\\-.*)?$/;\r\n    function isValidVersionStr(version) {\r\n        version = version.trim();\r\n        return (version === '*' || VERSION_REGEXP.test(version));\r\n    }\r\n    exports.isValidVersionStr = isValidVersionStr;\r\n    function parseVersion(version) {\r\n        if (!isValidVersionStr(version)) {\r\n            return null;\r\n        }\r\n        version = version.trim();\r\n        if (version === '*') {\r\n            return {\r\n                hasCaret: false,\r\n                majorBase: 0,\r\n                majorMustEqual: false,\r\n                minorBase: 0,\r\n                minorMustEqual: false,\r\n                patchBase: 0,\r\n                patchMustEqual: false,\r\n                preRelease: null\r\n            };\r\n        }\r\n        var m = version.match(VERSION_REGEXP);\r\n        return {\r\n            hasCaret: !!m[1],\r\n            majorBase: m[2] === 'x' ? 0 : parseInt(m[2], 10),\r\n            majorMustEqual: (m[2] === 'x' ? false : true),\r\n            minorBase: m[4] === 'x' ? 0 : parseInt(m[4], 10),\r\n            minorMustEqual: (m[4] === 'x' ? false : true),\r\n            patchBase: m[6] === 'x' ? 0 : parseInt(m[6], 10),\r\n            patchMustEqual: (m[6] === 'x' ? false : true),\r\n            preRelease: m[8] || null\r\n        };\r\n    }\r\n    exports.parseVersion = parseVersion;\r\n    function normalizeVersion(version) {\r\n        if (!version) {\r\n            return null;\r\n        }\r\n        var majorBase = version.majorBase, majorMustEqual = version.majorMustEqual, minorBase = version.minorBase, minorMustEqual = version.minorMustEqual, patchBase = version.patchBase, patchMustEqual = version.patchMustEqual;\r\n        if (version.hasCaret) {\r\n            if (majorBase === 0) {\r\n                patchMustEqual = false;\r\n            }\r\n            else {\r\n                minorMustEqual = false;\r\n                patchMustEqual = false;\r\n            }\r\n        }\r\n        return {\r\n            majorBase: majorBase,\r\n            majorMustEqual: majorMustEqual,\r\n            minorBase: minorBase,\r\n            minorMustEqual: minorMustEqual,\r\n            patchBase: patchBase,\r\n            patchMustEqual: patchMustEqual\r\n        };\r\n    }\r\n    exports.normalizeVersion = normalizeVersion;\r\n    function isValidVersion(_version, _desiredVersion) {\r\n        var version;\r\n        if (typeof _version === 'string') {\r\n            version = normalizeVersion(parseVersion(_version));\r\n        }\r\n        else {\r\n            version = _version;\r\n        }\r\n        var desiredVersion;\r\n        if (typeof _desiredVersion === 'string') {\r\n            desiredVersion = normalizeVersion(parseVersion(_desiredVersion));\r\n        }\r\n        else {\r\n            desiredVersion = _desiredVersion;\r\n        }\r\n        if (!version || !desiredVersion) {\r\n            return false;\r\n        }\r\n        if (version.majorBase < desiredVersion.majorBase) {\r\n            // smaller major version\r\n            return false;\r\n        }\r\n        if (version.majorBase > desiredVersion.majorBase) {\r\n            // higher major version\r\n            return (!desiredVersion.majorMustEqual);\r\n        }\r\n        // at this point, majorBase are equal\r\n        if (version.minorBase < desiredVersion.minorBase) {\r\n            // smaller minor version\r\n            return false;\r\n        }\r\n        if (version.minorBase > desiredVersion.minorBase) {\r\n            // higher minor version\r\n            return (!desiredVersion.minorMustEqual);\r\n        }\r\n        // at this point, minorBase are equal\r\n        if (version.patchBase < desiredVersion.patchBase) {\r\n            // smaller patch version\r\n            return false;\r\n        }\r\n        if (version.patchBase > desiredVersion.patchBase) {\r\n            // higher patch version\r\n            return (!desiredVersion.patchMustEqual);\r\n        }\r\n        // at this point, patchBase are equal\r\n        return true;\r\n    }\r\n    exports.isValidVersion = isValidVersion;\r\n    function isValidExtensionVersion(version, extensionDesc, notices) {\r\n        if (extensionDesc.isBuiltin || typeof extensionDesc.main === 'undefined') {\r\n            // No version check for builtin or declarative extensions\r\n            return true;\r\n        }\r\n        var desiredVersion = normalizeVersion(parseVersion(extensionDesc.engines.vscode));\r\n        if (!desiredVersion) {\r\n            notices.push(nls.localize(0, null, extensionDesc.engines.vscode));\r\n            return false;\r\n        }\r\n        // enforce that a breaking API version is specified.\r\n        // for 0.X.Y, that means up to 0.X must be specified\r\n        // otherwise for Z.X.Y, that means Z must be specified\r\n        if (desiredVersion.majorBase === 0) {\r\n            // force that major and minor must be specific\r\n            if (!desiredVersion.majorMustEqual || !desiredVersion.minorMustEqual) {\r\n                notices.push(nls.localize(1, null, extensionDesc.engines.vscode));\r\n                return false;\r\n            }\r\n        }\r\n        else {\r\n            // force that major must be specific\r\n            if (!desiredVersion.majorMustEqual) {\r\n                notices.push(nls.localize(2, null, extensionDesc.engines.vscode));\r\n                return false;\r\n            }\r\n        }\r\n        if (!isValidVersion(version, desiredVersion)) {\r\n            notices.push(nls.localize(3, null, version, extensionDesc.engines.vscode));\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    exports.isValidExtensionVersion = isValidExtensionVersion;\r\n    function isValidPluginDescription(version, extensionFolderPath, pluginDescription, notices) {\r\n        if (!pluginsRegistry_1.isValidPluginDescription(extensionFolderPath, pluginDescription, notices)) {\r\n            return false;\r\n        }\r\n        if (!semver.valid(pluginDescription.version)) {\r\n            notices.push(nls.localize(4, null));\r\n            return false;\r\n        }\r\n        return isValidExtensionVersion(version, pluginDescription, notices);\r\n    }\r\n    exports.isValidPluginDescription = isValidPluginDescription;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/platform/request/common/request\", [\"require\", \"exports\", 'vs/platform/instantiation/common/instantiation'], function (require, exports, instantiation_1) {\r\n    exports.IRequestService = instantiation_1.createDecorator('requestService');\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/platform/request/common/baseRequestService\", [\"require\", \"exports\", 'vs/base/common/uri', 'vs/base/common/strings', 'vs/base/common/timer', 'vs/base/common/async', 'vs/base/common/http', 'vs/base/common/winjs.base', 'vs/base/common/objects', 'vs/platform/request/common/request'], function (require, exports, uri_1, strings, Timer, Async, http, winjs, objects, request_1) {\r\n    /**\r\n     * Simple IRequestService implementation to allow sharing of this service implementation\r\n     * between different layers of the platform.\r\n     */\r\n    var BaseRequestService = (function () {\r\n        function BaseRequestService(contextService, telemetryService) {\r\n            this.serviceId = request_1.IRequestService;\r\n            var workspaceUri = null;\r\n            var contextService = contextService;\r\n            var workspace = contextService.getWorkspace();\r\n            this._serviceMap = workspace || Object.create(null);\r\n            this._telemetryService = telemetryService;\r\n            if (workspace) {\r\n                workspaceUri = strings.rtrim(workspace.resource.toString(), '/') + '/';\r\n            }\r\n            this.computeOrigin(workspaceUri);\r\n        }\r\n        BaseRequestService.prototype.computeOrigin = function (workspaceUri) {\r\n            if (workspaceUri) {\r\n                // Find root server URL from configuration\r\n                this._origin = workspaceUri;\r\n                var urlPath = uri_1.default.parse(this._origin).path;\r\n                if (urlPath && urlPath.length > 0) {\r\n                    this._origin = this._origin.substring(0, this._origin.length - urlPath.length + 1);\r\n                }\r\n                if (!strings.endsWith(this._origin, '/')) {\r\n                    this._origin += '/';\r\n                }\r\n            }\r\n            else {\r\n                this._origin = '/'; // Configuration not provided, fallback to default\r\n            }\r\n        };\r\n        BaseRequestService.prototype.makeCrossOriginRequest = function (options) {\r\n            return null;\r\n        };\r\n        BaseRequestService.prototype.makeRequest = function (options) {\r\n            var timer = Timer.nullEvent;\r\n            var isXhrRequestCORS = false;\r\n            var url = options.url;\r\n            if (!url) {\r\n                throw new Error('IRequestService.makeRequest: Url is required');\r\n            }\r\n            if ((strings.startsWith(url, 'http://') || strings.startsWith(url, 'https://')) && this._origin && !strings.startsWith(url, this._origin)) {\r\n                var coPromise = this.makeCrossOriginRequest(options);\r\n                if (coPromise) {\r\n                    return coPromise;\r\n                }\r\n                isXhrRequestCORS = true;\r\n            }\r\n            var xhrOptions = options;\r\n            if (!isXhrRequestCORS) {\r\n                var additionalHeaders = {};\r\n                if (this._telemetryService) {\r\n                    additionalHeaders['X-TelemetrySession'] = this._telemetryService.getSessionId();\r\n                }\r\n                ;\r\n                additionalHeaders['X-Requested-With'] = 'XMLHttpRequest';\r\n                xhrOptions.headers = objects.mixin(xhrOptions.headers, additionalHeaders);\r\n            }\r\n            if (options.timeout) {\r\n                xhrOptions.customRequestInitializer = function (xhrRequest) {\r\n                    xhrRequest.timeout = options.timeout;\r\n                };\r\n            }\r\n            return Async.always(winjs.xhr(xhrOptions), (function (xhr) {\r\n                if (timer.data) {\r\n                    timer.data.status = xhr.status;\r\n                }\r\n                timer.stop();\r\n            }));\r\n        };\r\n        BaseRequestService.prototype.makeChunkedRequest = function (options) {\r\n            var _this = this;\r\n            var from = 0, c, e, p, canceled = false;\r\n            return new winjs.TPromise(function (_c, _e, _p) {\r\n                c = _c;\r\n                e = _e;\r\n                p = _p;\r\n                _this.makeRequest(options).done(function (request) {\r\n                    var ret = {\r\n                        request: request,\r\n                        chunks: []\r\n                    };\r\n                    from = http.parseChunkedData(request, ret.chunks, from);\r\n                    c(ret);\r\n                }, function (err) {\r\n                    e(err);\r\n                }, function (request) {\r\n                    // This might fail in IE10 for b i g request. Leave it enabled\r\n                    // for now to see if and when it fails\r\n                    // if(request.readyState === 3) {\r\n                    //\tfrom = http.parseChunkedData(request, ret.chunks, from);\r\n                    // }\r\n                });\r\n            }, function () {\r\n                canceled = true;\r\n            });\r\n        };\r\n        return BaseRequestService;\r\n    })();\r\n    exports.BaseRequestService = BaseRequestService;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/platform/search/common/search\", [\"require\", \"exports\", 'vs/platform/instantiation/common/instantiation'], function (require, exports, instantiation_1) {\r\n    exports.ID = 'searchService';\r\n    exports.ISearchService = instantiation_1.createDecorator(exports.ID);\r\n    (function (QueryType) {\r\n        QueryType[QueryType[\"File\"] = 1] = \"File\";\r\n        QueryType[QueryType[\"Text\"] = 2] = \"Text\";\r\n    })(exports.QueryType || (exports.QueryType = {}));\r\n    var QueryType = exports.QueryType;\r\n    // ---- very simple implementation of the search model --------------------\r\n    var FileMatch = (function () {\r\n        function FileMatch(resource) {\r\n            this.resource = resource;\r\n            this.lineMatches = [];\r\n            // empty\r\n        }\r\n        return FileMatch;\r\n    })();\r\n    exports.FileMatch = FileMatch;\r\n    var LineMatch = (function () {\r\n        function LineMatch(preview, lineNumber, offsetAndLengths) {\r\n            this.preview = preview;\r\n            this.lineNumber = lineNumber;\r\n            this.offsetAndLengths = offsetAndLengths;\r\n            // empty\r\n        }\r\n        return LineMatch;\r\n    })();\r\n    exports.LineMatch = LineMatch;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\ndefine(\"vs/platform/storage/common/storage\", [\"require\", \"exports\", 'vs/base/common/events', 'vs/platform/instantiation/common/instantiation'], function (require, exports, events_1, instantiation_1) {\r\n    exports.ID = 'storageService';\r\n    exports.IStorageService = instantiation_1.createDecorator(exports.ID);\r\n    var StorageEventType;\r\n    (function (StorageEventType) {\r\n        /**\r\n         * Event type for when a storage value is changed.\r\n         */\r\n        StorageEventType.STORAGE = 'storage';\r\n    })(StorageEventType = exports.StorageEventType || (exports.StorageEventType = {}));\r\n    ;\r\n    /**\r\n     * Storage events are being emitted when user settings change which are persisted to local storage.\r\n     */\r\n    var StorageEvent = (function (_super) {\r\n        __extends(StorageEvent, _super);\r\n        function StorageEvent(key, before, after, originalEvent) {\r\n            _super.call(this, key, before, after, originalEvent);\r\n        }\r\n        /**\r\n         * Returns true if the storage change has occurred from this browser window and false if its coming from a different window.\r\n         */\r\n        StorageEvent.prototype.isLocal = function () {\r\n            // By the spec a storage event is only ever emitted if it occurs from a different browser tab or window\r\n            // so we can use the check for originalEvent being set or not as a way to find out if the event is local or not.\r\n            return !this.originalEvent;\r\n        };\r\n        return StorageEvent;\r\n    })(events_1.PropertyChangeEvent);\r\n    exports.StorageEvent = StorageEvent;\r\n    (function (StorageScope) {\r\n        /**\r\n         * The stored data will be scoped to all workspaces of this domain.\r\n         */\r\n        StorageScope[StorageScope[\"GLOBAL\"] = 0] = \"GLOBAL\";\r\n        /**\r\n         * The stored data will be scoped to the current workspace.\r\n         */\r\n        StorageScope[StorageScope[\"WORKSPACE\"] = 1] = \"WORKSPACE\";\r\n    })(exports.StorageScope || (exports.StorageScope = {}));\r\n    var StorageScope = exports.StorageScope;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/platform/telemetry/common/telemetry\", [\"require\", \"exports\", 'vs/platform/instantiation/common/instantiation'], function (require, exports, instantiation_1) {\r\n    exports.ID = 'telemetryService';\r\n    exports.ITelemetryService = instantiation_1.createDecorator(exports.ID);\r\n    function anonymize(input) {\r\n        if (!input) {\r\n            return input;\r\n        }\r\n        var r = '';\r\n        for (var i = 0; i < input.length; i++) {\r\n            var ch = input[i];\r\n            if (ch >= '0' && ch <= '9') {\r\n                r += '0';\r\n                continue;\r\n            }\r\n            if (ch >= 'a' && ch <= 'z') {\r\n                r += 'a';\r\n                continue;\r\n            }\r\n            if (ch >= 'A' && ch <= 'Z') {\r\n                r += 'A';\r\n                continue;\r\n            }\r\n            r += ch;\r\n        }\r\n        return r;\r\n    }\r\n    exports.anonymize = anonymize;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/editor/common/editorCommonExtensions\", [\"require\", \"exports\", 'vs/editor/common/editorCommon', 'vs/base/common/errors', 'vs/base/common/uri', 'vs/editor/common/core/position', 'vs/platform/telemetry/common/telemetry', 'vs/editor/common/services/modelService', 'vs/platform/platform', 'vs/platform/keybinding/common/keybindingsRegistry', 'vs/editor/common/config/config', 'vs/platform/instantiation/common/descriptors'], function (require, exports, EditorCommon, errors_1, uri_1, position_1, telemetry_1, modelService_1, platform_1, keybindingsRegistry_1, config, descriptors_1) {\r\n    // --- Keybinding extensions to make it more concise to express keybindings conditions\r\n    (function (ContextKey) {\r\n        ContextKey[ContextKey[\"None\"] = 0] = \"None\";\r\n        ContextKey[ContextKey[\"EditorTextFocus\"] = 1] = \"EditorTextFocus\";\r\n        ContextKey[ContextKey[\"EditorFocus\"] = 2] = \"EditorFocus\";\r\n    })(exports.ContextKey || (exports.ContextKey = {}));\r\n    var ContextKey = exports.ContextKey;\r\n    // --- Editor Actions\r\n    var EditorActionDescriptor = (function () {\r\n        function EditorActionDescriptor(ctor, id, label, kbOpts) {\r\n            if (kbOpts === void 0) { kbOpts = defaultEditorActionKeybindingOptions; }\r\n            this.ctor = ctor;\r\n            this.id = id;\r\n            this.label = label;\r\n            this.kbOpts = kbOpts;\r\n        }\r\n        return EditorActionDescriptor;\r\n    })();\r\n    exports.EditorActionDescriptor = EditorActionDescriptor;\r\n    var CommonEditorRegistry;\r\n    (function (CommonEditorRegistry) {\r\n        function registerEditorAction(desc) {\r\n            platform_1.Registry.as(Extensions.EditorCommonContributions).registerEditorAction(desc);\r\n        }\r\n        CommonEditorRegistry.registerEditorAction = registerEditorAction;\r\n        // --- Editor Contributions\r\n        function registerEditorContribution(ctor) {\r\n            platform_1.Registry.as(Extensions.EditorCommonContributions).registerEditorContribution2(ctor);\r\n        }\r\n        CommonEditorRegistry.registerEditorContribution = registerEditorContribution;\r\n        function getEditorContributions() {\r\n            return platform_1.Registry.as(Extensions.EditorCommonContributions).getEditorContributions2();\r\n        }\r\n        CommonEditorRegistry.getEditorContributions = getEditorContributions;\r\n        // --- Editor Commands\r\n        function commandWeight(importance) {\r\n            if (importance === void 0) { importance = 0; }\r\n            return keybindingsRegistry_1.KeybindingsRegistry.WEIGHT.editorContrib(importance);\r\n        }\r\n        CommonEditorRegistry.commandWeight = commandWeight;\r\n        function registerEditorCommand(commandId, weight, keybinding, needsTextFocus, needsKey, handler) {\r\n            var commandDesc = {\r\n                id: commandId,\r\n                handler: createCommandHandler(commandId, handler),\r\n                weight: weight,\r\n                context: contextRule(needsTextFocus, needsKey),\r\n                primary: keybinding.primary,\r\n                secondary: keybinding.secondary,\r\n                win: keybinding.win,\r\n                linux: keybinding.linux,\r\n                mac: keybinding.mac,\r\n            };\r\n            keybindingsRegistry_1.KeybindingsRegistry.registerCommandDesc(commandDesc);\r\n        }\r\n        CommonEditorRegistry.registerEditorCommand = registerEditorCommand;\r\n        function registerLanguageCommand(id, handler) {\r\n            keybindingsRegistry_1.KeybindingsRegistry.registerCommandDesc({\r\n                id: id,\r\n                handler: function (accessor, args) {\r\n                    if (args && args.length > 1 || typeof args[0] !== 'object') {\r\n                        throw errors_1.illegalArgument();\r\n                    }\r\n                    return handler(accessor, args && args[0]);\r\n                },\r\n                weight: keybindingsRegistry_1.KeybindingsRegistry.WEIGHT.editorContrib(),\r\n                primary: undefined,\r\n                context: undefined,\r\n            });\r\n        }\r\n        CommonEditorRegistry.registerLanguageCommand = registerLanguageCommand;\r\n        function registerDefaultLanguageCommand(id, handler) {\r\n            registerLanguageCommand(id, function (accessor, args) {\r\n                var resource = args.resource, position = args.position;\r\n                if (!uri_1.default.isURI(resource) || !position_1.Position.isIPosition(position)) {\r\n                    throw errors_1.illegalArgument();\r\n                }\r\n                var model = accessor.get(modelService_1.IModelService).getModel(resource);\r\n                if (!model) {\r\n                    throw errors_1.illegalArgument();\r\n                }\r\n                return handler(model, position, args);\r\n            });\r\n        }\r\n        CommonEditorRegistry.registerDefaultLanguageCommand = registerDefaultLanguageCommand;\r\n    })(CommonEditorRegistry = exports.CommonEditorRegistry || (exports.CommonEditorRegistry = {}));\r\n    var SimpleEditorContributionDescriptor = (function () {\r\n        function SimpleEditorContributionDescriptor(ctor) {\r\n            this._ctor = ctor;\r\n        }\r\n        SimpleEditorContributionDescriptor.prototype.createInstance = function (instantiationService, editor) {\r\n            return instantiationService.createInstance(this._ctor, editor);\r\n        };\r\n        return SimpleEditorContributionDescriptor;\r\n    })();\r\n    var InternalEditorActionDescriptor = (function () {\r\n        function InternalEditorActionDescriptor(ctor, id, label) {\r\n            this._descriptor = descriptors_1.createSyncDescriptor(ctor, {\r\n                id: id,\r\n                label: label\r\n            });\r\n        }\r\n        InternalEditorActionDescriptor.prototype.createInstance = function (instService, editor) {\r\n            return instService.createInstance(this._descriptor, editor);\r\n        };\r\n        return InternalEditorActionDescriptor;\r\n    })();\r\n    // Editor extension points\r\n    var Extensions = {\r\n        EditorCommonContributions: 'editor.commonContributions'\r\n    };\r\n    var EditorContributionRegistry = (function () {\r\n        function EditorContributionRegistry() {\r\n            this.editorContributions = [];\r\n        }\r\n        EditorContributionRegistry.prototype.registerEditorContribution2 = function (ctor) {\r\n            this.editorContributions.push(new SimpleEditorContributionDescriptor(ctor));\r\n        };\r\n        EditorContributionRegistry.prototype.registerEditorAction = function (desc) {\r\n            var handler = desc.kbOpts.handler;\r\n            if (!handler) {\r\n                if (desc.kbOpts.context === ContextKey.EditorTextFocus || desc.kbOpts.context === ContextKey.EditorFocus) {\r\n                    handler = triggerEditorAction.bind(null, desc.id);\r\n                }\r\n                else {\r\n                    handler = triggerEditorActionGlobal.bind(null, desc.id);\r\n                }\r\n            }\r\n            var context = null;\r\n            if (desc.kbOpts.context === ContextKey.EditorTextFocus) {\r\n                context = [{\r\n                        key: EditorCommon.KEYBINDING_CONTEXT_EDITOR_TEXT_FOCUS\r\n                    }];\r\n            }\r\n            else if (desc.kbOpts.context === ContextKey.EditorFocus) {\r\n                context = [{\r\n                        key: EditorCommon.KEYBINDING_CONTEXT_EDITOR_FOCUS\r\n                    }];\r\n            }\r\n            var commandDesc = {\r\n                id: desc.id,\r\n                handler: handler,\r\n                weight: keybindingsRegistry_1.KeybindingsRegistry.WEIGHT.editorContrib(),\r\n                context: context,\r\n                primary: desc.kbOpts.primary,\r\n                secondary: desc.kbOpts.secondary,\r\n                win: desc.kbOpts.win,\r\n                linux: desc.kbOpts.linux,\r\n                mac: desc.kbOpts.mac,\r\n            };\r\n            keybindingsRegistry_1.KeybindingsRegistry.registerCommandDesc(commandDesc);\r\n            this.editorContributions.push(new InternalEditorActionDescriptor(desc.ctor, desc.id, desc.label));\r\n        };\r\n        EditorContributionRegistry.prototype.getEditorContributions2 = function () {\r\n            return this.editorContributions.slice(0);\r\n        };\r\n        return EditorContributionRegistry;\r\n    })();\r\n    platform_1.Registry.add(Extensions.EditorCommonContributions, new EditorContributionRegistry());\r\n    function triggerEditorAction(actionId, accessor, args) {\r\n        config.withCodeEditorFromCommandHandler(actionId, accessor, args, function (editor) {\r\n            editor.trigger('keyboard', actionId, args);\r\n        });\r\n    }\r\n    function triggerEditorActionGlobal(actionId, accessor, args) {\r\n        // TODO: this is not necessarily keyboard\r\n        var focusedEditor = config.findFocusedEditor(actionId, accessor, args, false);\r\n        if (focusedEditor) {\r\n            focusedEditor.trigger('keyboard', actionId, args);\r\n            return;\r\n        }\r\n        var activeEditor = config.getActiveEditor(accessor);\r\n        if (activeEditor) {\r\n            var action = activeEditor.getAction(actionId);\r\n            if (action) {\r\n                accessor.get(telemetry_1.ITelemetryService).publicLog('editorActionInvoked', { name: action.label });\r\n                action.run().done(null, errors_1.onUnexpectedError);\r\n            }\r\n            return;\r\n        }\r\n    }\r\n    var defaultEditorActionKeybindingOptions = { primary: null, context: ContextKey.EditorTextFocus };\r\n    function contextRule(needsTextFocus, needsKey) {\r\n        var result = [];\r\n        if (needsTextFocus) {\r\n            result.push({ key: EditorCommon.KEYBINDING_CONTEXT_EDITOR_TEXT_FOCUS });\r\n        }\r\n        else {\r\n            result.push({ key: EditorCommon.KEYBINDING_CONTEXT_EDITOR_FOCUS });\r\n        }\r\n        if (needsKey) {\r\n            result.push({ key: needsKey });\r\n        }\r\n        return result;\r\n    }\r\n    function createCommandHandler(commandId, handler) {\r\n        return function (accessor, args) {\r\n            config.withCodeEditorFromCommandHandler(commandId, accessor, args, function (editor) {\r\n                handler(accessor, editor, args);\r\n            });\r\n        };\r\n    }\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/editor/contrib/codelens/common/codelens\", [\"require\", \"exports\", 'vs/base/common/errors', 'vs/base/common/uri', 'vs/editor/common/services/modelService', 'vs/base/common/winjs.base', 'vs/editor/common/editorCommonExtensions', 'vs/editor/common/modes/languageFeatureRegistry'], function (require, exports, errors_1, uri_1, modelService_1, winjs_base_1, editorCommonExtensions_1, languageFeatureRegistry_1) {\r\n    exports.CodeLensRegistry = new languageFeatureRegistry_1.default('codeLensSupport');\r\n    function getCodeLensData(model) {\r\n        var symbols = [];\r\n        var promises = exports.CodeLensRegistry.all(model).map(function (support) {\r\n            return support.findCodeLensSymbols(model.getAssociatedResource()).then(function (result) {\r\n                if (!Array.isArray(result)) {\r\n                    return;\r\n                }\r\n                for (var _i = 0; _i < result.length; _i++) {\r\n                    var symbol = result[_i];\r\n                    symbols.push({ symbol: symbol, support: support });\r\n                }\r\n            }, function (err) {\r\n                errors_1.onUnexpectedError(err);\r\n            });\r\n        });\r\n        return winjs_base_1.TPromise.join(promises).then(function () { return symbols; });\r\n    }\r\n    exports.getCodeLensData = getCodeLensData;\r\n    editorCommonExtensions_1.CommonEditorRegistry.registerLanguageCommand('_executeCodeLensProvider', function (accessor, args) {\r\n        var resource = args.resource;\r\n        if (!uri_1.default.isURI(resource)) {\r\n            throw errors_1.illegalArgument();\r\n        }\r\n        var model = accessor.get(modelService_1.IModelService).getModel(resource);\r\n        if (!model) {\r\n            throw errors_1.illegalArgument();\r\n        }\r\n        return getCodeLensData(model);\r\n    });\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/editor/contrib/format/common/format\", [\"require\", \"exports\", 'vs/editor/common/modes/languageFeatureRegistry', 'vs/base/common/errors', 'vs/base/common/uri', 'vs/editor/common/services/modelService', 'vs/base/common/winjs.base', 'vs/editor/common/core/range', 'vs/editor/common/editorCommonExtensions'], function (require, exports, languageFeatureRegistry_1, errors_1, uri_1, modelService_1, winjs_base_1, range_1, editorCommonExtensions_1) {\r\n    exports.FormatRegistry = new languageFeatureRegistry_1.default('formattingSupport');\r\n    exports.FormatOnTypeRegistry = new languageFeatureRegistry_1.default('formattingSupport');\r\n    function formatRange(model, range, options) {\r\n        var support = exports.FormatRegistry.ordered(model)\r\n            .filter(function (s) { return typeof s.formatRange === 'function'; })[0];\r\n        if (!support) {\r\n            return winjs_base_1.TPromise.as(undefined);\r\n        }\r\n        return support.formatRange(model.getAssociatedResource(), range, options);\r\n    }\r\n    exports.formatRange = formatRange;\r\n    function formatDocument(model, options) {\r\n        var support = exports.FormatRegistry.ordered(model)[0];\r\n        if (!support) {\r\n            return winjs_base_1.TPromise.as(undefined);\r\n        }\r\n        if (typeof support.formatDocument !== 'function') {\r\n            if (typeof support.formatRange === 'function') {\r\n                return formatRange(model, model.getFullModelRange(), options);\r\n            }\r\n            else {\r\n                return winjs_base_1.TPromise.as(undefined);\r\n            }\r\n        }\r\n        return support.formatDocument(model.getAssociatedResource(), options);\r\n    }\r\n    exports.formatDocument = formatDocument;\r\n    function formatAfterKeystroke(model, position, ch, options) {\r\n        var support = exports.FormatOnTypeRegistry.ordered(model)[0];\r\n        if (!support) {\r\n            return winjs_base_1.TPromise.as(undefined);\r\n        }\r\n        if (support.autoFormatTriggerCharacters.indexOf(ch) < 0) {\r\n            return winjs_base_1.TPromise.as(undefined);\r\n        }\r\n        return support.formatAfterKeystroke(model.getAssociatedResource(), position, ch, options);\r\n    }\r\n    exports.formatAfterKeystroke = formatAfterKeystroke;\r\n    editorCommonExtensions_1.CommonEditorRegistry.registerLanguageCommand('_executeFormatRangeProvider', function (accessor, args) {\r\n        var resource = args.resource, range = args.range, options = args.options;\r\n        if (!uri_1.default.isURI(resource) || !range_1.Range.isIRange(range)) {\r\n            throw errors_1.illegalArgument();\r\n        }\r\n        var model = accessor.get(modelService_1.IModelService).getModel(resource);\r\n        if (!model) {\r\n            throw errors_1.illegalArgument('resource');\r\n        }\r\n        return formatRange(model, range, options);\r\n    });\r\n    editorCommonExtensions_1.CommonEditorRegistry.registerLanguageCommand('_executeFormatDocumentProvider', function (accessor, args) {\r\n        var resource = args.resource, options = args.options;\r\n        if (!uri_1.default.isURI(resource)) {\r\n            throw errors_1.illegalArgument('resource');\r\n        }\r\n        var model = accessor.get(modelService_1.IModelService).getModel(resource);\r\n        if (!model) {\r\n            throw errors_1.illegalArgument('resource');\r\n        }\r\n        return formatDocument(model, options);\r\n    });\r\n    editorCommonExtensions_1.CommonEditorRegistry.registerDefaultLanguageCommand('_executeFormatOnTypeProvider', function (model, position, args) {\r\n        var ch = args.ch, options = args.options;\r\n        if (typeof ch !== 'string') {\r\n            throw errors_1.illegalArgument('ch');\r\n        }\r\n        return formatAfterKeystroke(model, position, ch, options);\r\n    });\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/editor/contrib/goToDeclaration/common/goToDeclaration\", [\"require\", \"exports\", 'vs/base/common/winjs.base', 'vs/base/common/errors', 'vs/editor/common/modes/languageFeatureRegistry', 'vs/editor/common/editorCommonExtensions'], function (require, exports, winjs_base_1, errors_1, languageFeatureRegistry_1, editorCommonExtensions_1) {\r\n    exports.DeclarationRegistry = new languageFeatureRegistry_1.default('declarationSupport');\r\n    function getDeclarationsAtPosition(model, position) {\r\n        var resource = model.getAssociatedResource();\r\n        var provider = exports.DeclarationRegistry.ordered(model);\r\n        // get results\r\n        var promises = provider.map(function (provider, idx) {\r\n            return provider.findDeclaration(resource, position).then(function (result) {\r\n                return result;\r\n            }, function (err) {\r\n                errors_1.onUnexpectedError(err);\r\n            });\r\n        });\r\n        return winjs_base_1.TPromise.join(promises).then(function (allReferences) {\r\n            var result = [];\r\n            for (var _i = 0; _i < allReferences.length; _i++) {\r\n                var references = allReferences[_i];\r\n                if (Array.isArray(references)) {\r\n                    result.push.apply(result, references);\r\n                }\r\n                else if (references) {\r\n                    result.push(references);\r\n                }\r\n            }\r\n            return result;\r\n        });\r\n    }\r\n    exports.getDeclarationsAtPosition = getDeclarationsAtPosition;\r\n    editorCommonExtensions_1.CommonEditorRegistry.registerDefaultLanguageCommand('_executeDefinitionProvider', getDeclarationsAtPosition);\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/editor/contrib/hover/common/hover\", [\"require\", \"exports\", 'vs/editor/common/modes/languageFeatureRegistry', 'vs/base/common/winjs.base', 'vs/base/common/arrays', 'vs/base/common/errors', 'vs/editor/common/editorCommonExtensions'], function (require, exports, languageFeatureRegistry_1, winjs_base_1, arrays_1, errors_1, editorCommonExtensions_1) {\r\n    exports.ExtraInfoRegistry = new languageFeatureRegistry_1.default('extraInfoSupport');\r\n    function getExtraInfoAtPosition(model, position) {\r\n        var resource = model.getAssociatedResource();\r\n        var supports = exports.ExtraInfoRegistry.ordered(model);\r\n        var values = [];\r\n        var promises = supports.map(function (support, idx) {\r\n            return support.computeInfo(resource, position).then(function (result) {\r\n                if (result) {\r\n                    var hasRange = (typeof result.range !== 'undefined');\r\n                    var hasValue = (typeof result.value !== 'undefined');\r\n                    var hasHtmlContent = (typeof result.htmlContent !== 'undefined' && result.htmlContent && result.htmlContent.length > 0);\r\n                    if (hasRange && (hasValue || hasHtmlContent)) {\r\n                        values[idx] = result;\r\n                    }\r\n                }\r\n            }, function (err) {\r\n                errors_1.onUnexpectedError(err);\r\n            });\r\n        });\r\n        return winjs_base_1.TPromise.join(promises).then(function () { return arrays_1.coalesce(values); });\r\n    }\r\n    exports.getExtraInfoAtPosition = getExtraInfoAtPosition;\r\n    editorCommonExtensions_1.CommonEditorRegistry.registerDefaultLanguageCommand('_executeHoverProvider', getExtraInfoAtPosition);\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/editor/contrib/parameterHints/common/parameterHints\", [\"require\", \"exports\", 'vs/base/common/winjs.base', 'vs/base/common/errors', 'vs/editor/common/modes/languageFeatureRegistry', 'vs/editor/common/editorCommonExtensions'], function (require, exports, winjs_base_1, errors_1, languageFeatureRegistry_1, editorCommonExtensions_1) {\r\n    exports.ParameterHintsRegistry = new languageFeatureRegistry_1.default('parameterHintsSupport');\r\n    function getParameterHints(model, position, triggerCharacter) {\r\n        var support = exports.ParameterHintsRegistry.ordered(model)[0];\r\n        if (!support) {\r\n            return winjs_base_1.TPromise.as(undefined);\r\n        }\r\n        return support.getParameterHints(model.getAssociatedResource(), position, triggerCharacter);\r\n    }\r\n    exports.getParameterHints = getParameterHints;\r\n    editorCommonExtensions_1.CommonEditorRegistry.registerDefaultLanguageCommand('_executeSignatureHelpProvider', function (model, position, args) {\r\n        var triggerCharacter = args.triggerCharacter;\r\n        if (triggerCharacter && typeof triggerCharacter !== 'string') {\r\n            throw errors_1.illegalArgument('triggerCharacter');\r\n        }\r\n        return getParameterHints(model, position, triggerCharacter);\r\n    });\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/editor/contrib/quickFix/common/quickFix\", [\"require\", \"exports\", 'vs/base/common/uri', 'vs/editor/common/core/range', 'vs/base/common/winjs.base', 'vs/base/common/errors', 'vs/editor/common/services/modelService', 'vs/editor/common/editorCommonExtensions', 'vs/editor/common/modes/languageFeatureRegistry'], function (require, exports, uri_1, range_1, winjs_base_1, errors_1, modelService_1, editorCommonExtensions_1, languageFeatureRegistry_1) {\r\n    exports.QuickFixRegistry = new languageFeatureRegistry_1.default('quickFixSupport');\r\n    function getQuickFixes(model, range) {\r\n        var quickFixes = [];\r\n        var promises = exports.QuickFixRegistry.all(model).map(function (support) {\r\n            return support.getQuickFixes(model.getAssociatedResource(), range).then(function (result) {\r\n                if (!Array.isArray(result)) {\r\n                    return;\r\n                }\r\n                var c = 0;\r\n                for (var _i = 0; _i < result.length; _i++) {\r\n                    var fix = result[_i];\r\n                    quickFixes.push({\r\n                        command: fix.command,\r\n                        score: fix.score,\r\n                        id: \"quickfix_#\" + c++,\r\n                        support: support\r\n                    });\r\n                }\r\n            }, function (err) {\r\n                errors_1.onUnexpectedError(err);\r\n            });\r\n        });\r\n        return winjs_base_1.TPromise.join(promises).then(function () { return quickFixes; });\r\n    }\r\n    exports.getQuickFixes = getQuickFixes;\r\n    editorCommonExtensions_1.CommonEditorRegistry.registerLanguageCommand('_executeCodeActionProvider', function (accessor, args) {\r\n        var resource = args.resource, range = args.range;\r\n        if (!uri_1.default.isURI(resource) || !range_1.Range.isIRange(range)) {\r\n            throw errors_1.illegalArgument();\r\n        }\r\n        var model = accessor.get(modelService_1.IModelService).getModel(resource);\r\n        if (!model) {\r\n            throw errors_1.illegalArgument();\r\n        }\r\n        return getQuickFixes(model, range);\r\n    });\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/editor/contrib/quickOpen/common/quickOpen\", [\"require\", \"exports\", 'vs/base/common/uri', 'vs/base/common/errors', 'vs/base/common/winjs.base', 'vs/editor/common/core/range', 'vs/editor/common/modes/languageFeatureRegistry', 'vs/editor/common/services/modelService', 'vs/editor/common/editorCommonExtensions'], function (require, exports, uri_1, errors_1, winjs_base_1, range_1, languageFeatureRegistry_1, modelService_1, editorCommonExtensions_1) {\r\n    var OutlineRegistry = new languageFeatureRegistry_1.default('outlineSupport');\r\n    exports.OutlineRegistry = OutlineRegistry;\r\n    function getOutlineEntries(model) {\r\n        var groupLabels = Object.create(null);\r\n        var entries = [];\r\n        var promises = OutlineRegistry.all(model).map(function (support) {\r\n            if (support.outlineGroupLabel) {\r\n                for (var key in support.outlineGroupLabel) {\r\n                    if (Object.prototype.hasOwnProperty.call(support.outlineGroupLabel, key)) {\r\n                        groupLabels[key] = support.outlineGroupLabel[key];\r\n                    }\r\n                }\r\n            }\r\n            return support.getOutline(model.getAssociatedResource()).then(function (result) {\r\n                if (Array.isArray(result)) {\r\n                    entries.push.apply(entries, result);\r\n                }\r\n            }, function (err) {\r\n                errors_1.onUnexpectedError(err);\r\n            });\r\n        });\r\n        return winjs_base_1.TPromise.join(promises).then(function () {\r\n            var flatEntries = [];\r\n            flatten(flatEntries, entries, '');\r\n            flatEntries.sort(compareEntriesUsingStart);\r\n            return {\r\n                entries: flatEntries,\r\n                outlineGroupLabel: groupLabels\r\n            };\r\n        });\r\n    }\r\n    exports.getOutlineEntries = getOutlineEntries;\r\n    function compareEntriesUsingStart(a, b) {\r\n        return range_1.Range.compareRangesUsingStarts(a.range, b.range);\r\n    }\r\n    function flatten(bucket, entries, overrideContainerLabel) {\r\n        for (var _i = 0; _i < entries.length; _i++) {\r\n            var entry = entries[_i];\r\n            bucket.push({\r\n                type: entry.type,\r\n                range: entry.range,\r\n                label: entry.label,\r\n                icon: entry.icon,\r\n                containerLabel: entry.containerLabel || overrideContainerLabel\r\n            });\r\n            if (entry.children) {\r\n                flatten(bucket, entry.children, entry.label);\r\n            }\r\n        }\r\n    }\r\n    editorCommonExtensions_1.CommonEditorRegistry.registerLanguageCommand('_executeDocumentSymbolProvider', function (accessor, args) {\r\n        var resource = args.resource;\r\n        if (!uri_1.default.isURI(resource)) {\r\n            throw errors_1.illegalArgument('resource');\r\n        }\r\n        var model = accessor.get(modelService_1.IModelService).getModel(resource);\r\n        if (!model) {\r\n            throw errors_1.illegalArgument('resource');\r\n        }\r\n        return getOutlineEntries(model);\r\n    });\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/editor/contrib/referenceSearch/common/referenceSearch\", [\"require\", \"exports\", 'vs/base/common/winjs.base', 'vs/base/common/errors', 'vs/editor/common/modes/languageFeatureRegistry', 'vs/editor/common/editorCommonExtensions'], function (require, exports, winjs_base_1, errors_1, languageFeatureRegistry_1, editorCommonExtensions_1) {\r\n    exports.ReferenceRegistry = new languageFeatureRegistry_1.default('referenceSupport');\r\n    function findReferences(model, position) {\r\n        // collect references from all providers\r\n        var promises = exports.ReferenceRegistry.ordered(model).map(function (provider) {\r\n            return provider.findReferences(model.getAssociatedResource(), position, true).then(function (result) {\r\n                if (Array.isArray(result)) {\r\n                    return result;\r\n                }\r\n            }, function (err) {\r\n                errors_1.onUnexpectedError(err);\r\n            });\r\n        });\r\n        return winjs_base_1.TPromise.join(promises).then(function (references) {\r\n            var result = [];\r\n            for (var _i = 0; _i < references.length; _i++) {\r\n                var ref = references[_i];\r\n                if (ref) {\r\n                    result.push.apply(result, ref);\r\n                }\r\n            }\r\n            return result;\r\n        });\r\n    }\r\n    exports.findReferences = findReferences;\r\n    editorCommonExtensions_1.CommonEditorRegistry.registerDefaultLanguageCommand('_executeReferenceProvider', findReferences);\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/editor/contrib/rename/common/rename\", [\"require\", \"exports\", 'vs/nls!vs/editor/contrib/rename/common/rename', 'vs/base/common/async', 'vs/base/common/errors', 'vs/editor/common/modes/languageFeatureRegistry', 'vs/editor/common/editorCommonExtensions'], function (require, exports, nls_1, async_1, errors_1, languageFeatureRegistry_1, editorCommonExtensions_1) {\r\n    exports.RenameRegistry = new languageFeatureRegistry_1.default('renameSupport');\r\n    function rename(model, position, newName) {\r\n        var supports = exports.RenameRegistry.ordered(model);\r\n        var resource = model.getAssociatedResource();\r\n        var rejects = [];\r\n        var hasResult = false;\r\n        var factory = supports.map(function (support) {\r\n            return function () {\r\n                if (!hasResult) {\r\n                    return support.rename(resource, position, newName).then(function (result) {\r\n                        if (!result) {\r\n                        }\r\n                        else if (!result.rejectReason) {\r\n                            hasResult = true;\r\n                            return result;\r\n                        }\r\n                        else {\r\n                            rejects.push(result.rejectReason);\r\n                        }\r\n                    });\r\n                }\r\n            };\r\n        });\r\n        return async_1.sequence(factory).then(function (values) {\r\n            var result = values[0];\r\n            if (rejects.length > 0) {\r\n                return {\r\n                    currentName: undefined,\r\n                    edits: undefined,\r\n                    rejectReason: rejects.join('\\n')\r\n                };\r\n            }\r\n            else if (!result) {\r\n                return {\r\n                    currentName: undefined,\r\n                    edits: undefined,\r\n                    rejectReason: nls_1.localize(0, null)\r\n                };\r\n            }\r\n            else {\r\n                return result;\r\n            }\r\n        });\r\n    }\r\n    exports.rename = rename;\r\n    editorCommonExtensions_1.CommonEditorRegistry.registerDefaultLanguageCommand('_executeDocumentRenameProvider', function (model, position, args) {\r\n        var newName = args.newName;\r\n        if (typeof newName !== 'string') {\r\n            throw errors_1.illegalArgument('newName');\r\n        }\r\n        return rename(model, position, newName);\r\n    });\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/editor/contrib/suggest/common/suggest\", [\"require\", \"exports\", 'vs/base/common/async', 'vs/base/common/winjs.base', 'vs/base/common/errors', 'vs/editor/common/modes/languageFeatureRegistry', 'vs/editor/common/editorCommonExtensions'], function (require, exports, async_1, winjs_base_1, errors_1, languageFeatureRegistry_1, editorCommonExtensions_1) {\r\n    exports.CONTEXT_SUGGEST_WIDGET_VISIBLE = 'suggestWidgetVisible';\r\n    exports.CONTEXT_SUGGESTION_SUPPORTS_ACCEPT_ON_KEY = 'suggestionSupportsAcceptOnKey';\r\n    exports.ACCEPT_SELECTED_SUGGESTION_CMD = 'acceptSelectedSuggestion';\r\n    exports.SuggestRegistry = new languageFeatureRegistry_1.default('suggestSupport');\r\n    function suggest(model, position, triggerCharacter, groups) {\r\n        if (!groups) {\r\n            groups = exports.SuggestRegistry.orderedGroups(model);\r\n        }\r\n        var resource = model.getAssociatedResource();\r\n        var suggestions = [];\r\n        var factory = groups.map(function (supports, index) {\r\n            return function () {\r\n                // stop as soon as a group produced a result\r\n                if (suggestions.length > 0) {\r\n                    return;\r\n                }\r\n                // for each support in the group ask for suggestions\r\n                var promises = supports.map(function (support) {\r\n                    return support.suggest(resource, position, triggerCharacter).then(function (values) {\r\n                        var result = [];\r\n                        for (var _i = 0; _i < values.length; _i++) {\r\n                            var suggestResult = values[_i];\r\n                            if (!suggestResult\r\n                                || !Array.isArray(suggestResult.suggestions)\r\n                                || suggestResult.suggestions.length === 0) {\r\n                                continue;\r\n                            }\r\n                            var suggestions2 = {\r\n                                support: support,\r\n                                currentWord: suggestResult.currentWord,\r\n                                incomplete: suggestResult.incomplete,\r\n                                suggestions: suggestResult.suggestions\r\n                            };\r\n                            result.push(suggestions2);\r\n                        }\r\n                        return result;\r\n                    }, errors_1.onUnexpectedError);\r\n                });\r\n                return winjs_base_1.TPromise.join(promises).then(function (values) {\r\n                    for (var _i = 0; _i < values.length; _i++) {\r\n                        var value = values[_i];\r\n                        if (Array.isArray(value) && value.length > 0) {\r\n                            suggestions.push(value);\r\n                        }\r\n                    }\r\n                });\r\n            };\r\n        });\r\n        return async_1.sequence(factory).then(function () { return suggestions; });\r\n    }\r\n    exports.suggest = suggest;\r\n    editorCommonExtensions_1.CommonEditorRegistry.registerDefaultLanguageCommand('_executeCompletionItemProvider', function (model, position, args) {\r\n        var triggerCharacter = args['triggerCharacter'];\r\n        if (typeof triggerCharacter !== 'undefined' && typeof triggerCharacter !== 'string') {\r\n            throw errors_1.illegalArgument('triggerCharacter');\r\n        }\r\n        return suggest(model, position, triggerCharacter);\r\n    });\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") return Reflect.decorate(decorators, target, key, desc);\r\n    switch (arguments.length) {\r\n        case 2: return decorators.reduceRight(function(o, d) { return (d && d(o)) || o; }, target);\r\n        case 3: return decorators.reduceRight(function(o, d) { return (d && d(target, key)), void 0; }, void 0);\r\n        case 4: return decorators.reduceRight(function(o, d) { return (d && d(target, key, o)) || o; }, desc);\r\n    }\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\ndefine(\"vs/editor/contrib/wordHighlighter/common/wordHighlighter\", [\"require\", \"exports\", 'vs/editor/common/editorCommon', 'vs/editor/common/editorCommonExtensions', 'vs/editor/common/core/range', 'vs/base/common/errors', 'vs/platform/instantiation/common/instantiation', 'vs/base/common/async', 'vs/editor/common/modes/languageFeatureRegistry'], function (require, exports, EditorCommon, editorCommonExtensions_1, range_1, errors_1, instantiation_1, async_1, languageFeatureRegistry_1) {\r\n    exports.OccurrencesRegistry = new languageFeatureRegistry_1.default('occurrencesSupport');\r\n    function getOccurrencesAtPosition(model, position) {\r\n        var resource = model.getAssociatedResource();\r\n        var orderedByScore = exports.OccurrencesRegistry.ordered(model);\r\n        var foundResult = false;\r\n        // in order of score ask the occurrences provider\r\n        // until someone response with a good result\r\n        // (good = none empty array)\r\n        return async_1.sequence(orderedByScore.map(function (provider) {\r\n            return function () {\r\n                if (!foundResult) {\r\n                    return provider.findOccurrences(resource, position).then(function (data) {\r\n                        if (Array.isArray(data) && data.length > 0) {\r\n                            foundResult = true;\r\n                            return data;\r\n                        }\r\n                    }, function (err) {\r\n                        errors_1.onUnexpectedError(err);\r\n                    });\r\n                }\r\n            };\r\n        })).then(function (values) {\r\n            return values[0];\r\n        });\r\n    }\r\n    exports.getOccurrencesAtPosition = getOccurrencesAtPosition;\r\n    editorCommonExtensions_1.CommonEditorRegistry.registerDefaultLanguageCommand('_executeDocumentHighlights', getOccurrencesAtPosition);\r\n    var WordHighlighter = (function () {\r\n        function WordHighlighter(editor) {\r\n            var _this = this;\r\n            this.workerRequestTokenId = 0;\r\n            this.workerRequest = null;\r\n            this.workerRequestCompleted = false;\r\n            this.workerRequestValue = [];\r\n            this.lastCursorPositionChangeTime = 0;\r\n            this.renderDecorationsTimer = -1;\r\n            this.editor = editor;\r\n            this.model = this.editor.getModel();\r\n            this.toUnhook = [];\r\n            this.toUnhook.push(editor.addListener(EditorCommon.EventType.CursorPositionChanged, function (e) {\r\n                _this._onPositionChanged(e);\r\n            }));\r\n            this.toUnhook.push(editor.addListener(EditorCommon.EventType.ModelChanged, function (e) {\r\n                _this._stopAll();\r\n                _this.model = _this.editor.getModel();\r\n            }));\r\n            this.toUnhook.push(editor.addListener('change', function (e) {\r\n                _this._stopAll();\r\n            }));\r\n            this._lastWordRange = null;\r\n            this._decorationIds = [];\r\n            this.workerRequestTokenId = 0;\r\n            this.workerRequest = null;\r\n            this.workerRequestCompleted = false;\r\n            this.lastCursorPositionChangeTime = 0;\r\n            this.renderDecorationsTimer = -1;\r\n        }\r\n        WordHighlighter.prototype._removeDecorations = function () {\r\n            if (this._decorationIds.length > 0) {\r\n                // remove decorations\r\n                this._decorationIds = this.editor.deltaDecorations(this._decorationIds, []);\r\n            }\r\n        };\r\n        WordHighlighter.prototype._stopAll = function () {\r\n            this._lastWordRange = null;\r\n            // Remove any existing decorations\r\n            this._removeDecorations();\r\n            // Cancel any renderDecorationsTimer\r\n            if (this.renderDecorationsTimer !== -1) {\r\n                window.clearTimeout(this.renderDecorationsTimer);\r\n                this.renderDecorationsTimer = -1;\r\n            }\r\n            // Cancel any worker request\r\n            if (this.workerRequest !== null) {\r\n                this.workerRequest.cancel();\r\n                this.workerRequest = null;\r\n            }\r\n            // Invalidate any worker request callback\r\n            if (!this.workerRequestCompleted) {\r\n                this.workerRequestTokenId++;\r\n                this.workerRequestCompleted = true;\r\n            }\r\n        };\r\n        WordHighlighter.prototype._onPositionChanged = function (e) {\r\n            var _this = this;\r\n            // ignore typing & other\r\n            if (e.reason !== 'explicit') {\r\n                this._stopAll();\r\n                return;\r\n            }\r\n            // no providers for this model\r\n            if (!exports.OccurrencesRegistry.has(this.model)) {\r\n                this._stopAll();\r\n                return;\r\n            }\r\n            var editorSelection = this.editor.getSelection();\r\n            // ignore multiline selection\r\n            if (editorSelection.startLineNumber !== editorSelection.endLineNumber) {\r\n                this._stopAll();\r\n                return;\r\n            }\r\n            var lineNumber = editorSelection.startLineNumber;\r\n            var startColumn = editorSelection.startColumn;\r\n            var endColumn = editorSelection.endColumn;\r\n            var word = this.model.getWordAtPosition({\r\n                lineNumber: lineNumber,\r\n                column: startColumn\r\n            });\r\n            // The selection must be inside a word or surround one word at most\r\n            if (!word || word.startColumn > startColumn || word.endColumn < endColumn) {\r\n                this._stopAll();\r\n                return;\r\n            }\r\n            // All the effort below is trying to achieve this:\r\n            // - when cursor is moved to a word, trigger immediately a findOccurences request\r\n            // - 250ms later after the last cursor move event, render the occurences\r\n            // - no flickering!\r\n            var currentWordRange = new range_1.Range(lineNumber, word.startColumn, lineNumber, word.endColumn);\r\n            var workerRequestIsValid = this._lastWordRange && this._lastWordRange.equalsRange(currentWordRange);\r\n            // Even if we are on a different word, if that word is in the decorations ranges, the request is still valid\r\n            // (Same symbol)\r\n            for (var i = 0, len = this._decorationIds.length; !workerRequestIsValid && i < len; i++) {\r\n                var range = this.model.getDecorationRange(this._decorationIds[i]);\r\n                if (range && range.startLineNumber === lineNumber) {\r\n                    if (range.startColumn <= startColumn && range.endColumn >= endColumn) {\r\n                        workerRequestIsValid = true;\r\n                    }\r\n                }\r\n            }\r\n            // There are 4 cases:\r\n            // a) old workerRequest is valid & completed, renderDecorationsTimer fired\r\n            // b) old workerRequest is valid & completed, renderDecorationsTimer not fired\r\n            // c) old workerRequest is valid, but not completed\r\n            // d) old workerRequest is not valid\r\n            // For a) no action is needed\r\n            // For c), member 'lastCursorPositionChangeTime' will be used when installing the timer so no action is needed\r\n            this.lastCursorPositionChangeTime = (new Date()).getTime();\r\n            if (workerRequestIsValid) {\r\n                if (this.workerRequestCompleted && this.renderDecorationsTimer !== -1) {\r\n                    // case b)\r\n                    // Delay the firing of renderDecorationsTimer by an extra 250 ms\r\n                    window.clearTimeout(this.renderDecorationsTimer);\r\n                    this.renderDecorationsTimer = -1;\r\n                    this._beginRenderDecorations();\r\n                }\r\n            }\r\n            else {\r\n                // case d)\r\n                // Stop all previous actions and start fresh\r\n                this._stopAll();\r\n                var myRequestId = ++this.workerRequestTokenId;\r\n                this.workerRequestCompleted = false;\r\n                this.workerRequest = getOccurrencesAtPosition(this.model, this.editor.getPosition());\r\n                this.workerRequest.then(function (data) {\r\n                    if (myRequestId === _this.workerRequestTokenId) {\r\n                        _this.workerRequestCompleted = true;\r\n                        _this.workerRequestValue = data || [];\r\n                        _this._beginRenderDecorations();\r\n                    }\r\n                }).done();\r\n            }\r\n            this._lastWordRange = currentWordRange;\r\n        };\r\n        WordHighlighter.prototype._beginRenderDecorations = function () {\r\n            var _this = this;\r\n            var currentTime = (new Date()).getTime();\r\n            var minimumRenderTime = this.lastCursorPositionChangeTime + 250;\r\n            if (currentTime >= minimumRenderTime) {\r\n                // Synchronous\r\n                this.renderDecorationsTimer = -1;\r\n                this.renderDecorations();\r\n            }\r\n            else {\r\n                // Asyncrhonous\r\n                this.renderDecorationsTimer = window.setTimeout(function () {\r\n                    _this.renderDecorations();\r\n                }, (minimumRenderTime - currentTime));\r\n            }\r\n        };\r\n        WordHighlighter.prototype.renderDecorations = function () {\r\n            this.renderDecorationsTimer = -1;\r\n            var decorations = [];\r\n            for (var i = 0, len = this.workerRequestValue.length; i < len; i++) {\r\n                var info = this.workerRequestValue[i];\r\n                var className = 'wordHighlight';\r\n                var color = '#A0A0A0';\r\n                if (info.kind === 'write') {\r\n                    className = className + 'Strong';\r\n                }\r\n                else if (info.kind === 'text') {\r\n                    className = 'selectionHighlight';\r\n                }\r\n                decorations.push({\r\n                    range: info.range,\r\n                    options: {\r\n                        stickiness: EditorCommon.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\r\n                        className: className,\r\n                        overviewRuler: {\r\n                            color: color,\r\n                            darkColor: color,\r\n                            position: EditorCommon.OverviewRulerLane.Center\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            this._decorationIds = this.editor.deltaDecorations(this._decorationIds, decorations);\r\n        };\r\n        WordHighlighter.prototype.destroy = function () {\r\n            this._stopAll();\r\n            while (this.toUnhook.length > 0) {\r\n                this.toUnhook.pop()();\r\n            }\r\n        };\r\n        return WordHighlighter;\r\n    })();\r\n    var WordHighlighterContribution = (function () {\r\n        function WordHighlighterContribution(editor, ns) {\r\n            this.wordHighligher = new WordHighlighter(editor);\r\n        }\r\n        WordHighlighterContribution.prototype.getId = function () {\r\n            return WordHighlighterContribution.ID;\r\n        };\r\n        WordHighlighterContribution.prototype.dispose = function () {\r\n            this.wordHighligher.destroy();\r\n        };\r\n        WordHighlighterContribution.ID = 'editor.contrib.wordHighlighter';\r\n        WordHighlighterContribution = __decorate([\r\n            __param(1, instantiation_1.INullService)\r\n        ], WordHighlighterContribution);\r\n        return WordHighlighterContribution;\r\n    })();\r\n    editorCommonExtensions_1.CommonEditorRegistry.registerEditorContribution(WordHighlighterContribution);\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/platform/telemetry/common/abstractTelemetryService\", [\"require\", \"exports\", 'vs/base/common/errors', 'vs/base/common/types', 'vs/base/common/platform', 'vs/base/common/timer', 'vs/base/common/objects', 'vs/platform/platform', 'vs/platform/telemetry/common/telemetry'], function (require, exports, Errors, Types, Platform, timer_1, objects_1, platform_1, telemetry_1) {\r\n    /**\r\n     * Base class for main process telemetry services\r\n     */\r\n    var AbstractTelemetryService = (function () {\r\n        function AbstractTelemetryService() {\r\n            var _this = this;\r\n            this.serviceId = telemetry_1.ITelemetryService;\r\n            this.sessionId = 'SESSION_ID_NOT_SET';\r\n            this.timeKeeper = new timer_1.TimeKeeper();\r\n            this.toUnbind = [];\r\n            this.appenders = [];\r\n            this.timeKeeperListener = function (events) { return _this.onTelemetryTimerEventStop(events); };\r\n            this.timeKeeper.addListener(this.timeKeeperListener);\r\n            this.toUnbind.push(Errors.errorHandler.addListener(this.onErrorEvent.bind(this)));\r\n            this.errorBuffer = Object.create(null);\r\n            this.enableGlobalErrorHandler();\r\n            this.errorFlushTimeout = -1;\r\n        }\r\n        AbstractTelemetryService.prototype._safeStringify = function (data) {\r\n            return objects_1.safeStringify(data);\r\n        };\r\n        AbstractTelemetryService.prototype.onTelemetryTimerEventStop = function (events) {\r\n            for (var i = 0; i < events.length; i++) {\r\n                var event = events[i];\r\n                var data = event.data || {};\r\n                data.duration = event.timeTaken();\r\n                this.publicLog(event.name, data);\r\n            }\r\n        };\r\n        AbstractTelemetryService.prototype.onErrorEvent = function (e) {\r\n            var error = Object.create(null);\r\n            // unwrap nested errors from loader\r\n            if (e.detail && e.detail.stack) {\r\n                e = e.detail;\r\n            }\r\n            // work around behavior in workerServer.ts that breaks up Error.stack\r\n            var stack = Array.isArray(e.stack) ? e.stack.join('\\n') : e.stack;\r\n            var message = e.message ? e.message : this._safeStringify(e);\r\n            // errors without a stack are not useful telemetry\r\n            if (!stack) {\r\n                return;\r\n            }\r\n            error['message'] = this.cleanupInfo(message);\r\n            error['stack'] = this.cleanupInfo(stack);\r\n            this.addErrortoBuffer(error);\r\n        };\r\n        AbstractTelemetryService.prototype.addErrortoBuffer = function (e) {\r\n            if (this.errorBuffer[e.stack]) {\r\n                this.errorBuffer[e.stack].count++;\r\n            }\r\n            else {\r\n                e.count = 1;\r\n                this.errorBuffer[e.stack] = e;\r\n            }\r\n            this.tryScheduleErrorFlush();\r\n        };\r\n        AbstractTelemetryService.prototype.tryScheduleErrorFlush = function () {\r\n            var _this = this;\r\n            if (this.errorFlushTimeout === -1) {\r\n                this.errorFlushTimeout = setTimeout(function () { return _this.flushErrorBuffer(); }, AbstractTelemetryService.ERROR_FLUSH_TIMEOUT);\r\n            }\r\n        };\r\n        AbstractTelemetryService.prototype.flushErrorBuffer = function () {\r\n            if (this.errorBuffer) {\r\n                for (var stack in this.errorBuffer) {\r\n                    this.publicLog('UnhandledError', this.errorBuffer[stack]);\r\n                }\r\n            }\r\n            this.errorBuffer = Object.create(null);\r\n            this.errorFlushTimeout = -1;\r\n        };\r\n        AbstractTelemetryService.prototype.cleanupInfo = function (stack) {\r\n            // `file:///DANGEROUS/PATH/resources/app/Useful/Information`\r\n            var reg = /file:\\/\\/\\/.*?\\/resources\\/app\\//gi;\r\n            stack = stack.replace(reg, '');\r\n            // Any other file path that doesn't match the approved form above should be cleaned.\r\n            reg = /file:\\/\\/\\/.*/gi;\r\n            stack = stack.replace(reg, '');\r\n            // \"Error: ENOENT; no such file or directory\" is often followed with PII, clean it\r\n            reg = /ENOENT: no such file or directory.*?\\'([^\\']+)\\'/gi;\r\n            stack = stack.replace(reg, 'ENOENT: no such file or directory');\r\n            return stack;\r\n        };\r\n        AbstractTelemetryService.prototype.enableGlobalErrorHandler = function () {\r\n            if (Types.isFunction(Platform.globals.onerror)) {\r\n                this.oldOnError = Platform.globals.onerror;\r\n            }\r\n            var that = this;\r\n            var newHandler = function (message, filename, line, column, e) {\r\n                that.onUncaughtError(message, filename, line, column, e);\r\n                if (that.oldOnError) {\r\n                    that.oldOnError.apply(this, arguments);\r\n                }\r\n            };\r\n            Platform.globals.onerror = newHandler;\r\n        };\r\n        AbstractTelemetryService.prototype.onUncaughtError = function (message, filename, line, column, e) {\r\n            filename = this.cleanupInfo(filename);\r\n            message = this.cleanupInfo(message);\r\n            var data = {\r\n                message: message,\r\n                filename: filename,\r\n                line: line,\r\n                column: column\r\n            };\r\n            if (e) {\r\n                data.error = {\r\n                    name: e.name,\r\n                    message: e.message\r\n                };\r\n                if (e.stack) {\r\n                    if (Array.isArray(e.stack)) {\r\n                        e.stack = e.stack.join('\\n');\r\n                    }\r\n                    data.stack = this.cleanupInfo(e.stack);\r\n                }\r\n            }\r\n            if (!data.stack) {\r\n                data.stack = data.message;\r\n            }\r\n            this.addErrortoBuffer(data);\r\n        };\r\n        AbstractTelemetryService.prototype.loadTelemetryAppendersFromRegistery = function () {\r\n            var appendersRegistry = platform_1.Registry.as(exports.Extenstions.TelemetryAppenders).getTelemetryAppenderDescriptors();\r\n            for (var i = 0; i < appendersRegistry.length; i++) {\r\n                var descriptor = appendersRegistry[i];\r\n                var appender = this.instantiationService.createInstance(descriptor);\r\n                this.addTelemetryAppender(appender);\r\n            }\r\n        };\r\n        AbstractTelemetryService.prototype.getSessionId = function () {\r\n            return this.sessionId;\r\n        };\r\n        AbstractTelemetryService.prototype.getMachineId = function () {\r\n            return this.machineId;\r\n        };\r\n        AbstractTelemetryService.prototype.getInstanceId = function () {\r\n            return this.instanceId;\r\n        };\r\n        AbstractTelemetryService.prototype.getTelemetryInfo = function () {\r\n            return Promise.resolve({\r\n                instanceId: this.instanceId,\r\n                sessionId: this.sessionId,\r\n                machineId: this.machineId\r\n            });\r\n        };\r\n        AbstractTelemetryService.prototype.dispose = function () {\r\n            if (this.errorFlushTimeout !== -1) {\r\n                clearTimeout(this.errorFlushTimeout);\r\n                this.flushErrorBuffer();\r\n            }\r\n            while (this.toUnbind.length) {\r\n                this.toUnbind.pop()();\r\n            }\r\n            this.timeKeeper.removeListener(this.timeKeeperListener);\r\n            this.timeKeeper.dispose();\r\n            for (var i = 0; i < this.appenders.length; i++) {\r\n                this.appenders[i].dispose();\r\n            }\r\n        };\r\n        AbstractTelemetryService.prototype.start = function (name, data) {\r\n            var topic = 'public';\r\n            var event = this.timeKeeper.start(topic, name);\r\n            if (data) {\r\n                event.data = data;\r\n            }\r\n            return event;\r\n        };\r\n        AbstractTelemetryService.prototype.publicLog = function (eventName, data) {\r\n            this.handleEvent(eventName, data);\r\n        };\r\n        AbstractTelemetryService.prototype.getAppendersCount = function () {\r\n            return this.appenders.length;\r\n        };\r\n        AbstractTelemetryService.prototype.getAppenders = function () {\r\n            return this.appenders;\r\n        };\r\n        AbstractTelemetryService.prototype.addTelemetryAppender = function (appender) {\r\n            this.appenders.push(appender);\r\n        };\r\n        AbstractTelemetryService.prototype.removeTelemetryAppender = function (appender) {\r\n            var index = this.appenders.indexOf(appender);\r\n            if (index > -1) {\r\n                this.appenders.splice(index, 1);\r\n            }\r\n        };\r\n        AbstractTelemetryService.prototype.setInstantiationService = function (instantiationService) {\r\n            this.instantiationService = instantiationService;\r\n            if (this.instantiationService) {\r\n                this.loadTelemetryAppendersFromRegistery();\r\n            }\r\n        };\r\n        AbstractTelemetryService.prototype.handleEvent = function (eventName, data) {\r\n            throw new Error('Not implemented!');\r\n        };\r\n        AbstractTelemetryService.ERROR_FLUSH_TIMEOUT = 5 * 1000;\r\n        return AbstractTelemetryService;\r\n    })();\r\n    exports.AbstractTelemetryService = AbstractTelemetryService;\r\n    exports.Extenstions = {\r\n        TelemetryAppenders: 'telemetry.appenders'\r\n    };\r\n    var TelemetryAppendersRegistry = (function () {\r\n        function TelemetryAppendersRegistry() {\r\n            this.telemetryAppenderDescriptors = [];\r\n        }\r\n        TelemetryAppendersRegistry.prototype.registerTelemetryAppenderDescriptor = function (descriptor) {\r\n            this.telemetryAppenderDescriptors.push(descriptor);\r\n        };\r\n        TelemetryAppendersRegistry.prototype.getTelemetryAppenderDescriptors = function () {\r\n            return this.telemetryAppenderDescriptors;\r\n        };\r\n        return TelemetryAppendersRegistry;\r\n    })();\r\n    platform_1.Registry.add(exports.Extenstions.TelemetryAppenders, new TelemetryAppendersRegistry());\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/platform/thread/common/thread\", [\"require\", \"exports\", 'vs/platform/instantiation/common/instantiation'], function (require, exports, instantiation) {\r\n    // --- thread service (web workers)\r\n    exports.IThreadService = instantiation.createDecorator('threadService');\r\n    var IRemotableCtorMap = (function () {\r\n        function IRemotableCtorMap() {\r\n        }\r\n        return IRemotableCtorMap;\r\n    })();\r\n    exports.IRemotableCtorMap = IRemotableCtorMap;\r\n    var IRemotableCtorAffinityMap = (function () {\r\n        function IRemotableCtorAffinityMap() {\r\n        }\r\n        return IRemotableCtorAffinityMap;\r\n    })();\r\n    exports.IRemotableCtorAffinityMap = IRemotableCtorAffinityMap;\r\n    var Remotable = (function () {\r\n        function Remotable() {\r\n        }\r\n        Remotable.getId = function (ctor) {\r\n            return (ctor[Remotable.PROP_NAME] || null);\r\n        };\r\n        Remotable.MainContext = function (identifier) {\r\n            return function (target) {\r\n                Remotable._ensureUnique(identifier);\r\n                Remotable.Registry.MainContext[identifier] = target;\r\n                target[Remotable.PROP_NAME] = identifier;\r\n            };\r\n        };\r\n        Remotable.PluginHostContext = function (identifier) {\r\n            return function (target) {\r\n                Remotable._ensureUnique(identifier);\r\n                Remotable.Registry.PluginHostContext[identifier] = target;\r\n                target[Remotable.PROP_NAME] = identifier;\r\n            };\r\n        };\r\n        Remotable.WorkerContext = function (identifier, whichWorker) {\r\n            return function (target) {\r\n                Remotable._ensureUnique(identifier);\r\n                Remotable.Registry.WorkerContext[identifier] = {\r\n                    ctor: target,\r\n                    affinity: whichWorker\r\n                };\r\n                target[Remotable.PROP_NAME] = identifier;\r\n            };\r\n        };\r\n        Remotable._ensureUnique = function (identifier) {\r\n            if (Remotable.Registry.MainContext[identifier] || Remotable.Registry.PluginHostContext[identifier] || Remotable.Registry.WorkerContext[identifier]) {\r\n                throw new Error('Duplicate Remotable identifier found');\r\n            }\r\n        };\r\n        Remotable.PROP_NAME = '$__REMOTABLE_ID';\r\n        Remotable.Registry = {\r\n            MainContext: Object.create(null),\r\n            PluginHostContext: Object.create(null),\r\n            WorkerContext: Object.create(null),\r\n        };\r\n        return Remotable;\r\n    })();\r\n    exports.Remotable = Remotable;\r\n    (function (ThreadAffinity) {\r\n        ThreadAffinity[ThreadAffinity[\"None\"] = 0] = \"None\";\r\n        ThreadAffinity[ThreadAffinity[\"Group1\"] = 1] = \"Group1\";\r\n        ThreadAffinity[ThreadAffinity[\"Group2\"] = 2] = \"Group2\";\r\n        ThreadAffinity[ThreadAffinity[\"Group3\"] = 3] = \"Group3\";\r\n        ThreadAffinity[ThreadAffinity[\"Group4\"] = 4] = \"Group4\";\r\n        ThreadAffinity[ThreadAffinity[\"Group5\"] = 5] = \"Group5\";\r\n        ThreadAffinity[ThreadAffinity[\"Group6\"] = 6] = \"Group6\";\r\n        ThreadAffinity[ThreadAffinity[\"Group7\"] = 7] = \"Group7\";\r\n        ThreadAffinity[ThreadAffinity[\"Group8\"] = 8] = \"Group8\";\r\n        ThreadAffinity[ThreadAffinity[\"Group9\"] = 9] = \"Group9\";\r\n        ThreadAffinity[ThreadAffinity[\"All\"] = 10] = \"All\";\r\n    })(exports.ThreadAffinity || (exports.ThreadAffinity = {}));\r\n    var ThreadAffinity = exports.ThreadAffinity;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") return Reflect.decorate(decorators, target, key, desc);\r\n    switch (arguments.length) {\r\n        case 2: return decorators.reduceRight(function(o, d) { return (d && d(o)) || o; }, target);\r\n        case 3: return decorators.reduceRight(function(o, d) { return (d && d(target, key)), void 0; }, void 0);\r\n        case 4: return decorators.reduceRight(function(o, d) { return (d && d(target, key, o)) || o; }, desc);\r\n    }\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\ndefine(\"vs/platform/storage/common/remotable.storage\", [\"require\", \"exports\", 'vs/base/common/winjs.base', 'vs/platform/thread/common/thread', 'vs/platform/storage/common/storage'], function (require, exports, winjs_base_1, thread_1, storage_1) {\r\n    var MainThreadStorage = (function () {\r\n        function MainThreadStorage(storageService) {\r\n            this._storageService = storageService;\r\n        }\r\n        MainThreadStorage.prototype.getValue = function (shared, key) {\r\n            var jsonValue = this._storageService.get(key, shared ? storage_1.StorageScope.GLOBAL : storage_1.StorageScope.WORKSPACE);\r\n            if (!jsonValue) {\r\n                return winjs_base_1.TPromise.as(undefined);\r\n            }\r\n            var value;\r\n            try {\r\n                value = JSON.parse(jsonValue);\r\n                return winjs_base_1.TPromise.as(value);\r\n            }\r\n            catch (err) {\r\n                return winjs_base_1.TPromise.wrapError(err);\r\n            }\r\n        };\r\n        MainThreadStorage.prototype.setValue = function (shared, key, value) {\r\n            var jsonValue;\r\n            try {\r\n                jsonValue = JSON.stringify(value);\r\n                this._storageService.store(key, jsonValue, shared ? storage_1.StorageScope.GLOBAL : storage_1.StorageScope.WORKSPACE);\r\n            }\r\n            catch (err) {\r\n                return winjs_base_1.TPromise.wrapError(err);\r\n            }\r\n        };\r\n        MainThreadStorage = __decorate([\r\n            thread_1.Remotable.MainContext('MainThreadStorage'),\r\n            __param(0, storage_1.IStorageService)\r\n        ], MainThreadStorage);\r\n        return MainThreadStorage;\r\n    })();\r\n    exports.MainThreadStorage = MainThreadStorage;\r\n    var PluginHostStorage = (function () {\r\n        function PluginHostStorage(threadService) {\r\n            this._proxy = threadService.getRemotable(MainThreadStorage);\r\n        }\r\n        PluginHostStorage.prototype.getValue = function (shared, key, defaultValue) {\r\n            return this._proxy.getValue(shared, key).then(function (value) { return value || defaultValue; });\r\n        };\r\n        PluginHostStorage.prototype.setValue = function (shared, key, value) {\r\n            return this._proxy.setValue(shared, key, value);\r\n        };\r\n        return PluginHostStorage;\r\n    })();\r\n    exports.PluginHostStorage = PluginHostStorage;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") return Reflect.decorate(decorators, target, key, desc);\r\n    switch (arguments.length) {\r\n        case 2: return decorators.reduceRight(function(o, d) { return (d && d(o)) || o; }, target);\r\n        case 3: return decorators.reduceRight(function(o, d) { return (d && d(target, key)), void 0; }, void 0);\r\n        case 4: return decorators.reduceRight(function(o, d) { return (d && d(target, key, o)) || o; }, desc);\r\n    }\r\n};\r\ndefine(\"vs/platform/plugins/common/nativePluginService\", [\"require\", \"exports\", 'vs/platform/plugins/common/pluginsRegistry', 'vs/base/common/winjs.base', 'vs/platform/thread/common/thread', 'vs/platform/plugins/common/abstractPluginService', 'vs/base/common/severity', 'vs/platform/storage/common/remotable.storage', 'vs/base/common/paths', 'vs/base/common/lifecycle'], function (require, exports, pluginsRegistry_1, WinJS, thread_1, abstractPluginService_1, severity_1, remotable_storage_1, paths, lifecycle_1) {\r\n    var PluginMemento = (function () {\r\n        function PluginMemento(id, global, storage) {\r\n            var _this = this;\r\n            this._id = id;\r\n            this._shared = global;\r\n            this._storage = storage;\r\n            this._init = this._storage.getValue(this._shared, this._id, Object.create(null)).then(function (value) {\r\n                _this._value = value;\r\n                return _this;\r\n            });\r\n        }\r\n        Object.defineProperty(PluginMemento.prototype, \"whenReady\", {\r\n            get: function () {\r\n                return this._init;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        PluginMemento.prototype.get = function (key, defaultValue) {\r\n            var value = this._value[key];\r\n            if (typeof value === 'undefined') {\r\n                value = defaultValue;\r\n            }\r\n            return value;\r\n        };\r\n        PluginMemento.prototype.update = function (key, value) {\r\n            this._value[key] = value;\r\n            return this._storage\r\n                .setValue(this._shared, this._id, this._value)\r\n                .then(function () { return true; });\r\n        };\r\n        return PluginMemento;\r\n    })();\r\n    var MainProcessPluginService = (function (_super) {\r\n        __extends(MainProcessPluginService, _super);\r\n        /**\r\n         * This class is constructed manually because it is a service, so it doesn't use any ctor injection\r\n         */\r\n        function MainProcessPluginService(contextService, threadService, messageService, telemetryService) {\r\n            var _this = this;\r\n            var config = contextService.getConfiguration();\r\n            this._isDev = !config.env.isBuilt || !!config.env.pluginDevelopmentPath;\r\n            this._messageService = messageService;\r\n            threadService.registerRemotableInstance(MainProcessPluginService, this);\r\n            _super.call(this, false);\r\n            this._threadService = threadService;\r\n            this._telemetryService = telemetryService;\r\n            this._proxy = this._threadService.getRemotable(PluginHostPluginService);\r\n            this._pluginsStatus = {};\r\n            pluginsRegistry_1.PluginsRegistry.handleExtensionPoints(function (severity, source, message) {\r\n                _this.showMessage(severity, source, message);\r\n            });\r\n        }\r\n        MainProcessPluginService.prototype.getTelemetryActivationEvent = function (pluginDescription) {\r\n            var event = {\r\n                id: pluginDescription.id,\r\n                name: pluginDescription.name,\r\n                publisherDisplayName: pluginDescription.publisher,\r\n                activationEvents: pluginDescription.activationEvents ? pluginDescription.activationEvents.join(',') : null\r\n            };\r\n            for (var contribution in pluginDescription.contributes) {\r\n                var contributionDetails = pluginDescription.contributes[contribution];\r\n                if (!contributionDetails) {\r\n                    continue;\r\n                }\r\n                switch (contribution) {\r\n                    case 'debuggers':\r\n                        var types = contributionDetails.reduce(function (p, c) { return p ? p + ',' + c['type'] : c['type']; }, '');\r\n                        event['contribution.debuggers'] = types;\r\n                        break;\r\n                    case 'grammars':\r\n                        var grammers = contributionDetails.reduce(function (p, c) { return p ? p + ',' + c['language'] : c['language']; }, '');\r\n                        event['contribution.grammars'] = grammers;\r\n                        break;\r\n                    case 'languages':\r\n                        var languages = contributionDetails.reduce(function (p, c) { return p ? p + ',' + c['id'] : c['id']; }, '');\r\n                        event['contribution.languages'] = languages;\r\n                        break;\r\n                    case 'tmSnippets':\r\n                        var tmSnippets = contributionDetails.reduce(function (p, c) { return p ? p + ',' + c['languageId'] : c['languageId']; }, '');\r\n                        event['contribution.tmSnippets'] = tmSnippets;\r\n                        break;\r\n                    default:\r\n                        event[(\"contribution.\" + contribution)] = true;\r\n                }\r\n            }\r\n            return event;\r\n        };\r\n        MainProcessPluginService.prototype._showMessage = function (severity, msg) {\r\n            this._proxy.$doShowMessage(severity, msg);\r\n            this.$doShowMessage(severity, msg);\r\n        };\r\n        MainProcessPluginService.prototype.showMessage = function (severity, source, message) {\r\n            _super.prototype.showMessage.call(this, severity, source, message);\r\n            if (!this._pluginsStatus[source]) {\r\n                this._pluginsStatus[source] = { messages: [] };\r\n            }\r\n            this._pluginsStatus[source].messages.push({ type: severity, source: source, message: message });\r\n        };\r\n        MainProcessPluginService.prototype.$doShowMessage = function (severity, msg) {\r\n            var messageShown = false;\r\n            if (severity === severity_1.default.Error || severity === severity_1.default.Warning) {\r\n                if (this._isDev) {\r\n                    // Only show nasty intrusive messages if doing extension development.\r\n                    this._messageService.show(severity, msg);\r\n                    messageShown = true;\r\n                }\r\n            }\r\n            if (!messageShown) {\r\n                switch (severity) {\r\n                    case severity_1.default.Error:\r\n                        console.error(msg);\r\n                        break;\r\n                    case severity_1.default.Warning:\r\n                        console.warn(msg);\r\n                        break;\r\n                    default:\r\n                        console.log(msg);\r\n                }\r\n            }\r\n        };\r\n        MainProcessPluginService.prototype.getPluginsStatus = function () {\r\n            return this._pluginsStatus;\r\n        };\r\n        MainProcessPluginService.prototype.deactivate = function (pluginId) {\r\n            this._proxy.deactivate(pluginId);\r\n        };\r\n        // -- overwriting AbstractPluginService\r\n        MainProcessPluginService.prototype._actualActivatePlugin = function (pluginDescription) {\r\n            var _this = this;\r\n            var event = this.getTelemetryActivationEvent(pluginDescription);\r\n            this._telemetryService.publicLog('activatePlugin', event);\r\n            // redirect plugin activation to the plugin host\r\n            return this._proxy.$activatePluginInPluginHost(pluginDescription).then(function (_) {\r\n                // the plugin host calls $onPluginActivatedInPluginHost, where we write to `activatedPlugins`\r\n                return _this.activatedPlugins[pluginDescription.id];\r\n            });\r\n        };\r\n        // -- called by plugin host\r\n        MainProcessPluginService.prototype.$onPluginHostReady = function (pluginDescriptions, messages) {\r\n            pluginsRegistry_1.PluginsRegistry.registerPlugins(pluginDescriptions);\r\n            this.registrationDone(messages);\r\n        };\r\n        MainProcessPluginService.prototype.$onPluginActivatedInPluginHost = function (pluginId, pluginExports) {\r\n            this.activatedPlugins[pluginId] = new abstractPluginService_1.ActivatedPlugin(false, { activate: undefined, deactivate: undefined }, pluginExports, []);\r\n        };\r\n        MainProcessPluginService.prototype.$onPluginActivationFailedInPluginHost = function (pluginId, err) {\r\n            this.activatedPlugins[pluginId] = new abstractPluginService_1.ActivatedPlugin(true, { activate: undefined, deactivate: undefined }, {}, []);\r\n        };\r\n        MainProcessPluginService = __decorate([\r\n            thread_1.Remotable.MainContext('MainProcessPluginService')\r\n        ], MainProcessPluginService);\r\n        return MainProcessPluginService;\r\n    })(abstractPluginService_1.AbstractPluginService);\r\n    exports.MainProcessPluginService = MainProcessPluginService;\r\n    var PluginHostPluginService = (function (_super) {\r\n        __extends(PluginHostPluginService, _super);\r\n        /**\r\n         * This class is constructed manually because it is a service, so it doesn't use any ctor injection\r\n         */\r\n        function PluginHostPluginService(threadService) {\r\n            threadService.registerRemotableInstance(PluginHostPluginService, this);\r\n            _super.call(this, true);\r\n            this._threadService = threadService;\r\n            this._storage = new remotable_storage_1.PluginHostStorage(threadService);\r\n            this._proxy = this._threadService.getRemotable(MainProcessPluginService);\r\n        }\r\n        PluginHostPluginService.prototype._showMessage = function (severity, msg) {\r\n            this._proxy.$doShowMessage(severity, msg);\r\n            this.$doShowMessage(severity, msg);\r\n        };\r\n        PluginHostPluginService.prototype.$doShowMessage = function (severity, msg) {\r\n            switch (severity) {\r\n                case severity_1.default.Error:\r\n                    console.error(msg);\r\n                    break;\r\n                case severity_1.default.Warning:\r\n                    console.warn(msg);\r\n                    break;\r\n                default:\r\n                    console.log(msg);\r\n            }\r\n        };\r\n        PluginHostPluginService.prototype.deactivate = function (pluginId) {\r\n            var plugin = this.activatedPlugins[pluginId];\r\n            if (!plugin) {\r\n                return;\r\n            }\r\n            // call deactivate if available\r\n            try {\r\n                if (typeof plugin.module.deactivate === 'function') {\r\n                    plugin.module.deactivate();\r\n                }\r\n            }\r\n            catch (err) {\r\n            }\r\n            // clean up subscriptions\r\n            try {\r\n                lifecycle_1.disposeAll(plugin.subscriptions);\r\n            }\r\n            catch (err) {\r\n            }\r\n        };\r\n        // -- overwriting AbstractPluginService\r\n        PluginHostPluginService.prototype.registrationDone = function (messages) {\r\n            _super.prototype.registrationDone.call(this, []);\r\n            this._proxy.$onPluginHostReady(pluginsRegistry_1.PluginsRegistry.getAllPluginDescriptions(), messages);\r\n        };\r\n        PluginHostPluginService.prototype._loadPluginModule = function (pluginDescription) {\r\n            if (pluginDescription.isAMD) {\r\n                return abstractPluginService_1.loadAMDModule(uriFromPath(pluginDescription.main));\r\n            }\r\n            return loadCommonJSModule(pluginDescription.main);\r\n        };\r\n        PluginHostPluginService.prototype._loadPluginContext = function (pluginDescription) {\r\n            var globalState = new PluginMemento(pluginDescription.id, true, this._storage);\r\n            var workspaceState = new PluginMemento(pluginDescription.id, false, this._storage);\r\n            return WinJS.TPromise.join([globalState.whenReady, workspaceState.whenReady]).then(function () {\r\n                return Object.freeze({\r\n                    globalState: globalState,\r\n                    workspaceState: workspaceState,\r\n                    subscriptions: [],\r\n                    get extensionPath() { return pluginDescription.extensionFolderPath; },\r\n                    asAbsolutePath: function (relativePath) { return paths.normalize(paths.join(pluginDescription.extensionFolderPath, relativePath), true); }\r\n                });\r\n            });\r\n        };\r\n        PluginHostPluginService.prototype._actualActivatePlugin = function (pluginDescription) {\r\n            var _this = this;\r\n            return _super.prototype._actualActivatePlugin.call(this, pluginDescription).then(function (activatedPlugin) {\r\n                var proxyObj = _this._threadService.createDynamicProxyFromMethods(activatedPlugin.exports);\r\n                activatedPlugin.subscriptions.push(proxyObj);\r\n                _this._proxy.$onPluginActivatedInPluginHost(pluginDescription.id, proxyObj.getProxyDefinition());\r\n                return activatedPlugin;\r\n            }, function (err) {\r\n                _this._proxy.$onPluginActivationFailedInPluginHost(pluginDescription.id, err);\r\n                throw err;\r\n            });\r\n        };\r\n        // -- called by main thread\r\n        PluginHostPluginService.prototype.$activatePluginInPluginHost = function (pluginDescription) {\r\n            return this._activatePlugin(pluginDescription).then(function () {\r\n                return null;\r\n            });\r\n        };\r\n        PluginHostPluginService = __decorate([\r\n            thread_1.Remotable.PluginHostContext('PluginHostPluginService')\r\n        ], PluginHostPluginService);\r\n        return PluginHostPluginService;\r\n    })(abstractPluginService_1.AbstractPluginService);\r\n    exports.PluginHostPluginService = PluginHostPluginService;\r\n    function loadCommonJSModule(modulePath) {\r\n        var r = null;\r\n        try {\r\n            r = require.__$__nodeRequire(modulePath);\r\n        }\r\n        catch (e) {\r\n            return WinJS.TPromise.wrapError(e);\r\n        }\r\n        return WinJS.TPromise.as(r);\r\n    }\r\n    // TODO@Alex: Duplicated in:\r\n    // * src\\bootstrap.js\r\n    // * src\\vs\\workbench\\electron-main\\bootstrap.js\r\n    // * src\\vs\\platform\\plugins\\common\\nativePluginService.ts\r\n    function uriFromPath(_path) {\r\n        var pathName = _path.replace(/\\\\/g, '/');\r\n        if (pathName.length > 0 && pathName.charAt(0) !== '/') {\r\n            pathName = '/' + pathName;\r\n        }\r\n        return encodeURI('file://' + pathName);\r\n    }\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") return Reflect.decorate(decorators, target, key, desc);\r\n    switch (arguments.length) {\r\n        case 2: return decorators.reduceRight(function(o, d) { return (d && d(o)) || o; }, target);\r\n        case 3: return decorators.reduceRight(function(o, d) { return (d && d(target, key)), void 0; }, void 0);\r\n        case 4: return decorators.reduceRight(function(o, d) { return (d && d(target, key, o)) || o; }, desc);\r\n    }\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\ndefine(\"vs/platform/telemetry/common/abstractRemoteTelemetryService\", [\"require\", \"exports\", 'vs/platform/telemetry/common/abstractTelemetryService', 'vs/platform/telemetry/common/telemetry', 'vs/platform/thread/common/thread'], function (require, exports, AbstractTelemetryService, telemetry_1, thread_1) {\r\n    /**\r\n     * Helper always instantiated in the main process to receive telemetry events from remote telemetry services\r\n     */\r\n    var RemoteTelemetryServiceHelper = (function () {\r\n        function RemoteTelemetryServiceHelper(telemetryService) {\r\n            this._telemetryService = telemetryService;\r\n        }\r\n        RemoteTelemetryServiceHelper.prototype._handleRemoteTelemetryEvent = function (eventName, data) {\r\n            this._telemetryService.publicLog(eventName, data);\r\n        };\r\n        RemoteTelemetryServiceHelper.prototype.getTelemetryInfo = function () {\r\n            return this._telemetryService.getTelemetryInfo();\r\n        };\r\n        RemoteTelemetryServiceHelper = __decorate([\r\n            thread_1.Remotable.MainContext('RemoteTelemetryServiceHelper'),\r\n            __param(0, telemetry_1.ITelemetryService)\r\n        ], RemoteTelemetryServiceHelper);\r\n        return RemoteTelemetryServiceHelper;\r\n    })();\r\n    exports.RemoteTelemetryServiceHelper = RemoteTelemetryServiceHelper;\r\n    /**\r\n     * Base class for remote telemetry services (instantiated in plugin host or in web workers)\r\n     */\r\n    var AbstractRemoteTelemetryService = (function (_super) {\r\n        __extends(AbstractRemoteTelemetryService, _super);\r\n        function AbstractRemoteTelemetryService(threadService) {\r\n            // Log all events including public, since they will be forwarded to the main which will do the real filtering\r\n            _super.call(this);\r\n            this._proxy = threadService.getRemotable(RemoteTelemetryServiceHelper);\r\n        }\r\n        AbstractRemoteTelemetryService.prototype.getTelemetryInfo = function () {\r\n            return this._proxy.getTelemetryInfo();\r\n        };\r\n        AbstractRemoteTelemetryService.prototype.addTelemetryAppender = function (appender) {\r\n            throw new Error('Telemetry appenders are not supported in this execution envirnoment');\r\n        };\r\n        AbstractRemoteTelemetryService.prototype.handleEvent = function (eventName, data) {\r\n            this._proxy._handleRemoteTelemetryEvent(eventName, data);\r\n        };\r\n        return AbstractRemoteTelemetryService;\r\n    })(AbstractTelemetryService.AbstractTelemetryService);\r\n    exports.AbstractRemoteTelemetryService = AbstractRemoteTelemetryService;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/platform/thread/common/threadService\", [\"require\", \"exports\", 'vs/platform/platform', 'vs/base/common/winjs.base', './thread'], function (require, exports, Platform, winjs_base_1, thread) {\r\n    exports.THREAD_SERVICE_PROPERTY_NAME = '__$$__threadService';\r\n    function findMember(proto, target) {\r\n        for (var i in proto) {\r\n            if (proto[i] === target) {\r\n                return i;\r\n            }\r\n        }\r\n        throw new Error('Member not found in prototype');\r\n    }\r\n    function findThreadService(obj) {\r\n        var threadService = obj[exports.THREAD_SERVICE_PROPERTY_NAME];\r\n        if (!threadService) {\r\n            throw new Error('Objects that use thread attributes must be instantiated with the thread service');\r\n        }\r\n        return threadService;\r\n    }\r\n    function MainThreadAttr(type, target) {\r\n        var methodName = findMember(type.prototype, target);\r\n        type.prototype[methodName] = function () {\r\n            var param = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                param[_i - 0] = arguments[_i];\r\n            }\r\n            return findThreadService(this).MainThread(this, methodName, target, param);\r\n        };\r\n    }\r\n    exports.MainThreadAttr = MainThreadAttr;\r\n    function OneWorkerFn(type, target, conditionOrAffinity, affinity) {\r\n        if (affinity === void 0) { affinity = thread.ThreadAffinity.None; }\r\n        var methodName = findMember(type.prototype, target), condition;\r\n        if (typeof conditionOrAffinity === 'function') {\r\n            condition = conditionOrAffinity;\r\n        }\r\n        else if (typeof conditionOrAffinity !== 'undefined') {\r\n            affinity = conditionOrAffinity;\r\n        }\r\n        type.prototype[methodName] = function () {\r\n            var param = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                param[_i - 0] = arguments[_i];\r\n            }\r\n            if (!condition) {\r\n                return findThreadService(this).OneWorker(this, methodName, target, param, affinity);\r\n            }\r\n            else {\r\n                var that = this, promise = condition.call(that);\r\n                if (!winjs_base_1.TPromise.is(promise)) {\r\n                    promise = winjs_base_1.TPromise.as(promise);\r\n                }\r\n                return promise.then(function () {\r\n                    return findThreadService(that).OneWorker(that, methodName, target, param, affinity);\r\n                });\r\n            }\r\n        };\r\n    }\r\n    exports.OneWorkerAttr = OneWorkerFn;\r\n    function AllWorkersAttr(type, target) {\r\n        var methodName = findMember(type.prototype, target);\r\n        type.prototype[methodName] = function () {\r\n            var param = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                param[_i - 0] = arguments[_i];\r\n            }\r\n            return findThreadService(this).AllWorkers(this, methodName, target, param);\r\n        };\r\n    }\r\n    exports.AllWorkersAttr = AllWorkersAttr;\r\n    function EverywhereAttr(type, target) {\r\n        var methodName = findMember(type.prototype, target);\r\n        type.prototype[methodName] = function () {\r\n            var param = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                param[_i - 0] = arguments[_i];\r\n            }\r\n            return findThreadService(this).Everywhere(this, methodName, target, param);\r\n        };\r\n    }\r\n    exports.EverywhereAttr = EverywhereAttr;\r\n    var SynchronizableObjectsRegistry = (function () {\r\n        function SynchronizableObjectsRegistry() {\r\n            this._list = [];\r\n            this._list = [];\r\n        }\r\n        SynchronizableObjectsRegistry.prototype.register = function (obj) {\r\n            this._list.push(obj);\r\n        };\r\n        SynchronizableObjectsRegistry.prototype.read = function () {\r\n            return this._list;\r\n        };\r\n        return SynchronizableObjectsRegistry;\r\n    })();\r\n    exports.Extensions = {\r\n        SynchronizableObjects: 'SynchronizableObjects'\r\n    };\r\n    Platform.Registry.add(exports.Extensions.SynchronizableObjects, new SynchronizableObjectsRegistry());\r\n    function registerThreadSynchronizableObject(obj) {\r\n        var registry = Platform.Registry.as(exports.Extensions.SynchronizableObjects);\r\n        registry.register(obj);\r\n    }\r\n    exports.registerThreadSynchronizableObject = registerThreadSynchronizableObject;\r\n    function readThreadSynchronizableObjects() {\r\n        var registry = Platform.Registry.as(exports.Extensions.SynchronizableObjects);\r\n        return registry.read();\r\n    }\r\n    exports.readThreadSynchronizableObjects = readThreadSynchronizableObjects;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") return Reflect.decorate(decorators, target, key, desc);\r\n    switch (arguments.length) {\r\n        case 2: return decorators.reduceRight(function(o, d) { return (d && d(o)) || o; }, target);\r\n        case 3: return decorators.reduceRight(function(o, d) { return (d && d(target, key)), void 0; }, void 0);\r\n        case 4: return decorators.reduceRight(function(o, d) { return (d && d(target, key, o)) || o; }, desc);\r\n    }\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\ndefine(\"vs/editor/common/modes/abstractMode\", [\"require\", \"exports\", 'vs/base/common/eventEmitter', 'vs/editor/common/modes/modesFilters', 'vs/editor/common/modes/nullMode', 'vs/editor/common/modes/supports', 'vs/base/common/winjs.base', 'vs/platform/instantiation/common/instantiation', 'vs/platform/thread/common/thread', 'vs/platform/thread/common/threadService', 'vs/platform/instantiation/common/descriptors'], function (require, exports, eventEmitter_1, modesFilters_1, nullMode_1, supports_1, winjs_base_1, instantiation_1, thread_1, threadService_1, descriptors_1) {\r\n    function createWordRegExp(allowInWords) {\r\n        if (allowInWords === void 0) { allowInWords = ''; }\r\n        return nullMode_1.NullMode.createWordRegExp(allowInWords);\r\n    }\r\n    exports.createWordRegExp = createWordRegExp;\r\n    var AbstractMode = (function () {\r\n        function AbstractMode(descriptor, instantiationService, threadService) {\r\n            // adapters end\r\n            this._eventEmitter = new eventEmitter_1.EventEmitter();\r\n            this._instantiationService = instantiationService;\r\n            this._threadService = threadService;\r\n            this._descriptor = descriptor;\r\n            this._options = null;\r\n            this.autoValidateDelay = 500;\r\n            this.occurrencesSupport = this;\r\n            this.suggestSupport = this;\r\n            this.inplaceReplaceSupport = this;\r\n            this.diffSupport = this;\r\n            this.dirtyDiffSupport = this;\r\n            this.linkSupport = this;\r\n            this.configSupport = this;\r\n            this.commentsSupport = this;\r\n            this.tokenTypeClassificationSupport = this;\r\n            this._workerPiecePromise = null;\r\n            this._simplifiedMode = null;\r\n        }\r\n        AbstractMode.prototype.getId = function () {\r\n            return this._descriptor.id;\r\n        };\r\n        AbstractMode.prototype.creationDone = function () {\r\n            if (this._threadService.isInMainThread) {\r\n                // Pick a worker to do validation\r\n                this._pickAWorkerToValidate();\r\n            }\r\n        };\r\n        AbstractMode.prototype.toSimplifiedMode = function () {\r\n            if (!this._simplifiedMode) {\r\n                this._simplifiedMode = new SimplifiedMode(this);\r\n            }\r\n            return this._simplifiedMode;\r\n        };\r\n        AbstractMode.prototype._getOrCreateWorker = function () {\r\n            var _this = this;\r\n            if (!this._workerPiecePromise) {\r\n                var workerDescriptor = this._getWorkerDescriptor();\r\n                // First, load the code of the worker (without instantiating it)\r\n                this._workerPiecePromise = AbstractMode._loadModule(workerDescriptor.moduleName).then(function () {\r\n                    // Then, load & instantiate all the participants\r\n                    var participants = _this._descriptor.workerParticipants;\r\n                    return winjs_base_1.TPromise.join(participants.map(function (participant) {\r\n                        return _this._instantiationService.createInstance(participant);\r\n                    }));\r\n                }).then(function (participants) {\r\n                    return _this._instantiationService.createInstance(workerDescriptor, _this, participants);\r\n                });\r\n            }\r\n            return this._workerPiecePromise;\r\n        };\r\n        AbstractMode._loadModule = function (moduleName) {\r\n            return new winjs_base_1.TPromise(function (c, e, p) {\r\n                require([moduleName], c, e);\r\n            }, function () {\r\n                // Cannot cancel loading code\r\n            });\r\n        };\r\n        AbstractMode.prototype._getWorkerDescriptor = function () {\r\n            return descriptors_1.createAsyncDescriptor2('vs/editor/common/modes/nullWorker', 'NullWorker');\r\n        };\r\n        AbstractMode.prototype._worker = function (runner) {\r\n            return this._getOrCreateWorker().then(runner);\r\n        };\r\n        AbstractMode.prototype._pickAWorkerToValidate = function () {\r\n            return this._worker(function (w) { return w.enableValidator(); });\r\n        };\r\n        AbstractMode.prototype.getFilter = function () {\r\n            return modesFilters_1.StrictPrefix;\r\n        };\r\n        AbstractMode.prototype.addSupportChangedListener = function (callback) {\r\n            return this._eventEmitter.addListener2('modeSupportChanged', callback);\r\n        };\r\n        AbstractMode.prototype.registerSupport = function (support, callback) {\r\n            var _this = this;\r\n            var supportImpl = callback(this);\r\n            this[support] = supportImpl;\r\n            this._eventEmitter.emit('modeSupportChanged', _createModeSupportChangedEvent(support));\r\n            return {\r\n                dispose: function () {\r\n                    if (_this[support] === supportImpl) {\r\n                        delete _this[support];\r\n                        _this._eventEmitter.emit('modeSupportChanged', _createModeSupportChangedEvent(support));\r\n                    }\r\n                }\r\n            };\r\n        };\r\n        AbstractMode.prototype.suggest = function (resource, position) {\r\n            return this._worker(function (w) { return w.suggest(resource, position); });\r\n        };\r\n        AbstractMode.prototype.getTriggerCharacters = function () {\r\n            return [];\r\n        };\r\n        AbstractMode.prototype.shouldAutotriggerSuggest = function (context, offset, triggeredByCharacter) {\r\n            return supports_1.handleEvent(context, offset, function (mode, context, offset) {\r\n                if (!mode.suggestSupport) {\r\n                    // Hit an inner mode without suggest support\r\n                    return false;\r\n                }\r\n                if (mode instanceof AbstractMode) {\r\n                    return mode.shouldAutotriggerSuggestImpl(context, offset, triggeredByCharacter);\r\n                }\r\n                return mode.suggestSupport.shouldAutotriggerSuggest(context, offset, triggeredByCharacter);\r\n            });\r\n        };\r\n        AbstractMode.prototype.shouldAutotriggerSuggestImpl = function (context, offset, triggeredByCharacter) {\r\n            return true;\r\n        };\r\n        AbstractMode.prototype.shouldShowEmptySuggestionList = function () {\r\n            return true;\r\n        };\r\n        AbstractMode.prototype.findOccurrences = function (resource, position, strict) {\r\n            if (strict === void 0) { strict = false; }\r\n            return this._worker(function (w) { return w.findOccurrences(resource, position, strict); });\r\n        };\r\n        AbstractMode.prototype.navigateValueSet = function (resource, position, up) {\r\n            return this._worker(function (w) { return w.inplaceReplaceSupport.navigateValueSet(resource, position, up); });\r\n        };\r\n        AbstractMode.prototype.computeDiff = function (original, modified, ignoreTrimWhitespace) {\r\n            return this._worker(function (w) { return w.computeDiff(original, modified, ignoreTrimWhitespace); });\r\n        };\r\n        AbstractMode.prototype.computeDirtyDiff = function (resource, ignoreTrimWhitespace) {\r\n            return this._worker(function (w) { return w.computeDirtyDiff(resource, ignoreTrimWhitespace); });\r\n        };\r\n        AbstractMode.prototype.computeLinks = function (resource) {\r\n            return this._worker(function (w) { return w.computeLinks(resource); });\r\n        };\r\n        AbstractMode.prototype.configure = function (options) {\r\n            this._options = options;\r\n            if (this._threadService.isInMainThread) {\r\n                return this._configureWorkers(options);\r\n            }\r\n            else {\r\n                return this._worker(function (w) { return w.configure(options); });\r\n            }\r\n        };\r\n        AbstractMode.prototype._configureWorkers = function (options) {\r\n            return this._worker(function (w) { return w.configure(options); });\r\n        };\r\n        // END\r\n        AbstractMode.prototype.getWordDefinition = function () {\r\n            return nullMode_1.NullMode.DEFAULT_WORD_REGEXP;\r\n        };\r\n        AbstractMode.prototype.getCommentsConfiguration = function () {\r\n            return null;\r\n        };\r\n        // START mics interface implementations\r\n        AbstractMode.$_pickAWorkerToValidate = threadService_1.OneWorkerAttr(AbstractMode, AbstractMode.prototype._pickAWorkerToValidate, thread_1.ThreadAffinity.Group1);\r\n        AbstractMode.$suggest = threadService_1.OneWorkerAttr(AbstractMode, AbstractMode.prototype.suggest);\r\n        AbstractMode.$findOccurrences = threadService_1.OneWorkerAttr(AbstractMode, AbstractMode.prototype.findOccurrences);\r\n        AbstractMode.$navigateValueSet = threadService_1.OneWorkerAttr(AbstractMode, AbstractMode.prototype.navigateValueSet);\r\n        AbstractMode.$computeDiff = threadService_1.OneWorkerAttr(AbstractMode, AbstractMode.prototype.computeDiff);\r\n        AbstractMode.$computeDirtyDiff = threadService_1.OneWorkerAttr(AbstractMode, AbstractMode.prototype.computeDirtyDiff);\r\n        AbstractMode.$computeLinks = threadService_1.OneWorkerAttr(AbstractMode, AbstractMode.prototype.computeLinks);\r\n        AbstractMode.$_configureWorkers = threadService_1.AllWorkersAttr(AbstractMode, AbstractMode.prototype._configureWorkers);\r\n        return AbstractMode;\r\n    })();\r\n    exports.AbstractMode = AbstractMode;\r\n    var SimplifiedMode = (function () {\r\n        function SimplifiedMode(sourceMode) {\r\n            var _this = this;\r\n            this._sourceMode = sourceMode;\r\n            this._eventEmitter = new eventEmitter_1.EventEmitter();\r\n            this._id = 'vs.editor.modes.simplifiedMode:' + sourceMode.getId();\r\n            this._assignSupports();\r\n            if (this._sourceMode.addSupportChangedListener) {\r\n                this._sourceMode.addSupportChangedListener(function (e) {\r\n                    if (e.tokenizationSupport || e.electricCharacterSupport || e.commentsSupport || e.characterPairSupport || e.tokenTypeClassificationSupport || e.onEnterSupport) {\r\n                        _this._assignSupports();\r\n                        var newEvent = SimplifiedMode._createModeSupportChangedEvent(e);\r\n                        _this._eventEmitter.emit('modeSupportChanged', newEvent);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        SimplifiedMode.prototype.getId = function () {\r\n            return this._id;\r\n        };\r\n        SimplifiedMode.prototype.toSimplifiedMode = function () {\r\n            return this;\r\n        };\r\n        SimplifiedMode.prototype._assignSupports = function () {\r\n            this.tokenizationSupport = this._sourceMode.tokenizationSupport;\r\n            this.electricCharacterSupport = this._sourceMode.electricCharacterSupport;\r\n            this.commentsSupport = this._sourceMode.commentsSupport;\r\n            this.characterPairSupport = this._sourceMode.characterPairSupport;\r\n            this.tokenTypeClassificationSupport = this._sourceMode.tokenTypeClassificationSupport;\r\n            this.onEnterSupport = this._sourceMode.onEnterSupport;\r\n        };\r\n        SimplifiedMode._createModeSupportChangedEvent = function (originalModeEvent) {\r\n            var event = {\r\n                codeLensSupport: false,\r\n                tokenizationSupport: originalModeEvent.tokenizationSupport,\r\n                occurrencesSupport: false,\r\n                declarationSupport: false,\r\n                typeDeclarationSupport: false,\r\n                navigateTypesSupport: false,\r\n                referenceSupport: false,\r\n                suggestSupport: false,\r\n                parameterHintsSupport: false,\r\n                extraInfoSupport: false,\r\n                outlineSupport: false,\r\n                logicalSelectionSupport: false,\r\n                formattingSupport: false,\r\n                inplaceReplaceSupport: false,\r\n                diffSupport: false,\r\n                dirtyDiffSupport: false,\r\n                emitOutputSupport: false,\r\n                linkSupport: false,\r\n                configSupport: false,\r\n                electricCharacterSupport: originalModeEvent.electricCharacterSupport,\r\n                commentsSupport: originalModeEvent.commentsSupport,\r\n                characterPairSupport: originalModeEvent.characterPairSupport,\r\n                tokenTypeClassificationSupport: originalModeEvent.tokenTypeClassificationSupport,\r\n                quickFixSupport: false,\r\n                onEnterSupport: originalModeEvent.onEnterSupport\r\n            };\r\n            return event;\r\n        };\r\n        return SimplifiedMode;\r\n    })();\r\n    exports.isDigit = (function () {\r\n        var _0 = '0'.charCodeAt(0), _1 = '1'.charCodeAt(0), _2 = '2'.charCodeAt(0), _3 = '3'.charCodeAt(0), _4 = '4'.charCodeAt(0), _5 = '5'.charCodeAt(0), _6 = '6'.charCodeAt(0), _7 = '7'.charCodeAt(0), _8 = '8'.charCodeAt(0), _9 = '9'.charCodeAt(0), _a = 'a'.charCodeAt(0), _b = 'b'.charCodeAt(0), _c = 'c'.charCodeAt(0), _d = 'd'.charCodeAt(0), _e = 'e'.charCodeAt(0), _f = 'f'.charCodeAt(0), _A = 'A'.charCodeAt(0), _B = 'B'.charCodeAt(0), _C = 'C'.charCodeAt(0), _D = 'D'.charCodeAt(0), _E = 'E'.charCodeAt(0), _F = 'F'.charCodeAt(0);\r\n        return function isDigit(character, base) {\r\n            var c = character.charCodeAt(0);\r\n            switch (base) {\r\n                case 1:\r\n                    return c === _0;\r\n                case 2:\r\n                    return c >= _0 && c <= _1;\r\n                case 3:\r\n                    return c >= _0 && c <= _2;\r\n                case 4:\r\n                    return c >= _0 && c <= _3;\r\n                case 5:\r\n                    return c >= _0 && c <= _4;\r\n                case 6:\r\n                    return c >= _0 && c <= _5;\r\n                case 7:\r\n                    return c >= _0 && c <= _6;\r\n                case 8:\r\n                    return c >= _0 && c <= _7;\r\n                case 9:\r\n                    return c >= _0 && c <= _8;\r\n                case 10:\r\n                    return c >= _0 && c <= _9;\r\n                case 11:\r\n                    return (c >= _0 && c <= _9) || (c === _a) || (c === _A);\r\n                case 12:\r\n                    return (c >= _0 && c <= _9) || (c >= _a && c <= _b) || (c >= _A && c <= _B);\r\n                case 13:\r\n                    return (c >= _0 && c <= _9) || (c >= _a && c <= _c) || (c >= _A && c <= _C);\r\n                case 14:\r\n                    return (c >= _0 && c <= _9) || (c >= _a && c <= _d) || (c >= _A && c <= _D);\r\n                case 15:\r\n                    return (c >= _0 && c <= _9) || (c >= _a && c <= _e) || (c >= _A && c <= _E);\r\n                default:\r\n                    return (c >= _0 && c <= _9) || (c >= _a && c <= _f) || (c >= _A && c <= _F);\r\n            }\r\n        };\r\n    })();\r\n    var FrankensteinMode = (function (_super) {\r\n        __extends(FrankensteinMode, _super);\r\n        function FrankensteinMode(descriptor, instantiationService, threadService) {\r\n            _super.call(this, descriptor, instantiationService, threadService);\r\n        }\r\n        FrankensteinMode = __decorate([\r\n            __param(1, instantiation_1.IInstantiationService),\r\n            __param(2, thread_1.IThreadService)\r\n        ], FrankensteinMode);\r\n        return FrankensteinMode;\r\n    })(AbstractMode);\r\n    exports.FrankensteinMode = FrankensteinMode;\r\n    function _createModeSupportChangedEvent() {\r\n        var changedSupports = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            changedSupports[_i - 0] = arguments[_i];\r\n        }\r\n        var event = {\r\n            codeLensSupport: false,\r\n            tokenizationSupport: false,\r\n            occurrencesSupport: false,\r\n            declarationSupport: false,\r\n            typeDeclarationSupport: false,\r\n            navigateTypesSupport: false,\r\n            referenceSupport: false,\r\n            suggestSupport: false,\r\n            parameterHintsSupport: false,\r\n            extraInfoSupport: false,\r\n            outlineSupport: false,\r\n            logicalSelectionSupport: false,\r\n            formattingSupport: false,\r\n            inplaceReplaceSupport: false,\r\n            diffSupport: false,\r\n            dirtyDiffSupport: false,\r\n            emitOutputSupport: false,\r\n            linkSupport: false,\r\n            configSupport: false,\r\n            electricCharacterSupport: false,\r\n            commentsSupport: false,\r\n            characterPairSupport: false,\r\n            tokenTypeClassificationSupport: false,\r\n            quickFixSupport: false,\r\n            onEnterSupport: false\r\n        };\r\n        changedSupports.forEach(function (support) { return event[support] = true; });\r\n        return event;\r\n    }\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/editor/common/modes/languageExtensionPoint\", [\"require\", \"exports\", 'vs/nls!vs/editor/common/modes/languageExtensionPoint', 'vs/base/common/paths', 'vs/base/common/strings', 'vs/platform/thread/common/threadService', 'vs/platform/plugins/common/pluginsRegistry', 'vs/base/common/mime', 'vs/base/common/errors', 'vs/platform/instantiation/common/descriptors', 'vs/base/common/event'], function (require, exports, nls, paths, Strings, threadService_1, pluginsRegistry_1, Mime, Errors, descriptors_1, event_1) {\r\n    var languagesExtPoint = pluginsRegistry_1.PluginsRegistry.registerExtensionPoint('languages', {\r\n        description: nls.localize(0, null),\r\n        type: 'array',\r\n        default: [{ id: '', aliases: [], extensions: [] }],\r\n        items: {\r\n            type: 'object',\r\n            default: { id: '', extensions: [] },\r\n            properties: {\r\n                id: {\r\n                    description: nls.localize(1, null),\r\n                    type: 'string'\r\n                },\r\n                aliases: {\r\n                    description: nls.localize(2, null),\r\n                    type: 'array',\r\n                    items: {\r\n                        type: 'string'\r\n                    }\r\n                },\r\n                extensions: {\r\n                    description: nls.localize(3, null),\r\n                    default: ['.foo'],\r\n                    type: 'array',\r\n                    items: {\r\n                        type: 'string'\r\n                    }\r\n                },\r\n                filenames: {\r\n                    description: nls.localize(4, null),\r\n                    type: 'array',\r\n                    items: {\r\n                        type: 'string'\r\n                    }\r\n                },\r\n                mimetypes: {\r\n                    description: nls.localize(5, null),\r\n                    type: 'array',\r\n                    items: {\r\n                        type: 'string'\r\n                    }\r\n                },\r\n                firstLine: {\r\n                    description: nls.localize(6, null),\r\n                    type: 'string'\r\n                },\r\n                configuration: {\r\n                    description: nls.localize(7, null),\r\n                    type: 'string'\r\n                }\r\n            }\r\n        }\r\n    });\r\n    function isUndefinedOrStringArray(value) {\r\n        if (typeof value === 'undefined') {\r\n            return true;\r\n        }\r\n        if (!Array.isArray(value)) {\r\n            return false;\r\n        }\r\n        return value.every(function (item) { return typeof item === 'string'; });\r\n    }\r\n    function isValidLanguageExtensionPoint(value, collector) {\r\n        if (!value) {\r\n            collector.error(nls.localize(8, null, languagesExtPoint.name));\r\n            return false;\r\n        }\r\n        if (typeof value.id !== 'string') {\r\n            collector.error(nls.localize(9, null, 'id'));\r\n            return false;\r\n        }\r\n        if (!isUndefinedOrStringArray(value.extensions)) {\r\n            collector.error(nls.localize(10, null, 'extensions'));\r\n            return false;\r\n        }\r\n        if (!isUndefinedOrStringArray(value.filenames)) {\r\n            collector.error(nls.localize(11, null, 'filenames'));\r\n            return false;\r\n        }\r\n        if (typeof value.firstLine !== 'undefined' && typeof value.firstLine !== 'string') {\r\n            collector.error(nls.localize(12, null, 'firstLine'));\r\n            return false;\r\n        }\r\n        if (typeof value.configuration !== 'undefined' && typeof value.configuration !== 'string') {\r\n            collector.error(nls.localize(13, null, 'configuration'));\r\n            return false;\r\n        }\r\n        if (!isUndefinedOrStringArray(value.aliases)) {\r\n            collector.error(nls.localize(14, null, 'aliases'));\r\n            return false;\r\n        }\r\n        if (!isUndefinedOrStringArray(value.mimetypes)) {\r\n            collector.error(nls.localize(15, null, 'mimetypes'));\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\r\n    var LanguageExtensionPointHandler = (function () {\r\n        function LanguageExtensionPointHandler() {\r\n            this._onDidAddMode = new event_1.Emitter();\r\n            this.onDidAddMode = this._onDidAddMode.event;\r\n            this.knownModeIds = {};\r\n            this.mime2LanguageId = {};\r\n            this.name2LanguageId = {};\r\n            this.id2Name = {};\r\n            this.name2Extensions = {};\r\n            this.compatModes = {};\r\n            this.lowerName2Id = {};\r\n            this.id2ConfigurationFiles = {};\r\n            this._isRegisteredWithThreadService = false;\r\n        }\r\n        // -- BEGIN IThreadSynchronizableObject\r\n        LanguageExtensionPointHandler.prototype.creationDone = function () {\r\n            this._isRegisteredWithThreadService = true;\r\n        };\r\n        LanguageExtensionPointHandler.prototype.getId = function () {\r\n            return 'LanguageExtensionPointHandler';\r\n        };\r\n        LanguageExtensionPointHandler.prototype.getSerializableState = function () {\r\n            return {\r\n                knownModeIds: this.knownModeIds,\r\n                mime2LanguageId: this.mime2LanguageId,\r\n                name2LanguageId: this.name2LanguageId,\r\n                name2Extensions: this.name2Extensions,\r\n                id2Name: this.id2Name,\r\n                compatModes: this.compatModes,\r\n                lowerName2Id: this.lowerName2Id\r\n            };\r\n        };\r\n        LanguageExtensionPointHandler.prototype.setData = function (data) {\r\n            this.knownModeIds = data.knownModeIds;\r\n            this.mime2LanguageId = data.mime2LanguageId;\r\n            this.name2LanguageId = data.name2LanguageId;\r\n            this.name2Extensions = data.name2Extensions;\r\n            this.id2Name = data.id2Name;\r\n            this.compatModes = data.compatModes;\r\n            this.lowerName2Id = data.lowerName2Id;\r\n        };\r\n        // -- END IThreadSynchronizableObject\r\n        LanguageExtensionPointHandler.prototype.registerCompatMode = function (def) {\r\n            this._onLanguage({\r\n                id: def.id,\r\n                extensions: def.extensions,\r\n                filenames: def.filenames,\r\n                firstLine: def.firstLine,\r\n                aliases: def.aliases,\r\n                mimetypes: def.mimetypes\r\n            });\r\n            this.compatModes[def.id] = descriptors_1.createAsyncDescriptor1(def.moduleId, def.ctorName);\r\n        };\r\n        LanguageExtensionPointHandler.prototype._handleLanguagesExtensionPointUsers = function (extensions) {\r\n            var allValidLanguages = [];\r\n            for (var i = 0, len = extensions.length; i < len; i++) {\r\n                var extension = extensions[i];\r\n                if (!Array.isArray(extension.value)) {\r\n                    extension.collector.error(nls.localize(16, null, languagesExtPoint.name));\r\n                    continue;\r\n                }\r\n                for (var j = 0, lenJ = extension.value.length; j < lenJ; j++) {\r\n                    if (isValidLanguageExtensionPoint(extension.value[j], extension.collector)) {\r\n                        allValidLanguages.push({\r\n                            id: extension.value[j].id,\r\n                            extensions: extension.value[j].extensions,\r\n                            filenames: extension.value[j].filenames,\r\n                            firstLine: extension.value[j].firstLine,\r\n                            aliases: extension.value[j].aliases,\r\n                            mimetypes: extension.value[j].mimetypes,\r\n                            configuration: extension.value[j].configuration ? paths.join(extension.description.extensionFolderPath, extension.value[j].configuration) : extension.value[j].configuration\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            if (this._isRegisteredWithThreadService) {\r\n                this._onLanguagesEverywhere(allValidLanguages);\r\n            }\r\n            else {\r\n                this._onLanguagesImpl(allValidLanguages);\r\n            }\r\n        };\r\n        LanguageExtensionPointHandler.prototype._onLanguagesEverywhere = function (desc) {\r\n            this._onLanguagesImpl(desc);\r\n        };\r\n        LanguageExtensionPointHandler.prototype._onLanguagesImpl = function (desc) {\r\n            for (var i = 0; i < desc.length; i++) {\r\n                this._onLanguage(desc[i]);\r\n            }\r\n        };\r\n        LanguageExtensionPointHandler.prototype._setMime2LanguageId = function (mimeType, modeId) {\r\n            if (this.mime2LanguageId[mimeType] && this.mime2LanguageId[mimeType] !== modeId) {\r\n                console.warn('Overwriting mime <<' + mimeType + '>> to now point to modeId <<' + modeId + '>>');\r\n            }\r\n            this.mime2LanguageId[mimeType] = modeId;\r\n        };\r\n        LanguageExtensionPointHandler.prototype.registerLanguage = function (lang) {\r\n            this._onLanguage(lang);\r\n        };\r\n        LanguageExtensionPointHandler.prototype._onLanguage = function (lang) {\r\n            this.knownModeIds[lang.id] = true;\r\n            var primaryMime = null;\r\n            if (typeof lang.mimetypes !== 'undefined' && Array.isArray(lang.mimetypes)) {\r\n                for (var i = 0; i < lang.mimetypes.length; i++) {\r\n                    if (!primaryMime) {\r\n                        primaryMime = lang.mimetypes[i];\r\n                    }\r\n                    this.mime2LanguageId[lang.mimetypes[i]] = lang.id;\r\n                }\r\n            }\r\n            if (!primaryMime) {\r\n                primaryMime = 'text/x-' + lang.id;\r\n                this.mime2LanguageId[primaryMime] = lang.id;\r\n            }\r\n            if (typeof lang.extensions !== 'undefined' && Array.isArray(lang.extensions)) {\r\n                for (var i = 0; i < lang.extensions.length; i++) {\r\n                    Mime.registerTextMimeByFilename(lang.extensions[i], primaryMime);\r\n                }\r\n            }\r\n            if (typeof lang.filenames !== 'undefined' && Array.isArray(lang.filenames)) {\r\n                for (var i = 0; i < lang.filenames.length; i++) {\r\n                    Mime.registerTextMimeByFilename(lang.filenames[i], primaryMime);\r\n                }\r\n            }\r\n            if (typeof lang.firstLine === 'string' && lang.firstLine.length > 0) {\r\n                var firstLineRegexStr = lang.firstLine;\r\n                if (firstLineRegexStr.charAt(0) !== '^') {\r\n                    firstLineRegexStr = '^' + firstLineRegexStr;\r\n                }\r\n                try {\r\n                    var firstLineRegex = new RegExp(firstLineRegexStr);\r\n                    if (!Strings.regExpLeadsToEndlessLoop(firstLineRegex)) {\r\n                        Mime.registerTextMimeByFirstLine(firstLineRegex, primaryMime);\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    // Most likely, the regex was bad\r\n                    Errors.onUnexpectedError(err);\r\n                }\r\n            }\r\n            var bestName = null;\r\n            if (typeof lang.aliases !== 'undefined' && Array.isArray(lang.aliases)) {\r\n                for (var i = 0; i < lang.aliases.length; i++) {\r\n                    if (!lang.aliases[i] || lang.aliases[i].length === 0) {\r\n                        continue;\r\n                    }\r\n                    if (!bestName) {\r\n                        bestName = lang.aliases[i];\r\n                        this.name2LanguageId[lang.aliases[i]] = lang.id;\r\n                        this.name2Extensions[lang.aliases[i]] = lang.extensions;\r\n                    }\r\n                    this.lowerName2Id[lang.aliases[i].toLowerCase()] = lang.id;\r\n                }\r\n            }\r\n            this.id2Name[lang.id] = bestName || '';\r\n            if (typeof lang.configuration === 'string') {\r\n                this.id2ConfigurationFiles[lang.id] = this.id2ConfigurationFiles[lang.id] || [];\r\n                this.id2ConfigurationFiles[lang.id].push(lang.configuration);\r\n            }\r\n            this._onDidAddMode.fire(lang.id);\r\n        };\r\n        LanguageExtensionPointHandler.prototype.isRegisteredMode = function (mimetypeOrModeId) {\r\n            // Is this a known mime type ?\r\n            if (hasOwnProperty.call(this.mime2LanguageId, mimetypeOrModeId)) {\r\n                return true;\r\n            }\r\n            // Is this a known mode id ?\r\n            return hasOwnProperty.call(this.knownModeIds, mimetypeOrModeId);\r\n        };\r\n        LanguageExtensionPointHandler.prototype.getRegisteredModes = function () {\r\n            return Object.keys(this.knownModeIds);\r\n        };\r\n        LanguageExtensionPointHandler.prototype.getRegisteredMimetypes = function () {\r\n            return Object.keys(this.mime2LanguageId);\r\n        };\r\n        LanguageExtensionPointHandler.prototype.getRegisteredLanguageNames = function () {\r\n            return Object.keys(this.name2LanguageId);\r\n        };\r\n        LanguageExtensionPointHandler.prototype.getLanguageName = function (modeId) {\r\n            return this.id2Name[modeId] || null;\r\n        };\r\n        LanguageExtensionPointHandler.prototype.getModeIdForLanguageNameLowercase = function (languageNameLower) {\r\n            return this.lowerName2Id[languageNameLower] || null;\r\n        };\r\n        LanguageExtensionPointHandler.prototype.getConfigurationFiles = function (modeId) {\r\n            return this.id2ConfigurationFiles[modeId] || [];\r\n        };\r\n        LanguageExtensionPointHandler.prototype.getMimeForMode = function (theModeId) {\r\n            for (var mime in this.mime2LanguageId) {\r\n                if (this.mime2LanguageId.hasOwnProperty(mime)) {\r\n                    var modeId = this.mime2LanguageId[mime];\r\n                    if (modeId === theModeId) {\r\n                        return mime;\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        LanguageExtensionPointHandler.prototype.extractModeIds = function (commaSeparatedMimetypesOrCommaSeparatedIdsOrName) {\r\n            var _this = this;\r\n            if (!commaSeparatedMimetypesOrCommaSeparatedIdsOrName) {\r\n                return [];\r\n            }\r\n            return (commaSeparatedMimetypesOrCommaSeparatedIdsOrName.\r\n                split(',').\r\n                map(function (mimeTypeOrIdOrName) { return mimeTypeOrIdOrName.trim(); }).\r\n                map(function (mimeTypeOrIdOrName) {\r\n                return _this.mime2LanguageId[mimeTypeOrIdOrName] || mimeTypeOrIdOrName;\r\n            }).\r\n                filter(function (modeId) {\r\n                return _this.knownModeIds[modeId];\r\n            }));\r\n        };\r\n        LanguageExtensionPointHandler.prototype.getModeIdsFromLanguageName = function (languageName) {\r\n            if (!languageName) {\r\n                return [];\r\n            }\r\n            if (hasOwnProperty.call(this.name2LanguageId, languageName)) {\r\n                return [this.name2LanguageId[languageName]];\r\n            }\r\n            return [];\r\n        };\r\n        LanguageExtensionPointHandler.prototype.getModeIdsFromFilenameOrFirstLine = function (filename, firstLine) {\r\n            if (!filename && !firstLine) {\r\n                return [];\r\n            }\r\n            var mimeTypes = Mime.guessMimeTypes(filename, firstLine);\r\n            return this.extractModeIds(mimeTypes.join(','));\r\n        };\r\n        LanguageExtensionPointHandler.prototype.getCompatMode = function (modeId) {\r\n            return this.compatModes[modeId] || null;\r\n        };\r\n        LanguageExtensionPointHandler.prototype.getExtensions = function (languageName) {\r\n            return this.name2Extensions[languageName];\r\n        };\r\n        LanguageExtensionPointHandler.$_onLanguagesEverywhere = threadService_1.EverywhereAttr(LanguageExtensionPointHandler, LanguageExtensionPointHandler.prototype._onLanguagesEverywhere);\r\n        return LanguageExtensionPointHandler;\r\n    })();\r\n    // Create the handler, register it as a thread synchronizable object and as an ext point listener\r\n    var _instance = new LanguageExtensionPointHandler();\r\n    threadService_1.registerThreadSynchronizableObject(_instance);\r\n    languagesExtPoint.setHandler(function (extensions) {\r\n        _instance._handleLanguagesExtensionPointUsers(extensions);\r\n    });\r\n    // Export only a subset of the handler\r\n    exports.LanguageExtensions = _instance;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/editor/common/modes/modesRegistry\", [\"require\", \"exports\", 'vs/editor/common/modes/languageExtensionPoint', 'vs/base/common/strings', 'vs/platform/platform', 'vs/platform/instantiation/common/descriptors'], function (require, exports, languageExtensionPoint_1, Strings, platform_1, descriptors_1) {\r\n    // Define extension point ids\r\n    exports.Extensions = {\r\n        EditorModes: 'editor.modes'\r\n    };\r\n    var EditorModesRegistry = (function () {\r\n        function EditorModesRegistry() {\r\n            this.workerParticipants = [];\r\n        }\r\n        // --- worker participants registration\r\n        EditorModesRegistry.prototype.registerWorkerParticipant = function (modeId, descriptor) {\r\n            this.workerParticipants.push({\r\n                modeId: modeId,\r\n                descriptor: descriptor\r\n            });\r\n        };\r\n        EditorModesRegistry.prototype._getAllWorkerParticipants = function () {\r\n            return this.workerParticipants;\r\n        };\r\n        EditorModesRegistry.prototype._setWorkerParticipants = function (participants) {\r\n            this.workerParticipants = participants;\r\n        };\r\n        EditorModesRegistry.prototype.getWorkerParticipants = function (modeId) {\r\n            return this.workerParticipants.filter(function (p) { return p.modeId === modeId; }).map(function (p) { return p.descriptor; });\r\n        };\r\n        // --- modes registration\r\n        EditorModesRegistry.prototype.isRegisteredMode = function (mimetypeOrModeId) {\r\n            return languageExtensionPoint_1.LanguageExtensions.isRegisteredMode(mimetypeOrModeId);\r\n        };\r\n        EditorModesRegistry.prototype.getRegisteredModes = function () {\r\n            return languageExtensionPoint_1.LanguageExtensions.getRegisteredModes();\r\n        };\r\n        EditorModesRegistry.prototype.getRegisteredMimetypes = function () {\r\n            return languageExtensionPoint_1.LanguageExtensions.getRegisteredMimetypes();\r\n        };\r\n        EditorModesRegistry.prototype.getRegisteredLanguageNames = function () {\r\n            return languageExtensionPoint_1.LanguageExtensions.getRegisteredLanguageNames();\r\n        };\r\n        EditorModesRegistry.prototype.getExtensions = function (alias) {\r\n            return languageExtensionPoint_1.LanguageExtensions.getExtensions(alias);\r\n        };\r\n        EditorModesRegistry.prototype.getMimeForMode = function (modeId) {\r\n            return languageExtensionPoint_1.LanguageExtensions.getMimeForMode(modeId);\r\n        };\r\n        EditorModesRegistry.prototype.getLanguageName = function (modeId) {\r\n            return languageExtensionPoint_1.LanguageExtensions.getLanguageName(modeId);\r\n        };\r\n        EditorModesRegistry.prototype.getModeIdForLanguageName = function (alias) {\r\n            return languageExtensionPoint_1.LanguageExtensions.getModeIdForLanguageNameLowercase(alias);\r\n        };\r\n        EditorModesRegistry.prototype.registerMode = function (def) {\r\n            languageExtensionPoint_1.LanguageExtensions.registerCompatMode(def);\r\n        };\r\n        EditorModesRegistry.prototype.getModeId = function (commaSeparatedMimetypesOrCommaSeparatedIds) {\r\n            var modeIds = languageExtensionPoint_1.LanguageExtensions.extractModeIds(commaSeparatedMimetypesOrCommaSeparatedIds);\r\n            if (modeIds.length > 0) {\r\n                return modeIds[0];\r\n            }\r\n            return null;\r\n        };\r\n        return EditorModesRegistry;\r\n    })();\r\n    var mR = new EditorModesRegistry();\r\n    platform_1.Registry.add(exports.Extensions.EditorModes, mR);\r\n    function registerMode(def) {\r\n        mR.registerMode(def);\r\n    }\r\n    exports.registerMode = registerMode;\r\n    function registerWorkerParticipant(modeId, moduleId, ctorName) {\r\n        mR.registerWorkerParticipant(modeId, descriptors_1.createAsyncDescriptor0(moduleId, ctorName));\r\n    }\r\n    exports.registerWorkerParticipant = registerWorkerParticipant;\r\n    // TODO@Martin: find a better home for this code:\r\n    // TODO@Martin: modify suggestSupport to return a boolean if snippets should be presented or not\r\n    //       and turn this into a real registry\r\n    var _defaultSnippets = Object.create(null);\r\n    var _snippets = Object.create(null);\r\n    function registerDefaultSnippets(modeId, snippets) {\r\n        _defaultSnippets[modeId] = (_defaultSnippets[modeId] || []).concat(snippets);\r\n    }\r\n    exports.registerDefaultSnippets = registerDefaultSnippets;\r\n    function registerSnippets(modeId, path, snippets) {\r\n        var snippetsByMode = _snippets[modeId];\r\n        if (!snippetsByMode) {\r\n            _snippets[modeId] = snippetsByMode = {};\r\n        }\r\n        snippetsByMode[path] = snippets;\r\n    }\r\n    exports.registerSnippets = registerSnippets;\r\n    function getSnippets(model, position) {\r\n        var word = model.getWordAtPosition(position);\r\n        var currentPrefix = word ? word.word.substring(0, position.column - word.startColumn) : '';\r\n        var result = {\r\n            currentWord: currentPrefix,\r\n            suggestions: []\r\n        };\r\n        // to avoid that snippets are too prominent in the intellisense proposals:\r\n        // - force that the current prefix matches with the snippet prefix\r\n        // if there's no prfix, only show snippets at the beginning of the line, or after a whitespace\r\n        var filter = null;\r\n        if (currentPrefix.length === 0) {\r\n            if (position.column > 1) {\r\n                var previousCharacter = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column - 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n                if (previousCharacter.trim().length !== 0) {\r\n                    return result;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var lowerCasePrefix = currentPrefix.toLowerCase();\r\n            filter = function (p) {\r\n                return Strings.startsWith(p.label.toLowerCase(), lowerCasePrefix);\r\n            };\r\n        }\r\n        var modeId = model.getMode().getId();\r\n        var snippets = [];\r\n        var snipppetsByMode = _snippets[modeId];\r\n        if (snipppetsByMode) {\r\n            for (var s in snipppetsByMode) {\r\n                snippets = snippets.concat(snipppetsByMode[s]);\r\n            }\r\n        }\r\n        var defaultSnippets = _defaultSnippets[modeId];\r\n        if (defaultSnippets) {\r\n            snippets = snippets.concat(defaultSnippets);\r\n        }\r\n        result.suggestions = filter ? snippets.filter(filter) : snippets;\r\n        // if (result.suggestions.length > 0) {\r\n        // \tif (word) {\r\n        // \t\t// Push also the current word as first suggestion, to avoid unexpected snippet acceptance on Enter.\r\n        // \t\tresult.suggestions = result.suggestions.slice(0);\r\n        // \t\tresult.suggestions.unshift({\r\n        // \t\t\tcodeSnippet: word.word,\r\n        // \t\t\tlabel: word.word,\r\n        // \t\t\ttype: 'text'\r\n        // \t\t});\r\n        // \t}\r\n        // \tresult.incomplete = true;\r\n        // }\r\n        return result;\r\n    }\r\n    exports.getSnippets = getSnippets;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/editor/common/modes/monarch/monarchDefinition\", [\"require\", \"exports\", 'vs/base/common/winjs.base', 'vs/editor/common/modes/abstractMode'], function (require, exports, winjs_base_1, abstractMode_1) {\r\n    function createCommentsSupport(lexer) {\r\n        return {\r\n            commentsConfiguration: {\r\n                lineCommentTokens: [lexer.lineComment],\r\n                blockCommentStartToken: lexer.blockCommentStart,\r\n                blockCommentEndToken: lexer.blockCommentEnd\r\n            }\r\n        };\r\n    }\r\n    exports.createCommentsSupport = createCommentsSupport;\r\n    function createBracketElectricCharacterContribution(lexer) {\r\n        return {\r\n            brackets: lexer.standardBrackets,\r\n            regexBrackets: lexer.enhancedBrackets,\r\n            caseInsensitive: lexer.ignoreCase,\r\n            embeddedElectricCharacters: lexer.outdentTriggers.split('')\r\n        };\r\n    }\r\n    exports.createBracketElectricCharacterContribution = createBracketElectricCharacterContribution;\r\n    function createTokenTypeClassificationSupportContribution(lexer) {\r\n        return {\r\n            wordDefinition: lexer.wordDefinition\r\n        };\r\n    }\r\n    exports.createTokenTypeClassificationSupportContribution = createTokenTypeClassificationSupportContribution;\r\n    function createCharacterPairContribution(lexer) {\r\n        return {\r\n            autoClosingPairs: lexer.autoClosingPairs\r\n        };\r\n    }\r\n    exports.createCharacterPairContribution = createCharacterPairContribution;\r\n    function _addSuggestionsAtPosition(model, position, lexer, superSuggestions) {\r\n        var extra = lexer.suggestSupport.snippets;\r\n        if (!extra || extra.length === 0) {\r\n            return superSuggestions;\r\n        }\r\n        if (!superSuggestions) {\r\n            superSuggestions = [];\r\n        }\r\n        superSuggestions.push({\r\n            currentWord: model.getWordUntilPosition(position).word,\r\n            suggestions: extra.slice(0)\r\n        });\r\n        return superSuggestions;\r\n    }\r\n    function createOnEnterSupportOptions(lexer) {\r\n        return {\r\n            brackets: lexer.standardBrackets\r\n        };\r\n    }\r\n    exports.createOnEnterSupportOptions = createOnEnterSupportOptions;\r\n    function createSuggestSupport(modelService, mode, lexer) {\r\n        if (lexer.suggestSupport.textualCompletions && mode instanceof abstractMode_1.AbstractMode) {\r\n            return {\r\n                triggerCharacters: lexer.suggestSupport.triggerCharacters,\r\n                disableAutoTrigger: lexer.suggestSupport.disableAutoTrigger,\r\n                excludeTokens: [],\r\n                suggest: function (resource, position) { return mode.suggest(resource, position); },\r\n                composeSuggest: function (resource, position, superSuggestions) {\r\n                    return winjs_base_1.TPromise.as(_addSuggestionsAtPosition(modelService.getModel(resource), position, lexer, superSuggestions));\r\n                }\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                triggerCharacters: lexer.suggestSupport.triggerCharacters,\r\n                disableAutoTrigger: lexer.suggestSupport.disableAutoTrigger,\r\n                excludeTokens: [],\r\n                suggest: function (resource, position) {\r\n                    return winjs_base_1.TPromise.as(_addSuggestionsAtPosition(modelService.getModel(resource), position, lexer, null));\r\n                },\r\n                composeSuggest: function (resource, position, superSuggestions) {\r\n                    return winjs_base_1.TPromise.as(superSuggestions);\r\n                }\r\n            };\r\n        }\r\n    }\r\n    exports.createSuggestSupport = createSuggestSupport;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\ndefine(\"vs/editor/common/modes/monarch/monarchLexer\", [\"require\", \"exports\", 'vs/editor/common/modes/abstractState', 'vs/editor/common/modes/lineStream', 'vs/editor/common/modes/modesRegistry', 'vs/editor/common/modes/supports', 'vs/editor/common/modes/monarch/monarchCommon', 'vs/editor/common/modes', 'vs/platform/platform'], function (require, exports, abstractState_1, lineStream_1, ModesRegistry, Supports, MonarchCommonTypes, Modes, platform_1) {\r\n    var modesRegistry = platform_1.Registry.as(ModesRegistry.Extensions.EditorModes);\r\n    /**\r\n     * The MonarchLexer class implements a monaco lexer that highlights source code.\r\n     * It takes a compiled lexer to guide the tokenizer and maintains a stack of\r\n     * lexer states.\r\n     */\r\n    var MonarchLexer = (function (_super) {\r\n        __extends(MonarchLexer, _super);\r\n        function MonarchLexer(mode, lexer, stack, embeddedMode) {\r\n            _super.call(this, mode);\r\n            this.id = MonarchLexer.ID++; // for debugging, assigns unique id to each instance\r\n            this.lexer = lexer; // (compiled) lexer description\r\n            this.stack = (stack ? stack : [lexer.start]); // stack of states\r\n            this.embeddedMode = (embeddedMode ? embeddedMode : null); // are we scanning an embedded section?\r\n            // did we encounter an embedded start on this line?\r\n            // no need for cloning or equality since it is used only within a line\r\n            this.embeddedEntered = false;\r\n            // regular expression group matching\r\n            // these never need cloning or equality since they are only used within a line match\r\n            this.groupActions = null;\r\n            this.groupMatches = null;\r\n            this.groupMatched = null;\r\n            this.groupRule = null;\r\n        }\r\n        MonarchLexer.prototype.makeClone = function () {\r\n            return new MonarchLexer(this.getMode(), this.lexer, this.stack.slice(0), this.embeddedMode);\r\n        };\r\n        MonarchLexer.prototype.equals = function (other) {\r\n            if (!_super.prototype.equals.call(this, other)) {\r\n                return false;\r\n            }\r\n            if (!(other instanceof MonarchLexer))\r\n                return false;\r\n            var otherm = other;\r\n            if ((this.stack.length !== otherm.stack.length) || (this.lexer.name !== otherm.lexer.name) ||\r\n                (this.embeddedMode !== otherm.embeddedMode)) {\r\n                return false;\r\n            }\r\n            var idx;\r\n            for (idx in this.stack) {\r\n                if (this.stack.hasOwnProperty(idx)) {\r\n                    if (this.stack[idx] !== otherm.stack[idx])\r\n                        return false;\r\n                }\r\n            }\r\n            return true;\r\n        };\r\n        /**\r\n         * The main tokenizer: this function gets called by monaco to tokenize lines\r\n         * Note: we don't want to raise exceptions here and always keep going..\r\n         *\r\n         * TODO: there are many optimizations possible here for the common cases\r\n         * but for now I concentrated on functionality and correctness.\r\n         */\r\n        MonarchLexer.prototype.tokenize = function (stream, noConsumeIsOk) {\r\n            var stackLen0 = this.stack.length; // these are saved to check progress\r\n            var groupLen0 = 0;\r\n            var state = this.stack[0]; // the current state\r\n            this.embeddedEntered = false;\r\n            var matches = null;\r\n            var matched = null;\r\n            var action = null;\r\n            var next = null;\r\n            var rule = null;\r\n            // check if we need to process group matches first\r\n            if (this.groupActions) {\r\n                groupLen0 = this.groupActions.length;\r\n                matches = this.groupMatches;\r\n                matched = this.groupMatched.shift();\r\n                action = this.groupActions.shift();\r\n                rule = this.groupRule;\r\n                // cleanup if necessary\r\n                if (this.groupActions.length === 0) {\r\n                    this.groupActions = null;\r\n                    this.groupMatches = null;\r\n                    this.groupMatched = null;\r\n                    this.groupRule = null;\r\n                }\r\n            }\r\n            else {\r\n                // nothing to do\r\n                if (stream.eos()) {\r\n                    return { type: '' };\r\n                }\r\n                // get the entire line\r\n                var line = stream.advanceToEOS();\r\n                stream.goBack(line.length);\r\n                // get the rules for this state\r\n                var rules = this.lexer.tokenizer[state];\r\n                if (!rules)\r\n                    rules = MonarchCommonTypes.findRules(this.lexer, state); // do parent matching\r\n                if (!rules) {\r\n                    MonarchCommonTypes.throwError(this.lexer, 'tokenizer state is not defined: ' + state);\r\n                }\r\n                else {\r\n                    // try each rule until we match\r\n                    rule = null;\r\n                    var pos = stream.pos();\r\n                    var idx;\r\n                    for (idx in rules) {\r\n                        if (rules.hasOwnProperty(idx)) {\r\n                            rule = rules[idx];\r\n                            if (pos === 0 || !rule.matchOnlyAtLineStart) {\r\n                                matches = line.match(rule.regex);\r\n                                if (matches) {\r\n                                    matched = matches[0];\r\n                                    action = rule.action;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // We matched 'rule' with 'matches' and 'action'\r\n            if (!matches) {\r\n                matches = [''];\r\n                matched = '';\r\n            }\r\n            if (!action) {\r\n                // bad: we didn't match anything, and there is no action to take\r\n                // we need to advance the stream or we get progress trouble\r\n                if (!stream.eos()) {\r\n                    matches = [stream.peek()];\r\n                    matched = matches[0];\r\n                }\r\n                action = this.lexer.defaultToken;\r\n            }\r\n            // advance stream\r\n            stream.advance(matched.length);\r\n            // maybe call action function (used for 'cases')\r\n            while (action.test) {\r\n                var callres = action.test(matched, matches, state, stream.eos());\r\n                action = callres;\r\n            }\r\n            // set the result: either a string or an array of actions\r\n            var result = null;\r\n            if (typeof (action) === 'string' || Array.isArray(action)) {\r\n                result = action;\r\n            }\r\n            else if (action.group) {\r\n                result = action.group;\r\n            }\r\n            else if (action.token !== null && action.token !== undefined) {\r\n                result = action.token;\r\n                // do $n replacements?\r\n                if (action.tokenSubst) {\r\n                    result = MonarchCommonTypes.substituteMatches(this.lexer, result, matched, matches, state);\r\n                }\r\n                // enter embedded mode?\r\n                if (action.nextEmbedded) {\r\n                    if (action.nextEmbedded === '@pop') {\r\n                        if (!this.embeddedMode) {\r\n                            MonarchCommonTypes.throwError(this.lexer, 'cannot pop embedded mode if not inside one');\r\n                        }\r\n                        this.embeddedMode = null;\r\n                    }\r\n                    else if (this.embeddedMode) {\r\n                        MonarchCommonTypes.throwError(this.lexer, 'cannot enter embedded mode from within an embedded mode');\r\n                    }\r\n                    else {\r\n                        this.embeddedMode = MonarchCommonTypes.substituteMatches(this.lexer, action.nextEmbedded, matched, matches, state);\r\n                        // substitute language alias to known modes to support syntax highlighting\r\n                        var embeddedMode = modesRegistry.getModeIdForLanguageName(this.embeddedMode);\r\n                        if (this.embeddedMode && embeddedMode) {\r\n                            this.embeddedMode = embeddedMode;\r\n                        }\r\n                        this.embeddedEntered = true;\r\n                    }\r\n                }\r\n                // state transformations\r\n                if (action.goBack) {\r\n                    stream.goBack(action.goBack);\r\n                }\r\n                if (action.switchTo && typeof action.switchTo === 'string') {\r\n                    var nextState = MonarchCommonTypes.substituteMatches(this.lexer, action.switchTo, matched, matches, state); // switch state without a push...\r\n                    if (nextState[0] === '@')\r\n                        nextState = nextState.substr(1); // peel off starting '@'\r\n                    if (!MonarchCommonTypes.findRules(this.lexer, nextState)) {\r\n                        MonarchCommonTypes.throwError(this.lexer, 'trying to switch to a state \\'' + nextState + '\\' that is undefined in rule: ' + rule.name);\r\n                    }\r\n                    else {\r\n                        this.stack[0] = nextState;\r\n                    }\r\n                    next = null;\r\n                }\r\n                else if (action.transform && typeof action.transform === 'function') {\r\n                    this.stack = action.transform(this.stack); // if you need to do really funky stuff...\r\n                    next = null;\r\n                }\r\n                else if (action.next) {\r\n                    if (action.next === '@push') {\r\n                        if (this.stack.length >= this.lexer.maxStack) {\r\n                            MonarchCommonTypes.throwError(this.lexer, 'maximum tokenizer stack size reached: [' +\r\n                                this.stack[0] + ',' + this.stack[1] + ',...,' +\r\n                                this.stack[this.stack.length - 2] + ',' + this.stack[this.stack.length - 1] + ']');\r\n                        }\r\n                        else {\r\n                            this.stack.unshift(state);\r\n                        }\r\n                    }\r\n                    else if (action.next === '@pop') {\r\n                        if (this.stack.length <= 1) {\r\n                            MonarchCommonTypes.throwError(this.lexer, 'trying to pop an empty stack in rule: ' + rule.name);\r\n                        }\r\n                        else {\r\n                            this.stack.shift();\r\n                        }\r\n                    }\r\n                    else if (action.next === '@popall') {\r\n                        if (this.stack.length > 1)\r\n                            this.stack = [this.stack[this.stack.length - 1]];\r\n                    }\r\n                    else {\r\n                        var nextState = MonarchCommonTypes.substituteMatches(this.lexer, action.next, matched, matches, state);\r\n                        if (nextState[0] === '@')\r\n                            nextState = nextState.substr(1); // peel off starting '@'\r\n                        if (!MonarchCommonTypes.findRules(this.lexer, nextState)) {\r\n                            MonarchCommonTypes.throwError(this.lexer, 'trying to set a next state \\'' + nextState + '\\' that is undefined in rule: ' + rule.name);\r\n                        }\r\n                        else {\r\n                            this.stack.unshift(nextState);\r\n                        }\r\n                    }\r\n                }\r\n                if (action.log && typeof (action.log) === 'string') {\r\n                    MonarchCommonTypes.log(this.lexer, this.lexer.displayName + ': ' + MonarchCommonTypes.substituteMatches(this.lexer, action.log, matched, matches, state));\r\n                }\r\n            }\r\n            // check result\r\n            if (result === null) {\r\n                MonarchCommonTypes.throwError(this.lexer, 'lexer rule has no well-defined action in rule: ' + rule.name);\r\n                result = this.lexer.defaultToken;\r\n            }\r\n            // is the result a group match?\r\n            if (Array.isArray(result)) {\r\n                if (this.groupActions && this.groupActions.length > 0) {\r\n                    MonarchCommonTypes.throwError(this.lexer, 'groups cannot be nested: ' + rule.name);\r\n                }\r\n                if (matches.length !== result.length + 1) {\r\n                    MonarchCommonTypes.throwError(this.lexer, 'matched number of groups does not match the number of actions in rule: ' + rule.name);\r\n                }\r\n                var totalLen = 0;\r\n                for (var i = 1; i < matches.length; i++) {\r\n                    totalLen += matches[i].length;\r\n                }\r\n                if (totalLen !== matched.length) {\r\n                    MonarchCommonTypes.throwError(this.lexer, 'with groups, all characters should be matched in consecutive groups in rule: ' + rule.name);\r\n                }\r\n                this.groupMatches = matches;\r\n                this.groupMatched = matches.slice(1);\r\n                this.groupActions = result.slice(0);\r\n                this.groupRule = rule;\r\n                stream.goBack(matched.length);\r\n                return this.tokenize(stream); // call recursively to initiate first result match\r\n            }\r\n            else {\r\n                // check for '@rematch'\r\n                if (result === '@rematch') {\r\n                    stream.goBack(matched.length);\r\n                    matched = ''; // better set the next state too..\r\n                    matches = null;\r\n                    result = '';\r\n                }\r\n                // check progress\r\n                if (matched.length === 0) {\r\n                    if (stackLen0 !== this.stack.length || state !== this.stack[0]\r\n                        || (!this.groupActions ? 0 : this.groupActions.length) !== groupLen0) {\r\n                        if (!noConsumeIsOk) {\r\n                            return this.tokenize(stream); // tokenize again in the new state\r\n                        }\r\n                    }\r\n                    else {\r\n                        MonarchCommonTypes.throwError(this.lexer, 'no progress in tokenizer in rule: ' + rule.name);\r\n                        stream.advanceToEOS(); // must make progress or editor loops\r\n                    }\r\n                }\r\n                // return the result (and check for brace matching)\r\n                // todo: for efficiency we could pre-sanitize tokenPostfix and substitutions\r\n                if (result.indexOf('@brackets') === 0) {\r\n                    var rest = result.substr('@brackets'.length);\r\n                    var bracket = findBracket(this.lexer, matched);\r\n                    if (!bracket) {\r\n                        MonarchCommonTypes.throwError(this.lexer, '@brackets token returned but no bracket defined as: ' + matched);\r\n                        bracket = { token: '', bracketType: Modes.Bracket.None };\r\n                    }\r\n                    return { type: MonarchCommonTypes.sanitize(bracket.token + rest), bracket: bracket.bracketType };\r\n                }\r\n                else {\r\n                    var token = (result === '' ? '' : result + this.lexer.tokenPostfix);\r\n                    return { type: MonarchCommonTypes.sanitize(token), bracket: action.bracket };\r\n                }\r\n            }\r\n        };\r\n        MonarchLexer.ID = 0;\r\n        return MonarchLexer;\r\n    })(abstractState_1.AbstractState);\r\n    exports.MonarchLexer = MonarchLexer;\r\n    /**\r\n     * Searches for a bracket in the 'brackets' attribute that matches the input.\r\n     */\r\n    function findBracket(lexer, matched) {\r\n        if (!matched)\r\n            return null;\r\n        matched = MonarchCommonTypes.fixCase(lexer, matched);\r\n        var brackets = lexer.brackets;\r\n        for (var i = 0; i < brackets.length; i++) {\r\n            var bracket = brackets[i];\r\n            if (bracket.open === matched) {\r\n                return { token: bracket.token, bracketType: Modes.Bracket.Open };\r\n            }\r\n            else if (bracket.close === matched) {\r\n                return { token: bracket.token, bracketType: Modes.Bracket.Close };\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    function createTokenizationSupport(modeService, mode, lexer) {\r\n        return new Supports.TokenizationSupport(mode, {\r\n            getInitialState: function () {\r\n                return new MonarchLexer(mode, lexer);\r\n            },\r\n            enterNestedMode: function (state) {\r\n                if (state instanceof MonarchLexer) {\r\n                    return state.embeddedEntered;\r\n                }\r\n                return false;\r\n            },\r\n            getNestedMode: function (rawState) {\r\n                var mime = rawState.embeddedMode;\r\n                if (!modesRegistry.isRegisteredMode(mime)) {\r\n                    // unknown mode\r\n                    return {\r\n                        mode: modeService.getMode('text/plain'),\r\n                        missingModePromise: null\r\n                    };\r\n                }\r\n                var mode = modeService.getMode(mime);\r\n                if (mode) {\r\n                    // mode is available\r\n                    return {\r\n                        mode: mode,\r\n                        missingModePromise: null\r\n                    };\r\n                }\r\n                // mode is not yet loaded\r\n                return {\r\n                    mode: modeService.getMode('text/plain'),\r\n                    missingModePromise: modeService.getOrCreateMode(mime).then(function () { return null; })\r\n                };\r\n            },\r\n            getLeavingNestedModeData: function (line, state) {\r\n                // state = state.clone();\r\n                var mstate = state.clone();\r\n                var stream = new lineStream_1.LineStream(line);\r\n                while (!stream.eos() && mstate.embeddedMode) {\r\n                    mstate.tokenize(stream, true); // allow no consumption for @rematch\r\n                }\r\n                if (mstate.embeddedMode)\r\n                    return null; // don't leave yet\r\n                var end = stream.pos();\r\n                return {\r\n                    nestedModeBuffer: line.substring(0, end),\r\n                    bufferAfterNestedMode: line.substring(end),\r\n                    stateAfterNestedMode: mstate\r\n                };\r\n            }\r\n        }, lexer.usesEmbedded, false);\r\n    }\r\n    exports.createTokenizationSupport = createTokenizationSupport;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") return Reflect.decorate(decorators, target, key, desc);\r\n    switch (arguments.length) {\r\n        case 2: return decorators.reduceRight(function(o, d) { return (d && d(o)) || o; }, target);\r\n        case 3: return decorators.reduceRight(function(o, d) { return (d && d(target, key)), void 0; }, void 0);\r\n        case 4: return decorators.reduceRight(function(o, d) { return (d && d(target, key, o)) || o; }, desc);\r\n    }\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\ndefine(\"vs/editor/common/services/modeServiceImpl\", [\"require\", \"exports\", 'vs/base/common/winjs.base', 'vs/editor/common/services/modeService', 'vs/editor/common/modes/supports', 'vs/editor/common/modes/abstractMode', 'vs/editor/common/modes/languageExtensionPoint', 'vs/base/common/errors', 'vs/platform/thread/common/thread', 'vs/base/common/objects', 'vs/editor/common/modes/monarch/monarchDefinition', 'vs/editor/common/modes/monarch/monarchLexer', 'vs/editor/common/modes/monarch/monarchCompile', 'vs/platform/platform', 'vs/editor/common/modes/modesRegistry', 'vs/editor/common/modes/supports/onEnter', 'vs/base/common/lifecycle'], function (require, exports, winjs_base_1, modeService_1, Supports, abstractMode_1, languageExtensionPoint_1, Errors, thread_1, Objects, MonarchDefinition, monarchLexer_1, monarchCompile_1, platform_1, modesRegistry_1, onEnter_1, lifecycle_1) {\r\n    var ModeServiceImpl = (function () {\r\n        function ModeServiceImpl(threadService, pluginService) {\r\n            this.serviceId = modeService_1.IModeService;\r\n            this._threadService = threadService;\r\n            this._pluginService = pluginService;\r\n            this._activationPromises = {};\r\n            this._instantiatedModes = {};\r\n            this._frankensteinModes = {};\r\n            this._config = {};\r\n        }\r\n        ModeServiceImpl.prototype.getConfigurationForMode = function (modeId) {\r\n            return this._config[modeId] || {};\r\n        };\r\n        ModeServiceImpl.prototype.configureMode = function (mimetype, options) {\r\n            var modeId = this.getModeId(mimetype);\r\n            if (modeId) {\r\n                this.configureModeById(modeId, options);\r\n            }\r\n        };\r\n        ModeServiceImpl.prototype.configureModeById = function (modeId, options) {\r\n            var previousOptions = this._config[modeId] || {};\r\n            var newOptions = Objects.mixin(Objects.clone(previousOptions), options);\r\n            if (Objects.equals(previousOptions, newOptions)) {\r\n                // This configure call is a no-op\r\n                return;\r\n            }\r\n            this._config[modeId] = newOptions;\r\n            var mode = this.getMode(modeId);\r\n            if (mode && mode.configSupport) {\r\n                mode.configSupport.configure(this.getConfigurationForMode(modeId));\r\n            }\r\n        };\r\n        ModeServiceImpl.prototype.configureAllModes = function (config) {\r\n            var _this = this;\r\n            if (!config) {\r\n                return;\r\n            }\r\n            var modeRegistry = platform_1.Registry.as(modesRegistry_1.Extensions.EditorModes);\r\n            var modes = modeRegistry.getRegisteredModes();\r\n            modes.forEach(function (modeIdentifier) {\r\n                var configuration = config[modeIdentifier];\r\n                _this.configureModeById(modeIdentifier, configuration);\r\n            });\r\n        };\r\n        // --- instantiation\r\n        ModeServiceImpl.prototype.lookup = function (commaSeparatedMimetypesOrCommaSeparatedIds) {\r\n            var r = [];\r\n            var modeIds = languageExtensionPoint_1.LanguageExtensions.extractModeIds(commaSeparatedMimetypesOrCommaSeparatedIds);\r\n            for (var i = 0; i < modeIds.length; i++) {\r\n                var modeId = modeIds[i];\r\n                r.push({\r\n                    modeId: modeId,\r\n                    isInstantiated: this._instantiatedModes.hasOwnProperty(modeId)\r\n                });\r\n            }\r\n            return r;\r\n        };\r\n        ModeServiceImpl.prototype.getMode = function (commaSeparatedMimetypesOrCommaSeparatedIds) {\r\n            var modeIds = languageExtensionPoint_1.LanguageExtensions.extractModeIds(commaSeparatedMimetypesOrCommaSeparatedIds);\r\n            var isPlainText = false;\r\n            for (var i = 0; i < modeIds.length; i++) {\r\n                if (this._instantiatedModes.hasOwnProperty(modeIds[i])) {\r\n                    return this._instantiatedModes[modeIds[i]];\r\n                }\r\n                isPlainText = isPlainText || (modeIds[i] === 'plaintext');\r\n            }\r\n            if (isPlainText) {\r\n                // Try to do it synchronously\r\n                var r = null;\r\n                this.getOrCreateMode(commaSeparatedMimetypesOrCommaSeparatedIds).then(function (mode) {\r\n                    r = mode;\r\n                }).done(null, Errors.onUnexpectedError);\r\n                return r;\r\n            }\r\n        };\r\n        ModeServiceImpl.prototype.getModeId = function (commaSeparatedMimetypesOrCommaSeparatedIds) {\r\n            var modeIds = languageExtensionPoint_1.LanguageExtensions.extractModeIds(commaSeparatedMimetypesOrCommaSeparatedIds);\r\n            if (modeIds.length > 0) {\r\n                return modeIds[0];\r\n            }\r\n            return null;\r\n        };\r\n        ModeServiceImpl.prototype.getModeIdByLanguageName = function (languageName) {\r\n            var modeIds = languageExtensionPoint_1.LanguageExtensions.getModeIdsFromLanguageName(languageName);\r\n            if (modeIds.length > 0) {\r\n                return modeIds[0];\r\n            }\r\n            return null;\r\n        };\r\n        ModeServiceImpl.prototype.getModeIdByFilenameOrFirstLine = function (filename, firstLine) {\r\n            var modeIds = languageExtensionPoint_1.LanguageExtensions.getModeIdsFromFilenameOrFirstLine(filename, firstLine);\r\n            if (modeIds.length > 0) {\r\n                return modeIds[0];\r\n            }\r\n            return null;\r\n        };\r\n        ModeServiceImpl.prototype.getOrCreateMode = function (commaSeparatedMimetypesOrCommaSeparatedIds) {\r\n            var _this = this;\r\n            return this._pluginService.onReady().then(function () {\r\n                var modeId = _this.getModeId(commaSeparatedMimetypesOrCommaSeparatedIds);\r\n                // Fall back to plain text if no mode was found\r\n                return _this._getOrCreateMode(modeId || 'plaintext');\r\n            });\r\n        };\r\n        ModeServiceImpl.prototype.getOrCreateModeByLanguageName = function (languageName) {\r\n            var _this = this;\r\n            return this._pluginService.onReady().then(function () {\r\n                var modeId = _this.getModeIdByLanguageName(languageName);\r\n                // Fall back to plain text if no mode was found\r\n                return _this._getOrCreateMode(modeId || 'plaintext');\r\n            });\r\n        };\r\n        ModeServiceImpl.prototype.getOrCreateModeByFilenameOrFirstLine = function (filename, firstLine) {\r\n            var _this = this;\r\n            return this._pluginService.onReady().then(function () {\r\n                var modeId = _this.getModeIdByFilenameOrFirstLine(filename, firstLine);\r\n                // Fall back to plain text if no mode was found\r\n                return _this._getOrCreateMode(modeId || 'plaintext');\r\n            });\r\n        };\r\n        ModeServiceImpl.prototype._getOrCreateMode = function (modeId) {\r\n            var _this = this;\r\n            if (this._instantiatedModes.hasOwnProperty(modeId)) {\r\n                return winjs_base_1.TPromise.as(this._instantiatedModes[modeId]);\r\n            }\r\n            if (this._activationPromises.hasOwnProperty(modeId)) {\r\n                return this._activationPromises[modeId];\r\n            }\r\n            var c, e;\r\n            var promise = new winjs_base_1.TPromise(function (cc, ee, pp) { c = cc; e = ee; });\r\n            this._activationPromises[modeId] = promise;\r\n            this._createMode(modeId).then(function (mode) {\r\n                _this._instantiatedModes[modeId] = mode;\r\n                delete _this._activationPromises[modeId];\r\n                return _this._instantiatedModes[modeId];\r\n            }).then(c, e);\r\n            return promise;\r\n        };\r\n        ModeServiceImpl.prototype._createMode = function (modeId) {\r\n            var _this = this;\r\n            var activationEvent = 'onLanguage:' + modeId;\r\n            var compatModeAsyncDescriptor = languageExtensionPoint_1.LanguageExtensions.getCompatMode(modeId);\r\n            if (compatModeAsyncDescriptor) {\r\n                return this._pluginService.activateByEvent(activationEvent).then(function (_) {\r\n                    var modeDescriptor = _this._createModeDescriptor(modeId);\r\n                    return _this._threadService.createInstance(compatModeAsyncDescriptor, modeDescriptor);\r\n                }).then(function (compatMode) {\r\n                    if (compatMode.configSupport) {\r\n                        compatMode.configSupport.configure(_this.getConfigurationForMode(modeId));\r\n                    }\r\n                    return compatMode;\r\n                });\r\n            }\r\n            else {\r\n                var frankensteinMode = this._getOrCreateFrankensteinMode(modeId);\r\n                this._pluginService.activateByEvent(activationEvent).done(null, Errors.onUnexpectedError);\r\n                return winjs_base_1.TPromise.as(frankensteinMode);\r\n            }\r\n        };\r\n        ModeServiceImpl.prototype._getOrCreateFrankensteinMode = function (modeId) {\r\n            if (!this._frankensteinModes.hasOwnProperty(modeId)) {\r\n                var modeDescriptor = this._createModeDescriptor(modeId);\r\n                this._frankensteinModes[modeId] = this._threadService.createInstance(abstractMode_1.FrankensteinMode, modeDescriptor);\r\n            }\r\n            return this._frankensteinModes[modeId];\r\n        };\r\n        ModeServiceImpl.prototype._createModeDescriptor = function (modeId) {\r\n            var modesRegistry = platform_1.Registry.as(modesRegistry_1.Extensions.EditorModes);\r\n            var workerParticipants = modesRegistry.getWorkerParticipants(modeId);\r\n            return {\r\n                id: modeId,\r\n                workerParticipants: workerParticipants\r\n            };\r\n        };\r\n        ModeServiceImpl.prototype.registerModeSupport = function (modeId, support, callback) {\r\n            var promise = this._getOrCreateMode(modeId).then(function (mode) {\r\n                if (mode.registerSupport) {\r\n                    return mode.registerSupport(support, callback);\r\n                }\r\n                else {\r\n                    console.warn('Cannot register support ' + support + ' on mode ' + modeId + ' because it is not a Frankenstein mode');\r\n                    return lifecycle_1.empty;\r\n                }\r\n            });\r\n            return {\r\n                dispose: function () {\r\n                    promise.done(function (disposable) { return disposable.dispose(); }, null);\r\n                }\r\n            };\r\n        };\r\n        ModeServiceImpl.prototype.doRegisterMonarchDefinition = function (modeId, lexer) {\r\n            var _this = this;\r\n            return lifecycle_1.combinedDispose(this.registerTokenizationSupport(modeId, function (mode) {\r\n                return monarchLexer_1.createTokenizationSupport(_this, mode, lexer);\r\n            }), this.registerDeclarativeCommentsSupport(modeId, MonarchDefinition.createCommentsSupport(lexer)), this.registerDeclarativeElectricCharacterSupport(modeId, MonarchDefinition.createBracketElectricCharacterContribution(lexer)), this.registerDeclarativeTokenTypeClassificationSupport(modeId, MonarchDefinition.createTokenTypeClassificationSupportContribution(lexer)), this.registerDeclarativeCharacterPairSupport(modeId, MonarchDefinition.createCharacterPairContribution(lexer)), this.registerDeclarativeOnEnterSupport(modeId, MonarchDefinition.createOnEnterSupportOptions(lexer)));\r\n        };\r\n        ModeServiceImpl.prototype.registerMonarchDefinition = function (modeId, language) {\r\n            var lexer = monarchCompile_1.compile(Objects.clone(language));\r\n            return this.doRegisterMonarchDefinition(modeId, lexer);\r\n        };\r\n        ModeServiceImpl.prototype.registerDeclarativeCharacterPairSupport = function (modeId, support) {\r\n            return this.registerModeSupport(modeId, 'characterPairSupport', function (mode) { return new Supports.CharacterPairSupport(mode, support); });\r\n        };\r\n        ModeServiceImpl.prototype.registerCodeLensSupport = function (modeId, support) {\r\n            return this.registerModeSupport(modeId, 'codeLensSupport', function (mode) { return support; });\r\n        };\r\n        ModeServiceImpl.prototype.registerDeclarativeCommentsSupport = function (modeId, support) {\r\n            return this.registerModeSupport(modeId, 'commentsSupport', function (mode) { return new Supports.CommentsSupport(support); });\r\n        };\r\n        ModeServiceImpl.prototype.registerDeclarativeDeclarationSupport = function (modeId, contribution) {\r\n            return this.registerModeSupport(modeId, 'declarationSupport', function (mode) { return new Supports.DeclarationSupport(mode, contribution); });\r\n        };\r\n        ModeServiceImpl.prototype.registerDeclarativeElectricCharacterSupport = function (modeId, support) {\r\n            return this.registerModeSupport(modeId, 'electricCharacterSupport', function (mode) { return new Supports.BracketElectricCharacterSupport(mode, support); });\r\n        };\r\n        ModeServiceImpl.prototype.registerExtraInfoSupport = function (modeId, support) {\r\n            return this.registerModeSupport(modeId, 'extraInfoSupport', function (mode) { return support; });\r\n        };\r\n        ModeServiceImpl.prototype.registerFormattingSupport = function (modeId, support) {\r\n            return this.registerModeSupport(modeId, 'formattingSupport', function (mode) { return support; });\r\n        };\r\n        ModeServiceImpl.prototype.registerInplaceReplaceSupport = function (modeId, support) {\r\n            return this.registerModeSupport(modeId, 'inplaceReplaceSupport', function (mode) { return support; });\r\n        };\r\n        ModeServiceImpl.prototype.registerOccurrencesSupport = function (modeId, support) {\r\n            return this.registerModeSupport(modeId, 'occurrencesSupport', function (mode) { return support; });\r\n        };\r\n        ModeServiceImpl.prototype.registerOutlineSupport = function (modeId, support) {\r\n            return this.registerModeSupport(modeId, 'outlineSupport', function (mode) { return support; });\r\n        };\r\n        ModeServiceImpl.prototype.registerDeclarativeParameterHintsSupport = function (modeId, support) {\r\n            return this.registerModeSupport(modeId, 'parameterHintsSupport', function (mode) { return new Supports.ParameterHintsSupport(mode, support); });\r\n        };\r\n        ModeServiceImpl.prototype.registerQuickFixSupport = function (modeId, support) {\r\n            return this.registerModeSupport(modeId, 'quickFixSupport', function (mode) { return support; });\r\n        };\r\n        ModeServiceImpl.prototype.registerDeclarativeReferenceSupport = function (modeId, contribution) {\r\n            return this.registerModeSupport(modeId, 'referenceSupport', function (mode) { return new Supports.ReferenceSupport(mode, contribution); });\r\n        };\r\n        ModeServiceImpl.prototype.registerRenameSupport = function (modeId, support) {\r\n            return this.registerModeSupport(modeId, 'renameSupport', function (mode) { return support; });\r\n        };\r\n        ModeServiceImpl.prototype.registerDeclarativeSuggestSupport = function (modeId, declaration) {\r\n            return this.registerModeSupport(modeId, 'suggestSupport', function (mode) { return new Supports.SuggestSupport(mode, declaration); });\r\n        };\r\n        ModeServiceImpl.prototype.registerTokenizationSupport = function (modeId, callback) {\r\n            return this.registerModeSupport(modeId, 'tokenizationSupport', callback);\r\n        };\r\n        ModeServiceImpl.prototype.registerDeclarativeTokenTypeClassificationSupport = function (modeId, support) {\r\n            return this.registerModeSupport(modeId, 'tokenTypeClassificationSupport', function (mode) { return new Supports.TokenTypeClassificationSupport(support); });\r\n        };\r\n        ModeServiceImpl.prototype.registerDeclarativeOnEnterSupport = function (modeId, opts) {\r\n            return this.registerModeSupport(modeId, 'onEnterSupport', function (mode) { return new onEnter_1.OnEnterSupport(modeId, opts); });\r\n        };\r\n        return ModeServiceImpl;\r\n    })();\r\n    exports.ModeServiceImpl = ModeServiceImpl;\r\n    var MainThreadModeServiceImpl = (function (_super) {\r\n        __extends(MainThreadModeServiceImpl, _super);\r\n        function MainThreadModeServiceImpl(threadService, pluginService, modelService) {\r\n            _super.call(this, threadService, pluginService);\r\n            this._modelService = modelService;\r\n            this._hasInitialized = false;\r\n        }\r\n        MainThreadModeServiceImpl.prototype._getModeServiceWorkerHelper = function () {\r\n            var r = this._threadService.getRemotable(ModeServiceWorkerHelper);\r\n            if (!this._hasInitialized) {\r\n                this._hasInitialized = true;\r\n                var modeRegistry = platform_1.Registry.as(modesRegistry_1.Extensions.EditorModes);\r\n                r.initialize(modeRegistry._getAllWorkerParticipants());\r\n            }\r\n            return r;\r\n        };\r\n        MainThreadModeServiceImpl.prototype.configureModeById = function (modeId, options) {\r\n            this._getModeServiceWorkerHelper().configureModeById(modeId, options);\r\n            _super.prototype.configureModeById.call(this, modeId, options);\r\n        };\r\n        MainThreadModeServiceImpl.prototype._createMode = function (modeId) {\r\n            // Instantiate mode also in worker\r\n            this._getModeServiceWorkerHelper().instantiateMode(modeId);\r\n            return _super.prototype._createMode.call(this, modeId);\r\n        };\r\n        MainThreadModeServiceImpl.prototype.registerModeSupport = function (modeId, support, callback) {\r\n            // Since there is a code path that leads to Frankenstein mode instantiation, instantiate mode also in worker\r\n            this._getModeServiceWorkerHelper().instantiateMode(modeId);\r\n            return _super.prototype.registerModeSupport.call(this, modeId, support, callback);\r\n        };\r\n        MainThreadModeServiceImpl.prototype.registerMonarchDefinition = function (modeId, language) {\r\n            var _this = this;\r\n            this._getModeServiceWorkerHelper().registerMonarchDefinition(modeId, language);\r\n            var lexer = monarchCompile_1.compile(Objects.clone(language));\r\n            return lifecycle_1.combinedDispose(_super.prototype.doRegisterMonarchDefinition.call(this, modeId, lexer), this.registerModeSupport(modeId, 'suggestSupport', function (mode) {\r\n                return new Supports.ComposableSuggestSupport(mode, MonarchDefinition.createSuggestSupport(_this._modelService, mode, lexer));\r\n            }));\r\n        };\r\n        return MainThreadModeServiceImpl;\r\n    })(ModeServiceImpl);\r\n    exports.MainThreadModeServiceImpl = MainThreadModeServiceImpl;\r\n    var ModeServiceWorkerHelper = (function () {\r\n        function ModeServiceWorkerHelper(modeService) {\r\n            this._modeService = modeService;\r\n        }\r\n        ModeServiceWorkerHelper.prototype.initialize = function (workerParticipants) {\r\n            var modeRegistry = platform_1.Registry.as(modesRegistry_1.Extensions.EditorModes);\r\n            modeRegistry._setWorkerParticipants(workerParticipants);\r\n        };\r\n        ModeServiceWorkerHelper.prototype.instantiateMode = function (modeId) {\r\n            this._modeService.getOrCreateMode(modeId).done(null, Errors.onUnexpectedError);\r\n        };\r\n        ModeServiceWorkerHelper.prototype.configureModeById = function (modeId, options) {\r\n            this._modeService.configureMode(modeId, options);\r\n        };\r\n        ModeServiceWorkerHelper.prototype.registerMonarchDefinition = function (modeId, language) {\r\n            this._modeService.registerMonarchDefinition(modeId, language);\r\n        };\r\n        ModeServiceWorkerHelper = __decorate([\r\n            thread_1.Remotable.WorkerContext('ModeServiceWorkerHelper', thread_1.ThreadAffinity.All),\r\n            __param(0, modeService_1.IModeService)\r\n        ], ModeServiceWorkerHelper);\r\n        return ModeServiceWorkerHelper;\r\n    })();\r\n    exports.ModeServiceWorkerHelper = ModeServiceWorkerHelper;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/platform/thread/common/abstractThreadService\", [\"require\", \"exports\", 'vs/base/common/winjs.base', 'vs/base/common/remote', 'vs/base/common/types', 'vs/platform/thread/common/thread', 'vs/platform/thread/common/threadService', 'vs/platform/instantiation/common/descriptors'], function (require, exports, winjs_base_1, remote, Types, thread_1, threadService_1, descriptors_1) {\r\n    var DynamicProxy = (function () {\r\n        function DynamicProxy(proxyDefinition, disposeDelegate) {\r\n            this._proxyDefinition = proxyDefinition;\r\n            this._disposeDelegate = disposeDelegate;\r\n        }\r\n        DynamicProxy.prototype.dispose = function () {\r\n            return this._disposeDelegate();\r\n        };\r\n        DynamicProxy.prototype.getProxyDefinition = function () {\r\n            return this._proxyDefinition;\r\n        };\r\n        return DynamicProxy;\r\n    })();\r\n    var AbstractThreadService = (function () {\r\n        function AbstractThreadService(isInMainThread) {\r\n            this.isInMainThread = isInMainThread;\r\n            this._boundObjects = {};\r\n            this._pendingObjects = [];\r\n            this._localObjMap = Object.create(null);\r\n            this._proxyObjMap = Object.create(null);\r\n        }\r\n        AbstractThreadService.generateDynamicProxyId = function () {\r\n            return String(++this._LAST_DYNAMIC_PROXY_ID);\r\n        };\r\n        AbstractThreadService.prototype.setInstantiationService = function (service) {\r\n            this._instantiationService = service;\r\n        };\r\n        AbstractThreadService.prototype.createInstance = function () {\r\n            var params = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                params[_i - 0] = arguments[_i];\r\n            }\r\n            return this._doCreateInstance(params);\r\n        };\r\n        AbstractThreadService.prototype._doCreateInstance = function (params) {\r\n            var _this = this;\r\n            var instanceOrPromise = this._instantiationService.createInstance.apply(this._instantiationService, params);\r\n            if (winjs_base_1.TPromise.is(instanceOrPromise)) {\r\n                var objInstantiated;\r\n                objInstantiated = instanceOrPromise.then(function (instance) {\r\n                    if (instance.asyncCtor) {\r\n                        var initPromise = instance.asyncCtor();\r\n                        if (winjs_base_1.TPromise.is(initPromise)) {\r\n                            return initPromise.then(function () {\r\n                                return instance;\r\n                            });\r\n                        }\r\n                    }\r\n                    return instance;\r\n                });\r\n                this._pendingObjects.push(objInstantiated);\r\n                return objInstantiated.then(function (instance) {\r\n                    var r = _this._finishInstance(instance);\r\n                    for (var i = 0; i < _this._pendingObjects.length; i++) {\r\n                        if (_this._pendingObjects[i] === objInstantiated) {\r\n                            _this._pendingObjects.splice(i, 1);\r\n                            break;\r\n                        }\r\n                    }\r\n                    return r;\r\n                });\r\n            }\r\n            return this._finishInstance(instanceOrPromise);\r\n        };\r\n        AbstractThreadService.prototype._finishInstance = function (instance) {\r\n            instance[threadService_1.THREAD_SERVICE_PROPERTY_NAME] = this;\r\n            this._boundObjects[instance.getId()] = instance;\r\n            if (instance.creationDone) {\r\n                instance.creationDone();\r\n            }\r\n            return instance;\r\n        };\r\n        AbstractThreadService.prototype.registerInstance = function (instance) {\r\n            this._finishInstance(instance);\r\n        };\r\n        AbstractThreadService.prototype.handle = function (rpcId, method, args) {\r\n            if (!this._localObjMap[rpcId]) {\r\n                throw new Error('Unknown actor ' + rpcId);\r\n            }\r\n            var actor = this._localObjMap[rpcId];\r\n            return actor[method].apply(actor, args);\r\n        };\r\n        AbstractThreadService.prototype._getOrCreateProxyInstance = function (remoteCom, id, descriptor) {\r\n            if (this._proxyObjMap[id]) {\r\n                return this._proxyObjMap[id];\r\n            }\r\n            var result = remote.createProxyFromCtor(remoteCom, id, descriptor.ctor);\r\n            this._proxyObjMap[id] = result;\r\n            return result;\r\n        };\r\n        AbstractThreadService.prototype._registerLocalInstance = function (id, obj) {\r\n            this._localObjMap[id] = obj;\r\n        };\r\n        AbstractThreadService.prototype._getOrCreateLocalInstance = function (id, descriptor) {\r\n            if (this._localObjMap[id]) {\r\n                return this._localObjMap[id];\r\n            }\r\n            var result = this._instantiationService.createInstance(descriptor);\r\n            this._registerLocalInstance(id, result);\r\n            return result;\r\n        };\r\n        AbstractThreadService.prototype.createDynamicProxyFromMethods = function (obj) {\r\n            var _this = this;\r\n            var id = AbstractThreadService.generateDynamicProxyId();\r\n            var proxyDefinition = this._proxifyMethods(id, obj);\r\n            return new DynamicProxy(proxyDefinition, function () {\r\n                delete _this._localObjMap[id];\r\n            });\r\n        };\r\n        AbstractThreadService.prototype.createDynamicProxyFromMembers = function (obj, allowedMembers) {\r\n            var _this = this;\r\n            var id = AbstractThreadService.generateDynamicProxyId();\r\n            var proxyDefinition = this._proxifyMembers(id, obj, allowedMembers);\r\n            return new DynamicProxy(proxyDefinition, function () {\r\n                delete _this._localObjMap[id];\r\n            });\r\n        };\r\n        AbstractThreadService.prototype._proxifyMethods = function (uniqueIdentifier, obj) {\r\n            if (!Types.isObject(obj)) {\r\n                return null;\r\n            }\r\n            this._localObjMap[uniqueIdentifier] = obj;\r\n            var r = {\r\n                $__CREATE__PROXY__REQUEST: uniqueIdentifier\r\n            };\r\n            for (var prop in obj) {\r\n                if (typeof obj[prop] === 'function') {\r\n                    r[prop] = obj[prop].bind(obj);\r\n                }\r\n            }\r\n            return r;\r\n        };\r\n        AbstractThreadService.prototype._proxifyMembers = function (uniqueIdentifier, obj, allowedMembers) {\r\n            if (!Types.isObject(obj)) {\r\n                return null;\r\n            }\r\n            this._localObjMap[uniqueIdentifier] = obj;\r\n            var r = {\r\n                $__CREATE__PROXY__REQUEST: uniqueIdentifier\r\n            };\r\n            for (var prop in obj) {\r\n                if (allowedMembers.indexOf(prop) === -1) {\r\n                    continue;\r\n                }\r\n                if (typeof obj[prop] === 'function') {\r\n                    r[prop] = obj[prop].bind(obj);\r\n                }\r\n                else {\r\n                    r[prop] = obj[prop];\r\n                }\r\n            }\r\n            return r;\r\n        };\r\n        AbstractThreadService.prototype.isProxyObject = function (obj) {\r\n            return obj && !!(obj.$__IS_REMOTE_OBJ);\r\n        };\r\n        AbstractThreadService.prototype.getRemotable = function (ctor) {\r\n            var id = thread_1.Remotable.getId(ctor);\r\n            if (!id) {\r\n                throw new Error('Unknown Remotable: <<' + id + '>>');\r\n            }\r\n            var desc = descriptors_1.createSyncDescriptor(ctor);\r\n            if (thread_1.Remotable.Registry.MainContext[id]) {\r\n                return this._registerAndInstantiateMainProcessActor(id, desc);\r\n            }\r\n            if (thread_1.Remotable.Registry.PluginHostContext[id]) {\r\n                return this._registerAndInstantiatePluginHostActor(id, desc);\r\n            }\r\n            if (thread_1.Remotable.Registry.WorkerContext[id]) {\r\n                return this._registerAndInstantiateWorkerActor(id, desc, thread_1.Remotable.Registry.WorkerContext[id].affinity);\r\n            }\r\n            throw new Error('Unknown Remotable: <<' + id + '>>');\r\n        };\r\n        AbstractThreadService.prototype.registerRemotableInstance = function (ctor, instance) {\r\n            var id = thread_1.Remotable.getId(ctor);\r\n            if (!id) {\r\n                throw new Error('Unknown Remotable: <<' + id + '>>');\r\n            }\r\n            if (thread_1.Remotable.Registry.MainContext[id]) {\r\n                return this._registerMainProcessActor(id, instance);\r\n            }\r\n            if (thread_1.Remotable.Registry.PluginHostContext[id]) {\r\n                return this._registerPluginHostActor(id, instance);\r\n            }\r\n            if (thread_1.Remotable.Registry.WorkerContext[id]) {\r\n                return this._registerWorkerActor(id, instance);\r\n            }\r\n            throw new Error('Unknown Remotable: <<' + id + '>>');\r\n        };\r\n        AbstractThreadService._LAST_DYNAMIC_PROXY_ID = 0;\r\n        return AbstractThreadService;\r\n    })();\r\n    exports.AbstractThreadService = AbstractThreadService;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\ndefine(\"vs/platform/thread/common/pluginHostThreadService\", [\"require\", \"exports\", 'vs/base/common/winjs.base', './abstractThreadService', 'vs/platform/thread/common/threadService', 'vs/platform/thread/common/thread'], function (require, exports, winjs_base_1, abstractThreadService, threadService_1, thread_1) {\r\n    var PluginHostThreadService = (function (_super) {\r\n        __extends(PluginHostThreadService, _super);\r\n        function PluginHostThreadService(remoteCom) {\r\n            var _this = this;\r\n            _super.call(this, false);\r\n            this.serviceId = thread_1.IThreadService;\r\n            this._remoteCom = remoteCom;\r\n            this._remoteCom.registerBigHandler(this);\r\n            // Register all statically instantiated synchronizable objects\r\n            threadService_1.readThreadSynchronizableObjects().forEach(function (obj) { return _this.registerInstance(obj); });\r\n        }\r\n        PluginHostThreadService.prototype.MainThread = function (obj, methodName, target, params) {\r\n            return target.apply(obj, params);\r\n        };\r\n        PluginHostThreadService.prototype.OneWorker = function (obj, methodName, target, params, affinity) {\r\n            return winjs_base_1.TPromise.as(null);\r\n        };\r\n        PluginHostThreadService.prototype.AllWorkers = function (obj, methodName, target, params) {\r\n            return winjs_base_1.TPromise.as(null);\r\n        };\r\n        PluginHostThreadService.prototype.Everywhere = function (obj, methodName, target, params) {\r\n            return target.apply(obj, params);\r\n        };\r\n        PluginHostThreadService.prototype.ensureWorkers = function () {\r\n            // Nothing to do\r\n        };\r\n        PluginHostThreadService.prototype.addStatusListener = function (listener) {\r\n            // Nothing to do\r\n        };\r\n        PluginHostThreadService.prototype.removeStatusListener = function (listener) {\r\n            // Nothing to do\r\n        };\r\n        PluginHostThreadService.prototype._registerAndInstantiateMainProcessActor = function (id, descriptor) {\r\n            return this._getOrCreateProxyInstance(this._remoteCom, id, descriptor);\r\n        };\r\n        PluginHostThreadService.prototype._registerMainProcessActor = function (id, actor) {\r\n            throw new Error('Not supported in this runtime context!');\r\n        };\r\n        PluginHostThreadService.prototype._registerAndInstantiatePluginHostActor = function (id, descriptor) {\r\n            return this._getOrCreateLocalInstance(id, descriptor);\r\n        };\r\n        PluginHostThreadService.prototype._registerPluginHostActor = function (id, actor) {\r\n            this._registerLocalInstance(id, actor);\r\n        };\r\n        PluginHostThreadService.prototype._registerAndInstantiateWorkerActor = function (id, descriptor, whichWorker) {\r\n            throw new Error('Not supported in this runtime context! Cannot communicate directly from Plugin Host to Worker!');\r\n        };\r\n        PluginHostThreadService.prototype._registerWorkerActor = function (id, actor) {\r\n            throw new Error('Not supported in this runtime context!');\r\n        };\r\n        return PluginHostThreadService;\r\n    })(abstractThreadService.AbstractThreadService);\r\n    exports.PluginHostThreadService = PluginHostThreadService;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/platform/workspace/common/workspace\", [\"require\", \"exports\", 'vs/platform/instantiation/common/instantiation'], function (require, exports, instantiation_1) {\r\n    exports.IWorkspaceContextService = instantiation_1.createDecorator('contextService');\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/platform/workspace/common/baseWorkspaceContextService\", [\"require\", \"exports\", 'vs/base/common/uri', 'vs/base/common/paths', './workspace'], function (require, exports, uri_1, paths, workspace_1) {\r\n    /**\r\n     * Simple IWorkspaceContextService implementation to allow sharing of this service implementation\r\n     * between different layers of the platform.\r\n     */\r\n    var BaseWorkspaceContextService = (function () {\r\n        function BaseWorkspaceContextService(workspace, configuration, options) {\r\n            if (options === void 0) { options = {}; }\r\n            this.serviceId = workspace_1.IWorkspaceContextService;\r\n            this.workspace = workspace;\r\n            this.configuration = configuration;\r\n            this.options = options;\r\n        }\r\n        BaseWorkspaceContextService.prototype.getWorkspace = function () {\r\n            return this.workspace;\r\n        };\r\n        BaseWorkspaceContextService.prototype.getConfiguration = function () {\r\n            return this.configuration;\r\n        };\r\n        BaseWorkspaceContextService.prototype.getOptions = function () {\r\n            return this.options;\r\n        };\r\n        BaseWorkspaceContextService.prototype.isInsideWorkspace = function (resource) {\r\n            if (resource && this.workspace) {\r\n                return paths.isEqualOrParent(resource.fsPath, this.workspace.resource.fsPath);\r\n            }\r\n            return false;\r\n        };\r\n        BaseWorkspaceContextService.prototype.toWorkspaceRelativePath = function (resource) {\r\n            if (this.isInsideWorkspace(resource)) {\r\n                return paths.normalize(paths.relative(this.workspace.resource.fsPath, resource.fsPath));\r\n            }\r\n            return null;\r\n        };\r\n        BaseWorkspaceContextService.prototype.toResource = function (workspaceRelativePath) {\r\n            if (typeof workspaceRelativePath === 'string' && this.workspace) {\r\n                return uri_1.default.file(paths.join(this.workspace.resource.fsPath, workspaceRelativePath));\r\n            }\r\n            return null;\r\n        };\r\n        return BaseWorkspaceContextService;\r\n    })();\r\n    exports.BaseWorkspaceContextService = BaseWorkspaceContextService;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") return Reflect.decorate(decorators, target, key, desc);\r\n    switch (arguments.length) {\r\n        case 2: return decorators.reduceRight(function(o, d) { return (d && d(o)) || o; }, target);\r\n        case 3: return decorators.reduceRight(function(o, d) { return (d && d(target, key)), void 0; }, void 0);\r\n        case 4: return decorators.reduceRight(function(o, d) { return (d && d(target, key, o)) || o; }, desc);\r\n    }\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\ndefine(\"vs/workbench/api/common/extHostLanguages\", [\"require\", \"exports\", 'vs/base/common/winjs.base', 'vs/platform/thread/common/thread', 'vs/editor/common/modes/modesRegistry', 'vs/platform/platform', 'vs/platform/instantiation/common/instantiation'], function (require, exports, winjs_base_1, thread_1, modesRegistry_1, platform_1, instantiation_1) {\r\n    var ExtHostLanguages = (function () {\r\n        function ExtHostLanguages(threadService) {\r\n            this._proxy = threadService.getRemotable(MainThreadLanguages);\r\n        }\r\n        ExtHostLanguages.prototype.getLanguages = function () {\r\n            return this._proxy._getLanguages();\r\n        };\r\n        ExtHostLanguages = __decorate([\r\n            __param(0, thread_1.IThreadService)\r\n        ], ExtHostLanguages);\r\n        return ExtHostLanguages;\r\n    })();\r\n    exports.ExtHostLanguages = ExtHostLanguages;\r\n    var MainThreadLanguages = (function () {\r\n        function MainThreadLanguages(ns) {\r\n            this._registry = platform_1.Registry.as(modesRegistry_1.Extensions.EditorModes);\r\n        }\r\n        MainThreadLanguages.prototype._getLanguages = function () {\r\n            return winjs_base_1.TPromise.as(this._registry.getRegisteredModes());\r\n        };\r\n        MainThreadLanguages = __decorate([\r\n            thread_1.Remotable.MainContext('MainThreadLanguages'),\r\n            __param(0, instantiation_1.INullService)\r\n        ], MainThreadLanguages);\r\n        return MainThreadLanguages;\r\n    })();\r\n    exports.MainThreadLanguages = MainThreadLanguages;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/workbench/api/common/mainThreadEditors\", [\"require\", \"exports\", 'vs/editor/common/editorCommon', 'vs/base/common/event', 'vs/base/common/lifecycle', 'vs/base/common/async', 'vs/editor/common/core/range', 'vs/editor/common/core/selection'], function (require, exports, EditorCommon, event_1, lifecycle_1, async_1, range_1, selection_1) {\r\n    function configurationsEqual(a, b) {\r\n        if (a && !b || !a && b) {\r\n            return false;\r\n        }\r\n        if (!a && !b) {\r\n            return true;\r\n        }\r\n        return (a.tabSize === b.tabSize\r\n            && a.insertSpaces === b.insertSpaces);\r\n    }\r\n    (function (TextEditorRevealType) {\r\n        TextEditorRevealType[TextEditorRevealType[\"Default\"] = 0] = \"Default\";\r\n        TextEditorRevealType[TextEditorRevealType[\"InCenter\"] = 1] = \"InCenter\";\r\n        TextEditorRevealType[TextEditorRevealType[\"InCenterIfOutsideViewport\"] = 2] = \"InCenterIfOutsideViewport\";\r\n    })(exports.TextEditorRevealType || (exports.TextEditorRevealType = {}));\r\n    var TextEditorRevealType = exports.TextEditorRevealType;\r\n    /**\r\n     * Text Editor that is permanently bound to the same model.\r\n     * It can be bound or not to a CodeEditor.\r\n     */\r\n    var MainThreadTextEditor = (function () {\r\n        function MainThreadTextEditor(id, model, codeEditor, focusTracker) {\r\n            this._id = id;\r\n            this._model = model;\r\n            this._codeEditor = null;\r\n            this._focusTracker = focusTracker;\r\n            this._codeEditorListeners = [];\r\n            this._onSelectionChanged = new event_1.Emitter();\r\n            this._onConfigurationChanged = new event_1.Emitter();\r\n            this._lastSelection = [new selection_1.Selection(1, 1, 1, 1)];\r\n            this._lastConfiguration = {\r\n                insertSpaces: false,\r\n                tabSize: 4\r\n            };\r\n            this.setCodeEditor(codeEditor);\r\n        }\r\n        MainThreadTextEditor.prototype.dispose = function () {\r\n            this._model = null;\r\n            this._codeEditor = null;\r\n            this._codeEditorListeners = lifecycle_1.disposeAll(this._codeEditorListeners);\r\n        };\r\n        MainThreadTextEditor.prototype.getId = function () {\r\n            return this._id;\r\n        };\r\n        MainThreadTextEditor.prototype.getModel = function () {\r\n            return this._model;\r\n        };\r\n        MainThreadTextEditor.prototype.hasCodeEditor = function (codeEditor) {\r\n            return (this._codeEditor === codeEditor);\r\n        };\r\n        MainThreadTextEditor.prototype.setCodeEditor = function (codeEditor) {\r\n            var _this = this;\r\n            if (this.hasCodeEditor(codeEditor)) {\r\n                // Nothing to do...\r\n                return;\r\n            }\r\n            this._codeEditorListeners = lifecycle_1.disposeAll(this._codeEditorListeners);\r\n            this._codeEditor = codeEditor;\r\n            if (this._codeEditor) {\r\n                var forwardSelection = function () {\r\n                    _this._lastSelection = _this._codeEditor.getSelections();\r\n                    _this._onSelectionChanged.fire(_this._lastSelection);\r\n                };\r\n                this._codeEditorListeners.push(this._codeEditor.addListener2(EditorCommon.EventType.CursorSelectionChanged, forwardSelection));\r\n                if (!selection_1.Selection.selectionsArrEqual(this._lastSelection, this._codeEditor.getSelections())) {\r\n                    forwardSelection();\r\n                }\r\n                var forwardConfiguration = function () {\r\n                    _this._lastConfiguration = MainThreadTextEditor._readConfiguration(_this._codeEditor);\r\n                    _this._onConfigurationChanged.fire(_this._lastConfiguration);\r\n                };\r\n                this._codeEditorListeners.push(this._codeEditor.addListener2(EditorCommon.EventType.ConfigurationChanged, forwardConfiguration));\r\n                if (!configurationsEqual(this._lastConfiguration, MainThreadTextEditor._readConfiguration(this._codeEditor))) {\r\n                    forwardConfiguration();\r\n                }\r\n                this._codeEditorListeners.push(this._codeEditor.addListener2(EditorCommon.EventType.EditorFocus, function () {\r\n                    _this._focusTracker.onGainedFocus();\r\n                }));\r\n                this._codeEditorListeners.push(this._codeEditor.addListener2(EditorCommon.EventType.EditorBlur, function () {\r\n                    _this._focusTracker.onLostFocus();\r\n                }));\r\n            }\r\n        };\r\n        MainThreadTextEditor.prototype.isVisible = function () {\r\n            return !!this._codeEditor;\r\n        };\r\n        Object.defineProperty(MainThreadTextEditor.prototype, \"onSelectionChanged\", {\r\n            get: function () {\r\n                return this._onSelectionChanged.event;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(MainThreadTextEditor.prototype, \"onConfigurationChanged\", {\r\n            get: function () {\r\n                return this._onConfigurationChanged.event;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        MainThreadTextEditor.prototype.getSelections = function () {\r\n            if (this._codeEditor) {\r\n                return this._codeEditor.getSelections();\r\n            }\r\n            return this._lastSelection;\r\n        };\r\n        MainThreadTextEditor.prototype.setSelections = function (selections) {\r\n            if (this._codeEditor) {\r\n                this._codeEditor.setSelections(selections);\r\n                return;\r\n            }\r\n            this._lastSelection = selections.map(selection_1.Selection.liftSelection);\r\n            console.warn('setSelections on invisble editor');\r\n        };\r\n        MainThreadTextEditor.prototype.getConfiguration = function () {\r\n            if (this._codeEditor) {\r\n                return MainThreadTextEditor._readConfiguration(this._codeEditor);\r\n            }\r\n            return this._lastConfiguration;\r\n        };\r\n        MainThreadTextEditor.prototype.setConfiguration = function (newConfiguration) {\r\n            if (this._codeEditor) {\r\n                this._codeEditor.updateOptions(newConfiguration);\r\n                return;\r\n            }\r\n            this._lastConfiguration.tabSize = typeof newConfiguration.tabSize !== 'undefined' ? newConfiguration.tabSize : this._lastConfiguration.tabSize;\r\n            this._lastConfiguration.insertSpaces = typeof newConfiguration.insertSpaces !== 'undefined' ? newConfiguration.insertSpaces : this._lastConfiguration.insertSpaces;\r\n            console.warn('setConfiguration on invisible editor');\r\n        };\r\n        MainThreadTextEditor.prototype.setDecorations = function (key, ranges) {\r\n            if (!this._codeEditor) {\r\n                console.warn('setDecorations on invisible editor');\r\n                return;\r\n            }\r\n            this._codeEditor.setDecorations(key, ranges);\r\n        };\r\n        MainThreadTextEditor.prototype.revealRange = function (range, revealType) {\r\n            if (!this._codeEditor) {\r\n                console.warn('revealRange on invisible editor');\r\n                return;\r\n            }\r\n            if (revealType === TextEditorRevealType.Default) {\r\n                this._codeEditor.revealRange(range);\r\n            }\r\n            else if (revealType === TextEditorRevealType.InCenter) {\r\n                this._codeEditor.revealRangeInCenter(range);\r\n            }\r\n            else if (revealType === TextEditorRevealType.InCenterIfOutsideViewport) {\r\n                this._codeEditor.revealRangeInCenterIfOutsideViewport(range);\r\n            }\r\n            else {\r\n                console.warn('Unknown revealType');\r\n            }\r\n        };\r\n        MainThreadTextEditor._readConfiguration = function (codeEditor) {\r\n            var indent = codeEditor.getIndentationOptions();\r\n            return {\r\n                insertSpaces: indent.insertSpaces,\r\n                tabSize: indent.tabSize\r\n            };\r\n        };\r\n        MainThreadTextEditor.prototype.isFocused = function () {\r\n            if (this._codeEditor) {\r\n                return this._codeEditor.isFocused();\r\n            }\r\n            return false;\r\n        };\r\n        MainThreadTextEditor.prototype.matches = function (editor) {\r\n            return editor.getControl() === this._codeEditor;\r\n        };\r\n        MainThreadTextEditor.prototype.applyEdits = function (versionIdCheck, edits) {\r\n            if (this._model.getVersionId() !== versionIdCheck) {\r\n                console.warn('Model has changed in the meantime!');\r\n                // throw new Error('Model has changed in the meantime!');\r\n                // model changed in the meantime\r\n                return false;\r\n            }\r\n            if (this._codeEditor) {\r\n                var transformedEdits = edits.map(function (edit) {\r\n                    return {\r\n                        identifier: null,\r\n                        range: range_1.Range.lift(edit.range),\r\n                        text: edit.text,\r\n                        forceMoveMarkers: edit.forceMoveMarkers\r\n                    };\r\n                });\r\n                return this._codeEditor.executeEdits('MainThreadTextEditor', transformedEdits) || true;\r\n            }\r\n            console.warn('applyEdits on invisible editor');\r\n            return false;\r\n        };\r\n        return MainThreadTextEditor;\r\n    })();\r\n    exports.MainThreadTextEditor = MainThreadTextEditor;\r\n    /**\r\n     * Keeps track of what goes on in the main thread and maps models => text editors\r\n     */\r\n    var MainThreadEditorsTracker = (function () {\r\n        function MainThreadEditorsTracker(editorService, modelService) {\r\n            var _this = this;\r\n            this._codeEditorService = editorService;\r\n            this._modelService = modelService;\r\n            this._toDispose = [];\r\n            this._focusedTextEditorId = null;\r\n            this._visibleTextEditorIds = [];\r\n            this._editorModelChangeListeners = Object.create(null);\r\n            this._model2TextEditors = Object.create(null);\r\n            this._onTextEditorAdd = new event_1.Emitter();\r\n            this._onTextEditorRemove = new event_1.Emitter();\r\n            this._onDidUpdateTextEditors = new event_1.Emitter();\r\n            this._onDidChangeFocusedTextEditor = new event_1.Emitter();\r\n            this._focusTracker = {\r\n                onGainedFocus: function () { return _this._updateFocusedTextEditor(); },\r\n                onLostFocus: function () { return _this._updateFocusedTextEditor(); }\r\n            };\r\n            this._modelService.onModelAdded.add(this._onModelAdded, this, this._toDispose);\r\n            this._modelService.onModelRemoved.add(this._onModelRemoved, this, this._toDispose);\r\n            this._codeEditorService.onCodeEditorAdd(this._onCodeEditorAdd, this, this._toDispose);\r\n            this._codeEditorService.onCodeEditorRemove(this._onCodeEditorRemove, this, this._toDispose);\r\n            this._updateMapping = new async_1.RunOnceScheduler(function () { return _this._doUpdateMapping(); }, 0);\r\n            this._toDispose.push(this._updateMapping);\r\n        }\r\n        MainThreadEditorsTracker.prototype._nextId = function () {\r\n            return String(++MainThreadEditorsTracker._LAST_TEXT_EDITOR_ID);\r\n        };\r\n        MainThreadEditorsTracker.prototype.dispose = function () {\r\n            this._toDispose = lifecycle_1.disposeAll(this._toDispose);\r\n        };\r\n        MainThreadEditorsTracker.prototype._onModelAdded = function (model) {\r\n            this._updateMapping.schedule();\r\n        };\r\n        MainThreadEditorsTracker.prototype._onModelRemoved = function (model) {\r\n            this._updateMapping.schedule();\r\n        };\r\n        MainThreadEditorsTracker.prototype._onCodeEditorAdd = function (codeEditor) {\r\n            var _this = this;\r\n            this._editorModelChangeListeners[codeEditor.getId()] = codeEditor.addListener2(EditorCommon.EventType.ModelChanged, function (_) { return _this._updateMapping.schedule(); });\r\n            this._updateMapping.schedule();\r\n        };\r\n        MainThreadEditorsTracker.prototype._onCodeEditorRemove = function (codeEditor) {\r\n            this._editorModelChangeListeners[codeEditor.getId()].dispose();\r\n            delete this._editorModelChangeListeners[codeEditor.getId()];\r\n            this._updateMapping.schedule();\r\n        };\r\n        MainThreadEditorsTracker.prototype._doUpdateMapping = function () {\r\n            var _this = this;\r\n            var allModels = this._modelService.getModels();\r\n            // Same filter as in pluginHostDocuments\r\n            allModels.filter(function (model) { return !model.isTooLargeForHavingARichMode(); });\r\n            var allModelsMap = Object.create(null);\r\n            allModels.forEach(function (model) {\r\n                allModelsMap[model.getAssociatedResource().toString()] = model;\r\n            });\r\n            // Remove text editors for models that no longer exist\r\n            Object.keys(this._model2TextEditors).forEach(function (modelUri) {\r\n                if (allModelsMap[modelUri]) {\r\n                    // model still exists, will be updated below\r\n                    return;\r\n                }\r\n                var textEditorsToRemove = _this._model2TextEditors[modelUri];\r\n                delete _this._model2TextEditors[modelUri];\r\n                for (var i = 0; i < textEditorsToRemove.length; i++) {\r\n                    _this._onTextEditorRemove.fire(textEditorsToRemove[i]);\r\n                    textEditorsToRemove[i].dispose();\r\n                }\r\n            });\r\n            // Handle all visible models\r\n            var visibleModels = this._getVisibleModels();\r\n            Object.keys(visibleModels).forEach(function (modelUri) {\r\n                var model = visibleModels[modelUri].model;\r\n                var codeEditors = visibleModels[modelUri].codeEditors;\r\n                if (!_this._model2TextEditors[modelUri]) {\r\n                    _this._model2TextEditors[modelUri] = [];\r\n                }\r\n                var existingTextEditors = _this._model2TextEditors[modelUri];\r\n                // Remove text editors if more exist\r\n                while (existingTextEditors.length > codeEditors.length) {\r\n                    var removedTextEditor = existingTextEditors.pop();\r\n                    _this._onTextEditorRemove.fire(removedTextEditor);\r\n                    removedTextEditor.dispose();\r\n                }\r\n                // Adjust remaining text editors\r\n                for (var i = 0; i < existingTextEditors.length; i++) {\r\n                    existingTextEditors[i].setCodeEditor(codeEditors[i]);\r\n                }\r\n                // Create new editors as needed\r\n                for (var i = existingTextEditors.length; i < codeEditors.length; i++) {\r\n                    var newTextEditor = new MainThreadTextEditor(_this._nextId(), model, codeEditors[i], _this._focusTracker);\r\n                    existingTextEditors.push(newTextEditor);\r\n                    _this._onTextEditorAdd.fire(newTextEditor);\r\n                }\r\n            });\r\n            // Handle all not visible models\r\n            allModels.forEach(function (model) {\r\n                var modelUri = model.getAssociatedResource().toString();\r\n                if (visibleModels[modelUri]) {\r\n                    // model is visible, already handled above\r\n                    return;\r\n                }\r\n                if (!_this._model2TextEditors[modelUri]) {\r\n                    _this._model2TextEditors[modelUri] = [];\r\n                }\r\n                var existingTextEditors = _this._model2TextEditors[modelUri];\r\n                // Remove extra text editors\r\n                while (existingTextEditors.length > 1) {\r\n                    var removedTextEditor = existingTextEditors.pop();\r\n                    _this._onTextEditorRemove.fire(removedTextEditor);\r\n                    removedTextEditor.dispose();\r\n                }\r\n                // Create new editor if needed or adjust it\r\n                if (existingTextEditors.length === 0) {\r\n                    var newTextEditor = new MainThreadTextEditor(_this._nextId(), model, null, _this._focusTracker);\r\n                    existingTextEditors.push(newTextEditor);\r\n                    _this._onTextEditorAdd.fire(newTextEditor);\r\n                }\r\n                else {\r\n                    existingTextEditors[0].setCodeEditor(null);\r\n                }\r\n            });\r\n            this._printState();\r\n            this._visibleTextEditorIds = this._findVisibleTextEditorIds();\r\n            this._updateFocusedTextEditor();\r\n            // this is a sync event\r\n            this._onDidUpdateTextEditors.fire(undefined);\r\n        };\r\n        MainThreadEditorsTracker.prototype._updateFocusedTextEditor = function () {\r\n            this._setFocusedTextEditorId(this._findFocusedTextEditorId());\r\n        };\r\n        MainThreadEditorsTracker.prototype._findFocusedTextEditorId = function () {\r\n            var modelUris = Object.keys(this._model2TextEditors);\r\n            for (var i = 0, len = modelUris.length; i < len; i++) {\r\n                var editors = this._model2TextEditors[modelUris[i]];\r\n                for (var j = 0, lenJ = editors.length; j < lenJ; j++) {\r\n                    if (editors[j].isFocused()) {\r\n                        return editors[j].getId();\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        MainThreadEditorsTracker.prototype._findVisibleTextEditorIds = function () {\r\n            var result = [];\r\n            var modelUris = Object.keys(this._model2TextEditors);\r\n            for (var i = 0, len = modelUris.length; i < len; i++) {\r\n                var editors = this._model2TextEditors[modelUris[i]];\r\n                for (var j = 0, lenJ = editors.length; j < lenJ; j++) {\r\n                    if (editors[j].isVisible()) {\r\n                        result.push(editors[j].getId());\r\n                    }\r\n                }\r\n            }\r\n            result.sort();\r\n            return result;\r\n        };\r\n        MainThreadEditorsTracker.prototype._setFocusedTextEditorId = function (focusedTextEditorId) {\r\n            if (this._focusedTextEditorId === focusedTextEditorId) {\r\n                // no change\r\n                return;\r\n            }\r\n            this._focusedTextEditorId = focusedTextEditorId;\r\n            this._printState();\r\n            this._onDidChangeFocusedTextEditor.fire(this._focusedTextEditorId);\r\n        };\r\n        MainThreadEditorsTracker.prototype._printState = function () {\r\n            // console.log('----------------------');\r\n            // Object.keys(this._model2TextEditors).forEach((modelUri) => {\r\n            // \tlet editors = this._model2TextEditors[modelUri];\r\n            // \tconsole.log(editors.map((e) => {\r\n            // \t\treturn e.getId() + \" (\" + (e.getId() === this._focusedTextEditorId ? 'FOCUSED, ': '') + modelUri + \")\";\r\n            // \t}).join('\\n'));\r\n            // });\r\n        };\r\n        MainThreadEditorsTracker.prototype._getVisibleModels = function () {\r\n            var r = {};\r\n            var allCodeEditors = this._codeEditorService.listCodeEditors();\r\n            // Maintain a certain sorting such that the mapping doesn't change too much all the time\r\n            allCodeEditors.sort(function (a, b) { return strcmp(a.getId(), b.getId()); });\r\n            allCodeEditors.forEach(function (codeEditor) {\r\n                var model = codeEditor.getModel();\r\n                if (!model) {\r\n                    return;\r\n                }\r\n                var modelUri = model.getAssociatedResource().toString();\r\n                r[modelUri] = r[modelUri] || {\r\n                    model: model,\r\n                    codeEditors: []\r\n                };\r\n                r[modelUri].codeEditors.push(codeEditor);\r\n            });\r\n            return r;\r\n        };\r\n        MainThreadEditorsTracker.prototype.getFocusedTextEditorId = function () {\r\n            return this._focusedTextEditorId;\r\n        };\r\n        MainThreadEditorsTracker.prototype.getVisibleTextEditorIds = function () {\r\n            return this._visibleTextEditorIds;\r\n        };\r\n        Object.defineProperty(MainThreadEditorsTracker.prototype, \"onTextEditorAdd\", {\r\n            get: function () {\r\n                return this._onTextEditorAdd.event;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(MainThreadEditorsTracker.prototype, \"onTextEditorRemove\", {\r\n            get: function () {\r\n                return this._onTextEditorRemove.event;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(MainThreadEditorsTracker.prototype, \"onDidUpdateTextEditors\", {\r\n            get: function () {\r\n                return this._onDidUpdateTextEditors.event;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(MainThreadEditorsTracker.prototype, \"onChangedFocusedTextEditor\", {\r\n            get: function () {\r\n                return this._onDidChangeFocusedTextEditor.event;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        MainThreadEditorsTracker.prototype.findTextEditorIdFor = function (codeEditor) {\r\n            var modelUris = Object.keys(this._model2TextEditors);\r\n            for (var i = 0, len = modelUris.length; i < len; i++) {\r\n                var editors = this._model2TextEditors[modelUris[i]];\r\n                for (var j = 0, lenJ = editors.length; j < lenJ; j++) {\r\n                    if (editors[j].hasCodeEditor(codeEditor)) {\r\n                        return editors[j].getId();\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        MainThreadEditorsTracker.prototype.registerTextEditorDecorationType = function (key, options) {\r\n            this._codeEditorService.registerDecorationType(key, options);\r\n        };\r\n        MainThreadEditorsTracker.prototype.removeTextEditorDecorationType = function (key) {\r\n            this._codeEditorService.removeDecorationType(key);\r\n        };\r\n        MainThreadEditorsTracker._LAST_TEXT_EDITOR_ID = 0;\r\n        return MainThreadEditorsTracker;\r\n    })();\r\n    exports.MainThreadEditorsTracker = MainThreadEditorsTracker;\r\n    function strcmp(a, b) {\r\n        if (a < b) {\r\n            return -1;\r\n        }\r\n        if (a > b) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") return Reflect.decorate(decorators, target, key, desc);\r\n    switch (arguments.length) {\r\n        case 2: return decorators.reduceRight(function(o, d) { return (d && d(o)) || o; }, target);\r\n        case 3: return decorators.reduceRight(function(o, d) { return (d && d(target, key)), void 0; }, void 0);\r\n        case 4: return decorators.reduceRight(function(o, d) { return (d && d(target, key, o)) || o; }, desc);\r\n    }\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\ndefine(\"vs/workbench/api/common/pluginHostConfiguration\", [\"require\", \"exports\", 'vs/base/common/objects', 'vs/base/common/lifecycle', 'vs/platform/thread/common/thread', 'vs/platform/configuration/common/configuration', 'vs/base/common/event', 'vs/platform/instantiation/common/instantiation'], function (require, exports, objects_1, lifecycle_1, thread_1, configuration_1, event_1, instantiation_1) {\r\n    var PluginHostConfiguration = (function () {\r\n        function PluginHostConfiguration(ns) {\r\n            this._onDidChangeConfiguration = new event_1.Emitter();\r\n        }\r\n        Object.defineProperty(PluginHostConfiguration.prototype, \"onDidChangeConfiguration\", {\r\n            get: function () {\r\n                return this._onDidChangeConfiguration && this._onDidChangeConfiguration.event;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        PluginHostConfiguration.prototype._acceptConfigurationChanged = function (config) {\r\n            this._config = config;\r\n            this._hasConfig = true;\r\n            this._onDidChangeConfiguration.fire(undefined);\r\n        };\r\n        PluginHostConfiguration.prototype.getConfiguration = function (section) {\r\n            if (!this._hasConfig) {\r\n                return;\r\n            }\r\n            var config = section\r\n                ? PluginHostConfiguration._lookUp(section, this._config)\r\n                : this._config;\r\n            var result = config ? objects_1.clone(config) : {};\r\n            // result = Object.freeze(result);\r\n            result.has = function (key) {\r\n                return typeof PluginHostConfiguration._lookUp(key, config) !== 'undefined';\r\n            };\r\n            result.get = function (key, defaultValue) {\r\n                var result = PluginHostConfiguration._lookUp(key, config);\r\n                if (typeof result === 'undefined') {\r\n                    result = defaultValue;\r\n                }\r\n                return result;\r\n            };\r\n            return result;\r\n        };\r\n        PluginHostConfiguration._lookUp = function (section, config) {\r\n            if (!section) {\r\n                return;\r\n            }\r\n            var parts = section.split('.');\r\n            var node = config;\r\n            while (node && parts.length) {\r\n                node = node[parts.shift()];\r\n            }\r\n            return node;\r\n        };\r\n        PluginHostConfiguration = __decorate([\r\n            thread_1.Remotable.PluginHostContext('PluginHostConfiguration'),\r\n            __param(0, instantiation_1.INullService)\r\n        ], PluginHostConfiguration);\r\n        return PluginHostConfiguration;\r\n    })();\r\n    exports.PluginHostConfiguration = PluginHostConfiguration;\r\n    var MainThreadConfiguration = (function () {\r\n        function MainThreadConfiguration(configurationService, threadService) {\r\n            var _this = this;\r\n            this._configurationService = configurationService;\r\n            this._proxy = threadService.getRemotable(PluginHostConfiguration);\r\n            this._toDispose = [];\r\n            this._toDispose.push(this._configurationService.addListener2(configuration_1.ConfigurationServiceEventTypes.UPDATED, function (e) {\r\n                _this._proxy._acceptConfigurationChanged(e.config);\r\n            }));\r\n            this._configurationService.loadConfiguration().then(function (config) {\r\n                _this._proxy._acceptConfigurationChanged(config);\r\n            });\r\n        }\r\n        MainThreadConfiguration.prototype.dispose = function () {\r\n            this._toDispose = lifecycle_1.disposeAll(this._toDispose);\r\n        };\r\n        MainThreadConfiguration = __decorate([\r\n            thread_1.Remotable.MainContext('MainProcessConfigurationServiceHelper'),\r\n            __param(0, configuration_1.IConfigurationService),\r\n            __param(1, thread_1.IThreadService)\r\n        ], MainThreadConfiguration);\r\n        return MainThreadConfiguration;\r\n    })();\r\n    exports.MainThreadConfiguration = MainThreadConfiguration;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") return Reflect.decorate(decorators, target, key, desc);\r\n    switch (arguments.length) {\r\n        case 2: return decorators.reduceRight(function(o, d) { return (d && d(o)) || o; }, target);\r\n        case 3: return decorators.reduceRight(function(o, d) { return (d && d(target, key)), void 0; }, void 0);\r\n        case 4: return decorators.reduceRight(function(o, d) { return (d && d(target, key, o)) || o; }, desc);\r\n    }\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\ndefine(\"vs/workbench/api/common/pluginHostDiagnostics\", [\"require\", \"exports\", 'vs/platform/thread/common/thread', 'vs/platform/markers/common/markers', 'vs/base/common/uri', 'vs/base/common/severity'], function (require, exports, thread_1, markers_1, uri_1, severity_1) {\r\n    var DiagnosticCollection = (function () {\r\n        function DiagnosticCollection(name, proxy) {\r\n            this._name = name;\r\n            this._proxy = proxy;\r\n        }\r\n        DiagnosticCollection.prototype.dispose = function () {\r\n            var _this = this;\r\n            if (!this._isDisposed) {\r\n                this._proxy._changeAll(this.name, undefined).then(function () {\r\n                    _this._proxy = undefined;\r\n                    _this._isDisposed = true;\r\n                });\r\n            }\r\n        };\r\n        Object.defineProperty(DiagnosticCollection.prototype, \"name\", {\r\n            get: function () {\r\n                this._checkDisposed();\r\n                return this._name;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        DiagnosticCollection.prototype.set = function (first, diagnostics) {\r\n            this._checkDisposed();\r\n            if (first instanceof uri_1.default) {\r\n                // change markers of resource only (max 500)\r\n                var data;\r\n                if (diagnostics) {\r\n                    data = [];\r\n                    var len = diagnostics.length;\r\n                    if (len > DiagnosticCollection._maxDiagnosticsPerFile) {\r\n                        console.warn('diagnostics for %s will be capped to %d (actually is %d)', first.toString(), DiagnosticCollection._maxDiagnosticsPerFile, len);\r\n                        len = DiagnosticCollection._maxDiagnosticsPerFile;\r\n                    }\r\n                    for (var i = 0; i < len; i++) {\r\n                        data.push(DiagnosticCollection._toMarkerData(diagnostics[i]));\r\n                    }\r\n                }\r\n                // set or reset for this resource\r\n                return this._proxy._changeOne(this.name, first, data);\r\n            }\r\n            else {\r\n                // change all marker of owner\r\n                var entries = first;\r\n                var data;\r\n                if (entries) {\r\n                    var total = 0;\r\n                    data = [];\r\n                    for (var _i = 0; _i < entries.length; _i++) {\r\n                        var entry = entries[_i];\r\n                        var uri = entry[0], diagnostics_1 = entry[1];\r\n                        if (diagnostics_1) {\r\n                            var len = diagnostics_1.length;\r\n                            if (len > DiagnosticCollection._maxDiagnosticsPerFile) {\r\n                                console.warn('diagnostics for %s will be capped to %d (actually is %d)', uri.toString(), DiagnosticCollection._maxDiagnosticsPerFile, len);\r\n                                len = DiagnosticCollection._maxDiagnosticsPerFile;\r\n                            }\r\n                            for (var i = 0; i < len; i++) {\r\n                                data.push({\r\n                                    resource: uri,\r\n                                    marker: DiagnosticCollection._toMarkerData(diagnostics_1[i])\r\n                                });\r\n                            }\r\n                            total += len;\r\n                            if (total > 10 * DiagnosticCollection._maxDiagnosticsPerFile) {\r\n                                console.warn('too many diagnostics will cap to %d', 10 * DiagnosticCollection._maxDiagnosticsPerFile);\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                // set or reset all\r\n                this._proxy._changeAll(this.name, data);\r\n            }\r\n        };\r\n        DiagnosticCollection.prototype.delete = function (uri) {\r\n            return this.set(uri, undefined);\r\n        };\r\n        DiagnosticCollection.prototype.clear = function () {\r\n            return this.set(undefined);\r\n        };\r\n        DiagnosticCollection.prototype._checkDisposed = function () {\r\n            if (this._isDisposed) {\r\n                throw new Error('illegal state - object is disposed');\r\n            }\r\n        };\r\n        DiagnosticCollection._toMarkerData = function (diagnostic) {\r\n            var range = diagnostic.range;\r\n            return {\r\n                startLineNumber: range.start.line + 1,\r\n                startColumn: range.start.character + 1,\r\n                endLineNumber: range.end.line + 1,\r\n                endColumn: range.end.character + 1,\r\n                message: diagnostic.message,\r\n                source: diagnostic.source,\r\n                severity: DiagnosticCollection._convertDiagnosticsSeverity(diagnostic.severity),\r\n                code: String(diagnostic.code)\r\n            };\r\n        };\r\n        DiagnosticCollection._convertDiagnosticsSeverity = function (severity) {\r\n            switch (severity) {\r\n                case 0: return severity_1.default.Error;\r\n                case 1: return severity_1.default.Warning;\r\n                case 2: return severity_1.default.Info;\r\n                case 3: return severity_1.default.Ignore;\r\n                default: return severity_1.default.Error;\r\n            }\r\n        };\r\n        DiagnosticCollection._maxDiagnosticsPerFile = 250;\r\n        return DiagnosticCollection;\r\n    })();\r\n    var PluginHostDiagnostics = (function () {\r\n        function PluginHostDiagnostics(threadService) {\r\n            this._proxy = threadService.getRemotable(MainThreadDiagnostics);\r\n        }\r\n        PluginHostDiagnostics.prototype.createDiagnosticCollection = function (name) {\r\n            if (!name) {\r\n                name = '_generated_diagnostic_collection_name_#' + PluginHostDiagnostics._idPool++;\r\n            }\r\n            return new DiagnosticCollection(name, this._proxy);\r\n        };\r\n        PluginHostDiagnostics._idPool = 0;\r\n        return PluginHostDiagnostics;\r\n    })();\r\n    exports.PluginHostDiagnostics = PluginHostDiagnostics;\r\n    var MainThreadDiagnostics = (function () {\r\n        function MainThreadDiagnostics(markerService) {\r\n            this._markerService = markerService;\r\n        }\r\n        MainThreadDiagnostics.prototype._changeOne = function (owner, resource, markers) {\r\n            this._markerService.changeOne(owner, resource, markers);\r\n            return undefined;\r\n        };\r\n        MainThreadDiagnostics.prototype._changeAll = function (owner, data) {\r\n            this._markerService.changeAll(owner, data);\r\n            return undefined;\r\n        };\r\n        MainThreadDiagnostics = __decorate([\r\n            thread_1.Remotable.MainContext('MainThreadDiagnostics'),\r\n            __param(0, markers_1.IMarkerService)\r\n        ], MainThreadDiagnostics);\r\n        return MainThreadDiagnostics;\r\n    })();\r\n    exports.MainThreadDiagnostics = MainThreadDiagnostics;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") return Reflect.decorate(decorators, target, key, desc);\r\n    switch (arguments.length) {\r\n        case 2: return decorators.reduceRight(function(o, d) { return (d && d(o)) || o; }, target);\r\n        case 3: return decorators.reduceRight(function(o, d) { return (d && d(target, key)), void 0; }, void 0);\r\n        case 4: return decorators.reduceRight(function(o, d) { return (d && d(target, key, o)) || o; }, desc);\r\n    }\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\ndefine(\"vs/workbench/api/common/pluginHostMessageService\", [\"require\", \"exports\", 'vs/nls!vs/workbench/api/common/pluginHostMessageService', 'vs/platform/thread/common/thread', 'vs/platform/message/common/message', 'vs/base/common/actions', 'vs/base/common/winjs.base'], function (require, exports, nls, thread_1, message_1, actions_1, winjs_base_1) {\r\n    var PluginHostMessageService = (function () {\r\n        function PluginHostMessageService(threadService, commands) {\r\n            this._proxy = threadService.getRemotable(MainThreadMessageService);\r\n            this._commands = commands;\r\n        }\r\n        PluginHostMessageService.prototype.showMessage = function (severity, message, commands) {\r\n            var items = [];\r\n            for (var handle = 0; handle < commands.length; handle++) {\r\n                var command = commands[handle];\r\n                if (typeof command === 'string') {\r\n                    items.push({ title: command, handle: handle });\r\n                }\r\n                else {\r\n                    items.push({ title: command.title, handle: handle });\r\n                }\r\n            }\r\n            return this._proxy.showMessage(severity, message, items).then(function (handle) {\r\n                if (typeof handle === 'number') {\r\n                    return commands[handle];\r\n                }\r\n            });\r\n        };\r\n        PluginHostMessageService = __decorate([\r\n            __param(0, thread_1.IThreadService)\r\n        ], PluginHostMessageService);\r\n        return PluginHostMessageService;\r\n    })();\r\n    exports.PluginHostMessageService = PluginHostMessageService;\r\n    var MainThreadMessageService = (function () {\r\n        function MainThreadMessageService(messageService) {\r\n            this._messageService = messageService;\r\n        }\r\n        MainThreadMessageService.prototype.showMessage = function (severity, message, commands) {\r\n            var _this = this;\r\n            var hide;\r\n            var actions = [];\r\n            actions.push(new actions_1.Action('__close', nls.localize(0, null), undefined, true, function () {\r\n                hide();\r\n                return winjs_base_1.TPromise.as(undefined);\r\n            }));\r\n            commands.forEach(function (command) {\r\n                actions.push(new actions_1.Action('_extension_message_handle_' + command.handle, command.title, undefined, true, function () {\r\n                    hide(command.handle);\r\n                    return winjs_base_1.TPromise.as(undefined);\r\n                }));\r\n            });\r\n            return new winjs_base_1.TPromise(function (c) {\r\n                var messageHide;\r\n                hide = function (handle) {\r\n                    messageHide();\r\n                    c(handle);\r\n                };\r\n                messageHide = _this._messageService.show(severity, {\r\n                    message: message,\r\n                    actions: actions\r\n                });\r\n            });\r\n        };\r\n        MainThreadMessageService = __decorate([\r\n            thread_1.Remotable.MainContext('MainThreadMessageService'),\r\n            __param(0, message_1.IMessageService)\r\n        ], MainThreadMessageService);\r\n        return MainThreadMessageService;\r\n    })();\r\n    exports.MainThreadMessageService = MainThreadMessageService;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\ndefine(\"vs/workbench/api/common/pluginHostTelemetry\", [\"require\", \"exports\", 'vs/platform/telemetry/common/abstractRemoteTelemetryService'], function (require, exports, abstractRemoteTelemetryService_1) {\r\n    var PluginHostTelemetryService = (function (_super) {\r\n        __extends(PluginHostTelemetryService, _super);\r\n        function PluginHostTelemetryService() {\r\n            _super.apply(this, arguments);\r\n        }\r\n        PluginHostTelemetryService.prototype.handleEvent = function (eventName, data) {\r\n            var data = data || {};\r\n            data['pluginHostTelemetry'] = true;\r\n            _super.prototype.handleEvent.call(this, eventName, data);\r\n        };\r\n        return PluginHostTelemetryService;\r\n    })(abstractRemoteTelemetryService_1.AbstractRemoteTelemetryService);\r\n    exports.PluginHostTelemetryService = PluginHostTelemetryService;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\ndefine(\"vs/workbench/api/common/pluginHostTypes\", [\"require\", \"exports\", 'vs/base/common/uri', 'vs/base/common/errors'], function (require, exports, uri_1, errors_1) {\r\n    var Disposable = (function () {\r\n        function Disposable(callOnDispose) {\r\n            this._callOnDispose = callOnDispose;\r\n        }\r\n        Disposable.from = function () {\r\n            var disposables = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                disposables[_i - 0] = arguments[_i];\r\n            }\r\n            return new Disposable(function () {\r\n                if (disposables) {\r\n                    for (var _i = 0; _i < disposables.length; _i++) {\r\n                        var disposable = disposables[_i];\r\n                        if (disposable && typeof disposable.dispose === 'function') {\r\n                            disposable.dispose();\r\n                        }\r\n                    }\r\n                    disposables = undefined;\r\n                }\r\n            });\r\n        };\r\n        Disposable.prototype.dispose = function () {\r\n            if (typeof this._callOnDispose === 'function') {\r\n                this._callOnDispose();\r\n                this._callOnDispose = undefined;\r\n            }\r\n        };\r\n        return Disposable;\r\n    })();\r\n    exports.Disposable = Disposable;\r\n    var Position = (function () {\r\n        function Position(line, character) {\r\n            if (line < 0) {\r\n                throw errors_1.illegalArgument('line must be positive');\r\n            }\r\n            if (character < 0) {\r\n                throw errors_1.illegalArgument('character must be positive');\r\n            }\r\n            this._line = line;\r\n            this._character = character;\r\n        }\r\n        Position.Min = function () {\r\n            var positions = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                positions[_i - 0] = arguments[_i];\r\n            }\r\n            var result = positions.pop();\r\n            for (var _a = 0; _a < positions.length; _a++) {\r\n                var p = positions[_a];\r\n                if (p.isBefore(result)) {\r\n                    result = p;\r\n                }\r\n            }\r\n            return result;\r\n        };\r\n        Position.Max = function () {\r\n            var positions = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                positions[_i - 0] = arguments[_i];\r\n            }\r\n            var result = positions.pop();\r\n            for (var _a = 0; _a < positions.length; _a++) {\r\n                var p = positions[_a];\r\n                if (p.isAfter(result)) {\r\n                    result = p;\r\n                }\r\n            }\r\n            return result;\r\n        };\r\n        Object.defineProperty(Position.prototype, \"line\", {\r\n            get: function () {\r\n                return this._line;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Position.prototype, \"character\", {\r\n            get: function () {\r\n                return this._character;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Position.prototype.isBefore = function (other) {\r\n            if (this._line < other._line) {\r\n                return true;\r\n            }\r\n            if (other._line < this._line) {\r\n                return false;\r\n            }\r\n            return this._character < other._character;\r\n        };\r\n        Position.prototype.isBeforeOrEqual = function (other) {\r\n            if (this._line < other._line) {\r\n                return true;\r\n            }\r\n            if (other._line < this._line) {\r\n                return false;\r\n            }\r\n            return this._character <= other._character;\r\n        };\r\n        Position.prototype.isAfter = function (other) {\r\n            return !this.isBeforeOrEqual(other);\r\n        };\r\n        Position.prototype.isAfterOrEqual = function (other) {\r\n            return !this.isBefore(other);\r\n        };\r\n        Position.prototype.isEqual = function (other) {\r\n            return this._line === other._line && this._character === other._character;\r\n        };\r\n        Position.prototype.compareTo = function (other) {\r\n            if (this._line < other._line) {\r\n                return -1;\r\n            }\r\n            else if (this._line > other.line) {\r\n                return 1;\r\n            }\r\n            else {\r\n                // equal line\r\n                if (this._character < other._character) {\r\n                    return -1;\r\n                }\r\n                else if (this._character > other._character) {\r\n                    return 1;\r\n                }\r\n                else {\r\n                    // equal line and character\r\n                    return 0;\r\n                }\r\n            }\r\n        };\r\n        Position.prototype.translate = function (lineDelta, characterDelta) {\r\n            if (lineDelta === void 0) { lineDelta = 0; }\r\n            if (characterDelta === void 0) { characterDelta = 0; }\r\n            if (lineDelta === 0 && characterDelta === 0) {\r\n                return this;\r\n            }\r\n            return new Position(this.line + lineDelta, this.character + characterDelta);\r\n        };\r\n        Position.prototype.with = function (line, character) {\r\n            if (line === void 0) { line = this.line; }\r\n            if (character === void 0) { character = this.character; }\r\n            if (line === this.line && character === this.character) {\r\n                return this;\r\n            }\r\n            return new Position(line, character);\r\n        };\r\n        return Position;\r\n    })();\r\n    exports.Position = Position;\r\n    var Range = (function () {\r\n        function Range(startLineOrStart, startColumnOrEnd, endLine, endColumn) {\r\n            var start;\r\n            var end;\r\n            if (typeof startLineOrStart === 'number' && typeof startColumnOrEnd === 'number' && typeof endLine === 'number' && typeof endColumn === 'number') {\r\n                start = new Position(startLineOrStart, startColumnOrEnd);\r\n                end = new Position(endLine, endColumn);\r\n            }\r\n            else if (startLineOrStart instanceof Position && startColumnOrEnd instanceof Position) {\r\n                start = startLineOrStart;\r\n                end = startColumnOrEnd;\r\n            }\r\n            if (!start || !end) {\r\n                throw new Error('Invalid arguments');\r\n            }\r\n            if (start.isBefore(end)) {\r\n                this._start = start;\r\n                this._end = end;\r\n            }\r\n            else {\r\n                this._start = end;\r\n                this._end = start;\r\n            }\r\n        }\r\n        Object.defineProperty(Range.prototype, \"start\", {\r\n            get: function () {\r\n                return this._start;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Range.prototype, \"end\", {\r\n            get: function () {\r\n                return this._end;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Range.prototype.contains = function (positionOrRange) {\r\n            if (positionOrRange instanceof Range) {\r\n                return this.contains(positionOrRange._start)\r\n                    && this.contains(positionOrRange._end);\r\n            }\r\n            else if (positionOrRange instanceof Position) {\r\n                if (positionOrRange.isBefore(this._start)) {\r\n                    return false;\r\n                }\r\n                if (this._end.isBefore(positionOrRange)) {\r\n                    return false;\r\n                }\r\n                return true;\r\n            }\r\n            return false;\r\n        };\r\n        Range.prototype.isEqual = function (other) {\r\n            return this._start.isEqual(other._start) && this._end.isEqual(other._end);\r\n        };\r\n        Range.prototype.intersection = function (other) {\r\n            var start = Position.Max(other.start, this._start);\r\n            var end = Position.Min(other.end, this._end);\r\n            if (start.isAfter(end)) {\r\n                // this happens when there is no overlap:\r\n                // |-----|\r\n                //          |----|\r\n                return;\r\n            }\r\n            return new Range(start, end);\r\n        };\r\n        Range.prototype.union = function (other) {\r\n            if (this.contains(other)) {\r\n                return this;\r\n            }\r\n            else if (other.contains(this)) {\r\n                return other;\r\n            }\r\n            var start = Position.Min(other.start, this._start);\r\n            var end = Position.Max(other.end, this.end);\r\n            return new Range(start, end);\r\n        };\r\n        Object.defineProperty(Range.prototype, \"isEmpty\", {\r\n            get: function () {\r\n                return this._start.isEqual(this._end);\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Range.prototype, \"isSingleLine\", {\r\n            get: function () {\r\n                return this._start.line === this._end.line;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Range.prototype.with = function (start, end) {\r\n            if (start === void 0) { start = this.start; }\r\n            if (end === void 0) { end = this.end; }\r\n            if (start.isEqual(this._start) && end.isEqual(this.end)) {\r\n                return this;\r\n            }\r\n            return new Range(start, end);\r\n        };\r\n        return Range;\r\n    })();\r\n    exports.Range = Range;\r\n    var Selection = (function (_super) {\r\n        __extends(Selection, _super);\r\n        function Selection(anchorLineOrAnchor, anchorColumnOrActive, activeLine, activeColumn) {\r\n            var anchor;\r\n            var active;\r\n            if (typeof anchorLineOrAnchor === 'number' && typeof anchorColumnOrActive === 'number' && typeof activeLine === 'number' && typeof activeColumn === 'number') {\r\n                anchor = new Position(anchorLineOrAnchor, anchorColumnOrActive);\r\n                active = new Position(activeLine, activeColumn);\r\n            }\r\n            else if (anchorLineOrAnchor instanceof Position && anchorColumnOrActive instanceof Position) {\r\n                anchor = anchorLineOrAnchor;\r\n                active = anchorColumnOrActive;\r\n            }\r\n            if (!anchor || !active) {\r\n                throw new Error('Invalid arguments');\r\n            }\r\n            this._anchor = anchor;\r\n            this._active = active;\r\n            _super.call(this, anchor, active);\r\n        }\r\n        Object.defineProperty(Selection.prototype, \"anchor\", {\r\n            get: function () {\r\n                return this._anchor;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Selection.prototype, \"active\", {\r\n            get: function () {\r\n                return this._active;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Selection.prototype, \"isReversed\", {\r\n            get: function () {\r\n                return this._anchor === this._end;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return Selection;\r\n    })(Range);\r\n    exports.Selection = Selection;\r\n    var TextEdit = (function () {\r\n        function TextEdit(range, newText) {\r\n            this.range = range;\r\n            this.newText = newText;\r\n        }\r\n        TextEdit.replace = function (range, newText) {\r\n            return new TextEdit(range, newText);\r\n        };\r\n        TextEdit.insert = function (position, newText) {\r\n            return TextEdit.replace(new Range(position, position), newText);\r\n        };\r\n        TextEdit.delete = function (range) {\r\n            return TextEdit.replace(range, '');\r\n        };\r\n        Object.defineProperty(TextEdit.prototype, \"range\", {\r\n            get: function () {\r\n                return this._range;\r\n            },\r\n            set: function (value) {\r\n                if (!value) {\r\n                    throw errors_1.illegalArgument('range');\r\n                }\r\n                this._range = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(TextEdit.prototype, \"newText\", {\r\n            get: function () {\r\n                return this._newText || '';\r\n            },\r\n            set: function (value) {\r\n                this._newText = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return TextEdit;\r\n    })();\r\n    exports.TextEdit = TextEdit;\r\n    var Uri = (function (_super) {\r\n        __extends(Uri, _super);\r\n        function Uri() {\r\n            _super.apply(this, arguments);\r\n        }\r\n        return Uri;\r\n    })(uri_1.default);\r\n    exports.Uri = Uri;\r\n    ;\r\n    var WorkspaceEdit = (function () {\r\n        function WorkspaceEdit() {\r\n            this._values = [];\r\n            this._index = Object.create(null);\r\n        }\r\n        WorkspaceEdit.prototype.replace = function (uri, range, newText) {\r\n            var edit = new TextEdit(range, newText);\r\n            var array = this.get(uri);\r\n            if (array) {\r\n                array.push(edit);\r\n            }\r\n            else {\r\n                this.set(uri, [edit]);\r\n            }\r\n        };\r\n        WorkspaceEdit.prototype.insert = function (resource, position, newText) {\r\n            this.replace(resource, new Range(position, position), newText);\r\n        };\r\n        WorkspaceEdit.prototype.delete = function (resource, range) {\r\n            this.replace(resource, range, '');\r\n        };\r\n        WorkspaceEdit.prototype.has = function (uri) {\r\n            return typeof this._index[uri.toString()] !== 'undefined';\r\n        };\r\n        WorkspaceEdit.prototype.set = function (uri, edits) {\r\n            var idx = this._index[uri.toString()];\r\n            if (typeof idx === 'undefined') {\r\n                var newLen = this._values.push([uri, edits]);\r\n                this._index[uri.toString()] = newLen - 1;\r\n            }\r\n            else {\r\n                this._values[idx][1] = edits;\r\n            }\r\n        };\r\n        WorkspaceEdit.prototype.get = function (uri) {\r\n            var idx = this._index[uri.toString()];\r\n            return typeof idx !== 'undefined' && this._values[idx][1];\r\n        };\r\n        WorkspaceEdit.prototype.entries = function () {\r\n            return this._values;\r\n        };\r\n        Object.defineProperty(WorkspaceEdit.prototype, \"size\", {\r\n            get: function () {\r\n                return this._values.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return WorkspaceEdit;\r\n    })();\r\n    exports.WorkspaceEdit = WorkspaceEdit;\r\n    (function (DiagnosticSeverity) {\r\n        DiagnosticSeverity[DiagnosticSeverity[\"Hint\"] = 3] = \"Hint\";\r\n        DiagnosticSeverity[DiagnosticSeverity[\"Information\"] = 2] = \"Information\";\r\n        DiagnosticSeverity[DiagnosticSeverity[\"Warning\"] = 1] = \"Warning\";\r\n        DiagnosticSeverity[DiagnosticSeverity[\"Error\"] = 0] = \"Error\";\r\n    })(exports.DiagnosticSeverity || (exports.DiagnosticSeverity = {}));\r\n    var DiagnosticSeverity = exports.DiagnosticSeverity;\r\n    var Location = (function () {\r\n        function Location(uri, range) {\r\n            this.uri = uri;\r\n            if (range instanceof Range) {\r\n                this.range = range;\r\n            }\r\n            else if (range instanceof Position) {\r\n                this.range = new Range(range, range);\r\n            }\r\n            else {\r\n                throw new Error('Illegal argument');\r\n            }\r\n        }\r\n        return Location;\r\n    })();\r\n    exports.Location = Location;\r\n    var Diagnostic = (function () {\r\n        function Diagnostic(range, message, severity) {\r\n            if (severity === void 0) { severity = DiagnosticSeverity.Error; }\r\n            this.range = range;\r\n            this.message = message;\r\n            this.severity = severity;\r\n        }\r\n        return Diagnostic;\r\n    })();\r\n    exports.Diagnostic = Diagnostic;\r\n    var Hover = (function () {\r\n        function Hover(contents, range) {\r\n            if (!contents) {\r\n                throw new Error('Illegal argument');\r\n            }\r\n            if (Array.isArray(contents)) {\r\n                this.contents = contents;\r\n            }\r\n            else {\r\n                this.contents = [contents];\r\n            }\r\n            this.range = range;\r\n        }\r\n        return Hover;\r\n    })();\r\n    exports.Hover = Hover;\r\n    (function (DocumentHighlightKind) {\r\n        DocumentHighlightKind[DocumentHighlightKind[\"Text\"] = 0] = \"Text\";\r\n        DocumentHighlightKind[DocumentHighlightKind[\"Read\"] = 1] = \"Read\";\r\n        DocumentHighlightKind[DocumentHighlightKind[\"Write\"] = 2] = \"Write\";\r\n    })(exports.DocumentHighlightKind || (exports.DocumentHighlightKind = {}));\r\n    var DocumentHighlightKind = exports.DocumentHighlightKind;\r\n    var DocumentHighlight = (function () {\r\n        function DocumentHighlight(range, kind) {\r\n            if (kind === void 0) { kind = DocumentHighlightKind.Text; }\r\n            this.range = range;\r\n            this.kind = kind;\r\n        }\r\n        return DocumentHighlight;\r\n    })();\r\n    exports.DocumentHighlight = DocumentHighlight;\r\n    (function (SymbolKind) {\r\n        SymbolKind[SymbolKind[\"File\"] = 0] = \"File\";\r\n        SymbolKind[SymbolKind[\"Module\"] = 1] = \"Module\";\r\n        SymbolKind[SymbolKind[\"Namespace\"] = 2] = \"Namespace\";\r\n        SymbolKind[SymbolKind[\"Package\"] = 3] = \"Package\";\r\n        SymbolKind[SymbolKind[\"Class\"] = 4] = \"Class\";\r\n        SymbolKind[SymbolKind[\"Method\"] = 5] = \"Method\";\r\n        SymbolKind[SymbolKind[\"Property\"] = 6] = \"Property\";\r\n        SymbolKind[SymbolKind[\"Field\"] = 7] = \"Field\";\r\n        SymbolKind[SymbolKind[\"Constructor\"] = 8] = \"Constructor\";\r\n        SymbolKind[SymbolKind[\"Enum\"] = 9] = \"Enum\";\r\n        SymbolKind[SymbolKind[\"Interface\"] = 10] = \"Interface\";\r\n        SymbolKind[SymbolKind[\"Function\"] = 11] = \"Function\";\r\n        SymbolKind[SymbolKind[\"Variable\"] = 12] = \"Variable\";\r\n        SymbolKind[SymbolKind[\"Constant\"] = 13] = \"Constant\";\r\n        SymbolKind[SymbolKind[\"String\"] = 14] = \"String\";\r\n        SymbolKind[SymbolKind[\"Number\"] = 15] = \"Number\";\r\n        SymbolKind[SymbolKind[\"Boolean\"] = 16] = \"Boolean\";\r\n        SymbolKind[SymbolKind[\"Array\"] = 17] = \"Array\";\r\n    })(exports.SymbolKind || (exports.SymbolKind = {}));\r\n    var SymbolKind = exports.SymbolKind;\r\n    var SymbolInformation = (function () {\r\n        function SymbolInformation(name, kind, range, uri, containerName) {\r\n            this.name = name;\r\n            this.kind = kind;\r\n            this.location = new Location(uri, range);\r\n            this.containerName = containerName;\r\n        }\r\n        return SymbolInformation;\r\n    })();\r\n    exports.SymbolInformation = SymbolInformation;\r\n    var CodeLens = (function () {\r\n        function CodeLens(range, command) {\r\n            this.range = range;\r\n            this.command = command;\r\n        }\r\n        Object.defineProperty(CodeLens.prototype, \"isResolved\", {\r\n            get: function () {\r\n                return !!this.command;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return CodeLens;\r\n    })();\r\n    exports.CodeLens = CodeLens;\r\n    var ParameterInformation = (function () {\r\n        function ParameterInformation(label, documentation) {\r\n            this.label = label;\r\n            this.documentation = documentation;\r\n        }\r\n        return ParameterInformation;\r\n    })();\r\n    exports.ParameterInformation = ParameterInformation;\r\n    var SignatureInformation = (function () {\r\n        function SignatureInformation(label, documentation) {\r\n            this.label = label;\r\n            this.documentation = documentation;\r\n            this.parameters = [];\r\n        }\r\n        return SignatureInformation;\r\n    })();\r\n    exports.SignatureInformation = SignatureInformation;\r\n    var SignatureHelp = (function () {\r\n        function SignatureHelp() {\r\n            this.signatures = [];\r\n        }\r\n        return SignatureHelp;\r\n    })();\r\n    exports.SignatureHelp = SignatureHelp;\r\n    (function (CompletionItemKind) {\r\n        CompletionItemKind[CompletionItemKind[\"Text\"] = 0] = \"Text\";\r\n        CompletionItemKind[CompletionItemKind[\"Method\"] = 1] = \"Method\";\r\n        CompletionItemKind[CompletionItemKind[\"Function\"] = 2] = \"Function\";\r\n        CompletionItemKind[CompletionItemKind[\"Constructor\"] = 3] = \"Constructor\";\r\n        CompletionItemKind[CompletionItemKind[\"Field\"] = 4] = \"Field\";\r\n        CompletionItemKind[CompletionItemKind[\"Variable\"] = 5] = \"Variable\";\r\n        CompletionItemKind[CompletionItemKind[\"Class\"] = 6] = \"Class\";\r\n        CompletionItemKind[CompletionItemKind[\"Interface\"] = 7] = \"Interface\";\r\n        CompletionItemKind[CompletionItemKind[\"Module\"] = 8] = \"Module\";\r\n        CompletionItemKind[CompletionItemKind[\"Property\"] = 9] = \"Property\";\r\n        CompletionItemKind[CompletionItemKind[\"Unit\"] = 10] = \"Unit\";\r\n        CompletionItemKind[CompletionItemKind[\"Value\"] = 11] = \"Value\";\r\n        CompletionItemKind[CompletionItemKind[\"Enum\"] = 12] = \"Enum\";\r\n        CompletionItemKind[CompletionItemKind[\"Keyword\"] = 13] = \"Keyword\";\r\n        CompletionItemKind[CompletionItemKind[\"Snippet\"] = 14] = \"Snippet\";\r\n        CompletionItemKind[CompletionItemKind[\"Color\"] = 15] = \"Color\";\r\n        CompletionItemKind[CompletionItemKind[\"File\"] = 16] = \"File\";\r\n        CompletionItemKind[CompletionItemKind[\"Reference\"] = 17] = \"Reference\";\r\n    })(exports.CompletionItemKind || (exports.CompletionItemKind = {}));\r\n    var CompletionItemKind = exports.CompletionItemKind;\r\n    var CompletionItem = (function () {\r\n        function CompletionItem(label) {\r\n            this.label = label;\r\n        }\r\n        return CompletionItem;\r\n    })();\r\n    exports.CompletionItem = CompletionItem;\r\n    (function (ViewColumn) {\r\n        ViewColumn[ViewColumn[\"One\"] = 1] = \"One\";\r\n        ViewColumn[ViewColumn[\"Two\"] = 2] = \"Two\";\r\n        ViewColumn[ViewColumn[\"Three\"] = 3] = \"Three\";\r\n    })(exports.ViewColumn || (exports.ViewColumn = {}));\r\n    var ViewColumn = exports.ViewColumn;\r\n    (function (StatusBarAlignment) {\r\n        StatusBarAlignment[StatusBarAlignment[\"Left\"] = 1] = \"Left\";\r\n        StatusBarAlignment[StatusBarAlignment[\"Right\"] = 2] = \"Right\";\r\n    })(exports.StatusBarAlignment || (exports.StatusBarAlignment = {}));\r\n    var StatusBarAlignment = exports.StatusBarAlignment;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") return Reflect.decorate(decorators, target, key, desc);\r\n    switch (arguments.length) {\r\n        case 2: return decorators.reduceRight(function(o, d) { return (d && d(o)) || o; }, target);\r\n        case 3: return decorators.reduceRight(function(o, d) { return (d && d(target, key)), void 0; }, void 0);\r\n        case 4: return decorators.reduceRight(function(o, d) { return (d && d(target, key, o)) || o; }, desc);\r\n    }\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\ndefine(\"vs/workbench/api/common/pluginHostFileSystemEventService\", [\"require\", \"exports\", 'vs/platform/files/common/files', 'vs/platform/thread/common/thread', 'vs/base/common/event', './pluginHostTypes', 'vs/platform/event/common/event', 'vs/base/common/async', 'vs/base/common/glob', 'vs/platform/instantiation/common/instantiation'], function (require, exports, files_1, thread_1, event_1, pluginHostTypes_1, event_2, async_1, glob_1, instantiation_1) {\r\n    var FileSystemWatcher = (function () {\r\n        function FileSystemWatcher(dispatcher, globPattern, ignoreCreateEvents, ignoreChangeEvents, ignoreDeleteEvents) {\r\n            var _this = this;\r\n            this._onDidCreate = new event_1.Emitter();\r\n            this._onDidChange = new event_1.Emitter();\r\n            this._onDidDelete = new event_1.Emitter();\r\n            this._config = 0;\r\n            if (!ignoreCreateEvents) {\r\n                this._config += 1;\r\n            }\r\n            if (!ignoreChangeEvents) {\r\n                this._config += 2;\r\n            }\r\n            if (!ignoreDeleteEvents) {\r\n                this._config += 4;\r\n            }\r\n            var subscription = dispatcher(function (events) {\r\n                if (!ignoreCreateEvents) {\r\n                    for (var _i = 0, _a = events.created; _i < _a.length; _i++) {\r\n                        var created = _a[_i];\r\n                        if (glob_1.match(globPattern, created.fsPath)) {\r\n                            _this._onDidCreate.fire(created);\r\n                        }\r\n                    }\r\n                }\r\n                if (!ignoreChangeEvents) {\r\n                    for (var _b = 0, _c = events.changed; _b < _c.length; _b++) {\r\n                        var changed = _c[_b];\r\n                        if (glob_1.match(globPattern, changed.fsPath)) {\r\n                            _this._onDidChange.fire(changed);\r\n                        }\r\n                    }\r\n                }\r\n                if (!ignoreDeleteEvents) {\r\n                    for (var _d = 0, _e = events.deleted; _d < _e.length; _d++) {\r\n                        var deleted = _e[_d];\r\n                        if (glob_1.match(globPattern, deleted.fsPath)) {\r\n                            _this._onDidDelete.fire(deleted);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            this._disposable = pluginHostTypes_1.Disposable.from(this._onDidCreate, this._onDidChange, this._onDidDelete, subscription);\r\n        }\r\n        Object.defineProperty(FileSystemWatcher.prototype, \"ignoreCreateEvents\", {\r\n            get: function () {\r\n                return Boolean(this._config & 1);\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(FileSystemWatcher.prototype, \"ignoreChangeEvents\", {\r\n            get: function () {\r\n                return Boolean(this._config & 2);\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(FileSystemWatcher.prototype, \"ignoreDeleteEvents\", {\r\n            get: function () {\r\n                return Boolean(this._config & 4);\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        FileSystemWatcher.prototype.dispose = function () {\r\n            this._disposable.dispose();\r\n        };\r\n        Object.defineProperty(FileSystemWatcher.prototype, \"onDidCreate\", {\r\n            get: function () {\r\n                return this._onDidCreate.event;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(FileSystemWatcher.prototype, \"onDidChange\", {\r\n            get: function () {\r\n                return this._onDidChange.event;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(FileSystemWatcher.prototype, \"onDidDelete\", {\r\n            get: function () {\r\n                return this._onDidDelete.event;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return FileSystemWatcher;\r\n    })();\r\n    exports.FileSystemWatcher = FileSystemWatcher;\r\n    var PluginHostFileSystemEventService = (function () {\r\n        function PluginHostFileSystemEventService(ns) {\r\n            this._emitter = new event_1.Emitter();\r\n            this._watchers = [];\r\n        }\r\n        PluginHostFileSystemEventService.prototype.createFileSystemWatcher = function (globPattern, ignoreCreateEvents, ignoreChangeEvents, ignoreDeleteEvents) {\r\n            return new FileSystemWatcher(this._emitter.event, globPattern, ignoreCreateEvents, ignoreChangeEvents, ignoreDeleteEvents);\r\n        };\r\n        PluginHostFileSystemEventService.prototype._onFileEvent = function (events) {\r\n            this._emitter.fire(events);\r\n        };\r\n        PluginHostFileSystemEventService = __decorate([\r\n            thread_1.Remotable.PluginHostContext('PluginHostFileSystemEventService'),\r\n            __param(0, instantiation_1.INullService)\r\n        ], PluginHostFileSystemEventService);\r\n        return PluginHostFileSystemEventService;\r\n    })();\r\n    exports.PluginHostFileSystemEventService = PluginHostFileSystemEventService;\r\n    var MainThreadFileSystemEventService = (function () {\r\n        function MainThreadFileSystemEventService(eventService, threadService) {\r\n            var proxy = threadService.getRemotable(PluginHostFileSystemEventService);\r\n            var events = {\r\n                created: [],\r\n                changed: [],\r\n                deleted: []\r\n            };\r\n            var scheduler = new async_1.RunOnceScheduler(function () {\r\n                proxy._onFileEvent(events);\r\n                events.created.length = 0;\r\n                events.changed.length = 0;\r\n                events.deleted.length = 0;\r\n            }, 100);\r\n            eventService.addListener('files:fileChanges', function (event) {\r\n                for (var _i = 0, _a = event.changes; _i < _a.length; _i++) {\r\n                    var change = _a[_i];\r\n                    switch (change.type) {\r\n                        case files_1.FileChangeType.ADDED:\r\n                            events.created.push(change.resource);\r\n                            break;\r\n                        case files_1.FileChangeType.UPDATED:\r\n                            events.changed.push(change.resource);\r\n                            break;\r\n                        case files_1.FileChangeType.DELETED:\r\n                            events.deleted.push(change.resource);\r\n                            break;\r\n                    }\r\n                }\r\n                scheduler.schedule();\r\n            });\r\n        }\r\n        MainThreadFileSystemEventService = __decorate([\r\n            __param(0, event_2.IEventService),\r\n            __param(1, thread_1.IThreadService)\r\n        ], MainThreadFileSystemEventService);\r\n        return MainThreadFileSystemEventService;\r\n    })();\r\n    exports.MainThreadFileSystemEventService = MainThreadFileSystemEventService;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/workbench/api/common/pluginHostTypeConverters\", [\"require\", \"exports\", 'vs/base/common/severity', './pluginHostTypes', 'vs/platform/editor/common/editor'], function (require, exports, severity_1, types, editor_1) {\r\n    function toSelection(selection) {\r\n        var selectionStartLineNumber = selection.selectionStartLineNumber, selectionStartColumn = selection.selectionStartColumn, positionLineNumber = selection.positionLineNumber, positionColumn = selection.positionColumn;\r\n        var start = new types.Position(selectionStartLineNumber - 1, selectionStartColumn - 1);\r\n        var end = new types.Position(positionLineNumber - 1, positionColumn - 1);\r\n        return new types.Selection(start, end);\r\n    }\r\n    exports.toSelection = toSelection;\r\n    function fromSelection(selection) {\r\n        var anchor = selection.anchor, active = selection.active;\r\n        return {\r\n            selectionStartLineNumber: anchor.line + 1,\r\n            selectionStartColumn: anchor.character + 1,\r\n            positionLineNumber: active.line + 1,\r\n            positionColumn: active.character + 1\r\n        };\r\n    }\r\n    exports.fromSelection = fromSelection;\r\n    function fromRange(range) {\r\n        var start = range.start, end = range.end;\r\n        return {\r\n            startLineNumber: start.line + 1,\r\n            startColumn: start.character + 1,\r\n            endLineNumber: end.line + 1,\r\n            endColumn: end.character + 1\r\n        };\r\n    }\r\n    exports.fromRange = fromRange;\r\n    function toRange(range) {\r\n        var startLineNumber = range.startLineNumber, startColumn = range.startColumn, endLineNumber = range.endLineNumber, endColumn = range.endColumn;\r\n        return new types.Range(startLineNumber - 1, startColumn - 1, endLineNumber - 1, endColumn - 1);\r\n    }\r\n    exports.toRange = toRange;\r\n    function toPosition(position) {\r\n        return new types.Position(position.lineNumber - 1, position.column - 1);\r\n    }\r\n    exports.toPosition = toPosition;\r\n    function fromPosition(position) {\r\n        return { lineNumber: position.line + 1, column: position.character + 1 };\r\n    }\r\n    exports.fromPosition = fromPosition;\r\n    function fromDiagnosticSeverity(value) {\r\n        switch (value) {\r\n            case types.DiagnosticSeverity.Error:\r\n                return severity_1.default.Error;\r\n            case types.DiagnosticSeverity.Warning:\r\n                return severity_1.default.Warning;\r\n            case types.DiagnosticSeverity.Information:\r\n                return severity_1.default.Info;\r\n            case types.DiagnosticSeverity.Hint:\r\n                return severity_1.default.Ignore;\r\n        }\r\n        return severity_1.default.Error;\r\n    }\r\n    exports.fromDiagnosticSeverity = fromDiagnosticSeverity;\r\n    function toDiagnosticSeverty(value) {\r\n        switch (value) {\r\n            case severity_1.default.Info:\r\n                return types.DiagnosticSeverity.Information;\r\n            case severity_1.default.Warning:\r\n                return types.DiagnosticSeverity.Warning;\r\n            case severity_1.default.Error:\r\n                return types.DiagnosticSeverity.Error;\r\n            case severity_1.default.Ignore:\r\n                return types.DiagnosticSeverity.Hint;\r\n        }\r\n        return types.DiagnosticSeverity.Error;\r\n    }\r\n    exports.toDiagnosticSeverty = toDiagnosticSeverty;\r\n    function fromViewColumn(column) {\r\n        var editorColumn = editor_1.Position.LEFT;\r\n        if (typeof column !== 'number') {\r\n        }\r\n        else if (column === types.ViewColumn.Two) {\r\n            editorColumn = editor_1.Position.CENTER;\r\n        }\r\n        else if (column === types.ViewColumn.Three) {\r\n            editorColumn = editor_1.Position.RIGHT;\r\n        }\r\n        return editorColumn;\r\n    }\r\n    exports.fromViewColumn = fromViewColumn;\r\n    function fromFormattedString(value) {\r\n        if (typeof value === 'string') {\r\n            return { formattedText: value };\r\n        }\r\n        else if (typeof value === 'object') {\r\n            return { code: value };\r\n        }\r\n    }\r\n    exports.fromFormattedString = fromFormattedString;\r\n    function toFormattedString(value) {\r\n        if (typeof value.code === 'string') {\r\n            return value.code;\r\n        }\r\n        var formattedText = value.formattedText, text = value.text;\r\n        return formattedText || text || '<???>';\r\n    }\r\n    exports.toFormattedString = toFormattedString;\r\n    function isMarkedStringArr(something) {\r\n        return Array.isArray(something);\r\n    }\r\n    function fromMarkedStringOrMarkedStringArr(something) {\r\n        if (isMarkedStringArr(something)) {\r\n            return something.map(function (msg) { return fromFormattedString(msg); });\r\n        }\r\n        else if (something) {\r\n            return [fromFormattedString(something)];\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    }\r\n    function isRangeWithMessage(something) {\r\n        return (typeof something.range !== 'undefined');\r\n    }\r\n    function isRangeWithMessageArr(something) {\r\n        if (something.length === 0) {\r\n            return true;\r\n        }\r\n        return isRangeWithMessage(something[0]);\r\n    }\r\n    function fromRangeOrRangeWithMessage(ranges) {\r\n        if (isRangeWithMessageArr(ranges)) {\r\n            return ranges.map(function (r) {\r\n                return {\r\n                    range: fromRange(r.range),\r\n                    hoverMessage: fromMarkedStringOrMarkedStringArr(r.hoverMessage)\r\n                };\r\n            });\r\n        }\r\n        else {\r\n            return ranges.map(function (r) {\r\n                return {\r\n                    range: fromRange(r)\r\n                };\r\n            });\r\n        }\r\n    }\r\n    exports.fromRangeOrRangeWithMessage = fromRangeOrRangeWithMessage;\r\n    exports.TextEdit = {\r\n        from: function (edit) {\r\n            return {\r\n                text: edit.newText,\r\n                range: fromRange(edit.range)\r\n            };\r\n        },\r\n        to: function (edit) {\r\n            return new types.TextEdit(toRange(edit.range), edit.text);\r\n        }\r\n    };\r\n    var SymbolKind;\r\n    (function (SymbolKind) {\r\n        function from(kind) {\r\n            switch (kind) {\r\n                case types.SymbolKind.Method:\r\n                    return 'method';\r\n                case types.SymbolKind.Function:\r\n                    return 'function';\r\n                case types.SymbolKind.Constructor:\r\n                    return 'constructor';\r\n                case types.SymbolKind.Variable:\r\n                    return 'variable';\r\n                case types.SymbolKind.Class:\r\n                    return 'class';\r\n                case types.SymbolKind.Interface:\r\n                    return 'interface';\r\n                case types.SymbolKind.Module:\r\n                case types.SymbolKind.Namespace:\r\n                case types.SymbolKind.Package:\r\n                    return 'module';\r\n                case types.SymbolKind.Property:\r\n                    return 'property';\r\n                case types.SymbolKind.Enum:\r\n                    return 'enum';\r\n                case types.SymbolKind.String:\r\n                    return 'string';\r\n                case types.SymbolKind.File:\r\n                    return 'file';\r\n                case types.SymbolKind.Array:\r\n                    return 'array';\r\n                case types.SymbolKind.Number:\r\n                    return 'number';\r\n                case types.SymbolKind.Boolean:\r\n                    return 'boolean';\r\n            }\r\n            return 'property';\r\n        }\r\n        SymbolKind.from = from;\r\n        function to(type) {\r\n            switch (type) {\r\n                case 'method':\r\n                    return types.SymbolKind.Method;\r\n                case 'function':\r\n                    return types.SymbolKind.Function;\r\n                case 'constructor':\r\n                    return types.SymbolKind.Constructor;\r\n                case 'variable':\r\n                    return types.SymbolKind.Variable;\r\n                case 'class':\r\n                    return types.SymbolKind.Class;\r\n                case 'interface':\r\n                    return types.SymbolKind.Interface;\r\n                case 'module':\r\n                    // case types.SymbolKind.Namespace:\r\n                    // case types.SymbolKind.Package:\r\n                    return types.SymbolKind.Module;\r\n                case 'property':\r\n                    return types.SymbolKind.Property;\r\n                case 'enum':\r\n                    return types.SymbolKind.Enum;\r\n                case 'string':\r\n                    return types.SymbolKind.String;\r\n                case 'file':\r\n                    return types.SymbolKind.File;\r\n                case 'array':\r\n                    return types.SymbolKind.Array;\r\n                case 'number':\r\n                    return types.SymbolKind.Number;\r\n                case 'boolean':\r\n                    return types.SymbolKind.Boolean;\r\n            }\r\n            return types.SymbolKind.Property;\r\n        }\r\n        SymbolKind.to = to;\r\n    })(SymbolKind = exports.SymbolKind || (exports.SymbolKind = {}));\r\n    var SymbolInformation;\r\n    (function (SymbolInformation) {\r\n        function fromOutlineEntry(entry) {\r\n            return new types.SymbolInformation(entry.label, SymbolKind.to(entry.type), toRange(entry.range), undefined, entry.containerLabel);\r\n        }\r\n        SymbolInformation.fromOutlineEntry = fromOutlineEntry;\r\n        function toOutlineEntry(symbol) {\r\n            return {\r\n                type: SymbolKind.from(symbol.kind),\r\n                range: fromRange(symbol.location.range),\r\n                containerLabel: symbol.containerName,\r\n                label: symbol.name,\r\n                icon: undefined,\r\n            };\r\n        }\r\n        SymbolInformation.toOutlineEntry = toOutlineEntry;\r\n    })(SymbolInformation = exports.SymbolInformation || (exports.SymbolInformation = {}));\r\n    function fromSymbolInformation(info) {\r\n        return {\r\n            name: info.name,\r\n            type: types.SymbolKind[info.kind || types.SymbolKind.Property].toLowerCase(),\r\n            range: fromRange(info.location.range),\r\n            resourceUri: info.location.uri,\r\n            containerName: info.containerName,\r\n            parameters: '',\r\n        };\r\n    }\r\n    exports.fromSymbolInformation = fromSymbolInformation;\r\n    function toSymbolInformation(bearing) {\r\n        return new types.SymbolInformation(bearing.name, types.SymbolKind[bearing.type.charAt(0).toUpperCase() + bearing.type.substr(1)], toRange(bearing.range), bearing.resourceUri, bearing.containerName);\r\n    }\r\n    exports.toSymbolInformation = toSymbolInformation;\r\n    function toLocation(reference) {\r\n        return new types.Location(reference.resource, toRange(reference.range));\r\n    }\r\n    exports.toLocation = toLocation;\r\n    function fromHover(hover) {\r\n        return {\r\n            range: fromRange(hover.range),\r\n            htmlContent: hover.contents.map(fromFormattedString)\r\n        };\r\n    }\r\n    exports.fromHover = fromHover;\r\n    function toHover(info) {\r\n        return new types.Hover(info.htmlContent.map(toFormattedString), toRange(info.range));\r\n    }\r\n    exports.toHover = toHover;\r\n    function toDocumentHighlight(occurrence) {\r\n        return new types.DocumentHighlight(toRange(occurrence.range), types.DocumentHighlightKind[occurrence.kind.charAt(0).toUpperCase() + occurrence.kind.substr(1)]);\r\n    }\r\n    exports.toDocumentHighlight = toDocumentHighlight;\r\n    exports.Suggest = {\r\n        from: function (item) {\r\n            var suggestion = {\r\n                label: item.label,\r\n                codeSnippet: item.insertText || item.label,\r\n                type: types.CompletionItemKind[item.kind || types.CompletionItemKind.Text].toString().toLowerCase(),\r\n                typeLabel: item.detail,\r\n                documentationLabel: item.documentation,\r\n                sortText: item.sortText,\r\n                filterText: item.filterText\r\n            };\r\n            return suggestion;\r\n        },\r\n        to: function (container, position, suggestion) {\r\n            var result = new types.CompletionItem(suggestion.label);\r\n            result.insertText = suggestion.codeSnippet;\r\n            result.kind = types.CompletionItemKind[suggestion.type.charAt(0).toUpperCase() + suggestion.type.substr(1)];\r\n            result.detail = suggestion.typeLabel;\r\n            result.documentation = suggestion.documentationLabel;\r\n            result.sortText = suggestion.sortText;\r\n            result.filterText = suggestion.filterText;\r\n            var overwriteBefore = (typeof suggestion.overwriteBefore === 'number') ? suggestion.overwriteBefore : container.currentWord.length;\r\n            var startPosition = new types.Position(position.line, Math.max(0, position.character - overwriteBefore));\r\n            var endPosition = position;\r\n            if (typeof suggestion.overwriteAfter === 'number') {\r\n                endPosition = new types.Position(position.line, position.character + suggestion.overwriteAfter);\r\n            }\r\n            result.textEdit = types.TextEdit.replace(new types.Range(startPosition, endPosition), suggestion.codeSnippet);\r\n            return result;\r\n        }\r\n    };\r\n    var SignatureHelp;\r\n    (function (SignatureHelp) {\r\n        function from(signatureHelp) {\r\n            var result = {\r\n                currentSignature: signatureHelp.activeSignature,\r\n                currentParameter: signatureHelp.activeParameter,\r\n                signatures: []\r\n            };\r\n            for (var _i = 0, _a = signatureHelp.signatures; _i < _a.length; _i++) {\r\n                var signature = _a[_i];\r\n                var signatureItem = {\r\n                    label: signature.label,\r\n                    documentation: signature.documentation,\r\n                    parameters: []\r\n                };\r\n                var idx = 0;\r\n                for (var _b = 0, _c = signature.parameters; _b < _c.length; _b++) {\r\n                    var parameter = _c[_b];\r\n                    var parameterItem = {\r\n                        label: parameter.label,\r\n                        documentation: parameter.documentation,\r\n                    };\r\n                    signatureItem.parameters.push(parameterItem);\r\n                    idx = signature.label.indexOf(parameter.label, idx);\r\n                    if (idx >= 0) {\r\n                        parameterItem.signatureLabelOffset = idx;\r\n                        idx += parameter.label.length;\r\n                        parameterItem.signatureLabelEnd = idx;\r\n                    }\r\n                    else {\r\n                        parameterItem.signatureLabelOffset = 0;\r\n                        parameterItem.signatureLabelEnd = 0;\r\n                    }\r\n                }\r\n                result.signatures.push(signatureItem);\r\n            }\r\n            return result;\r\n        }\r\n        SignatureHelp.from = from;\r\n        function to(hints) {\r\n            var result = new types.SignatureHelp();\r\n            result.activeSignature = hints.currentSignature;\r\n            result.activeParameter = hints.currentParameter;\r\n            for (var _i = 0, _a = hints.signatures; _i < _a.length; _i++) {\r\n                var signature = _a[_i];\r\n                var signatureItem = new types.SignatureInformation(signature.label, signature.documentation);\r\n                result.signatures.push(signatureItem);\r\n                for (var _b = 0, _c = signature.parameters; _b < _c.length; _b++) {\r\n                    var parameter = _c[_b];\r\n                    var parameterItem = new types.ParameterInformation(parameter.label, parameter.documentation);\r\n                    signatureItem.parameters.push(parameterItem);\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n        SignatureHelp.to = to;\r\n    })(SignatureHelp = exports.SignatureHelp || (exports.SignatureHelp = {}));\r\n    exports.Command = {\r\n        from: function (command) {\r\n            if (command) {\r\n                return {\r\n                    id: command.command,\r\n                    title: command.title,\r\n                    arguments: command.arguments\r\n                };\r\n            }\r\n        },\r\n        to: function (command) {\r\n            if (command) {\r\n                return {\r\n                    command: command.id,\r\n                    title: command.title,\r\n                    arguments: command.arguments\r\n                };\r\n            }\r\n        }\r\n    };\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/workbench/api/common/extHostApiCommands\", [\"require\", \"exports\", 'vs/base/common/uri', 'vs/base/common/winjs.base', 'vs/workbench/api/common/pluginHostTypeConverters', 'vs/workbench/api/common/pluginHostTypes'], function (require, exports, uri_1, winjs_base_1, typeConverters, types) {\r\n    var ExtHostApiCommands = (function () {\r\n        function ExtHostApiCommands(commands) {\r\n            this._disposables = [];\r\n            this._commands = commands;\r\n            this._register('vscode.executeWorkspaceSymbolProvider', this._executeWorkspaceSymbolProvider, {\r\n                description: 'Execute all workspace symbol provider.',\r\n                args: [{ name: 'query', constraint: String }],\r\n                returns: 'A promise that resolves to an array of SymbolInformation-instances.'\r\n            });\r\n            this._register('vscode.executeDefinitionProvider', this._executeDefinitionProvider, {\r\n                description: 'Execute all definition provider.',\r\n                args: [\r\n                    { name: 'uri', description: 'Uri of a text document', constraint: uri_1.default },\r\n                    { name: 'position', description: 'Position of a symbol', constraint: types.Position }\r\n                ],\r\n                returns: 'A promise that resolves to an array of Location-instances.'\r\n            });\r\n            this._register('vscode.executeHoverProvider', this._executeHoverProvider, {\r\n                description: 'Execute all definition provider.',\r\n                args: [\r\n                    { name: 'uri', description: 'Uri of a text document', constraint: uri_1.default },\r\n                    { name: 'position', description: 'Position of a symbol', constraint: types.Position }\r\n                ],\r\n                returns: 'A promise that resolves to an array of Hover-instances.'\r\n            });\r\n            this._register('vscode.executeDocumentHighlights', this._executeDocumentHighlights, {\r\n                description: 'Execute document highlight provider.',\r\n                args: [\r\n                    { name: 'uri', description: 'Uri of a text document', constraint: uri_1.default },\r\n                    { name: 'position', description: 'Position in a text document', constraint: types.Position }\r\n                ],\r\n                returns: 'A promise that resolves to an array of DocumentHighlight-instances.'\r\n            });\r\n            this._register('vscode.executeReferenceProvider', this._executeReferenceProvider, {\r\n                description: 'Execute reference provider.',\r\n                args: [\r\n                    { name: 'uri', description: 'Uri of a text document', constraint: uri_1.default },\r\n                    { name: 'position', description: 'Position in a text document', constraint: types.Position }\r\n                ],\r\n                returns: 'A promise that resolves to an array of Location-instances.'\r\n            });\r\n            this._register('vscode.executeDocumentRenameProvider', this._executeDocumentRenameProvider, {\r\n                description: 'Execute rename provider.',\r\n                args: [\r\n                    { name: 'uri', description: 'Uri of a text document', constraint: uri_1.default },\r\n                    { name: 'position', description: 'Position in a text document', constraint: types.Position },\r\n                    { name: 'newName', description: 'The new symbol name', constraint: String }\r\n                ],\r\n                returns: 'A promise that resolves to a WorkspaceEdit.'\r\n            });\r\n            this._register('vscode.executeSignatureHelpProvider', this._executeSignatureHelpProvider, {\r\n                description: 'Execute signature help provider.',\r\n                args: [\r\n                    { name: 'uri', description: 'Uri of a text document', constraint: uri_1.default },\r\n                    { name: 'position', description: 'Position in a text document', constraint: types.Position }\r\n                ],\r\n                returns: 'A promise that resolves to SignatureHelp.'\r\n            });\r\n            this._register('vscode.executeDocumentSymbolProvider', this._executeDocumentSymbolProvider, {\r\n                description: 'Execute document symbol provider.',\r\n                args: [\r\n                    { name: 'uri', description: 'Uri of a text document', constraint: uri_1.default }\r\n                ],\r\n                returns: 'A promise that resolves to an array of SymbolInformation-instances.'\r\n            });\r\n            this._register('vscode.executeCompletionItemProvider', this._executeCompletionItemProvider, {\r\n                description: 'Execute completion item provider.',\r\n                args: [\r\n                    { name: 'uri', description: 'Uri of a text document', constraint: uri_1.default },\r\n                    { name: 'position', description: 'Position in a text document', constraint: types.Position }\r\n                ],\r\n                returns: 'A promise that resolves to an array of CompletionItem-instances.'\r\n            });\r\n            this._register('vscode.executeCodeActionProvider', this._executeCodeActionProvider, {\r\n                description: 'Execute code action provider.',\r\n                args: [\r\n                    { name: 'uri', description: 'Uri of a text document', constraint: uri_1.default },\r\n                    { name: 'range', description: 'Range in a text document', constraint: types.Range }\r\n                ],\r\n                returns: 'A promise that resolves to an array of CompletionItem-instances.'\r\n            });\r\n            this._register('vscode.executeCodeLensProvider', this._executeCodeLensProvider, {\r\n                description: 'Execute completion item provider.',\r\n                args: [\r\n                    { name: 'uri', description: 'Uri of a text document', constraint: uri_1.default }\r\n                ],\r\n                returns: 'A promise that resolves to an array of Commands.'\r\n            });\r\n            this._register('vscode.executeFormatDocumentProvider', this._executeFormatDocumentProvider, {\r\n                description: 'Execute document format provider.',\r\n                args: [\r\n                    { name: 'uri', description: 'Uri of a text document', constraint: uri_1.default },\r\n                    { name: 'options', description: 'Formatting options' }\r\n                ],\r\n                returns: 'A promise that resolves to an array of TextEdits.'\r\n            });\r\n            this._register('vscode.executeFormatRangeProvider', this._executeFormatRangeProvider, {\r\n                description: 'Execute range format provider.',\r\n                args: [\r\n                    { name: 'uri', description: 'Uri of a text document', constraint: uri_1.default },\r\n                    { name: 'range', description: 'Range in a text document', constraint: types.Range },\r\n                    { name: 'options', description: 'Formatting options' }\r\n                ],\r\n                returns: 'A promise that resolves to an array of TextEdits.'\r\n            });\r\n            this._register('vscode.executeFormatOnTypeProvider', this._executeFormatOnTypeProvider, {\r\n                description: 'Execute document format provider.',\r\n                args: [\r\n                    { name: 'uri', description: 'Uri of a text document', constraint: uri_1.default },\r\n                    { name: 'position', description: 'Position in a text document', constraint: types.Position },\r\n                    { name: 'ch', description: 'Character that got typed', constraint: String },\r\n                    { name: 'options', description: 'Formatting options' }\r\n                ],\r\n                returns: 'A promise that resolves to an array of TextEdits.'\r\n            });\r\n        }\r\n        // --- command impl\r\n        ExtHostApiCommands.prototype._register = function (id, handler, description) {\r\n            var disposable = this._commands.registerCommand(id, handler, this, description);\r\n            this._disposables.push(disposable);\r\n        };\r\n        /**\r\n         * Execute workspace symbol provider.\r\n         *\r\n         * @param query Search string to match query symbol names\r\n         * @return A promise that resolves to an array of symbol information.\r\n         */\r\n        ExtHostApiCommands.prototype._executeWorkspaceSymbolProvider = function (query) {\r\n            return this._commands.executeCommand('_executeWorkspaceSymbolProvider', { query: query }).then(function (value) {\r\n                if (Array.isArray(value)) {\r\n                    return value.map(typeConverters.toSymbolInformation);\r\n                }\r\n            });\r\n        };\r\n        ExtHostApiCommands.prototype._executeDefinitionProvider = function (resource, position) {\r\n            var args = {\r\n                resource: resource,\r\n                position: position && typeConverters.fromPosition(position)\r\n            };\r\n            return this._commands.executeCommand('_executeDefinitionProvider', args).then(function (value) {\r\n                if (Array.isArray(value)) {\r\n                    return value.map(typeConverters.toLocation);\r\n                }\r\n            });\r\n        };\r\n        ExtHostApiCommands.prototype._executeHoverProvider = function (resource, position) {\r\n            var args = {\r\n                resource: resource,\r\n                position: position && typeConverters.fromPosition(position)\r\n            };\r\n            return this._commands.executeCommand('_executeHoverProvider', args).then(function (value) {\r\n                if (Array.isArray(value)) {\r\n                    return value.map(typeConverters.toHover);\r\n                }\r\n            });\r\n        };\r\n        ExtHostApiCommands.prototype._executeDocumentHighlights = function (resource, position) {\r\n            var args = {\r\n                resource: resource,\r\n                position: position && typeConverters.fromPosition(position)\r\n            };\r\n            return this._commands.executeCommand('_executeDocumentHighlights', args).then(function (value) {\r\n                if (Array.isArray(value)) {\r\n                    return value.map(typeConverters.toDocumentHighlight);\r\n                }\r\n            });\r\n        };\r\n        ExtHostApiCommands.prototype._executeReferenceProvider = function (resource, position) {\r\n            var args = {\r\n                resource: resource,\r\n                position: position && typeConverters.fromPosition(position)\r\n            };\r\n            return this._commands.executeCommand('_executeDocumentHighlights', args).then(function (value) {\r\n                if (Array.isArray(value)) {\r\n                    return value.map(typeConverters.toLocation);\r\n                }\r\n            });\r\n        };\r\n        ExtHostApiCommands.prototype._executeDocumentRenameProvider = function (resource, position, newName) {\r\n            var args = {\r\n                resource: resource,\r\n                position: position && typeConverters.fromPosition(position),\r\n                newName: newName\r\n            };\r\n            return this._commands.executeCommand('_executeDocumentRenameProvider', args).then(function (value) {\r\n                if (!value) {\r\n                    return;\r\n                }\r\n                if (value.rejectReason) {\r\n                    return winjs_base_1.TPromise.wrapError(value.rejectReason);\r\n                }\r\n                var workspaceEdit = new types.WorkspaceEdit();\r\n                for (var _i = 0, _a = value.edits; _i < _a.length; _i++) {\r\n                    var edit = _a[_i];\r\n                    workspaceEdit.replace(edit.resource, typeConverters.toRange(edit.range), edit.newText);\r\n                }\r\n                return workspaceEdit;\r\n            });\r\n        };\r\n        ExtHostApiCommands.prototype._executeSignatureHelpProvider = function (resource, position, triggerCharacter) {\r\n            var args = {\r\n                resource: resource,\r\n                position: position && typeConverters.fromPosition(position),\r\n                triggerCharacter: triggerCharacter\r\n            };\r\n            return this._commands.executeCommand('_executeSignatureHelpProvider', args).then(function (value) {\r\n                if (value) {\r\n                    return typeConverters.SignatureHelp.to(value);\r\n                }\r\n            });\r\n        };\r\n        ExtHostApiCommands.prototype._executeCompletionItemProvider = function (resource, position, triggerCharacter) {\r\n            var args = {\r\n                resource: resource,\r\n                position: position && typeConverters.fromPosition(position),\r\n                triggerCharacter: triggerCharacter\r\n            };\r\n            return this._commands.executeCommand('_executeCompletionItemProvider', args).then(function (value) {\r\n                if (value) {\r\n                    var items = [];\r\n                    for (var _i = 0; _i < value.length; _i++) {\r\n                        var group = value[_i];\r\n                        for (var _a = 0; _a < group.length; _a++) {\r\n                            var suggestions = group[_a];\r\n                            for (var _b = 0, _c = suggestions.suggestions; _b < _c.length; _b++) {\r\n                                var suggestion = _c[_b];\r\n                                var item = typeConverters.Suggest.to(suggestions, position, suggestion);\r\n                                items.push(item);\r\n                            }\r\n                        }\r\n                    }\r\n                    return items;\r\n                }\r\n            });\r\n        };\r\n        ExtHostApiCommands.prototype._executeDocumentSymbolProvider = function (resource) {\r\n            var args = {\r\n                resource: resource\r\n            };\r\n            return this._commands.executeCommand('_executeDocumentSymbolProvider', args).then(function (value) {\r\n                if (value && Array.isArray(value.entries)) {\r\n                    return value.entries.map(typeConverters.SymbolInformation.fromOutlineEntry);\r\n                }\r\n            });\r\n        };\r\n        ExtHostApiCommands.prototype._executeCodeActionProvider = function (resource, range) {\r\n            var args = {\r\n                resource: resource,\r\n                range: typeConverters.fromRange(range)\r\n            };\r\n            return this._commands.executeCommand('_executeCodeActionProvider', args).then(function (value) {\r\n                if (!Array.isArray(value)) {\r\n                    return;\r\n                }\r\n                return value.map(function (quickFix) { return typeConverters.Command.to(quickFix.command); });\r\n            });\r\n        };\r\n        ExtHostApiCommands.prototype._executeCodeLensProvider = function (resource) {\r\n            var args = { resource: resource };\r\n            return this._commands.executeCommand('_executeCodeLensProvider', args).then(function (value) {\r\n                if (Array.isArray(value)) {\r\n                    return value.map(function (item) {\r\n                        return new types.CodeLens(typeConverters.toRange(item.symbol.range), typeConverters.Command.to(item.symbol.command));\r\n                    });\r\n                }\r\n            });\r\n        };\r\n        ExtHostApiCommands.prototype._executeFormatDocumentProvider = function (resource, options) {\r\n            var args = {\r\n                resource: resource,\r\n                options: options\r\n            };\r\n            return this._commands.executeCommand('_executeFormatDocumentProvider', args).then(function (value) {\r\n                if (Array.isArray(value)) {\r\n                    return value.map(function (edit) { return new types.TextEdit(typeConverters.toRange(edit.range), edit.text); });\r\n                }\r\n            });\r\n        };\r\n        ExtHostApiCommands.prototype._executeFormatRangeProvider = function (resource, range, options) {\r\n            var args = {\r\n                resource: resource,\r\n                range: typeConverters.fromRange(range),\r\n                options: options\r\n            };\r\n            return this._commands.executeCommand('_executeFormatRangeProvider', args).then(function (value) {\r\n                if (Array.isArray(value)) {\r\n                    return value.map(function (edit) { return new types.TextEdit(typeConverters.toRange(edit.range), edit.text); });\r\n                }\r\n            });\r\n        };\r\n        ExtHostApiCommands.prototype._executeFormatOnTypeProvider = function (resource, position, ch, options) {\r\n            var args = {\r\n                resource: resource,\r\n                position: typeConverters.fromPosition(position),\r\n                ch: ch,\r\n                options: options\r\n            };\r\n            return this._commands.executeCommand('_executeFormatOnTypeProvider', args).then(function (value) {\r\n                if (Array.isArray(value)) {\r\n                    return value.map(function (edit) { return new types.TextEdit(typeConverters.toRange(edit.range), edit.text); });\r\n                }\r\n            });\r\n        };\r\n        return ExtHostApiCommands;\r\n    })();\r\n    exports.ExtHostApiCommands = ExtHostApiCommands;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\ndefine(\"vs/workbench/api/common/pluginHostTypes.marshalling\", [\"require\", \"exports\", 'vs/base/common/marshalling', './pluginHostTypes'], function (require, exports, marshalling_1, types) {\r\n    var OneWayMarshalling = (function () {\r\n        function OneWayMarshalling() {\r\n        }\r\n        OneWayMarshalling.prototype.canDeserialize = function () {\r\n            return false;\r\n        };\r\n        OneWayMarshalling.prototype.deserialize = function () {\r\n            throw Error();\r\n        };\r\n        return OneWayMarshalling;\r\n    })();\r\n    var RangeMarshalling = (function (_super) {\r\n        __extends(RangeMarshalling, _super);\r\n        function RangeMarshalling() {\r\n            _super.apply(this, arguments);\r\n        }\r\n        RangeMarshalling.prototype.canSerialize = function (obj) {\r\n            return obj instanceof types.Range;\r\n        };\r\n        RangeMarshalling.prototype.serialize = function (obj, serialize) {\r\n            return {\r\n                startLineNumber: 1 + obj.start.line,\r\n                startColumn: 1 + obj.start.character,\r\n                endLineNumber: 1 + obj.end.line,\r\n                endColumn: 1 + obj.end.character\r\n            };\r\n        };\r\n        return RangeMarshalling;\r\n    })(OneWayMarshalling);\r\n    var PositionMarshalling = (function (_super) {\r\n        __extends(PositionMarshalling, _super);\r\n        function PositionMarshalling() {\r\n            _super.apply(this, arguments);\r\n        }\r\n        PositionMarshalling.prototype.canSerialize = function (obj) {\r\n            return obj instanceof types.Position;\r\n        };\r\n        PositionMarshalling.prototype.serialize = function (obj, serialize) {\r\n            return {\r\n                lineNumber: 1 + obj.line,\r\n                column: 1 + obj.character\r\n            };\r\n        };\r\n        return PositionMarshalling;\r\n    })(OneWayMarshalling);\r\n    var LocationMarshalling = (function (_super) {\r\n        __extends(LocationMarshalling, _super);\r\n        function LocationMarshalling() {\r\n            _super.apply(this, arguments);\r\n        }\r\n        LocationMarshalling.prototype.canSerialize = function (obj) {\r\n            return obj instanceof types.Location;\r\n        };\r\n        LocationMarshalling.prototype.serialize = function (obj, serialize) {\r\n            return {\r\n                resource: serialize(obj.uri),\r\n                range: serialize(obj.range)\r\n            };\r\n        };\r\n        return LocationMarshalling;\r\n    })(OneWayMarshalling);\r\n    marshalling_1.registerMarshallingContribution(new RangeMarshalling());\r\n    marshalling_1.registerMarshallingContribution(new PositionMarshalling());\r\n    marshalling_1.registerMarshallingContribution(new LocationMarshalling());\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/workbench/browser/parts/statusbar/statusbar\", [\"require\", \"exports\", 'vs/platform/platform', 'vs/platform/instantiation/common/descriptors'], function (require, exports, platform_1, descriptors_1) {\r\n    (function (StatusbarAlignment) {\r\n        StatusbarAlignment[StatusbarAlignment[\"LEFT\"] = 0] = \"LEFT\";\r\n        StatusbarAlignment[StatusbarAlignment[\"RIGHT\"] = 1] = \"RIGHT\";\r\n    })(exports.StatusbarAlignment || (exports.StatusbarAlignment = {}));\r\n    var StatusbarAlignment = exports.StatusbarAlignment;\r\n    var StatusbarItemDescriptor = (function () {\r\n        function StatusbarItemDescriptor(ctor, alignment, priority) {\r\n            this.syncDescriptor = descriptors_1.createSyncDescriptor(ctor);\r\n            this.alignment = alignment || StatusbarAlignment.LEFT;\r\n            this.priority = priority || 0;\r\n        }\r\n        return StatusbarItemDescriptor;\r\n    })();\r\n    exports.StatusbarItemDescriptor = StatusbarItemDescriptor;\r\n    var StatusbarRegistry = (function () {\r\n        function StatusbarRegistry() {\r\n            this._items = [];\r\n        }\r\n        Object.defineProperty(StatusbarRegistry.prototype, \"items\", {\r\n            get: function () {\r\n                return this._items;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        StatusbarRegistry.prototype.registerStatusbarItem = function (descriptor) {\r\n            this._items.push(descriptor);\r\n        };\r\n        return StatusbarRegistry;\r\n    })();\r\n    exports.Extensions = {\r\n        Statusbar: 'workbench.contributions.statusbar'\r\n    };\r\n    platform_1.Registry.add(exports.Extensions.Statusbar, new StatusbarRegistry());\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\ndefine(\"vs/workbench/common/editor\", [\"require\", \"exports\", 'vs/base/common/winjs.base', 'vs/base/common/eventEmitter', 'vs/base/common/types', 'vs/base/common/objects'], function (require, exports, winjs_base_1, eventEmitter_1, types, objects) {\r\n    /**\r\n     * Editor inputs are lightweight objects that can be passed to the workbench API to open inside the editor part.\r\n     * Each editor input is mapped to an editor that is capable of opening it through the Platform facade.\r\n     */\r\n    var EditorInput = (function (_super) {\r\n        __extends(EditorInput, _super);\r\n        function EditorInput() {\r\n            _super.apply(this, arguments);\r\n        }\r\n        /**\r\n         * Returns the name of this input that can be shown to the user. Examples include showing the name of the input\r\n         * above the editor area when the input is shown.\r\n         */\r\n        EditorInput.prototype.getName = function () {\r\n            return null;\r\n        };\r\n        /**\r\n         * Returns the description of this input that can be shown to the user. Examples include showing the description of\r\n         * the input above the editor area to the side of the name of the input.\r\n         *\r\n         * @param verbose controls if the description should be short or can contain additional details.\r\n         */\r\n        EditorInput.prototype.getDescription = function (verbose) {\r\n            return null;\r\n        };\r\n        /**\r\n         * Returns status information about this input that can be shown to the user. Examples include showing the status\r\n         * of the input when hovering over the name of the input.\r\n         */\r\n        EditorInput.prototype.getStatus = function () {\r\n            return null;\r\n        };\r\n        /**\r\n         * Returns the preferred editor for this input. A list of candidate editors is passed in that whee registered\r\n         * for the input. This allows subclasses to decide late which editor to use for the input on a case by case basis.\r\n         */\r\n        EditorInput.prototype.getPreferredEditorId = function (candidates) {\r\n            if (candidates && candidates.length > 0) {\r\n                return candidates[0];\r\n            }\r\n            return null;\r\n        };\r\n        /**\r\n         * Returns true if this input is identical to the otherInput.\r\n         */\r\n        EditorInput.prototype.matches = function (otherInput) {\r\n            return this === otherInput;\r\n        };\r\n        /**\r\n         * Called when an editor input is no longer needed. Allows to free up any resources taken by\r\n         * resolving the editor input.\r\n         */\r\n        EditorInput.prototype.dispose = function () {\r\n            this.disposed = true;\r\n            this.emit('dispose');\r\n            _super.prototype.dispose.call(this);\r\n        };\r\n        /**\r\n         * Returns whether this input was disposed or not.\r\n         */\r\n        EditorInput.prototype.isDisposed = function () {\r\n            return this.disposed;\r\n        };\r\n        return EditorInput;\r\n    })(eventEmitter_1.EventEmitter);\r\n    exports.EditorInput = EditorInput;\r\n    /**\r\n     * The base class of editor inputs that have an original and modified side.\r\n     */\r\n    var BaseDiffEditorInput = (function (_super) {\r\n        __extends(BaseDiffEditorInput, _super);\r\n        function BaseDiffEditorInput(originalInput, modifiedInput) {\r\n            _super.call(this);\r\n            this._originalInput = originalInput;\r\n            this._modifiedInput = modifiedInput;\r\n        }\r\n        Object.defineProperty(BaseDiffEditorInput.prototype, \"originalInput\", {\r\n            get: function () {\r\n                return this._originalInput;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(BaseDiffEditorInput.prototype, \"modifiedInput\", {\r\n            get: function () {\r\n                return this._modifiedInput;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        BaseDiffEditorInput.prototype.getOriginalInput = function () {\r\n            return this.originalInput;\r\n        };\r\n        BaseDiffEditorInput.prototype.getModifiedInput = function () {\r\n            return this.modifiedInput;\r\n        };\r\n        return BaseDiffEditorInput;\r\n    })(EditorInput);\r\n    exports.BaseDiffEditorInput = BaseDiffEditorInput;\r\n    /**\r\n     * The editor model is the heavyweight counterpart of editor input. Depending on the editor input, it\r\n     * connects to the disk to retrieve content and may allow for saving it back or reverting it. Editor models\r\n     * are typically cached for some while because they are expensive to construct.\r\n     */\r\n    var EditorModel = (function (_super) {\r\n        __extends(EditorModel, _super);\r\n        function EditorModel() {\r\n            _super.apply(this, arguments);\r\n        }\r\n        /**\r\n         * Causes this model to load returning a promise when loading is completed.\r\n         */\r\n        EditorModel.prototype.load = function () {\r\n            return winjs_base_1.TPromise.as(this);\r\n        };\r\n        /**\r\n         * Returns whether this model was loaded or not.\r\n         */\r\n        EditorModel.prototype.isResolved = function () {\r\n            return true;\r\n        };\r\n        /**\r\n         * Subclasses should implement to free resources that have been claimed through loading.\r\n         */\r\n        EditorModel.prototype.dispose = function () {\r\n            this.emit('dispose');\r\n            _super.prototype.dispose.call(this);\r\n        };\r\n        return EditorModel;\r\n    })(eventEmitter_1.EventEmitter);\r\n    exports.EditorModel = EditorModel;\r\n    /**\r\n     * The editor options is the base class of options that can be passed in when opening an editor.\r\n     */\r\n    var EditorOptions = (function () {\r\n        function EditorOptions() {\r\n        }\r\n        /**\r\n         * Helper to create EditorOptions inline.\r\n         */\r\n        EditorOptions.create = function (settings) {\r\n            var options = new EditorOptions();\r\n            options.preserveFocus = settings.preserveFocus;\r\n            options.forceOpen = settings.forceOpen;\r\n            return options;\r\n        };\r\n        /**\r\n         * Returns true if this options is identical to the otherOptions.\r\n         */\r\n        EditorOptions.prototype.matches = function (otherOptions) {\r\n            return this === otherOptions;\r\n        };\r\n        return EditorOptions;\r\n    })();\r\n    exports.EditorOptions = EditorOptions;\r\n    /**\r\n     * Base Text Editor Options.\r\n     */\r\n    var TextEditorOptions = (function (_super) {\r\n        __extends(TextEditorOptions, _super);\r\n        function TextEditorOptions() {\r\n            _super.apply(this, arguments);\r\n        }\r\n        TextEditorOptions.from = function (textInput) {\r\n            var options = null;\r\n            if (textInput && textInput.options) {\r\n                if (textInput.options.selection || textInput.options.forceOpen || textInput.options.preserveFocus) {\r\n                    options = new TextEditorOptions();\r\n                }\r\n                if (textInput.options.selection) {\r\n                    var selection = textInput.options.selection;\r\n                    options.selection(selection.startLineNumber, selection.startColumn, selection.endLineNumber, selection.endColumn);\r\n                }\r\n                if (textInput.options.forceOpen) {\r\n                    options.forceOpen = true;\r\n                }\r\n                if (textInput.options.preserveFocus) {\r\n                    options.preserveFocus = true;\r\n                }\r\n            }\r\n            return options;\r\n        };\r\n        /**\r\n         * Helper to create TextEditorOptions inline.\r\n         */\r\n        TextEditorOptions.create = function (settings) {\r\n            var options = new TextEditorOptions();\r\n            options.preserveFocus = settings.preserveFocus;\r\n            options.forceActive = settings.forceActive;\r\n            options.forceOpen = settings.forceOpen;\r\n            if (settings.selection) {\r\n                options.startLineNumber = settings.selection.startLineNumber;\r\n                options.startColumn = settings.selection.startColumn;\r\n                options.endLineNumber = settings.selection.endLineNumber || settings.selection.startLineNumber;\r\n                options.endColumn = settings.selection.endColumn || settings.selection.startColumn;\r\n            }\r\n            return options;\r\n        };\r\n        /**\r\n         * Returns if this options object has objects defined for the editor.\r\n         */\r\n        TextEditorOptions.prototype.hasOptionsDefined = function () {\r\n            return !!this.editorViewState || (!types.isUndefinedOrNull(this.startLineNumber) && !types.isUndefinedOrNull(this.startColumn));\r\n        };\r\n        /**\r\n         * Tells the editor to set show the given selection when the editor is being opened.\r\n         */\r\n        TextEditorOptions.prototype.selection = function (startLineNumber, startColumn, endLineNumber, endColumn) {\r\n            if (endLineNumber === void 0) { endLineNumber = startLineNumber; }\r\n            if (endColumn === void 0) { endColumn = startColumn; }\r\n            this.startLineNumber = startLineNumber;\r\n            this.startColumn = startColumn;\r\n            this.endLineNumber = endLineNumber;\r\n            this.endColumn = endColumn;\r\n            return this;\r\n        };\r\n        /**\r\n         * Sets the view state to be used when the editor is opening.\r\n         */\r\n        TextEditorOptions.prototype.viewState = function (viewState) {\r\n            this.editorViewState = viewState;\r\n        };\r\n        /**\r\n         * Apply the view state or selection to the given editor.\r\n         *\r\n         * @return if something was applied\r\n         */\r\n        TextEditorOptions.prototype.apply = function (textEditor) {\r\n            var gotApplied = false;\r\n            // First try viewstate\r\n            if (this.editorViewState) {\r\n                textEditor.restoreViewState(this.editorViewState);\r\n                gotApplied = true;\r\n            }\r\n            else if (!types.isUndefinedOrNull(this.startLineNumber) && !types.isUndefinedOrNull(this.startColumn)) {\r\n                // Select\r\n                if (!types.isUndefinedOrNull(this.endLineNumber) && !types.isUndefinedOrNull(this.endColumn)) {\r\n                    var range = {\r\n                        startLineNumber: this.startLineNumber,\r\n                        startColumn: this.startColumn,\r\n                        endLineNumber: this.endLineNumber,\r\n                        endColumn: this.endColumn\r\n                    };\r\n                    textEditor.setSelection(range);\r\n                    textEditor.revealRangeInCenter(range);\r\n                }\r\n                else {\r\n                    var pos = {\r\n                        lineNumber: this.startLineNumber,\r\n                        column: this.startColumn\r\n                    };\r\n                    textEditor.setPosition(pos);\r\n                    textEditor.revealPositionInCenter(pos);\r\n                }\r\n                gotApplied = true;\r\n            }\r\n            return gotApplied;\r\n        };\r\n        TextEditorOptions.prototype.matches = function (otherOptions) {\r\n            if (_super.prototype.matches.call(this, otherOptions) === true) {\r\n                return true;\r\n            }\r\n            if (otherOptions) {\r\n                return otherOptions instanceof TextEditorOptions &&\r\n                    otherOptions.startLineNumber === this.startLineNumber &&\r\n                    otherOptions.startColumn === this.startColumn &&\r\n                    otherOptions.endLineNumber === this.endLineNumber &&\r\n                    otherOptions.endColumn === this.endColumn &&\r\n                    otherOptions.preserveFocus === this.preserveFocus &&\r\n                    otherOptions.forceOpen === this.forceOpen &&\r\n                    objects.equals(otherOptions.editorViewState, this.editorViewState);\r\n            }\r\n            return false;\r\n        };\r\n        return TextEditorOptions;\r\n    })(EditorOptions);\r\n    exports.TextEditorOptions = TextEditorOptions;\r\n    /**\r\n     * Base Text Diff Editor Options.\r\n     */\r\n    var TextDiffEditorOptions = (function (_super) {\r\n        __extends(TextDiffEditorOptions, _super);\r\n        function TextDiffEditorOptions() {\r\n            _super.apply(this, arguments);\r\n        }\r\n        /**\r\n         * Helper to create TextDiffEditorOptions inline.\r\n         */\r\n        TextDiffEditorOptions.create = function (settings) {\r\n            var options = new TextDiffEditorOptions();\r\n            options.autoRevealFirstChange = settings.autoRevealFirstChange;\r\n            options.preserveFocus = settings.preserveFocus;\r\n            options.forceOpen = settings.forceOpen;\r\n            return options;\r\n        };\r\n        return TextDiffEditorOptions;\r\n    })(TextEditorOptions);\r\n    exports.TextDiffEditorOptions = TextDiffEditorOptions;\r\n    (function (EncodingMode) {\r\n        /**\r\n         * Instructs the encoding support to encode the current input with the provided encoding\r\n         */\r\n        EncodingMode[EncodingMode[\"Encode\"] = 0] = \"Encode\";\r\n        /**\r\n         * Instructs the encoding support to decode the current input with the provided encoding\r\n         */\r\n        EncodingMode[EncodingMode[\"Decode\"] = 1] = \"Decode\";\r\n    })(exports.EncodingMode || (exports.EncodingMode = {}));\r\n    var EncodingMode = exports.EncodingMode;\r\n    /**\r\n     * Given an input, tries to get the associated URI for it (either file or untitled scheme).\r\n     */\r\n    function getUntitledOrFileResource(input, supportDiff) {\r\n        if (!input) {\r\n            return null;\r\n        }\r\n        var resourceInput = input;\r\n        if (types.isFunction(resourceInput.getResource)) {\r\n            return resourceInput.getResource();\r\n        }\r\n        var fileInput = asFileEditorInput(input, supportDiff);\r\n        return fileInput && fileInput.getResource();\r\n    }\r\n    exports.getUntitledOrFileResource = getUntitledOrFileResource;\r\n    /**\r\n     * Returns the object as IFileEditorInput only if it matches the signature.\r\n     */\r\n    function asFileEditorInput(obj, supportDiff) {\r\n        if (!obj) {\r\n            return null;\r\n        }\r\n        // Check for diff if we are asked to\r\n        if (supportDiff && types.isFunction(obj.getModifiedInput)) {\r\n            obj = obj.getModifiedInput();\r\n        }\r\n        var i = obj;\r\n        return i instanceof EditorInput && types.areFunctions(i.setResource, i.setMime, i.getResource, i.getMime) ? i : null;\r\n    }\r\n    exports.asFileEditorInput = asFileEditorInput;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") return Reflect.decorate(decorators, target, key, desc);\r\n    switch (arguments.length) {\r\n        case 2: return decorators.reduceRight(function(o, d) { return (d && d(o)) || o; }, target);\r\n        case 3: return decorators.reduceRight(function(o, d) { return (d && d(target, key)), void 0; }, void 0);\r\n        case 4: return decorators.reduceRight(function(o, d) { return (d && d(target, key, o)) || o; }, desc);\r\n    }\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\ndefine(\"vs/workbench/browser/parts/editor/textEditorModel\", [\"require\", \"exports\", 'vs/base/common/winjs.base', 'vs/base/common/types', 'vs/editor/common/editorCommon', 'vs/workbench/common/editor', 'vs/platform/platform', 'vs/editor/common/modes/modesRegistry', 'vs/editor/common/modes/nullMode', 'vs/editor/common/services/modeService', 'vs/editor/common/services/modelService'], function (require, exports, winjs_base_1, types, editorCommon_1, editor_1, platform_1, modesRegistry_1, nullMode_1, modeService_1, modelService_1) {\r\n    /**\r\n     * The base text editor model leverages the monaco code editor model. This class is only intended to be subclassed and not instantiated.\r\n     */\r\n    var BaseTextEditorModel = (function (_super) {\r\n        __extends(BaseTextEditorModel, _super);\r\n        function BaseTextEditorModel(modelService, modeService, textEditorModelHandle) {\r\n            _super.call(this);\r\n            this.modelService = modelService;\r\n            this.modeService = modeService;\r\n            this.textEditorModelHandle = textEditorModelHandle;\r\n        }\r\n        Object.defineProperty(BaseTextEditorModel.prototype, \"textEditorModel\", {\r\n            get: function () {\r\n                return this.textEditorModelHandle ? this.modelService.getModel(this.textEditorModelHandle) : null;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * Creates the text editor model with the provided value, mime (can be comma separated for multiple values) and optional resource URL.\r\n         */\r\n        BaseTextEditorModel.prototype.createTextEditorModel = function (value, resource, mime) {\r\n            var _this = this;\r\n            var firstLineText = this.getFirstLineText(value);\r\n            // To avoid flickering, give the mode at most 50ms to load. If the mode doesn't load in 50ms, proceed creating the model with a mode promise\r\n            return winjs_base_1.Promise.any([winjs_base_1.Promise.timeout(50), this.getOrCreateMode(this.modeService, mime, firstLineText)]).then(function () {\r\n                var model = _this.modelService.createModel(value, _this.getOrCreateMode(_this.modeService, mime, firstLineText), resource);\r\n                _this.textEditorModelHandle = model.getAssociatedResource();\r\n                return _this;\r\n            });\r\n        };\r\n        BaseTextEditorModel.prototype.getFirstLineText = function (value) {\r\n            var firstLineText = value.substr(0, 100);\r\n            var crIndex = firstLineText.indexOf('\\r');\r\n            if (crIndex < 0) {\r\n                crIndex = firstLineText.length;\r\n            }\r\n            var lfIndex = firstLineText.indexOf('\\n');\r\n            if (lfIndex < 0) {\r\n                lfIndex = firstLineText.length;\r\n            }\r\n            firstLineText = firstLineText.substr(0, Math.min(crIndex, lfIndex));\r\n            return firstLineText;\r\n        };\r\n        /**\r\n         * Gets the mode for the given identifier. Subclasses can override to provide their own implementation of this lookup.\r\n         *\r\n         * @param firstLineText optional first line of the text buffer to set the mode on. This can be used to guess a mode from content.\r\n         */\r\n        BaseTextEditorModel.prototype.getOrCreateMode = function (modeService, mime, firstLineText) {\r\n            return modeService.getOrCreateMode(mime);\r\n        };\r\n        /**\r\n         * Updates the text editor model with the provided value and mime (can be comma separated for multiple values).\r\n         *\r\n         * This is a no-op if neither the value did not change nor the mime.\r\n         */\r\n        BaseTextEditorModel.prototype.updateTextEditorModel = function (newValue, newMime) {\r\n            var modesRegistry = platform_1.Registry.as(modesRegistry_1.Extensions.EditorModes);\r\n            // Detect content changes\r\n            var currentModelValue = this.getValue();\r\n            var valueChanged = (!types.isUndefinedOrNull(newValue) && currentModelValue !== newValue);\r\n            // Detect mode changes\r\n            var modeChanged = false;\r\n            if (!types.isUndefinedOrNull(newMime)) {\r\n                var modeId = modesRegistry.getModeId(newMime);\r\n                var currentMode = this.textEditorModel.getMode();\r\n                if (currentMode && currentMode.getId() !== nullMode_1.NullMode.ID && modeId) {\r\n                    var currentModeId = currentMode.getId();\r\n                    modeChanged = (currentModeId !== modeId);\r\n                }\r\n            }\r\n            // Apply either content or mode or both\r\n            if (valueChanged) {\r\n                this.textEditorModel.setValue(newValue, modeChanged ? this.getOrCreateMode(this.modeService, newMime) : undefined);\r\n            }\r\n            else if (modeChanged) {\r\n                this.textEditorModel.setMode(this.getOrCreateMode(this.modeService, newMime));\r\n            }\r\n        };\r\n        /**\r\n         * Returns the textual value of this editor model or null if it has not yet been created.\r\n         */\r\n        BaseTextEditorModel.prototype.getValue = function () {\r\n            var model = this.textEditorModel;\r\n            if (model) {\r\n                return model.getValue(editorCommon_1.EndOfLinePreference.TextDefined, true /* Preserve BOM */);\r\n            }\r\n            return null;\r\n        };\r\n        BaseTextEditorModel.prototype.dispose = function () {\r\n            if (this.textEditorModelHandle) {\r\n                this.modelService.destroyModel(this.textEditorModelHandle);\r\n            }\r\n            this.textEditorModelHandle = null;\r\n            _super.prototype.dispose.call(this);\r\n        };\r\n        BaseTextEditorModel.prototype.isResolved = function () {\r\n            return !!this.textEditorModelHandle;\r\n        };\r\n        BaseTextEditorModel = __decorate([\r\n            __param(0, modelService_1.IModelService),\r\n            __param(1, modeService_1.IModeService)\r\n        ], BaseTextEditorModel);\r\n        return BaseTextEditorModel;\r\n    })(editor_1.EditorModel);\r\n    exports.BaseTextEditorModel = BaseTextEditorModel;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") return Reflect.decorate(decorators, target, key, desc);\r\n    switch (arguments.length) {\r\n        case 2: return decorators.reduceRight(function(o, d) { return (d && d(o)) || o; }, target);\r\n        case 3: return decorators.reduceRight(function(o, d) { return (d && d(target, key)), void 0; }, void 0);\r\n        case 4: return decorators.reduceRight(function(o, d) { return (d && d(target, key, o)) || o; }, desc);\r\n    }\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\ndefine(\"vs/workbench/browser/parts/editor/stringEditorModel\", [\"require\", \"exports\", 'vs/base/common/winjs.base', 'vs/workbench/browser/parts/editor/textEditorModel', 'vs/editor/common/core/position', 'vs/editor/common/core/range', 'vs/editor/common/services/modeService', 'vs/editor/common/services/modelService', 'vs/editor/common/core/editOperation'], function (require, exports, winjs_base_1, textEditorModel_1, position_1, range_1, modeService_1, modelService_1, editOperation_1) {\r\n    /**\r\n     * An editor model whith an in-memory, readonly content that is not backed by any particular resource.\r\n     */\r\n    var StringEditorModel = (function (_super) {\r\n        __extends(StringEditorModel, _super);\r\n        function StringEditorModel(value, mime, resource, modeService, modelService) {\r\n            _super.call(this, modelService, modeService);\r\n            this.value = value;\r\n            this.mime = mime;\r\n            this.resource = resource;\r\n        }\r\n        /**\r\n         * The value of this string editor model.\r\n         */\r\n        StringEditorModel.prototype.getValue = function () {\r\n            return this.value;\r\n        };\r\n        /**\r\n         * Sets the value of this string editor model.\r\n         */\r\n        StringEditorModel.prototype.setValue = function (value) {\r\n            this.value = value;\r\n            if (this.textEditorModel) {\r\n                this.textEditorModel.setValue(value);\r\n            }\r\n        };\r\n        /**\r\n         * Appends value to this string editor model.\r\n         */\r\n        StringEditorModel.prototype.append = function (value) {\r\n            this.value += value;\r\n            if (this.textEditorModel) {\r\n                var model = this.textEditorModel;\r\n                var lastLine = model.getLineCount();\r\n                var lastLineMaxColumn = model.getLineMaxColumn(lastLine);\r\n                model.applyEdits([editOperation_1.EditOperation.insert(new position_1.Position(lastLine, lastLineMaxColumn), value)]);\r\n            }\r\n        };\r\n        /**\r\n         * Clears the value of this string editor model\r\n         */\r\n        StringEditorModel.prototype.clearValue = function () {\r\n            this.value = '';\r\n            if (this.textEditorModel) {\r\n                var model = this.textEditorModel;\r\n                var lastLine = model.getLineCount();\r\n                model.applyEdits([editOperation_1.EditOperation.delete(new range_1.Range(1, 1, lastLine, model.getLineMaxColumn(lastLine)))]);\r\n            }\r\n        };\r\n        /**\r\n         * Removes all lines from the top if the line number exceeds the given line count. Returns the new value if lines got trimmed.\r\n         */\r\n        StringEditorModel.prototype.trim = function (linecount) {\r\n            if (this.textEditorModel) {\r\n                var model = this.textEditorModel;\r\n                var lastLine = model.getLineCount();\r\n                if (lastLine > linecount) {\r\n                    model.applyEdits([editOperation_1.EditOperation.delete(new range_1.Range(1, 1, lastLine - linecount + 1, 1))]);\r\n                    var newValue = model.getValue();\r\n                    this.value = newValue;\r\n                    return this.value;\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        StringEditorModel.prototype.getMime = function () {\r\n            return this.mime;\r\n        };\r\n        StringEditorModel.prototype.load = function () {\r\n            // Create text editor model if not yet done\r\n            if (!this.textEditorModel) {\r\n                return this.createTextEditorModel(this.value, this.resource, this.mime);\r\n            }\r\n            else {\r\n                this.updateTextEditorModel(this.value);\r\n            }\r\n            return winjs_base_1.TPromise.as(this);\r\n        };\r\n        StringEditorModel = __decorate([\r\n            __param(3, modeService_1.IModeService),\r\n            __param(4, modelService_1.IModelService)\r\n        ], StringEditorModel);\r\n        return StringEditorModel;\r\n    })(textEditorModel_1.BaseTextEditorModel);\r\n    exports.StringEditorModel = StringEditorModel;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\ndefine(\"vs/workbench/common/events\", [\"require\", \"exports\", 'vs/base/common/events'], function (require, exports, events_1) {\r\n    /**\r\n     * All workbench events are listed here. For DOM events, see Monaco.Base.DomUtils.EventType.\r\n     */\r\n    var EventType = (function () {\r\n        function EventType() {\r\n        }\r\n        /**\r\n         * Event type for when the workbench options change. Listeners should refresh their\r\n         * assumption on workbench options after this event is emitted.\r\n         */\r\n        EventType.WORKBENCH_OPTIONS_CHANGED = 'workbenchOptionsChanged';\r\n        return EventType;\r\n    })();\r\n    exports.EventType = EventType;\r\n    /**\r\n     * Option change events are send when the options in the running instance change.\r\n     */\r\n    var OptionsChangeEvent = (function (_super) {\r\n        __extends(OptionsChangeEvent, _super);\r\n        function OptionsChangeEvent(key, before, after, originalEvent) {\r\n            _super.call(this, originalEvent);\r\n            this.key = key;\r\n            this.before = before;\r\n            this.after = after;\r\n        }\r\n        return OptionsChangeEvent;\r\n    })(events_1.Event);\r\n    exports.OptionsChangeEvent = OptionsChangeEvent;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\ndefine(\"vs/workbench/browser/events\", [\"require\", \"exports\", 'vs/base/common/events', 'vs/workbench/common/events'], function (require, exports, events_1, CommonEvents) {\r\n    /**\r\n     * All workbench events are listed here. For DOM events, see Monaco.Base.DomUtils.EventType.\r\n     */\r\n    var EventType = (function () {\r\n        function EventType() {\r\n        }\r\n        /**\r\n         * Event type for when an editor is opened. This event is only sent once for a specific editor type until another\r\n         * editor type gets opened. For example, when the user opens a file, the editorOpened event will be sent. If another\r\n         * file is opened, this event will not be fired again. If the user opens, e.g. the diff editor, editorOpened will be\r\n         * fired, since another editor type opened.\r\n         */\r\n        EventType.EDITOR_OPENED = 'editorOpened';\r\n        /**\r\n         * Event type for when an editor is closed because another editor type is opened.\r\n         */\r\n        EventType.EDITOR_CLOSED = 'editorClosed';\r\n        /**\r\n         * Event to indciate that an editor input is about to open. This event can be prevented to do something else instead.\r\n         */\r\n        EventType.EDITOR_INPUT_OPENING = 'editorInputOpening';\r\n        /**\r\n         * Event type for when the editor input is about to change. This event is being sent before (!) the input is being set\r\n         * to the active editor. Use EDITOR_INPUT_CHANGED to react after the input has been set and displayed by the editor.\r\n         *\r\n         * Note: This event will also be emitted when multiple editors are open and the user sets focus from the active editor\r\n         * to another one. This allows to detect a focus change of the active editor.\r\n         */\r\n        EventType.EDITOR_INPUT_CHANGING = 'editorInputChanging';\r\n        /**\r\n         * Event type to indicate that the editor options of the current active editor are changing.\r\n         */\r\n        EventType.EDITOR_OPTIONS_CHANGING = 'editorOptionsChanging';\r\n        /**\r\n         * Event type for when the editor input has been changed in the currently active editor. This event is being sent after\r\n         * the input has been set and displayed by the editor.\r\n         *\r\n         * Note: This event will also be emitted when multiple editors are open and the user sets focus from the active editor\r\n         * to another one. This allows to detect a focus change of the active editor.\r\n         */\r\n        EventType.EDITOR_INPUT_CHANGED = 'editorInputChanged';\r\n        /**\r\n         * Event type for when the editor input state changed.\r\n         */\r\n        EventType.EDITOR_INPUT_STATE_CHANGED = 'editorInputStateChanged';\r\n        /**\r\n         * Event type for when the editor input failed to be set to the editor.\r\n         */\r\n        EventType.EDITOR_SET_INPUT_ERROR = 'editorSetInputError';\r\n        /**\r\n         * An event type that fires when a text editor changes its selection.\r\n         */\r\n        EventType.TEXT_EDITOR_SELECTION_CHANGED = 'textEditorSelectionChanged';\r\n        /**\r\n         * An event type that fires when a text editor mode changes.\r\n         */\r\n        EventType.TEXT_EDITOR_MODE_CHANGED = 'textEditorModeChanged';\r\n        /**\r\n         * An event type that fires when a text editor content changes.\r\n         */\r\n        EventType.TEXT_EDITOR_CONTENT_CHANGED = 'textEditorContentChanged';\r\n        /**\r\n         * An event type that fires when a text editor's configuration changes.\r\n         */\r\n        EventType.TEXT_EDITOR_CONFIGURATION_CHANGED = 'textEditorOptionsChanged';\r\n        /**\r\n         * Event type for when a viewlet is about to open.\r\n         */\r\n        EventType.VIEWLET_OPENING = 'viewletOpening';\r\n        /**\r\n         * Event type for when a viewlet is opened.\r\n         */\r\n        EventType.VIEWLET_OPENED = 'viewletOpened';\r\n        /**\r\n         * Event type for when a viewlet is closed.\r\n         */\r\n        EventType.VIEWLET_CLOSED = 'viewletClosed';\r\n        /**\r\n         * Event type for when the workbench has been fully created.\r\n         */\r\n        EventType.WORKBENCH_CREATED = 'workbenchCreated';\r\n        /**\r\n         * Event type for when the workbench is about to being disposed.\r\n         */\r\n        EventType.WORKBENCH_DISPOSING = 'workbenchDisposing';\r\n        /**\r\n         * Event type for when the workbench is fully disposed.\r\n         */\r\n        EventType.WORKBENCH_DISPOSED = 'workbenchDisposed';\r\n        /**\r\n         * Event type for when the workbench options change. Listeners should refresh their\r\n         * assumption on workbench options after this event is emitted.\r\n         */\r\n        EventType.WORKBENCH_OPTIONS_CHANGED = CommonEvents.EventType.WORKBENCH_OPTIONS_CHANGED;\r\n        /**\r\n         * Event type for when an untitled file is becoming dirty.\r\n         */\r\n        EventType.UNTITLED_FILE_DIRTY = 'untitledFileDirty';\r\n        /**\r\n         * Event type for when an untitled file is deleted.\r\n         */\r\n        EventType.UNTITLED_FILE_DELETED = 'untitledFileDeleted';\r\n        /**\r\n         * Event type for when a resources encoding changes.\r\n         */\r\n        EventType.RESOURCE_ENCODING_CHANGED = 'resourceEncodingChanged';\r\n        return EventType;\r\n    })();\r\n    exports.EventType = EventType;\r\n    /**\r\n     * Editor events are being emitted when the editor input changes, shows, is being saved or when the editor content changes.\r\n     */\r\n    var EditorEvent = (function (_super) {\r\n        __extends(EditorEvent, _super);\r\n        function EditorEvent(editor, editorId, editorInput, editorOptions, position, originalEvent) {\r\n            _super.call(this, originalEvent);\r\n            this.editor = editor;\r\n            this.editorId = editorId;\r\n            this.editorInput = editorInput;\r\n            this.editorOptions = editorOptions;\r\n            this.position = position;\r\n        }\r\n        EditorEvent.prototype.prevent = function () {\r\n            this.prevented = true;\r\n        };\r\n        EditorEvent.prototype.isPrevented = function () {\r\n            return this.prevented;\r\n        };\r\n        return EditorEvent;\r\n    })(events_1.Event);\r\n    exports.EditorEvent = EditorEvent;\r\n    /**\r\n     * Editor input events are being emitted when the editor input state changes.\r\n     */\r\n    var EditorInputEvent = (function (_super) {\r\n        __extends(EditorInputEvent, _super);\r\n        function EditorInputEvent(editorInput, originalEvent) {\r\n            _super.call(this, originalEvent);\r\n            this.editorInput = editorInput;\r\n        }\r\n        return EditorInputEvent;\r\n    })(events_1.Event);\r\n    exports.EditorInputEvent = EditorInputEvent;\r\n    /**\r\n     * A subclass of EditorEvent for text editor selection changes.\r\n     */\r\n    var TextEditorSelectionEvent = (function (_super) {\r\n        __extends(TextEditorSelectionEvent, _super);\r\n        function TextEditorSelectionEvent(selection, editor, editorId, editorInput, editorOptions, position, originalEvent) {\r\n            _super.call(this, editor, editorId, editorInput, editorOptions, position, originalEvent);\r\n            this.selection = selection;\r\n        }\r\n        return TextEditorSelectionEvent;\r\n    })(EditorEvent);\r\n    exports.TextEditorSelectionEvent = TextEditorSelectionEvent;\r\n    /**\r\n     * Command events are emitted when an action is being executed through a command handler (Keybinding).\r\n     */\r\n    var CommandEvent = (function (_super) {\r\n        __extends(CommandEvent, _super);\r\n        function CommandEvent(actionId, originalEvent) {\r\n            _super.call(this, originalEvent);\r\n            this.actionId = actionId;\r\n        }\r\n        return CommandEvent;\r\n    })(events_1.Event);\r\n    exports.CommandEvent = CommandEvent;\r\n    /**\r\n     * Viewlet events are emitted when a viewlet opens or closes in the sidebar.\r\n     */\r\n    var ViewletEvent = (function (_super) {\r\n        __extends(ViewletEvent, _super);\r\n        function ViewletEvent(viewletId, originalEvent) {\r\n            _super.call(this, originalEvent);\r\n            this.viewletId = viewletId;\r\n        }\r\n        return ViewletEvent;\r\n    })(events_1.Event);\r\n    exports.ViewletEvent = ViewletEvent;\r\n    /**\r\n     * Option change events are send when the options in the running instance change.\r\n     */\r\n    exports.OptionsChangeEvent = CommonEvents.OptionsChangeEvent;\r\n    var ResourceEvent = (function (_super) {\r\n        __extends(ResourceEvent, _super);\r\n        function ResourceEvent(resource, originalEvent) {\r\n            _super.call(this, originalEvent);\r\n            this.resource = resource;\r\n        }\r\n        return ResourceEvent;\r\n    })(events_1.Event);\r\n    exports.ResourceEvent = ResourceEvent;\r\n    var UntitledEditorEvent = (function (_super) {\r\n        __extends(UntitledEditorEvent, _super);\r\n        function UntitledEditorEvent() {\r\n            _super.apply(this, arguments);\r\n        }\r\n        return UntitledEditorEvent;\r\n    })(ResourceEvent);\r\n    exports.UntitledEditorEvent = UntitledEditorEvent;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") return Reflect.decorate(decorators, target, key, desc);\r\n    switch (arguments.length) {\r\n        case 2: return decorators.reduceRight(function(o, d) { return (d && d(o)) || o; }, target);\r\n        case 3: return decorators.reduceRight(function(o, d) { return (d && d(target, key)), void 0; }, void 0);\r\n        case 4: return decorators.reduceRight(function(o, d) { return (d && d(target, key, o)) || o; }, desc);\r\n    }\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\ndefine(\"vs/workbench/browser/parts/editor/untitledEditorModel\", [\"require\", \"exports\", 'vs/workbench/browser/parts/editor/stringEditorModel', 'vs/editor/common/editorCommon', 'vs/workbench/browser/events', 'vs/platform/configuration/common/configuration', 'vs/platform/event/common/event', 'vs/editor/common/services/modeService', 'vs/editor/common/services/modelService'], function (require, exports, stringEditorModel_1, editorCommon_1, events_1, configuration_1, event_1, modeService_1, modelService_1) {\r\n    var UntitledEditorModel = (function (_super) {\r\n        __extends(UntitledEditorModel, _super);\r\n        function UntitledEditorModel(value, modeId, resource, hasAssociatedFilePath, modeService, modelService, eventService, configurationService) {\r\n            _super.call(this, value, modeId, resource, modeService, modelService);\r\n            this.eventService = eventService;\r\n            this.configurationService = configurationService;\r\n            this.dirty = hasAssociatedFilePath; // untitled associated to file path are dirty right away\r\n            this.registerListeners();\r\n        }\r\n        UntitledEditorModel.prototype.registerListeners = function () {\r\n            var _this = this;\r\n            // Config Changes\r\n            this.configurationChangeListenerUnbind = this.configurationService.addListener(configuration_1.ConfigurationServiceEventTypes.UPDATED, function (e) { return _this.onConfigurationChange(e.config); });\r\n        };\r\n        UntitledEditorModel.prototype.onConfigurationChange = function (configuration) {\r\n            this.configuredEncoding = configuration && configuration.files && configuration.files.encoding;\r\n        };\r\n        UntitledEditorModel.prototype.getValue = function () {\r\n            if (this.textEditorModel) {\r\n                return this.textEditorModel.getValue(editorCommon_1.EndOfLinePreference.TextDefined, true /* Preserve BOM */);\r\n            }\r\n            return null;\r\n        };\r\n        UntitledEditorModel.prototype.getModeId = function () {\r\n            if (this.textEditorModel) {\r\n                return this.textEditorModel.getModeId();\r\n            }\r\n            return null;\r\n        };\r\n        UntitledEditorModel.prototype.getEncoding = function () {\r\n            return this.preferredEncoding || this.configuredEncoding;\r\n        };\r\n        UntitledEditorModel.prototype.setEncoding = function (encoding) {\r\n            var oldEncoding = this.getEncoding();\r\n            this.preferredEncoding = encoding;\r\n            // Emit if it changed\r\n            if (oldEncoding !== this.preferredEncoding) {\r\n                this.eventService.emit(events_1.EventType.RESOURCE_ENCODING_CHANGED, new events_1.ResourceEvent(this.resource));\r\n            }\r\n        };\r\n        UntitledEditorModel.prototype.isDirty = function () {\r\n            return this.dirty;\r\n        };\r\n        UntitledEditorModel.prototype.load = function () {\r\n            var _this = this;\r\n            return _super.prototype.load.call(this).then(function (model) {\r\n                return _this.configurationService.loadConfiguration().then(function (configuration) {\r\n                    // Encoding\r\n                    _this.configuredEncoding = configuration && configuration.files && configuration.files.encoding;\r\n                    // Listen to content changes\r\n                    _this.textModelChangeListener = _this.textEditorModel.addListener(editorCommon_1.EventType.ModelContentChanged, function (e) { return _this.onModelContentChanged(e); });\r\n                    // Emit initial dirty event if we are\r\n                    if (_this.dirty) {\r\n                        setTimeout(function () {\r\n                            _this.eventService.emit(events_1.EventType.UNTITLED_FILE_DIRTY, new events_1.UntitledEditorEvent(_this.resource));\r\n                        }, 0 /* prevent race condition between creating model and emitting dirty event */);\r\n                    }\r\n                    return model;\r\n                });\r\n            });\r\n        };\r\n        UntitledEditorModel.prototype.onModelContentChanged = function (e) {\r\n            if (!this.dirty) {\r\n                this.dirty = true;\r\n                this.eventService.emit(events_1.EventType.UNTITLED_FILE_DIRTY, new events_1.UntitledEditorEvent(this.resource));\r\n            }\r\n        };\r\n        UntitledEditorModel.prototype.dispose = function () {\r\n            _super.prototype.dispose.call(this);\r\n            if (this.textModelChangeListener) {\r\n                this.textModelChangeListener();\r\n                this.textModelChangeListener = null;\r\n            }\r\n            if (this.configurationChangeListenerUnbind) {\r\n                this.configurationChangeListenerUnbind();\r\n                this.configurationChangeListenerUnbind = null;\r\n            }\r\n            this.eventService.emit(events_1.EventType.UNTITLED_FILE_DELETED, new events_1.UntitledEditorEvent(this.resource));\r\n        };\r\n        UntitledEditorModel = __decorate([\r\n            __param(4, modeService_1.IModeService),\r\n            __param(5, modelService_1.IModelService),\r\n            __param(6, event_1.IEventService),\r\n            __param(7, configuration_1.IConfigurationService)\r\n        ], UntitledEditorModel);\r\n        return UntitledEditorModel;\r\n    })(stringEditorModel_1.StringEditorModel);\r\n    exports.UntitledEditorModel = UntitledEditorModel;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") return Reflect.decorate(decorators, target, key, desc);\r\n    switch (arguments.length) {\r\n        case 2: return decorators.reduceRight(function(o, d) { return (d && d(o)) || o; }, target);\r\n        case 3: return decorators.reduceRight(function(o, d) { return (d && d(target, key)), void 0; }, void 0);\r\n        case 4: return decorators.reduceRight(function(o, d) { return (d && d(target, key, o)) || o; }, desc);\r\n    }\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\ndefine(\"vs/workbench/browser/parts/editor/untitledEditorInput\", [\"require\", \"exports\", 'vs/base/common/winjs.base', 'vs/editor/common/modes/modesRegistry', 'vs/base/common/mime', 'vs/base/common/labels', 'vs/base/common/paths', 'vs/workbench/common/editor', 'vs/platform/platform', 'vs/workbench/browser/parts/editor/untitledEditorModel', 'vs/platform/instantiation/common/instantiation', 'vs/platform/lifecycle/common/lifecycle', 'vs/platform/workspace/common/workspace'], function (require, exports, winjs_base_1, modesRegistry_1, mime_1, labels, paths, editor_1, platform_1, untitledEditorModel_1, instantiation_1, lifecycle_1, workspace_1) {\r\n    /**\r\n     * An editor input to be used for untitled text buffers.\r\n     */\r\n    var UntitledEditorInput = (function (_super) {\r\n        __extends(UntitledEditorInput, _super);\r\n        function UntitledEditorInput(resource, hasAssociatedFilePath, modeId, instantiationService, lifecycleService, contextService) {\r\n            _super.call(this);\r\n            this.instantiationService = instantiationService;\r\n            this.lifecycleService = lifecycleService;\r\n            this.contextService = contextService;\r\n            this.resource = resource;\r\n            this.hasAssociatedFilePath = hasAssociatedFilePath;\r\n            this.modeId = modeId;\r\n        }\r\n        UntitledEditorInput.prototype.getId = function () {\r\n            return UntitledEditorInput.ID;\r\n        };\r\n        UntitledEditorInput.prototype.getResource = function () {\r\n            return this.resource;\r\n        };\r\n        UntitledEditorInput.prototype.getName = function () {\r\n            return this.hasAssociatedFilePath ? paths.basename(this.resource.fsPath) : this.resource.fsPath;\r\n        };\r\n        UntitledEditorInput.prototype.getDescription = function () {\r\n            return this.hasAssociatedFilePath ? labels.getPathLabel(paths.dirname(this.resource.fsPath), this.contextService) : null;\r\n        };\r\n        UntitledEditorInput.prototype.isDirty = function () {\r\n            return this.cachedModel && this.cachedModel.isDirty();\r\n        };\r\n        UntitledEditorInput.prototype.getStatus = function () {\r\n            var isDirty = this.isDirty();\r\n            if (isDirty) {\r\n                return { state: 'dirty', decoration: '\\u25cf' };\r\n            }\r\n            return null;\r\n        };\r\n        UntitledEditorInput.prototype.suggestFileName = function () {\r\n            if (!this.hasAssociatedFilePath) {\r\n                var mime = this.getMime();\r\n                if (mime && mime !== mime_1.MIME_TEXT /* do not suggest when the mime type is simple plain text */) {\r\n                    return mime_1.suggestFilename(mime, this.getName());\r\n                }\r\n            }\r\n            return this.getName();\r\n        };\r\n        UntitledEditorInput.prototype.getMime = function () {\r\n            if (this.cachedModel) {\r\n                var modesRegistry = platform_1.Registry.as(modesRegistry_1.Extensions.EditorModes);\r\n                return modesRegistry.getMimeForMode(this.cachedModel.getModeId());\r\n            }\r\n            return null;\r\n        };\r\n        UntitledEditorInput.prototype.getEncoding = function () {\r\n            if (this.cachedModel) {\r\n                return this.cachedModel.getEncoding();\r\n            }\r\n            return null;\r\n        };\r\n        UntitledEditorInput.prototype.setEncoding = function (encoding, mode /* ignored, we only have Encode */) {\r\n            if (this.cachedModel) {\r\n                this.cachedModel.setEncoding(encoding);\r\n            }\r\n        };\r\n        UntitledEditorInput.prototype.resolve = function (refresh) {\r\n            var _this = this;\r\n            // Use Cached Model\r\n            if (this.cachedModel) {\r\n                return winjs_base_1.TPromise.as(this.cachedModel);\r\n            }\r\n            // Otherwise Create Model and load\r\n            var model = this.createModel();\r\n            return model.load().then(function (resolvedModel) {\r\n                _this.cachedModel = resolvedModel;\r\n                return _this.cachedModel;\r\n            });\r\n        };\r\n        UntitledEditorInput.prototype.createModel = function () {\r\n            var content = '';\r\n            var mime = this.modeId;\r\n            if (!mime && this.hasAssociatedFilePath) {\r\n                var mimeFromPath = mime_1.guessMimeTypes(this.resource.fsPath)[0];\r\n                if (!mime_1.isUnspecific(mimeFromPath)) {\r\n                    mime = mimeFromPath; // take most specific mime type if file path is associated and mime is specific\r\n                }\r\n            }\r\n            return this.instantiationService.createInstance(untitledEditorModel_1.UntitledEditorModel, content, mime || mime_1.MIME_TEXT, this.resource, this.hasAssociatedFilePath);\r\n        };\r\n        UntitledEditorInput.prototype.matches = function (otherInput) {\r\n            if (_super.prototype.matches.call(this, otherInput) === true) {\r\n                return true;\r\n            }\r\n            if (otherInput instanceof UntitledEditorInput) {\r\n                var otherUntitledEditorInput = otherInput;\r\n                // Otherwise compare by properties\r\n                return otherUntitledEditorInput.resource.toString() === this.resource.toString();\r\n            }\r\n            return false;\r\n        };\r\n        UntitledEditorInput.prototype.dispose = function () {\r\n            _super.prototype.dispose.call(this);\r\n            if (this.cachedModel) {\r\n                this.cachedModel.dispose();\r\n                this.cachedModel = null;\r\n            }\r\n        };\r\n        UntitledEditorInput.ID = 'workbench.editors.untitledEditorInput';\r\n        UntitledEditorInput.SCHEMA = 'untitled';\r\n        UntitledEditorInput = __decorate([\r\n            __param(3, instantiation_1.IInstantiationService),\r\n            __param(4, lifecycle_1.ILifecycleService),\r\n            __param(5, workspace_1.IWorkspaceContextService)\r\n        ], UntitledEditorInput);\r\n        return UntitledEditorInput;\r\n    })(editor_1.EditorInput);\r\n    exports.UntitledEditorInput = UntitledEditorInput;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/workbench/node/extensionPoints\", [\"require\", \"exports\", 'vs/base/node/pfs', 'vs/base/common/winjs.base', 'vs/base/common/collections', 'vs/base/common/paths', 'vs/base/common/json', 'vs/platform/plugins/node/pluginVersionValidator', 'semver'], function (require, exports, pfs, winjs_base_1, collections_1, paths, json, pluginVersionValidator_1, semver) {\r\n    var MANIFEST_FILE = 'package.json';\r\n    var PluginScanner = (function () {\r\n        function PluginScanner() {\r\n        }\r\n        /**\r\n         * Scan the plugin defined in `absoluteFolderPath`\r\n         */\r\n        PluginScanner.scanPlugin = function (version, collector, absoluteFolderPath, isBuiltin) {\r\n            absoluteFolderPath = paths.normalize(absoluteFolderPath);\r\n            var builder = collector.scopeTo(absoluteFolderPath);\r\n            var absoluteManifestPath = paths.join(absoluteFolderPath, MANIFEST_FILE);\r\n            return pfs.readFile(absoluteManifestPath).then(function (manifestContents) {\r\n                var errors = [];\r\n                var pluginDescFromFile = json.parse(manifestContents.toString(), errors);\r\n                if (errors.length > 0) {\r\n                    errors.forEach(function (error) {\r\n                        builder.error('Failed to parse ' + absoluteManifestPath + ': ' + error);\r\n                    });\r\n                    return null;\r\n                }\r\n                return pluginDescFromFile;\r\n            }).then(function (pluginDescFromFile) {\r\n                if (pluginDescFromFile === null) {\r\n                    return null;\r\n                }\r\n                pluginDescFromFile.isBuiltin = isBuiltin;\r\n                var notices = [];\r\n                if (!pluginVersionValidator_1.isValidPluginDescription(version, absoluteFolderPath, pluginDescFromFile, notices)) {\r\n                    notices.forEach(function (error) {\r\n                        builder.error(error);\r\n                    });\r\n                    return null;\r\n                }\r\n                // in this case the notices are warnings\r\n                notices.forEach(function (error) {\r\n                    builder.warn(error);\r\n                });\r\n                // id := `publisher.name`\r\n                pluginDescFromFile.id = pluginDescFromFile.publisher + \".\" + pluginDescFromFile.name;\r\n                // main := absolutePath(`main`)\r\n                if (pluginDescFromFile.main) {\r\n                    pluginDescFromFile.main = paths.normalize(paths.join(absoluteFolderPath, pluginDescFromFile.main));\r\n                }\r\n                pluginDescFromFile.extensionFolderPath = absoluteFolderPath;\r\n                return pluginDescFromFile;\r\n            }, function (err) {\r\n                builder.error('Cannot read file ' + absoluteManifestPath + ': ' + err.message);\r\n                return null;\r\n            });\r\n        };\r\n        /**\r\n         * Scan a list of extensions defined in `absoluteFolderPath`\r\n         */\r\n        PluginScanner.scanPlugins = function (version, collector, absoluteFolderPath, isBuiltin) {\r\n            var _this = this;\r\n            return pfs.readDirsInDir(absoluteFolderPath)\r\n                .then(function (folders) { return winjs_base_1.TPromise.join(folders.map(function (f) { return _this.scanPlugin(version, collector, paths.join(absoluteFolderPath, f), isBuiltin); })); })\r\n                .then(function (plugins) { return plugins.filter(function (item) { return item !== null; }); })\r\n                .then(function (plugins) {\r\n                var pluginsById = collections_1.values(collections_1.groupBy(plugins, function (p) { return p.id; }));\r\n                return pluginsById.map(function (p) { return p.sort(function (a, b) { return semver.rcompare(a.version, b.version); })[0]; });\r\n            })\r\n                .then(null, function (err) {\r\n                collector.error(absoluteFolderPath, err);\r\n                return [];\r\n            });\r\n        };\r\n        /**\r\n         * Combination of scanPlugin and scanPlugins: If a plugin manifest is found at root, we load just this plugin, otherwise we assume\r\n         * the folder contains multiple extensions.\r\n         */\r\n        PluginScanner.scanOneOrMultiplePlugins = function (version, collector, absoluteFolderPath, isBuiltin) {\r\n            var _this = this;\r\n            return pfs.fileExists(paths.join(absoluteFolderPath, MANIFEST_FILE)).then(function (exists) {\r\n                if (exists) {\r\n                    return _this.scanPlugin(version, collector, absoluteFolderPath, isBuiltin).then(function (pluginDescription) {\r\n                        if (pluginDescription === null) {\r\n                            return [];\r\n                        }\r\n                        return [pluginDescription];\r\n                    });\r\n                }\r\n                return _this.scanPlugins(version, collector, absoluteFolderPath, isBuiltin);\r\n            }, function (err) {\r\n                collector.error(absoluteFolderPath, err);\r\n                return [];\r\n            });\r\n        };\r\n        return PluginScanner;\r\n    })();\r\n    exports.PluginScanner = PluginScanner;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/workbench/node/proxy\", [\"require\", \"exports\", 'url', 'http-proxy-agent', 'https-proxy-agent'], function (require, exports, url_1, HttpProxyAgent, HttpsProxyAgent) {\r\n    function getAgent(rawRequestURL, proxyURL, strictSSL) {\r\n        if (strictSSL === void 0) { strictSSL = true; }\r\n        var requestURL = url_1.parse(rawRequestURL);\r\n        var proxyEndpoint = url_1.parse(proxyURL);\r\n        if (!/^https?:$/.test(proxyEndpoint.protocol)) {\r\n            return null;\r\n        }\r\n        if (requestURL.protocol === 'http:') {\r\n            return new HttpProxyAgent(proxyURL);\r\n        }\r\n        return new HttpsProxyAgent({\r\n            host: proxyEndpoint.host,\r\n            port: Number(proxyEndpoint.port),\r\n            rejectUnauthorized: strictSSL\r\n        });\r\n    }\r\n    function getSystemProxyURI(requestURL) {\r\n        if (requestURL.protocol === 'http:') {\r\n            return process.env.HTTP_PROXY || process.env.http_proxy || null;\r\n        }\r\n        else if (requestURL.protocol === 'https:') {\r\n            return process.env.HTTPS_PROXY || process.env.https_proxy || process.env.HTTP_PROXY || process.env.http_proxy || null;\r\n        }\r\n        return null;\r\n    }\r\n    function getSystemProxyAgent(rawRequestURL) {\r\n        var requestURL = url_1.parse(rawRequestURL);\r\n        var proxyURL = getSystemProxyURI(requestURL);\r\n        if (!proxyURL) {\r\n            return null;\r\n        }\r\n        return getAgent(rawRequestURL, proxyURL);\r\n    }\r\n    function getProxyAgent(rawRequestURL, options) {\r\n        if (options === void 0) { options = {}; }\r\n        if (!options.proxyUrl) {\r\n            return getSystemProxyAgent(rawRequestURL);\r\n        }\r\n        return getAgent(rawRequestURL, options.proxyUrl, options.strictSSL);\r\n    }\r\n    exports.getProxyAgent = getProxyAgent;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/workbench/node/userSettings\", [\"require\", \"exports\", 'fs', 'path', 'vs/base/common/json', 'vs/base/common/objects', 'vs/base/common/winjs.base', 'vs/base/common/eventSource'], function (require, exports, fs, path, json, objects, winjs_base_1, eventSource_1) {\r\n    var UserSettings = (function () {\r\n        function UserSettings(appSettingsPath, appKeybindingsPath) {\r\n            this.appSettingsPath = appSettingsPath;\r\n            this.appKeybindingsPath = appKeybindingsPath;\r\n            this._onChange = new eventSource_1.EventSource();\r\n            this.registerWatchers();\r\n        }\r\n        UserSettings.getValue = function (contextService, key, fallback) {\r\n            return new winjs_base_1.TPromise(function (c, e) {\r\n                var appSettingsPath = contextService.getConfiguration().env.appSettingsPath;\r\n                fs.readFile(appSettingsPath, function (error /* ignore */, fileContents) {\r\n                    var root = Object.create(null);\r\n                    var content = fileContents ? fileContents.toString() : '{}';\r\n                    var contents = Object.create(null);\r\n                    try {\r\n                        contents = json.parse(content);\r\n                    }\r\n                    catch (error) {\r\n                    }\r\n                    for (var key_1 in contents) {\r\n                        UserSettings.setNode(root, key_1, contents[key_1]);\r\n                    }\r\n                    return c(UserSettings.doGetValue(root, key, fallback));\r\n                });\r\n            });\r\n        };\r\n        Object.defineProperty(UserSettings.prototype, \"onChange\", {\r\n            get: function () {\r\n                return this._onChange.value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        UserSettings.prototype.getValue = function (key, fallback) {\r\n            return UserSettings.doGetValue(this.globalSettings.settings, key, fallback);\r\n        };\r\n        UserSettings.doGetValue = function (globalSettings, key, fallback) {\r\n            if (!key) {\r\n                return fallback;\r\n            }\r\n            var value = globalSettings;\r\n            var parts = key.split('\\.');\r\n            while (parts.length && value) {\r\n                var part = parts.shift();\r\n                value = value[part];\r\n            }\r\n            return typeof value !== 'undefined' ? value : fallback;\r\n        };\r\n        UserSettings.prototype.registerWatchers = function () {\r\n            var _this = this;\r\n            this.watcher = fs.watch(path.dirname(this.appSettingsPath));\r\n            this.watcher.on('change', function (eventType, fileName) { return _this.onSettingsFileChange(eventType, fileName); });\r\n        };\r\n        UserSettings.prototype.onSettingsFileChange = function (eventType, fileName) {\r\n            var _this = this;\r\n            // we can get multiple change events for one change, so we buffer through a timeout\r\n            if (this.timeoutHandle) {\r\n                global.clearTimeout(this.timeoutHandle);\r\n                delete this.timeoutHandle;\r\n            }\r\n            this.timeoutHandle = global.setTimeout(function () {\r\n                // Reload\r\n                var didChange = _this.loadSync();\r\n                // Emit event\r\n                if (didChange) {\r\n                    _this._onChange.fire(_this.globalSettings);\r\n                }\r\n            }, UserSettings.CHANGE_BUFFER_DELAY);\r\n        };\r\n        UserSettings.prototype.loadSync = function () {\r\n            var loadedSettings = this.doLoadSync();\r\n            if (!objects.equals(loadedSettings, this.globalSettings)) {\r\n                // Keep in class\r\n                this.globalSettings = loadedSettings;\r\n                return true; // changed value\r\n            }\r\n            return false; // no changed value\r\n        };\r\n        UserSettings.prototype.doLoadSync = function () {\r\n            var settings = this.doLoadSettingsSync();\r\n            return {\r\n                settings: settings.contents,\r\n                settingsParseErrors: settings.parseErrors,\r\n                keybindings: this.doLoadKeybindingsSync()\r\n            };\r\n        };\r\n        UserSettings.prototype.doLoadSettingsSync = function () {\r\n            var root = Object.create(null);\r\n            var content = '{}';\r\n            try {\r\n                content = fs.readFileSync(this.appSettingsPath).toString();\r\n            }\r\n            catch (error) {\r\n            }\r\n            var contents = Object.create(null);\r\n            try {\r\n                contents = json.parse(content);\r\n            }\r\n            catch (error) {\r\n                // parse problem\r\n                return {\r\n                    contents: Object.create(null),\r\n                    parseErrors: [this.appSettingsPath]\r\n                };\r\n            }\r\n            for (var key in contents) {\r\n                UserSettings.setNode(root, key, contents[key]);\r\n            }\r\n            return {\r\n                contents: root\r\n            };\r\n        };\r\n        UserSettings.setNode = function (root, key, value) {\r\n            var segments = key.split('.');\r\n            var last = segments.pop();\r\n            var curr = root;\r\n            segments.forEach(function (s) {\r\n                var obj = curr[s];\r\n                switch (typeof obj) {\r\n                    case 'undefined':\r\n                        obj = curr[s] = {};\r\n                        break;\r\n                    case 'object':\r\n                        break;\r\n                    default:\r\n                        console.log('Conflicting user settings: ' + key + ' at ' + s + ' with ' + JSON.stringify(obj));\r\n                }\r\n                curr = obj;\r\n            });\r\n            curr[last] = value;\r\n        };\r\n        UserSettings.prototype.doLoadKeybindingsSync = function () {\r\n            try {\r\n                return json.parse(fs.readFileSync(this.appKeybindingsPath).toString());\r\n            }\r\n            catch (error) {\r\n            }\r\n            return [];\r\n        };\r\n        UserSettings.prototype.dispose = function () {\r\n            if (this.watcher) {\r\n                this.watcher.close();\r\n                this.watcher = null;\r\n            }\r\n        };\r\n        UserSettings.CHANGE_BUFFER_DELAY = 300;\r\n        return UserSettings;\r\n    })();\r\n    exports.UserSettings = UserSettings;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/workbench/parts/extensions/common/extensions\", [\"require\", \"exports\", 'vs/platform/instantiation/common/instantiation'], function (require, exports, instantiation_1) {\r\n    exports.IExtensionsService = instantiation_1.createDecorator('extensionsService');\r\n    exports.IGalleryService = instantiation_1.createDecorator('galleryService');\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\ndefine(\"vs/workbench/parts/files/browser/views/explorerViewModel\", [\"require\", \"exports\", 'vs/base/common/assert', 'vs/base/common/types', 'vs/base/common/uri', 'vs/base/common/platform', 'vs/base/common/paths', 'vs/base/common/mime'], function (require, exports, assert, types, uri_1, platform_1, paths, mime_1) {\r\n    'use strict';\r\n    (function (StatType) {\r\n        StatType[StatType[\"FILE\"] = 0] = \"FILE\";\r\n        StatType[StatType[\"FOLDER\"] = 1] = \"FOLDER\";\r\n        StatType[StatType[\"ANY\"] = 2] = \"ANY\";\r\n    })(exports.StatType || (exports.StatType = {}));\r\n    var StatType = exports.StatType;\r\n    var FileStat = (function () {\r\n        function FileStat(resource, isDirectory, hasChildren, name, mtime, etag) {\r\n            if (name === void 0) { name = paths.basename(resource.fsPath); }\r\n            this.resource = resource;\r\n            this.name = name;\r\n            this.isDirectory = !!isDirectory;\r\n            this.hasChildren = isDirectory && hasChildren;\r\n            this.mime = !isDirectory ? mime_1.guessMimeTypes(this.resource.fsPath).join(', ') : void (0);\r\n            this.etag = etag;\r\n            this.mtime = mtime;\r\n            // Prepare child stat array\r\n            if (this.isDirectory) {\r\n                this.children = [];\r\n            }\r\n            this.isDirectoryResolved = false;\r\n        }\r\n        FileStat.prototype.getId = function () {\r\n            return this.resource.toString();\r\n        };\r\n        FileStat.create = function (raw, resolveTo) {\r\n            var stat = new FileStat(raw.resource, raw.isDirectory, raw.hasChildren, raw.name, raw.mtime, raw.etag);\r\n            // Recursively add children if present\r\n            if (stat.isDirectory) {\r\n                // isDirectoryResolved is a very important indicator in the stat model that tells if the folder was fully resolved\r\n                // the folder is fully resolved if either it has a list of children or the client requested this by using the resolveTo\r\n                // array of resource path to resolve.\r\n                stat.isDirectoryResolved = !!raw.children || (!!resolveTo && resolveTo.some(function (r) {\r\n                    return paths.isEqualOrParent(r.fsPath, stat.resource.fsPath);\r\n                }));\r\n                // Recurse into children\r\n                if (raw.children) {\r\n                    for (var i = 0, len = raw.children.length; i < len; i++) {\r\n                        var child = FileStat.create(raw.children[i], resolveTo);\r\n                        child.parent = stat;\r\n                        stat.children.push(child);\r\n                        stat.hasChildren = stat.children.length > 0;\r\n                    }\r\n                }\r\n            }\r\n            return stat;\r\n        };\r\n        /**\r\n         * Merges the stat which was resolved from the disk with the local stat by copying over properties\r\n         * and children. The merge will only consider resolved stat elements to avoid overwriting data which\r\n         * exists locally.\r\n         */\r\n        FileStat.mergeLocalWithDisk = function (disk, local) {\r\n            assert.ok(disk.resource.toString() === local.resource.toString(), 'Merging only supported for stats with the same resource');\r\n            // Stop merging when a folder is not resolved to avoid loosing local data\r\n            var mergingDirectories = disk.isDirectory || local.isDirectory;\r\n            if (mergingDirectories && local.isDirectoryResolved && !disk.isDirectoryResolved) {\r\n                return;\r\n            }\r\n            // Properties\r\n            local.resource = disk.resource;\r\n            local.name = disk.name;\r\n            local.isDirectory = disk.isDirectory;\r\n            local.hasChildren = disk.isDirectory && disk.hasChildren;\r\n            local.mtime = disk.mtime;\r\n            local.mime = disk.mime;\r\n            local.isDirectoryResolved = disk.isDirectoryResolved;\r\n            // Merge Children if resolved\r\n            if (mergingDirectories && disk.isDirectoryResolved) {\r\n                // Map resource => stat\r\n                var oldLocalChildren = Object.create(null);\r\n                local.children.forEach(function (localChild) {\r\n                    oldLocalChildren[localChild.resource.toString()] = localChild;\r\n                });\r\n                // Clear current children\r\n                local.children = [];\r\n                // Merge received children\r\n                disk.children.forEach(function (diskChild) {\r\n                    var formerLocalChild = oldLocalChildren[diskChild.resource.toString()];\r\n                    // Existing child: merge\r\n                    if (formerLocalChild) {\r\n                        FileStat.mergeLocalWithDisk(diskChild, formerLocalChild);\r\n                        formerLocalChild.parent = local;\r\n                        local.children.push(formerLocalChild);\r\n                    }\r\n                    else {\r\n                        diskChild.parent = local;\r\n                        local.children.push(diskChild);\r\n                    }\r\n                });\r\n            }\r\n        };\r\n        /**\r\n         * Returns a deep copy of this model object.\r\n         */\r\n        FileStat.prototype.clone = function () {\r\n            var stat = new FileStat(uri_1.default.parse(this.resource.toString()), this.isDirectory, this.hasChildren, this.name, this.mtime, this.etag);\r\n            stat.isDirectoryResolved = this.isDirectoryResolved;\r\n            if (this.parent) {\r\n                stat.parent = this.parent;\r\n            }\r\n            if (this.isDirectory) {\r\n                this.children.forEach(function (child) {\r\n                    stat.addChild(child.clone());\r\n                });\r\n            }\r\n            return stat;\r\n        };\r\n        /**\r\n         * Adds a child element to this folder.\r\n         */\r\n        FileStat.prototype.addChild = function (child) {\r\n            assert.ok(this.isDirectory, 'Can only add a child to a folder');\r\n            // Overwrite a previous child with the same name\r\n            this.removeChild(child);\r\n            // Inherit some parent properties to child\r\n            child.parent = this;\r\n            child.updateResource(false);\r\n            this.children.push(child);\r\n            this.hasChildren = this.children.length > 0;\r\n        };\r\n        /**\r\n         * Returns true if this stat is a directory that contains a child with the given name.\r\n         *\r\n         * @param ignoreCase if true, will check for the name ignoring case.\r\n         * @param type the type of stat to check for.\r\n         */\r\n        FileStat.prototype.hasChild = function (name, ignoreCase, type) {\r\n            if (type === void 0) { type = StatType.ANY; }\r\n            assert.ok(this.isDirectory, 'Can only call hasChild on a directory');\r\n            assert.ok(types.isString(name), 'Expected parameter of type String');\r\n            for (var i = 0; i < this.children.length; i++) {\r\n                var child = this.children[i];\r\n                if ((type === StatType.FILE && child.isDirectory) || (type === StatType.FOLDER && !child.isDirectory)) {\r\n                    continue;\r\n                }\r\n                // Check for Identity\r\n                if (child.name === name) {\r\n                    return true;\r\n                }\r\n                // Also consider comparing without case\r\n                if (ignoreCase && child.name.toLowerCase() === name.toLowerCase()) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        };\r\n        /**\r\n         * Removes a child element from this folder.\r\n         */\r\n        FileStat.prototype.removeChild = function (child) {\r\n            assert.ok(this.isDirectory, 'Can only remove a child from a directory');\r\n            assert.ok(!!this.children, 'Expected children for directory but found none: ' + this.resource.fsPath);\r\n            for (var i = 0; i < this.children.length; i++) {\r\n                if (this.children[i].resource.toString() === child.resource.toString()) {\r\n                    this.children.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n            this.hasChildren = this.children.length > 0;\r\n        };\r\n        /**\r\n         * Moves this element under a new parent element.\r\n         */\r\n        FileStat.prototype.move = function (newParent, fnBetweenStates, fnDone) {\r\n            var _this = this;\r\n            assert.ok(newParent.isDirectory, 'Can only move an element into a directory');\r\n            if (!fnBetweenStates) {\r\n                fnBetweenStates = function (cb) { cb(); };\r\n            }\r\n            this.parent.removeChild(this);\r\n            fnBetweenStates(function () {\r\n                newParent.addChild(_this);\r\n                _this.updateResource(true);\r\n                if (fnDone) {\r\n                    fnDone();\r\n                }\r\n            });\r\n        };\r\n        FileStat.prototype.updateResource = function (recursive) {\r\n            this.resource = uri_1.default.file(paths.join(this.parent.resource.fsPath, this.name));\r\n            if (recursive) {\r\n                if (this.isDirectory && this.hasChildren && this.children) {\r\n                    this.children.forEach(function (child) {\r\n                        child.updateResource(true);\r\n                    });\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         * Tells this stat that it was renamed. This requires changes to all children of this stat (if any)\r\n         * so that the path property can be updated properly.\r\n         */\r\n        FileStat.prototype.rename = function (renamedStat) {\r\n            // Merge a subset of Properties that can change on rename\r\n            this.name = renamedStat.name;\r\n            this.mime = renamedStat.mime;\r\n            this.mtime = renamedStat.mtime;\r\n            // Update Paths including children\r\n            this.updateResource(true);\r\n        };\r\n        /**\r\n         * Returns a child stat from this stat that matches with the provided path.\r\n         * Will return \"null\" in case the child does not exist.\r\n         */\r\n        FileStat.prototype.find = function (resource) {\r\n            // Return if path found\r\n            if (this.fileResourceEquals(resource, this.resource)) {\r\n                return this;\r\n            }\r\n            // Return if not having any children\r\n            if (!this.hasChildren) {\r\n                return null;\r\n            }\r\n            for (var i = 0; i < this.children.length; i++) {\r\n                var child = this.children[i];\r\n                if (this.fileResourceEquals(resource, child.resource)) {\r\n                    return child;\r\n                }\r\n                if (child.isDirectory && paths.isEqualOrParent(resource.fsPath, child.resource.fsPath)) {\r\n                    return child.find(resource);\r\n                }\r\n            }\r\n            return null; //Unable to find\r\n        };\r\n        FileStat.prototype.fileResourceEquals = function (r1, r2) {\r\n            var identityEquals = (r1.toString() === r2.toString());\r\n            if (platform_1.isLinux || identityEquals) {\r\n                return identityEquals;\r\n            }\r\n            return r1.toString().toLowerCase() === r2.toString().toLowerCase();\r\n        };\r\n        return FileStat;\r\n    })();\r\n    exports.FileStat = FileStat;\r\n    /* A helper that can be used to show a placeholder when creating a new stat */\r\n    var NewStatPlaceholder = (function (_super) {\r\n        __extends(NewStatPlaceholder, _super);\r\n        function NewStatPlaceholder(isDirectory) {\r\n            _super.call(this, uri_1.default.file(''));\r\n            this.id = NewStatPlaceholder.ID++;\r\n            this.isDirectoryResolved = isDirectory;\r\n        }\r\n        NewStatPlaceholder.prototype.destroy = function () {\r\n            this.parent.removeChild(this);\r\n            delete this.isDirectoryResolved;\r\n            delete this.name;\r\n            delete this.isDirectory;\r\n            delete this.hasChildren;\r\n            delete this.mtime;\r\n            delete this.mime;\r\n        };\r\n        NewStatPlaceholder.prototype.getId = function () {\r\n            return 'new-stat-placeholder:' + this.id + ':' + this.parent.resource.toString();\r\n        };\r\n        /**\r\n         * Returns a deep copy of this model object.\r\n         */\r\n        NewStatPlaceholder.prototype.clone = function () {\r\n            var stat = new NewStatPlaceholder(this.isDirectory);\r\n            stat.parent = this.parent;\r\n            return stat;\r\n        };\r\n        NewStatPlaceholder.prototype.addChild = function (child) {\r\n            throw new Error('Can\\'t perform operations in NewStatPlaceholder.');\r\n        };\r\n        NewStatPlaceholder.prototype.hasChild = function (name, ignoreCase) {\r\n            return false;\r\n        };\r\n        NewStatPlaceholder.prototype.removeChild = function (child) {\r\n            throw new Error('Can\\'t perform operations in NewStatPlaceholder.');\r\n        };\r\n        NewStatPlaceholder.prototype.move = function (newParent) {\r\n            throw new Error('Can\\'t perform operations in NewStatPlaceholder.');\r\n        };\r\n        NewStatPlaceholder.prototype.rename = function (renamedStat) {\r\n            throw new Error('Can\\'t perform operations in NewStatPlaceholder.');\r\n        };\r\n        NewStatPlaceholder.prototype.find = function (resource) {\r\n            return null;\r\n        };\r\n        NewStatPlaceholder.addNewStatPlaceholder = function (parent, isDirectory) {\r\n            assert.ok(parent.isDirectory, 'Can only add a child to a folder');\r\n            var child = new NewStatPlaceholder(isDirectory);\r\n            // Inherit some parent properties to child\r\n            child.parent = parent;\r\n            parent.children.push(child);\r\n            parent.hasChildren = parent.children.length > 0;\r\n            return child;\r\n        };\r\n        NewStatPlaceholder.ID = 0;\r\n        return NewStatPlaceholder;\r\n    })(FileStat);\r\n    exports.NewStatPlaceholder = NewStatPlaceholder;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\ndefine(\"vs/workbench/parts/files/common/files\", [\"require\", \"exports\", 'vs/base/common/events', 'vs/base/common/mime', 'vs/workbench/common/editor', 'vs/platform/instantiation/common/instantiation', 'vs/workbench/parts/files/browser/views/explorerViewModel'], function (require, exports, events_1, mime_1, editor_1, instantiation_1, explorerViewModel_1) {\r\n    /**\r\n     * Explorer viewlet id.\r\n     */\r\n    exports.VIEWLET_ID = 'workbench.view.explorer';\r\n    /**\r\n     * File editor input id.\r\n     */\r\n    exports.FILE_EDITOR_INPUT_ID = 'workbench.editors.files.fileEditorInput';\r\n    /**\r\n     * Text file editor id.\r\n     */\r\n    exports.TEXT_FILE_EDITOR_ID = 'workbench.editors.files.textFileEditor';\r\n    /**\r\n     * Binary file editor id.\r\n     */\r\n    exports.BINARY_FILE_EDITOR_ID = 'workbench.editors.files.binaryFileEditor';\r\n    /**\r\n     * Marker ID for model entries.\r\n     */\r\n    exports.WORKING_FILES_MODEL_ENTRY_CLASS_ID = 'workbench.workingFiles.model.entry.class';\r\n    /**\r\n     * API class to denote file editor inputs. Internal implementation is provided.\r\n     *\r\n     * Note: This class is not intended to be instantiated.\r\n     */\r\n    var FileEditorInput = (function (_super) {\r\n        __extends(FileEditorInput, _super);\r\n        function FileEditorInput() {\r\n            _super.apply(this, arguments);\r\n        }\r\n        return FileEditorInput;\r\n    })(editor_1.EditorInput);\r\n    exports.FileEditorInput = FileEditorInput;\r\n    /**\r\n     * Helper to get a file resource from an object.\r\n     */\r\n    function asFileResource(obj) {\r\n        if (obj instanceof explorerViewModel_1.FileStat) {\r\n            var stat = obj;\r\n            return {\r\n                resource: stat.resource,\r\n                mimes: stat.mime ? stat.mime.split(', ') : [],\r\n                isDirectory: stat.isDirectory\r\n            };\r\n        }\r\n        if (obj && obj.CLASS_ID === exports.WORKING_FILES_MODEL_ENTRY_CLASS_ID) {\r\n            var entry = obj;\r\n            if (entry.isFile) {\r\n                return {\r\n                    resource: entry.resource,\r\n                    mimes: mime_1.guessMimeTypes(entry.resource.fsPath),\r\n                    isDirectory: false\r\n                };\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    exports.asFileResource = asFileResource;\r\n    /**\r\n     * List of event types from files.\r\n     */\r\n    exports.EventType = {\r\n        /**\r\n         * Indicates that a file content has changed but not yet saved.\r\n         */\r\n        FILE_DIRTY: 'files:fileDirty',\r\n        /**\r\n         * Indicates that a file is being saved.\r\n         */\r\n        FILE_SAVING: 'files:fileSaving',\r\n        /**\r\n         * Indicates that a file save resulted in an error.\r\n         */\r\n        FILE_SAVE_ERROR: 'files:fileSaveError',\r\n        /**\r\n         * Indicates that a file content has been saved to the disk.\r\n         */\r\n        FILE_SAVED: 'files:fileSaved',\r\n        /**\r\n         * Indicates that a file content has been reverted to the state\r\n         * on disk.\r\n         */\r\n        FILE_REVERTED: 'files:fileReverted'\r\n    };\r\n    /**\r\n     * Local file change events are being emitted when a file is added, removed, moved or its contents got updated. These events\r\n     * are being emitted from within the workbench and are not reflecting the truth on the disk file system. For that, please\r\n     * use FileChangesEvent instead.\r\n     */\r\n    var LocalFileChangeEvent = (function (_super) {\r\n        __extends(LocalFileChangeEvent, _super);\r\n        function LocalFileChangeEvent(before, after, originalEvent) {\r\n            _super.call(this, null, before, after, originalEvent);\r\n        }\r\n        /**\r\n         * Returns the meta information of the file before the event occurred or null if the file is new.\r\n         */\r\n        LocalFileChangeEvent.prototype.getBefore = function () {\r\n            return this.oldValue;\r\n        };\r\n        /**\r\n         * Returns the meta information of the file after the event occurred or null if the file got deleted.\r\n         */\r\n        LocalFileChangeEvent.prototype.getAfter = function () {\r\n            return this.newValue;\r\n        };\r\n        /**\r\n         * Indicates if the file was added as a new file.\r\n         */\r\n        LocalFileChangeEvent.prototype.gotAdded = function () {\r\n            return !this.oldValue && !!this.newValue;\r\n        };\r\n        /**\r\n         * Indicates if the file was moved to a different path.\r\n         */\r\n        LocalFileChangeEvent.prototype.gotMoved = function () {\r\n            return !!this.oldValue && !!this.newValue && this.oldValue.resource.toString() !== this.newValue.resource.toString();\r\n        };\r\n        /**\r\n         * Indicates if the files metadata was updated.\r\n         */\r\n        LocalFileChangeEvent.prototype.gotUpdated = function () {\r\n            return !!this.oldValue && !!this.newValue && !this.gotMoved() && this.oldValue !== this.newValue;\r\n        };\r\n        /**\r\n         * Indicates if the file was deleted.\r\n         */\r\n        LocalFileChangeEvent.prototype.gotDeleted = function () {\r\n            return !!this.oldValue && !this.newValue;\r\n        };\r\n        return LocalFileChangeEvent;\r\n    })(events_1.PropertyChangeEvent);\r\n    exports.LocalFileChangeEvent = LocalFileChangeEvent;\r\n    /**\r\n     * Text file change events are emitted when files are saved or reverted.\r\n     */\r\n    var TextFileChangeEvent = (function (_super) {\r\n        __extends(TextFileChangeEvent, _super);\r\n        function TextFileChangeEvent(model, before, after, originalEvent) {\r\n            if (after === void 0) { after = before; }\r\n            _super.call(this, before, after, originalEvent);\r\n            this._model = model;\r\n        }\r\n        Object.defineProperty(TextFileChangeEvent.prototype, \"model\", {\r\n            get: function () {\r\n                return this._model;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        TextFileChangeEvent.prototype.setAutoSaved = function (autoSaved) {\r\n            this._isAutoSaved = autoSaved;\r\n        };\r\n        Object.defineProperty(TextFileChangeEvent.prototype, \"isAutoSaved\", {\r\n            get: function () {\r\n                return this._isAutoSaved;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return TextFileChangeEvent;\r\n    })(LocalFileChangeEvent);\r\n    exports.TextFileChangeEvent = TextFileChangeEvent;\r\n    exports.TEXT_FILE_SERVICE_ID = 'textFileService';\r\n    (function (ConfirmResult) {\r\n        ConfirmResult[ConfirmResult[\"SAVE\"] = 0] = \"SAVE\";\r\n        ConfirmResult[ConfirmResult[\"DONT_SAVE\"] = 1] = \"DONT_SAVE\";\r\n        ConfirmResult[ConfirmResult[\"CANCEL\"] = 2] = \"CANCEL\";\r\n    })(exports.ConfirmResult || (exports.ConfirmResult = {}));\r\n    var ConfirmResult = exports.ConfirmResult;\r\n    exports.ITextFileService = instantiation_1.createDecorator(exports.TEXT_FILE_SERVICE_ID);\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/workbench/parts/output/common/output\", [\"require\", \"exports\", 'vs/platform/platform', 'vs/platform/instantiation/common/instantiation'], function (require, exports, platform_1, instantiation_1) {\r\n    /**\r\n     * Mime type used by the output editor.\r\n     */\r\n    exports.OUTPUT_MIME = 'text/x-monaco-output';\r\n    /**\r\n     * Id used by the output editor.\r\n     */\r\n    exports.OUTPUT_MODE_ID = 'Log';\r\n    /**\r\n     * Output editor input id.\r\n     */\r\n    exports.OUTPUT_EDITOR_INPUT_ID = 'vs.output';\r\n    /**\r\n     * Output from any not defined channel is here\r\n     */\r\n    exports.DEFAULT_OUTPUT_CHANNEL = '';\r\n    exports.Extensions = {\r\n        OutputChannels: 'workbench.contributions.outputChannels'\r\n    };\r\n    exports.OUTPUT_SERVICE_ID = 'outputService';\r\n    exports.IOutputService = instantiation_1.createDecorator(exports.OUTPUT_SERVICE_ID);\r\n    var OutputChannelRegistry = (function () {\r\n        function OutputChannelRegistry() {\r\n            this.channels = [];\r\n        }\r\n        OutputChannelRegistry.prototype.registerChannel = function (name) {\r\n            if (this.channels.indexOf(name) === -1) {\r\n                this.channels.push(name);\r\n            }\r\n        };\r\n        OutputChannelRegistry.prototype.getChannels = function () {\r\n            return this.channels.slice(0);\r\n        };\r\n        return OutputChannelRegistry;\r\n    })();\r\n    platform_1.Registry.add(exports.Extensions.OutputChannels, new OutputChannelRegistry());\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/workbench/parts/search/common/search\", [\"require\", \"exports\", 'vs/base/common/winjs.base', 'vs/base/common/errors', 'vs/editor/common/editorCommonExtensions'], function (require, exports, winjs_base_1, errors_1, editorCommonExtensions_1) {\r\n    var NavigateTypesSupportRegistry;\r\n    (function (NavigateTypesSupportRegistry) {\r\n        var _supports = [];\r\n        function register(support) {\r\n            if (support) {\r\n                _supports.push(support);\r\n            }\r\n            return {\r\n                dispose: function () {\r\n                    if (support) {\r\n                        var idx = _supports.indexOf(support);\r\n                        if (idx >= 0) {\r\n                            _supports.splice(idx, 1);\r\n                            support = undefined;\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        NavigateTypesSupportRegistry.register = register;\r\n        function all() {\r\n            return _supports.slice(0);\r\n        }\r\n        NavigateTypesSupportRegistry.all = all;\r\n    })(NavigateTypesSupportRegistry = exports.NavigateTypesSupportRegistry || (exports.NavigateTypesSupportRegistry = {}));\r\n    function getNavigateToItems(query) {\r\n        var promises = NavigateTypesSupportRegistry.all().map(function (support) {\r\n            return support.getNavigateToItems(query).then(function (value) { return value; }, errors_1.onUnexpectedError);\r\n        });\r\n        return winjs_base_1.TPromise.join(promises).then(function (all) {\r\n            var result = [];\r\n            for (var _i = 0; _i < all.length; _i++) {\r\n                var bearings = all[_i];\r\n                if (Array.isArray(bearings)) {\r\n                    result.push.apply(result, bearings);\r\n                }\r\n            }\r\n            return result;\r\n        });\r\n    }\r\n    exports.getNavigateToItems = getNavigateToItems;\r\n    editorCommonExtensions_1.CommonEditorRegistry.registerLanguageCommand('_executeWorkspaceSymbolProvider', function (accessor, args) {\r\n        var query = args.query;\r\n        if (typeof query !== 'string') {\r\n            throw errors_1.illegalArgument();\r\n        }\r\n        return getNavigateToItems(query);\r\n    });\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/workbench/services/editor/common/editorService\", [\"require\", \"exports\", 'vs/platform/instantiation/common/instantiation'], function (require, exports, instantiation_1) {\r\n    (function (EditorArrangement) {\r\n        EditorArrangement[EditorArrangement[\"MINIMIZE_OTHERS\"] = 0] = \"MINIMIZE_OTHERS\";\r\n        EditorArrangement[EditorArrangement[\"EVEN_WIDTH\"] = 1] = \"EVEN_WIDTH\";\r\n    })(exports.EditorArrangement || (exports.EditorArrangement = {}));\r\n    var EditorArrangement = exports.EditorArrangement;\r\n    exports.IWorkbenchEditorService = instantiation_1.createDecorator('editorService');\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") return Reflect.decorate(decorators, target, key, desc);\r\n    switch (arguments.length) {\r\n        case 2: return decorators.reduceRight(function(o, d) { return (d && d(o)) || o; }, target);\r\n        case 3: return decorators.reduceRight(function(o, d) { return (d && d(target, key)), void 0; }, void 0);\r\n        case 4: return decorators.reduceRight(function(o, d) { return (d && d(target, key, o)) || o; }, desc);\r\n    }\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\ndefine(\"vs/workbench/api/common/extHostOutputService\", [\"require\", \"exports\", 'vs/base/common/errors', 'vs/platform/thread/common/thread', 'vs/workbench/parts/output/common/output', 'vs/workbench/services/editor/common/editorService', 'vs/workbench/api/common/pluginHostTypeConverters'], function (require, exports, errors_1, thread_1, output_1, editorService_1, TypeConverters) {\r\n    var ExtHostOutputChannel = (function () {\r\n        function ExtHostOutputChannel(name, proxy) {\r\n            this._name = name;\r\n            this._proxy = proxy;\r\n        }\r\n        Object.defineProperty(ExtHostOutputChannel.prototype, \"name\", {\r\n            get: function () {\r\n                return this._name;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        ExtHostOutputChannel.prototype.dispose = function () {\r\n            var _this = this;\r\n            if (!this._disposed) {\r\n                this._proxy.clear(this._name).then(function () {\r\n                    _this._disposed = true;\r\n                });\r\n            }\r\n        };\r\n        ExtHostOutputChannel.prototype.append = function (value) {\r\n            this._proxy.append(this._name, value);\r\n        };\r\n        ExtHostOutputChannel.prototype.appendLine = function (value) {\r\n            this.append(value + '\\n');\r\n        };\r\n        ExtHostOutputChannel.prototype.clear = function () {\r\n            this._proxy.clear(this._name);\r\n        };\r\n        ExtHostOutputChannel.prototype.show = function (column) {\r\n            this._proxy.reveal(this._name, TypeConverters.fromViewColumn(column));\r\n        };\r\n        ExtHostOutputChannel.prototype.hide = function () {\r\n            this._proxy.close(this._name);\r\n        };\r\n        return ExtHostOutputChannel;\r\n    })();\r\n    exports.ExtHostOutputChannel = ExtHostOutputChannel;\r\n    var ExtHostOutputService = (function () {\r\n        function ExtHostOutputService(threadService) {\r\n            this._proxy = threadService.getRemotable(MainThreadOutputService);\r\n        }\r\n        ExtHostOutputService.prototype.createOutputChannel = function (name) {\r\n            name = name.trim();\r\n            if (!name) {\r\n                throw new Error('illegal argument `name`. must not be falsy');\r\n            }\r\n            else {\r\n                return new ExtHostOutputChannel(name, this._proxy);\r\n            }\r\n        };\r\n        return ExtHostOutputService;\r\n    })();\r\n    exports.ExtHostOutputService = ExtHostOutputService;\r\n    var MainThreadOutputService = (function () {\r\n        function MainThreadOutputService(outputService, editorService) {\r\n            this._outputService = outputService;\r\n            this._editorService = editorService;\r\n        }\r\n        MainThreadOutputService.prototype.append = function (channel, value) {\r\n            this._outputService.append(channel, value);\r\n            return undefined;\r\n        };\r\n        MainThreadOutputService.prototype.clear = function (channel) {\r\n            this._outputService.clearOutput(channel);\r\n            return undefined;\r\n        };\r\n        MainThreadOutputService.prototype.reveal = function (channel, position) {\r\n            this._outputService.showOutput(channel, position);\r\n            return undefined;\r\n        };\r\n        MainThreadOutputService.prototype.close = function (channel) {\r\n            var editors = this._editorService.getVisibleEditors();\r\n            for (var _i = 0; _i < editors.length; _i++) {\r\n                var editor = editors[_i];\r\n                if (editor.input.getId() === output_1.OUTPUT_EDITOR_INPUT_ID) {\r\n                    this._editorService.closeEditor(editor).done(null, errors_1.onUnexpectedError);\r\n                    return undefined;\r\n                }\r\n            }\r\n        };\r\n        MainThreadOutputService = __decorate([\r\n            thread_1.Remotable.MainContext('MainThreadOutputService'),\r\n            __param(0, output_1.IOutputService),\r\n            __param(1, editorService_1.IWorkbenchEditorService)\r\n        ], MainThreadOutputService);\r\n        return MainThreadOutputService;\r\n    })();\r\n    exports.MainThreadOutputService = MainThreadOutputService;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") return Reflect.decorate(decorators, target, key, desc);\r\n    switch (arguments.length) {\r\n        case 2: return decorators.reduceRight(function(o, d) { return (d && d(o)) || o; }, target);\r\n        case 3: return decorators.reduceRight(function(o, d) { return (d && d(target, key)), void 0; }, void 0);\r\n        case 4: return decorators.reduceRight(function(o, d) { return (d && d(target, key, o)) || o; }, desc);\r\n    }\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\ndefine(\"vs/workbench/api/common/pluginHostWorkspace\", [\"require\", \"exports\", 'vs/platform/search/common/search', 'vs/platform/workspace/common/workspace', 'vs/platform/thread/common/thread', 'vs/platform/event/common/event', 'vs/workbench/services/editor/common/editorService', 'vs/workbench/parts/files/common/files', 'vs/editor/common/services/bulkEdit', 'vs/workbench/api/common/pluginHostTypeConverters'], function (require, exports, search_1, workspace_1, thread_1, event_1, editorService_1, files_1, bulkEdit_1, pluginHostTypeConverters_1) {\r\n    var PluginHostWorkspace = (function () {\r\n        function PluginHostWorkspace(threadService, workspacePath) {\r\n            this._proxy = threadService.getRemotable(MainThreadWorkspace);\r\n            this._workspacePath = workspacePath;\r\n        }\r\n        PluginHostWorkspace.prototype.getPath = function () {\r\n            return this._workspacePath;\r\n        };\r\n        PluginHostWorkspace.prototype.getRelativePath = function (pathOrUri) {\r\n            var path;\r\n            if (typeof pathOrUri === 'string') {\r\n                path = pathOrUri;\r\n            }\r\n            else {\r\n                path = pathOrUri.fsPath;\r\n            }\r\n            if (this._workspacePath && this._workspacePath.length < path.length) {\r\n                // return relative(workspacePath, path);\r\n                return path.substring(this._workspacePath.length);\r\n            }\r\n            return path;\r\n        };\r\n        PluginHostWorkspace.prototype.findFiles = function (include, exclude, maxResults) {\r\n            return this._proxy.findFiles(include, exclude, maxResults);\r\n        };\r\n        PluginHostWorkspace.prototype.saveAll = function (includeUntitled) {\r\n            return this._proxy.saveAll(includeUntitled);\r\n        };\r\n        PluginHostWorkspace.prototype.appyEdit = function (edit) {\r\n            var resourceEdits = [];\r\n            var entries = edit.entries();\r\n            for (var _i = 0; _i < entries.length; _i++) {\r\n                var entry = entries[_i];\r\n                var uri = entry[0], edits = entry[1];\r\n                for (var _a = 0; _a < edits.length; _a++) {\r\n                    var edit_1 = edits[_a];\r\n                    resourceEdits.push({\r\n                        resource: uri,\r\n                        newText: edit_1.newText,\r\n                        range: pluginHostTypeConverters_1.fromRange(edit_1.range)\r\n                    });\r\n                }\r\n            }\r\n            return this._proxy.applyWorkspaceEdit(resourceEdits);\r\n        };\r\n        PluginHostWorkspace = __decorate([\r\n            __param(0, thread_1.IThreadService)\r\n        ], PluginHostWorkspace);\r\n        return PluginHostWorkspace;\r\n    })();\r\n    exports.PluginHostWorkspace = PluginHostWorkspace;\r\n    var MainThreadWorkspace = (function () {\r\n        function MainThreadWorkspace(searchService, contextService, textFileService, editorService, eventService) {\r\n            this._searchService = searchService;\r\n            this._workspace = contextService.getWorkspace();\r\n            this._textFileService = textFileService;\r\n            this._editorService = editorService;\r\n            this._eventService = eventService;\r\n        }\r\n        MainThreadWorkspace.prototype.findFiles = function (include, exclude, maxResults) {\r\n            if (!this._workspace) {\r\n                return;\r\n            }\r\n            return this._searchService.search({\r\n                rootResources: [this._workspace.resource],\r\n                type: search_1.QueryType.File,\r\n                maxResults: maxResults,\r\n                includePattern: (_a = {}, _a[include] = true, _a),\r\n                excludePattern: (_b = {}, _b[exclude] = true, _b),\r\n            }).then(function (result) {\r\n                return result.results.map(function (m) { return m.resource; });\r\n            });\r\n            var _a, _b;\r\n        };\r\n        MainThreadWorkspace.prototype.saveAll = function (includeUntitled) {\r\n            return this._textFileService.saveAll(includeUntitled).then(function (result) {\r\n                return result.results.every(function (each) { return each.success === true; });\r\n                ;\r\n            });\r\n        };\r\n        MainThreadWorkspace.prototype.applyWorkspaceEdit = function (edits) {\r\n            var codeEditor;\r\n            var editor = this._editorService.getActiveEditor();\r\n            if (editor) {\r\n                var candidate = editor.getControl();\r\n                if (typeof candidate.getEditorType === 'function') {\r\n                    // enough proof\r\n                    codeEditor = candidate;\r\n                }\r\n            }\r\n            return bulkEdit_1.bulkEdit(this._eventService, this._editorService, codeEditor, edits)\r\n                .then(function () { return true; });\r\n        };\r\n        MainThreadWorkspace = __decorate([\r\n            thread_1.Remotable.MainContext('MainThreadWorkspace'),\r\n            __param(0, search_1.ISearchService),\r\n            __param(1, workspace_1.IWorkspaceContextService),\r\n            __param(2, files_1.ITextFileService),\r\n            __param(3, editorService_1.IWorkbenchEditorService),\r\n            __param(4, event_1.IEventService)\r\n        ], MainThreadWorkspace);\r\n        return MainThreadWorkspace;\r\n    })();\r\n    exports.MainThreadWorkspace = MainThreadWorkspace;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/workbench/services/quickopen/browser/quickOpenService\", [\"require\", \"exports\", 'vs/platform/instantiation/common/instantiation'], function (require, exports, instantiation_1) {\r\n    exports.IQuickOpenService = instantiation_1.createDecorator('quickOpenService');\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") return Reflect.decorate(decorators, target, key, desc);\r\n    switch (arguments.length) {\r\n        case 2: return decorators.reduceRight(function(o, d) { return (d && d(o)) || o; }, target);\r\n        case 3: return decorators.reduceRight(function(o, d) { return (d && d(target, key)), void 0; }, void 0);\r\n        case 4: return decorators.reduceRight(function(o, d) { return (d && d(target, key, o)) || o; }, desc);\r\n    }\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\ndefine(\"vs/workbench/api/browser/pluginHostQuickOpen\", [\"require\", \"exports\", 'vs/base/common/winjs.base', 'vs/platform/thread/common/thread', 'vs/workbench/services/quickopen/browser/quickOpenService'], function (require, exports, winjs_base_1, thread_1, quickOpenService_1) {\r\n    var PluginHostQuickOpen = (function () {\r\n        function PluginHostQuickOpen(threadService) {\r\n            this._proxy = threadService.getRemotable(MainThreadQuickOpen);\r\n        }\r\n        PluginHostQuickOpen.prototype.show = function (items, options) {\r\n            var _this = this;\r\n            var itemsPromise;\r\n            if (!Array.isArray(items)) {\r\n                itemsPromise = items;\r\n            }\r\n            else {\r\n                itemsPromise = winjs_base_1.TPromise.as(items);\r\n            }\r\n            var quickPickWidget = this._proxy._show({\r\n                autoFocus: { autoFocusFirstEntry: true },\r\n                placeHolder: options && options.placeHolder,\r\n                matchOnDescription: options && options.matchOnDescription\r\n            });\r\n            return itemsPromise.then(function (items) {\r\n                var pickItems = [];\r\n                for (var handle = 0; handle < items.length; handle++) {\r\n                    var item = items[handle];\r\n                    var label = void 0;\r\n                    var description = void 0;\r\n                    if (typeof item === 'string') {\r\n                        label = item;\r\n                    }\r\n                    else {\r\n                        label = item.label;\r\n                        description = item.description;\r\n                    }\r\n                    pickItems.push({\r\n                        label: label,\r\n                        description: description,\r\n                        handle: handle\r\n                    });\r\n                }\r\n                _this._proxy._setItems(pickItems);\r\n                return quickPickWidget.then(function (handle) {\r\n                    if (typeof handle === 'number') {\r\n                        return items[handle];\r\n                    }\r\n                });\r\n            }, function (err) {\r\n                _this._proxy._setError(err);\r\n                return winjs_base_1.TPromise.wrapError(err);\r\n            });\r\n        };\r\n        PluginHostQuickOpen.prototype.input = function (options) {\r\n            return this._proxy._input(options);\r\n        };\r\n        PluginHostQuickOpen = __decorate([\r\n            __param(0, thread_1.IThreadService)\r\n        ], PluginHostQuickOpen);\r\n        return PluginHostQuickOpen;\r\n    })();\r\n    exports.PluginHostQuickOpen = PluginHostQuickOpen;\r\n    var MainThreadQuickOpen = (function () {\r\n        function MainThreadQuickOpen(quickOpenService) {\r\n            this._token = 0;\r\n            this._quickOpenService = quickOpenService;\r\n        }\r\n        MainThreadQuickOpen.prototype._show = function (options) {\r\n            var _this = this;\r\n            var myToken = ++this._token;\r\n            this._contents = new winjs_base_1.TPromise(function (c, e) {\r\n                _this._doSetItems = function (items) {\r\n                    if (myToken === _this._token) {\r\n                        c(items);\r\n                    }\r\n                };\r\n                _this._doSetError = function (error) {\r\n                    if (myToken === _this._token) {\r\n                        e(error);\r\n                    }\r\n                };\r\n            });\r\n            return this._quickOpenService.pick(this._contents, options).then(function (item) {\r\n                if (item) {\r\n                    return item.handle;\r\n                }\r\n            });\r\n        };\r\n        MainThreadQuickOpen.prototype._setItems = function (items) {\r\n            if (this._doSetItems) {\r\n                this._doSetItems(items);\r\n                return;\r\n            }\r\n        };\r\n        MainThreadQuickOpen.prototype._setError = function (error) {\r\n            if (this._doSetError) {\r\n                this._doSetError(error);\r\n                return;\r\n            }\r\n        };\r\n        MainThreadQuickOpen.prototype._input = function (options) {\r\n            return this._quickOpenService.input(options);\r\n        };\r\n        MainThreadQuickOpen = __decorate([\r\n            thread_1.Remotable.MainContext('MainThreadQuickOpen'),\r\n            __param(0, quickOpenService_1.IQuickOpenService)\r\n        ], MainThreadQuickOpen);\r\n        return MainThreadQuickOpen;\r\n    })();\r\n    exports.MainThreadQuickOpen = MainThreadQuickOpen;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/workbench/services/statusbar/statusbarService\", [\"require\", \"exports\", 'vs/platform/instantiation/common/instantiation'], function (require, exports, instantiation_1) {\r\n    exports.IStatusbarService = instantiation_1.createDecorator('statusbarService');\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") return Reflect.decorate(decorators, target, key, desc);\r\n    switch (arguments.length) {\r\n        case 2: return decorators.reduceRight(function(o, d) { return (d && d(o)) || o; }, target);\r\n        case 3: return decorators.reduceRight(function(o, d) { return (d && d(target, key)), void 0; }, void 0);\r\n        case 4: return decorators.reduceRight(function(o, d) { return (d && d(target, key, o)) || o; }, desc);\r\n    }\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\ndefine(\"vs/workbench/api/browser/pluginHostStatusBar\", [\"require\", \"exports\", 'vs/platform/thread/common/thread', 'vs/workbench/services/statusbar/statusbarService', 'vs/workbench/browser/parts/statusbar/statusbar', '../common/pluginHostTypes'], function (require, exports, thread_1, statusbarService_1, statusbar_1, pluginHostTypes_1) {\r\n    var PluginHostStatusBarEntry = (function () {\r\n        function PluginHostStatusBarEntry(proxy, alignment, priority) {\r\n            if (alignment === void 0) { alignment = pluginHostTypes_1.StatusBarAlignment.Left; }\r\n            this._id = PluginHostStatusBarEntry.ID_GEN++;\r\n            this._proxy = proxy;\r\n            this._alignment = alignment;\r\n            this._priority = priority;\r\n        }\r\n        Object.defineProperty(PluginHostStatusBarEntry.prototype, \"id\", {\r\n            get: function () {\r\n                return this._id;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(PluginHostStatusBarEntry.prototype, \"alignment\", {\r\n            get: function () {\r\n                return this._alignment;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(PluginHostStatusBarEntry.prototype, \"priority\", {\r\n            get: function () {\r\n                return this._priority;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(PluginHostStatusBarEntry.prototype, \"text\", {\r\n            get: function () {\r\n                return this._text;\r\n            },\r\n            set: function (text) {\r\n                this._text = text;\r\n                this.update();\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(PluginHostStatusBarEntry.prototype, \"tooltip\", {\r\n            get: function () {\r\n                return this._tooltip;\r\n            },\r\n            set: function (tooltip) {\r\n                this._tooltip = tooltip;\r\n                this.update();\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(PluginHostStatusBarEntry.prototype, \"color\", {\r\n            get: function () {\r\n                return this._color;\r\n            },\r\n            set: function (color) {\r\n                this._color = color;\r\n                this.update();\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(PluginHostStatusBarEntry.prototype, \"command\", {\r\n            get: function () {\r\n                return this._command;\r\n            },\r\n            set: function (command) {\r\n                this._command = command;\r\n                this.update();\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        PluginHostStatusBarEntry.prototype.show = function () {\r\n            this._visible = true;\r\n            this.update();\r\n        };\r\n        PluginHostStatusBarEntry.prototype.hide = function () {\r\n            this._visible = false;\r\n            this._proxy.dispose(this.id);\r\n        };\r\n        PluginHostStatusBarEntry.prototype.update = function () {\r\n            var _this = this;\r\n            if (this._disposed || !this._visible) {\r\n                return;\r\n            }\r\n            if (this._timeoutHandle) {\r\n                clearTimeout(this._timeoutHandle);\r\n            }\r\n            // Defer the update so that multiple changes to setters dont cause a redraw each\r\n            this._timeoutHandle = setTimeout(function () {\r\n                delete _this._timeoutHandle;\r\n                // Set to status bar\r\n                _this._proxy.setEntry(_this.id, _this.text, _this.tooltip, _this.command, _this.color, _this._alignment === pluginHostTypes_1.StatusBarAlignment.Left ? statusbar_1.StatusbarAlignment.LEFT : statusbar_1.StatusbarAlignment.RIGHT, _this._priority);\r\n            }, 0);\r\n        };\r\n        PluginHostStatusBarEntry.prototype.dispose = function () {\r\n            this.hide();\r\n            this._disposed = true;\r\n        };\r\n        PluginHostStatusBarEntry.ID_GEN = 0;\r\n        return PluginHostStatusBarEntry;\r\n    })();\r\n    exports.PluginHostStatusBarEntry = PluginHostStatusBarEntry;\r\n    var StatusBarMessage = (function () {\r\n        function StatusBarMessage(statusBar) {\r\n            this._messages = [];\r\n            this._item = statusBar.createStatusBarEntry(pluginHostTypes_1.StatusBarAlignment.Left, Number.MIN_VALUE);\r\n        }\r\n        StatusBarMessage.prototype.dispose = function () {\r\n            this._messages.length = 0;\r\n            this._item.dispose();\r\n        };\r\n        StatusBarMessage.prototype.setMessage = function (message) {\r\n            var _this = this;\r\n            var data = { message: message }; // use object to not confuse equal strings\r\n            this._messages.unshift(data);\r\n            this._update();\r\n            return new pluginHostTypes_1.Disposable(function () {\r\n                var idx = _this._messages.indexOf(data);\r\n                if (idx >= 0) {\r\n                    _this._messages.splice(idx, 1);\r\n                    _this._update();\r\n                }\r\n            });\r\n        };\r\n        StatusBarMessage.prototype._update = function () {\r\n            if (this._messages.length > 0) {\r\n                this._item.text = this._messages[0].message;\r\n                this._item.show();\r\n            }\r\n            else {\r\n                this._item.hide();\r\n            }\r\n        };\r\n        return StatusBarMessage;\r\n    })();\r\n    var PluginHostStatusBar = (function () {\r\n        function PluginHostStatusBar(threadService) {\r\n            this._proxy = threadService.getRemotable(MainThreadStatusBar);\r\n            this._statusMessage = new StatusBarMessage(this);\r\n        }\r\n        PluginHostStatusBar.prototype.createStatusBarEntry = function (alignment, priority) {\r\n            return new PluginHostStatusBarEntry(this._proxy, alignment, priority);\r\n        };\r\n        PluginHostStatusBar.prototype.setStatusBarMessage = function (text, timeoutOrThenable) {\r\n            var d = this._statusMessage.setMessage(text);\r\n            var handle;\r\n            if (typeof timeoutOrThenable === 'number') {\r\n                handle = setTimeout(function () { return d.dispose(); }, timeoutOrThenable);\r\n            }\r\n            else if (typeof timeoutOrThenable !== 'undefined') {\r\n                timeoutOrThenable.then(function () { return d.dispose(); }, function () { return d.dispose(); });\r\n            }\r\n            return new pluginHostTypes_1.Disposable(function () {\r\n                d.dispose();\r\n                clearTimeout(handle);\r\n            });\r\n        };\r\n        PluginHostStatusBar = __decorate([\r\n            __param(0, thread_1.IThreadService)\r\n        ], PluginHostStatusBar);\r\n        return PluginHostStatusBar;\r\n    })();\r\n    exports.PluginHostStatusBar = PluginHostStatusBar;\r\n    var MainThreadStatusBar = (function () {\r\n        function MainThreadStatusBar(statusbarService) {\r\n            this.statusbarService = statusbarService;\r\n            this.mapIdToDisposable = Object.create(null);\r\n        }\r\n        MainThreadStatusBar.prototype.setEntry = function (id, text, tooltip, command, color, alignment, priority) {\r\n            // Dispose any old\r\n            this.dispose(id);\r\n            // Add new\r\n            var disposeable = this.statusbarService.addEntry({ text: text, tooltip: tooltip, command: command, color: color }, alignment, priority);\r\n            this.mapIdToDisposable[id] = disposeable;\r\n        };\r\n        MainThreadStatusBar.prototype.dispose = function (id) {\r\n            var disposeable = this.mapIdToDisposable[id];\r\n            if (disposeable) {\r\n                disposeable.dispose();\r\n            }\r\n            delete this.mapIdToDisposable[id];\r\n        };\r\n        MainThreadStatusBar = __decorate([\r\n            thread_1.Remotable.MainContext('MainThreadStatusBar'),\r\n            __param(0, statusbarService_1.IStatusbarService)\r\n        ], MainThreadStatusBar);\r\n        return MainThreadStatusBar;\r\n    })();\r\n    exports.MainThreadStatusBar = MainThreadStatusBar;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/workbench/services/untitled/browser/untitledEditorService\", [\"require\", \"exports\", 'vs/base/common/uri', 'vs/base/common/events', 'vs/base/common/arrays', 'vs/workbench/browser/parts/editor/untitledEditorInput', 'vs/platform/instantiation/common/instantiation'], function (require, exports, uri_1, events_1, arrays, untitledEditorInput_1, instantiation_1) {\r\n    exports.IUntitledEditorService = instantiation_1.createDecorator('untitledEditorService');\r\n    var UntitledEditorService = (function () {\r\n        function UntitledEditorService() {\r\n            this.serviceId = exports.IUntitledEditorService;\r\n        }\r\n        UntitledEditorService.prototype.setInstantiationService = function (service) {\r\n            this.instantiationService = service;\r\n        };\r\n        UntitledEditorService.prototype.get = function (resource) {\r\n            return UntitledEditorService.CACHE[resource.toString()];\r\n        };\r\n        UntitledEditorService.prototype.getAll = function (resources) {\r\n            var _this = this;\r\n            if (resources) {\r\n                return arrays.coalesce(resources.map(function (r) { return _this.get(r); }));\r\n            }\r\n            return Object.keys(UntitledEditorService.CACHE).map(function (key) { return UntitledEditorService.CACHE[key]; });\r\n        };\r\n        UntitledEditorService.prototype.isDirty = function (resource) {\r\n            var input = this.get(resource);\r\n            return input && input.isDirty();\r\n        };\r\n        UntitledEditorService.prototype.getDirty = function () {\r\n            return Object.keys(UntitledEditorService.CACHE)\r\n                .map(function (key) { return UntitledEditorService.CACHE[key]; })\r\n                .filter(function (i) { return i.isDirty(); })\r\n                .map(function (i) { return i.getResource(); });\r\n        };\r\n        UntitledEditorService.prototype.createOrGet = function (resource, modeId) {\r\n            var hasAssociatedFilePath = false;\r\n            if (resource) {\r\n                hasAssociatedFilePath = (resource.scheme === 'file');\r\n                resource = this.resourceToUntitled(resource); // ensure we have the right scheme\r\n                if (hasAssociatedFilePath) {\r\n                    UntitledEditorService.KNOWN_ASSOCIATED_FILE_PATHS[resource.toString()] = true; // remember for future lookups\r\n                }\r\n            }\r\n            // Return existing instance if asked for it\r\n            if (resource && UntitledEditorService.CACHE[resource.toString()]) {\r\n                return UntitledEditorService.CACHE[resource.toString()];\r\n            }\r\n            // Create new otherwise\r\n            return this.doCreate(resource, hasAssociatedFilePath, modeId);\r\n        };\r\n        UntitledEditorService.prototype.doCreate = function (resource, hasAssociatedFilePath, modeId) {\r\n            if (!resource) {\r\n                // Create new taking a resource URI that is not already taken\r\n                var counter = Object.keys(UntitledEditorService.CACHE).length + 1;\r\n                do {\r\n                    resource = uri_1.default.create(untitledEditorInput_1.UntitledEditorInput.SCHEMA, null, 'Untitled-' + counter);\r\n                    counter++;\r\n                } while (Object.keys(UntitledEditorService.CACHE).indexOf(resource.toString()) >= 0);\r\n            }\r\n            var input = this.instantiationService.createInstance(untitledEditorInput_1.UntitledEditorInput, resource, hasAssociatedFilePath, modeId);\r\n            // Remove from cache on dispose\r\n            input.addOneTimeListener(events_1.EventType.DISPOSE, function () {\r\n                delete UntitledEditorService.CACHE[input.getResource().toString()];\r\n                delete UntitledEditorService.KNOWN_ASSOCIATED_FILE_PATHS[input.getResource().toString()];\r\n            });\r\n            // Add to cache\r\n            UntitledEditorService.CACHE[resource.toString()] = input;\r\n            return input;\r\n        };\r\n        UntitledEditorService.prototype.resourceToUntitled = function (resource) {\r\n            if (resource.scheme === untitledEditorInput_1.UntitledEditorInput.SCHEMA) {\r\n                return resource;\r\n            }\r\n            return uri_1.default.create(untitledEditorInput_1.UntitledEditorInput.SCHEMA, null, resource.fsPath);\r\n        };\r\n        UntitledEditorService.prototype.hasAssociatedFilePath = function (resource) {\r\n            return !!UntitledEditorService.KNOWN_ASSOCIATED_FILE_PATHS[resource.toString()];\r\n        };\r\n        UntitledEditorService.CACHE = Object.create(null);\r\n        UntitledEditorService.KNOWN_ASSOCIATED_FILE_PATHS = Object.create(null);\r\n        return UntitledEditorService;\r\n    })();\r\n    exports.UntitledEditorService = UntitledEditorService;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") return Reflect.decorate(decorators, target, key, desc);\r\n    switch (arguments.length) {\r\n        case 2: return decorators.reduceRight(function(o, d) { return (d && d(o)) || o; }, target);\r\n        case 3: return decorators.reduceRight(function(o, d) { return (d && d(target, key)), void 0; }, void 0);\r\n        case 4: return decorators.reduceRight(function(o, d) { return (d && d(target, key, o)) || o; }, desc);\r\n    }\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\ndefine(\"vs/workbench/api/common/pluginHostDocuments\", [\"require\", \"exports\", 'vs/base/common/errors', 'vs/editor/common/services/modelService', 'vs/editor/common/viewModel/prefixSumComputer', 'vs/editor/common/editorCommon', 'vs/platform/thread/common/thread', 'vs/base/common/event', 'vs/base/common/uri', 'vs/base/common/lifecycle', 'vs/workbench/api/common/pluginHostTypes', 'vs/platform/event/common/event', 'vs/platform/editor/common/editor', 'vs/workbench/parts/files/common/files', './pluginHostTypeConverters', 'vs/base/common/winjs.base', 'vs/editor/common/model/textModelWithTokensHelpers', 'vs/platform/files/common/files', 'vs/workbench/services/untitled/browser/untitledEditorService'], function (require, exports, errors_1, modelService_1, prefixSumComputer_1, EditorCommon, thread_1, event_1, uri_1, lifecycle_1, pluginHostTypes_1, event_2, editor_1, files_1, TypeConverters, winjs_base_1, textModelWithTokensHelpers_1, files_2, untitledEditorService_1) {\r\n    var _modeId2WordDefinition = Object.create(null);\r\n    function setWordDefinitionFor(modeId, wordDefinition) {\r\n        _modeId2WordDefinition[modeId] = wordDefinition;\r\n    }\r\n    exports.setWordDefinitionFor = setWordDefinitionFor;\r\n    function getWordDefinitionFor(modeId) {\r\n        return _modeId2WordDefinition[modeId];\r\n    }\r\n    exports.getWordDefinitionFor = getWordDefinitionFor;\r\n    var PluginHostModelService = (function () {\r\n        function PluginHostModelService(threadService) {\r\n            this._proxy = threadService.getRemotable(MainThreadDocuments);\r\n            this._onDidAddDocumentEventEmitter = new event_1.Emitter();\r\n            this.onDidAddDocument = this._onDidAddDocumentEventEmitter.event;\r\n            this._onDidRemoveDocumentEventEmitter = new event_1.Emitter();\r\n            this.onDidRemoveDocument = this._onDidRemoveDocumentEventEmitter.event;\r\n            this._onDidChangeDocumentEventEmitter = new event_1.Emitter();\r\n            this.onDidChangeDocument = this._onDidChangeDocumentEventEmitter.event;\r\n            this._onDidSaveDocumentEventEmitter = new event_1.Emitter();\r\n            this.onDidSaveDocument = this._onDidSaveDocumentEventEmitter.event;\r\n            this._documents = Object.create(null);\r\n        }\r\n        PluginHostModelService.prototype.getDocuments = function () {\r\n            var r = [];\r\n            for (var key in this._documents) {\r\n                r.push(this._documents[key]);\r\n            }\r\n            return r;\r\n        };\r\n        PluginHostModelService.prototype.getDocument = function (resource) {\r\n            if (!resource) {\r\n                return null;\r\n            }\r\n            return this._documents[resource.toString()] || null;\r\n        };\r\n        PluginHostModelService.prototype.openDocument = function (uriOrFileName) {\r\n            var _this = this;\r\n            var uri;\r\n            if (typeof uriOrFileName === 'string') {\r\n                uri = uri_1.default.file(uriOrFileName);\r\n            }\r\n            else if (uriOrFileName instanceof uri_1.default) {\r\n                uri = uriOrFileName;\r\n            }\r\n            else {\r\n                throw new Error('illegal argument - uriOrFileName');\r\n            }\r\n            var cached = this._documents[uri.toString()];\r\n            if (cached) {\r\n                return winjs_base_1.TPromise.as(cached);\r\n            }\r\n            return this._proxy._tryOpenDocument(uri).then(function () {\r\n                return _this._documents[uri.toString()];\r\n            });\r\n        };\r\n        PluginHostModelService.prototype._acceptModelAdd = function (data) {\r\n            var document = new PluginHostDocument(this._proxy, data.url, data.value.lines, data.value.EOL, data.modeId, data.versionId, data.isDirty);\r\n            var key = document.uri.toString();\r\n            if (this._documents[key]) {\r\n                throw new Error('Document `' + key + '` already exists.');\r\n            }\r\n            this._documents[key] = document;\r\n            this._onDidAddDocumentEventEmitter.fire(document);\r\n        };\r\n        PluginHostModelService.prototype._acceptModelModeChanged = function (url, oldModeId, newModeId) {\r\n            var document = this._documents[url.toString()];\r\n            // Treat a mode change as a remove + add\r\n            this._onDidRemoveDocumentEventEmitter.fire(document);\r\n            document._acceptLanguageId(newModeId);\r\n            this._onDidAddDocumentEventEmitter.fire(document);\r\n        };\r\n        PluginHostModelService.prototype._acceptModelSaved = function (url) {\r\n            var document = this._documents[url.toString()];\r\n            document._acceptIsDirty(false);\r\n            this._onDidSaveDocumentEventEmitter.fire(document);\r\n        };\r\n        PluginHostModelService.prototype._acceptModelDirty = function (url) {\r\n            var document = this._documents[url.toString()];\r\n            document._acceptIsDirty(true);\r\n        };\r\n        PluginHostModelService.prototype._acceptModelReverted = function (url) {\r\n            var document = this._documents[url.toString()];\r\n            document._acceptIsDirty(false);\r\n        };\r\n        PluginHostModelService.prototype._acceptModelRemoved = function (url) {\r\n            var key = url.toString();\r\n            if (!this._documents[key]) {\r\n                throw new Error('Document `' + key + '` does not exist.');\r\n            }\r\n            var document = this._documents[key];\r\n            delete this._documents[key];\r\n            this._onDidRemoveDocumentEventEmitter.fire(document);\r\n            document.dispose();\r\n        };\r\n        PluginHostModelService.prototype._acceptModelChanged = function (url, events) {\r\n            var document = this._documents[url.toString()];\r\n            document._acceptEvents(events);\r\n            this._onDidChangeDocumentEventEmitter.fire({\r\n                document: document,\r\n                contentChanges: events.map(function (e) {\r\n                    return {\r\n                        range: TypeConverters.toRange(e.range),\r\n                        rangeLength: e.rangeLength,\r\n                        text: e.text\r\n                    };\r\n                })\r\n            });\r\n        };\r\n        PluginHostModelService = __decorate([\r\n            thread_1.Remotable.PluginHostContext('PluginHostModelService'),\r\n            __param(0, thread_1.IThreadService)\r\n        ], PluginHostModelService);\r\n        return PluginHostModelService;\r\n    })();\r\n    exports.PluginHostModelService = PluginHostModelService;\r\n    var BaseTextDocument = (function () {\r\n        function BaseTextDocument(uri, lines, eol, languageId, versionId, isDirty) {\r\n            this._uri = uri;\r\n            this._lines = lines;\r\n            this._textLines = [];\r\n            this._eol = eol;\r\n            this._languageId = languageId;\r\n            this._versionId = versionId;\r\n            this._isDirty = isDirty;\r\n        }\r\n        BaseTextDocument.prototype.dispose = function () {\r\n            this._lines.length = 0;\r\n            this._textLines.length = 0;\r\n            this._isDirty = false;\r\n        };\r\n        Object.defineProperty(BaseTextDocument.prototype, \"uri\", {\r\n            get: function () {\r\n                return this._uri;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(BaseTextDocument.prototype, \"fileName\", {\r\n            get: function () {\r\n                return this._uri.fsPath;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(BaseTextDocument.prototype, \"isUntitled\", {\r\n            get: function () {\r\n                return this._uri.scheme !== 'file';\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(BaseTextDocument.prototype, \"languageId\", {\r\n            get: function () {\r\n                return this._languageId;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(BaseTextDocument.prototype, \"version\", {\r\n            get: function () {\r\n                return this._versionId;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(BaseTextDocument.prototype, \"isDirty\", {\r\n            get: function () {\r\n                return this._isDirty;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        BaseTextDocument.prototype.save = function () {\r\n            return Promise.reject('Not implemented');\r\n        };\r\n        BaseTextDocument.prototype.getText = function (range) {\r\n            if (range) {\r\n                return this._getTextInRange(range);\r\n            }\r\n            else {\r\n                return this._lines.join(this._eol);\r\n            }\r\n        };\r\n        BaseTextDocument.prototype._getTextInRange = function (_range) {\r\n            var range = this.validateRange(_range);\r\n            if (range.isEmpty) {\r\n                return '';\r\n            }\r\n            if (range.isSingleLine) {\r\n                return this._lines[range.start.line].substring(range.start.character, range.end.character);\r\n            }\r\n            var lineEnding = this._eol, startLineIndex = range.start.line, endLineIndex = range.end.line, resultLines = [];\r\n            resultLines.push(this._lines[startLineIndex].substring(range.start.character));\r\n            for (var i = startLineIndex + 1; i < endLineIndex; i++) {\r\n                resultLines.push(this._lines[i]);\r\n            }\r\n            resultLines.push(this._lines[endLineIndex].substring(0, range.end.character));\r\n            return resultLines.join(lineEnding);\r\n        };\r\n        Object.defineProperty(BaseTextDocument.prototype, \"lineCount\", {\r\n            get: function () {\r\n                return this._lines.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        BaseTextDocument.prototype.lineAt = function (lineOrPosition) {\r\n            var line;\r\n            if (lineOrPosition instanceof pluginHostTypes_1.Position) {\r\n                line = lineOrPosition.line;\r\n            }\r\n            else if (typeof lineOrPosition === 'number') {\r\n                line = lineOrPosition;\r\n            }\r\n            if (line < 0 || line >= this._lines.length) {\r\n                throw new Error('Illegal value ' + line + ' for `line`');\r\n            }\r\n            var result = this._textLines[line];\r\n            if (!result || result.lineNumber !== line || result.text !== this._lines[line]) {\r\n                var text = this._lines[line];\r\n                var firstNonWhitespaceCharacterIndex = /^(\\s*)/.exec(text)[1].length;\r\n                var range = new pluginHostTypes_1.Range(line, 0, line, text.length);\r\n                var rangeIncludingLineBreak = new pluginHostTypes_1.Range(line, 0, line + 1, 0);\r\n                result = Object.freeze({\r\n                    lineNumber: line,\r\n                    range: range,\r\n                    rangeIncludingLineBreak: rangeIncludingLineBreak,\r\n                    text: text,\r\n                    firstNonWhitespaceCharacterIndex: firstNonWhitespaceCharacterIndex,\r\n                    isEmptyOrWhitespace: firstNonWhitespaceCharacterIndex === text.length\r\n                });\r\n                this._textLines[line] = result;\r\n            }\r\n            return result;\r\n        };\r\n        BaseTextDocument.prototype.offsetAt = function (position) {\r\n            position = this.validatePosition(position);\r\n            this._ensureLineStarts();\r\n            return this._lineStarts.getAccumulatedValue(position.line - 1) + position.character;\r\n        };\r\n        BaseTextDocument.prototype.positionAt = function (offset) {\r\n            offset = Math.floor(offset);\r\n            offset = Math.max(0, offset);\r\n            this._ensureLineStarts();\r\n            var out = { index: 0, remainder: 0 };\r\n            this._lineStarts.getIndexOf(offset, out);\r\n            var lineLength = this._lines[out.index].length;\r\n            // Ensure we return a valid position\r\n            return new pluginHostTypes_1.Position(out.index, Math.min(out.remainder, lineLength));\r\n        };\r\n        BaseTextDocument.prototype._ensureLineStarts = function () {\r\n            if (!this._lineStarts) {\r\n                var lineStartValues = [];\r\n                var eolLength = this._eol.length;\r\n                for (var i = 0, len = this._lines.length; i < len; i++) {\r\n                    lineStartValues.push(this._lines[i].length + eolLength);\r\n                }\r\n                this._lineStarts = new prefixSumComputer_1.PrefixSumComputer(lineStartValues);\r\n            }\r\n        };\r\n        // ---- range math\r\n        BaseTextDocument.prototype.validateRange = function (range) {\r\n            if (!(range instanceof pluginHostTypes_1.Range)) {\r\n                throw new Error('Invalid argument');\r\n            }\r\n            var start = this.validatePosition(range.start);\r\n            var end = this.validatePosition(range.end);\r\n            if (start === range.start && end === range.end) {\r\n                return range;\r\n            }\r\n            return new pluginHostTypes_1.Range(start, end);\r\n        };\r\n        BaseTextDocument.prototype.validatePosition = function (position) {\r\n            if (!(position instanceof pluginHostTypes_1.Position)) {\r\n                throw new Error('Invalid argument');\r\n            }\r\n            var line = position.line, character = position.character;\r\n            var hasChanged = false;\r\n            if (line < 0) {\r\n                line = 0;\r\n                hasChanged = true;\r\n            }\r\n            if (line >= this._lines.length) {\r\n                line = this._lines.length - 1;\r\n                hasChanged = true;\r\n            }\r\n            if (character < 0) {\r\n                character = 0;\r\n                hasChanged = true;\r\n            }\r\n            var maxCharacter = this._lines[line].length;\r\n            if (character > maxCharacter) {\r\n                character = maxCharacter;\r\n                hasChanged = true;\r\n            }\r\n            if (!hasChanged) {\r\n                return position;\r\n            }\r\n            return new pluginHostTypes_1.Position(line, character);\r\n        };\r\n        BaseTextDocument.prototype.getWordRangeAtPosition = function (_position) {\r\n            var position = this.validatePosition(_position);\r\n            var wordAtText = textModelWithTokensHelpers_1.WordHelper._getWordAtText(position.character + 1, textModelWithTokensHelpers_1.WordHelper.ensureValidWordDefinition(getWordDefinitionFor(this._languageId)), this._lines[position.line], 0);\r\n            if (wordAtText) {\r\n                return new pluginHostTypes_1.Range(position.line, wordAtText.startColumn - 1, position.line, wordAtText.endColumn - 1);\r\n            }\r\n        };\r\n        return BaseTextDocument;\r\n    })();\r\n    exports.BaseTextDocument = BaseTextDocument;\r\n    var PluginHostDocument = (function (_super) {\r\n        __extends(PluginHostDocument, _super);\r\n        function PluginHostDocument(proxy, uri, lines, eol, languageId, versionId, isDirty) {\r\n            _super.call(this, uri, lines, eol, languageId, versionId, isDirty);\r\n            this._proxy = proxy;\r\n        }\r\n        PluginHostDocument.prototype.save = function () {\r\n            return this._proxy._trySaveDocument(this._uri);\r\n        };\r\n        PluginHostDocument.prototype._acceptLanguageId = function (newLanguageId) {\r\n            this._languageId = newLanguageId;\r\n        };\r\n        PluginHostDocument.prototype._acceptIsDirty = function (isDirty) {\r\n            this._isDirty = isDirty;\r\n        };\r\n        PluginHostDocument.prototype._acceptEvents = function (events) {\r\n            // Update my lines\r\n            var lastVersionId = -1;\r\n            for (var i = 0, len = events.length; i < len; i++) {\r\n                var e = events[i];\r\n                this._acceptDeleteRange(e.range);\r\n                this._acceptInsertText({\r\n                    lineNumber: e.range.startLineNumber,\r\n                    column: e.range.startColumn\r\n                }, e.text);\r\n                lastVersionId = Math.max(lastVersionId, e.versionId);\r\n            }\r\n            if (lastVersionId !== -1) {\r\n                this._versionId = lastVersionId;\r\n            }\r\n        };\r\n        /**\r\n         * All changes to a line's text go through this method\r\n         */\r\n        PluginHostDocument.prototype._setLineText = function (lineIndex, newValue) {\r\n            this._lines[lineIndex] = newValue;\r\n            if (this._lineStarts) {\r\n                // update prefix sum\r\n                this._lineStarts.changeValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\r\n            }\r\n        };\r\n        PluginHostDocument.prototype._acceptDeleteRange = function (range) {\r\n            if (range.startLineNumber === range.endLineNumber) {\r\n                if (range.startColumn === range.endColumn) {\r\n                    // Nothing to delete\r\n                    return;\r\n                }\r\n                // Delete text on the affected line\r\n                this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\r\n                    + this._lines[range.startLineNumber - 1].substring(range.endColumn - 1));\r\n                return;\r\n            }\r\n            // Take remaining text on last line and append it to remaining text on first line\r\n            this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\r\n                + this._lines[range.endLineNumber - 1].substring(range.endColumn - 1));\r\n            // Delete middle lines\r\n            this._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\r\n            if (this._lineStarts) {\r\n                // update prefix sum\r\n                this._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\r\n            }\r\n        };\r\n        PluginHostDocument.prototype._acceptInsertText = function (position, insertText) {\r\n            if (insertText.length === 0) {\r\n                // Nothing to insert\r\n                return;\r\n            }\r\n            var insertLines = insertText.split(/\\r\\n|\\r|\\n/);\r\n            if (insertLines.length === 1) {\r\n                // Inserting text on one line\r\n                this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\r\n                    + insertLines[0]\r\n                    + this._lines[position.lineNumber - 1].substring(position.column - 1));\r\n                return;\r\n            }\r\n            // Append overflowing text from first line to the end of text to insert\r\n            insertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\r\n            // Delete overflowing text from first line and insert text on first line\r\n            this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\r\n                + insertLines[0]);\r\n            // Insert new lines & store lengths\r\n            var newLengths = new Array(insertLines.length - 1);\r\n            for (var i = 1; i < insertLines.length; i++) {\r\n                this._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\r\n                newLengths[i - 1] = insertLines[i].length + this._eol.length;\r\n            }\r\n            if (this._lineStarts) {\r\n                // update prefix sum\r\n                this._lineStarts.insertValues(position.lineNumber, newLengths);\r\n            }\r\n        };\r\n        return PluginHostDocument;\r\n    })(BaseTextDocument);\r\n    exports.PluginHostDocument = PluginHostDocument;\r\n    var MainThreadDocuments = (function () {\r\n        function MainThreadDocuments(threadService, modelService, eventService, textFileService, editorService, fileService, untitledEditorService) {\r\n            var _this = this;\r\n            this._textFileService = textFileService;\r\n            this._editorService = editorService;\r\n            this._fileService = fileService;\r\n            this._untitledEditorService = untitledEditorService;\r\n            this._proxy = threadService.getRemotable(PluginHostModelService);\r\n            this._modelIsSynced = {};\r\n            this._toDispose = [];\r\n            modelService.onModelAdded.add(this._onModelAdded, this, this._toDispose);\r\n            modelService.onModelRemoved.add(this._onModelRemoved, this, this._toDispose);\r\n            modelService.onModelModeChanged.add(this._onModelModeChanged, this, this._toDispose);\r\n            this._toDispose.push(eventService.addListener2(files_1.EventType.FILE_SAVED, function (e) {\r\n                _this._proxy._acceptModelSaved(e.getAfter().resource);\r\n            }));\r\n            this._toDispose.push(eventService.addListener2(files_1.EventType.FILE_REVERTED, function (e) {\r\n                _this._proxy._acceptModelReverted(e.getAfter().resource);\r\n            }));\r\n            this._toDispose.push(eventService.addListener2(files_1.EventType.FILE_DIRTY, function (e) {\r\n                _this._proxy._acceptModelDirty(e.getAfter().resource);\r\n            }));\r\n            this._modelToDisposeMap = Object.create(null);\r\n        }\r\n        MainThreadDocuments.prototype.dispose = function () {\r\n            var _this = this;\r\n            Object.keys(this._modelToDisposeMap).forEach(function (modelUrl) {\r\n                _this._modelToDisposeMap[modelUrl].dispose();\r\n            });\r\n            this._modelToDisposeMap = Object.create(null);\r\n            this._toDispose = lifecycle_1.disposeAll(this._toDispose);\r\n        };\r\n        MainThreadDocuments.prototype._onModelAdded = function (model) {\r\n            var _this = this;\r\n            // Same filter as in mainThreadEditors\r\n            if (model.isTooLargeForHavingARichMode()) {\r\n                // don't synchronize too large models\r\n                return null;\r\n            }\r\n            var modelUrl = model.getAssociatedResource();\r\n            this._modelIsSynced[modelUrl.toString()] = true;\r\n            this._modelToDisposeMap[modelUrl.toString()] = model.addBulkListener2(function (events) { return _this._onModelEvents(modelUrl, events); });\r\n            this._proxy._acceptModelAdd({\r\n                url: model.getAssociatedResource(),\r\n                versionId: model.getVersionId(),\r\n                value: model.toRawText(),\r\n                modeId: model.getMode().getId(),\r\n                isDirty: this._textFileService.isDirty(modelUrl)\r\n            });\r\n        };\r\n        MainThreadDocuments.prototype._onModelModeChanged = function (model, oldModeId) {\r\n            var modelUrl = model.getAssociatedResource();\r\n            if (!this._modelIsSynced[modelUrl.toString()]) {\r\n                return;\r\n            }\r\n            this._proxy._acceptModelModeChanged(model.getAssociatedResource(), oldModeId, model.getMode().getId());\r\n        };\r\n        MainThreadDocuments.prototype._onModelRemoved = function (model) {\r\n            var modelUrl = model.getAssociatedResource();\r\n            if (!this._modelIsSynced[modelUrl.toString()]) {\r\n                return;\r\n            }\r\n            delete this._modelIsSynced[modelUrl.toString()];\r\n            this._modelToDisposeMap[modelUrl.toString()].dispose();\r\n            delete this._modelToDisposeMap[modelUrl.toString()];\r\n            this._proxy._acceptModelRemoved(modelUrl);\r\n        };\r\n        MainThreadDocuments.prototype._onModelEvents = function (modelUrl, events) {\r\n            var changedEvents = [];\r\n            for (var i = 0, len = events.length; i < len; i++) {\r\n                var e = events[i];\r\n                switch (e.getType()) {\r\n                    case EditorCommon.EventType.ModelContentChanged2:\r\n                        changedEvents.push(e.getData());\r\n                        break;\r\n                }\r\n            }\r\n            if (changedEvents.length > 0) {\r\n                this._proxy._acceptModelChanged(modelUrl, changedEvents);\r\n            }\r\n        };\r\n        // --- from plugin host process\r\n        MainThreadDocuments.prototype._trySaveDocument = function (uri) {\r\n            return this._textFileService.save(uri);\r\n        };\r\n        MainThreadDocuments.prototype._tryOpenDocument = function (uri) {\r\n            if (!uri.scheme || !uri.fsPath) {\r\n                return winjs_base_1.TPromise.wrapError('Uri must have scheme and path. One or both are missing in: ' + uri.toString());\r\n            }\r\n            var promise;\r\n            switch (uri.scheme) {\r\n                case 'file':\r\n                    promise = this._handleFileScheme(uri);\r\n                    break;\r\n                case 'untitled':\r\n                    promise = this._handleUnititledScheme(uri);\r\n                    break;\r\n                default:\r\n                    promise = winjs_base_1.TPromise.wrapError('unsupported URI-scheme: ' + uri.scheme);\r\n                    break;\r\n            }\r\n            return promise.then(function (success) {\r\n                if (!success) {\r\n                    return winjs_base_1.TPromise.wrapError('cannot open ' + uri.toString());\r\n                }\r\n            }, function (err) {\r\n                return winjs_base_1.TPromise.wrapError('cannot open ' + uri.toString() + '. Detail: ' + errors_1.toErrorMessage(err));\r\n            });\r\n        };\r\n        MainThreadDocuments.prototype._handleFileScheme = function (uri) {\r\n            return this._editorService.resolveEditorModel({ resource: uri }).then(function (model) {\r\n                return !!model;\r\n            });\r\n        };\r\n        MainThreadDocuments.prototype._handleUnititledScheme = function (uri) {\r\n            var _this = this;\r\n            var asFileUri = uri_1.default.file(uri.fsPath);\r\n            return this._fileService.resolveFile(asFileUri).then(function (stats) {\r\n                // don't create a new file ontop of an existing file\r\n                return winjs_base_1.TPromise.wrapError('file already exists on disk');\r\n            }, function (err) {\r\n                var input = _this._untitledEditorService.createOrGet(asFileUri); // using file-uri makes it show in 'Working Files' section\r\n                return input.resolve(true).then(function (model) {\r\n                    if (input.getResource().toString() !== uri.toString()) {\r\n                        throw new Error(\"expected URI \" + uri.toString() + \" BUT GOT \" + input.getResource().toString());\r\n                    }\r\n                    return _this._proxy._acceptModelDirty(uri); // mark as dirty\r\n                }).then(function () {\r\n                    return true;\r\n                });\r\n            });\r\n        };\r\n        MainThreadDocuments = __decorate([\r\n            thread_1.Remotable.MainContext('MainThreadDocuments'),\r\n            __param(0, thread_1.IThreadService),\r\n            __param(1, modelService_1.IModelService),\r\n            __param(2, event_2.IEventService),\r\n            __param(3, files_1.ITextFileService),\r\n            __param(4, editor_1.IEditorService),\r\n            __param(5, files_2.IFileService),\r\n            __param(6, untitledEditorService_1.IUntitledEditorService)\r\n        ], MainThreadDocuments);\r\n        return MainThreadDocuments;\r\n    })();\r\n    exports.MainThreadDocuments = MainThreadDocuments;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") return Reflect.decorate(decorators, target, key, desc);\r\n    switch (arguments.length) {\r\n        case 2: return decorators.reduceRight(function(o, d) { return (d && d(o)) || o; }, target);\r\n        case 3: return decorators.reduceRight(function(o, d) { return (d && d(target, key)), void 0; }, void 0);\r\n        case 4: return decorators.reduceRight(function(o, d) { return (d && d(target, key, o)) || o; }, desc);\r\n    }\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\ndefine(\"vs/workbench/api/common/pluginHostEditors\", [\"require\", \"exports\", 'vs/base/common/event', 'vs/base/common/lifecycle', 'vs/base/common/winjs.base', 'vs/platform/thread/common/thread', 'vs/workbench/api/common/pluginHostDocuments', './pluginHostTypes', 'vs/editor/common/editorCommon', 'vs/editor/common/services/codeEditorService', 'vs/workbench/services/editor/common/editorService', 'vs/editor/common/services/modelService', 'vs/workbench/api/common/mainThreadEditors', './pluginHostTypeConverters', 'vs/workbench/browser/events', 'vs/platform/event/common/event', 'vs/base/common/arrays'], function (require, exports, event_1, lifecycle_1, winjs_base_1, thread_1, pluginHostDocuments_1, pluginHostTypes_1, editorCommon_1, codeEditorService_1, editorService_1, modelService_1, mainThreadEditors_1, TypeConverters, events_1, event_2, arrays_1) {\r\n    var PluginHostEditors = (function () {\r\n        function PluginHostEditors(threadService) {\r\n            this._onDidChangeTextEditorSelection = new event_1.Emitter();\r\n            this.onDidChangeTextEditorSelection = this._onDidChangeTextEditorSelection.event;\r\n            this._onDidChangeTextEditorOptions = new event_1.Emitter();\r\n            this.onDidChangeTextEditorOptions = this._onDidChangeTextEditorOptions.event;\r\n            this._modelService = threadService.getRemotable(pluginHostDocuments_1.PluginHostModelService);\r\n            this._proxy = threadService.getRemotable(MainThreadEditors);\r\n            this._onDidChangeActiveTextEditor = new event_1.Emitter();\r\n            this._editors = Object.create(null);\r\n            this._visibleEditorIds = [];\r\n        }\r\n        PluginHostEditors.prototype.getActiveTextEditor = function () {\r\n            return this._activeEditorId && this._editors[this._activeEditorId];\r\n        };\r\n        PluginHostEditors.prototype.getVisibleTextEditors = function () {\r\n            var _this = this;\r\n            return this._visibleEditorIds.map(function (id) { return _this._editors[id]; });\r\n        };\r\n        Object.defineProperty(PluginHostEditors.prototype, \"onDidChangeActiveTextEditor\", {\r\n            get: function () {\r\n                return this._onDidChangeActiveTextEditor && this._onDidChangeActiveTextEditor.event;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        PluginHostEditors.prototype.showTextDocument = function (document, column) {\r\n            var _this = this;\r\n            return this._proxy._tryShowTextDocument(document.uri, TypeConverters.fromViewColumn(column)).then(function (id) {\r\n                var editor = _this._editors[id];\r\n                if (editor) {\r\n                    return editor;\r\n                }\r\n                else {\r\n                    throw new Error('Failed to create editor.');\r\n                }\r\n            });\r\n        };\r\n        PluginHostEditors.prototype.createTextEditorDecorationType = function (options) {\r\n            return new TextEditorDecorationType(this._proxy, options);\r\n        };\r\n        // --- called from main thread\r\n        PluginHostEditors.prototype._acceptTextEditorAdd = function (data) {\r\n            var document = this._modelService.getDocument(data.document);\r\n            var newEditor = new PluginHostTextEditor(this._proxy, data.id, document, data.selections.map(TypeConverters.toSelection), data.options);\r\n            this._editors[data.id] = newEditor;\r\n        };\r\n        PluginHostEditors.prototype._acceptOptionsChanged = function (id, opts) {\r\n            var editor = this._editors[id];\r\n            editor._acceptOptions(opts);\r\n            this._onDidChangeTextEditorOptions.fire({\r\n                textEditor: editor,\r\n                options: opts\r\n            });\r\n        };\r\n        PluginHostEditors.prototype._acceptSelectionsChanged = function (id, _selections) {\r\n            var selections = _selections.map(TypeConverters.toSelection);\r\n            var editor = this._editors[id];\r\n            editor._acceptSelections(selections);\r\n            this._onDidChangeTextEditorSelection.fire({\r\n                textEditor: editor,\r\n                selections: selections\r\n            });\r\n        };\r\n        PluginHostEditors.prototype._acceptActiveEditorAndVisibleEditors = function (id, visibleIds) {\r\n            this._visibleEditorIds = visibleIds;\r\n            if (this._activeEditorId === id) {\r\n                // nothing to do\r\n                return;\r\n            }\r\n            this._activeEditorId = id;\r\n            this._onDidChangeActiveTextEditor.fire(this.getActiveTextEditor());\r\n        };\r\n        PluginHostEditors.prototype._acceptTextEditorRemove = function (id) {\r\n            // make sure the removed editor is not visible\r\n            var newVisibleEditors = this._visibleEditorIds.filter(function (visibleEditorId) { return visibleEditorId !== id; });\r\n            if (this._activeEditorId === id) {\r\n                // removing the current active editor\r\n                this._acceptActiveEditorAndVisibleEditors(undefined, newVisibleEditors);\r\n            }\r\n            else {\r\n                this._acceptActiveEditorAndVisibleEditors(this._activeEditorId, newVisibleEditors);\r\n            }\r\n            var editor = this._editors[id];\r\n            editor.dispose();\r\n            delete this._editors[id];\r\n        };\r\n        PluginHostEditors = __decorate([\r\n            thread_1.Remotable.PluginHostContext('PluginHostEditors'),\r\n            __param(0, thread_1.IThreadService)\r\n        ], PluginHostEditors);\r\n        return PluginHostEditors;\r\n    })();\r\n    exports.PluginHostEditors = PluginHostEditors;\r\n    var TextEditorDecorationType = (function () {\r\n        function TextEditorDecorationType(proxy, options) {\r\n            this.key = 'TextEditorDecorationType' + (++TextEditorDecorationType.LAST_ID);\r\n            this._proxy = proxy;\r\n            this._proxy._registerTextEditorDecorationType(this.key, options);\r\n        }\r\n        TextEditorDecorationType.prototype.dispose = function () {\r\n            this._proxy._removeTextEditorDecorationType(this.key);\r\n        };\r\n        TextEditorDecorationType.LAST_ID = 0;\r\n        return TextEditorDecorationType;\r\n    })();\r\n    var TextEditorEdit = (function () {\r\n        function TextEditorEdit(document) {\r\n            this._documentVersionId = document.version;\r\n            this._collectedEdits = [];\r\n        }\r\n        TextEditorEdit.prototype.finalize = function () {\r\n            return {\r\n                documentVersionId: this._documentVersionId,\r\n                edits: this._collectedEdits\r\n            };\r\n        };\r\n        TextEditorEdit.prototype.replace = function (location, value) {\r\n            var range = null;\r\n            if (location instanceof pluginHostTypes_1.Position) {\r\n                range = new pluginHostTypes_1.Range(location, location);\r\n            }\r\n            else if (location instanceof pluginHostTypes_1.Range) {\r\n                range = location;\r\n            }\r\n            else if (location instanceof pluginHostTypes_1.Selection) {\r\n                range = new pluginHostTypes_1.Range(location.start, location.end);\r\n            }\r\n            else {\r\n                throw new Error('Unrecognized location');\r\n            }\r\n            this._collectedEdits.push({\r\n                range: range,\r\n                text: value,\r\n                forceMoveMarkers: false\r\n            });\r\n        };\r\n        TextEditorEdit.prototype.insert = function (location, value) {\r\n            this._collectedEdits.push({\r\n                range: new pluginHostTypes_1.Range(location, location),\r\n                text: value,\r\n                forceMoveMarkers: true\r\n            });\r\n        };\r\n        TextEditorEdit.prototype.delete = function (location) {\r\n            var range = null;\r\n            if (location instanceof pluginHostTypes_1.Range) {\r\n                range = location;\r\n            }\r\n            else if (location instanceof pluginHostTypes_1.Selection) {\r\n                range = new pluginHostTypes_1.Range(location.start, location.end);\r\n            }\r\n            else {\r\n                throw new Error('Unrecognized location');\r\n            }\r\n            this._collectedEdits.push({\r\n                range: range,\r\n                text: null,\r\n                forceMoveMarkers: true\r\n            });\r\n        };\r\n        return TextEditorEdit;\r\n    })();\r\n    exports.TextEditorEdit = TextEditorEdit;\r\n    function readonly(name, alt) {\r\n        var message = \"The property '\" + name + \"' is readonly.\";\r\n        if (alt) {\r\n            message += \" Use '\" + alt + \"' instead.\";\r\n        }\r\n        return new Error(message);\r\n    }\r\n    function illegalArg(name) {\r\n        return new Error(\"illgeal argument '\" + name + \"'\");\r\n    }\r\n    function deprecated(name, message) {\r\n        if (message === void 0) { message = 'Refer to the documentation for further details.'; }\r\n        return function (target, key, descriptor) {\r\n            var originalMethod = descriptor.value;\r\n            descriptor.value = function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i - 0] = arguments[_i];\r\n                }\r\n                console.warn(\"[Deprecation Warning] method '\" + name + \"' is deprecated and should no longer be used. \" + message);\r\n                return originalMethod.apply(this, args);\r\n            };\r\n            return descriptor;\r\n        };\r\n    }\r\n    var PluginHostTextEditor = (function () {\r\n        function PluginHostTextEditor(proxy, id, document, selections, options) {\r\n            this._proxy = proxy;\r\n            this._id = id;\r\n            this._document = document;\r\n            this._selections = selections;\r\n            this._options = options;\r\n        }\r\n        PluginHostTextEditor.prototype.dispose = function () {\r\n            this._document = null;\r\n        };\r\n        PluginHostTextEditor.prototype.show = function (column) {\r\n            this._proxy._tryShowEditor(this._id, TypeConverters.fromViewColumn(column));\r\n        };\r\n        PluginHostTextEditor.prototype.hide = function () {\r\n            this._proxy._tryHideEditor(this._id);\r\n        };\r\n        Object.defineProperty(PluginHostTextEditor.prototype, \"document\", {\r\n            // ---- the document\r\n            get: function () {\r\n                return this._document;\r\n            },\r\n            set: function (value) {\r\n                throw readonly('document');\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(PluginHostTextEditor.prototype, \"options\", {\r\n            // ---- options\r\n            get: function () {\r\n                return this._options;\r\n            },\r\n            set: function (value) {\r\n                var _this = this;\r\n                this._options = value;\r\n                this._runOnProxy(function () {\r\n                    return _this._proxy._trySetOptions(_this._id, _this._options);\r\n                }, true);\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        PluginHostTextEditor.prototype._acceptOptions = function (options) {\r\n            this._options = options;\r\n        };\r\n        Object.defineProperty(PluginHostTextEditor.prototype, \"selection\", {\r\n            // ---- selections\r\n            get: function () {\r\n                return this._selections && this._selections[0];\r\n            },\r\n            set: function (value) {\r\n                if (!(value instanceof pluginHostTypes_1.Selection)) {\r\n                    throw illegalArg('selection');\r\n                }\r\n                this._selections = [value];\r\n                this._trySetSelection(true);\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(PluginHostTextEditor.prototype, \"selections\", {\r\n            get: function () {\r\n                return this._selections;\r\n            },\r\n            set: function (value) {\r\n                if (!Array.isArray(value) || value.some(function (a) { return !(a instanceof pluginHostTypes_1.Selection); })) {\r\n                    throw illegalArg('selections');\r\n                }\r\n                this._selections = value;\r\n                this._trySetSelection(true);\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        PluginHostTextEditor.prototype.setDecorations = function (decorationType, ranges) {\r\n            var _this = this;\r\n            this._runOnProxy(function () { return _this._proxy._trySetDecorations(_this._id, decorationType.key, TypeConverters.fromRangeOrRangeWithMessage(ranges)); }, true);\r\n        };\r\n        PluginHostTextEditor.prototype.revealRange = function (range, revealType) {\r\n            var _this = this;\r\n            this._runOnProxy(function () { return _this._proxy._tryRevealRange(_this._id, TypeConverters.fromRange(range), revealType || mainThreadEditors_1.TextEditorRevealType.Default); }, true);\r\n        };\r\n        PluginHostTextEditor.prototype._trySetSelection = function (silent) {\r\n            var _this = this;\r\n            var selection = this._selections.map(TypeConverters.fromSelection);\r\n            return this._runOnProxy(function () { return _this._proxy._trySetSelections(_this._id, selection); }, silent);\r\n        };\r\n        PluginHostTextEditor.prototype._acceptSelections = function (selections) {\r\n            this._selections = selections;\r\n        };\r\n        // ---- editing\r\n        PluginHostTextEditor.prototype.edit = function (callback) {\r\n            var edit = new TextEditorEdit(this._document);\r\n            callback(edit);\r\n            return this._applyEdit(edit);\r\n        };\r\n        PluginHostTextEditor.prototype._applyEdit = function (edit) {\r\n            var editData = edit.finalize();\r\n            // prepare data for serialization\r\n            var edits = editData.edits.map(function (edit) {\r\n                return {\r\n                    range: TypeConverters.fromRange(edit.range),\r\n                    text: edit.text,\r\n                    forceMoveMarkers: edit.forceMoveMarkers\r\n                };\r\n            });\r\n            return this._proxy._tryApplyEdits(this._id, editData.documentVersionId, edits);\r\n        };\r\n        // ---- util\r\n        PluginHostTextEditor.prototype._runOnProxy = function (callback, silent) {\r\n            var _this = this;\r\n            return callback().then(function () { return _this; }, function (err) {\r\n                if (!silent) {\r\n                    return winjs_base_1.TPromise.wrapError(silent);\r\n                }\r\n                console.warn(err);\r\n            });\r\n        };\r\n        Object.defineProperty(PluginHostTextEditor.prototype, \"show\",\r\n            __decorate([\r\n                deprecated('TextEditor.show')\r\n            ], PluginHostTextEditor.prototype, \"show\", Object.getOwnPropertyDescriptor(PluginHostTextEditor.prototype, \"show\")));\r\n        Object.defineProperty(PluginHostTextEditor.prototype, \"hide\",\r\n            __decorate([\r\n                deprecated('TextEditor.hide')\r\n            ], PluginHostTextEditor.prototype, \"hide\", Object.getOwnPropertyDescriptor(PluginHostTextEditor.prototype, \"hide\")));\r\n        return PluginHostTextEditor;\r\n    })();\r\n    var MainThreadEditors = (function () {\r\n        function MainThreadEditors(threadService, workbenchEditorService, editorService, eventService, modelService) {\r\n            var _this = this;\r\n            this._proxy = threadService.getRemotable(PluginHostEditors);\r\n            this._workbenchEditorService = workbenchEditorService;\r\n            this._toDispose = [];\r\n            this._textEditorsListenersMap = Object.create(null);\r\n            this._textEditorsMap = Object.create(null);\r\n            this._activeTextEditor = null;\r\n            this._visibleEditors = [];\r\n            this._editorTracker = new mainThreadEditors_1.MainThreadEditorsTracker(editorService, modelService);\r\n            this._toDispose.push(this._editorTracker);\r\n            this._toDispose.push(this._editorTracker.onTextEditorAdd(function (textEditor) { return _this._onTextEditorAdd(textEditor); }));\r\n            this._toDispose.push(this._editorTracker.onTextEditorRemove(function (textEditor) { return _this._onTextEditorRemove(textEditor); }));\r\n            this._toDispose.push(this._editorTracker.onDidUpdateTextEditors(function () { return _this._updateActiveAndVisibleTextEditors(); }));\r\n            this._toDispose.push(this._editorTracker.onChangedFocusedTextEditor(function (focusedTextEditorId) { return _this._updateActiveAndVisibleTextEditors(); }));\r\n            this._toDispose.push(eventService.addListener2(events_1.EventType.EDITOR_INPUT_CHANGED, function () { return _this._updateActiveAndVisibleTextEditors(); }));\r\n        }\r\n        MainThreadEditors.prototype.dispose = function () {\r\n            var _this = this;\r\n            Object.keys(this._textEditorsListenersMap).forEach(function (editorId) {\r\n                lifecycle_1.disposeAll(_this._textEditorsListenersMap[editorId]);\r\n            });\r\n            this._textEditorsListenersMap = Object.create(null);\r\n            this._toDispose = lifecycle_1.disposeAll(this._toDispose);\r\n        };\r\n        MainThreadEditors.prototype._onTextEditorAdd = function (textEditor) {\r\n            var _this = this;\r\n            var id = textEditor.getId();\r\n            var toDispose = [];\r\n            toDispose.push(textEditor.onConfigurationChanged(function (opts) {\r\n                _this._proxy._acceptOptionsChanged(id, opts);\r\n            }));\r\n            toDispose.push(textEditor.onSelectionChanged(function (selection) {\r\n                _this._proxy._acceptSelectionsChanged(id, selection);\r\n            }));\r\n            this._proxy._acceptTextEditorAdd({\r\n                id: id,\r\n                document: textEditor.getModel().getAssociatedResource(),\r\n                options: textEditor.getConfiguration(),\r\n                selections: textEditor.getSelections()\r\n            });\r\n            this._textEditorsListenersMap[id] = toDispose;\r\n            this._textEditorsMap[id] = textEditor;\r\n        };\r\n        MainThreadEditors.prototype._onTextEditorRemove = function (textEditor) {\r\n            var id = textEditor.getId();\r\n            lifecycle_1.disposeAll(this._textEditorsListenersMap[id]);\r\n            delete this._textEditorsListenersMap[id];\r\n            delete this._textEditorsMap[id];\r\n            this._proxy._acceptTextEditorRemove(id);\r\n        };\r\n        MainThreadEditors.prototype._updateActiveAndVisibleTextEditors = function () {\r\n            var visibleEditors = this._editorTracker.getVisibleTextEditorIds();\r\n            var activeEditor = this._findActiveTextEditorId();\r\n            if (activeEditor === this._activeTextEditor && arrays_1.equals(this._visibleEditors, visibleEditors, function (a, b) { return a === b; })) {\r\n                // no change\r\n                return;\r\n            }\r\n            this._activeTextEditor = activeEditor;\r\n            this._visibleEditors = visibleEditors;\r\n            this._proxy._acceptActiveEditorAndVisibleEditors(this._activeTextEditor, this._visibleEditors);\r\n        };\r\n        MainThreadEditors.prototype._findActiveTextEditorId = function () {\r\n            var focusedTextEditorId = this._editorTracker.getFocusedTextEditorId();\r\n            if (focusedTextEditorId) {\r\n                return focusedTextEditorId;\r\n            }\r\n            var activeEditor = this._workbenchEditorService.getActiveEditor();\r\n            if (!activeEditor) {\r\n                return null;\r\n            }\r\n            var editor = activeEditor.getControl();\r\n            // Substitute for (editor instanceof ICodeEditor)\r\n            if (!editor || typeof editor.getEditorType !== 'function') {\r\n                // Not a text editor...\r\n                return null;\r\n            }\r\n            if (editor.getEditorType() === editorCommon_1.EditorType.ICodeEditor) {\r\n                return this._editorTracker.findTextEditorIdFor(editor);\r\n            }\r\n            // Must be a diff editor => use the modified side\r\n            return this._editorTracker.findTextEditorIdFor(editor.getModifiedEditor());\r\n        };\r\n        // --- from plugin host process\r\n        MainThreadEditors.prototype._tryShowTextDocument = function (resource, position) {\r\n            var _this = this;\r\n            // the input we want to open\r\n            var input = {\r\n                resource: resource,\r\n                options: { preserveFocus: false }\r\n            };\r\n            return this._workbenchEditorService.openEditor(input, position).then(function (editor) {\r\n                return new winjs_base_1.TPromise(function (c) {\r\n                    // not very nice but the way it is: changes to the editor state aren't\r\n                    // send to the ext host as they happen but stuff is delayed a little. in\r\n                    // order to provide the real editor on #openTextEditor we need to sync on\r\n                    // that update\r\n                    var subscription;\r\n                    var handle;\r\n                    function contd() {\r\n                        subscription.dispose();\r\n                        clearTimeout(handle);\r\n                        c(undefined);\r\n                    }\r\n                    subscription = _this._editorTracker.onDidUpdateTextEditors(function () {\r\n                        contd();\r\n                    });\r\n                    handle = setTimeout(function () {\r\n                        contd();\r\n                    }, 100);\r\n                }).then(function () {\r\n                    // find the editor we have just opened and return the\r\n                    // id we have assigned to it.\r\n                    for (var id in _this._textEditorsMap) {\r\n                        if (_this._textEditorsMap[id].matches(editor)) {\r\n                            return id;\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n        };\r\n        MainThreadEditors.prototype._tryShowEditor = function (id, position) {\r\n            var mainThreadEditor = this._textEditorsMap[id];\r\n            if (mainThreadEditor) {\r\n                var model = mainThreadEditor.getModel();\r\n                return this._workbenchEditorService.openEditor({\r\n                    resource: model.getAssociatedResource(),\r\n                    options: { preserveFocus: false }\r\n                }, position).then(function () { });\r\n            }\r\n        };\r\n        MainThreadEditors.prototype._tryHideEditor = function (id) {\r\n            var mainThreadEditor = this._textEditorsMap[id];\r\n            if (mainThreadEditor) {\r\n                var editors = this._workbenchEditorService.getVisibleEditors();\r\n                for (var _i = 0; _i < editors.length; _i++) {\r\n                    var editor = editors[_i];\r\n                    if (mainThreadEditor.matches(editor)) {\r\n                        return this._workbenchEditorService.closeEditor(editor).then(function () { });\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        MainThreadEditors.prototype._trySetSelections = function (id, selections) {\r\n            if (!this._textEditorsMap[id]) {\r\n                return winjs_base_1.TPromise.wrapError('TextEditor disposed');\r\n            }\r\n            this._textEditorsMap[id].setSelections(selections);\r\n            return winjs_base_1.TPromise.as(null);\r\n        };\r\n        MainThreadEditors.prototype._trySetDecorations = function (id, key, ranges) {\r\n            if (!this._textEditorsMap[id]) {\r\n                return winjs_base_1.TPromise.wrapError('TextEditor disposed');\r\n            }\r\n            this._textEditorsMap[id].setDecorations(key, ranges);\r\n            return winjs_base_1.TPromise.as(null);\r\n        };\r\n        MainThreadEditors.prototype._tryRevealRange = function (id, range, revealType) {\r\n            if (!this._textEditorsMap[id]) {\r\n                return winjs_base_1.TPromise.wrapError('TextEditor disposed');\r\n            }\r\n            this._textEditorsMap[id].revealRange(range, revealType);\r\n        };\r\n        MainThreadEditors.prototype._trySetOptions = function (id, options) {\r\n            if (!this._textEditorsMap[id]) {\r\n                return winjs_base_1.TPromise.wrapError('TextEditor disposed');\r\n            }\r\n            this._textEditorsMap[id].setConfiguration(options);\r\n            return winjs_base_1.TPromise.as(null);\r\n        };\r\n        MainThreadEditors.prototype._tryApplyEdits = function (id, modelVersionId, edits) {\r\n            if (!this._textEditorsMap[id]) {\r\n                return winjs_base_1.TPromise.wrapError('TextEditor disposed');\r\n            }\r\n            return winjs_base_1.TPromise.as(this._textEditorsMap[id].applyEdits(modelVersionId, edits));\r\n        };\r\n        MainThreadEditors.prototype._registerTextEditorDecorationType = function (key, options) {\r\n            this._editorTracker.registerTextEditorDecorationType(key, options);\r\n        };\r\n        MainThreadEditors.prototype._removeTextEditorDecorationType = function (key) {\r\n            this._editorTracker.removeTextEditorDecorationType(key);\r\n        };\r\n        MainThreadEditors = __decorate([\r\n            thread_1.Remotable.MainContext('MainThreadEditors'),\r\n            __param(0, thread_1.IThreadService),\r\n            __param(1, editorService_1.IWorkbenchEditorService),\r\n            __param(2, codeEditorService_1.ICodeEditorService),\r\n            __param(3, event_2.IEventService),\r\n            __param(4, modelService_1.IModelService)\r\n        ], MainThreadEditors);\r\n        return MainThreadEditors;\r\n    })();\r\n    exports.MainThreadEditors = MainThreadEditors;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") return Reflect.decorate(decorators, target, key, desc);\r\n    switch (arguments.length) {\r\n        case 2: return decorators.reduceRight(function(o, d) { return (d && d(o)) || o; }, target);\r\n        case 3: return decorators.reduceRight(function(o, d) { return (d && d(target, key)), void 0; }, void 0);\r\n        case 4: return decorators.reduceRight(function(o, d) { return (d && d(target, key, o)) || o; }, desc);\r\n    }\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\ndefine(\"vs/workbench/api/common/pluginHostCommands\", [\"require\", \"exports\", 'vs/platform/thread/common/thread', 'vs/base/common/types', 'vs/platform/keybinding/common/keybindingsRegistry', 'vs/platform/keybinding/common/keybindingService', 'vs/base/common/winjs.base', 'vs/workbench/api/common/pluginHostEditors'], function (require, exports, thread_1, types_1, keybindingsRegistry_1, keybindingService_1, winjs_base_1, pluginHostEditors_1) {\r\n    var PluginHostCommands = (function () {\r\n        function PluginHostCommands(threadService) {\r\n            this._commands = Object.create(null);\r\n            this._pluginHostEditors = threadService.getRemotable(pluginHostEditors_1.PluginHostEditors);\r\n            this._proxy = threadService.getRemotable(MainThreadCommands);\r\n        }\r\n        PluginHostCommands.prototype.registerCommand = function (id, callback, thisArg, description) {\r\n            var _this = this;\r\n            if (!id.trim().length) {\r\n                throw new Error('invalid id');\r\n            }\r\n            if (this._commands[id]) {\r\n                throw new Error('command with id already exists');\r\n            }\r\n            this._commands[id] = { callback: callback, thisArg: thisArg, description: description };\r\n            this._proxy.$registerCommand(id);\r\n            return {\r\n                dispose: function () {\r\n                    delete _this._commands[id];\r\n                }\r\n            };\r\n        };\r\n        PluginHostCommands.prototype.registerTextEditorCommand = function (id, callback, thisArg) {\r\n            var _this = this;\r\n            var actualCallback = thisArg ? callback.bind(thisArg) : callback;\r\n            return this.registerCommand(id, function () {\r\n                var activeTextEditor = _this._pluginHostEditors.getActiveTextEditor();\r\n                if (!activeTextEditor) {\r\n                    console.warn('Cannot execute ' + id + ' because there is no active text editor.');\r\n                    return;\r\n                }\r\n                activeTextEditor.edit(function (edit) {\r\n                    actualCallback(activeTextEditor, edit);\r\n                }).then(function (result) {\r\n                    if (!result) {\r\n                        console.warn('Edits from command ' + id + ' were not applied.');\r\n                    }\r\n                }, function (err) {\r\n                    console.warn('An error occured while running command ' + id, err);\r\n                });\r\n            });\r\n        };\r\n        PluginHostCommands.prototype.executeCommand = function (id) {\r\n            var args = [];\r\n            for (var _i = 1; _i < arguments.length; _i++) {\r\n                args[_i - 1] = arguments[_i];\r\n            }\r\n            if (this._commands[id]) {\r\n                // we stay inside the extension host and support\r\n                // to pass any kind of parameters around\r\n                return this.$executeContributedCommand.apply(this, [id].concat(args));\r\n            }\r\n            else {\r\n                // // check that we can get all parameters over to\r\n                // // the other side\r\n                // for (let i = 0; i < args.length; i++) {\r\n                // \tif (args[i] !== null && typeof args[i] === 'object' && !canSerialize(args[i])) {\r\n                // \t\tthrow new Error('illegal argument - can not serialize argument number: ' + i)\r\n                // \t}\r\n                // }\r\n                return this._proxy.$executeCommand(id, args);\r\n            }\r\n        };\r\n        PluginHostCommands.prototype.$executeContributedCommand = function (id) {\r\n            var args = [];\r\n            for (var _i = 1; _i < arguments.length; _i++) {\r\n                args[_i - 1] = arguments[_i];\r\n            }\r\n            var command = this._commands[id];\r\n            if (!command) {\r\n                return Promise.reject(id);\r\n            }\r\n            try {\r\n                var callback = command.callback, thisArg = command.thisArg, description = command.description;\r\n                if (description) {\r\n                    for (var i = 0; i < description.args.length; i++) {\r\n                        types_1.validateConstraint(args[i], description.args[i].constraint);\r\n                    }\r\n                }\r\n                var result = callback.apply(thisArg, args);\r\n                return Promise.resolve(result);\r\n            }\r\n            catch (err) {\r\n                // try {\r\n                // \tconsole.log(toErrorMessage(err));\r\n                // \tconsole.log(err);\r\n                // } catch (err) {\r\n                // \t//\r\n                // }\r\n                return Promise.reject(\"Running the contributed command:'\" + id + \"' failed.\");\r\n            }\r\n        };\r\n        PluginHostCommands.prototype.getCommands = function (filterUnderscoreCommands) {\r\n            if (filterUnderscoreCommands === void 0) { filterUnderscoreCommands = false; }\r\n            return this._proxy.$getCommands().then(function (result) {\r\n                if (filterUnderscoreCommands) {\r\n                    result = result.filter(function (command) { return command[0] !== '_'; });\r\n                }\r\n                return result;\r\n            });\r\n        };\r\n        PluginHostCommands.prototype.$getContributedCommandHandlerDescriptions = function () {\r\n            var result = Object.create(null);\r\n            for (var id in this._commands) {\r\n                var description = this._commands[id].description;\r\n                if (description) {\r\n                    result[id] = description;\r\n                }\r\n            }\r\n            return winjs_base_1.TPromise.as(result);\r\n        };\r\n        PluginHostCommands = __decorate([\r\n            thread_1.Remotable.PluginHostContext('PluginHostCommands'),\r\n            __param(0, thread_1.IThreadService)\r\n        ], PluginHostCommands);\r\n        return PluginHostCommands;\r\n    })();\r\n    exports.PluginHostCommands = PluginHostCommands;\r\n    var MainThreadCommands = (function () {\r\n        function MainThreadCommands(threadService, keybindingService) {\r\n            this._threadService = threadService;\r\n            this._keybindingService = keybindingService;\r\n            this._proxy = this._threadService.getRemotable(PluginHostCommands);\r\n        }\r\n        MainThreadCommands.prototype.$registerCommand = function (id) {\r\n            var _this = this;\r\n            keybindingsRegistry_1.KeybindingsRegistry.registerCommandDesc({\r\n                id: id,\r\n                handler: function (serviceAccessor) {\r\n                    var args = [];\r\n                    for (var _i = 1; _i < arguments.length; _i++) {\r\n                        args[_i - 1] = arguments[_i];\r\n                    }\r\n                    return (_a = _this._proxy).$executeContributedCommand.apply(_a, [id].concat(args)); //TODO@Joh - we cannot serialize the args\r\n                    var _a;\r\n                },\r\n                weight: undefined,\r\n                context: undefined,\r\n                win: undefined,\r\n                mac: undefined,\r\n                linux: undefined,\r\n                primary: undefined,\r\n                secondary: undefined\r\n            });\r\n            return undefined;\r\n        };\r\n        MainThreadCommands.prototype.$executeCommand = function (id, args) {\r\n            return this._keybindingService.executeCommand(id, args);\r\n        };\r\n        MainThreadCommands.prototype.$getCommands = function () {\r\n            return winjs_base_1.TPromise.as(Object.keys(keybindingsRegistry_1.KeybindingsRegistry.getCommands()));\r\n        };\r\n        MainThreadCommands.prototype.$getCommandHandlerDescriptions = function () {\r\n            return this._proxy.$getContributedCommandHandlerDescriptions().then(function (result) {\r\n                var commands = keybindingsRegistry_1.KeybindingsRegistry.getCommands();\r\n                for (var id in commands) {\r\n                    var description = commands[id].description;\r\n                    if (description) {\r\n                        result[id] = description;\r\n                    }\r\n                }\r\n                return result;\r\n            });\r\n        };\r\n        MainThreadCommands = __decorate([\r\n            thread_1.Remotable.MainContext('MainThreadCommands'),\r\n            __param(0, thread_1.IThreadService),\r\n            __param(1, keybindingService_1.IKeybindingService)\r\n        ], MainThreadCommands);\r\n        return MainThreadCommands;\r\n    })();\r\n    exports.MainThreadCommands = MainThreadCommands;\r\n    // --- command doc\r\n    keybindingsRegistry_1.KeybindingsRegistry.registerCommandDesc({\r\n        id: '_generateCommandsDocumentation',\r\n        handler: function (accessor) {\r\n            return accessor.get(thread_1.IThreadService).getRemotable(MainThreadCommands).$getCommandHandlerDescriptions().then(function (result) {\r\n                var all = [];\r\n                for (var id in result) {\r\n                    all.push('`' + id + '` - ' + _generateMarkdown(result[id]));\r\n                }\r\n                console.log(all.join('\\n'));\r\n            });\r\n        },\r\n        context: undefined,\r\n        weight: keybindingsRegistry_1.KeybindingsRegistry.WEIGHT.builtinExtension(0),\r\n        primary: undefined\r\n    });\r\n    function _generateMarkdown(description) {\r\n        if (typeof description === 'string') {\r\n            return description;\r\n        }\r\n        else {\r\n            var parts = [description.description];\r\n            parts.push('\\n\\n');\r\n            if (description.args) {\r\n                for (var _i = 0, _a = description.args; _i < _a.length; _i++) {\r\n                    var arg = _a[_i];\r\n                    parts.push(\"* _\" + arg.name + \"_ \" + (arg.description || '') + \"\\n\");\r\n                }\r\n            }\r\n            if (description.returns) {\r\n                parts.push(\"* _(returns)_ \" + description.returns);\r\n            }\r\n            parts.push('\\n\\n');\r\n            return parts.join('');\r\n        }\r\n    }\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") return Reflect.decorate(decorators, target, key, desc);\r\n    switch (arguments.length) {\r\n        case 2: return decorators.reduceRight(function(o, d) { return (d && d(o)) || o; }, target);\r\n        case 3: return decorators.reduceRight(function(o, d) { return (d && d(target, key)), void 0; }, void 0);\r\n        case 4: return decorators.reduceRight(function(o, d) { return (d && d(target, key, o)) || o; }, desc);\r\n    }\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\ndefine(\"vs/workbench/api/common/extHostLanguageFeatures\", [\"require\", \"exports\", 'vs/editor/common/modes/modesFilters', 'vs/base/common/winjs.base', 'vs/platform/thread/common/thread', 'vs/editor/common/core/range', 'vs/workbench/api/common/pluginHostTypeConverters', 'vs/workbench/api/common/pluginHostTypes', 'vs/base/common/cancellation', 'vs/workbench/api/common/pluginHostDocuments', 'vs/platform/markers/common/markers', 'vs/workbench/api/common/pluginHostCommands', 'vs/editor/contrib/goToDeclaration/common/goToDeclaration', 'vs/editor/contrib/hover/common/hover', 'vs/editor/contrib/wordHighlighter/common/wordHighlighter', 'vs/editor/contrib/referenceSearch/common/referenceSearch', 'vs/editor/contrib/quickFix/common/quickFix', 'vs/editor/contrib/quickOpen/common/quickOpen', 'vs/workbench/parts/search/common/search', 'vs/editor/contrib/rename/common/rename', 'vs/editor/contrib/format/common/format', 'vs/editor/contrib/codelens/common/codelens', 'vs/editor/contrib/parameterHints/common/parameterHints', 'vs/editor/contrib/suggest/common/suggest'], function (require, exports, modesFilters_1, winjs_base_1, thread_1, range_1, TypeConverters, pluginHostTypes_1, cancellation_1, pluginHostDocuments_1, markers_1, pluginHostCommands_1, goToDeclaration_1, hover_1, wordHighlighter_1, referenceSearch_1, quickFix_1, quickOpen_1, search_1, rename_1, format_1, codelens_1, parameterHints_1, suggest_1) {\r\n    function isThenable(obj) {\r\n        return obj && typeof obj['then'] === 'function';\r\n    }\r\n    function asWinJsPromise(callback) {\r\n        var source = new cancellation_1.CancellationTokenSource();\r\n        return new winjs_base_1.TPromise(function (resolve, reject) {\r\n            var item = callback(source.token);\r\n            if (isThenable(item)) {\r\n                item.then(resolve, reject);\r\n            }\r\n            else {\r\n                resolve(item);\r\n            }\r\n        }, function () {\r\n            source.cancel();\r\n        });\r\n    }\r\n    // --- adapter\r\n    var OutlineAdapter = (function () {\r\n        function OutlineAdapter(documents, provider) {\r\n            this._documents = documents;\r\n            this._provider = provider;\r\n        }\r\n        OutlineAdapter.prototype.getOutline = function (resource) {\r\n            var _this = this;\r\n            var doc = this._documents.getDocument(resource);\r\n            return asWinJsPromise(function (token) { return _this._provider.provideDocumentSymbols(doc, token); }).then(function (value) {\r\n                if (Array.isArray(value)) {\r\n                    return value.map(TypeConverters.SymbolInformation.toOutlineEntry);\r\n                }\r\n            });\r\n        };\r\n        return OutlineAdapter;\r\n    })();\r\n    var CodeLensAdapter = (function () {\r\n        function CodeLensAdapter(documents, provider) {\r\n            this._cache = Object.create(null);\r\n            this._documents = documents;\r\n            this._provider = provider;\r\n        }\r\n        CodeLensAdapter.prototype.findCodeLensSymbols = function (resource) {\r\n            var _this = this;\r\n            var doc = this._documents.getDocument(resource);\r\n            var key = resource.toString();\r\n            delete this._cache[key];\r\n            return asWinJsPromise(function (token) { return _this._provider.provideCodeLenses(doc, token); }).then(function (value) {\r\n                if (!Array.isArray(value)) {\r\n                    return;\r\n                }\r\n                _this._cache[key] = value;\r\n                return value.map(function (lens, i) {\r\n                    return {\r\n                        id: String(i),\r\n                        range: TypeConverters.fromRange(lens.range),\r\n                        command: TypeConverters.Command.from(lens.command)\r\n                    };\r\n                });\r\n            });\r\n        };\r\n        CodeLensAdapter.prototype.resolveCodeLensSymbol = function (resource, symbol) {\r\n            var _this = this;\r\n            var lenses = this._cache[resource.toString()];\r\n            if (!lenses) {\r\n                return;\r\n            }\r\n            var lens = lenses[Number(symbol.id)];\r\n            if (!lens) {\r\n                return;\r\n            }\r\n            var resolve;\r\n            if (typeof this._provider.resolveCodeLens !== 'function' || lens.isResolved) {\r\n                resolve = winjs_base_1.TPromise.as(lens);\r\n            }\r\n            else {\r\n                resolve = asWinJsPromise(function (token) { return _this._provider.resolveCodeLens(lens, token); });\r\n            }\r\n            return resolve.then(function (newLens) {\r\n                lens = newLens || lens;\r\n                var command = lens.command;\r\n                if (!command) {\r\n                    command = {\r\n                        title: '<<MISSING COMMAND>>',\r\n                        command: 'missing',\r\n                    };\r\n                }\r\n                symbol.command = TypeConverters.Command.from(command);\r\n                return symbol;\r\n            });\r\n        };\r\n        return CodeLensAdapter;\r\n    })();\r\n    var DeclarationAdapter = (function () {\r\n        function DeclarationAdapter(documents, provider) {\r\n            this._documents = documents;\r\n            this._provider = provider;\r\n        }\r\n        DeclarationAdapter.prototype.canFindDeclaration = function () {\r\n            return true;\r\n        };\r\n        DeclarationAdapter.prototype.findDeclaration = function (resource, position) {\r\n            var _this = this;\r\n            var doc = this._documents.getDocument(resource);\r\n            var pos = TypeConverters.toPosition(position);\r\n            return asWinJsPromise(function (token) { return _this._provider.provideDefinition(doc, pos, token); }).then(function (value) {\r\n                if (Array.isArray(value)) {\r\n                    return value.map(DeclarationAdapter._convertLocation);\r\n                }\r\n                else if (value) {\r\n                    return DeclarationAdapter._convertLocation(value);\r\n                }\r\n            });\r\n        };\r\n        DeclarationAdapter._convertLocation = function (location) {\r\n            if (!location) {\r\n                return;\r\n            }\r\n            return {\r\n                resource: location.uri,\r\n                range: TypeConverters.fromRange(location.range)\r\n            };\r\n        };\r\n        return DeclarationAdapter;\r\n    })();\r\n    var ExtraInfoAdapter = (function () {\r\n        function ExtraInfoAdapter(documents, provider) {\r\n            this._documents = documents;\r\n            this._provider = provider;\r\n        }\r\n        ExtraInfoAdapter.prototype.computeInfo = function (resource, position) {\r\n            var _this = this;\r\n            var doc = this._documents.getDocument(resource);\r\n            var pos = TypeConverters.toPosition(position);\r\n            return asWinJsPromise(function (token) { return _this._provider.provideHover(doc, pos, token); }).then(function (value) {\r\n                if (!value) {\r\n                    return;\r\n                }\r\n                if (!value.range) {\r\n                    value.range = doc.getWordRangeAtPosition(pos);\r\n                }\r\n                if (!value.range) {\r\n                    value.range = new pluginHostTypes_1.Range(pos, pos);\r\n                }\r\n                return TypeConverters.fromHover(value);\r\n            });\r\n        };\r\n        return ExtraInfoAdapter;\r\n    })();\r\n    var OccurrencesAdapter = (function () {\r\n        function OccurrencesAdapter(documents, provider) {\r\n            this._documents = documents;\r\n            this._provider = provider;\r\n        }\r\n        OccurrencesAdapter.prototype.findOccurrences = function (resource, position) {\r\n            var _this = this;\r\n            var doc = this._documents.getDocument(resource);\r\n            var pos = TypeConverters.toPosition(position);\r\n            return asWinJsPromise(function (token) { return _this._provider.provideDocumentHighlights(doc, pos, token); }).then(function (value) {\r\n                if (Array.isArray(value)) {\r\n                    return value.map(OccurrencesAdapter._convertDocumentHighlight);\r\n                }\r\n            });\r\n        };\r\n        OccurrencesAdapter._convertDocumentHighlight = function (documentHighlight) {\r\n            return {\r\n                range: TypeConverters.fromRange(documentHighlight.range),\r\n                kind: pluginHostTypes_1.DocumentHighlightKind[documentHighlight.kind].toString().toLowerCase()\r\n            };\r\n        };\r\n        return OccurrencesAdapter;\r\n    })();\r\n    var ReferenceAdapter = (function () {\r\n        function ReferenceAdapter(documents, provider) {\r\n            this._documents = documents;\r\n            this._provider = provider;\r\n        }\r\n        ReferenceAdapter.prototype.canFindReferences = function () {\r\n            return true;\r\n        };\r\n        ReferenceAdapter.prototype.findReferences = function (resource, position, includeDeclaration) {\r\n            var _this = this;\r\n            var doc = this._documents.getDocument(resource);\r\n            var pos = TypeConverters.toPosition(position);\r\n            return asWinJsPromise(function (token) { return _this._provider.provideReferences(doc, pos, { includeDeclaration: includeDeclaration }, token); }).then(function (value) {\r\n                if (Array.isArray(value)) {\r\n                    return value.map(ReferenceAdapter._convertLocation);\r\n                }\r\n            });\r\n        };\r\n        ReferenceAdapter._convertLocation = function (location) {\r\n            return {\r\n                resource: location.uri,\r\n                range: TypeConverters.fromRange(location.range)\r\n            };\r\n        };\r\n        return ReferenceAdapter;\r\n    })();\r\n    var QuickFixAdapter = (function () {\r\n        function QuickFixAdapter(documents, commands, provider) {\r\n            this._documents = documents;\r\n            this._commands = commands;\r\n            this._provider = provider;\r\n        }\r\n        QuickFixAdapter.prototype.getQuickFixes = function (resource, range, marker) {\r\n            var _this = this;\r\n            var doc = this._documents.getDocument(resource);\r\n            var ran = TypeConverters.toRange(range);\r\n            var diagnostics = marker.map(function (marker) {\r\n                var diag = new pluginHostTypes_1.Diagnostic(TypeConverters.toRange(marker), marker.message);\r\n                diag.code = marker.code;\r\n                diag.severity = TypeConverters.toDiagnosticSeverty(marker.severity);\r\n                return diag;\r\n            });\r\n            return asWinJsPromise(function (token) { return _this._provider.provideCodeActions(doc, ran, { diagnostics: diagnostics }, token); }).then(function (commands) {\r\n                if (!Array.isArray(commands)) {\r\n                    return;\r\n                }\r\n                return commands.map(function (command, i) {\r\n                    return {\r\n                        command: TypeConverters.Command.from(command),\r\n                        score: i\r\n                    };\r\n                });\r\n            });\r\n        };\r\n        QuickFixAdapter.prototype.runQuickFixAction = function (resource, range, quickFix) {\r\n            var command = quickFix.command;\r\n            return (_a = this._commands).executeCommand.apply(_a, [command.id].concat(command.arguments));\r\n            var _a;\r\n        };\r\n        return QuickFixAdapter;\r\n    })();\r\n    var DocumentFormattingAdapter = (function () {\r\n        function DocumentFormattingAdapter(documents, provider) {\r\n            this._documents = documents;\r\n            this._provider = provider;\r\n        }\r\n        DocumentFormattingAdapter.prototype.formatDocument = function (resource, options) {\r\n            var _this = this;\r\n            var doc = this._documents.getDocument(resource);\r\n            return asWinJsPromise(function (token) { return _this._provider.provideDocumentFormattingEdits(doc, options, token); }).then(function (value) {\r\n                if (Array.isArray(value)) {\r\n                    return value.map(TypeConverters.TextEdit.from);\r\n                }\r\n            });\r\n        };\r\n        return DocumentFormattingAdapter;\r\n    })();\r\n    var RangeFormattingAdapter = (function () {\r\n        function RangeFormattingAdapter(documents, provider) {\r\n            this._documents = documents;\r\n            this._provider = provider;\r\n        }\r\n        RangeFormattingAdapter.prototype.formatRange = function (resource, range, options) {\r\n            var _this = this;\r\n            var doc = this._documents.getDocument(resource);\r\n            var ran = TypeConverters.toRange(range);\r\n            return asWinJsPromise(function (token) { return _this._provider.provideDocumentRangeFormattingEdits(doc, ran, options, token); }).then(function (value) {\r\n                if (Array.isArray(value)) {\r\n                    return value.map(TypeConverters.TextEdit.from);\r\n                }\r\n            });\r\n        };\r\n        return RangeFormattingAdapter;\r\n    })();\r\n    var OnTypeFormattingAdapter = (function () {\r\n        function OnTypeFormattingAdapter(documents, provider) {\r\n            this.autoFormatTriggerCharacters = []; // not here\r\n            this._documents = documents;\r\n            this._provider = provider;\r\n        }\r\n        OnTypeFormattingAdapter.prototype.formatAfterKeystroke = function (resource, position, ch, options) {\r\n            var _this = this;\r\n            var doc = this._documents.getDocument(resource);\r\n            var pos = TypeConverters.toPosition(position);\r\n            return asWinJsPromise(function (token) { return _this._provider.provideOnTypeFormattingEdits(doc, pos, ch, options, token); }).then(function (value) {\r\n                if (Array.isArray(value)) {\r\n                    return value.map(TypeConverters.TextEdit.from);\r\n                }\r\n            });\r\n        };\r\n        return OnTypeFormattingAdapter;\r\n    })();\r\n    var NavigateTypeAdapter = (function () {\r\n        function NavigateTypeAdapter(provider) {\r\n            this._provider = provider;\r\n        }\r\n        NavigateTypeAdapter.prototype.getNavigateToItems = function (search) {\r\n            var _this = this;\r\n            return asWinJsPromise(function (token) { return _this._provider.provideWorkspaceSymbols(search, token); }).then(function (value) {\r\n                if (Array.isArray(value)) {\r\n                    return value.map(TypeConverters.fromSymbolInformation);\r\n                }\r\n            });\r\n        };\r\n        return NavigateTypeAdapter;\r\n    })();\r\n    var RenameAdapter = (function () {\r\n        function RenameAdapter(documents, provider) {\r\n            this._documents = documents;\r\n            this._provider = provider;\r\n        }\r\n        RenameAdapter.prototype.rename = function (resource, position, newName) {\r\n            var _this = this;\r\n            var doc = this._documents.getDocument(resource);\r\n            var pos = TypeConverters.toPosition(position);\r\n            return asWinJsPromise(function (token) { return _this._provider.provideRenameEdits(doc, pos, newName, token); }).then(function (value) {\r\n                if (!value) {\r\n                    return;\r\n                }\r\n                var result = {\r\n                    currentName: undefined,\r\n                    edits: []\r\n                };\r\n                for (var _i = 0, _a = value.entries(); _i < _a.length; _i++) {\r\n                    var entry = _a[_i];\r\n                    var uri = entry[0], textEdits = entry[1];\r\n                    for (var _b = 0; _b < textEdits.length; _b++) {\r\n                        var textEdit = textEdits[_b];\r\n                        result.edits.push({\r\n                            resource: uri,\r\n                            newText: textEdit.newText,\r\n                            range: TypeConverters.fromRange(textEdit.range)\r\n                        });\r\n                    }\r\n                }\r\n                return result;\r\n            }, function (err) {\r\n                if (typeof err === 'string') {\r\n                    return {\r\n                        currentName: undefined,\r\n                        edits: undefined,\r\n                        rejectReason: err\r\n                    };\r\n                }\r\n                return winjs_base_1.TPromise.wrapError(err);\r\n            });\r\n        };\r\n        return RenameAdapter;\r\n    })();\r\n    var SuggestAdapter = (function () {\r\n        function SuggestAdapter(documents, provider) {\r\n            this._cache = Object.create(null);\r\n            this._documents = documents;\r\n            this._provider = provider;\r\n        }\r\n        SuggestAdapter.prototype.suggest = function (resource, position) {\r\n            var _this = this;\r\n            var doc = this._documents.getDocument(resource);\r\n            var pos = TypeConverters.toPosition(position);\r\n            var ran = doc.getWordRangeAtPosition(pos);\r\n            var key = resource.toString();\r\n            delete this._cache[key];\r\n            return asWinJsPromise(function (token) { return _this._provider.provideCompletionItems(doc, pos, token); }).then(function (value) {\r\n                var defaultSuggestions = {\r\n                    suggestions: [],\r\n                    currentWord: ran ? doc.getText(new pluginHostTypes_1.Range(ran.start, pos)) : '',\r\n                };\r\n                var allSuggestions = [defaultSuggestions];\r\n                for (var i = 0; i < value.length; i++) {\r\n                    var item = value[i];\r\n                    var suggestion = TypeConverters.Suggest.from(item);\r\n                    if (item.textEdit) {\r\n                        var editRange = item.textEdit.range;\r\n                        // invalid text edit\r\n                        if (!editRange.isSingleLine || editRange.start.line !== pos.line) {\r\n                            console.warn('INVALID text edit, must be single line and on the same line');\r\n                            continue;\r\n                        }\r\n                        // insert the text of the edit and create a dedicated\r\n                        // suggestion-container with overwrite[Before|After]\r\n                        suggestion.codeSnippet = item.textEdit.newText;\r\n                        suggestion.overwriteBefore = pos.character - editRange.start.character,\r\n                            suggestion.overwriteAfter = editRange.end.character - pos.character;\r\n                        allSuggestions.push({\r\n                            currentWord: doc.getText(editRange),\r\n                            suggestions: [suggestion]\r\n                        });\r\n                    }\r\n                    else {\r\n                        defaultSuggestions.suggestions.push(suggestion);\r\n                    }\r\n                    // assign identifier to suggestion\r\n                    suggestion.id = String(i);\r\n                }\r\n                // cache for details call\r\n                _this._cache[key] = value;\r\n                return allSuggestions;\r\n            });\r\n        };\r\n        SuggestAdapter.prototype.getSuggestionDetails = function (resource, position, suggestion) {\r\n            var _this = this;\r\n            if (typeof this._provider.resolveCompletionItem !== 'function') {\r\n                return winjs_base_1.TPromise.as(suggestion);\r\n            }\r\n            var items = this._cache[resource.toString()];\r\n            if (!items) {\r\n                return winjs_base_1.TPromise.as(suggestion);\r\n            }\r\n            var item = items[Number(suggestion.id)];\r\n            if (!item) {\r\n                return winjs_base_1.TPromise.as(suggestion);\r\n            }\r\n            return asWinJsPromise(function (token) { return _this._provider.resolveCompletionItem(item, token); }).then(function (resolvedItem) {\r\n                return TypeConverters.Suggest.from(resolvedItem || item);\r\n            });\r\n        };\r\n        SuggestAdapter.prototype.getFilter = function () {\r\n            throw new Error('illegal state');\r\n        };\r\n        SuggestAdapter.prototype.getTriggerCharacters = function () {\r\n            throw new Error('illegal state');\r\n        };\r\n        SuggestAdapter.prototype.shouldShowEmptySuggestionList = function () {\r\n            throw new Error('illegal state');\r\n        };\r\n        SuggestAdapter.prototype.shouldAutotriggerSuggest = function (context, offset, triggeredByCharacter) {\r\n            throw new Error('illegal state');\r\n        };\r\n        return SuggestAdapter;\r\n    })();\r\n    var ParameterHintsAdapter = (function () {\r\n        function ParameterHintsAdapter(documents, provider) {\r\n            this._documents = documents;\r\n            this._provider = provider;\r\n        }\r\n        ParameterHintsAdapter.prototype.getParameterHints = function (resource, position, triggerCharacter) {\r\n            var _this = this;\r\n            var doc = this._documents.getDocument(resource);\r\n            var pos = TypeConverters.toPosition(position);\r\n            return asWinJsPromise(function (token) { return _this._provider.provideSignatureHelp(doc, pos, token); }).then(function (value) {\r\n                if (value instanceof pluginHostTypes_1.SignatureHelp) {\r\n                    return TypeConverters.SignatureHelp.from(value);\r\n                }\r\n            });\r\n        };\r\n        ParameterHintsAdapter.prototype.getParameterHintsTriggerCharacters = function () {\r\n            throw new Error('illegal state');\r\n        };\r\n        ParameterHintsAdapter.prototype.shouldTriggerParameterHints = function (context, offset) {\r\n            throw new Error('illegal state');\r\n        };\r\n        return ParameterHintsAdapter;\r\n    })();\r\n    var ExtHostLanguageFeatures = (function () {\r\n        function ExtHostLanguageFeatures(threadService) {\r\n            this._adapter = Object.create(null);\r\n            this._proxy = threadService.getRemotable(MainThreadLanguageFeatures);\r\n            this._documents = threadService.getRemotable(pluginHostDocuments_1.PluginHostModelService);\r\n            this._commands = threadService.getRemotable(pluginHostCommands_1.PluginHostCommands);\r\n        }\r\n        ExtHostLanguageFeatures.prototype._createDisposable = function (handle) {\r\n            var _this = this;\r\n            return new pluginHostTypes_1.Disposable(function () {\r\n                delete _this._adapter[handle];\r\n                _this._proxy.$unregister(handle);\r\n            });\r\n        };\r\n        ExtHostLanguageFeatures.prototype._nextHandle = function () {\r\n            return ExtHostLanguageFeatures._handlePool++;\r\n        };\r\n        ExtHostLanguageFeatures.prototype._withAdapter = function (handle, ctor, callback) {\r\n            var adapter = this._adapter[handle];\r\n            if (!(adapter instanceof ctor)) {\r\n                return winjs_base_1.TPromise.wrapError(new Error('no adapter found'));\r\n            }\r\n            return callback(adapter);\r\n        };\r\n        // --- outline\r\n        ExtHostLanguageFeatures.prototype.registerDocumentSymbolProvider = function (selector, provider) {\r\n            var handle = this._nextHandle();\r\n            this._adapter[handle] = new OutlineAdapter(this._documents, provider);\r\n            this._proxy.$registerOutlineSupport(handle, selector);\r\n            return this._createDisposable(handle);\r\n        };\r\n        ExtHostLanguageFeatures.prototype.$getOutline = function (handle, resource) {\r\n            return this._withAdapter(handle, OutlineAdapter, function (adapter) { return adapter.getOutline(resource); });\r\n        };\r\n        // --- code lens\r\n        ExtHostLanguageFeatures.prototype.registerCodeLensProvider = function (selector, provider) {\r\n            var handle = this._nextHandle();\r\n            this._adapter[handle] = new CodeLensAdapter(this._documents, provider);\r\n            this._proxy.$registerCodeLensSupport(handle, selector);\r\n            return this._createDisposable(handle);\r\n        };\r\n        ExtHostLanguageFeatures.prototype.$findCodeLensSymbols = function (handle, resource) {\r\n            return this._withAdapter(handle, CodeLensAdapter, function (adapter) { return adapter.findCodeLensSymbols(resource); });\r\n        };\r\n        ExtHostLanguageFeatures.prototype.$resolveCodeLensSymbol = function (handle, resource, symbol) {\r\n            return this._withAdapter(handle, CodeLensAdapter, function (adapter) { return adapter.resolveCodeLensSymbol(resource, symbol); });\r\n        };\r\n        // --- declaration\r\n        ExtHostLanguageFeatures.prototype.registerDefinitionProvider = function (selector, provider) {\r\n            var handle = this._nextHandle();\r\n            this._adapter[handle] = new DeclarationAdapter(this._documents, provider);\r\n            this._proxy.$registerDeclaractionSupport(handle, selector);\r\n            return this._createDisposable(handle);\r\n        };\r\n        ExtHostLanguageFeatures.prototype.$findDeclaration = function (handle, resource, position) {\r\n            return this._withAdapter(handle, DeclarationAdapter, function (adapter) { return adapter.findDeclaration(resource, position); });\r\n        };\r\n        // --- extra info\r\n        ExtHostLanguageFeatures.prototype.registerHoverProvider = function (selector, provider) {\r\n            var handle = this._nextHandle();\r\n            this._adapter[handle] = new ExtraInfoAdapter(this._documents, provider);\r\n            this._proxy.$registerExtraInfoSupport(handle, selector);\r\n            return this._createDisposable(handle);\r\n        };\r\n        ExtHostLanguageFeatures.prototype.$computeInfo = function (handle, resource, position) {\r\n            return this._withAdapter(handle, ExtraInfoAdapter, function (adpater) { return adpater.computeInfo(resource, position); });\r\n        };\r\n        // --- occurrences\r\n        ExtHostLanguageFeatures.prototype.registerDocumentHighlightProvider = function (selector, provider) {\r\n            var handle = this._nextHandle();\r\n            this._adapter[handle] = new OccurrencesAdapter(this._documents, provider);\r\n            this._proxy.$registerOccurrencesSupport(handle, selector);\r\n            return this._createDisposable(handle);\r\n        };\r\n        ExtHostLanguageFeatures.prototype.$findOccurrences = function (handle, resource, position) {\r\n            return this._withAdapter(handle, OccurrencesAdapter, function (adapter) { return adapter.findOccurrences(resource, position); });\r\n        };\r\n        // --- references\r\n        ExtHostLanguageFeatures.prototype.registerReferenceProvider = function (selector, provider) {\r\n            var handle = this._nextHandle();\r\n            this._adapter[handle] = new ReferenceAdapter(this._documents, provider);\r\n            this._proxy.$registerReferenceSupport(handle, selector);\r\n            return this._createDisposable(handle);\r\n        };\r\n        ExtHostLanguageFeatures.prototype.$findReferences = function (handle, resource, position, includeDeclaration) {\r\n            return this._withAdapter(handle, ReferenceAdapter, function (adapter) { return adapter.findReferences(resource, position, includeDeclaration); });\r\n        };\r\n        // --- quick fix\r\n        ExtHostLanguageFeatures.prototype.registerCodeActionProvider = function (selector, provider) {\r\n            var handle = this._nextHandle();\r\n            this._adapter[handle] = new QuickFixAdapter(this._documents, this._commands, provider);\r\n            this._proxy.$registerQuickFixSupport(handle, selector);\r\n            return this._createDisposable(handle);\r\n        };\r\n        ExtHostLanguageFeatures.prototype.$getQuickFixes = function (handle, resource, range, marker) {\r\n            return this._withAdapter(handle, QuickFixAdapter, function (adapter) { return adapter.getQuickFixes(resource, range, marker); });\r\n        };\r\n        ExtHostLanguageFeatures.prototype.$runQuickFixAction = function (handle, resource, range, quickFix) {\r\n            return this._withAdapter(handle, QuickFixAdapter, function (adapter) { return adapter.runQuickFixAction(resource, range, quickFix); });\r\n        };\r\n        // --- formatting\r\n        ExtHostLanguageFeatures.prototype.registerDocumentFormattingEditProvider = function (selector, provider) {\r\n            var handle = this._nextHandle();\r\n            this._adapter[handle] = new DocumentFormattingAdapter(this._documents, provider);\r\n            this._proxy.$registerDocumentFormattingSupport(handle, selector);\r\n            return this._createDisposable(handle);\r\n        };\r\n        ExtHostLanguageFeatures.prototype.$formatDocument = function (handle, resource, options) {\r\n            return this._withAdapter(handle, DocumentFormattingAdapter, function (adapter) { return adapter.formatDocument(resource, options); });\r\n        };\r\n        ExtHostLanguageFeatures.prototype.registerDocumentRangeFormattingEditProvider = function (selector, provider) {\r\n            var handle = this._nextHandle();\r\n            this._adapter[handle] = new RangeFormattingAdapter(this._documents, provider);\r\n            this._proxy.$registerRangeFormattingSupport(handle, selector);\r\n            return this._createDisposable(handle);\r\n        };\r\n        ExtHostLanguageFeatures.prototype.$formatRange = function (handle, resource, range, options) {\r\n            return this._withAdapter(handle, RangeFormattingAdapter, function (adapter) { return adapter.formatRange(resource, range, options); });\r\n        };\r\n        ExtHostLanguageFeatures.prototype.registerOnTypeFormattingEditProvider = function (selector, provider, triggerCharacters) {\r\n            var handle = this._nextHandle();\r\n            this._adapter[handle] = new OnTypeFormattingAdapter(this._documents, provider);\r\n            this._proxy.$registerOnTypeFormattingSupport(handle, selector, triggerCharacters);\r\n            return this._createDisposable(handle);\r\n        };\r\n        ExtHostLanguageFeatures.prototype.$formatAfterKeystroke = function (handle, resource, position, ch, options) {\r\n            return this._withAdapter(handle, OnTypeFormattingAdapter, function (adapter) { return adapter.formatAfterKeystroke(resource, position, ch, options); });\r\n        };\r\n        // --- navigate types\r\n        ExtHostLanguageFeatures.prototype.registerWorkspaceSymbolProvider = function (provider) {\r\n            var handle = this._nextHandle();\r\n            this._adapter[handle] = new NavigateTypeAdapter(provider);\r\n            this._proxy.$registerNavigateTypeSupport(handle);\r\n            return this._createDisposable(handle);\r\n        };\r\n        ExtHostLanguageFeatures.prototype.$getNavigateToItems = function (handle, search) {\r\n            return this._withAdapter(handle, NavigateTypeAdapter, function (adapter) { return adapter.getNavigateToItems(search); });\r\n        };\r\n        // --- rename\r\n        ExtHostLanguageFeatures.prototype.registerRenameProvider = function (selector, provider) {\r\n            var handle = this._nextHandle();\r\n            this._adapter[handle] = new RenameAdapter(this._documents, provider);\r\n            this._proxy.$registerRenameSupport(handle, selector);\r\n            return this._createDisposable(handle);\r\n        };\r\n        ExtHostLanguageFeatures.prototype.$rename = function (handle, resource, position, newName) {\r\n            return this._withAdapter(handle, RenameAdapter, function (adapter) { return adapter.rename(resource, position, newName); });\r\n        };\r\n        // --- suggestion\r\n        ExtHostLanguageFeatures.prototype.registerCompletionItemProvider = function (selector, provider, triggerCharacters) {\r\n            var handle = this._nextHandle();\r\n            this._adapter[handle] = new SuggestAdapter(this._documents, provider);\r\n            this._proxy.$registerSuggestSupport(handle, selector, triggerCharacters);\r\n            return this._createDisposable(handle);\r\n        };\r\n        ExtHostLanguageFeatures.prototype.$suggest = function (handle, resource, position) {\r\n            return this._withAdapter(handle, SuggestAdapter, function (adapter) { return adapter.suggest(resource, position); });\r\n        };\r\n        ExtHostLanguageFeatures.prototype.$getSuggestionDetails = function (handle, resource, position, suggestion) {\r\n            return this._withAdapter(handle, SuggestAdapter, function (adapter) { return adapter.getSuggestionDetails(resource, position, suggestion); });\r\n        };\r\n        // --- parameter hints\r\n        ExtHostLanguageFeatures.prototype.registerSignatureHelpProvider = function (selector, provider, triggerCharacters) {\r\n            var handle = this._nextHandle();\r\n            this._adapter[handle] = new ParameterHintsAdapter(this._documents, provider);\r\n            this._proxy.$registerParameterHintsSupport(handle, selector, triggerCharacters);\r\n            return this._createDisposable(handle);\r\n        };\r\n        ExtHostLanguageFeatures.prototype.$getParameterHints = function (handle, resource, position, triggerCharacter) {\r\n            return this._withAdapter(handle, ParameterHintsAdapter, function (adapter) { return adapter.getParameterHints(resource, position, triggerCharacter); });\r\n        };\r\n        ExtHostLanguageFeatures._handlePool = 0;\r\n        ExtHostLanguageFeatures = __decorate([\r\n            thread_1.Remotable.PluginHostContext('ExtHostLanguageFeatures'),\r\n            __param(0, thread_1.IThreadService)\r\n        ], ExtHostLanguageFeatures);\r\n        return ExtHostLanguageFeatures;\r\n    })();\r\n    exports.ExtHostLanguageFeatures = ExtHostLanguageFeatures;\r\n    var MainThreadLanguageFeatures = (function () {\r\n        function MainThreadLanguageFeatures(threadService, markerService) {\r\n            this._registrations = Object.create(null);\r\n            this._proxy = threadService.getRemotable(ExtHostLanguageFeatures);\r\n            this._markerService = markerService;\r\n        }\r\n        MainThreadLanguageFeatures.prototype.$unregister = function (handle) {\r\n            var registration = this._registrations[handle];\r\n            if (registration) {\r\n                registration.dispose();\r\n                delete this._registrations[handle];\r\n            }\r\n            return undefined;\r\n        };\r\n        // --- outline\r\n        MainThreadLanguageFeatures.prototype.$registerOutlineSupport = function (handle, selector) {\r\n            var _this = this;\r\n            this._registrations[handle] = quickOpen_1.OutlineRegistry.register(selector, {\r\n                getOutline: function (resource) {\r\n                    return _this._proxy.$getOutline(handle, resource);\r\n                }\r\n            });\r\n            return undefined;\r\n        };\r\n        // --- code lens\r\n        MainThreadLanguageFeatures.prototype.$registerCodeLensSupport = function (handle, selector) {\r\n            var _this = this;\r\n            this._registrations[handle] = codelens_1.CodeLensRegistry.register(selector, {\r\n                findCodeLensSymbols: function (resource) {\r\n                    return _this._proxy.$findCodeLensSymbols(handle, resource);\r\n                },\r\n                resolveCodeLensSymbol: function (resource, symbol) {\r\n                    return _this._proxy.$resolveCodeLensSymbol(handle, resource, symbol);\r\n                }\r\n            });\r\n            return undefined;\r\n        };\r\n        // --- declaration\r\n        MainThreadLanguageFeatures.prototype.$registerDeclaractionSupport = function (handle, selector) {\r\n            var _this = this;\r\n            this._registrations[handle] = goToDeclaration_1.DeclarationRegistry.register(selector, {\r\n                canFindDeclaration: function () {\r\n                    return true;\r\n                },\r\n                findDeclaration: function (resource, position) {\r\n                    return _this._proxy.$findDeclaration(handle, resource, position);\r\n                }\r\n            });\r\n            return undefined;\r\n        };\r\n        // --- extra info\r\n        MainThreadLanguageFeatures.prototype.$registerExtraInfoSupport = function (handle, selector) {\r\n            var _this = this;\r\n            this._registrations[handle] = hover_1.ExtraInfoRegistry.register(selector, {\r\n                computeInfo: function (resource, position) {\r\n                    return _this._proxy.$computeInfo(handle, resource, position);\r\n                }\r\n            });\r\n            return undefined;\r\n        };\r\n        // --- occurrences\r\n        MainThreadLanguageFeatures.prototype.$registerOccurrencesSupport = function (handle, selector) {\r\n            var _this = this;\r\n            this._registrations[handle] = wordHighlighter_1.OccurrencesRegistry.register(selector, {\r\n                findOccurrences: function (resource, position) {\r\n                    return _this._proxy.$findOccurrences(handle, resource, position);\r\n                }\r\n            });\r\n            return undefined;\r\n        };\r\n        // --- references\r\n        MainThreadLanguageFeatures.prototype.$registerReferenceSupport = function (handle, selector) {\r\n            var _this = this;\r\n            this._registrations[handle] = referenceSearch_1.ReferenceRegistry.register(selector, {\r\n                canFindReferences: function () {\r\n                    return true;\r\n                },\r\n                findReferences: function (resource, position, includeDeclaration) {\r\n                    return _this._proxy.$findReferences(handle, resource, position, includeDeclaration);\r\n                }\r\n            });\r\n            return undefined;\r\n        };\r\n        // --- quick fix\r\n        MainThreadLanguageFeatures.prototype.$registerQuickFixSupport = function (handle, selector) {\r\n            var _this = this;\r\n            this._registrations[handle] = quickFix_1.QuickFixRegistry.register(selector, {\r\n                getQuickFixes: function (resource, range) {\r\n                    var markers = [];\r\n                    _this._markerService.read({ resource: resource }).forEach(function (marker) {\r\n                        if (range_1.Range.lift(marker).intersectRanges(range)) {\r\n                            markers.push(marker);\r\n                        }\r\n                    });\r\n                    return _this._proxy.$getQuickFixes(handle, resource, range, markers);\r\n                },\r\n                runQuickFixAction: function (resource, range, quickFix) {\r\n                    return _this._proxy.$runQuickFixAction(handle, resource, range, quickFix);\r\n                }\r\n            });\r\n            return undefined;\r\n        };\r\n        // --- formatting\r\n        MainThreadLanguageFeatures.prototype.$registerDocumentFormattingSupport = function (handle, selector) {\r\n            var _this = this;\r\n            this._registrations[handle] = format_1.FormatRegistry.register(selector, {\r\n                formatDocument: function (resource, options) {\r\n                    return _this._proxy.$formatDocument(handle, resource, options);\r\n                }\r\n            });\r\n            return undefined;\r\n        };\r\n        MainThreadLanguageFeatures.prototype.$registerRangeFormattingSupport = function (handle, selector) {\r\n            var _this = this;\r\n            this._registrations[handle] = format_1.FormatRegistry.register(selector, {\r\n                formatRange: function (resource, range, options) {\r\n                    return _this._proxy.$formatRange(handle, resource, range, options);\r\n                }\r\n            });\r\n            return undefined;\r\n        };\r\n        MainThreadLanguageFeatures.prototype.$registerOnTypeFormattingSupport = function (handle, selector, autoFormatTriggerCharacters) {\r\n            var _this = this;\r\n            this._registrations[handle] = format_1.FormatOnTypeRegistry.register(selector, {\r\n                autoFormatTriggerCharacters: autoFormatTriggerCharacters,\r\n                formatAfterKeystroke: function (resource, position, ch, options) {\r\n                    return _this._proxy.$formatAfterKeystroke(handle, resource, position, ch, options);\r\n                }\r\n            });\r\n            return undefined;\r\n        };\r\n        // --- navigate type\r\n        MainThreadLanguageFeatures.prototype.$registerNavigateTypeSupport = function (handle) {\r\n            var _this = this;\r\n            this._registrations[handle] = search_1.NavigateTypesSupportRegistry.register({\r\n                getNavigateToItems: function (search) {\r\n                    return _this._proxy.$getNavigateToItems(handle, search);\r\n                }\r\n            });\r\n            return undefined;\r\n        };\r\n        // --- rename\r\n        MainThreadLanguageFeatures.prototype.$registerRenameSupport = function (handle, selector) {\r\n            var _this = this;\r\n            this._registrations[handle] = rename_1.RenameRegistry.register(selector, {\r\n                rename: function (resource, position, newName) {\r\n                    return _this._proxy.$rename(handle, resource, position, newName);\r\n                }\r\n            });\r\n            return undefined;\r\n        };\r\n        // --- suggest\r\n        MainThreadLanguageFeatures.prototype.$registerSuggestSupport = function (handle, selector, triggerCharacters) {\r\n            var _this = this;\r\n            this._registrations[handle] = suggest_1.SuggestRegistry.register(selector, {\r\n                suggest: function (resource, position, triggerCharacter) {\r\n                    return _this._proxy.$suggest(handle, resource, position);\r\n                },\r\n                getSuggestionDetails: function (resource, position, suggestion) {\r\n                    return _this._proxy.$getSuggestionDetails(handle, resource, position, suggestion);\r\n                },\r\n                getFilter: function () {\r\n                    return modesFilters_1.DefaultFilter;\r\n                },\r\n                getTriggerCharacters: function () {\r\n                    return triggerCharacters;\r\n                },\r\n                shouldShowEmptySuggestionList: function () {\r\n                    return true;\r\n                },\r\n                shouldAutotriggerSuggest: function () {\r\n                    return true;\r\n                }\r\n            });\r\n            return undefined;\r\n        };\r\n        // --- parameter hints\r\n        MainThreadLanguageFeatures.prototype.$registerParameterHintsSupport = function (handle, selector, triggerCharacter) {\r\n            var _this = this;\r\n            this._registrations[handle] = parameterHints_1.ParameterHintsRegistry.register(selector, {\r\n                getParameterHints: function (resource, position, triggerCharacter) {\r\n                    return _this._proxy.$getParameterHints(handle, resource, position, triggerCharacter);\r\n                },\r\n                getParameterHintsTriggerCharacters: function () {\r\n                    return triggerCharacter;\r\n                },\r\n                shouldTriggerParameterHints: function (context, offset) {\r\n                    return true;\r\n                }\r\n            });\r\n            return undefined;\r\n        };\r\n        MainThreadLanguageFeatures = __decorate([\r\n            thread_1.Remotable.MainContext('MainThreadLanguageFeatures'),\r\n            __param(0, thread_1.IThreadService),\r\n            __param(1, markers_1.IMarkerService)\r\n        ], MainThreadLanguageFeatures);\r\n        return MainThreadLanguageFeatures;\r\n    })();\r\n    exports.MainThreadLanguageFeatures = MainThreadLanguageFeatures;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") return Reflect.decorate(decorators, target, key, desc);\r\n    switch (arguments.length) {\r\n        case 2: return decorators.reduceRight(function(o, d) { return (d && d(o)) || o; }, target);\r\n        case 3: return decorators.reduceRight(function(o, d) { return (d && d(target, key)), void 0; }, void 0);\r\n        case 4: return decorators.reduceRight(function(o, d) { return (d && d(target, key, o)) || o; }, desc);\r\n    }\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\ndefine(\"vs/workbench/api/browser/pluginHost.api.impl\", [\"require\", \"exports\", 'vs/editor/common/modes/languageSelector', 'vs/platform/thread/common/thread', 'vs/base/common/errors', 'vs/workbench/api/common/pluginHostFileSystemEventService', 'vs/workbench/api/common/pluginHostDocuments', 'vs/workbench/api/common/pluginHostConfiguration', 'vs/workbench/api/common/pluginHostDiagnostics', 'vs/workbench/api/common/pluginHostWorkspace', 'vs/workbench/api/browser/pluginHostQuickOpen', 'vs/workbench/api/browser/pluginHostStatusBar', 'vs/workbench/api/common/pluginHostCommands', 'vs/workbench/api/common/extHostOutputService', 'vs/workbench/api/common/pluginHostMessageService', 'vs/workbench/api/common/pluginHostTelemetry', 'vs/workbench/api/common/pluginHostEditors', 'vs/workbench/api/common/extHostLanguages', 'vs/workbench/api/common/extHostLanguageFeatures', 'vs/workbench/api/common/extHostApiCommands', 'vs/workbench/api/common/pluginHostTypes', 'vs/editor/common/modes', 'vs/editor/common/services/modeService', 'vs/base/common/uri', 'vs/base/common/severity', 'vs/editor/common/editorCommon', 'vs/platform/plugins/common/plugins', 'vs/platform/plugins/common/pluginsRegistry', 'vs/platform/workspace/common/workspace', 'vs/base/common/cancellation', 'vs/workbench/api/common/mainThreadEditors', 'vs/base/common/paths', 'vs/workbench/api/common/pluginHostTypes.marshalling'], function (require, exports, languageSelector_1, thread_1, errors, pluginHostFileSystemEventService_1, pluginHostDocuments_1, pluginHostConfiguration_1, pluginHostDiagnostics_1, pluginHostWorkspace_1, pluginHostQuickOpen_1, pluginHostStatusBar_1, pluginHostCommands_1, extHostOutputService_1, pluginHostMessageService_1, pluginHostTelemetry_1, pluginHostEditors_1, extHostLanguages_1, extHostLanguageFeatures_1, extHostApiCommands_1, extHostTypes, Modes, modeService_1, uri_1, severity_1, EditorCommon, plugins_1, pluginsRegistry_1, workspace_1, cancellation_1, mainThreadEditors_1, paths) {\r\n    /**\r\n     * This class implements the API described in vscode.d.ts,\r\n     * for the case of the extensionHost host process\r\n     */\r\n    var PluginHostAPIImplementation = (function () {\r\n        function PluginHostAPIImplementation(threadService, pluginService, contextService) {\r\n            var _this = this;\r\n            this._pluginService = pluginService;\r\n            this._threadService = threadService;\r\n            this._proxy = threadService.getRemotable(MainProcessVSCodeAPIHelper);\r\n            this.version = contextService.getConfiguration().env.version;\r\n            this.Uri = uri_1.default;\r\n            this.Location = extHostTypes.Location;\r\n            this.Diagnostic = extHostTypes.Diagnostic;\r\n            this.DiagnosticSeverity = extHostTypes.DiagnosticSeverity;\r\n            this.Disposable = extHostTypes.Disposable;\r\n            this.TextEdit = extHostTypes.TextEdit;\r\n            this.WorkspaceEdit = extHostTypes.WorkspaceEdit;\r\n            this.Position = extHostTypes.Position;\r\n            this.Range = extHostTypes.Range;\r\n            this.Selection = extHostTypes.Selection;\r\n            this.CancellationTokenSource = cancellation_1.CancellationTokenSource;\r\n            this.Hover = extHostTypes.Hover;\r\n            this.SymbolKind = extHostTypes.SymbolKind;\r\n            this.SymbolInformation = extHostTypes.SymbolInformation;\r\n            this.DocumentHighlightKind = extHostTypes.DocumentHighlightKind;\r\n            this.DocumentHighlight = extHostTypes.DocumentHighlight;\r\n            this.CodeLens = extHostTypes.CodeLens;\r\n            this.ParameterInformation = extHostTypes.ParameterInformation;\r\n            this.SignatureInformation = extHostTypes.SignatureInformation;\r\n            this.SignatureHelp = extHostTypes.SignatureHelp;\r\n            this.CompletionItem = extHostTypes.CompletionItem;\r\n            this.CompletionItemKind = extHostTypes.CompletionItemKind;\r\n            this.ViewColumn = extHostTypes.ViewColumn;\r\n            this.StatusBarAlignment = extHostTypes.StatusBarAlignment;\r\n            this.IndentAction = Modes.IndentAction;\r\n            this.OverviewRulerLane = EditorCommon.OverviewRulerLane;\r\n            this.TextEditorRevealType = mainThreadEditors_1.TextEditorRevealType;\r\n            errors.setUnexpectedErrorHandler(function (err) {\r\n                _this._proxy.onUnexpectedPluginHostError(errors.transformErrorForSerialization(err));\r\n            });\r\n            var pluginHostCommands = this._threadService.getRemotable(pluginHostCommands_1.PluginHostCommands);\r\n            this.commands = {\r\n                registerCommand: function (id, command, thisArgs) {\r\n                    return pluginHostCommands.registerCommand(id, command, thisArgs);\r\n                },\r\n                registerTextEditorCommand: function (commandId, callback, thisArg) {\r\n                    return pluginHostCommands.registerTextEditorCommand(commandId, callback, thisArg);\r\n                },\r\n                executeCommand: function (id) {\r\n                    var args = [];\r\n                    for (var _i = 1; _i < arguments.length; _i++) {\r\n                        args[_i - 1] = arguments[_i];\r\n                    }\r\n                    return pluginHostCommands.executeCommand(id, args);\r\n                },\r\n                getCommands: function (filterInternal) {\r\n                    if (filterInternal === void 0) { filterInternal = false; }\r\n                    return pluginHostCommands.getCommands(filterInternal);\r\n                }\r\n            };\r\n            var pluginHostEditors = this._threadService.getRemotable(pluginHostEditors_1.PluginHostEditors);\r\n            var pluginHostMessageService = new pluginHostMessageService_1.PluginHostMessageService(this._threadService, this.commands);\r\n            var pluginHostQuickOpen = new pluginHostQuickOpen_1.PluginHostQuickOpen(this._threadService);\r\n            var pluginHostStatusBar = new pluginHostStatusBar_1.PluginHostStatusBar(this._threadService);\r\n            var pluginHostTelemetryService = new pluginHostTelemetry_1.PluginHostTelemetryService(threadService);\r\n            var extHostOutputService = new extHostOutputService_1.ExtHostOutputService(this._threadService);\r\n            this.window = {\r\n                get activeTextEditor() {\r\n                    return pluginHostEditors.getActiveTextEditor();\r\n                },\r\n                get visibleTextEditors() {\r\n                    return pluginHostEditors.getVisibleTextEditors();\r\n                },\r\n                showTextDocument: function (document, column) {\r\n                    return pluginHostEditors.showTextDocument(document, column);\r\n                },\r\n                createTextEditorDecorationType: function (options) {\r\n                    return pluginHostEditors.createTextEditorDecorationType(options);\r\n                },\r\n                onDidChangeActiveTextEditor: pluginHostEditors.onDidChangeActiveTextEditor.bind(pluginHostEditors),\r\n                onDidChangeTextEditorSelection: function (listener, thisArgs, disposables) {\r\n                    return pluginHostEditors.onDidChangeTextEditorSelection(listener, thisArgs, disposables);\r\n                },\r\n                onDidChangeTextEditorOptions: function (listener, thisArgs, disposables) {\r\n                    return pluginHostEditors.onDidChangeTextEditorOptions(listener, thisArgs, disposables);\r\n                },\r\n                showInformationMessage: function (message) {\r\n                    var items = [];\r\n                    for (var _i = 1; _i < arguments.length; _i++) {\r\n                        items[_i - 1] = arguments[_i];\r\n                    }\r\n                    return pluginHostMessageService.showMessage(severity_1.default.Info, message, items);\r\n                },\r\n                showWarningMessage: function (message) {\r\n                    var items = [];\r\n                    for (var _i = 1; _i < arguments.length; _i++) {\r\n                        items[_i - 1] = arguments[_i];\r\n                    }\r\n                    return pluginHostMessageService.showMessage(severity_1.default.Warning, message, items);\r\n                },\r\n                showErrorMessage: function (message) {\r\n                    var items = [];\r\n                    for (var _i = 1; _i < arguments.length; _i++) {\r\n                        items[_i - 1] = arguments[_i];\r\n                    }\r\n                    return pluginHostMessageService.showMessage(severity_1.default.Error, message, items);\r\n                },\r\n                showQuickPick: function (items, options) {\r\n                    return pluginHostQuickOpen.show(items, options);\r\n                },\r\n                showInputBox: pluginHostQuickOpen.input.bind(pluginHostQuickOpen),\r\n                createStatusBarItem: function (position, priority) {\r\n                    return pluginHostStatusBar.createStatusBarEntry(position, priority);\r\n                },\r\n                setStatusBarMessage: function (text, timeoutOrThenable) {\r\n                    return pluginHostStatusBar.setStatusBarMessage(text, timeoutOrThenable);\r\n                },\r\n                createOutputChannel: function (name) {\r\n                    return extHostOutputService.createOutputChannel(name);\r\n                }\r\n            };\r\n            //\r\n            var workspacePath = contextService.getWorkspace() ? contextService.getWorkspace().resource.fsPath : undefined;\r\n            var pluginHostFileSystemEvent = threadService.getRemotable(pluginHostFileSystemEventService_1.PluginHostFileSystemEventService);\r\n            var pluginHostWorkspace = new pluginHostWorkspace_1.PluginHostWorkspace(this._threadService, workspacePath);\r\n            var pluginHostDocuments = this._threadService.getRemotable(pluginHostDocuments_1.PluginHostModelService);\r\n            this.workspace = Object.freeze({\r\n                get rootPath() {\r\n                    return pluginHostWorkspace.getPath();\r\n                },\r\n                set rootPath(value) {\r\n                    throw errors.readonly();\r\n                },\r\n                asRelativePath: function (pathOrUri) {\r\n                    return pluginHostWorkspace.getRelativePath(pathOrUri);\r\n                },\r\n                findFiles: function (include, exclude, maxResults) {\r\n                    return pluginHostWorkspace.findFiles(include, exclude, maxResults);\r\n                },\r\n                saveAll: function (includeUntitled) {\r\n                    return pluginHostWorkspace.saveAll(includeUntitled);\r\n                },\r\n                applyEdit: function (edit) {\r\n                    return pluginHostWorkspace.appyEdit(edit);\r\n                },\r\n                createFileSystemWatcher: function (pattern, ignoreCreate, ignoreChange, ignoreDelete) {\r\n                    return pluginHostFileSystemEvent.createFileSystemWatcher(pattern, ignoreCreate, ignoreChange, ignoreDelete);\r\n                },\r\n                get textDocuments() {\r\n                    return pluginHostDocuments.getDocuments();\r\n                },\r\n                set textDocuments(value) {\r\n                    throw errors.readonly();\r\n                },\r\n                // createTextDocument(text: string, fileName?: string, language?: string): Thenable<vscode.TextDocument> {\r\n                // \treturn pluginHostDocuments.createDocument(text, fileName, language);\r\n                // },\r\n                openTextDocument: function (uriOrFileName) {\r\n                    return pluginHostDocuments.openDocument(uriOrFileName);\r\n                },\r\n                onDidOpenTextDocument: function (listener, thisArgs, disposables) {\r\n                    return pluginHostDocuments.onDidAddDocument(listener, thisArgs, disposables);\r\n                },\r\n                onDidCloseTextDocument: function (listener, thisArgs, disposables) {\r\n                    return pluginHostDocuments.onDidRemoveDocument(listener, thisArgs, disposables);\r\n                },\r\n                onDidChangeTextDocument: function (listener, thisArgs, disposables) {\r\n                    return pluginHostDocuments.onDidChangeDocument(listener, thisArgs, disposables);\r\n                },\r\n                onDidSaveTextDocument: function (listener, thisArgs, disposables) {\r\n                    return pluginHostDocuments.onDidSaveDocument(listener, thisArgs, disposables);\r\n                },\r\n                onDidChangeConfiguration: function (listener, thisArgs, disposables) {\r\n                    return pluginHostConfiguration.onDidChangeConfiguration(listener, thisArgs, disposables);\r\n                },\r\n                getConfiguration: function (section) {\r\n                    return pluginHostConfiguration.getConfiguration(section);\r\n                }\r\n            });\r\n            //\r\n            var languages = new extHostLanguages_1.ExtHostLanguages(this._threadService);\r\n            var pluginHostDiagnostics = new pluginHostDiagnostics_1.PluginHostDiagnostics(this._threadService);\r\n            var languageFeatures = threadService.getRemotable(extHostLanguageFeatures_1.ExtHostLanguageFeatures);\r\n            var languageFeatureCommand = new extHostApiCommands_1.ExtHostApiCommands(threadService.getRemotable(pluginHostCommands_1.PluginHostCommands));\r\n            this.languages = {\r\n                createDiagnosticCollection: function (name) {\r\n                    return pluginHostDiagnostics.createDiagnosticCollection(name);\r\n                },\r\n                getLanguages: function () {\r\n                    return languages.getLanguages();\r\n                },\r\n                match: function (selector, document) {\r\n                    return languageSelector_1.score(selector, document.uri, document.languageId);\r\n                },\r\n                registerCodeActionsProvider: function (selector, provider) {\r\n                    return languageFeatures.registerCodeActionProvider(selector, provider);\r\n                },\r\n                registerCodeLensProvider: function (selector, provider) {\r\n                    return languageFeatures.registerCodeLensProvider(selector, provider);\r\n                },\r\n                registerDefinitionProvider: function (selector, provider) {\r\n                    return languageFeatures.registerDefinitionProvider(selector, provider);\r\n                },\r\n                registerHoverProvider: function (selector, provider) {\r\n                    return languageFeatures.registerHoverProvider(selector, provider);\r\n                },\r\n                registerDocumentHighlightProvider: function (selector, provider) {\r\n                    return languageFeatures.registerDocumentHighlightProvider(selector, provider);\r\n                },\r\n                registerReferenceProvider: function (selector, provider) {\r\n                    return languageFeatures.registerReferenceProvider(selector, provider);\r\n                },\r\n                registerRenameProvider: function (selector, provider) {\r\n                    return languageFeatures.registerRenameProvider(selector, provider);\r\n                },\r\n                registerDocumentSymbolProvider: function (selector, provider) {\r\n                    return languageFeatures.registerDocumentSymbolProvider(selector, provider);\r\n                },\r\n                registerWorkspaceSymbolProvider: function (provider) {\r\n                    return languageFeatures.registerWorkspaceSymbolProvider(provider);\r\n                },\r\n                registerDocumentFormattingEditProvider: function (selector, provider) {\r\n                    return languageFeatures.registerDocumentFormattingEditProvider(selector, provider);\r\n                },\r\n                registerDocumentRangeFormattingEditProvider: function (selector, provider) {\r\n                    return languageFeatures.registerDocumentRangeFormattingEditProvider(selector, provider);\r\n                },\r\n                registerOnTypeFormattingEditProvider: function (selector, provider, firstTriggerCharacter) {\r\n                    var moreTriggerCharacters = [];\r\n                    for (var _i = 3; _i < arguments.length; _i++) {\r\n                        moreTriggerCharacters[_i - 3] = arguments[_i];\r\n                    }\r\n                    return languageFeatures.registerOnTypeFormattingEditProvider(selector, provider, [firstTriggerCharacter].concat(moreTriggerCharacters));\r\n                },\r\n                registerSignatureHelpProvider: function (selector, provider) {\r\n                    var triggerCharacters = [];\r\n                    for (var _i = 2; _i < arguments.length; _i++) {\r\n                        triggerCharacters[_i - 2] = arguments[_i];\r\n                    }\r\n                    return languageFeatures.registerSignatureHelpProvider(selector, provider, triggerCharacters);\r\n                },\r\n                registerCompletionItemProvider: function (selector, provider) {\r\n                    var triggerCharacters = [];\r\n                    for (var _i = 2; _i < arguments.length; _i++) {\r\n                        triggerCharacters[_i - 2] = arguments[_i];\r\n                    }\r\n                    return languageFeatures.registerCompletionItemProvider(selector, provider, triggerCharacters);\r\n                },\r\n                setLanguageConfiguration: function (language, configuration) {\r\n                    return _this._setLanguageConfiguration(language, configuration);\r\n                }\r\n            };\r\n            var pluginHostConfiguration = threadService.getRemotable(pluginHostConfiguration_1.PluginHostConfiguration);\r\n            //\r\n            this.extensions = {\r\n                getExtension: function (extensionId) {\r\n                    var desc = pluginsRegistry_1.PluginsRegistry.getPluginDescription(extensionId);\r\n                    if (desc) {\r\n                        return new Extension(pluginService, desc);\r\n                    }\r\n                },\r\n                get all() {\r\n                    return pluginsRegistry_1.PluginsRegistry.getAllPluginDescriptions().map(function (desc) { return new Extension(pluginService, desc); });\r\n                }\r\n            };\r\n            // Intentionally calling a function for typechecking purposes\r\n            defineAPI(this);\r\n        }\r\n        PluginHostAPIImplementation.generateDisposeToken = function () {\r\n            return String(++PluginHostAPIImplementation._LAST_REGISTER_TOKEN);\r\n        };\r\n        PluginHostAPIImplementation.prototype._disposableFromToken = function (disposeToken) {\r\n            var _this = this;\r\n            return new extHostTypes.Disposable(function () { return _this._proxy.disposeByToken(disposeToken); });\r\n        };\r\n        PluginHostAPIImplementation.prototype._setLanguageConfiguration = function (modeId, configuration) {\r\n            var disposables = [];\r\n            var comments = configuration.comments, wordPattern = configuration.wordPattern;\r\n            // comment configuration\r\n            if (comments) {\r\n                var lineCommentToken = comments.lineComment;\r\n                var contrib = { commentsConfiguration: {} };\r\n                if (comments.lineComment) {\r\n                    contrib.commentsConfiguration.lineCommentTokens = [comments.lineComment];\r\n                }\r\n                if (comments.blockComment) {\r\n                    var _a = comments.blockComment, blockStart = _a[0], blockEnd = _a[1];\r\n                    contrib.commentsConfiguration.blockCommentStartToken = blockStart;\r\n                    contrib.commentsConfiguration.blockCommentEndToken = blockEnd;\r\n                }\r\n                var d = this.Modes_CommentsSupport_register(modeId, contrib);\r\n                disposables.push(d);\r\n            }\r\n            // word definition\r\n            if (wordPattern) {\r\n                pluginHostDocuments_1.setWordDefinitionFor(modeId, wordPattern);\r\n                var d = this.Modes_TokenTypeClassificationSupport_register(modeId, {\r\n                    wordDefinition: wordPattern\r\n                });\r\n                disposables.push(d);\r\n            }\r\n            else {\r\n                pluginHostDocuments_1.setWordDefinitionFor(modeId, null);\r\n            }\r\n            // on enter\r\n            var onEnter = {};\r\n            var empty = true;\r\n            var brackets = configuration.brackets, indentationRules = configuration.indentationRules, onEnterRules = configuration.onEnterRules;\r\n            if (brackets) {\r\n                empty = false;\r\n                onEnter.brackets = brackets.map(function (pair) {\r\n                    var open = pair[0], close = pair[1];\r\n                    return { open: open, close: close };\r\n                });\r\n            }\r\n            if (indentationRules) {\r\n                empty = false;\r\n                onEnter.indentationRules = indentationRules;\r\n            }\r\n            if (onEnterRules) {\r\n                empty = false;\r\n                onEnter.regExpRules = onEnterRules;\r\n            }\r\n            if (!empty) {\r\n                var d = this.Modes_OnEnterSupport_register(modeId, onEnter);\r\n                disposables.push(d);\r\n            }\r\n            if (configuration.__electricCharacterSupport) {\r\n                disposables.push(this.Modes_ElectricCharacterSupport_register(modeId, configuration.__electricCharacterSupport));\r\n            }\r\n            if (configuration.__characterPairSupport) {\r\n                disposables.push(this.Modes_CharacterPairSupport_register(modeId, configuration.__characterPairSupport));\r\n            }\r\n            return (_b = extHostTypes.Disposable).from.apply(_b, disposables);\r\n            var _b;\r\n        };\r\n        PluginHostAPIImplementation.prototype.Modes_CommentsSupport_register = function (modeId, commentsSupport) {\r\n            var disposeToken = PluginHostAPIImplementation.generateDisposeToken();\r\n            this._proxy.Modes_CommentsSupport_register(disposeToken, modeId, commentsSupport);\r\n            return this._disposableFromToken(disposeToken);\r\n        };\r\n        PluginHostAPIImplementation.prototype.Modes_TokenTypeClassificationSupport_register = function (modeId, tokenTypeClassificationSupport) {\r\n            var disposeToken = PluginHostAPIImplementation.generateDisposeToken();\r\n            this._proxy.Modes_TokenTypeClassificationSupport_register(disposeToken, modeId, tokenTypeClassificationSupport);\r\n            return this._disposableFromToken(disposeToken);\r\n        };\r\n        PluginHostAPIImplementation.prototype.Modes_ElectricCharacterSupport_register = function (modeId, electricCharacterSupport) {\r\n            var disposeToken = PluginHostAPIImplementation.generateDisposeToken();\r\n            this._proxy.Modes_ElectricCharacterSupport_register(disposeToken, modeId, electricCharacterSupport);\r\n            return this._disposableFromToken(disposeToken);\r\n        };\r\n        PluginHostAPIImplementation.prototype.Modes_CharacterPairSupport_register = function (modeId, characterPairSupport) {\r\n            var disposeToken = PluginHostAPIImplementation.generateDisposeToken();\r\n            this._proxy.Modes_CharacterPairSupport_register(disposeToken, modeId, characterPairSupport);\r\n            return this._disposableFromToken(disposeToken);\r\n        };\r\n        PluginHostAPIImplementation.prototype.Modes_OnEnterSupport_register = function (modeId, opts) {\r\n            var disposeToken = PluginHostAPIImplementation.generateDisposeToken();\r\n            this._proxy.Modes_OnEnterSupport_register(disposeToken, modeId, opts);\r\n            return this._disposableFromToken(disposeToken);\r\n        };\r\n        PluginHostAPIImplementation._LAST_REGISTER_TOKEN = 0;\r\n        PluginHostAPIImplementation = __decorate([\r\n            __param(0, thread_1.IThreadService),\r\n            __param(1, plugins_1.IPluginService),\r\n            __param(2, workspace_1.IWorkspaceContextService)\r\n        ], PluginHostAPIImplementation);\r\n        return PluginHostAPIImplementation;\r\n    })();\r\n    exports.PluginHostAPIImplementation = PluginHostAPIImplementation;\r\n    var Extension = (function () {\r\n        function Extension(pluginService, description) {\r\n            this._pluginService = pluginService;\r\n            this.id = description.id;\r\n            this.extensionPath = paths.normalize(description.extensionFolderPath, true);\r\n            this.packageJSON = description;\r\n        }\r\n        Object.defineProperty(Extension.prototype, \"isActive\", {\r\n            get: function () {\r\n                return this._pluginService.isActivated(this.id);\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Extension.prototype, \"exports\", {\r\n            get: function () {\r\n                return this._pluginService.get(this.id);\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Extension.prototype.activate = function () {\r\n            return this._pluginService.activateAndGet(this.id);\r\n        };\r\n        return Extension;\r\n    })();\r\n    function defineAPI(impl) {\r\n        var node_module = require.__$__nodeRequire('module');\r\n        var original = node_module._load;\r\n        node_module._load = function load(request, parent, isMain) {\r\n            if (request === 'vscode') {\r\n                return impl;\r\n            }\r\n            return original.apply(this, arguments);\r\n        };\r\n        define('vscode', [], impl);\r\n    }\r\n    var MainProcessVSCodeAPIHelper = (function () {\r\n        function MainProcessVSCodeAPIHelper(modeService) {\r\n            this._modeService = modeService;\r\n            this._token2Dispose = {};\r\n        }\r\n        MainProcessVSCodeAPIHelper.prototype.onUnexpectedPluginHostError = function (err) {\r\n            errors.onUnexpectedError(err);\r\n        };\r\n        MainProcessVSCodeAPIHelper.prototype.disposeByToken = function (disposeToken) {\r\n            if (this._token2Dispose[disposeToken]) {\r\n                this._token2Dispose[disposeToken].dispose();\r\n                delete this._token2Dispose[disposeToken];\r\n            }\r\n        };\r\n        MainProcessVSCodeAPIHelper.prototype.Modes_CommentsSupport_register = function (disposeToken, modeId, commentsSupport) {\r\n            this._token2Dispose[disposeToken] = this._modeService.registerDeclarativeCommentsSupport(modeId, commentsSupport);\r\n        };\r\n        MainProcessVSCodeAPIHelper.prototype.Modes_TokenTypeClassificationSupport_register = function (disposeToken, modeId, tokenTypeClassificationSupport) {\r\n            this._token2Dispose[disposeToken] = this._modeService.registerDeclarativeTokenTypeClassificationSupport(modeId, tokenTypeClassificationSupport);\r\n        };\r\n        MainProcessVSCodeAPIHelper.prototype.Modes_ElectricCharacterSupport_register = function (disposeToken, modeId, electricCharacterSupport) {\r\n            this._token2Dispose[disposeToken] = this._modeService.registerDeclarativeElectricCharacterSupport(modeId, electricCharacterSupport);\r\n        };\r\n        MainProcessVSCodeAPIHelper.prototype.Modes_CharacterPairSupport_register = function (disposeToken, modeId, characterPairSupport) {\r\n            this._token2Dispose[disposeToken] = this._modeService.registerDeclarativeCharacterPairSupport(modeId, characterPairSupport);\r\n        };\r\n        MainProcessVSCodeAPIHelper.prototype.Modes_OnEnterSupport_register = function (disposeToken, modeId, opts) {\r\n            this._token2Dispose[disposeToken] = this._modeService.registerDeclarativeOnEnterSupport(modeId, opts);\r\n        };\r\n        MainProcessVSCodeAPIHelper = __decorate([\r\n            thread_1.Remotable.MainContext('MainProcessVSCodeAPIHelper'),\r\n            __param(0, modeService_1.IModeService)\r\n        ], MainProcessVSCodeAPIHelper);\r\n        return MainProcessVSCodeAPIHelper;\r\n    })();\r\n    exports.MainProcessVSCodeAPIHelper = MainProcessVSCodeAPIHelper;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\ndefine(\"vs/workbench/services/workspace/common/contextService\", [\"require\", \"exports\", 'vs/base/common/types', 'vs/workbench/common/events', 'vs/platform/instantiation/common/instantiation', 'vs/platform/workspace/common/baseWorkspaceContextService'], function (require, exports, types, events_1, instantiation_1, baseWorkspaceContextService_1) {\r\n    exports.IWorkspaceContextService = instantiation_1.createDecorator('contextService');\r\n    var WorkspaceContextService = (function (_super) {\r\n        __extends(WorkspaceContextService, _super);\r\n        function WorkspaceContextService(eventService, workspace, configuration, options) {\r\n            if (options === void 0) { options = {}; }\r\n            _super.call(this, workspace, configuration, options);\r\n            this.eventService = eventService;\r\n            this.serviceId = exports.IWorkspaceContextService;\r\n        }\r\n        WorkspaceContextService.prototype.updateOptions = function (key, value) {\r\n            var oldValue = this.options[key];\r\n            this.options[key] = value;\r\n            this.eventService.emit(events_1.EventType.WORKBENCH_OPTIONS_CHANGED, new events_1.OptionsChangeEvent(key, oldValue, value));\r\n        };\r\n        WorkspaceContextService.prototype.isAutoSaveEnabled = function () {\r\n            var autoSaveEnabled = true;\r\n            if (this.options && types.isNumber(this.options.autoSaveDelay)) {\r\n                autoSaveEnabled = (this.options.autoSaveDelay !== -1);\r\n            }\r\n            return autoSaveEnabled;\r\n        };\r\n        return WorkspaceContextService;\r\n    })(baseWorkspaceContextService_1.BaseWorkspaceContextService);\r\n    exports.WorkspaceContextService = WorkspaceContextService;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\ndefine(\"vs/base/node/zip\", [\"require\", \"exports\", 'vs/nls!vs/base/node/zip', 'path', 'fs', 'vs/base/common/async', 'vs/base/node/pfs', 'vs/base/common/winjs.base', 'yauzl'], function (require, exports, nls, path, fs_1, async_1, pfs_1, winjs_base_1, yauzl_1) {\r\n    function modeFromEntry(entry) {\r\n        var attr = entry.externalFileAttributes >> 16 || 33188;\r\n        return [448 /* S_IRWXU */, 56 /* S_IRWXG */, 7 /* S_IRWXO */]\r\n            .map(function (mask) { return attr & mask; })\r\n            .reduce(function (a, b) { return a + b; }, attr & 61440 /* S_IFMT */);\r\n    }\r\n    function extractEntry(zipfile, entry, targetPath, options) {\r\n        var fileName = entry.fileName.replace(options.sourcePathRegex, '');\r\n        var dirName = path.dirname(fileName);\r\n        var targetDirName = path.join(targetPath, dirName);\r\n        var targetFileName = path.join(targetPath, fileName);\r\n        var mode = modeFromEntry(entry);\r\n        return async_1.ninvoke(zipfile, zipfile.openReadStream, entry)\r\n            .then(function (ostream) { return pfs_1.mkdirp(targetDirName)\r\n            .then(function () { return new winjs_base_1.Promise(function (c, e) {\r\n            var istream = fs_1.createWriteStream(targetFileName, { mode: mode });\r\n            istream.once('finish', function () { return c(null); });\r\n            istream.once('error', e);\r\n            ostream.once('error', e);\r\n            ostream.pipe(istream);\r\n        }); }); });\r\n    }\r\n    function extractZip(zipfile, targetPath, options) {\r\n        return new winjs_base_1.Promise(function (c, e) {\r\n            var promises = [];\r\n            zipfile.once('error', e);\r\n            zipfile.on('entry', function (entry) {\r\n                if (!options.sourcePathRegex.test(entry.fileName)) {\r\n                    return;\r\n                }\r\n                promises.push(extractEntry(zipfile, entry, targetPath, options));\r\n            });\r\n            zipfile.once('close', function () { return winjs_base_1.Promise.join(promises).done(c, e); });\r\n        });\r\n    }\r\n    function extract(zipPath, targetPath, options) {\r\n        var sourcePathRegex = new RegExp(options.sourcePath ? \"^\" + options.sourcePath : '');\r\n        var promise = async_1.nfcall(yauzl_1.open, zipPath);\r\n        if (options.overwrite) {\r\n            promise = promise.then(function (zipfile) { pfs_1.rimraf(targetPath); return zipfile; });\r\n        }\r\n        return promise.then(function (zipfile) { return extractZip(zipfile, targetPath, { sourcePathRegex: sourcePathRegex }); });\r\n    }\r\n    exports.extract = extract;\r\n    function read(zipPath, filePath) {\r\n        return async_1.nfcall(yauzl_1.open, zipPath).then(function (zipfile) {\r\n            return new winjs_base_1.TPromise(function (c, e) {\r\n                zipfile.on('entry', function (entry) {\r\n                    if (entry.fileName === filePath) {\r\n                        async_1.ninvoke(zipfile, zipfile.openReadStream, entry).done(function (stream) { return c(stream); }, function (err) { return e(err); });\r\n                    }\r\n                });\r\n                zipfile.once('close', function () { return e(new Error(nls.localize(0, null, filePath))); });\r\n            });\r\n        });\r\n    }\r\n    function buffer(zipPath, filePath) {\r\n        return read(zipPath, filePath).then(function (stream) {\r\n            return new winjs_base_1.TPromise(function (c, e) {\r\n                var buffers = [];\r\n                stream.once('error', e);\r\n                stream.on('data', function (b) { return buffers.push(b); });\r\n                stream.on('end', function () { return c(Buffer.concat(buffers)); });\r\n            });\r\n        });\r\n    }\r\n    exports.buffer = buffer;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") return Reflect.decorate(decorators, target, key, desc);\r\n    switch (arguments.length) {\r\n        case 2: return decorators.reduceRight(function(o, d) { return (d && d(o)) || o; }, target);\r\n        case 3: return decorators.reduceRight(function(o, d) { return (d && d(target, key)), void 0; }, void 0);\r\n        case 4: return decorators.reduceRight(function(o, d) { return (d && d(target, key, o)) || o; }, desc);\r\n    }\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\ndefine(\"vs/workbench/parts/extensions/node/extensionsService\", [\"require\", \"exports\", 'vs/nls!vs/workbench/parts/extensions/node/extensionsService', 'os', 'path', 'vs/base/common/types', 'vs/base/common/service', 'vs/base/node/pfs', 'vs/base/common/objects', 'vs/base/common/arrays', 'vs/base/node/zip', 'vs/base/common/winjs.base', 'vs/workbench/parts/extensions/common/extensions', 'vs/base/node/request', 'vs/workbench/node/proxy', 'vs/workbench/services/workspace/common/contextService', 'vs/base/common/async', 'vs/base/common/event', 'vs/workbench/node/userSettings', 'semver', 'vs/base/common/collections'], function (require, exports, nls, os_1, path, types, service_1, pfs, objects_1, arrays_1, zip_1, winjs_base_1, extensions_1, request_1, proxy_1, contextService_1, async_1, event_1, userSettings_1, semver, collections_1) {\r\n    function parseManifest(raw) {\r\n        return new winjs_base_1.Promise(function (c, e) {\r\n            try {\r\n                c(JSON.parse(raw));\r\n            }\r\n            catch (err) {\r\n                e(new Error(nls.localize(0, null)));\r\n            }\r\n        });\r\n    }\r\n    function validate(zipPath, extension) {\r\n        return zip_1.buffer(zipPath, 'extension/package.json')\r\n            .then(function (buffer) { return parseManifest(buffer.toString('utf8')); })\r\n            .then(function (manifest) {\r\n            if (extension) {\r\n                if (extension.name !== manifest.name) {\r\n                    return winjs_base_1.Promise.wrapError(Error(nls.localize(1, null)));\r\n                }\r\n                if (extension.publisher !== manifest.publisher) {\r\n                    return winjs_base_1.Promise.wrapError(Error(nls.localize(2, null)));\r\n                }\r\n                if (extension.version !== manifest.version) {\r\n                    return winjs_base_1.Promise.wrapError(Error(nls.localize(3, null)));\r\n                }\r\n            }\r\n            return winjs_base_1.Promise.as(manifest);\r\n        });\r\n    }\r\n    function createExtension(manifest, galleryInformation, path) {\r\n        var extension = {\r\n            name: manifest.name,\r\n            displayName: manifest.displayName || manifest.name,\r\n            publisher: manifest.publisher,\r\n            version: manifest.version,\r\n            description: manifest.description || ''\r\n        };\r\n        if (galleryInformation) {\r\n            extension.galleryInformation = galleryInformation;\r\n        }\r\n        if (path) {\r\n            extension.path = path;\r\n        }\r\n        return extension;\r\n    }\r\n    var ExtensionsService = (function () {\r\n        function ExtensionsService(contextService) {\r\n            this.contextService = contextService;\r\n            this.serviceId = extensions_1.IExtensionsService;\r\n            this._onInstallExtension = new event_1.Emitter();\r\n            this.onInstallExtension = this._onInstallExtension.event;\r\n            this._onDidInstallExtension = new event_1.Emitter();\r\n            this.onDidInstallExtension = this._onDidInstallExtension.event;\r\n            this._onUninstallExtension = new event_1.Emitter();\r\n            this.onUninstallExtension = this._onUninstallExtension.event;\r\n            this._onDidUninstallExtension = new event_1.Emitter();\r\n            this.onDidUninstallExtension = this._onDidUninstallExtension.event;\r\n            var env = contextService.getConfiguration().env;\r\n            this.extensionsPath = env.userPluginsHome;\r\n        }\r\n        ExtensionsService.prototype.install = function (arg) {\r\n            if (types.isString(arg)) {\r\n                return this.installFromZip(arg);\r\n            }\r\n            return this.installFromGallery(arg);\r\n        };\r\n        ExtensionsService.prototype.installFromGallery = function (extension) {\r\n            var _this = this;\r\n            var galleryInformation = extension.galleryInformation;\r\n            if (!galleryInformation) {\r\n                return winjs_base_1.TPromise.wrapError(new Error(nls.localize(4, null)));\r\n            }\r\n            var url = galleryInformation.downloadUrl;\r\n            var zipPath = path.join(os_1.tmpdir(), galleryInformation.id);\r\n            var extensionPath = path.join(this.extensionsPath, extension.publisher + \".\" + extension.name + \"-\" + extension.version);\r\n            var manifestPath = path.join(extensionPath, 'package.json');\r\n            var settings = winjs_base_1.TPromise.join([\r\n                userSettings_1.UserSettings.getValue(this.contextService, 'http.proxy'),\r\n                userSettings_1.UserSettings.getValue(this.contextService, 'http.proxy.strictSSL')\r\n            ]);\r\n            return settings\r\n                .then(function (settings) { return ({ proxyUrl: settings[0], strictSSL: settings[1] }); })\r\n                .then(function (options) { return proxy_1.getProxyAgent(url, options); })\r\n                .then(function (agent) { return request_1.download(zipPath, { url: url, agent: agent }); })\r\n                .then(function () { return validate(zipPath, extension); })\r\n                .then(function (manifest) { _this._onInstallExtension.fire(manifest); return manifest; })\r\n                .then(function (manifest) { return zip_1.extract(zipPath, extensionPath, { sourcePath: 'extension', overwrite: true }).then(function () { return manifest; }); })\r\n                .then(function (manifest) {\r\n                manifest = objects_1.assign({ __metadata: galleryInformation }, manifest);\r\n                return pfs.writeFile(manifestPath, JSON.stringify(manifest, null, '\\t'));\r\n            })\r\n                .then(function () { _this._onDidInstallExtension.fire(extension); return extension; });\r\n        };\r\n        ExtensionsService.prototype.installFromZip = function (zipPath) {\r\n            var _this = this;\r\n            return validate(zipPath).then(function (manifest) {\r\n                var extensionPath = path.join(_this.extensionsPath, manifest.publisher + \".\" + manifest.name + \"-\" + manifest.version);\r\n                _this._onInstallExtension.fire(manifest);\r\n                return zip_1.extract(zipPath, extensionPath, { sourcePath: 'extension', overwrite: true })\r\n                    .then(function () { return createExtension(manifest, manifest.__metadata, extensionPath); })\r\n                    .then(function (extension) { _this._onDidInstallExtension.fire(extension); return extension; });\r\n            });\r\n        };\r\n        ExtensionsService.prototype.uninstall = function (extension) {\r\n            var _this = this;\r\n            var extensionPath = this.getInstallationPath(extension);\r\n            return pfs.exists(extensionPath)\r\n                .then(function (exists) { return exists ? null : winjs_base_1.Promise.wrapError(new Error(nls.localize(5, null))); })\r\n                .then(function () { return _this._onUninstallExtension.fire(extension); })\r\n                .then(function () { return pfs.rimraf(extensionPath); })\r\n                .then(function () { return _this._onDidUninstallExtension.fire(extension); });\r\n        };\r\n        ExtensionsService.prototype.getInstalled = function (includeDuplicateVersions) {\r\n            if (includeDuplicateVersions === void 0) { includeDuplicateVersions = false; }\r\n            var all = this.getAllInstalled();\r\n            if (includeDuplicateVersions) {\r\n                return all;\r\n            }\r\n            return all.then(function (plugins) {\r\n                var byId = collections_1.values(collections_1.groupBy(plugins, function (p) { return (p.publisher + \".\" + p.name); }));\r\n                return byId.map(function (p) { return p.sort(function (a, b) { return semver.rcompare(a.version, b.version); })[0]; });\r\n            });\r\n        };\r\n        ExtensionsService.prototype.getDeprecated = function () {\r\n            return this.getAllInstalled().then(function (plugins) {\r\n                var byId = collections_1.values(collections_1.groupBy(plugins, function (p) { return (p.publisher + \".\" + p.name); }));\r\n                return arrays_1.flatten(byId.map(function (p) { return p.sort(function (a, b) { return semver.rcompare(a.version, b.version); }).slice(1); }));\r\n            });\r\n        };\r\n        ExtensionsService.prototype.getAllInstalled = function () {\r\n            var _this = this;\r\n            var limiter = new async_1.Limiter(10);\r\n            return pfs.readdir(this.extensionsPath)\r\n                .then(function (extensions) { return winjs_base_1.Promise.join(extensions.map(function (e) {\r\n                var extensionPath = path.join(_this.extensionsPath, e);\r\n                return limiter.queue(function () { return pfs.readFile(path.join(extensionPath, 'package.json'), 'utf8')\r\n                    .then(function (raw) { return parseManifest(raw); })\r\n                    .then(function (manifest) { return createExtension(manifest, manifest.__metadata, extensionPath); })\r\n                    .then(null, function () { return null; }); });\r\n            })); })\r\n                .then(function (result) { return result.filter(function (a) { return !!a; }); });\r\n        };\r\n        ExtensionsService.prototype.getInstallationPath = function (extension) {\r\n            return extension.path || path.join(this.extensionsPath, extension.publisher + \".\" + extension.name + \"-\" + extension.version);\r\n        };\r\n        ExtensionsService.prototype.removeDeprecatedExtensions = function () {\r\n            return this.getDeprecated()\r\n                .then(function (extensions) { return winjs_base_1.TPromise.join(extensions.filter(function (e) { return !!e.path; }).map(function (e) { return pfs.rimraf(e.path); })); });\r\n        };\r\n        __decorate([\r\n            service_1.ServiceEvent\r\n        ], ExtensionsService.prototype, \"onInstallExtension\");\r\n        __decorate([\r\n            service_1.ServiceEvent\r\n        ], ExtensionsService.prototype, \"onDidInstallExtension\");\r\n        __decorate([\r\n            service_1.ServiceEvent\r\n        ], ExtensionsService.prototype, \"onUninstallExtension\");\r\n        __decorate([\r\n            service_1.ServiceEvent\r\n        ], ExtensionsService.prototype, \"onDidUninstallExtension\");\r\n        ExtensionsService = __decorate([\r\n            __param(0, contextService_1.IWorkspaceContextService)\r\n        ], ExtensionsService);\r\n        return ExtensionsService;\r\n    })();\r\n    exports.ExtensionsService = ExtensionsService;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") return Reflect.decorate(decorators, target, key, desc);\r\n    switch (arguments.length) {\r\n        case 2: return decorators.reduceRight(function(o, d) { return (d && d(o)) || o; }, target);\r\n        case 3: return decorators.reduceRight(function(o, d) { return (d && d(target, key)), void 0; }, void 0);\r\n        case 4: return decorators.reduceRight(function(o, d) { return (d && d(target, key, o)) || o; }, desc);\r\n    }\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\ndefine(\"vs/workbench/node/pluginHostMain\", [\"require\", \"exports\", 'vs/nls!vs/workbench/node/pluginHostMain', 'vs/base/node/pfs', 'vs/base/common/uri', 'vs/base/common/winjs.base', 'vs/base/common/paths', 'vs/platform/plugins/common/plugins', 'vs/platform/plugins/common/pluginsRegistry', 'vs/workbench/api/browser/pluginHost.api.impl', 'vs/workbench/api/common/pluginHostDocuments', 'vs/platform/instantiation/common/instantiation', 'vs/platform/instantiation/common/instantiationService', 'vs/platform/plugins/common/nativePluginService', 'vs/platform/thread/common/pluginHostThreadService', 'vs/base/common/marshalling', 'vs/workbench/api/common/pluginHostTelemetry', 'vs/platform/request/common/baseRequestService', 'vs/platform/workspace/common/baseWorkspaceContextService', 'vs/editor/common/services/modeServiceImpl', 'vs/workbench/node/extensionPoints', 'vs/platform/workspace/common/workspace', 'vs/workbench/parts/extensions/common/extensions', 'vs/workbench/parts/extensions/node/extensionsService', 'vs/base/common/async', 'vs/base/node/stdFork', 'vs/languages/lib/common/wireProtocol'], function (require, exports, nls, pfs, uri_1, winjs_base_1, paths, plugins_1, pluginsRegistry_1, pluginHost_api_impl_1, pluginHostDocuments_1, instantiation_1, InstantiationService, nativePluginService_1, pluginHostThreadService_1, marshalling, pluginHostTelemetry_1, baseRequestService_1, baseWorkspaceContextService_1, modeServiceImpl_1, extensionPoints_1, workspace_1, extensions_1, extensionsService_1) {\r\n    var DIRNAME = uri_1.default.parse(require.toUrl('./')).fsPath;\r\n    var BASE_PATH = paths.normalize(paths.join(DIRNAME, '../../../..'));\r\n    var BUILTIN_PLUGINS_PATH = paths.join(BASE_PATH, 'extensions');\r\n    var nativeExit = process.exit.bind(process);\r\n    process.exit = function () {\r\n        var err = new Error('An extension called process.exit() and this was prevented.');\r\n        console.warn(err.stack);\r\n    };\r\n    function exit(code) {\r\n        nativeExit(code);\r\n    }\r\n    exports.exit = exit;\r\n    function createServices(remoteCom, initData, sharedProcessClient) {\r\n        // the init data is not demarshalled\r\n        initData = marshalling.deserialize(initData);\r\n        var contextService = new baseWorkspaceContextService_1.BaseWorkspaceContextService(initData.contextService.workspace, initData.contextService.configuration, initData.contextService.options);\r\n        var threadService = new pluginHostThreadService_1.PluginHostThreadService(remoteCom);\r\n        threadService.setInstantiationService(InstantiationService.create({ threadService: threadService }));\r\n        var telemetryServiceInstance = new pluginHostTelemetry_1.PluginHostTelemetryService(threadService);\r\n        var requestService = new baseRequestService_1.BaseRequestService(contextService, telemetryServiceInstance);\r\n        var modelService = threadService.getRemotable(pluginHostDocuments_1.PluginHostModelService);\r\n        var pluginService = new nativePluginService_1.PluginHostPluginService(threadService);\r\n        var modeService = new modeServiceImpl_1.ModeServiceImpl(threadService, pluginService);\r\n        var _services = {\r\n            contextService: contextService,\r\n            requestService: requestService,\r\n            modelService: modelService,\r\n            threadService: threadService,\r\n            modeService: modeService,\r\n            pluginService: pluginService,\r\n            telemetryService: pluginHostTelemetry_1.PluginHostTelemetryService\r\n        };\r\n        var instantiationService = InstantiationService.create(_services);\r\n        threadService.setInstantiationService(instantiationService);\r\n        // Create the monaco API\r\n        instantiationService.createInstance(pluginHost_api_impl_1.PluginHostAPIImplementation);\r\n        // Connect to shared process services\r\n        instantiationService.addSingleton(extensions_1.IExtensionsService, sharedProcessClient.getService('ExtensionService', extensionsService_1.ExtensionsService));\r\n        return instantiationService;\r\n    }\r\n    exports.createServices = createServices;\r\n    var PluginHostMain = (function () {\r\n        function PluginHostMain(contextService, pluginService, instantiationService) {\r\n            this.contextService = contextService;\r\n            this.pluginService = pluginService;\r\n            this._isTerminating = false;\r\n        }\r\n        PluginHostMain.prototype.start = function () {\r\n            return this.readPlugins();\r\n        };\r\n        PluginHostMain.prototype.terminate = function () {\r\n            var _this = this;\r\n            if (this._isTerminating) {\r\n                // we are already shutting down...\r\n                return;\r\n            }\r\n            this._isTerminating = true;\r\n            try {\r\n                var allExtensions = pluginsRegistry_1.PluginsRegistry.getAllPluginDescriptions();\r\n                var allExtensionsIds = allExtensions.map(function (ext) { return ext.id; });\r\n                var activatedExtensions = allExtensionsIds.filter(function (id) { return _this.pluginService.isActivated(id); });\r\n                activatedExtensions.forEach(function (extensionId) {\r\n                    _this.pluginService.deactivate(extensionId);\r\n                });\r\n            }\r\n            catch (err) {\r\n            }\r\n            // Give extensions 1 second to wrap up any async dispose, then exit\r\n            setTimeout(function () {\r\n                exit();\r\n            }, 1000);\r\n        };\r\n        PluginHostMain.prototype.readPlugins = function () {\r\n            var _this = this;\r\n            var collector = new pluginsRegistry_1.PluginsMessageCollector();\r\n            var env = this.contextService.getConfiguration().env;\r\n            return PluginHostMain.scanPlugins(collector, BUILTIN_PLUGINS_PATH, !env.disablePlugins ? env.userPluginsHome : void 0, !env.disablePlugins ? env.pluginDevelopmentPath : void 0, env.version)\r\n                .then(null, function (err) {\r\n                collector.error('', err);\r\n                return [];\r\n            })\r\n                .then(function (extensions) {\r\n                // Register & Signal done\r\n                pluginsRegistry_1.PluginsRegistry.registerPlugins(extensions);\r\n                _this.pluginService.registrationDone(collector.getMessages());\r\n            })\r\n                .then(function () { return _this.handleEagerPlugins(); })\r\n                .then(function () { return _this.handlePluginTests(); });\r\n        };\r\n        PluginHostMain.scanPlugins = function (collector, builtinPluginsPath, userInstallPath, pluginDevelopmentPath, version) {\r\n            var builtinPlugins = extensionPoints_1.PluginScanner.scanPlugins(version, collector, builtinPluginsPath, true);\r\n            var userPlugins = !userInstallPath ? winjs_base_1.TPromise.as([]) : extensionPoints_1.PluginScanner.scanPlugins(version, collector, userInstallPath, false);\r\n            var developedPlugins = !pluginDevelopmentPath ? winjs_base_1.TPromise.as([]) : extensionPoints_1.PluginScanner.scanOneOrMultiplePlugins(version, collector, pluginDevelopmentPath, false);\r\n            return winjs_base_1.TPromise.join([builtinPlugins, userPlugins, developedPlugins]).then(function (_) {\r\n                var builtinPlugins = _[0];\r\n                var userPlugins = _[1];\r\n                var extensionDevPlugins = _[2];\r\n                var resultingPluginsMap = {};\r\n                builtinPlugins.forEach(function (builtinPlugin) {\r\n                    resultingPluginsMap[builtinPlugin.id] = builtinPlugin;\r\n                });\r\n                userPlugins.forEach(function (userPlugin) {\r\n                    if (resultingPluginsMap.hasOwnProperty(userPlugin.id)) {\r\n                        collector.warn(userPlugin.extensionFolderPath, 'Overwriting extension ' + resultingPluginsMap[userPlugin.id].extensionFolderPath + ' with ' + userPlugin.extensionFolderPath);\r\n                    }\r\n                    resultingPluginsMap[userPlugin.id] = userPlugin;\r\n                });\r\n                extensionDevPlugins.forEach(function (extensionDevPlugin) {\r\n                    collector.info('', 'Loading development extension at ' + extensionDevPlugin.extensionFolderPath);\r\n                    if (resultingPluginsMap.hasOwnProperty(extensionDevPlugin.id)) {\r\n                        collector.warn(extensionDevPlugin.extensionFolderPath, 'Overwriting extension ' + resultingPluginsMap[extensionDevPlugin.id].extensionFolderPath + ' with ' + extensionDevPlugin.extensionFolderPath);\r\n                    }\r\n                    resultingPluginsMap[extensionDevPlugin.id] = extensionDevPlugin;\r\n                });\r\n                return Object.keys(resultingPluginsMap).map(function (name) { return resultingPluginsMap[name]; });\r\n            });\r\n        };\r\n        // Handle \"eager\" activation plugins\r\n        PluginHostMain.prototype.handleEagerPlugins = function () {\r\n            this.pluginService.activateByEvent('*').then(null, function (err) {\r\n                console.error(err);\r\n            });\r\n            return this.handleWorkspaceContainsEagerPlugins();\r\n        };\r\n        PluginHostMain.prototype.handleWorkspaceContainsEagerPlugins = function () {\r\n            var _this = this;\r\n            var workspace = this.contextService.getWorkspace();\r\n            if (!workspace || !workspace.resource) {\r\n                return winjs_base_1.TPromise.as(null);\r\n            }\r\n            var folderPath = workspace.resource.fsPath;\r\n            var desiredFilesMap = {};\r\n            pluginsRegistry_1.PluginsRegistry.getAllPluginDescriptions().forEach(function (desc) {\r\n                var activationEvents = desc.activationEvents;\r\n                if (!activationEvents) {\r\n                    return;\r\n                }\r\n                for (var i = 0; i < activationEvents.length; i++) {\r\n                    if (/^workspaceContains:/.test(activationEvents[i])) {\r\n                        var fileName = activationEvents[i].substr('workspaceContains:'.length);\r\n                        desiredFilesMap[fileName] = true;\r\n                    }\r\n                }\r\n            });\r\n            return winjs_base_1.TPromise.join(Object.keys(desiredFilesMap).map(function (fileName) { return pfs.fileExistsWithResult(paths.join(folderPath, fileName), fileName); })).then(function (fileNames) {\r\n                fileNames.forEach(function (existingFileName) {\r\n                    if (!existingFileName) {\r\n                        return;\r\n                    }\r\n                    var activationEvent = 'workspaceContains:' + existingFileName;\r\n                    _this.pluginService.activateByEvent(activationEvent).then(null, function (err) {\r\n                        console.error(err);\r\n                    });\r\n                });\r\n            });\r\n        };\r\n        PluginHostMain.prototype.handlePluginTests = function () {\r\n            var _this = this;\r\n            var env = this.contextService.getConfiguration().env;\r\n            if (!env.pluginTestsPath || !env.pluginDevelopmentPath) {\r\n                return winjs_base_1.TPromise.as(null);\r\n            }\r\n            // Require the test runner via node require from the provided path\r\n            var testRunner;\r\n            var requireError;\r\n            try {\r\n                testRunner = require.__$__nodeRequire(env.pluginTestsPath);\r\n            }\r\n            catch (error) {\r\n                requireError = error;\r\n            }\r\n            // Execute the runner if it follows our spec\r\n            if (testRunner && typeof testRunner.run === 'function') {\r\n                return new winjs_base_1.TPromise(function (c, e) {\r\n                    testRunner.run(env.pluginTestsPath, function (error, failures) {\r\n                        if (error) {\r\n                            e(error.toString());\r\n                        }\r\n                        else {\r\n                            c(null);\r\n                        }\r\n                        // after tests have run, we shutdown the host\r\n                        _this.gracefulExit(failures && failures > 0 ? 1 /* ERROR */ : 0 /* OK */);\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                this.gracefulExit(1 /* ERROR */);\r\n            }\r\n            return winjs_base_1.TPromise.wrapError(requireError ? requireError.toString() : nls.localize(0, null, env.pluginTestsPath));\r\n        };\r\n        PluginHostMain.prototype.gracefulExit = function (code) {\r\n            // to give the PH process a chance to flush any outstanding console\r\n            // messages to the main process, we delay the exit() by some time\r\n            setTimeout(function () { return exit(code); }, 500);\r\n        };\r\n        PluginHostMain = __decorate([\r\n            __param(0, workspace_1.IWorkspaceContextService),\r\n            __param(1, plugins_1.IPluginService),\r\n            __param(2, instantiation_1.IInstantiationService)\r\n        ], PluginHostMain);\r\n        return PluginHostMain;\r\n    })();\r\n    exports.PluginHostMain = PluginHostMain;\r\n});\r\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\ndefine(\"vs/workbench/node/pluginHostProcess\", [\"require\", \"exports\", 'vs/base/common/errors', 'vs/base/common/winjs.base', 'vs/workbench/node/pluginHostMain', 'vs/base/node/service.net', 'vs/platform/plugins/common/ipcRemoteCom'], function (require, exports, errors_1, winjs_base_1, pluginHostMain_1, service_net_1, ipcRemoteCom_1) {\r\n    // This calls exit directly in case the initialization is not finished and we need to exit\r\n    // Otherwise, if initialization completed we go to pluginHostMain.terminate()\r\n    var onTerminate = function () {\r\n        pluginHostMain_1.exit();\r\n    };\r\n    function connectToRenderer() {\r\n        return new winjs_base_1.TPromise(function (c, e) {\r\n            var stats = [];\r\n            // Listen init data message\r\n            process.once('message', function (msg) {\r\n                var remoteCom = ipcRemoteCom_1.create(function (data) {\r\n                    process.send(data);\r\n                    stats.push(data.length);\r\n                });\r\n                // Listen to all other messages\r\n                process.on('message', function (msg) {\r\n                    if (msg.type === '__$terminate') {\r\n                        onTerminate();\r\n                        return;\r\n                    }\r\n                    remoteCom.handle(msg);\r\n                });\r\n                // Print a console message when rejection isn't handled. For details\r\n                // see https://nodejs.org/api/process.html#process_event_unhandledrejection\r\n                // and https://nodejs.org/api/process.html#process_event_rejectionhandled\r\n                process.on('unhandledRejection', function (reason, promise) {\r\n                    // 'promise' seems to be undefined all the time and\r\n                    // that's why we cannot use the rejectionhandled event\r\n                    console.warn('potentially unhandled rejected promise', promise);\r\n                    errors_1.onUnexpectedError(reason);\r\n                });\r\n                // Print a console message when an exception isn't handled.\r\n                process.on('uncaughtException', function (err) {\r\n                    errors_1.onUnexpectedError(err);\r\n                });\r\n                // Kill oneself if one's parent dies. Much drama.\r\n                setInterval(function () {\r\n                    try {\r\n                        process.kill(msg.parentPid, 0); // throws an exception if the main process doesn't exist anymore.\r\n                    }\r\n                    catch (e) {\r\n                        onTerminate();\r\n                    }\r\n                }, 5000);\r\n                // Check stats\r\n                setInterval(function () {\r\n                    if (stats.length >= 250) {\r\n                        var total = stats.reduce(function (prev, current) { return prev + current; }, 0);\r\n                        console.warn(\"MANY messages are being SEND FROM the extension host!\");\r\n                        console.warn(\"SEND during 1sec: message_count=\" + stats.length + \", total_len=\" + total);\r\n                    }\r\n                    stats.length = 0;\r\n                }, 1000);\r\n                // Tell the outside that we are initialized\r\n                process.send('initialized');\r\n                c({ remoteCom: remoteCom, initData: msg });\r\n            });\r\n            // Tell the outside that we are ready to receive messages\r\n            process.send('ready');\r\n        });\r\n    }\r\n    function connectToSharedProcess() {\r\n        return service_net_1.connect(process.env['VSCODE_SHARED_IPC_HOOK']);\r\n    }\r\n    winjs_base_1.TPromise.join([connectToRenderer(), connectToSharedProcess()])\r\n        .done(function (result) {\r\n        var renderer = result[0];\r\n        var sharedProcessClient = result[1];\r\n        var instantiationService = pluginHostMain_1.createServices(renderer.remoteCom, renderer.initData, sharedProcessClient);\r\n        var pluginHostMain = instantiationService.createInstance(pluginHostMain_1.PluginHostMain);\r\n        onTerminate = function () {\r\n            pluginHostMain.terminate();\r\n        };\r\n        pluginHostMain.start()\r\n            .done(null, function (err) { return console.error(err); });\r\n    });\r\n});\r\n\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\n/**\n * Throws an error with the provided message if the provided value does not evaluate to a true Javascript value.\n */\nexport function ok(value?: any, message?: string) {\n\tif (!value || value === null) {\n\t\tthrow new Error(message ? 'Assertion failed (' + message + ')' : 'Assertion Failed');\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\n\n/**\n * An interface for a JavaScript object that\n * acts a dictionary. The keys are strings.\n */\nexport interface IStringDictionary<V> {\n\t[name:string]:V;\n}\n\n/**\n * An interface for a JavaScript object that\n * acts a dictionary. The keys are numbers.\n */\nexport interface INumberDictionary<V> {\n\t[idx:number]:V;\n}\n\nexport function createStringDictionary<V>():IStringDictionary<V> {\n\treturn Object.create(null);\n}\n\nexport function createNumberDictionary<V>():INumberDictionary<V> {\n\treturn Object.create(null);\n}\n\n/**\n * Looks up and returns a property that is owned\n * by the provided map object. \n * @param what The key.\n * @param from A native JavaScript object that stores items.\n * @param alternate A default value this is return in case an item with \n * \tthe key isn't found.\n */\nexport function lookup<T>(from:IStringDictionary<T>, what:string, alternate?:T):T;\nexport function lookup<T>(from:INumberDictionary<T>, what:number, alternate?:T):T;\nexport function lookup<T>(from:any, what:any, alternate:T=null):T {\n\tvar key = String(what);\n\tif(contains(from, key)) {\n\t\treturn from[key];\n\t}\n\treturn alternate;\n}\n\n\n/**\n * Looks up a value from the set. If the set doesn't contain the\n * value it inserts and returns the given alternate value.\n */\nexport function lookupOrInsert<T>(from:IStringDictionary<T>, key:string, alternate:T):T;\nexport function lookupOrInsert<T>(from:IStringDictionary<T>, key:string, alternateFn:()=>T):T;\nexport function lookupOrInsert<T>(from:INumberDictionary<T>, key:number, alternate:T):T;\nexport function lookupOrInsert<T>(from:INumberDictionary<T>, key:number, alternateFn:()=>T):T;\nexport function lookupOrInsert<T>(from:any, stringOrNumber:any, alternate:any):T {\n\tvar key = String(stringOrNumber);\n\tif(contains(from, key)) {\n\t\treturn from[key];\n\t} else {\n\t\tif(typeof alternate === 'function') {\n\t\t\talternate = alternate();\n\t\t}\n\t\tfrom[key] = alternate;\n\t\treturn alternate;\n\t}\n}\n\n/**\n * Inserts\n */\nexport function insert<T>(into: IStringDictionary<T>, data: T, hashFn: (data: T) => string): void;\nexport function insert<T>(into: INumberDictionary<T>, data: T, hashFn: (data: T) => string): void;\nexport function insert<T>(into: any, data: T, hashFn: (data: T) => string): void { \n\tinto[hashFn(data)] = data;\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Returns {{true}} iff the provided object contains a property \n * with the given name.\n */\nexport function contains<T>(from:IStringDictionary<T>, what:string):boolean;\nexport function contains<T>(from:INumberDictionary<T>, what:number):boolean;\nexport function contains<T>(from:any, what:any):boolean {\n\treturn hasOwnProperty.call(from, what);\n}\n\n\nexport function keys<T>(from:IStringDictionary<T>):IIterable<string>;\nexport function keys<T>(from:INumberDictionary<T>):IIterable<number>;\nexport function keys<T>(from:any):IIterable<any> {\n\n\treturn {\n\t\tevery: function(callback:(element:any)=>boolean):boolean {\n\t\t\tfor (var key in from) {\n\t\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\t\tif(!callback(key)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t};\n}\n\n/**\n * Returns an array which contains all values that reside\n * in the given set.\n */\nexport function values<T>(from:IStringDictionary<T>):T[];\nexport function values<T>(from:INumberDictionary<T>):T[];\nexport function values<T>(from:any):any[] {\n\tvar result:T[] = [];\n\tfor (var key in from) {\n\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\tresult.push(from[key]);\n\t\t}\n\t}\n\treturn result;\n}\n\n/**\n * Iterates over each entry in the provided set. The iterator allows\n * to remove elements and will stop when the callback returns {{false}}.\n */\nexport function forEach<T>(from:IStringDictionary<T>, callback:(entry:{key:string; value:T;}, remove:Function)=>any):void;\nexport function forEach<T>(from:INumberDictionary<T>, callback:(entry:{key:number; value:T;}, remove:Function)=>any):void;\nexport function forEach<T>(from:any, callback:(entry:{key:any; value:T;}, remove:Function)=>any):void {\n\tfor (var key in from) {\n\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\tvar result = callback({ key:key, value: from[key] }, function() {\n\t\t\t\tdelete from[key];\n\t\t\t});\n\t\t\tif(result === false) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Removes an element from the dictionary. Returns {{false}} if the property\n * does not exists.\n */\nexport function remove<T>(from: IStringDictionary<T>, key: string): boolean;\nexport function remove<T>(from: INumberDictionary<T>, key: string): boolean;\nexport function remove<T>(from:any, key:string):boolean {\n\tif(!hasOwnProperty.call(from, key)) {\n\t\treturn false;\n\t}\n\tdelete from[key];\n\treturn true;\n}\n\n/**\n * Groups the collection into a dictionary based on the provided\n * group function.\n */\nexport function groupBy<T>(data: T[], groupFn: (element: T) => string): IStringDictionary<T[]>{\n\tvar result = createStringDictionary<T[]>();\n\tdata.forEach(element => lookupOrInsert(result, groupFn(element), []).push(element));\n\treturn result;\n}\n\n\n/**\n * An iterable of a given type. This iterable is\n * compatible with the JavaScript array.\n */\nexport interface IIterable<E> {\n\n\t/**\n\t * Iterates over every element in the array\n\t * as long as the callback does not return some\n\t * 'falsy' value.\n\t * @param callback A function that is called for each element\n\t * @return {{true}} if every element has been visited, \n\t * \t{{false}} if it returned early\n\t */\n\tevery(callback:(element:E)=>boolean):boolean;\n}\n\nexport var EmptyIterable:IIterable<any> = {\n\tevery: function(callback) {\n\t\treturn true;\n\t}\n};\n\nexport function combine<E>(iterables:IIterable<E>[]):IIterable<E> {\n\tvar len = iterables.length;\n\tif(len === 0) {\n\t\treturn EmptyIterable;\n\t} else if(len === 1) {\n\t\treturn iterables[0];\n\t}\n\treturn {\n\t\tevery: function(callback:(element:E)=>any) {\n\t\t\tfor(var i = 0; i < len; i++) {\n\t\t\t\tif(!iterables[i].every(callback)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t};\n}\n\nexport function singleton<E>(element:E):IIterable<E> {\n\treturn {\n\t\tevery: function(callback) {\n\t\t\treturn callback(element);\n\t\t}\n\t};\n}\n\nexport function toArray<E>(iterable:IIterable<E>):E[] {\n\tif(Array.isArray(iterable)) {\n\t\treturn <E[]> iterable;\n\t} else {\n\t\tvar result:E[] = [];\n\t\titerable.every((e) => {\n\t\t\tresult.push(e);\n\t\t\treturn true;\n\t\t});\n\t\treturn result;\n\t}\n}\n\n///**\n// * ECMAScript 6 iterator\n// */\n//export interface IIterator<T> {\n//\tnext(): { done: boolean; value?: T; };\n//}\n//\n//export function empty<T>():IIterator<T> {\n//\treturn {\n//\t\tnext: function() { return { done: true }; }\n//\t};\n//}\n//\n//export function iterator<T>(array: T[]): IIterator<T> { \n//\tvar i = 0;\n//\treturn {\n//\t\tnext: () => { \n//\t\t\tif(i < array.length) {\n//\t\t\t\treturn {\n//\t\t\t\t\tdone: false,\n//\t\t\t\t\tvalue: array[i++]\n//\t\t\t\t};\n//\t\t\t} else {\n//\t\t\t\treturn {\n//\t\t\t\t\tdone: true\n//\t\t\t\t};\n//\t\t\t}\n//\t\t}\n//\t};\n//}\n\ninterface ICacheRow<T> {\n\telement: T;\n\tonRemove: ()=>void;\n}\n\n/**\n * Limited size cache. Provided a certain cache size limit, it\n * removes the older elements as new ones are inserted.\n */\nexport class LimitedSizeCache<T> {\n\n\tprivate cache: { [id: string]: ICacheRow<T> };\n\tprivate order: string[];\n\n\tconstructor(private size: number) {\n\t\tthis.cache = Object.create(null);\n\t\tthis.order = [];\n\t}\n\n\tpublic get(id: string): T {\n\t\tvar result = this.cache[id];\n\t\treturn result && result.element;\n\t}\n\n\tpublic put(id: string, element: T, onRemove: ()=>void): void {\n\t\tvar existing = this.cache[id];\n\t\tvar row: ICacheRow<T> = { element: element, onRemove: onRemove };\n\n\t\tthis.cache[id] = row;\n\n\t\tif (!existing) {\n\t\t\tthis.order.push(id);\n\t\t}\n\n\t\tthis.swipe();\n\t}\n\n\tprivate swipe(): void {\n\t\twhile (this.order.length > this.size) {\n\t\t\tvar id = this.order.shift();\n\t\t\tvar row = this.cache[id];\n\t\t\trow.onRemove();\n\t\t\tdelete this.cache[id];\n\t\t}\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nexport class Event {\n\tpublic time: number;\n\tpublic originalEvent: Event;\n\tpublic source: any;\n\n\tconstructor(originalEvent?: Event) {\n\t\tthis.time = (new Date()).getTime();\n\t\tthis.originalEvent = originalEvent;\n\t\tthis.source = null;\n\t}\n}\n\nexport class PropertyChangeEvent extends Event {\n\tpublic key: string;\n\tpublic oldValue: any;\n\tpublic newValue: any;\n\n\tconstructor(key?: string, oldValue?: any, newValue?: any, originalEvent?: Event) {\n\t\tsuper(originalEvent);\n\n\t\tthis.key = key;\n\t\tthis.oldValue = oldValue;\n\t\tthis.newValue = newValue;\n\t}\n}\n\nexport class ViewerEvent extends Event {\n\tpublic element: any;\n\n\tconstructor(element: any, originalEvent?: Event) {\n\t\tsuper(originalEvent);\n\n\t\tthis.element = element;\n\t}\n}\n\nexport interface ISelectionEvent {\n\tselection: any[];\n\tpayload?: any;\n\tsource: any;\n}\n\nexport interface IFocusEvent {\n\tfocus: any;\n\tpayload?: any;\n\tsource: any;\n}\n\nexport interface IHighlightEvent {\n\thighlight: any;\n\tpayload?: any;\n\tsource: any;\n}\n\nexport var EventType = {\n\tPROPERTY_CHANGED: 'propertyChanged',\n\tSELECTION: 'selection',\n\tFOCUS: 'focus',\n\tBLUR: 'blur',\n\tHIGHLIGHT: 'highlight',\n\tEXPAND: 'expand',\n\tCOLLAPSE: 'collapse',\n\tTOGGLE: 'toggle',\n\tCONTENTS_CHANGED: 'contentsChanged',\n\tBEFORE_RUN: 'beforeRun',\n\tRUN: 'run',\n\tEDIT: 'edit',\n\tSAVE: 'save',\n\tCANCEL: 'cancel',\n\tCHANGE: 'change',\n\tDISPOSE: 'dispose',\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// copied from TypeScript/src/compiler/core/hash.ts and adjusted to external module syntax\n\n'use strict';\t\n\n\nexport function computeMurmur2StringHashCode(key: string): number {\n\t// 'm' and 'r' are mixing constants generated offline.\n\t// They're not really 'magic', they just happen to work well.\n\tvar m = 0x5bd1e995;\n\tvar r = 24;\n\n\tvar start = 0;\n\tvar len = key.length;\n\tvar numberOfCharsLeft = len;\n\n\t// Initialize the hash to a 'random' value.\n\tvar h = (0 ^ numberOfCharsLeft);\n\n\t// Mix 4 bytes at a time into the hash.  NOTE: 4 bytes is two chars, so we iterate\n\t// through the string two chars at a time.\n\tvar index = start;\n\twhile (numberOfCharsLeft >= 2) {\n\t\tvar c1 = key.charCodeAt(index);\n\t\tvar c2 = key.charCodeAt(index + 1);\n\n\t\tvar k = c1 | (c2 << 16);\n\n\t\tk *= m;\n\t\tk ^= k >> r;\n\t\tk *= m;\n\n\t\th *= m;\n\t\th ^= k;\n\n\t\tindex += 2;\n\t\tnumberOfCharsLeft -= 2;\n\t}\n\n\t// Handle the last char (or 2 bytes) if they exist.  This happens if the original string had\n\t// odd length.\n\tif (numberOfCharsLeft === 1) {\n\t\th ^= key.charCodeAt(index);\n\t\th *= m;\n\t}\n\n\t// Do a few final mixes of the hash to ensure the last few bytes are well-incorporated.\n\n\th ^= h >> 13;\n\th *= m;\n\th ^= h >> 15;\n\n\treturn h;\n}\n\nexport function combine(value:number, currentHash:number): number {\n\t// Ensure we stay within 31 bits.\n\treturn (((currentHash << 5) + currentHash) + value) & 0x7FFFFFFF;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nexport const empty: IDisposable = Object.freeze({\n\tdispose() { }\n});\n\nexport interface IDisposable {\n\tdispose(): void;\n}\n\nexport function disposeAll<T extends IDisposable>(arr: T[]): T[] {\n\tfor (var i = 0, len = arr.length; i < len; i++) {\n\t\tif(arr[i]) {\n\t\t\tarr[i].dispose();\n\t\t}\n\t}\n\n\treturn [];\n}\n\nexport function combinedDispose(...disposables: IDisposable[]): IDisposable {\n\treturn {\n\t\tdispose: () => disposeAll(disposables)\n\t};\n}\n\nexport function combinedDispose2(disposables: IDisposable[]): IDisposable {\n\treturn {\n\t\tdispose: () => disposeAll(disposables)\n\t};\n}\n\nexport function fnToDisposable(fn: ()=>void): IDisposable {\n\treturn {\n\t\tdispose: () => fn()\n\t};\n}\n\nexport function toDisposable(...fns: (()=>void)[]): IDisposable {\n\treturn combinedDispose2(fns.map(fnToDisposable));\n}\n\nfunction callAll(arg:any):any {\n\tif (!arg) {\n\t\treturn null;\n\t} else if(typeof arg === 'function') {\n\t\targ();\n\t\treturn null;\n\t} else if(Array.isArray(arg)) {\n\t\twhile(arg.length > 0) {\n\t\t\targ.pop()();\n\t\t}\n\t\treturn arg;\n\t} else {\n\t\treturn null;\n\t}\n}\n\nexport interface CallAll {\n\t(fn: Function): Function;\n\t(fn: Function[]): Function[];\n}\n\n/**\n * Calls all functions that are being passed to it.\n */\nexport var cAll: CallAll = callAll;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\n// --- THIS FILE IS TEMPORARY UNTIL ENV.TS IS CLEANED UP. IT CAN SAFELY BE USED IN ALL TARGET EXECUTION ENVIRONMENTS (node & dom) ---\n\nvar _isWindows = false;\nvar _isMacintosh = false;\nvar _isLinux = false;\nvar _isNative = false;\nvar _isWeb = false;\nvar _isQunit = false;\n\ninterface INodeProcess {\n\tplatform: string;\n}\ndeclare var process: INodeProcess;\ndeclare var global: any;\n\ninterface INavigator {\n\tuserAgent:string;\n}\ndeclare var navigator: INavigator;\ndeclare var self: any;\n\n// OS detection\nif (typeof process === 'object') {\n\t_isWindows = (process.platform === 'win32');\n\t_isMacintosh = (process.platform === 'darwin');\n\t_isLinux = (process.platform === 'linux');\n\t_isNative = true;\n} else if (typeof navigator === 'object') {\n\tvar userAgent = navigator.userAgent;\n\t_isWindows = userAgent.indexOf('Windows') >= 0;\n\t_isMacintosh = userAgent.indexOf('Macintosh') >= 0;\n\t_isLinux = userAgent.indexOf('Linux') >= 0;\n\t_isWeb = true;\n\n\t_isQunit = !!(<any>self).QUnit;\n}\n\nexport enum Platform {\n\tWeb,\n\tMac,\n\tLinux,\n\tWindows\n}\n\nexport var _platform:Platform = Platform.Web;\nif (_isNative) {\n\tif (_isMacintosh) {\n\t\t_platform = Platform.Mac;\n\t} else if (_isWindows) {\n\t\t_platform = Platform.Windows;\n\t} else if (_isLinux) {\n\t\t_platform = Platform.Linux;\n\t}\n}\n\nexport const isWindows = _isWindows;\nexport const isMacintosh = _isMacintosh;\nexport const isLinux = _isLinux;\nexport const isNative = _isNative;\nexport const isWeb = _isWeb;\nexport const isQunit = _isQunit;\nexport const platform = _platform;\n\nexport interface TimeoutToken {\n}\n\nexport interface IntervalToken {\n}\n\ninterface IGlobals {\n\tWorker?: any;\n\tsetTimeout(callback: (...args: any[]) => void, delay: number, ...args: any[]): TimeoutToken;\n\tclearTimeout(token: TimeoutToken): void;\n\n\tsetInterval(callback: (...args: any[]) => void, delay: number, ...args: any[]): IntervalToken;\n\tclearInterval(token: IntervalToken);\n}\n\nvar _globals = <IGlobals> (typeof self === 'object' ? self : global);\nexport const globals: any = _globals;\n\nexport function hasWebWorkerSupport(): boolean {\n\treturn typeof _globals.Worker !== 'undefined';\n}\nexport const setTimeout = _globals.setTimeout.bind(_globals);\nexport const clearTimeout = _globals.clearTimeout.bind(_globals);\n\nexport const setInterval = _globals.setInterval.bind(_globals);\nexport const clearInterval = _globals.clearInterval.bind(_globals);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {isLinux, isWindows} from 'vs/base/common/platform';\n\n/**\n * The forward slash path separator.\n */\nexport var sep = '/';\n\n/**\n * The native path separator depending on the OS.\n */\nexport var nativeSep = isWindows ? '\\\\' : '/';\n\nexport function relative(from: string, to: string): string {\n\n\tfrom = normalize(from);\n\tto = normalize(to);\n\n\tvar fromParts = from.split(sep),\n\t\ttoParts = to.split(sep);\n\n\twhile (fromParts.length > 0 && toParts.length > 0) {\n\t\tif (fromParts[0] === toParts[0]) {\n\t\t\tfromParts.shift();\n\t\t\ttoParts.shift();\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tfor (var i = 0, len = fromParts.length; i < len; i++) {\n\t\ttoParts.unshift('..');\n\t}\n\n\treturn toParts.join(sep);\n}\n\nconst _dotSegment = /[\\\\\\/]\\.\\.?[\\\\\\/]?|[\\\\\\/]?\\.\\.?[\\\\\\/]/;\n\nexport function normalize(path: string, toOSPath?: boolean): string {\n\n\tif (!path) {\n\t\treturn path;\n\t}\n\n\t// a path is already normal if it contains no .. or . parts\n\t// and already uses the proper path separator\n\tif (!_dotSegment.test(path)) {\n\n\t\t// badSep is the path separator we don't want. Usually\n\t\t// the backslash, unless isWindows && toOSPath\n\t\tlet badSep = toOSPath && isWindows ? '/' : '\\\\';\n\t\tif(path.indexOf(badSep) === -1) {\n\t\t\treturn path;\n\t\t}\n\t}\n\n\tlet parts = path.split(/[\\\\\\/]/);\n\tfor (let i = 0, len = parts.length; i < len; i++) {\n\t\tif (parts[i] === '.' && !!parts[i + 1]) {\n\t\t\tparts.splice(i, 1);\n\t\t\ti -= 1;\n\t\t} else if(parts[i] === '..' && !!parts[i - 1]) {\n\t\t\tparts.splice(i - 1, 2);\n\t\t\ti -= 2;\n\t\t}\n\t}\n\n\treturn parts.join(toOSPath ? nativeSep : sep);\n}\n\nexport function dirnames(path: string): { next: () => { done: boolean; value: string; } } {\n\n\tvar value = path,\n\t\tdone = false;\n\n\tfunction next() {\n\t\tif (value === '.' || value === '/' || value === '\\\\') {\n\t\t\tvalue = undefined;\n\t\t\tdone = true;\n\t\t} else {\n\t\t\tvalue = dirname(value);\n\t\t}\n\t\treturn {\n\t\t\tvalue,\n\t\t\tdone\n\t\t}\n\t}\n\treturn {\n\t\tnext\n\t};\n}\n\n/**\n * @returns the directory name of a path.\n */\nexport function dirname(path: string): string {\n\tvar idx = ~path.lastIndexOf('/') || ~path.lastIndexOf('\\\\');\n\tif (idx === 0) {\n\t\treturn '.';\n\t} else if(~idx === 0) {\n\t\treturn path[0];\n\t} else {\n\t\treturn path.substring(0, ~idx);\n\t}\n}\n\n/**\n * @returns the base name of a path.\n */\nexport function basename(path: string): string {\n\tvar idx = ~path.lastIndexOf('/') || ~path.lastIndexOf('\\\\');\n\tif (idx === 0) {\n\t\treturn path;\n\t} else if (~idx === path.length - 1) {\n\t\treturn basename(path.substring(0, path.length - 1));\n\t} else {\n\t\treturn path.substr(~idx + 1);\n\t}\n}\n\n/**\n * @returns {{.far}} from boo.far or the empty string.\n */\nexport function extname(path: string): string {\n\tpath = basename(path);\n\tvar idx = ~path.lastIndexOf('.');\n\treturn idx ? path.substring(~idx) : '';\n}\n\n\nfunction getRootLength(path: string): number {\n\n\tif (!path) {\n\t\treturn 0;\n\t}\n\n\tpath = path.replace(/\\/|\\\\/g, '/');\n\n\tif (path[0] === '/') {\n\t\tif (path[1] !== '/') {\n\t\t\t// /far/boo\n\t\t\treturn 1;\n\t\t} else {\n\t\t\t// //server/far/boo\n\t\t\treturn 2;\n\t\t}\n\t}\n\n\tif (path[1] === ':') {\n\t\tif (path[2] === '/') {\n\t\t\t// c:/boo/far.txt\n\t\t\treturn 3;\n\t\t} else {\n\t\t\t// c:\n\t\t\treturn 2;\n\t\t}\n\t}\n\n\tif (path.indexOf('file:///') === 0) {\n\t\treturn 8; // 8 -> 'file:///'.length\n\t}\n\n\tvar idx = path.indexOf('://');\n\tif (idx !== -1) {\n\t\treturn idx + 3; // 3 -> \"://\".length\n\t}\n\treturn 0;\n}\n\nexport function join(...parts: string[]): string {\n\n\tvar rootLen = getRootLength(parts[0]),\n\t\troot: string;\n\n\t// simply preserve things like c:/, //localhost/, file:///, http://, etc\n\troot = parts[0].substr(0, rootLen);\n\tparts[0] = parts[0].substr(rootLen);\n\n\tvar allParts: string[] = [],\n\t\tendsWithSep = /[\\\\\\/]$/.test(parts[parts.length - 1]);\n\n\tfor (var i = 0; i < parts.length; i++) {\n\t\tallParts.push.apply(allParts, parts[i].split(/\\/|\\\\/));\n\t}\n\n\tfor (var i = 0; i < allParts.length; i++) {\n\t\tvar part = allParts[i];\n\t\tif (part === '.' || part.length === 0) {\n\t\t\tallParts.splice(i, 1);\n\t\t\ti -= 1;\n\t\t} else if (part === '..' && !!allParts[i - 1] && allParts[i - 1] !== '..') {\n\t\t\tallParts.splice(i - 1, 2);\n\t\t\ti -= 2;\n\t\t}\n\t}\n\n\tif (endsWithSep) {\n\t\tallParts.push('');\n\t}\n\n\tvar ret = allParts.join('/');\n\tif (root) {\n\t\tret = root.replace(/\\/|\\\\/g, '/') + ret;\n\t}\n\n\treturn ret;\n}\n\nexport function isUNC(path: string): boolean {\n\tif (!isWindows || !path) {\n\t\treturn false; // UNC is a windows concept\n\t}\n\n\tpath = this.normalize(path, true);\n\n\treturn path[0] === nativeSep && path[1] === nativeSep;\n}\n\nexport function isAbsolute(path: string): boolean {\n\treturn path && path[0] === '/';\n}\n\nexport function makeAbsolute(path: string, isPathNormalized?:boolean): string {\n\treturn isAbsolute(!isPathNormalized ? normalize(path) : path) ? path : sep + path;\n}\n\nexport function isRelative(path: string): boolean {\n\treturn path && path.length > 1 && path[0] === '.';\n}\n\nconst _slash = '/'.charCodeAt(0);\n\nexport function isEqualOrParent(path: string, candidate: string): boolean {\n\n\tif(path === candidate) {\n\t\treturn true;\n\t}\n\n\tpath = normalize(path);\n\tcandidate = normalize(candidate);\n\n\tlet candidateLen = candidate.length;\n\tlet lastCandidateChar = candidate.charCodeAt(candidateLen - 1);\n\tif(lastCandidateChar === _slash) {\n\t\tcandidate = candidate.substring(0, candidateLen - 1);\n\t\tcandidateLen -= 1;\n\t}\n\n\tif(path === candidate) {\n\t\treturn true;\n\t}\n\n\tif(!isLinux) {\n\t\t// case insensitive\n\t\tpath = path.toLowerCase();\n\t\tcandidate = candidate.toLowerCase();\n\t}\n\n\tif(path === candidate) {\n\t\treturn true;\n\t}\n\n\tif (path.indexOf(candidate) !== 0) {\n\t\treturn false;\n\t}\n\n\tlet char = path.charCodeAt(candidateLen);\n\treturn char === _slash;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {IMarshallingContribution} from 'vs/base/common/marshalling';\n\nexport interface IManyHandler {\n\thandle(rpcId:string, method:string, args:any[]): any;\n}\n\nexport interface IProxyHelper {\n\tcallOnRemote(proxyId: string, path: string, args:any[]): TPromise<any>;\n}\n\nexport interface IRemoteCom extends IProxyHelper {\n\tregisterBigHandler(handler:IManyHandler): void;\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport function createProxyFromCtor(remote:IProxyHelper, id:string, ctor:Function): any {\n\tvar result: any = {\n\t\t$__IS_REMOTE_OBJ: true\n\t};\n\tfor (var prop in ctor.prototype) {\n\t\tif (typeof ctor.prototype[prop] === 'function') {\n\t\t\tresult[prop] = createMethodProxy(remote, id, prop);\n\t\t}\n\t}\n\treturn result;\n}\n\nfunction createMethodProxy(remote:IProxyHelper, proxyId: string, path: string): (...myArgs: any[]) => TPromise<any> {\n\treturn (...myArgs: any[]) => {\n\t\treturn remote.callOnRemote(proxyId, path, myArgs);\n\t};\n}\n\nexport interface IObjDescriptor {\n\tmethods: string[];\n\tprops: {[name:string]:any;};\n}\n\nexport interface ISerializedProxy {\n\t$isProxyDescriptor: boolean;\n\tproxyId: string;\n\tdesc: IObjDescriptor;\n}\n\nexport class ProxiesMarshallingContribution implements IMarshallingContribution {\n\n\tprivate _remoteCom:IProxyHelper;\n\n\tconstructor(remoteCom:IProxyHelper) {\n\t\tthis._remoteCom = remoteCom;\n\t}\n\n\tpublic canSerialize(obj:any): boolean {\n\t\treturn (typeof obj.$__CREATE__PROXY__REQUEST === 'string');\n\t}\n\n\tpublic serialize(obj:any, serialize:(obj:any)=>any): ISerializedProxy {\n\t\tvar desc: IObjDescriptor = {\n\t\t\tmethods: [],\n\t\t\tprops: <any>{}\n\t\t};\n\n\t\tvar keys = Object.keys(obj);\n\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\tvar key = keys[i];\n\n\t\t\tif (typeof obj[key] === 'function') {\n\t\t\t\tdesc.methods.push(key);\n\t\t\t} else {\n\t\t\t\tdesc.props[key] = serialize(obj[key]);\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\t$isProxyDescriptor: true,\n\t\t\tproxyId: obj.$__CREATE__PROXY__REQUEST,\n\t\t\tdesc: desc\n\t\t};\n\t}\n\n\tpublic canDeserialize(obj:ISerializedProxy): boolean {\n\t\treturn obj.$isProxyDescriptor === true;\n\t}\n\n\tpublic deserialize(obj:ISerializedProxy, deserialize:(obj:any)=>any): any {\n\t\t// this is an object\n\t\tvar result: any = {\n\t\t\t$__IS_REMOTE_OBJ: true\n\t\t};\n\n\t\tvar methods = obj.desc.methods;\n\t\tfor (var i = 0; i < methods.length; i++) {\n\t\t\tresult[methods[i]] = createMethodProxy(this._remoteCom, obj.proxyId, methods[i]);\n\t\t}\n\n\t\tvar props = obj.desc.props;\n\t\tfor (var prop in props) {\n\t\t\tif (hasOwnProperty.call(props, prop)) {\n\t\t\t\tresult[prop] = deserialize(props[prop]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport { globals } from 'vs/base/common/platform';\n\nvar hasPerformanceNow = (globals.performance && typeof globals.performance.now === 'function');\n\nexport class StopWatch {\n\n\tprivate _startTime: number;\n\tprivate _stopTime: number;\n\n\tpublic static create(): StopWatch {\n\t\treturn new StopWatch(hasPerformanceNow ? globals.performance.now() : new Date().getTime());\n\t}\n\n\tconstructor(startTime: number) {\n\t\tthis._startTime = startTime;\n\t\tthis._stopTime = -1;\n\t}\n\n\tpublic stop(): void {\n\t\tthis._stopTime = (hasPerformanceNow ? globals.performance.now() : new Date().getTime());\n\t}\n\n\tpublic elapsed(): number {\n\t\tif (this._stopTime !== -1) {\n\t\t\treturn this._stopTime - this._startTime;\n\t\t}\n\t\tvar now = (hasPerformanceNow ? globals.performance.now() : new Date().getTime());\n\t\treturn now - this._startTime;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\n\n/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\nexport function isArray(array: any): array is any[] {\n\tif (Array.isArray) {\n\t\treturn Array.isArray(array);\n\t}\n\n\tif (array && typeof (array.length) === 'number' && array.constructor === Array) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str: any): str is string {\n\tif (typeof (str) === 'string' || str instanceof String) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Array and each element in the array is a string.\n */\nexport function isStringArray(value: any): value is string[] {\n\treturn isArray(value) && (<any[]>value).every(elem => isString(elem));\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Object or not.\n */\nexport function isObject(obj: any): obj is any {\n\n\t// Needed for IE8\n\tif (typeof obj === 'undefined' || obj === null) {\n\t\treturn false;\n\t}\n\n\treturn Object.prototype.toString.call(obj) === '[object Object]';\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj: any): obj is number {\n\tif ((typeof (obj) === 'number' || obj instanceof Number) && !isNaN(obj)) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj: any): obj is boolean {\n\treturn obj === true || obj === false;\n}\n\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj: any): boolean {\n\treturn typeof (obj) === 'undefined';\n}\n\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj: any): boolean {\n\treturn isUndefined(obj) || obj === null;\n}\n\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * @returns whether the provided parameter is an empty JavaScript Object or not.\n */\nexport function isEmptyObject(obj: any): obj is any {\n\tif (!isObject(obj)) {\n\t\treturn false;\n\t}\n\n\tfor (var key in obj) {\n\t\tif (hasOwnProperty.call(obj, key)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj: any): obj is Function {\n\treturn Object.prototype.toString.call(obj) === '[object Function]';\n}\n\n/**\n * @returns whether the provided parameters is are JavaScript Function or not.\n */\nexport function areFunctions(...objects: any[]): boolean {\n\treturn objects && objects.length > 0 && objects.every((object) => isFunction(object));\n}\n\nexport type TypeConstraint = string | Function;\n\nexport function validateConstraints(args: any[], constraints: TypeConstraint[]): void {\n\tconst len = Math.min(args.length, constraints.length);\n\tfor (let i = 0; i < len; i++) {\n\t\tvalidateConstraint(args[i], constraints[i])\n\t}\n}\n\nexport function validateConstraint(arg: any, constraint: TypeConstraint): void {\n\n\tif (typeof constraint === 'string') {\n\t\tif (typeof arg !== constraint) {\n\t\t\tthrow new Error(`argument does not match constraint: typeof ${constraint}`);\n\t\t}\n\t} else if (typeof constraint === 'function') {\n\t\tif (arg instanceof constraint) {\n\t\t\treturn;\n\t\t}\n\t\tif (arg && arg.constructor === constraint) {\n\t\t\treturn;\n\t\t}\n\t\tif (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n\t\t\treturn;\n\t\t}\n\t\tthrow new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n\t}\n}\n\n/**\n * Creates a new object of the provided class and will call the constructor with\n * any additional argument supplied.\n */\nexport function create(ctor: Function, ...args: any[]): any {\n\tvar obj = Object.create(ctor.prototype);\n\tctor.apply(obj, args);\n\n\treturn obj;\n}\n\nexport interface IFunction0<T> {\n\t(): T;\n}\nexport interface IFunction1<A1, T> {\n\t(a1: A1): T;\n}\nexport interface IFunction2<A1, A2, T> {\n\t(a1: A1, a2: A2): T;\n}\nexport interface IFunction3<A1, A2, A3, T> {\n\t(a1: A1, a2: A2, a3: A3): T;\n}\nexport interface IFunction4<A1, A2, A3, A4, T> {\n\t(a1: A1, a2: A2, a3: A3, a4: A4): T;\n}\nexport interface IFunction5<A1, A2, A3, A4, A5, T> {\n\t(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): T;\n}\nexport interface IFunction6<A1, A2, A3, A4, A5, A6, T> {\n\t(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): T;\n}\nexport interface IFunction7<A1, A2, A3, A4, A5, A6, A7, T> {\n\t(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): T;\n}\nexport interface IFunction8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n\t(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): T;\n}\n\nexport interface IAction0 extends IFunction0<void> { }\nexport interface IAction1<A1> extends IFunction1<A1, void> { }\nexport interface IAction2<A1, A2> extends IFunction2<A1, A2, void> { }\nexport interface IAction3<A1, A2, A3> extends IFunction3<A1, A2, A3, void> { }\nexport interface IAction4<A1, A2, A3, A4> extends IFunction4<A1, A2, A3, A4, void> { }\nexport interface IAction5<A1, A2, A3, A4, A5> extends IFunction5<A1, A2, A3, A4, A5, void> { }\nexport interface IAction6<A1, A2, A3, A4, A5, A6> extends IFunction6<A1, A2, A3, A4, A5, A6, void> { }\nexport interface IAction7<A1, A2, A3, A4, A5, A6, A7> extends IFunction7<A1, A2, A3, A4, A5, A6, A7, void> { }\nexport interface IAction8<A1, A2, A3, A4, A5, A6, A7, A8> extends IFunction8<A1, A2, A3, A4, A5, A6, A7, A8, void> { }\n\nexport interface IAsyncFunction0<T> extends IFunction0<TPromise<T>> { }\nexport interface IAsyncFunction1<A1, T> extends IFunction1<A1, TPromise<T>> { }\nexport interface IAsyncFunction2<A1, A2, T> extends IFunction2<A1, A2, TPromise<T>> { }\nexport interface IAsyncFunction3<A1, A2, A3, T> extends IFunction3<A1, A2, A3, TPromise<T>> { }\nexport interface IAsyncFunction4<A1, A2, A3, A4, T> extends IFunction4<A1, A2, A3, A4, TPromise<T>> { }\nexport interface IAsyncFunction5<A1, A2, A3, A4, A5, T> extends IFunction5<A1, A2, A3, A4, A5, TPromise<T>> { }\nexport interface IAsyncFunction6<A1, A2, A3, A4, A5, A6, T> extends IFunction6<A1, A2, A3, A4, A5, A6, TPromise<T>> { }\nexport interface IAsyncFunction7<A1, A2, A3, A4, A5, A6, A7, T> extends IFunction7<A1, A2, A3, A4, A5, A6, A7, TPromise<T>> { }\nexport interface IAsyncFunction8<A1, A2, A3, A4, A5, A6, A7, A8, T> extends IFunction8<A1, A2, A3, A4, A5, A6, A7, A8, TPromise<T>> { }\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport objects = require('vs/base/common/types');\nimport collections = require('vs/base/common/collections');\n\nexport interface Node<T> {\n\tdata:T;\n\tincoming:{[key:string]:Node<T>};\n\toutgoing:{[key:string]:Node<T>};\n}\n\nexport function newNode<T>(data:T):Node<T> {\n\treturn {\n\t\tdata: data, \n\t\tincoming: {}, \n\t\toutgoing: {}\n\t};\n}\n\nexport class Graph<T> {\n\n\tprivate _nodes:{[key:string]:Node<T>} = Object.create(null);\n\n\tconstructor(private _hashFn:(element:T)=>string) {\n\t\t// empty\n\t}\n\n\tpublic roots():Node<T>[] {\n\t\tvar ret:Node<T>[] = [];\n\t\tcollections.forEach(this._nodes, entry => {\n\t\t\tif(objects.isEmptyObject(entry.value.outgoing)) {\n\t\t\t\tret.push(entry.value);\n\t\t\t}\n\t\t});\n\t\treturn ret;\n\t}\n\n\tpublic traverse(start:T, inwards:boolean, callback:(data:T)=>void):void {\n\t\tvar startNode = this.lookup(start);\n\t\tif(!startNode) {\n\t\t\treturn;\n\t\t}\n\t\tthis._traverse(startNode, inwards, {}, callback);\n\t}\n\n\tprivate _traverse(node:Node<T>, inwards:boolean, seen:{[key:string]:boolean}, callback:(data:T)=>void):void {\n\t\tvar key = this._hashFn(node.data);\n\t\tif(collections.contains(seen, key)) {\n\t\t\treturn;\n\t\t}\n\t\tseen[key] = true;\n\t\tcallback(node.data);\n\t\tvar nodes = inwards ? node.outgoing : node.incoming;\n\t\tcollections.forEach(nodes, (entry) => this._traverse(entry.value, inwards, seen, callback));\n\t}\n\n\tpublic insertEdge(from:T, to:T):void {\n\t\tvar fromNode = this.lookupOrInsertNode(from), \n\t\t\ttoNode = this.lookupOrInsertNode(to);\n\n\t\tfromNode.outgoing[this._hashFn(to)] = toNode;\n\t\ttoNode.incoming[this._hashFn(from)] = fromNode;\n\t}\n\n\tpublic removeNode(data:T):void {\n\t\tvar key = this._hashFn(data);\n\t\tdelete this._nodes[key];\n\t\tcollections.forEach(this._nodes, (entry) => {\n\t\t\tdelete entry.value.outgoing[key];\n\t\t\tdelete entry.value.incoming[key];\n\t\t});\n\t}\n\n\tpublic lookupOrInsertNode(data:T):Node<T> {\n\t\tvar key = this._hashFn(data),\n\t\t\tnode = collections.lookup(this._nodes, key);\n\n\t\tif(!node) {\n\t\t\tnode = newNode(data);\n\t\t\tthis._nodes[key] = node;\n\t\t}\n\n\t\treturn node;\n\t}\n\n\tpublic lookup(data:T):Node<T> {\n\t\treturn collections.lookup(this._nodes, this._hashFn(data));\n\t}\n\n\tpublic get length():number {\n\t\treturn Object.keys(this._nodes).length;\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as Types from 'vs/base/common/types';\n\n/**\n * Equalable objects can compute a\n * hash-code and can also tell if they\n * are equal to other objects.\n */\nexport interface IEqualable {\n\thashCode(): number;\n\tequals(other: any): boolean;\n}\n\n\nexport function clone<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tif (obj instanceof RegExp) {\n\t\treturn obj;\n\t}\n\tvar result = (Array.isArray(obj)) ? <any>[] : <any>{};\n\tObject.keys(obj).forEach((key) => {\n\t\tif (obj[key] && typeof obj[key] === 'object') {\n\t\t\tresult[key] = clone(obj[key]);\n\t\t} else {\n\t\t\tresult[key] = obj[key];\n\t\t}\n\t});\n\treturn result;\n}\n\nexport function deepClone<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tvar result = (Array.isArray(obj)) ? <any>[] : <any>{};\n\tObject.getOwnPropertyNames(obj).forEach((key) => {\n\t\tif (obj[key] && typeof obj[key] === 'object') {\n\t\t\tresult[key] = deepClone(obj[key]);\n\t\t} else {\n\t\t\tresult[key] = obj[key];\n\t\t}\n\t});\n\treturn result;\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport function cloneAndChange(obj: any, changer: (orig: any) => any): any {\n\treturn _cloneAndChange(obj, changer, []);\n}\n\nfunction _cloneAndChange(obj: any, changer: (orig: any) => any, encounteredObjects: any[]): any {\n\tif (Types.isUndefinedOrNull(obj)) {\n\t\treturn obj;\n\t}\n\n\tvar changed = changer(obj);\n\tif (typeof changed !== 'undefined') {\n\t\treturn changed;\n\t}\n\n\tif (Types.isArray(obj)) {\n\t\tvar r1: any[] = [];\n\t\tfor (var i1 = 0; i1 < obj.length; i1++) {\n\t\t\tr1.push(_cloneAndChange(obj[i1], changer, encounteredObjects));\n\t\t}\n\t\treturn r1;\n\t}\n\n\tif (Types.isObject(obj)) {\n\t\tif (encounteredObjects.indexOf(obj) >= 0) {\n\t\t\tthrow new Error('Cannot clone recursive data-structure');\n\t\t}\n\t\tencounteredObjects.push(obj);\n\t\tvar r2 = {};\n\t\tfor (var i2 in obj) {\n\t\t\tif (hasOwnProperty.call(obj, i2)) {\n\t\t\t\tr2[i2] = _cloneAndChange(obj[i2], changer, encounteredObjects);\n\t\t\t}\n\t\t}\n\t\tencounteredObjects.pop();\n\t\treturn r2;\n\t}\n\n\treturn obj;\n}\n\n// DON'T USE THESE FUNCTION UNLESS YOU KNOW HOW CHROME\n// WORKS... WE HAVE SEEN VERY WEIRD BEHAVIOUR WITH CHROME >= 37\n\n///**\n// * Recursively call Object.freeze on object and any properties that are objects.\n// */\n//export function deepFreeze(obj:any):void {\n//\tObject.freeze(obj);\n//\tObject.keys(obj).forEach((key) => {\n//\t\tif(!(typeof obj[key] === 'object') || Object.isFrozen(obj[key])) {\n//\t\t\treturn;\n//\t\t}\n//\n//\t\tdeepFreeze(obj[key]);\n//\t});\n//\tif(!Object.isFrozen(obj)) {\n//\t\tconsole.log('too warm');\n//\t}\n//}\n//\n//export function deepSeal(obj:any):void {\n//\tObject.seal(obj);\n//\tObject.keys(obj).forEach((key) => {\n//\t\tif(!(typeof obj[key] === 'object') || Object.isSealed(obj[key])) {\n//\t\t\treturn;\n//\t\t}\n//\n//\t\tdeepSeal(obj[key]);\n//\t});\n//\tif(!Object.isSealed(obj)) {\n//\t\tconsole.log('NOT sealed');\n//\t}\n//}\n\n/**\n * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\n * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\n */\nexport function mixin(destination: any, source: any, overwrite: boolean = true): any {\n\tif (!Types.isObject(destination)) {\n\t\treturn source;\n\t}\n\n\tif (Types.isObject(source)) {\n\t\tObject.keys(source).forEach((key) => {\n\t\t\tif (key in destination) {\n\t\t\t\tif (overwrite) {\n\t\t\t\t\tif (Types.isObject(destination[key]) && Types.isObject(source[key])) {\n\t\t\t\t\t\tmixin(destination[key], source[key], overwrite);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdestination[key] = source[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdestination[key] = source[key];\n\t\t\t}\n\t\t});\n\t}\n\treturn destination;\n}\n\nexport function assign(destination: any, ...sources: any[]): any {\n\tsources.forEach(source => Object.keys(source).forEach((key) => destination[key] = source[key]));\n\treturn destination;\n}\n\n/**\n * Returns a new object that has all values of {{obj}}\n * plus those from {{defaults}}.\n */\nexport function withDefaults<T>(obj: T, defaults: T): T {\n\treturn mixin(clone(defaults), obj || {});\n}\n\nexport function equals(one: any, other: any): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\tif (one === null || one === undefined || other === null || other === undefined) {\n\t\treturn false;\n\t}\n\tif (typeof one !== typeof other) {\n\t\treturn false;\n\t}\n\tif (typeof one !== 'object') {\n\t\treturn false;\n\t}\n\tif ((Array.isArray(one)) !== (Array.isArray(other))) {\n\t\treturn false;\n\t}\n\n\tvar i: number,\n\t\tkey: string;\n\n\tif (Array.isArray(one)) {\n\t\tif (one.length !== other.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < one.length; i++) {\n\t\t\tif (!equals(one[i], other[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tvar oneKeys:string[] = [];\n\n\t\tfor (key in one) {\n\t\t\toneKeys.push(key);\n\t\t}\n\t\toneKeys.sort();\n\t\tvar otherKeys:string[] = [];\n\t\tfor (key in other) {\n\t\t\totherKeys.push(key);\n\t\t}\n\t\totherKeys.sort();\n\t\tif (!equals(oneKeys, otherKeys)) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < oneKeys.length; i++) {\n\t\t\tif (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\nexport function ensureProperty(obj: any, property: string, defaultValue: any) {\n\tif (typeof obj[property] === 'undefined') {\n\t\tobj[property] = defaultValue;\n\t}\n}\n\nexport function arrayToHash(array: any[]) {\n\tvar result: any = {};\n\tfor (var i = 0; i < array.length; ++i) {\n\t\tresult[array[i]] = true;\n\t}\n\treturn result;\n}\n\n/**\n * Given an array of strings, returns a function which, given a string\n * returns true or false whether the string is in that array.\n */\nexport function createKeywordMatcher(arr: string[], caseInsensitive: boolean = false): (str: string) => boolean {\n\tif (caseInsensitive) {\n\t\tarr = arr.map(function (x) { return x.toLowerCase(); });\n\t}\n\tvar hash = arrayToHash(arr);\n\tif (caseInsensitive) {\n\t\treturn function (word) {\n\t\t\treturn hash[word.toLowerCase()] !== undefined && hash.hasOwnProperty(word.toLowerCase());\n\t\t};\n\t} else {\n\t\treturn function (word) {\n\t\t\treturn hash[word] !== undefined && hash.hasOwnProperty(word);\n\t\t};\n\t}\n}\n\n/**\n * Started from TypeScript's __extends function to make a type a subclass of a specific class.\n * Modified to work with properties already defined on the derivedClass, since we can't get TS\n * to call this method before the constructor definition.\n */\nexport function derive(baseClass: any, derivedClass: any): void {\n\n\tfor (var prop in baseClass) {\n\t\tif (baseClass.hasOwnProperty(prop)) {\n\t\t\tderivedClass[prop] = baseClass[prop];\n\t\t}\n\t}\n\n\tderivedClass = derivedClass || function () { };\n\tvar basePrototype = baseClass.prototype;\n\tvar derivedPrototype = derivedClass.prototype;\n\tderivedClass.prototype = Object.create(basePrototype);\n\n\tfor (var prop in derivedPrototype) {\n\t\tif (derivedPrototype.hasOwnProperty(prop)) {\n\t\t\t// handle getters and setters properly\n\t\t\tObject.defineProperty(derivedClass.prototype, prop, Object.getOwnPropertyDescriptor(derivedPrototype, prop));\n\t\t}\n\t}\n\n\t// Cast to any due to Bug 16188:PropertyDescriptor set and get function should be optional.\n\tObject.defineProperty(derivedClass.prototype, 'constructor', <any>{ value: derivedClass, writable: true, configurable: true, enumerable: true });\n}\n\n/**\n * Calls JSON.Stringify with a replacer to break apart any circular references.\n * This prevents JSON.stringify from throwing the exception\n *  \"Uncaught TypeError: Converting circular structure to JSON\"\n */\nexport function safeStringify(obj: any): string {\n\tvar seen: any[] = [];\n\treturn JSON.stringify(obj, (key, value) => {\n\n\t\tif (Types.isObject(value) || Array.isArray(value)) {\n\t\t\tif (seen.indexOf(value) !== -1) {\n\t\t\t\treturn '[Circular]';\n\t\t\t} else {\n\t\t\t\tseen.push(value);\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t});\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport objects = require('vs/base/common/objects');\nimport types = require('vs/base/common/types');\n\nexport interface IMarshallingContribution {\n\n\tcanSerialize(obj:any): boolean;\n\n\tserialize(obj:any, serialize:(obj:any)=>any): any;\n\n\tcanDeserialize(obj:any): boolean;\n\n\tdeserialize(obj:any, deserialize:(obj:any)=>any): any;\n\n}\n\nvar marshallingContributions:IMarshallingContribution[] = [];\n\nexport function registerMarshallingContribution(contribution:IMarshallingContribution): void {\n\tmarshallingContributions.push(contribution);\n}\n\nvar currentDynamicContrib:IMarshallingContribution = null;\n\nexport function canSerialize(obj: any): boolean {\n\tfor (let contrib of marshallingContributions) {\n\t\tif (contrib.canSerialize(obj)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\tif (currentDynamicContrib && currentDynamicContrib.canSerialize(obj)) {\n\t\treturn true;\n\t}\n}\n\nexport function serialize(obj:any): any {\n\treturn objects.cloneAndChange(obj, (orig:any) => {\n\t\tif (typeof orig === 'object') {\n\t\t\tfor (var i = 0; i < marshallingContributions.length; i++) {\n\t\t\t\tvar contrib = marshallingContributions[i];\n\t\t\t\tif (contrib.canSerialize(orig)) {\n\t\t\t\t\treturn contrib.serialize(orig, serialize);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (currentDynamicContrib && currentDynamicContrib.canSerialize(orig)) {\n\t\t\t\treturn currentDynamicContrib.serialize(orig, serialize);\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t});\n}\n\nexport function deserialize(obj:any): any {\n\treturn objects.cloneAndChange(obj, (orig:any) => {\n\t\tif (types.isObject(orig)) {\n\t\t\tfor (var i = 0; i < marshallingContributions.length; i++) {\n\t\t\t\tvar contrib = marshallingContributions[i];\n\t\t\t\tif (contrib.canDeserialize(orig)) {\n\t\t\t\t\treturn contrib.deserialize(orig, deserialize);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (currentDynamicContrib && currentDynamicContrib.canDeserialize(orig)) {\n\t\t\t\treturn currentDynamicContrib.deserialize(orig, deserialize);\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t});\n}\n\n// RegExp marshaller\n\ninterface ISerializedRegExp {\n\t$isRegExp: boolean;\n\tsource: string;\n\tflags: string;\n}\n\nregisterMarshallingContribution({\n\n\tcanSerialize: (obj:any): boolean => {\n\t\treturn obj instanceof RegExp;\n\t},\n\n\tserialize: (regex:RegExp, serialize:(obj:any)=>any): ISerializedRegExp => {\n\t\tvar flags = '';\n\n\t\tif (regex.global) {\n\t\t\tflags += 'g';\n\t\t} else if (regex.ignoreCase) {\n\t\t\tflags += 'i';\n\t\t} else if (regex.multiline) {\n\t\t\tflags += 'm';\n\t\t}\n\n\t\treturn {\n\t\t\t$isRegExp: true,\n\t\t\tsource: regex.source,\n\t\t\tflags: flags\n\t\t};\n\t},\n\n\tcanDeserialize: (obj:ISerializedRegExp): boolean => {\n\t\treturn obj.$isRegExp;\n\t},\n\n\tdeserialize: (obj:ISerializedRegExp, deserialize:(obj:any)=>any): any => {\n\t\treturn new RegExp(obj.source, obj.flags);\n\t}\n\n});\n\nexport function marshallObject(obj:any, dynamicContrib:IMarshallingContribution = null): string {\n\tcurrentDynamicContrib = dynamicContrib;\n\tvar r = JSON.stringify(serialize(obj));\n\tcurrentDynamicContrib = null;\n\treturn r;\n}\n\nexport function demarshallObject(serialized:string, dynamicContrib:IMarshallingContribution = null): any {\n\tcurrentDynamicContrib = dynamicContrib;\n\tvar r = deserialize(JSON.parse(serialized));\n\tcurrentDynamicContrib = null;\n\treturn r;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport marshalling = require('vs/base/common/marshalling');\nimport platform = require('vs/base/common/platform');\n\n// see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent\nfunction fixedEncodeURIComponent(str: string): string {\n\treturn encodeURIComponent(str).replace(/[!'()*]/g, c => '%' + c.charCodeAt(0).toString(16).toUpperCase());\n}\n\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component paths\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n *\n *\n */\nexport default class URI {\n\n\tprivate static _empty = '';\n\tprivate static _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n\tprivate static _driveLetterPath = /^\\/[a-zA-z]:/;\n\tprivate static _driveLetter = /^[a-zA-z]:/;\n\n\tprivate _scheme: string;\n\tprivate _authority: string;\n\tprivate _path: string;\n\tprivate _query: string;\n\tprivate _fragment: string;\n\n\tconstructor() {\n\t\tthis._scheme = URI._empty;\n\t\tthis._authority = URI._empty;\n\t\tthis._path = URI._empty;\n\t\tthis._query = URI._empty;\n\t\tthis._fragment = URI._empty;\n\t}\n\n\t/**\n\t * scheme is the 'http' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part before the first colon.\n\t */\n\tget scheme() {\n\t\treturn this._scheme;\n\t}\n\n\t/**\n\t * authority is the 'www.msft.com' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part between the first double slashes and the next slash.\n\t */\n\tget authority() {\n\t\treturn this._authority;\n\t}\n\n\t/**\n\t * path is the '/some/path' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\tget path() {\n\t\treturn this._path;\n\t}\n\n\t/**\n\t * query is the 'query' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\tget query() {\n\t\treturn this._query;\n\t}\n\n\t/**\n\t * fragment is the 'fragment' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\tget fragment() {\n\t\treturn this._fragment;\n\t}\n\n\t// ---- filesystem path -----------------------\n\n\tprivate _fsPath: string;\n\n\t/**\n\t * Returns a string representing the corresponding file system path of this URI.\n\t * Will handle UNC paths and normalize windows drive letters to lower-case. Also\n\t * uses the platform specific path separator. Will *not* validate the path for\n\t * invalid characters and semantics. Will *not* look at the scheme of this URI.\n\t */\n\tget fsPath() {\n\t\tif (!this._fsPath) {\n\t\t\tvar value: string;\n\t\t\tif (this._authority && this.scheme === 'file') {\n\t\t\t\t// unc path: file://shares/c$/far/boo\n\t\t\t\tvalue = `//${this._authority}${this._path}`;\n\t\t\t} else if (URI._driveLetterPath.test(this._path)) {\n\t\t\t\t// windows drive letter: file:///c:/far/boo\n\t\t\t\tvalue = this._path[1].toLowerCase() + this._path.substr(2);\n\t\t\t} else {\n\t\t\t\t// other path\n\t\t\t\tvalue = this._path;\n\t\t\t}\n\t\t\tif (platform.isWindows) {\n\t\t\t\tvalue = value.replace(/\\//g, '\\\\');\n\t\t\t}\n\t\t\tthis._fsPath = value;\n\t\t}\n\t\treturn this._fsPath;\n\t}\n\n\t// ---- modify to new -------------------------\n\n\tpublic with(scheme: string, authority: string, path: string, query: string, fragment: string): URI {\n\t\tvar ret = new URI();\n\t\tret._scheme = scheme || this.scheme;\n\t\tret._authority = authority || this.authority;\n\t\tret._path = path || this.path;\n\t\tret._query = query || this.query;\n\t\tret._fragment = fragment || this.fragment;\n\t\tURI._validate(ret);\n\t\treturn ret;\n\t}\n\n\tpublic withScheme(value: string): URI {\n\t\treturn this.with(value, undefined, undefined, undefined, undefined);\n\t}\n\n\tpublic withAuthority(value: string): URI {\n\t\treturn this.with(undefined, value, undefined, undefined, undefined);\n\t}\n\n\tpublic withPath(value: string): URI {\n\t\treturn this.with(undefined, undefined, value, undefined, undefined);\n\t}\n\n\tpublic withQuery(value: string): URI {\n\t\treturn this.with(undefined, undefined, undefined, value, undefined);\n\t}\n\n\tpublic withFragment(value: string): URI {\n\t\treturn this.with(undefined, undefined, undefined, undefined, value);\n\t}\n\n\t// ---- parse & validate ------------------------\n\n\tpublic static parse(value: string): URI {\n\t\tvar ret = URI._parse(value);\n\t\tret = ret.with(undefined,\n\t\t\tdecodeURIComponent(ret.authority),\n\t\t\tdecodeURIComponent(ret.path),\n\t\t\tdecodeURIComponent(ret.query),\n\t\t\tdecodeURIComponent(ret.fragment));\n\n\t\treturn ret;\n\t}\n\n\tpublic static file(path: string): URI {\n\t\tpath = path.replace(/\\\\/g, '/');\n\t\tpath = path.replace(/%/g, '%25');\n\t\tpath = path.replace(/#/g, '%23');\n\t\tpath = path.replace(/\\?/g, '%3F');\n\t\tpath = URI._driveLetter.test(path)\n\t\t\t? '/' + path\n\t\t\t: path;\n\n\t\tvar ret = URI._parse(path);\n\t\tif (ret.scheme || ret.fragment || ret.query) {\n\t\t\tthrow new Error('Path contains a scheme, fragment or a query. Can not convert it to a file uri.');\n\t\t}\n\n\t\tret = ret.with('file', undefined,\n\t\t\tdecodeURIComponent(ret.path),\n\t\t\tundefined, undefined);\n\n\t\treturn ret;\n\t}\n\n\tprivate static _parse(value: string): URI {\n\t\tvar ret = new URI();\n\t\tvar match = URI._regexp.exec(value);\n\t\tif (match) {\n\t\t\tret._scheme = match[2] || ret._scheme;\n\t\t\tret._authority = match[4] || ret._authority;\n\t\t\tret._path = match[5] || ret._path;\n\t\t\tret._query = match[7] || ret._query;\n\t\t\tret._fragment = match[9] || ret._fragment;\n\t\t};\n\t\tURI._validate(ret);\n\t\treturn ret;\n\t}\n\n\tpublic static create(scheme?: string, authority?: string, path?: string, query?: string, fragment?: string): URI {\n\t\treturn new URI().with(scheme, authority, path, query, fragment);\n\t}\n\n\tprivate static _validate(ret: URI): void {\n\n\t\t// validation\n\t\t// path, http://tools.ietf.org/html/rfc3986#section-3.3\n\t\t// If a URI contains an authority component, then the path component\n\t\t// must either be empty or begin with a slash (\"/\") character.  If a URI\n\t\t// does not contain an authority component, then the path cannot begin\n\t\t// with two slash characters (\"//\").\n\t\tif (ret.authority && ret.path && ret.path[0] !== '/') {\n\t\t\tthrow new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n\t\t}\n\t\tif (!ret.authority && ret.path.indexOf('//') === 0) {\n\t\t\tthrow new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n\t\t}\n\t}\n\n\t// ---- printing/externalize ---------------------------\n\n\tprivate _formatted: string;\n\n\tpublic toString(): string {\n\t\tif (!this._formatted) {\n\t\t\tvar parts: string[] = [];\n\n\t\t\tif (this._scheme) {\n\t\t\t\tparts.push(this._scheme);\n\t\t\t\tparts.push(':');\n\t\t\t}\n\t\t\tif (this._authority || this._scheme === 'file') {\n\t\t\t\tparts.push('//');\n\t\t\t}\n\t\t\tif (this._authority) {\n\t\t\t\tvar authority = this._authority,\n\t\t\t\t\tidx: number;\n\n\t\t\t\tauthority = authority.toLowerCase();\n\t\t\t\tidx = authority.indexOf(':');\n\t\t\t\tif (idx === -1) {\n\t\t\t\t\tparts.push(fixedEncodeURIComponent(authority));\n\t\t\t\t} else {\n\t\t\t\t\tparts.push(fixedEncodeURIComponent(authority.substr(0, idx)));\n\t\t\t\t\tparts.push(authority.substr(idx));\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this._path) {\n\t\t\t\t// encode every segment of the path\n\t\t\t\tvar path = this._path,\n\t\t\t\t\tsegments: string[];\n\n\t\t\t\t// lower-case win drive letters in /C:/fff\n\t\t\t\tif (URI._driveLetterPath.test(path)) {\n\t\t\t\t\tpath = '/' + path[1].toLowerCase() + path.substr(2);\n\t\t\t\t} else if (URI._driveLetter.test(path)) {\n\t\t\t\t\tpath = path[0].toLowerCase() + path.substr(1);\n\t\t\t\t}\n\t\t\t\tsegments = path.split('/');\n\t\t\t\tfor (var i = 0, len = segments.length; i < len; i++) {\n\t\t\t\t\tsegments[i] = fixedEncodeURIComponent(segments[i]);\n\t\t\t\t}\n\t\t\t\tparts.push(segments.join('/'));\n\t\t\t}\n\t\t\tif (this._query) {\n\t\t\t\t// in http(s) querys often use 'key=value'-pairs and\n\t\t\t\t// ampersand characters for multiple pairs\n\t\t\t\tvar encoder = /https?/i.test(this.scheme)\n\t\t\t\t\t? encodeURI\n\t\t\t\t\t: fixedEncodeURIComponent;\n\n\t\t\t\tparts.push('?');\n\t\t\t\tparts.push(encoder(this._query));\n\t\t\t}\n\t\t\tif (this._fragment) {\n\t\t\t\tparts.push('#');\n\t\t\t\tparts.push(fixedEncodeURIComponent(this._fragment));\n\t\t\t}\n\t\t\tthis._formatted = parts.join('');\n\t\t}\n\t\treturn this._formatted;\n\t}\n\n\tpublic toJSON(): any {\n\t\treturn this.toString();\n\t}\n\n\tpublic _toSerialized(): any {\n\t\t// because network.URL extends this class it is important that\n\t\t// it can refine/override this method\n\n\t\treturn {\n\t\t\t$isURI: true,\n\t\t\t_scheme: this._scheme,\n\t\t\t_authority: this._authority,\n\t\t\t_path: this._path,\n\t\t\t_query: this._query,\n\t\t\t_fragment: this._fragment.replace(/URL_MARSHAL_REMOVE.*$/, ''), // TODO@Alex: implement derived resources (embedded mirror models) better\n\t\t\t_fsPath: this._fsPath,\n\t\t\t_formatted: this._formatted && this._formatted.replace(/#?URL_MARSHAL_REMOVE.*$/, ''), // TODO@Alex: implement derived resources (embedded mirror models) better\n\t\t};\n\t}\n\n\tstatic _fromSerialized(data: any): URI {\n\t\tlet result = new URI();\n\t\tresult._scheme = data._scheme;\n\t\tresult._authority = data._authority;\n\t\tresult._path = data._path;\n\t\tresult._query = data._query;\n\t\tresult._fragment = data._fragment;\n\t\tresult._fsPath = data._fsPath;\n\t\tresult._formatted = data._formatted;\n\t\treturn result;\n\t}\n\n\tpublic static isURI(thing: any): thing is URI {\n\t\tif (thing instanceof URI) {\n\t\t\treturn true;\n\t\t}\n\t\tif(!thing) {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof (<URI>thing).scheme !== 'string') {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof (<URI>thing).authority !== 'string') {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof (<URI>thing).fsPath !== 'string') {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof (<URI>thing).query !== 'string') {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof (<URI>thing).fragment !== 'string') {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof (<URI>thing).with !== 'function') {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof (<URI>thing).withScheme !== 'function') {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof (<URI>thing).withAuthority !== 'function') {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof (<URI>thing).withPath !== 'function') {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof (<URI>thing).withQuery !== 'function') {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof (<URI>thing).withFragment !== 'function') {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof (<URI>thing).toString !== 'function') {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof (<URI>thing).toJSON !== 'function') {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n}\n\ninterface _ISerializedURI {\n\t$isURI: boolean;\n\n\t_scheme: string;\n\t_authority: string;\n\t_path: string;\n\t_query: string;\n\t_fragment: string;\n\n\t_fsPath: string;\n\t_formatted: string;\n}\n\nmarshalling.registerMarshallingContribution({\n\n\tcanSerialize: (obj:any): boolean => {\n\t\treturn URI.isURI(obj);\n\t},\n\n\tserialize: (url: URI, serialize: (obj: any) => any): _ISerializedURI => {\n\t\treturn url._toSerialized();\n\t},\n\n\tcanDeserialize: (obj:_ISerializedURI): boolean => {\n\t\treturn obj.$isURI;\n\t},\n\n\tdeserialize: (obj:_ISerializedURI, deserialize:(obj:any)=>any): any => {\n\t\treturn URI._fromSerialized(obj);\n\t}\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\n/**\n * Represents a UUID as defined by rfc4122.\n */\nexport interface UUID {\n\n\t/**\n\t * @returns the canonical representation in sets of hexadecimal numbers separated by dashes.\n\t */\n\tasHex():string;\n\n\tequals(other:UUID):boolean;\n}\n\nclass ValueUUID implements UUID {\n\n\tconstructor(public _value:string) {\n\t\t// empty\n\t}\n\n\tpublic asHex():string {\n\t\treturn this._value;\n\t}\n\n\tpublic equals(other:UUID):boolean {\n\t\treturn this.asHex() === other.asHex();\n\t}\n}\n\nclass V4UUID extends ValueUUID {\n\n\tprivate static _chars = ['0', '1', '2', '3', '4', '5', '6', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n\n\tprivate static _timeHighBits = ['8', '9', 'a', 'b'];\n\n\tprivate static _oneOf(array:string[]):string {\n\t\tvar idx = Math.floor(array.length * Math.random());\n\t\treturn array[idx];\n\t}\n\n\tprivate static _randomHex():string {\n\t\treturn V4UUID._oneOf(V4UUID._chars);\n\t}\n\n\tconstructor() {\n\t\tsuper([\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\t'-',\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\t'-',\n\t\t\t'4',\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\t'-',\n\t\t\tV4UUID._oneOf(V4UUID._timeHighBits),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\t'-',\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t].join(''));\n\t}\n}\n\n/**\n * An empty UUID that contains only zeros.\n */\nexport var empty:UUID = new ValueUUID('00000000-0000-0000-0000-000000000000');\n\nexport function v4():UUID {\n\treturn new V4UUID();\n}\n\nvar _UUIDPattern = /^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$/;\n\n/**\n * Parses a UUID that is of the format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.\n * @param value A uuid string.\n */\nexport function parse(value:string):UUID {\n\tif(!_UUIDPattern.test(value)) {\n\t\tthrow new Error('invalid uuid');\n\t}\n\treturn new ValueUUID(value);\n}\n\nexport function generateUuid():string {\n\treturn v4().asHex();\n}","/// <loc filename=\"Metadata\\base_loc_oam.xml\" format=\"messagebundle\" />\n/*! @minifier_do_not_preserve\n  © Microsoft. All rights reserved.\n\n  This library is supported for use in Windows Store apps only.\n\n  Build: 1.0.9200.20602.win8_ldr.130108-1504\n\n  Version: Microsoft.WinJS.1.0\n*/\n\n/*\n\tNote: Copied out of base.js.\n\tChanges:\n\t\t- we have only kept the first 2554 lines.\n\t\t- we have patched WinJS.xhr to add the hedader X-Requested-With:XMLHttpRequest\n\t\t- we have wrapped the entire code in an if statement to make WinJS re-entrant (if already defined)\n\t\t- we have to define setImmediate if not running in IE 10 since its a IE 10 only function\n\t\t- we have removed some getter syntax\n*/\n\n// MONACO CHANGE: Make WinJS re-entrant (if already defined)\nif (typeof WinJS === 'undefined') {\n\n// MONACO CHANGE: define setImmediate\n(function (global) {\n    if (!global.setImmediate) {\n        if (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\n            // running in node\n            global.setImmediate = function(callback) {\n                return process.nextTick(callback);\n            };\n        } else {\n            // running in browser\n            global.setImmediate = function(callback) {\n                return setTimeout(callback, 0);\n            };\n        }\n\t}\n\n})(this);\n\n/// <reference path=\"ms-appx://Microsoft.WinJS.1.0/js/base.js\" />\n(function baseInit(global, undefined) {\n    \"use strict\";\n\n    function initializeProperties(target, members) {\n        var keys = Object.keys(members);\n        var properties;\n        var i, len;\n        for (i = 0, len = keys.length; i < len; i++) {\n            var key = keys[i];\n            var enumerable = key.charCodeAt(0) !== /*_*/95;\n            var member = members[key];\n            if (member && typeof member === 'object') {\n                if (member.value !== undefined || typeof member.get === 'function' || typeof member.set === 'function') {\n                    if (member.enumerable === undefined) {\n                        member.enumerable = enumerable;\n                    }\n                    properties = properties || {};\n                    properties[key] = member;\n                    continue;\n                }\n            }\n            if (!enumerable) {\n                properties = properties || {};\n                properties[key] = { value: member, enumerable: enumerable, configurable: true, writable: true }\n                continue;\n            }\n            target[key] = member;\n        }\n        if (properties) {\n            Object.defineProperties(target, properties);\n        }\n    }\n\n    (function (rootNamespace) {\n\n        // Create the rootNamespace in the global namespace\n        if (!global[rootNamespace]) {\n            global[rootNamespace] = Object.create(Object.prototype);\n        }\n\n        // Cache the rootNamespace we just created in a local variable\n        var _rootNamespace = global[rootNamespace];\n        if (!_rootNamespace.Namespace) {\n            _rootNamespace.Namespace = Object.create(Object.prototype);\n        }\n\n        function defineWithParent(parentNamespace, name, members) {\n            /// <signature helpKeyword=\"WinJS.Namespace.defineWithParent\">\n            /// <summary locid=\"WinJS.Namespace.defineWithParent\">\n            /// Defines a new namespace with the specified name under the specified parent namespace.\n            /// </summary>\n            /// <param name=\"parentNamespace\" type=\"Object\" locid=\"WinJS.Namespace.defineWithParent_p:parentNamespace\">\n            /// The parent namespace.\n            /// </param>\n            /// <param name=\"name\" type=\"String\" locid=\"WinJS.Namespace.defineWithParent_p:name\">\n            /// The name of the new namespace.\n            /// </param>\n            /// <param name=\"members\" type=\"Object\" locid=\"WinJS.Namespace.defineWithParent_p:members\">\n            /// The members of the new namespace.\n            /// </param>\n            /// <returns type=\"Object\" locid=\"WinJS.Namespace.defineWithParent_returnValue\">\n            /// The newly-defined namespace.\n            /// </returns>\n            /// </signature>\n            var currentNamespace = parentNamespace,\n                namespaceFragments = name.split(\".\");\n\n            for (var i = 0, len = namespaceFragments.length; i < len; i++) {\n                var namespaceName = namespaceFragments[i];\n                if (!currentNamespace[namespaceName]) {\n                    Object.defineProperty(currentNamespace, namespaceName,\n                        { value: {}, writable: false, enumerable: true, configurable: true }\n                    );\n                }\n                currentNamespace = currentNamespace[namespaceName];\n            }\n\n            if (members) {\n                initializeProperties(currentNamespace, members);\n            }\n\n            return currentNamespace;\n        }\n\n        function define(name, members) {\n            /// <signature helpKeyword=\"WinJS.Namespace.define\">\n            /// <summary locid=\"WinJS.Namespace.define\">\n            /// Defines a new namespace with the specified name.\n            /// </summary>\n            /// <param name=\"name\" type=\"String\" locid=\"WinJS.Namespace.define_p:name\">\n            /// The name of the namespace. This could be a dot-separated name for nested namespaces.\n            /// </param>\n            /// <param name=\"members\" type=\"Object\" locid=\"WinJS.Namespace.define_p:members\">\n            /// The members of the new namespace.\n            /// </param>\n            /// <returns type=\"Object\" locid=\"WinJS.Namespace.define_returnValue\">\n            /// The newly-defined namespace.\n            /// </returns>\n            /// </signature>\n            return defineWithParent(global, name, members);\n        }\n\n        // Establish members of the \"WinJS.Namespace\" namespace\n        Object.defineProperties(_rootNamespace.Namespace, {\n\n            defineWithParent: { value: defineWithParent, writable: true, enumerable: true, configurable: true },\n\n            define: { value: define, writable: true, enumerable: true, configurable: true }\n\n        });\n\n    })(\"WinJS\");\n\n    (function (WinJS) {\n\n        function define(constructor, instanceMembers, staticMembers) {\n            /// <signature helpKeyword=\"WinJS.Class.define\">\n            /// <summary locid=\"WinJS.Class.define\">\n            /// Defines a class using the given constructor and the specified instance members.\n            /// </summary>\n            /// <param name=\"constructor\" type=\"Function\" locid=\"WinJS.Class.define_p:constructor\">\n            /// A constructor function that is used to instantiate this class.\n            /// </param>\n            /// <param name=\"instanceMembers\" type=\"Object\" locid=\"WinJS.Class.define_p:instanceMembers\">\n            /// The set of instance fields, properties, and methods made available on the class.\n            /// </param>\n            /// <param name=\"staticMembers\" type=\"Object\" locid=\"WinJS.Class.define_p:staticMembers\">\n            /// The set of static fields, properties, and methods made available on the class.\n            /// </param>\n            /// <returns type=\"Function\" locid=\"WinJS.Class.define_returnValue\">\n            /// The newly-defined class.\n            /// </returns>\n            /// </signature>\n            constructor = constructor || function () { };\n            WinJS.Utilities.markSupportedForProcessing(constructor);\n            if (instanceMembers) {\n                initializeProperties(constructor.prototype, instanceMembers);\n            }\n            if (staticMembers) {\n                initializeProperties(constructor, staticMembers);\n            }\n            return constructor;\n        }\n\n        function derive(baseClass, constructor, instanceMembers, staticMembers) {\n            /// <signature helpKeyword=\"WinJS.Class.derive\">\n            /// <summary locid=\"WinJS.Class.derive\">\n            /// Creates a sub-class based on the supplied baseClass parameter, using prototypal inheritance.\n            /// </summary>\n            /// <param name=\"baseClass\" type=\"Function\" locid=\"WinJS.Class.derive_p:baseClass\">\n            /// The class to inherit from.\n            /// </param>\n            /// <param name=\"constructor\" type=\"Function\" locid=\"WinJS.Class.derive_p:constructor\">\n            /// A constructor function that is used to instantiate this class.\n            /// </param>\n            /// <param name=\"instanceMembers\" type=\"Object\" locid=\"WinJS.Class.derive_p:instanceMembers\">\n            /// The set of instance fields, properties, and methods to be made available on the class.\n            /// </param>\n            /// <param name=\"staticMembers\" type=\"Object\" locid=\"WinJS.Class.derive_p:staticMembers\">\n            /// The set of static fields, properties, and methods to be made available on the class.\n            /// </param>\n            /// <returns type=\"Function\" locid=\"WinJS.Class.derive_returnValue\">\n            /// The newly-defined class.\n            /// </returns>\n            /// </signature>\n            if (baseClass) {\n                constructor = constructor || function () { };\n                var basePrototype = baseClass.prototype;\n                constructor.prototype = Object.create(basePrototype);\n                WinJS.Utilities.markSupportedForProcessing(constructor);\n                Object.defineProperty(constructor.prototype, \"constructor\", { value: constructor, writable: true, configurable: true, enumerable: true });\n                if (instanceMembers) {\n                    initializeProperties(constructor.prototype, instanceMembers);\n                }\n                if (staticMembers) {\n                    initializeProperties(constructor, staticMembers);\n                }\n                return constructor;\n            } else {\n                return define(constructor, instanceMembers, staticMembers);\n            }\n        }\n\n        function mix(constructor) {\n            /// <signature helpKeyword=\"WinJS.Class.mix\">\n            /// <summary locid=\"WinJS.Class.mix\">\n            /// Defines a class using the given constructor and the union of the set of instance members\n            /// specified by all the mixin objects. The mixin parameter list is of variable length.\n            /// </summary>\n            /// <param name=\"constructor\" locid=\"WinJS.Class.mix_p:constructor\">\n            /// A constructor function that is used to instantiate this class.\n            /// </param>\n            /// <returns type=\"Function\" locid=\"WinJS.Class.mix_returnValue\">\n            /// The newly-defined class.\n            /// </returns>\n            /// </signature>\n            constructor = constructor || function () { };\n            var i, len;\n            for (i = 1, len = arguments.length; i < len; i++) {\n                initializeProperties(constructor.prototype, arguments[i]);\n            }\n            return constructor;\n        }\n\n        // Establish members of \"WinJS.Class\" namespace\n        WinJS.Namespace.define(\"WinJS.Class\", {\n            define: define,\n            derive: derive,\n            mix: mix\n        });\n\n    })(global.WinJS);\n\n})(this);\n\n\n(function baseUtilsInit(global, WinJS) {\n    \"use strict\";\n\n    var hasWinRT = !!global.Windows;\n\n    var strings = {\n\t\t// MONACOCHANGE\n        //get notSupportedForProcessing() { return WinJS.Resources._getWinJSString(\"base/notSupportedForProcessing\").value; }\n\t\tnotSupportedForProcessing: \"Value is not supported within a declarative processing context, if you want it to be supported mark it using WinJS.Utilities.markSupportedForProcessing. The value was: '{0}'\"\n    };\n\n    function nop(v) {\n        return v;\n    }\n\n    function getMemberFiltered(name, root, filter) {\n        return name.split(\".\").reduce(function (currentNamespace, name) {\n            if (currentNamespace) {\n                return filter(currentNamespace[name]);\n            }\n            return null;\n        }, root);\n    }\n\n    // Establish members of \"WinJS.Utilities\" namespace\n    WinJS.Namespace.define(\"WinJS.Utilities\", {\n        // Used for mocking in tests\n        _setHasWinRT: {\n            value: function (value) {\n                hasWinRT = value;\n            },\n            configurable: false,\n            writable: false,\n            enumerable: false\n        },\n\n        /// <field type=\"Boolean\" locid=\"WinJS.Utilities.hasWinRT\" helpKeyword=\"WinJS.Utilities.hasWinRT\">Determine if WinRT is accessible in this script context.</field>\n        hasWinRT: {\n            get: function () { return hasWinRT; },\n            configurable: false,\n            enumerable: true\n        },\n\n        _getMemberFiltered: getMemberFiltered,\n\n        getMember: function (name, root) {\n            /// <signature helpKeyword=\"WinJS.Utilities.getMember\">\n            /// <summary locid=\"WinJS.Utilities.getMember\">\n            /// Gets the leaf-level type or namespace specified by the name parameter.\n            /// </summary>\n            /// <param name=\"name\" locid=\"WinJS.Utilities.getMember_p:name\">\n            /// The name of the member.\n            /// </param>\n            /// <param name=\"root\" locid=\"WinJS.Utilities.getMember_p:root\">\n            /// The root to start in. Defaults to the global object.\n            /// </param>\n            /// <returns type=\"Object\" locid=\"WinJS.Utilities.getMember_returnValue\">\n            /// The leaf-level type or namespace in the specified parent namespace.\n            /// </returns>\n            /// </signature>\n            if (!name) {\n                return null;\n            }\n            return getMemberFiltered(name, root || global, nop);\n        },\n\n        ready: function (callback, async) {\n            /// <signature helpKeyword=\"WinJS.Utilities.ready\">\n            /// <summary locid=\"WinJS.Utilities.ready\">\n            /// Ensures that the specified function executes only after the DOMContentLoaded event has fired\n            /// for the current page.\n            /// </summary>\n            /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Utilities.ready_returnValue\">A promise that completes after DOMContentLoaded has occurred.</returns>\n            /// <param name=\"callback\" optional=\"true\" locid=\"WinJS.Utilities.ready_p:callback\">\n            /// A function that executes after DOMContentLoaded has occurred.\n            /// </param>\n            /// <param name=\"async\" optional=\"true\" locid=\"WinJS.Utilities.ready_p:async\">\n            /// If true, the callback should be executed asynchronously.\n            /// </param>\n            /// </signature>\n            return new WinJS.Promise(function (c, e) {\n                function complete() {\n                    if (callback) {\n                        try {\n                            callback();\n                            c();\n                        }\n                        catch (err) {\n                            e(err);\n                        }\n                    }\n                    else {\n                        c();\n                    }\n                }\n\n                var readyState = WinJS.Utilities.testReadyState;\n                if (!readyState) {\n                    if (global.document) {\n                        readyState = document.readyState;\n                    }\n                    else {\n                        readyState = \"complete\";\n                    }\n                }\n                if (readyState === \"complete\" || (global.document && document.body !== null)) {\n                    if (async) {\n                        global.setImmediate(complete);\n                    }\n                    else {\n                        complete();\n                    }\n                }\n                else {\n                    global.addEventListener(\"DOMContentLoaded\", complete, false);\n                }\n            });\n        },\n\n        /// <field type=\"Boolean\" locid=\"WinJS.Utilities.strictProcessing\" helpKeyword=\"WinJS.Utilities.strictProcessing\">Determines if strict declarative processing is enabled in this script context.</field>\n        strictProcessing: {\n            get: function () { return true; },\n            configurable: false,\n            enumerable: true,\n        },\n\n        markSupportedForProcessing: {\n            value: function (func) {\n                /// <signature helpKeyword=\"WinJS.Utilities.markSupportedForProcessing\">\n                /// <summary locid=\"WinJS.Utilities.markSupportedForProcessing\">\n                /// Marks a function as being compatible with declarative processing, such as WinJS.UI.processAll\n                /// or WinJS.Binding.processAll.\n                /// </summary>\n                /// <param name=\"func\" type=\"Function\" locid=\"WinJS.Utilities.markSupportedForProcessing_p:func\">\n                /// The function to be marked as compatible with declarative processing.\n                /// </param>\n                /// <returns type=\"Function\" locid=\"WinJS.Utilities.markSupportedForProcessing_returnValue\">\n                /// The input function.\n                /// </returns>\n                /// </signature>\n                func.supportedForProcessing = true;\n                return func;\n            },\n            configurable: false,\n            writable: false,\n            enumerable: true\n        },\n\n        requireSupportedForProcessing: {\n            value: function (value) {\n                /// <signature helpKeyword=\"WinJS.Utilities.requireSupportedForProcessing\">\n                /// <summary locid=\"WinJS.Utilities.requireSupportedForProcessing\">\n                /// Asserts that the value is compatible with declarative processing, such as WinJS.UI.processAll\n                /// or WinJS.Binding.processAll. If it is not compatible an exception will be thrown.\n                /// </summary>\n                /// <param name=\"value\" type=\"Object\" locid=\"WinJS.Utilities.requireSupportedForProcessing_p:value\">\n                /// The value to be tested for compatibility with declarative processing. If the\n                /// value is a function it must be marked with a property 'supportedForProcessing'\n                /// with a value of true.\n                /// </param>\n                /// <returns type=\"Object\" locid=\"WinJS.Utilities.requireSupportedForProcessing_returnValue\">\n                /// The input value.\n                /// </returns>\n                /// </signature>\n                var supportedForProcessing = true;\n\n                supportedForProcessing = supportedForProcessing && !(value === global);\n                supportedForProcessing = supportedForProcessing && !(value === global.location);\n                supportedForProcessing = supportedForProcessing && !(value instanceof HTMLIFrameElement);\n                supportedForProcessing = supportedForProcessing && !(typeof value === \"function\" && !value.supportedForProcessing);\n\n                switch (global.frames.length) {\n                    case 0:\n                        break;\n\n                    case 1:\n                        supportedForProcessing = supportedForProcessing && !(value === global.frames[0]);\n                        break;\n\n                    default:\n                        for (var i = 0, len = global.frames.length; supportedForProcessing && i < len; i++) {\n                            supportedForProcessing = supportedForProcessing && !(value === global.frames[i]);\n                        }\n                        break;\n                }\n\n                if (supportedForProcessing) {\n                    return value;\n                }\n\n                throw new WinJS.ErrorFromName(\"WinJS.Utilities.requireSupportedForProcessing\", WinJS.Resources._formatString(strings.notSupportedForProcessing, value));\n            },\n            configurable: false,\n            writable: false,\n            enumerable: true\n        },\n\n    });\n\n    WinJS.Namespace.define(\"WinJS\", {\n        validation: false,\n\n        strictProcessing: {\n            value: function () {\n                /// <signature helpKeyword=\"WinJS.strictProcessing\">\n                /// <summary locid=\"WinJS.strictProcessing\">\n                /// Strict processing is always enforced, this method has no effect.\n                /// </summary>\n                /// </signature>\n            },\n            configurable: false,\n            writable: false,\n            enumerable: false\n        },\n    });\n})(this, this.WinJS);\n\n\n(function logInit(WinJS) {\n    \"use strict\";\n\n    var spaceR = /\\s+/g;\n    var typeR = /^(error|warn|info|log)$/;\n\n    function format(message, tag, type) {\n        /// <signature helpKeyword=\"WinJS.Utilities.formatLog\">\n        /// <summary locid=\"WinJS.Utilities.formatLog\">\n        /// Adds tags and type to a logging message.\n        /// </summary>\n        /// <param name=\"message\" type=\"String\" locid=\"WinJS.Utilities.startLog_p:message\">The message to be formatted.</param>\n        /// <param name=\"tag\" type=\"String\" locid=\"WinJS.Utilities.startLog_p:tag\">The tag(s) to be applied to the message. Multiple tags should be separated by spaces.</param>\n        /// <param name=\"type\" type=\"String\" locid=\"WinJS.Utilities.startLog_p:type\">The type of the message.</param>\n        /// <returns type=\"String\" locid=\"WinJS.Utilities.startLog_returnValue\">The formatted message.</returns>\n        /// </signature>\n        var m = message;\n        if (typeof (m) === \"function\") { m = m(); }\n\n        return ((type && typeR.test(type)) ? (\"\") : (type ? (type + \": \") : \"\")) +\n            (tag ? tag.replace(spaceR, \":\") + \": \" : \"\") +\n            m;\n    }\n    function defAction(message, tag, type) {\n        var m = WinJS.Utilities.formatLog(message, tag, type);\n        console[(type && typeR.test(type)) ? type : \"log\"](m);\n    }\n    function escape(s) {\n        // \\s (whitespace) is used as separator, so don't escape it\n        return s.replace(/[-[\\]{}()*+?.,\\\\^$|#]/g, \"\\\\$&\");\n    }\n    WinJS.Namespace.define(\"WinJS.Utilities\", {\n        startLog: function (options) {\n            /// <signature helpKeyword=\"WinJS.Utilities.startLog\">\n            /// <summary locid=\"WinJS.Utilities.startLog\">\n            /// Configures a logger that writes messages containing the specified tags from WinJS.log to console.log.\n            /// </summary>\n            /// <param name=\"options\" type=\"String\" locid=\"WinJS.Utilities.startLog_p:options\">The tags for messages to log. Multiple tags should be separated by spaces.</param>\n            /// </signature>\n            /// <signature>\n            /// <summary locid=\"WinJS.Utilities.startLog2\">\n            /// Configure a logger to write WinJS.log output.\n            /// </summary>\n            /// <param name=\"options\" type=\"Object\" locid=\"WinJS.Utilities.startLog_p:options2\">\n            /// May contain .type, .tags, .excludeTags and .action properties.\n            /// - .type is a required tag.\n            /// - .excludeTags is a space-separated list of tags, any of which will result in a message not being logged.\n            /// - .tags is a space-separated list of tags, any of which will result in a message being logged.\n            /// - .action is a function that, if present, will be called with the log message, tags and type. The default is to log to the console.\n            /// </param>\n            /// </signature>\n            options = options || {};\n            if (typeof options === \"string\") {\n                options = { tags: options };\n            }\n            var el = options.type && new RegExp(\"^(\" + escape(options.type).replace(spaceR, \" \").split(\" \").join(\"|\") + \")$\");\n            var not = options.excludeTags && new RegExp(\"(^|\\\\s)(\" + escape(options.excludeTags).replace(spaceR, \" \").split(\" \").join(\"|\") + \")(\\\\s|$)\", \"i\");\n            var has = options.tags && new RegExp(\"(^|\\\\s)(\" + escape(options.tags).replace(spaceR, \" \").split(\" \").join(\"|\") + \")(\\\\s|$)\", \"i\");\n            var action = options.action || defAction;\n\n            if (!el && !not && !has && !WinJS.log) {\n                WinJS.log = action;\n                return;\n            }\n\n            var result = function (message, tag, type) {\n                if (!((el && !el.test(type))          // if the expected log level is not satisfied\n                    || (not && not.test(tag))         // if any of the excluded categories exist\n                    || (has && !has.test(tag)))) {    // if at least one of the included categories doesn't exist\n                        action(message, tag, type);\n                    }\n\n                result.next && result.next(message, tag, type);\n            };\n            result.next = WinJS.log;\n            WinJS.log = result;\n        },\n        stopLog: function () {\n            /// <signature helpKeyword=\"WinJS.Utilities.stopLog\">\n            /// <summary locid=\"WinJS.Utilities.stopLog\">\n            /// Removes the previously set up logger.\n            /// </summary>\n            /// </signature>\n            delete WinJS.log;\n        },\n        formatLog: format\n    });\n})(this.WinJS);\n\n(function eventsInit(WinJS, undefined) {\n    \"use strict\";\n\n\n    function createEventProperty(name) {\n        var eventPropStateName = \"_on\" + name + \"state\";\n\n        return {\n            get: function () {\n                var state = this[eventPropStateName];\n                return state && state.userHandler;\n            },\n            set: function (handler) {\n                var state = this[eventPropStateName];\n                if (handler) {\n                    if (!state) {\n                        state = { wrapper: function (evt) { return state.userHandler(evt); }, userHandler: handler };\n                        Object.defineProperty(this, eventPropStateName, { value: state, enumerable: false, writable:true, configurable: true });\n                        this.addEventListener(name, state.wrapper, false);\n                    }\n                    state.userHandler = handler;\n                } else if (state) {\n                    this.removeEventListener(name, state.wrapper, false);\n                    this[eventPropStateName] = null;\n                }\n            },\n            enumerable: true\n        }\n    }\n\n    function createEventProperties(events) {\n        /// <signature helpKeyword=\"WinJS.Utilities.createEventProperties\">\n        /// <summary locid=\"WinJS.Utilities.createEventProperties\">\n        /// Creates an object that has one property for each name passed to the function.\n        /// </summary>\n        /// <param name=\"events\" locid=\"WinJS.Utilities.createEventProperties_p:events\">\n        /// A variable list of property names.\n        /// </param>\n        /// <returns type=\"Object\" locid=\"WinJS.Utilities.createEventProperties_returnValue\">\n        /// The object with the specified properties. The names of the properties are prefixed with 'on'.\n        /// </returns>\n        /// </signature>\n        var props = {};\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            var name = arguments[i];\n            props[\"on\" + name] = createEventProperty(name);\n        }\n        return props;\n    }\n\n    var EventMixinEvent = WinJS.Class.define(\n        function EventMixinEvent_ctor(type, detail, target) {\n            this.detail = detail;\n            this.target = target;\n            this.timeStamp = Date.now();\n            this.type = type;\n        },\n        {\n            bubbles: { value: false, writable: false },\n            cancelable: { value: false, writable: false },\n            currentTarget: {\n                get: function () { return this.target; }\n            },\n            defaultPrevented: {\n                get: function () { return this._preventDefaultCalled; }\n            },\n            trusted: { value: false, writable: false },\n            eventPhase: { value: 0, writable: false },\n            target: null,\n            timeStamp: null,\n            type: null,\n\n            preventDefault: function () {\n                this._preventDefaultCalled = true;\n            },\n            stopImmediatePropagation: function () {\n                this._stopImmediatePropagationCalled = true;\n            },\n            stopPropagation: function () {\n            }\n        }, {\n            supportedForProcessing: false,\n        }\n    );\n\n    var eventMixin = {\n        _listeners: null,\n\n        addEventListener: function (type, listener, useCapture) {\n            /// <signature helpKeyword=\"WinJS.Utilities.eventMixin.addEventListener\">\n            /// <summary locid=\"WinJS.Utilities.eventMixin.addEventListener\">\n            /// Adds an event listener to the control.\n            /// </summary>\n            /// <param name=\"type\" locid=\"WinJS.Utilities.eventMixin.addEventListener_p:type\">\n            /// The type (name) of the event.\n            /// </param>\n            /// <param name=\"listener\" locid=\"WinJS.Utilities.eventMixin.addEventListener_p:listener\">\n            /// The listener to invoke when the event gets raised.\n            /// </param>\n            /// <param name=\"useCapture\" locid=\"WinJS.Utilities.eventMixin.addEventListener_p:useCapture\">\n            /// if true initiates capture, otherwise false.\n            /// </param>\n            /// </signature>\n            useCapture = useCapture || false;\n            this._listeners = this._listeners || {};\n            var eventListeners = (this._listeners[type] = this._listeners[type] || []);\n            for (var i = 0, len = eventListeners.length; i < len; i++) {\n                var l = eventListeners[i];\n                if (l.useCapture === useCapture && l.listener === listener) {\n                    return;\n                }\n            }\n            eventListeners.push({ listener: listener, useCapture: useCapture });\n        },\n        dispatchEvent: function (type, details) {\n            /// <signature helpKeyword=\"WinJS.Utilities.eventMixin.dispatchEvent\">\n            /// <summary locid=\"WinJS.Utilities.eventMixin.dispatchEvent\">\n            /// Raises an event of the specified type and with the specified additional properties.\n            /// </summary>\n            /// <param name=\"type\" locid=\"WinJS.Utilities.eventMixin.dispatchEvent_p:type\">\n            /// The type (name) of the event.\n            /// </param>\n            /// <param name=\"details\" locid=\"WinJS.Utilities.eventMixin.dispatchEvent_p:details\">\n            /// The set of additional properties to be attached to the event object when the event is raised.\n            /// </param>\n            /// <returns type=\"Boolean\" locid=\"WinJS.Utilities.eventMixin.dispatchEvent_returnValue\">\n            /// true if preventDefault was called on the event.\n            /// </returns>\n            /// </signature>\n            var listeners = this._listeners && this._listeners[type];\n            if (listeners) {\n                var eventValue = new EventMixinEvent(type, details, this);\n                // Need to copy the array to protect against people unregistering while we are dispatching\n                listeners = listeners.slice(0, listeners.length);\n                for (var i = 0, len = listeners.length; i < len && !eventValue._stopImmediatePropagationCalled; i++) {\n                    listeners[i].listener(eventValue);\n                }\n                return eventValue.defaultPrevented || false;\n            }\n            return false;\n        },\n        removeEventListener: function (type, listener, useCapture) {\n            /// <signature helpKeyword=\"WinJS.Utilities.eventMixin.removeEventListener\">\n            /// <summary locid=\"WinJS.Utilities.eventMixin.removeEventListener\">\n            /// Removes an event listener from the control.\n            /// </summary>\n            /// <param name=\"type\" locid=\"WinJS.Utilities.eventMixin.removeEventListener_p:type\">\n            /// The type (name) of the event.\n            /// </param>\n            /// <param name=\"listener\" locid=\"WinJS.Utilities.eventMixin.removeEventListener_p:listener\">\n            /// The listener to remove.\n            /// </param>\n            /// <param name=\"useCapture\" locid=\"WinJS.Utilities.eventMixin.removeEventListener_p:useCapture\">\n            /// Specifies whether to initiate capture.\n            /// </param>\n            /// </signature>\n            useCapture = useCapture || false;\n            var listeners = this._listeners && this._listeners[type];\n            if (listeners) {\n                for (var i = 0, len = listeners.length; i < len; i++) {\n                    var l = listeners[i];\n                    if (l.listener === listener && l.useCapture === useCapture) {\n                        listeners.splice(i, 1);\n                        if (listeners.length === 0) {\n                            delete this._listeners[type];\n                        }\n                        // Only want to remove one element for each call to removeEventListener\n                        break;\n                    }\n                }\n            }\n        }\n    };\n\n    WinJS.Namespace.define(\"WinJS.Utilities\", {\n        _createEventProperty: createEventProperty,\n        createEventProperties: createEventProperties,\n        eventMixin: eventMixin\n    });\n\n})(this.WinJS);\n\n\n(function resourcesInit(global, WinJS, undefined) {\n    \"use strict\";\n\n    var resourceMap;\n    var mrtEventHook = false;\n    var contextChangedET = \"contextchanged\";\n\n    var ListenerType = WinJS.Class.mix(WinJS.Class.define(null, { /* empty */ }, { supportedForProcessing: false }), WinJS.Utilities.eventMixin);\n    var listeners = new ListenerType();\n\n    var strings = {\n\t\t// MONACO CHANGE\n        //get malformedFormatStringInput() { return WinJS.Resources._getWinJSString(\"base/malformedFormatStringInput\").value; },\n\t\tmalformedFormatStringInput: \"Malformed, did you mean to escape your '{0}'?\"\n    };\n\n    WinJS.Namespace.define(\"WinJS.Resources\", {\n        addEventListener: function (type, listener, useCapture) {\n            /// <signature helpKeyword=\"WinJS.Resources.addEventListener\">\n            /// <summary locid=\"WinJS.Resources.addEventListener\">\n            /// Registers an event handler for the specified event.\n            /// </summary>\n            /// <param name=\"type\" type=\"String\" locid=\"WinJS.Resources.addEventListener_p:type\">\n            /// The name of the event to handle.\n            /// </param>\n            /// <param name=\"listener\" type=\"Function\" locid=\"WinJS.Resources.addEventListener_p:listener\">\n            /// The listener to invoke when the event gets raised.\n            /// </param>\n            /// <param name=\"useCapture\" type=\"Boolean\" locid=\"WinJS.Resources.addEventListener_p:useCapture\">\n            /// Set to true to register the event handler for the capturing phase; set to false to register for the bubbling phase.\n            /// </param>\n            /// </signature>\n            if (WinJS.Utilities.hasWinRT && !mrtEventHook) {\n                if (type === contextChangedET) {\n                    try {\n                        Windows.ApplicationModel.Resources.Core.ResourceManager.current.defaultContext.qualifierValues.addEventListener(\"mapchanged\", function (e) {\n                            WinJS.Resources.dispatchEvent(contextChangedET, { qualifier: e.key, changed: e.target[e.key] });\n                        }, false);\n\n                        mrtEventHook = true;\n                    } catch (e) {\n                    }\n                }\n            }\n            listeners.addEventListener(type, listener, useCapture);\n        },\n        removeEventListener: listeners.removeEventListener.bind(listeners),\n        dispatchEvent: listeners.dispatchEvent.bind(listeners),\n\n        _formatString: function (string) {\n            var args = arguments;\n            if (args.length > 1) {\n                string = string.replace(/({{)|(}})|{(\\d+)}|({)|(})/g, function (unused, left, right, index, illegalLeft, illegalRight) {\n                    if (illegalLeft || illegalRight) { throw WinJS.Resources._formatString(strings.malformedFormatStringInput, illegalLeft || illegalRight); }\n                    return (left && \"{\") || (right && \"}\") || args[(index|0) + 1];\n                });\n            }\n            return string;\n        },\n\n        _getStringWinRT: function (resourceId) {\n            if (!resourceMap) {\n                var mainResourceMap = Windows.ApplicationModel.Resources.Core.ResourceManager.current.mainResourceMap;\n                try {\n                    resourceMap = mainResourceMap.getSubtree('Resources');\n                }\n                catch (e) {\n                }\n                if (!resourceMap) {\n                    resourceMap = mainResourceMap;\n                }\n            }\n\n            var stringValue;\n            var langValue;\n            var resCandidate;\n            try {\n                resCandidate = resourceMap.getValue(resourceId);\n                if (resCandidate) {\n                    stringValue = resCandidate.valueAsString;\n                    if (stringValue === undefined) {\n                        stringValue = resCandidate.toString();\n                    }\n                }\n            }\n            catch (e) {}\n\n            if (!stringValue) {\n                return { value: resourceId, empty: true };\n            }\n\n            try {\n                langValue = resCandidate.getQualifierValue(\"Language\");\n            }\n            catch (e) {\n                return { value: stringValue };\n            }\n\n            return { value: stringValue, lang: langValue };\n        },\n\n        _getStringJS: function (resourceId) {\n            var str = global.strings && global.strings[resourceId];\n            if (typeof str === \"string\") {\n                str = { value: str };\n            }\n            return str || { value: resourceId, empty: true };\n        }\n    });\n\n    Object.defineProperties(WinJS.Resources, WinJS.Utilities.createEventProperties(contextChangedET));\n\n    var getStringImpl;\n\n    WinJS.Resources.getString = function (resourceId) {\n        /// <signature helpKeyword=\"WinJS.Resources.getString\">\n        /// <summary locid=\"WinJS.Resources.getString\">\n        /// Retrieves the resource string that has the specified resource id.\n        /// </summary>\n        /// <param name=\"resourceId\" type=\"Number\" locid=\"WinJS.Resources.getString._p:resourceId\">\n        /// The resource id of the string to retrieve.\n        /// </param>\n        /// <returns type=\"Object\" locid=\"WinJS.Resources.getString_returnValue\">\n        /// An object that can contain these properties:\n        ///\n        /// value:\n        /// The value of the requested string. This property is always present.\n        ///\n        /// empty:\n        /// A value that specifies whether the requested string wasn't found.\n        /// If its true, the string wasn't found. If its false or undefined,\n        /// the requested string was found.\n        ///\n        /// lang:\n        /// The language of the string, if specified. This property is only present\n        /// for multi-language resources.\n        ///\n        /// </returns>\n        /// </signature>\n        getStringImpl =\n            getStringImpl ||\n                (WinJS.Utilities.hasWinRT\n                    ? WinJS.Resources._getStringWinRT\n                    : WinJS.Resources._getStringJS);\n\n        return getStringImpl(resourceId);\n    };\n\n\n})(this, this.WinJS);\n\n\n(function promiseInit(global, WinJS, undefined) {\n    \"use strict\";\n\n    global.Debug && (global.Debug.setNonUserCodeExceptions = true);\n\n    var ListenerType = WinJS.Class.mix(WinJS.Class.define(null, { /*empty*/ }, { supportedForProcessing: false }), WinJS.Utilities.eventMixin);\n    var promiseEventListeners = new ListenerType();\n    // make sure there is a listeners collection so that we can do a more trivial check below\n    promiseEventListeners._listeners = {};\n    var errorET = \"error\";\n    var canceledName = \"Canceled\";\n    var tagWithStack = false;\n    var tag = {\n        promise:            0x01,\n        thenPromise:        0x02,\n        errorPromise:       0x04,\n        exceptionPromise:   0x08,\n        completePromise:    0x10,\n    };\n    tag.all = tag.promise | tag.thenPromise | tag.errorPromise | tag.exceptionPromise | tag.completePromise;\n\n    //\n    // Global error counter, for each error which enters the system we increment this once and then\n    // the error number travels with the error as it traverses the tree of potential handlers.\n    //\n    // When someone has registered to be told about errors (WinJS.Promise.callonerror) promises\n    // which are in error will get tagged with a ._errorId field. This tagged field is the\n    // contract by which nested promises with errors will be identified as chaining for the\n    // purposes of the callonerror semantics. If a nested promise in error is encountered without\n    // a ._errorId it will be assumed to be foreign and treated as an interop boundary and\n    // a new error id will be minted.\n    //\n    var error_number = 1;\n\n    //\n    // The state machine has a interesting hiccup in it with regards to notification, in order\n    // to flatten out notification and avoid recursion for synchronous completion we have an\n    // explicit set of *_notify states which are responsible for notifying their entire tree\n    // of children. They can do this because they know that immediate children are always\n    // ThenPromise instances and we can therefore reach into their state to access the\n    // _listeners collection.\n    //\n    // So, what happens is that a Promise will be fulfilled through the _completed or _error\n    // messages at which point it will enter a *_notify state and be responsible for to move\n    // its children into an (as appropriate) success or error state and also notify that child's\n    // listeners of the state transition, until leaf notes are reached.\n    //\n\n    var state_created,              // -> working\n        state_working,              // -> error | error_notify | success | success_notify | canceled | waiting\n        state_waiting,              // -> error | error_notify | success | success_notify | waiting_canceled\n        state_waiting_canceled,     // -> error | error_notify | success | success_notify | canceling\n        state_canceled,             // -> error | error_notify | success | success_notify | canceling\n        state_canceling,            // -> error_notify\n        state_success_notify,       // -> success\n        state_success,              // -> .\n        state_error_notify,         // -> error\n        state_error;                // -> .\n\n    // Noop function, used in the various states to indicate that they don't support a given\n    // message. Named with the somewhat cute name '_' because it reads really well in the states.\n\n    function _() { }\n\n    // Initial state\n    //\n    state_created = {\n        name: \"created\",\n        enter: function (promise) {\n            promise._setState(state_working);\n        },\n        cancel: _,\n        done: _,\n        then: _,\n        _completed: _,\n        _error: _,\n        _notify: _,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Ready state, waiting for a message (completed/error/progress), able to be canceled\n    //\n    state_working = {\n        name: \"working\",\n        enter: _,\n        cancel: function (promise) {\n            promise._setState(state_canceled);\n        },\n        done: done,\n        then: then,\n        _completed: completed,\n        _error: error,\n        _notify: _,\n        _progress: progress,\n        _setCompleteValue: setCompleteValue,\n        _setErrorValue: setErrorValue\n    };\n\n    // Waiting state, if a promise is completed with a value which is itself a promise\n    // (has a then() method) it signs up to be informed when that child promise is\n    // fulfilled at which point it will be fulfilled with that value.\n    //\n    state_waiting = {\n        name: \"waiting\",\n        enter: function (promise) {\n            var waitedUpon = promise._value;\n            var error = function (value) {\n                if (waitedUpon._errorId) {\n                    promise._chainedError(value, waitedUpon);\n                } else {\n                    // Because this is an interop boundary we want to indicate that this\n                    //  error has been handled by the promise infrastructure before we\n                    //  begin a new handling chain.\n                    //\n                    callonerror(promise, value, detailsForHandledError, waitedUpon, error);\n                    promise._error(value);\n                }\n            };\n            error.handlesOnError = true;\n            waitedUpon.then(\n                promise._completed.bind(promise),\n                error,\n                promise._progress.bind(promise)\n            );\n        },\n        cancel: function (promise) {\n            promise._setState(state_waiting_canceled);\n        },\n        done: done,\n        then: then,\n        _completed: completed,\n        _error: error,\n        _notify: _,\n        _progress: progress,\n        _setCompleteValue: setCompleteValue,\n        _setErrorValue: setErrorValue\n    };\n\n    // Waiting canceled state, when a promise has been in a waiting state and receives a\n    // request to cancel its pending work it will forward that request to the child promise\n    // and then waits to be informed of the result. This promise moves itself into the\n    // canceling state but understands that the child promise may instead push it to a\n    // different state.\n    //\n    state_waiting_canceled = {\n        name: \"waiting_canceled\",\n        enter: function (promise) {\n            // Initiate a transition to canceling. Triggering a cancel on the promise\n            // that we are waiting upon may result in a different state transition\n            // before the state machine pump runs again.\n            promise._setState(state_canceling);\n            var waitedUpon = promise._value;\n            if (waitedUpon.cancel) {\n                waitedUpon.cancel();\n            }\n        },\n        cancel: _,\n        done: done,\n        then: then,\n        _completed: completed,\n        _error: error,\n        _notify: _,\n        _progress: progress,\n        _setCompleteValue: setCompleteValue,\n        _setErrorValue: setErrorValue\n    };\n\n    // Canceled state, moves to the canceling state and then tells the promise to do\n    // whatever it might need to do on cancelation.\n    //\n    state_canceled = {\n        name: \"canceled\",\n        enter: function (promise) {\n            // Initiate a transition to canceling. The _cancelAction may change the state\n            // before the state machine pump runs again.\n            promise._setState(state_canceling);\n            promise._cancelAction();\n        },\n        cancel: _,\n        done: done,\n        then: then,\n        _completed: completed,\n        _error: error,\n        _notify: _,\n        _progress: progress,\n        _setCompleteValue: setCompleteValue,\n        _setErrorValue: setErrorValue\n    };\n\n    // Canceling state, commits to the promise moving to an error state with an error\n    // object whose 'name' and 'message' properties contain the string \"Canceled\"\n    //\n    state_canceling = {\n        name: \"canceling\",\n        enter: function (promise) {\n            var error = new Error(canceledName);\n            error.name = error.message;\n            promise._value = error;\n            promise._setState(state_error_notify);\n        },\n        cancel: _,\n        done: _,\n        then: _,\n        _completed: _,\n        _error: _,\n        _notify: _,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Success notify state, moves a promise to the success state and notifies all children\n    //\n    state_success_notify = {\n        name: \"complete_notify\",\n        enter: function (promise) {\n            promise.done = CompletePromise.prototype.done;\n            promise.then = CompletePromise.prototype.then;\n            if (promise._listeners) {\n                var queue = [promise];\n                var p;\n                while (queue.length) {\n                    p = queue.pop();\n                    p._state._notify(p, queue);\n                }\n            }\n            promise._setState(state_success);\n        },\n        cancel: _,\n        done: null, /*error to get here */\n        then: null, /*error to get here */\n        _completed: _,\n        _error: _,\n        _notify: notifySuccess,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Success state, moves a promise to the success state and does NOT notify any children.\n    // Some upstream promise is owning the notification pass.\n    //\n    state_success = {\n        name: \"success\",\n        enter: function (promise) {\n            promise.done = CompletePromise.prototype.done;\n            promise.then = CompletePromise.prototype.then;\n            promise._cleanupAction();\n        },\n        cancel: _,\n        done: null, /*error to get here */\n        then: null, /*error to get here */\n        _completed: _,\n        _error: _,\n        _notify: notifySuccess,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Error notify state, moves a promise to the error state and notifies all children\n    //\n    state_error_notify = {\n        name: \"error_notify\",\n        enter: function (promise) {\n            promise.done = ErrorPromise.prototype.done;\n            promise.then = ErrorPromise.prototype.then;\n            if (promise._listeners) {\n                var queue = [promise];\n                var p;\n                while (queue.length) {\n                    p = queue.pop();\n                    p._state._notify(p, queue);\n                }\n            }\n            promise._setState(state_error);\n        },\n        cancel: _,\n        done: null, /*error to get here*/\n        then: null, /*error to get here*/\n        _completed: _,\n        _error: _,\n        _notify: notifyError,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    // Error state, moves a promise to the error state and does NOT notify any children.\n    // Some upstream promise is owning the notification pass.\n    //\n    state_error = {\n        name: \"error\",\n        enter: function (promise) {\n            promise.done = ErrorPromise.prototype.done;\n            promise.then = ErrorPromise.prototype.then;\n            promise._cleanupAction();\n        },\n        cancel: _,\n        done: null, /*error to get here*/\n        then: null, /*error to get here*/\n        _completed: _,\n        _error: _,\n        _notify: notifyError,\n        _progress: _,\n        _setCompleteValue: _,\n        _setErrorValue: _\n    };\n\n    //\n    // The statemachine implementation follows a very particular pattern, the states are specified\n    // as static stateless bags of functions which are then indirected through the state machine\n    // instance (a Promise). As such all of the functions on each state have the promise instance\n    // passed to them explicitly as a parameter and the Promise instance members do a little\n    // dance where they indirect through the state and insert themselves in the argument list.\n    //\n    // We could instead call directly through the promise states however then every caller\n    // would have to remember to do things like pumping the state machine to catch state transitions.\n    //\n\n    var PromiseStateMachine = WinJS.Class.define(null, {\n        _listeners: null,\n        _nextState: null,\n        _state: null,\n        _value: null,\n\n        cancel: function () {\n            /// <signature helpKeyword=\"WinJS.PromiseStateMachine.cancel\">\n            /// <summary locid=\"WinJS.PromiseStateMachine.cancel\">\n            /// Attempts to cancel the fulfillment of a promised value. If the promise hasn't\n            /// already been fulfilled and cancellation is supported, the promise enters\n            /// the error state with a value of Error(\"Canceled\").\n            /// </summary>\n            /// </signature>\n            this._state.cancel(this);\n            this._run();\n        },\n        done: function Promise_done(onComplete, onError, onProgress) {\n            /// <signature helpKeyword=\"WinJS.PromiseStateMachine.done\">\n            /// <summary locid=\"WinJS.PromiseStateMachine.done\">\n            /// Allows you to specify the work to be done on the fulfillment of the promised value,\n            /// the error handling to be performed if the promise fails to fulfill\n            /// a value, and the handling of progress notifications along the way.\n            ///\n            /// After the handlers have finished executing, this function throws any error that would have been returned\n            /// from then() as a promise in the error state.\n            /// </summary>\n            /// <param name=\"onComplete\" type=\"Function\" locid=\"WinJS.PromiseStateMachine.done_p:onComplete\">\n            /// The function to be called if the promise is fulfilled successfully with a value.\n            /// The fulfilled value is passed as the single argument. If the value is null,\n            /// the fulfilled value is returned. The value returned\n            /// from the function becomes the fulfilled value of the promise returned by\n            /// then(). If an exception is thrown while executing the function, the promise returned\n            /// by then() moves into the error state.\n            /// </param>\n            /// <param name=\"onError\" type=\"Function\" optional=\"true\" locid=\"WinJS.PromiseStateMachine.done_p:onError\">\n            /// The function to be called if the promise is fulfilled with an error. The error\n            /// is passed as the single argument. If it is null, the error is forwarded.\n            /// The value returned from the function is the fulfilled value of the promise returned by then().\n            /// </param>\n            /// <param name=\"onProgress\" type=\"Function\" optional=\"true\" locid=\"WinJS.PromiseStateMachine.done_p:onProgress\">\n            /// the function to be called if the promise reports progress. Data about the progress\n            /// is passed as the single argument. Promises are not required to support\n            /// progress.\n            /// </param>\n            /// </signature>\n            this._state.done(this, onComplete, onError, onProgress);\n        },\n        then: function Promise_then(onComplete, onError, onProgress) {\n            /// <signature helpKeyword=\"WinJS.PromiseStateMachine.then\">\n            /// <summary locid=\"WinJS.PromiseStateMachine.then\">\n            /// Allows you to specify the work to be done on the fulfillment of the promised value,\n            /// the error handling to be performed if the promise fails to fulfill\n            /// a value, and the handling of progress notifications along the way.\n            /// </summary>\n            /// <param name=\"onComplete\" type=\"Function\" locid=\"WinJS.PromiseStateMachine.then_p:onComplete\">\n            /// The function to be called if the promise is fulfilled successfully with a value.\n            /// The value is passed as the single argument. If the value is null, the value is returned.\n            /// The value returned from the function becomes the fulfilled value of the promise returned by\n            /// then(). If an exception is thrown while this function is being executed, the promise returned\n            /// by then() moves into the error state.\n            /// </param>\n            /// <param name=\"onError\" type=\"Function\" optional=\"true\" locid=\"WinJS.PromiseStateMachine.then_p:onError\">\n            /// The function to be called if the promise is fulfilled with an error. The error\n            /// is passed as the single argument. If it is null, the error is forwarded.\n            /// The value returned from the function becomes the fulfilled value of the promise returned by then().\n            /// </param>\n            /// <param name=\"onProgress\" type=\"Function\" optional=\"true\" locid=\"WinJS.PromiseStateMachine.then_p:onProgress\">\n            /// The function to be called if the promise reports progress. Data about the progress\n            /// is passed as the single argument. Promises are not required to support\n            /// progress.\n            /// </param>\n            /// <returns type=\"WinJS.Promise\" locid=\"WinJS.PromiseStateMachine.then_returnValue\">\n            /// The promise whose value is the result of executing the complete or\n            /// error function.\n            /// </returns>\n            /// </signature>\n            return this._state.then(this, onComplete, onError, onProgress);\n        },\n\n        _chainedError: function (value, context) {\n            var result = this._state._error(this, value, detailsForChainedError, context);\n            this._run();\n            return result;\n        },\n        _completed: function (value) {\n            var result = this._state._completed(this, value);\n            this._run();\n            return result;\n        },\n        _error: function (value) {\n            var result = this._state._error(this, value, detailsForError);\n            this._run();\n            return result;\n        },\n        _progress: function (value) {\n            this._state._progress(this, value);\n        },\n        _setState: function (state) {\n            this._nextState = state;\n        },\n        _setCompleteValue: function (value) {\n            this._state._setCompleteValue(this, value);\n            this._run();\n        },\n        _setChainedErrorValue: function (value, context) {\n            var result = this._state._setErrorValue(this, value, detailsForChainedError, context);\n            this._run();\n            return result;\n        },\n        _setExceptionValue: function (value) {\n            var result = this._state._setErrorValue(this, value, detailsForException);\n            this._run();\n            return result;\n        },\n        _run: function () {\n            while (this._nextState) {\n                this._state = this._nextState;\n                this._nextState = null;\n                this._state.enter(this);\n            }\n        }\n    }, {\n        supportedForProcessing: false\n    });\n\n    //\n    // Implementations of shared state machine code.\n    //\n\n    function completed(promise, value) {\n        var targetState;\n        if (value && typeof value === \"object\" && typeof value.then === \"function\") {\n            targetState = state_waiting;\n        } else {\n            targetState = state_success_notify;\n        }\n        promise._value = value;\n        promise._setState(targetState);\n    }\n    function createErrorDetails(exception, error, promise, id, parent, handler) {\n        return {\n            exception: exception,\n            error: error,\n            promise: promise,\n            handler: handler,\n            id: id,\n            parent: parent\n        };\n    }\n    function detailsForHandledError(promise, errorValue, context, handler) {\n        var exception = context._isException;\n        var errorId = context._errorId;\n        return createErrorDetails(\n            exception ? errorValue : null,\n            exception ? null : errorValue,\n            promise,\n            errorId,\n            context,\n            handler\n        );\n    }\n    function detailsForChainedError(promise, errorValue, context) {\n        var exception = context._isException;\n        var errorId = context._errorId;\n        setErrorInfo(promise, errorId, exception);\n        return createErrorDetails(\n            exception ? errorValue : null,\n            exception ? null : errorValue,\n            promise,\n            errorId,\n            context\n        );\n    }\n    function detailsForError(promise, errorValue) {\n        var errorId = ++error_number;\n        setErrorInfo(promise, errorId);\n        return createErrorDetails(\n            null,\n            errorValue,\n            promise,\n            errorId\n        );\n    }\n    function detailsForException(promise, exceptionValue) {\n        var errorId = ++error_number;\n        setErrorInfo(promise, errorId, true);\n        return createErrorDetails(\n            exceptionValue,\n            null,\n            promise,\n            errorId\n        );\n    }\n    function done(promise, onComplete, onError, onProgress) {\n        pushListener(promise, { c: onComplete, e: onError, p: onProgress });\n    }\n    function error(promise, value, onerrorDetails, context) {\n        promise._value = value;\n        callonerror(promise, value, onerrorDetails, context);\n        promise._setState(state_error_notify);\n    }\n    function notifySuccess(promise, queue) {\n        var value = promise._value;\n        var listeners = promise._listeners;\n        if (!listeners) {\n            return;\n        }\n        promise._listeners = null;\n        var i, len;\n        for (i = 0, len = Array.isArray(listeners) ? listeners.length : 1; i < len; i++) {\n            var listener = len === 1 ? listeners : listeners[i];\n            var onComplete = listener.c;\n            var target = listener.promise;\n            if (target) {\n                try {\n                    target._setCompleteValue(onComplete ? onComplete(value) : value);\n                } catch (ex) {\n                    target._setExceptionValue(ex);\n                }\n                if (target._state !== state_waiting && target._listeners) {\n                    queue.push(target);\n                }\n            } else {\n                CompletePromise.prototype.done.call(promise, onComplete);\n            }\n        }\n    }\n    function notifyError(promise, queue) {\n        var value = promise._value;\n        var listeners = promise._listeners;\n        if (!listeners) {\n            return;\n        }\n        promise._listeners = null;\n        var i, len;\n        for (i = 0, len = Array.isArray(listeners) ? listeners.length : 1; i < len; i++) {\n            var listener = len === 1 ? listeners : listeners[i];\n            var onError = listener.e;\n            var target = listener.promise;\n            if (target) {\n                try {\n                    if (onError) {\n                        if (!onError.handlesOnError) {\n                            callonerror(target, value, detailsForHandledError, promise, onError);\n                        }\n                        target._setCompleteValue(onError(value))\n                    } else {\n                        target._setChainedErrorValue(value, promise);\n                    }\n                } catch (ex) {\n                    target._setExceptionValue(ex);\n                }\n                if (target._state !== state_waiting && target._listeners) {\n                    queue.push(target);\n                }\n            } else {\n                ErrorPromise.prototype.done.call(promise, null, onError);\n            }\n        }\n    }\n    function callonerror(promise, value, onerrorDetailsGenerator, context, handler) {\n        if (promiseEventListeners._listeners[errorET]) {\n            if (value instanceof Error && value.message === canceledName) {\n                return;\n            }\n            promiseEventListeners.dispatchEvent(errorET, onerrorDetailsGenerator(promise, value, context, handler));\n        }\n    }\n    function progress(promise, value) {\n        var listeners = promise._listeners;\n        if (listeners) {\n            var i, len;\n            for (i = 0, len = Array.isArray(listeners) ? listeners.length : 1; i < len; i++) {\n                var listener = len === 1 ? listeners : listeners[i];\n                var onProgress = listener.p;\n                if (onProgress) {\n                    try { onProgress(value); } catch (ex) { }\n                }\n                if (!(listener.c || listener.e) && listener.promise) {\n                    listener.promise._progress(value);\n                }\n            }\n        }\n    }\n    function pushListener(promise, listener) {\n        var listeners = promise._listeners;\n        if (listeners) {\n            // We may have either a single listener (which will never be wrapped in an array)\n            // or 2+ listeners (which will be wrapped). Since we are now adding one more listener\n            // we may have to wrap the single listener before adding the second.\n            listeners = Array.isArray(listeners) ? listeners : [listeners];\n            listeners.push(listener);\n        } else {\n            listeners = listener;\n        }\n        promise._listeners = listeners;\n    }\n    // The difference beween setCompleteValue()/setErrorValue() and complete()/error() is that setXXXValue() moves\n    // a promise directly to the success/error state without starting another notification pass (because one\n    // is already ongoing).\n    function setErrorInfo(promise, errorId, isException) {\n        promise._isException = isException || false;\n        promise._errorId = errorId;\n    }\n    function setErrorValue(promise, value, onerrorDetails, context) {\n        promise._value = value;\n        callonerror(promise, value, onerrorDetails, context);\n        promise._setState(state_error);\n    }\n    function setCompleteValue(promise, value) {\n        var targetState;\n        if (value && typeof value === \"object\" && typeof value.then === \"function\") {\n            targetState = state_waiting;\n        } else {\n            targetState = state_success;\n        }\n        promise._value = value;\n        promise._setState(targetState);\n    }\n    function then(promise, onComplete, onError, onProgress) {\n        var result = new ThenPromise(promise);\n        pushListener(promise, { promise: result, c: onComplete, e: onError, p: onProgress });\n        return result;\n    }\n\n    //\n    // Internal implementation detail promise, ThenPromise is created when a promise needs\n    // to be returned from a then() method.\n    //\n    var ThenPromise = WinJS.Class.derive(PromiseStateMachine,\n        function (creator) {\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.thenPromise))) {\n                this._stack = WinJS.Promise._getStack();\n            }\n\n            this._creator = creator;\n            this._setState(state_created);\n            this._run();\n        }, {\n            _creator: null,\n\n            _cancelAction: function () { if (this._creator) { this._creator.cancel(); } },\n            _cleanupAction: function () { this._creator = null; }\n        }, {\n            supportedForProcessing: false\n        }\n    );\n\n    //\n    // Slim promise implementations for already completed promises, these are created\n    // under the hood on synchronous completion paths as well as by WinJS.Promise.wrap\n    // and WinJS.Promise.wrapError.\n    //\n\n    var ErrorPromise = WinJS.Class.define(\n        function ErrorPromise_ctor(value) {\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.errorPromise))) {\n                this._stack = WinJS.Promise._getStack();\n            }\n\n            this._value = value;\n            callonerror(this, value, detailsForError);\n        }, {\n            cancel: function () {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.cancel\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.cancel\">\n                /// Attempts to cancel the fulfillment of a promised value. If the promise hasn't\n                /// already been fulfilled and cancellation is supported, the promise enters\n                /// the error state with a value of Error(\"Canceled\").\n                /// </summary>\n                /// </signature>\n            },\n            done: function ErrorPromise_done(unused, onError) {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.done\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.done\">\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\n                /// the error handling to be performed if the promise fails to fulfill\n                /// a value, and the handling of progress notifications along the way.\n                ///\n                /// After the handlers have finished executing, this function throws any error that would have been returned\n                /// from then() as a promise in the error state.\n                /// </summary>\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.done_p:onComplete\">\n                /// The function to be called if the promise is fulfilled successfully with a value.\n                /// The fulfilled value is passed as the single argument. If the value is null,\n                /// the fulfilled value is returned. The value returned\n                /// from the function becomes the fulfilled value of the promise returned by\n                /// then(). If an exception is thrown while executing the function, the promise returned\n                /// by then() moves into the error state.\n                /// </param>\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onError\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument. If it is null, the error is forwarded.\n                /// The value returned from the function is the fulfilled value of the promise returned by then().\n                /// </param>\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onProgress\">\n                /// the function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// </signature>\n                var value = this._value;\n                if (onError) {\n                    try {\n                        if (!onError.handlesOnError) {\n                            callonerror(null, value, detailsForHandledError, this, onError);\n                        }\n                        var result = onError(value);\n                        if (result && typeof result === \"object\" && typeof result.done === \"function\") {\n                            // If a promise is returned we need to wait on it.\n                            result.done();\n                        }\n                        return;\n                    } catch (ex) {\n                        value = ex;\n                    }\n                }\n                if (value instanceof Error && value.message === canceledName) {\n                    // suppress cancel\n                    return;\n                }\n                // force the exception to be thrown asyncronously to avoid any try/catch blocks\n                //\n                setImmediate(function () {\n                    throw value;\n                });\n            },\n            then: function ErrorPromise_then(unused, onError) {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.then\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.then\">\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\n                /// the error handling to be performed if the promise fails to fulfill\n                /// a value, and the handling of progress notifications along the way.\n                /// </summary>\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.then_p:onComplete\">\n                /// The function to be called if the promise is fulfilled successfully with a value.\n                /// The value is passed as the single argument. If the value is null, the value is returned.\n                /// The value returned from the function becomes the fulfilled value of the promise returned by\n                /// then(). If an exception is thrown while this function is being executed, the promise returned\n                /// by then() moves into the error state.\n                /// </param>\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onError\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument. If it is null, the error is forwarded.\n                /// The value returned from the function becomes the fulfilled value of the promise returned by then().\n                /// </param>\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onProgress\">\n                /// The function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.PromiseStateMachine.then_returnValue\">\n                /// The promise whose value is the result of executing the complete or\n                /// error function.\n                /// </returns>\n                /// </signature>\n\n                // If the promise is already in a error state and no error handler is provided\n                // we optimize by simply returning the promise instead of creating a new one.\n                //\n                if (!onError) { return this; }\n                var result;\n                var value = this._value;\n                try {\n                    if (!onError.handlesOnError) {\n                        callonerror(null, value, detailsForHandledError, this, onError);\n                    }\n                    result = new CompletePromise(onError(value));\n                } catch (ex) {\n                    // If the value throw from the error handler is the same as the value\n                    // provided to the error handler then there is no need for a new promise.\n                    //\n                    if (ex === value) {\n                        result = this;\n                    } else {\n                        result = new ExceptionPromise(ex);\n                    }\n                }\n                return result;\n            }\n        }, {\n            supportedForProcessing: false\n        }\n    );\n\n    var ExceptionPromise = WinJS.Class.derive(ErrorPromise,\n        function ExceptionPromise_ctor(value) {\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.exceptionPromise))) {\n                this._stack = WinJS.Promise._getStack();\n            }\n\n            this._value = value;\n            callonerror(this, value, detailsForException);\n        }, {\n            /* empty */\n        }, {\n            supportedForProcessing: false\n        }\n    );\n\n    var CompletePromise = WinJS.Class.define(\n        function CompletePromise_ctor(value) {\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.completePromise))) {\n                this._stack = WinJS.Promise._getStack();\n            }\n\n            if (value && typeof value === \"object\" && typeof value.then === \"function\") {\n                var result = new ThenPromise(null);\n                result._setCompleteValue(value);\n                return result;\n            }\n            this._value = value;\n        }, {\n            cancel: function () {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.cancel\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.cancel\">\n                /// Attempts to cancel the fulfillment of a promised value. If the promise hasn't\n                /// already been fulfilled and cancellation is supported, the promise enters\n                /// the error state with a value of Error(\"Canceled\").\n                /// </summary>\n                /// </signature>\n            },\n            done: function CompletePromise_done(onComplete) {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.done\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.done\">\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\n                /// the error handling to be performed if the promise fails to fulfill\n                /// a value, and the handling of progress notifications along the way.\n                ///\n                /// After the handlers have finished executing, this function throws any error that would have been returned\n                /// from then() as a promise in the error state.\n                /// </summary>\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.done_p:onComplete\">\n                /// The function to be called if the promise is fulfilled successfully with a value.\n                /// The fulfilled value is passed as the single argument. If the value is null,\n                /// the fulfilled value is returned. The value returned\n                /// from the function becomes the fulfilled value of the promise returned by\n                /// then(). If an exception is thrown while executing the function, the promise returned\n                /// by then() moves into the error state.\n                /// </param>\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onError\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument. If it is null, the error is forwarded.\n                /// The value returned from the function is the fulfilled value of the promise returned by then().\n                /// </param>\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.done_p:onProgress\">\n                /// the function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// </signature>\n                if (!onComplete) { return; }\n                try {\n                    var result = onComplete(this._value);\n                    if (result && typeof result === \"object\" && typeof result.done === \"function\") {\n                        result.done();\n                    }\n                } catch (ex) {\n                    // force the exception to be thrown asynchronously to avoid any try/catch blocks\n                    setImmediate(function () {\n                        throw ex;\n                    });\n                }\n            },\n            then: function CompletePromise_then(onComplete) {\n                /// <signature helpKeyword=\"WinJS.PromiseStateMachine.then\">\n                /// <summary locid=\"WinJS.PromiseStateMachine.then\">\n                /// Allows you to specify the work to be done on the fulfillment of the promised value,\n                /// the error handling to be performed if the promise fails to fulfill\n                /// a value, and the handling of progress notifications along the way.\n                /// </summary>\n                /// <param name='onComplete' type='Function' locid=\"WinJS.PromiseStateMachine.then_p:onComplete\">\n                /// The function to be called if the promise is fulfilled successfully with a value.\n                /// The value is passed as the single argument. If the value is null, the value is returned.\n                /// The value returned from the function becomes the fulfilled value of the promise returned by\n                /// then(). If an exception is thrown while this function is being executed, the promise returned\n                /// by then() moves into the error state.\n                /// </param>\n                /// <param name='onError' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onError\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument. If it is null, the error is forwarded.\n                /// The value returned from the function becomes the fulfilled value of the promise returned by then().\n                /// </param>\n                /// <param name='onProgress' type='Function' optional='true' locid=\"WinJS.PromiseStateMachine.then_p:onProgress\">\n                /// The function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.PromiseStateMachine.then_returnValue\">\n                /// The promise whose value is the result of executing the complete or\n                /// error function.\n                /// </returns>\n                /// </signature>\n                try {\n                    // If the value returned from the completion handler is the same as the value\n                    // provided to the completion handler then there is no need for a new promise.\n                    //\n                    var newValue = onComplete ? onComplete(this._value) : this._value;\n                    return newValue === this._value ? this : new CompletePromise(newValue);\n                } catch (ex) {\n                    return new ExceptionPromise(ex);\n                }\n            }\n        }, {\n            supportedForProcessing: false\n        }\n    );\n\n    //\n    // Promise is the user-creatable WinJS.Promise object.\n    //\n\n    function timeout(timeoutMS) {\n        var id;\n        return new WinJS.Promise(\n            function (c) {\n                if (timeoutMS) {\n                    id = setTimeout(c, timeoutMS);\n                } else {\n                    setImmediate(c);\n                }\n            },\n            function () {\n                if (id) {\n                    clearTimeout(id);\n                }\n            }\n        );\n    }\n\n    function timeoutWithPromise(timeout, promise) {\n        var cancelPromise = function () { promise.cancel(); }\n        var cancelTimeout = function () { timeout.cancel(); }\n        timeout.then(cancelPromise);\n        promise.then(cancelTimeout, cancelTimeout);\n        return promise;\n    }\n\n    var staticCanceledPromise;\n\n    var Promise = WinJS.Class.derive(PromiseStateMachine,\n        function Promise_ctor(init, oncancel) {\n            /// <signature helpKeyword=\"WinJS.Promise\">\n            /// <summary locid=\"WinJS.Promise\">\n            /// A promise provides a mechanism to schedule work to be done on a value that\n            /// has not yet been computed. It is a convenient abstraction for managing\n            /// interactions with asynchronous APIs.\n            /// </summary>\n            /// <param name=\"init\" type=\"Function\" locid=\"WinJS.Promise_p:init\">\n            /// The function that is called during construction of the  promise. The function\n            /// is given three arguments (complete, error, progress). Inside this function\n            /// you should add event listeners for the notifications supported by this value.\n            /// </param>\n            /// <param name=\"oncancel\" optional=\"true\" locid=\"WinJS.Promise_p:oncancel\">\n            /// The function to call if a consumer of this promise wants\n            /// to cancel its undone work. Promises are not required to\n            /// support cancellation.\n            /// </param>\n            /// </signature>\n\n            if (tagWithStack && (tagWithStack === true || (tagWithStack & tag.promise))) {\n                this._stack = WinJS.Promise._getStack();\n            }\n\n            this._oncancel = oncancel;\n            this._setState(state_created);\n            this._run();\n\n            try {\n                var complete = this._completed.bind(this);\n                var error = this._error.bind(this);\n                var progress = this._progress.bind(this);\n                init(complete, error, progress);\n            } catch (ex) {\n                this._setExceptionValue(ex);\n            }\n        }, {\n            _oncancel: null,\n\n            _cancelAction: function () {\n\t\t\t\ttry {\n            \t\tif (this._oncancel) {\n\t\t\t\t\t\tthis._oncancel();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error('Promise did not implement oncancel');\n\t\t\t\t\t}\n\t\t\t\t} catch (ex) {\n\t\t\t\t\t// Access fields to get them created\n\t\t\t\t\tvar msg = ex.message;\n\t\t\t\t\tvar stack = ex.stack;\n\t\t\t\t\tpromiseEventListeners.dispatchEvent('error', ex);\n\t\t\t\t}\n            },\n            _cleanupAction: function () { this._oncancel = null; }\n        }, {\n\n            addEventListener: function Promise_addEventListener(eventType, listener, capture) {\n                /// <signature helpKeyword=\"WinJS.Promise.addEventListener\">\n                /// <summary locid=\"WinJS.Promise.addEventListener\">\n                /// Adds an event listener to the control.\n                /// </summary>\n                /// <param name=\"eventType\" locid=\"WinJS.Promise.addEventListener_p:eventType\">\n                /// The type (name) of the event.\n                /// </param>\n                /// <param name=\"listener\" locid=\"WinJS.Promise.addEventListener_p:listener\">\n                /// The listener to invoke when the event is raised.\n                /// </param>\n                /// <param name=\"capture\" locid=\"WinJS.Promise.addEventListener_p:capture\">\n                /// Specifies whether or not to initiate capture.\n                /// </param>\n                /// </signature>\n                promiseEventListeners.addEventListener(eventType, listener, capture);\n            },\n            any: function Promise_any(values) {\n                /// <signature helpKeyword=\"WinJS.Promise.any\">\n                /// <summary locid=\"WinJS.Promise.any\">\n                /// Returns a promise that is fulfilled when one of the input promises\n                /// has been fulfilled.\n                /// </summary>\n                /// <param name=\"values\" type=\"Array\" locid=\"WinJS.Promise.any_p:values\">\n                /// An array that contains promise objects or objects whose property\n                /// values include promise objects.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.any_returnValue\">\n                /// A promise that on fulfillment yields the value of the input (complete or error).\n                /// </returns>\n                /// </signature>\n                return new Promise(\n                    function (complete, error, progress) {\n                        var keys = Object.keys(values);\n                        var errors = Array.isArray(values) ? [] : {};\n                        if (keys.length === 0) {\n                            complete();\n                        }\n                        var canceled = 0;\n                        keys.forEach(function (key) {\n                            Promise.as(values[key]).then(\n                                function () { complete({ key: key, value: values[key] }); },\n                                function (e) {\n                                    if (e instanceof Error && e.name === canceledName) {\n                                        if ((++canceled) === keys.length) {\n                                            complete(WinJS.Promise.cancel);\n                                        }\n                                        return;\n                                    }\n                                    error({ key: key, value: values[key] });\n                                }\n                            );\n                        });\n                    },\n                    function () {\n                        var keys = Object.keys(values);\n                        keys.forEach(function (key) {\n                            var promise = Promise.as(values[key]);\n                            if (typeof promise.cancel === \"function\") {\n                                promise.cancel();\n                            }\n                        });\n                    }\n                );\n            },\n            as: function Promise_as(value) {\n                /// <signature helpKeyword=\"WinJS.Promise.as\">\n                /// <summary locid=\"WinJS.Promise.as\">\n                /// Returns a promise. If the object is already a promise it is returned;\n                /// otherwise the object is wrapped in a promise.\n                /// </summary>\n                /// <param name=\"value\" locid=\"WinJS.Promise.as_p:value\">\n                /// The value to be treated as a promise.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.as_returnValue\">\n                /// A promise.\n                /// </returns>\n                /// </signature>\n                if (value && typeof value === \"object\" && typeof value.then === \"function\") {\n                    return value;\n                }\n                return new CompletePromise(value);\n            },\n            /// <field type=\"WinJS.Promise\" helpKeyword=\"WinJS.Promise.cancel\" locid=\"WinJS.Promise.cancel\">\n            /// Canceled promise value, can be returned from a promise completion handler\n            /// to indicate cancelation of the promise chain.\n            /// </field>\n            cancel: {\n                get: function () {\n                    return (staticCanceledPromise = staticCanceledPromise || new ErrorPromise(new WinJS.ErrorFromName(canceledName)));\n                }\n            },\n            dispatchEvent: function Promise_dispatchEvent(eventType, details) {\n                /// <signature helpKeyword=\"WinJS.Promise.dispatchEvent\">\n                /// <summary locid=\"WinJS.Promise.dispatchEvent\">\n                /// Raises an event of the specified type and properties.\n                /// </summary>\n                /// <param name=\"eventType\" locid=\"WinJS.Promise.dispatchEvent_p:eventType\">\n                /// The type (name) of the event.\n                /// </param>\n                /// <param name=\"details\" locid=\"WinJS.Promise.dispatchEvent_p:details\">\n                /// The set of additional properties to be attached to the event object.\n                /// </param>\n                /// <returns type=\"Boolean\" locid=\"WinJS.Promise.dispatchEvent_returnValue\">\n                /// Specifies whether preventDefault was called on the event.\n                /// </returns>\n                /// </signature>\n                return promiseEventListeners.dispatchEvent(eventType, details);\n            },\n            is: function Promise_is(value) {\n                /// <signature helpKeyword=\"WinJS.Promise.is\">\n                /// <summary locid=\"WinJS.Promise.is\">\n                /// Determines whether a value fulfills the promise contract.\n                /// </summary>\n                /// <param name=\"value\" locid=\"WinJS.Promise.is_p:value\">\n                /// A value that may be a promise.\n                /// </param>\n                /// <returns type=\"Boolean\" locid=\"WinJS.Promise.is_returnValue\">\n                /// true if the specified value is a promise, otherwise false.\n                /// </returns>\n                /// </signature>\n                return value && typeof value === \"object\" && typeof value.then === \"function\";\n            },\n            join: function Promise_join(values) {\n                /// <signature helpKeyword=\"WinJS.Promise.join\">\n                /// <summary locid=\"WinJS.Promise.join\">\n                /// Creates a promise that is fulfilled when all the values are fulfilled.\n                /// </summary>\n                /// <param name=\"values\" type=\"Object\" locid=\"WinJS.Promise.join_p:values\">\n                /// An object whose fields contain values, some of which may be promises.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.join_returnValue\">\n                /// A promise whose value is an object with the same field names as those of the object in the values parameter, where\n                /// each field value is the fulfilled value of a promise.\n                /// </returns>\n                /// </signature>\n                return new Promise(\n                    function (complete, error, progress) {\n                        var keys = Object.keys(values);\n                        var errors = Array.isArray(values) ? [] : {};\n                        var results = Array.isArray(values) ? [] : {};\n                        var undefineds = 0;\n                        var pending = keys.length;\n                        var argDone = function (key) {\n                            if ((--pending) === 0) {\n                                var errorCount = Object.keys(errors).length;\n                                if (errorCount === 0) {\n                                    complete(results);\n                                } else {\n                                    var canceledCount = 0;\n                                    keys.forEach(function (key) {\n                                        var e = errors[key];\n                                        if (e instanceof Error && e.name === canceledName) {\n                                            canceledCount++;\n                                        }\n                                    });\n                                    if (canceledCount === errorCount) {\n                                        complete(WinJS.Promise.cancel);\n                                    } else {\n                                        error(errors);\n                                    }\n                                }\n                            } else {\n                                progress({ Key: key, Done: true });\n                            }\n                        };\n                        keys.forEach(function (key) {\n                            var value = values[key];\n                            if (value === undefined) {\n                                undefineds++;\n                            } else {\n                                Promise.then(value,\n                                    function (value) { results[key] = value; argDone(key); },\n                                    function (value) { errors[key] = value; argDone(key); }\n                                );\n                            }\n                        });\n                        pending -= undefineds;\n                        if (pending === 0) {\n                            complete(results);\n                            return;\n                        }\n                    },\n                    function () {\n                        Object.keys(values).forEach(function (key) {\n                            var promise = Promise.as(values[key]);\n                            if (typeof promise.cancel === \"function\") {\n                                promise.cancel();\n                            }\n                        });\n                    }\n                );\n            },\n            removeEventListener: function Promise_removeEventListener(eventType, listener, capture) {\n                /// <signature helpKeyword=\"WinJS.Promise.removeEventListener\">\n                /// <summary locid=\"WinJS.Promise.removeEventListener\">\n                /// Removes an event listener from the control.\n                /// </summary>\n                /// <param name='eventType' locid=\"WinJS.Promise.removeEventListener_eventType\">\n                /// The type (name) of the event.\n                /// </param>\n                /// <param name='listener' locid=\"WinJS.Promise.removeEventListener_listener\">\n                /// The listener to remove.\n                /// </param>\n                /// <param name='capture' locid=\"WinJS.Promise.removeEventListener_capture\">\n                /// Specifies whether or not to initiate capture.\n                /// </param>\n                /// </signature>\n                promiseEventListeners.removeEventListener(eventType, listener, capture);\n            },\n            supportedForProcessing: false,\n            then: function Promise_then(value, onComplete, onError, onProgress) {\n                /// <signature helpKeyword=\"WinJS.Promise.then\">\n                /// <summary locid=\"WinJS.Promise.then\">\n                /// A static version of the promise instance method then().\n                /// </summary>\n                /// <param name=\"value\" locid=\"WinJS.Promise.then_p:value\">\n                /// the value to be treated as a promise.\n                /// </param>\n                /// <param name=\"onComplete\" type=\"Function\" locid=\"WinJS.Promise.then_p:complete\">\n                /// The function to be called if the promise is fulfilled with a value.\n                /// If it is null, the promise simply\n                /// returns the value. The value is passed as the single argument.\n                /// </param>\n                /// <param name=\"onError\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.then_p:error\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument.\n                /// </param>\n                /// <param name=\"onProgress\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.then_p:progress\">\n                /// The function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.then_returnValue\">\n                /// A promise whose value is the result of executing the provided complete function.\n                /// </returns>\n                /// </signature>\n                return Promise.as(value).then(onComplete, onError, onProgress);\n            },\n            thenEach: function Promise_thenEach(values, onComplete, onError, onProgress) {\n                /// <signature helpKeyword=\"WinJS.Promise.thenEach\">\n                /// <summary locid=\"WinJS.Promise.thenEach\">\n                /// Performs an operation on all the input promises and returns a promise\n                /// that has the shape of the input and contains the result of the operation\n                /// that has been performed on each input.\n                /// </summary>\n                /// <param name=\"values\" locid=\"WinJS.Promise.thenEach_p:values\">\n                /// A set of values (which could be either an array or an object) of which some or all are promises.\n                /// </param>\n                /// <param name=\"onComplete\" type=\"Function\" locid=\"WinJS.Promise.thenEach_p:complete\">\n                /// The function to be called if the promise is fulfilled with a value.\n                /// If the value is null, the promise returns the value.\n                /// The value is passed as the single argument.\n                /// </param>\n                /// <param name=\"onError\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.thenEach_p:error\">\n                /// The function to be called if the promise is fulfilled with an error. The error\n                /// is passed as the single argument.\n                /// </param>\n                /// <param name=\"onProgress\" type=\"Function\" optional=\"true\" locid=\"WinJS.Promise.thenEach_p:progress\">\n                /// The function to be called if the promise reports progress. Data about the progress\n                /// is passed as the single argument. Promises are not required to support\n                /// progress.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.thenEach_returnValue\">\n                /// A promise that is the result of calling Promise.join on the values parameter.\n                /// </returns>\n                /// </signature>\n                var result = Array.isArray(values) ? [] : {};\n                Object.keys(values).forEach(function (key) {\n                    result[key] = Promise.as(values[key]).then(onComplete, onError, onProgress);\n                });\n                return Promise.join(result);\n            },\n            timeout: function Promise_timeout(time, promise) {\n                /// <signature helpKeyword=\"WinJS.Promise.timeout\">\n                /// <summary locid=\"WinJS.Promise.timeout\">\n                /// Creates a promise that is fulfilled after a timeout.\n                /// </summary>\n                /// <param name=\"timeout\" type=\"Number\" optional=\"true\" locid=\"WinJS.Promise.timeout_p:timeout\">\n                /// The timeout period in milliseconds. If this value is zero or not specified\n                /// setImmediate is called, otherwise setTimeout is called.\n                /// </param>\n                /// <param name=\"promise\" type=\"Promise\" optional=\"true\" locid=\"WinJS.Promise.timeout_p:promise\">\n                /// A promise that will be canceled if it doesn't complete before the\n                /// timeout has expired.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.timeout_returnValue\">\n                /// A promise that is completed asynchronously after the specified timeout.\n                /// </returns>\n                /// </signature>\n                var to = timeout(time);\n                return promise ? timeoutWithPromise(to, promise) : to;\n            },\n            wrap: function Promise_wrap(value) {\n                /// <signature helpKeyword=\"WinJS.Promise.wrap\">\n                /// <summary locid=\"WinJS.Promise.wrap\">\n                /// Wraps a non-promise value in a promise. You can use this function if you need\n                /// to pass a value to a function that requires a promise.\n                /// </summary>\n                /// <param name=\"value\" locid=\"WinJS.Promise.wrap_p:value\">\n                /// Some non-promise value to be wrapped in a promise.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.wrap_returnValue\">\n                /// A promise that is successfully fulfilled with the specified value\n                /// </returns>\n                /// </signature>\n                return new CompletePromise(value);\n            },\n            wrapError: function Promise_wrapError(error) {\n                /// <signature helpKeyword=\"WinJS.Promise.wrapError\">\n                /// <summary locid=\"WinJS.Promise.wrapError\">\n                /// Wraps a non-promise error value in a promise. You can use this function if you need\n                /// to pass an error to a function that requires a promise.\n                /// </summary>\n                /// <param name=\"error\" locid=\"WinJS.Promise.wrapError_p:error\">\n                /// A non-promise error value to be wrapped in a promise.\n                /// </param>\n                /// <returns type=\"WinJS.Promise\" locid=\"WinJS.Promise.wrapError_returnValue\">\n                /// A promise that is in an error state with the specified value.\n                /// </returns>\n                /// </signature>\n                return new ErrorPromise(error);\n            },\n\n            _veryExpensiveTagWithStack: {\n                get: function () { return tagWithStack; },\n                set: function (value) { tagWithStack = value; }\n            },\n            _veryExpensiveTagWithStack_tag: tag,\n            _getStack: function () {\n                if (Debug.debuggerEnabled) {\n                    try { throw new Error(); } catch (e) { return e.stack; }\n                }\n            },\n\n        }\n    );\n    Object.defineProperties(Promise, WinJS.Utilities.createEventProperties(errorET));\n\n    var SignalPromise = WinJS.Class.derive(PromiseStateMachine,\n        function (cancel) {\n            this._oncancel = cancel;\n            this._setState(state_created);\n            this._run();\n        }, {\n            _cancelAction: function () { this._oncancel && this._oncancel(); },\n            _cleanupAction: function () { this._oncancel = null; }\n        }, {\n            supportedForProcessing: false\n        }\n    );\n\n    var Signal = WinJS.Class.define(\n        function Signal_ctor(oncancel) {\n            this._promise = new SignalPromise(oncancel);\n        }, {\n            promise: {\n                get: function () { return this._promise; }\n            },\n\n            cancel: function Signal_cancel() {\n                this._promise.cancel();\n            },\n            complete: function Signal_complete(value) {\n                this._promise._completed(value);\n            },\n            error: function Signal_error(value) {\n                this._promise._error(value);\n            },\n            progress: function Signal_progress(value) {\n                this._promise._progress(value);\n            }\n        }, {\n            supportedForProcessing: false,\n        }\n    );\n\n    // Publish WinJS.Promise\n    //\n    WinJS.Namespace.define(\"WinJS\", {\n        Promise: Promise,\n        _Signal: Signal\n    });\n\n}(this, this.WinJS));\n\n(function errorsInit(global, WinJS) {\n    \"use strict\";\n\n\n    WinJS.Namespace.define(\"WinJS\", {\n        // ErrorFromName establishes a simple pattern for returning error codes.\n        //\n        ErrorFromName: WinJS.Class.derive(Error, function (name, message) {\n            /// <signature helpKeyword=\"WinJS.ErrorFromName\">\n            /// <summary locid=\"WinJS.ErrorFromName\">\n            /// Creates an Error object with the specified name and message properties.\n            /// </summary>\n            /// <param name=\"name\" type=\"String\" locid=\"WinJS.ErrorFromName_p:name\">The name of this error. The name is meant to be consumed programmatically and should not be localized.</param>\n            /// <param name=\"message\" type=\"String\" optional=\"true\" locid=\"WinJS.ErrorFromName_p:message\">The message for this error. The message is meant to be consumed by humans and should be localized.</param>\n            /// <returns type=\"Error\" locid=\"WinJS.ErrorFromName_returnValue\">Error instance with .name and .message properties populated</returns>\n            /// </signature>\n            this.name = name;\n            this.message = message || name;\n        }, {\n            /* empty */\n        }, {\n            supportedForProcessing: false,\n        })\n    });\n\n})(this, this.WinJS);\n\n\n(function xhrInit(WinJS) {\n    \"use strict\";\n\n\n    WinJS.Namespace.define(\"WinJS\", {\n        xhr: function (options) {\n            /// <signature helpKeyword=\"WinJS.xhr\">\n            /// <summary locid=\"WinJS.xhr\">\n            /// Wraps calls to XMLHttpRequest in a promise.\n            /// </summary>\n            /// <param name=\"options\" type=\"Object\" locid=\"WinJS.xhr_p:options\">\n            /// The options that are applied to the XMLHttpRequest object. They are: type,\n            /// url, user, password, headers, responseType, data, and customRequestInitializer.\n            /// </param>\n            /// <returns type=\"WinJS.Promise\" locid=\"WinJS.xhr_returnValue\">\n            /// A promise that returns the XMLHttpRequest object when it completes.\n            /// </returns>\n            /// </signature>\n            var req;\n            return new WinJS.Promise(\n                function (c, e, p) {\n                    /// <returns value=\"c(new XMLHttpRequest())\" locid=\"WinJS.xhr.constructor._returnValue\" />\n                    req = new XMLHttpRequest();\n                    req.onreadystatechange = function () {\n                        if (req._canceled) { return; }\n\n                        if (req.readyState === 4) {\n\t\t\t\t\t\t\t// MONACO CHANGE: Handle 1223: http://bugs.jquery.com/ticket/1450\n                            if ((req.status >= 200 && req.status < 300) || req.status === 1223) {\n                                c(req);\n                            } else {\n                                e(req);\n                            }\n                            req.onreadystatechange = function () { };\n                        } else {\n                            p(req);\n                        }\n                    };\n\n                    req.open(\n                        options.type || \"GET\",\n                        options.url,\n                        // Promise based XHR does not support sync.\n                        //\n                        true,\n                        options.user,\n                        options.password\n                    );\n                    req.responseType = options.responseType || \"\";\n\n                    Object.keys(options.headers || {}).forEach(function (k) {\n                        req.setRequestHeader(k, options.headers[k]);\n                    });\n\n                    if (options.customRequestInitializer) {\n                        options.customRequestInitializer(req);\n                    }\n\n                    req.send(options.data);\n                },\n                function () {\n                    req._canceled = true;\n                    req.abort();\n                }\n            );\n        }\n    });\n\n})(this.WinJS);\n\n\n(function safeHTMLInit(global, WinJS, undefined) {\n    \"use strict\";\n\n\n    var setInnerHTML,\n        setInnerHTMLUnsafe,\n        setOuterHTML,\n        setOuterHTMLUnsafe,\n        insertAdjacentHTML,\n        insertAdjacentHTMLUnsafe;\n\n    var strings = {\n\t\t// MONACO CHANGE\n        //get nonStaticHTML() { return WinJS.Resources._getWinJSString(\"base/nonStaticHTML\").value; },\n\t\tnonStaticHTML: \"Unable to add dynamic content. A script attempted to inject dynamic content, or elements previously modified dynamically, that might be unsafe. For example, using the innerHTML property or the document.write method to add a script element will generate this exception. If the content is safe and from a trusted source, use a method to explicitly manipulate elements and attributes, such as createElement, or use setInnerHTMLUnsafe (or other unsafe method).\"\n    };\n\n    setInnerHTML = setInnerHTMLUnsafe = function (element, text) {\n        /// <signature helpKeyword=\"WinJS.Utilities.setInnerHTML\">\n        /// <summary locid=\"WinJS.Utilities.setInnerHTML\">\n        /// Sets the innerHTML property of the specified element to the specified text.\n        /// </summary>\n        /// <param name=\"element\" type=\"HTMLElement\" locid=\"WinJS.Utilities.setInnerHTML_p:element\">\n        /// The element on which the innerHTML property is to be set.\n        /// </param>\n        /// <param name=\"text\" type=\"String\" locid=\"WinJS.Utilities.setInnerHTML_p:text\">\n        /// The value to be set to the innerHTML property.\n        /// </param>\n        /// </signature>\n        element.innerHTML = text;\n    };\n    setOuterHTML = setOuterHTMLUnsafe = function (element, text) {\n        /// <signature helpKeyword=\"WinJS.Utilities.setOuterHTML\">\n        /// <summary locid=\"WinJS.Utilities.setOuterHTML\">\n        /// Sets the outerHTML property of the specified element to the specified text.\n        /// </summary>\n        /// <param name=\"element\" type=\"HTMLElement\" locid=\"WinJS.Utilities.setOuterHTML_p:element\">\n        /// The element on which the outerHTML property is to be set.\n        /// </param>\n        /// <param name=\"text\" type=\"String\" locid=\"WinJS.Utilities.setOuterHTML_p:text\">\n        /// The value to be set to the outerHTML property.\n        /// </param>\n        /// </signature>\n        element.outerHTML = text;\n    };\n    insertAdjacentHTML = insertAdjacentHTMLUnsafe = function (element, position, text) {\n        /// <signature helpKeyword=\"WinJS.Utilities.insertAdjacentHTML\">\n        /// <summary locid=\"WinJS.Utilities.insertAdjacentHTML\">\n        /// Calls insertAdjacentHTML on the specified element.\n        /// </summary>\n        /// <param name=\"element\" type=\"HTMLElement\" locid=\"WinJS.Utilities.insertAdjacentHTML_p:element\">\n        /// The element on which insertAdjacentHTML is to be called.\n        /// </param>\n        /// <param name=\"position\" type=\"String\" locid=\"WinJS.Utilities.insertAdjacentHTML_p:position\">\n        /// The position relative to the element at which to insert the HTML.\n        /// </param>\n        /// <param name=\"text\" type=\"String\" locid=\"WinJS.Utilities.insertAdjacentHTML_p:text\">\n        /// The value to be provided to insertAdjacentHTML.\n        /// </param>\n        /// </signature>\n        element.insertAdjacentHTML(position, text);\n    };\n\n    var msApp = global.MSApp;\n    if (msApp) {\n        setInnerHTMLUnsafe = function (element, text) {\n            /// <signature helpKeyword=\"WinJS.Utilities.setInnerHTMLUnsafe\">\n            /// <summary locid=\"WinJS.Utilities.setInnerHTMLUnsafe\">\n            /// Sets the innerHTML property of the specified element to the specified text.\n            /// </summary>\n            /// <param name='element' type='HTMLElement' locid=\"WinJS.Utilities.setInnerHTMLUnsafe_p:element\">\n            /// The element on which the innerHTML property is to be set.\n            /// </param>\n            /// <param name='text' type=\"String\" locid=\"WinJS.Utilities.setInnerHTMLUnsafe_p:text\">\n            /// The value to be set to the innerHTML property.\n            /// </param>\n            /// </signature>\n            msApp.execUnsafeLocalFunction(function () {\n                element.innerHTML = text;\n            });\n        };\n        setOuterHTMLUnsafe = function (element, text) {\n            /// <signature helpKeyword=\"WinJS.Utilities.setOuterHTMLUnsafe\">\n            /// <summary locid=\"WinJS.Utilities.setOuterHTMLUnsafe\">\n            /// Sets the outerHTML property of the specified element to the specified text\n            /// in the context of msWWA.execUnsafeLocalFunction.\n            /// </summary>\n            /// <param name=\"element\" type=\"HTMLElement\" locid=\"WinJS.Utilities.setOuterHTMLUnsafe_p:element\">\n            /// The element on which the outerHTML property is to be set.\n            /// </param>\n            /// <param name=\"text\" type=\"String\" locid=\"WinJS.Utilities.setOuterHTMLUnsafe_p:text\">\n            /// The value to be set to the outerHTML property.\n            /// </param>\n            /// </signature>\n            msApp.execUnsafeLocalFunction(function () {\n                element.outerHTML = text;\n            });\n        };\n        insertAdjacentHTMLUnsafe = function (element, position, text) {\n            /// <signature helpKeyword=\"WinJS.Utilities.insertAdjacentHTMLUnsafe\">\n            /// <summary locid=\"WinJS.Utilities.insertAdjacentHTMLUnsafe\">\n            /// Calls insertAdjacentHTML on the specified element in the context\n            /// of msWWA.execUnsafeLocalFunction.\n            /// </summary>\n            /// <param name=\"element\" type=\"HTMLElement\" locid=\"WinJS.Utilities.insertAdjacentHTMLUnsafe_p:element\">\n            /// The element on which insertAdjacentHTML is to be called.\n            /// </param>\n            /// <param name=\"position\" type=\"String\" locid=\"WinJS.Utilities.insertAdjacentHTMLUnsafe_p:position\">\n            /// The position relative to the element at which to insert the HTML.\n            /// </param>\n            /// <param name=\"text\" type=\"String\" locid=\"WinJS.Utilities.insertAdjacentHTMLUnsafe_p:text\">\n            /// Value to be provided to insertAdjacentHTML.\n            /// </param>\n            /// </signature>\n            msApp.execUnsafeLocalFunction(function () {\n                element.insertAdjacentHTML(position, text);\n            });\n        };\n    }\n    else if (global.msIsStaticHTML) {\n        var check = function (str) {\n            if (!global.msIsStaticHTML(str)) {\n                throw new WinJS.ErrorFromName(\"WinJS.Utitilies.NonStaticHTML\", strings.nonStaticHTML);\n            }\n        }\n        // If we ever get isStaticHTML we can attempt to recreate the behavior we have in the local\n        // compartment, in the mean-time all we can do is sanitize the input.\n        //\n        setInnerHTML = function (element, text) {\n            /// <signature helpKeyword=\"WinJS.Utilities.setInnerHTML\">\n            /// <summary locid=\"WinJS.Utilities.msIsStaticHTML.setInnerHTML\">\n            /// Sets the innerHTML property of a element to the specified text\n            /// if it passes a msIsStaticHTML check.\n            /// </summary>\n            /// <param name=\"element\" type=\"HTMLElement\" locid=\"WinJS.Utilities.msIsStaticHTML.setInnerHTML_p:element\">\n            /// The element on which the innerHTML property is to be set.\n            /// </param>\n            /// <param name=\"text\" type=\"String\" locid=\"WinJS.Utilities.msIsStaticHTML.setInnerHTML_p:text\">\n            /// The value to be set to the innerHTML property.\n            /// </param>\n            /// </signature>\n            check(text);\n            element.innerHTML = text;\n        };\n        setOuterHTML = function (element, text) {\n            /// <signature helpKeyword=\"WinJS.Utilities.setOuterHTML\">\n            /// <summary locid=\"WinJS.Utilities.msIsStaticHTML.setOuterHTML\">\n            /// Sets the outerHTML property of a element to the specified text\n            /// if it passes a msIsStaticHTML check.\n            /// </summary>\n            /// <param name=\"element\" type=\"HTMLElement\" locid=\"WinJS.Utilities.msIsStaticHTML.setOuterHTML_p:element\">\n            /// The element on which the outerHTML property is to be set.\n            /// </param>\n            /// <param name=\"text\" type=\"String\" locid=\"WinJS.Utilities.msIsStaticHTML.setOuterHTML_p:text\">\n            /// The value to be set to the outerHTML property.\n            /// </param>\n            /// </signature>\n            check(text);\n            element.outerHTML = text;\n        };\n        insertAdjacentHTML = function (element, position, text) {\n            /// <signature helpKeyword=\"WinJS.Utilities.insertAdjacentHTML\">\n            /// <summary locid=\"WinJS.Utilities.msIsStaticHTML.insertAdjacentHTML\">\n            /// Calls insertAdjacentHTML on the element if it passes\n            /// a msIsStaticHTML check.\n            /// </summary>\n            /// <param name=\"element\" type=\"HTMLElement\" locid=\"WinJS.Utilities.msIsStaticHTML.insertAdjacentHTML_p:element\">\n            /// The element on which insertAdjacentHTML is to be called.\n            /// </param>\n            /// <param name=\"position\" type=\"String\" locid=\"WinJS.Utilities.msIsStaticHTML.insertAdjacentHTML_p:position\">\n            /// The position relative to the element at which to insert the HTML.\n            /// </param>\n            /// <param name=\"text\" type=\"String\" locid=\"WinJS.Utilities.msIsStaticHTML.insertAdjacentHTML_p:text\">\n            /// The value to be provided to insertAdjacentHTML.\n            /// </param>\n            /// </signature>\n            check(text);\n            element.insertAdjacentHTML(position, text);\n        };\n    }\n\n    WinJS.Namespace.define(\"WinJS.Utilities\", {\n        setInnerHTML: setInnerHTML,\n        setInnerHTMLUnsafe: setInnerHTMLUnsafe,\n        setOuterHTML: setOuterHTML,\n        setOuterHTMLUnsafe: setOuterHTMLUnsafe,\n        insertAdjacentHTML: insertAdjacentHTML,\n        insertAdjacentHTMLUnsafe: insertAdjacentHTMLUnsafe\n    });\n\n}(this, this.WinJS));\n\n\n\n// MONACO CHANGE\n} // if (typeof WinJS === 'undefined')\n\n(function(global) {\n\n    if (typeof exports === 'undefined' && typeof define === 'function' && define.amd) {\n        define(\"vs/base/common/winjs.base.raw\", global.WinJS);\n    } else {\n        module.exports = global.WinJS;\n    }\n\n})(this);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport assert = require('assert');\n\n/**\n * Executes the given function (fn) over the given array of items (list) in parallel and returns the resulting errors and results as\n * array to the callback (callback). The resulting errors and results are evaluated by calling the provided callback function.\n */\nexport function parallel<T, E>(list: T[], fn: (item: T, callback: (err: Error, result: E) => void) => void, callback: (err: Error[], result: E[]) => void): void {\n\tvar results = new Array(list.length);\n\tvar errors = new Array<Error>(list.length);\n\tvar didErrorOccur = false;\n\tvar doneCount = 0;\n\n\tif (list.length === 0) {\n\t\treturn callback(null, []);\n\t}\n\n\tlist.forEach((item, index) => {\n\t\tfn(item, (error, result) => {\n\t\t\tif (error) {\n\t\t\t\tdidErrorOccur = true;\n\t\t\t\tresults[index] = null;\n\t\t\t\terrors[index] = error;\n\t\t\t} else {\n\t\t\t\tresults[index] = result;\n\t\t\t\terrors[index] = null;\n\t\t\t}\n\n\t\t\tif (++doneCount === list.length) {\n\t\t\t\treturn callback(didErrorOccur ? errors : null, results);\n\t\t\t}\n\t\t});\n\t});\n};\n\n/**\n * Executes the given function (fn) over the given array of items (param) in sequential order and returns the first occurred error or the result as\n * array to the callback (callback). The resulting errors and results are evaluated by calling the provided callback function. The first param can\n * either be a function that returns an array of results to loop in async fashion or be an array of items already.\n */\nexport function loop<T, E>(param: (callback: (error: Error, result: T[]) => void) => void, fn: (item: T, callback: (error: Error, result: E) => void, index: number, total: number) => void, callback: (error: Error, result: E[]) => void): void;\nexport function loop<T, E>(param: T[], fn: (item: T, callback: (error: Error, result: E) => void, index: number, total: number) => void, callback: (error: Error, result: E[]) => void): void;\nexport function loop<E>(param: any, fn: (item: any, callback: (error: Error, result: E) => void, index: number, total: number) => void, callback: (error: Error, result: E[]) => void): void {\n\n\t// Assert\n\tassert.ok(param, 'Missing first parameter');\n\tassert.ok(typeof (fn) === 'function', 'Second parameter must be a function that is called for each element');\n\tassert.ok(typeof (callback) === 'function', 'Third parameter must be a function that is called on error and success');\n\n\t// Param is function, execute to retrieve array\n\tif (typeof (param) === 'function') {\n\t\ttry {\n\t\t\tparam((error: Error, result: E[]) => {\n\t\t\t\tif (error) {\n\t\t\t\t\tcallback(error, null);\n\t\t\t\t} else {\n\t\t\t\t\tloop(result, fn, callback);\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tcallback(error, null);\n\t\t}\n\t}\n\n\t// Expect the param to be an array and loop over it\n\telse {\n\t\tvar results: E[] = [];\n\n\t\tvar looper: (i: number) => void = function (i: number): void {\n\n\t\t\t// Still work to do\n\t\t\tif (i < param.length) {\n\n\t\t\t\t// Execute function on array element\n\t\t\t\ttry {\n\t\t\t\t\tfn(param[i], (error: any, result: E) => {\n\n\t\t\t\t\t\t// A method might only send a boolean value as return value (e.g. fs.exists), support this case gracefully\n\t\t\t\t\t\tif (error === true || error === false) {\n\t\t\t\t\t\t\tresult = error;\n\t\t\t\t\t\t\terror = null;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Quit looping on error\n\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\tcallback(error, null);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Otherwise push result on stack and continue looping\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tif (result) { //Could be that provided function is not returning a result\n\t\t\t\t\t\t\t\tresults.push(result);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tprocess.nextTick(() => {\n\t\t\t\t\t\t\t\tlooper(i + 1);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}, i, param.length);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tcallback(error, null);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Done looping, pass back results too callback function\n\t\t\telse {\n\t\t\t\tcallback(null, results);\n\t\t\t}\n\t\t};\n\n\t\t// Start looping with first element in array\n\t\tlooper(0);\n\t}\n};\n\nfunction Sequence(sequences: { (...param: any[]): void; }[]): void {\n\n\t// Assert\n\tassert.ok(sequences.length > 1, 'Need at least one error handler and one function to process sequence');\n\tsequences.forEach((sequence) => {\n\t\tassert.ok(typeof (sequence) === 'function');\n\t});\n\n\t// Execute in Loop\n\tvar errorHandler = sequences.splice(0, 1)[0]; //Remove error handler\n\tvar sequenceResult: any = null;\n\n\tloop(sequences, (sequence, clb) => {\n\t\tvar sequenceFunction = function (error: any, result: any): void {\n\n\t\t\t// A method might only send a boolean value as return value (e.g. fs.exists), support this case gracefully\n\t\t\tif (error === true || error === false) {\n\t\t\t\tresult = error;\n\t\t\t\terror = null;\n\t\t\t}\n\n\t\t\t// Handle Error and Result\n\t\t\tif (error) {\n\t\t\t\tclb(error, null);\n\t\t\t} else {\n\t\t\t\tsequenceResult = result; //Remember result of sequence\n\t\t\t\tclb(null, null); //Don't pass on result to Looper as we are not aggregating it\n\t\t\t}\n\t\t};\n\n\t\t// We call the sequence function setting \"this\" to be the callback we define here\n\t\t// and we pass in the \"sequenceResult\" as first argument. Doing all this avoids having\n\t\t// to pass in a callback to the sequence because the callback is already \"this\".\n\t\ttry {\n\t\t\tsequence.call(sequenceFunction, sequenceResult);\n\t\t} catch (error) {\n\t\t\tclb(error, null);\n\t\t}\n\t}, (error, result) => {\n\t\tif (error) {\n\t\t\terrorHandler(error);\n\t\t}\n\t});\n}\n\n/**\n * Takes a variable list of functions to execute in sequence. The first function must be the error handler and the\n * following functions can do arbitrary work. \"this\" must be used as callback value for async functions to continue\n * through the sequence:\n * \tsequence(\n * \t\tfunction errorHandler(error) {\n * \t\t\tclb(error, null);\n * \t\t},\n *\n * \t\tfunction doSomethingAsync() {\n * \t\t\tfs.doAsync(path, this);\n * \t\t},\n *\n * \t\tfunction done(result) {\n * \t\t\tclb(null, result);\n * \t\t}\n * \t);\n */\nexport function sequence(errorHandler: (error: Error) => void, ...sequences: Function[]): void;\nexport function sequence(sequences: Function[]): void;\nexport function sequence(sequences: any): void {\n\tSequence((Array.isArray(sequences)) ? sequences : Array.prototype.slice.call(arguments));\n};","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport path = require('path');\nimport os = require('os');\nimport net = require('net');\nimport cp = require('child_process');\nimport uri from 'vs/base/common/uri';\n\nexport interface IForkOpts {\n\tcwd?: string;\n\tenv?: any;\n\tencoding?: string;\n\texecArgv?: string[];\n}\n\nfunction makeRandomHexString(length:number): string {\n\tlet chars = ['0', '1', '2', '3', '4', '5', '6', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n\tlet result = '';\n\tfor (let i = 0; i < length; i++) {\n\t\tlet idx = Math.floor(chars.length * Math.random());\n\t\tresult += chars[idx];\n\t}\n\treturn result;\n}\n\nfunction generatePipeName(): string {\n\tvar randomName = 'vscode-' + makeRandomHexString(40);\n\tif (process.platform === 'win32') {\n\t\treturn '\\\\\\\\.\\\\pipe\\\\' + randomName + '-sock';\n\t}\n\n\t// Mac/Unix: use socket file\n\treturn path.join(os.tmpdir(), randomName + '.sock');\n}\n\nfunction generatePatchedEnv(env:any, stdInPipeName:string, stdOutPipeName:string): any {\n\t// Set the two unique pipe names and the electron flag as process env\n\n\tvar newEnv:any = {};\n\tfor (var key in env) {\n\t\tnewEnv[key] = env[key];\n\t}\n\n\tnewEnv['STDIN_PIPE_NAME'] = stdInPipeName;\n\tnewEnv['STDOUT_PIPE_NAME'] = stdOutPipeName;\n\tnewEnv['ATOM_SHELL_INTERNAL_RUN_AS_NODE'] = '1';\n\n\treturn newEnv;\n}\n\nexport function fork(modulePath: string, args: string[], options: IForkOpts, callback:(error:any, cp:cp.ChildProcess)=>void): void {\n\n\tvar callbackCalled = false;\n\tvar resolve = (result: cp.ChildProcess) => {\n\t\tif (callbackCalled) {\n\t\t\treturn;\n\t\t}\n\t\tcallbackCalled = true;\n\t\tcallback(null, result);\n\t};\n\tvar reject = (err:any) => {\n\t\tif (callbackCalled) {\n\t\t\treturn;\n\t\t}\n\t\tcallbackCalled = true;\n\t\tcallback(err, null);\n\t};\n\n\t// Generate two unique pipe names\n\tvar stdInPipeName = generatePipeName();\n\tvar stdOutPipeName = generatePipeName();\n\n\tvar newEnv = generatePatchedEnv(options.env || process.env, stdInPipeName, stdOutPipeName);\n\n\tvar childProcess: cp.ChildProcess;\n\n\t// Begin listening to stdout pipe\n\tvar server = net.createServer((stream) => {\n\t\t// The child process will write exactly one chunk with content `ready` when it has installed a listener to the stdin pipe\n\n\t\tstream.once('data', (chunk:Buffer) => {\n\t\t\t// The child process is sending me the `ready` chunk, time to connect to the stdin pipe\n\t\t\tchildProcess.stdin = <any>net.connect(stdInPipeName);\n\n\t\t\t// From now on the childProcess.stdout is available for reading\n\t\t\tchildProcess.stdout = stream;\n\n\t\t\tresolve(childProcess);\n\t\t});\n\t});\n\tserver.listen(stdOutPipeName);\n\n\tvar serverClosed = false;\n\tvar closeServer = () => {\n\t\tif (serverClosed) {\n\t\t\treturn;\n\t\t}\n\t\tserverClosed = true;\n\t\tserver.close();\n\t}\n\n\t// Create the process\n\tlet bootstrapperPath = (uri.parse(require.toUrl('./stdForkStart.js')).fsPath);\n\tchildProcess = cp.fork(bootstrapperPath, [modulePath].concat(args), {\n\t\tsilent: true,\n\t\tcwd: options.cwd,\n\t\tenv: newEnv,\n\t\texecArgv: options.execArgv\n\t});\n\n\tchildProcess.once('error', (err:Error) => {\n\t\tcloseServer();\n\t\treject(err);\n\t});\n\n\tchildProcess.once('exit', (err:Error) => {\n\t\tcloseServer();\n\t\treject(err);\n\t});\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nexport namespace Arrays {\n\n\t/**\n\t * Given a sorted array of natural number segments, find the segment containing a natural number.\n\t *    For example, the segments [0, 5), [5, 9), [9, infinity) will be represented in the following manner:\n\t *       [{ startIndex: 0 }, { startIndex: 5 }, { startIndex: 9 }]\n\t *    Searching for 0, 1, 2, 3 or 4 will return 0.\n\t *    Searching for 5, 6, 7 or 8 will return 1.\n\t *    Searching for 9, 10, 11, ... will return 2.\n\t * @param arr A sorted array representing natural number segments\n\t * @param desiredIndex The search\n\t * @return The index of the containing segment in the array.\n\t */\n\texport function findIndexInSegmentsArray(arr: { startIndex: number; }[], desiredIndex: number): number {\n\n\t\tvar low = 0,\n\t\t\thigh = arr.length - 1,\n\t\t\tmid: number;\n\n\t\twhile (low < high) {\n\n\t\t\tmid = low + Math.ceil((high - low) / 2);\n\n\t\t\tif (arr[mid].startIndex > desiredIndex) {\n\t\t\t\thigh = mid - 1;\n\t\t\t} else {\n\t\t\t\tlow = mid;\n\t\t\t}\n\t\t}\n\n\t\treturn low;\n\t}\n\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport EditorCommon = require('vs/editor/common/editorCommon');\n\nexport class Position implements EditorCommon.IEditorPosition {\n\n\tpublic lineNumber: number;\n\tpublic column: number;\n\n\tconstructor(lineNumber: number, column: number) {\n\t\tthis.lineNumber = lineNumber;\n\t\tthis.column = column;\n\t}\n\n\tpublic equals(other:EditorCommon.IPosition): boolean {\n\t\treturn (!!other && this.lineNumber === other.lineNumber && this.column === other.column);\n\t}\n\n\tpublic isBefore(other:EditorCommon.IPosition): boolean {\n\t\tif (this.lineNumber < other.lineNumber) {\n\t\t\treturn true;\n\t\t}\n\t\tif (other.lineNumber < this.lineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.column < other.column;\n\t}\n\n\tpublic isBeforeOrEqual(other:EditorCommon.IPosition): boolean {\n\t\tif (this.lineNumber < other.lineNumber) {\n\t\t\treturn true;\n\t\t}\n\t\tif (other.lineNumber < this.lineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.column <= other.column;\n\t}\n\n\tpublic clone(): Position {\n\t\treturn new Position(this.lineNumber, this.column);\n\t}\n\n\tpublic toString(): string {\n\t\treturn '(' + this.lineNumber + ',' + this.column + ')';\n\t}\n\n\t// ---\n\n\tpublic static lift(pos:EditorCommon.IPosition): EditorCommon.IEditorPosition {\n\t\treturn new Position(pos.lineNumber, pos.column);\n\t}\n\n\tpublic static isIPosition(obj: any): obj is EditorCommon.IPosition {\n\t\treturn (\n\t\t\tobj\n\t\t\t&& (typeof obj.lineNumber === 'number')\n\t\t\t&& (typeof obj.column === 'number')\n\t\t);\n\t}\n\n\tpublic static asEmptyRange(position:EditorCommon.IPosition):EditorCommon.IRange {\n\t\treturn {\n\t\t\tstartLineNumber: position.lineNumber,\n\t\t\tstartColumn: position.column,\n\t\t\tendLineNumber: position.lineNumber,\n\t\t\tendColumn: position.column\n\t\t};\n\t}\n\n\tpublic static startPosition(range:EditorCommon.IRange):EditorCommon.IPosition {\n\t\treturn {\n\t\t\tlineNumber: range.startLineNumber,\n\t\t\tcolumn: range.startColumn\n\t\t};\n\t}\n\n\tpublic static endPosition(range:EditorCommon.IRange):EditorCommon.IPosition {\n\t\treturn {\n\t\t\tlineNumber: range.endLineNumber,\n\t\t\tcolumn: range.endColumn\n\t\t};\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport {Position} from 'vs/editor/common/core/position';\nimport EditorCommon = require('vs/editor/common/editorCommon');\n\nexport class Range implements EditorCommon.IEditorRange {\n\n\tpublic startLineNumber:number;\n\tpublic startColumn:number;\n\tpublic endLineNumber:number;\n\tpublic endColumn:number;\n\n\tconstructor(startLineNumber:number, startColumn:number, endLineNumber:number, endColumn:number) {\n\t\tif ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\n\t\t\tthis.startLineNumber = endLineNumber;\n\t\t\tthis.startColumn = endColumn;\n\t\t\tthis.endLineNumber = startLineNumber;\n\t\t\tthis.endColumn = startColumn;\n\t\t} else {\n\t\t\tthis.startLineNumber = startLineNumber;\n\t\t\tthis.startColumn = startColumn;\n\t\t\tthis.endLineNumber = endLineNumber;\n\t\t\tthis.endColumn = endColumn;\n\t\t}\n\t}\n\n\tpublic isEmpty(): boolean {\n\t\treturn Range.isEmpty(this);\n\t}\n\n\tpublic containsPosition(position:EditorCommon.IPosition): boolean {\n\t\treturn Range.containsPosition(this, position);\n\t}\n\n\tpublic containsRange(range:EditorCommon.IRange): boolean {\n\t\treturn Range.containsRange(this, range);\n\t}\n\n\tpublic plusRange(range:EditorCommon.IRange): Range {\n\t\treturn Range.plusRange(this, range);\n\t}\n\n\tpublic intersectRanges(range:EditorCommon.IRange): Range {\n\t\treturn Range.intersectRanges(this, range);\n\t}\n\n\tpublic equalsRange(other:EditorCommon.IRange): boolean {\n\t\treturn Range.equalsRange(this, other);\n\t}\n\n\tpublic getEndPosition(): EditorCommon.IEditorPosition {\n\t\treturn new Position(this.endLineNumber, this.endColumn);\n\t}\n\n\tpublic getStartPosition(): EditorCommon.IEditorPosition {\n\t\treturn new Position(this.startLineNumber, this.startColumn);\n\t}\n\n\tpublic cloneRange(): Range {\n\t\treturn new Range(this.startLineNumber, this.startColumn, this.endLineNumber, this.endColumn);\n\t}\n\n\tpublic toString(): string {\n\t\treturn '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\n\t}\n\n\tpublic setEndPosition(endLineNumber: number, endColumn: number): EditorCommon.IEditorRange {\n\t\treturn new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n\t}\n\n\tpublic setStartPosition(startLineNumber: number, startColumn: number): EditorCommon.IEditorRange {\n\t\treturn new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n\t}\n\n\tpublic collapseToStart():Range  {\n\t\treturn new Range(this.startLineNumber, this.startColumn, this.startLineNumber, this.startColumn);\n\t}\n\n\t// ---\n\n\tpublic static lift(range:EditorCommon.IRange): EditorCommon.IEditorRange {\n\t\tif (!range) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n\t}\n\n\tpublic static isIRange(obj: any): obj is EditorCommon.IRange {\n\t\treturn (\n\t\t\tobj\n\t\t\t&& (typeof obj.startLineNumber === 'number')\n\t\t\t&& (typeof obj.startColumn === 'number')\n\t\t\t&& (typeof obj.endLineNumber === 'number')\n\t\t\t&& (typeof obj.endColumn === 'number')\n\t\t);\n\t}\n\n\tpublic static isEmpty(range:EditorCommon.IRange): boolean {\n\t\treturn (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\n\t}\n\n\tpublic static containsPosition(range:EditorCommon.IRange, position:EditorCommon.IPosition): boolean {\n\t\tif (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n\t\t\treturn false;\n\t\t}\n\t\tif (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic static containsRange(range:EditorCommon.IRange, otherRange:EditorCommon.IRange): boolean {\n\t\tif (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic static areIntersectingOrTouching(a:EditorCommon.IRange, b:EditorCommon.IRange): boolean {\n\t\t// Check if `a` is before `b`\n\t\tif (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if `b` is before `a`\n\t\tif (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// These ranges must intersect\n\t\treturn true;\n\t}\n\n\tpublic static intersectRanges(a:EditorCommon.IRange, b:EditorCommon.IRange): Range {\n\t\tvar resultStartLineNumber = a.startLineNumber,\n\t\t\tresultStartColumn = a.startColumn,\n\t\t\tresultEndLineNumber = a.endLineNumber,\n\t\t\tresultEndColumn = a.endColumn,\n\t\t\totherStartLineNumber = b.startLineNumber,\n\t\t\totherStartColumn = b.startColumn,\n\t\t\totherEndLineNumber = b.endLineNumber,\n\t\t\totherEndColumn = b.endColumn;\n\n\t\tif (resultStartLineNumber < otherStartLineNumber) {\n\t\t\tresultStartLineNumber = otherStartLineNumber;\n\t\t\tresultStartColumn = otherStartColumn;\n\t\t} else if (resultStartLineNumber === otherStartLineNumber) {\n\t\t\tresultStartColumn = Math.max(resultStartColumn, otherStartColumn);\n\t\t}\n\n\t\tif (resultEndLineNumber > otherEndLineNumber) {\n\t\t\tresultEndLineNumber = otherEndLineNumber;\n\t\t\tresultEndColumn = otherEndColumn;\n\t\t} else if (resultEndLineNumber === otherEndLineNumber) {\n\t\t\tresultEndColumn = Math.min(resultEndColumn, otherEndColumn);\n\t\t}\n\n\t\t// Check if selection is now empty\n\t\tif (resultStartLineNumber > resultEndLineNumber) {\n\t\t\treturn null;\n\t\t}\n\t\tif (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\n\t}\n\n\tpublic static plusRange(a:EditorCommon.IRange, b:EditorCommon.IRange): Range {\n\t\tvar startLineNumber:number, startColumn:number, endLineNumber:number, endColumn:number;\n\t\tif (b.startLineNumber < a.startLineNumber) {\n\t\t\tstartLineNumber = b.startLineNumber;\n\t\t\tstartColumn = b.startColumn;\n\t\t} else if (b.startLineNumber === a.startLineNumber) {\n\t\t\tstartLineNumber = b.startLineNumber;\n\t\t\tstartColumn = Math.min(b.startColumn, a.startColumn);\n\t\t} else {\n\t\t\tstartLineNumber = a.startLineNumber;\n\t\t\tstartColumn = a.startColumn;\n\t\t}\n\n\t\tif (b.endLineNumber > a.endLineNumber) {\n\t\t\tendLineNumber = b.endLineNumber;\n\t\t\tendColumn = b.endColumn;\n\t\t} else if (b.endLineNumber === a.endLineNumber) {\n\t\t\tendLineNumber = b.endLineNumber;\n\t\t\tendColumn = Math.max(b.endColumn, a.endColumn);\n\t\t} else {\n\t\t\tendLineNumber = a.endLineNumber;\n\t\t\tendColumn = a.endColumn;\n\t\t}\n\n\t\treturn new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n\t}\n\n\tpublic static equalsRange(a:EditorCommon.IRange, b:EditorCommon.IRange): boolean {\n\t\treturn (\n\t\t\t!!a &&\n\t\t\t!!b &&\n\t\t\ta.startLineNumber === b.startLineNumber &&\n\t\t\ta.startColumn === b.startColumn &&\n\t\t\ta.endLineNumber === b.endLineNumber &&\n\t\t\ta.endColumn === b.endColumn\n\t\t);\n\t}\n\n\t/**\n\t * A function that compares ranges, useful for sorting ranges\n\t * It will first compare ranges on the startPosition and then on the endPosition\n\t */\n\tpublic static compareRangesUsingStarts(a:EditorCommon.IRange, b:EditorCommon.IRange): number {\n\t\tif (a.startLineNumber === b.startLineNumber) {\n\t\t\tif (a.startColumn === b.startColumn) {\n\t\t\t\tif (a.endLineNumber === b.endLineNumber) {\n\t\t\t\t\treturn a.endColumn - b.endColumn;\n\t\t\t\t}\n\t\t\t\treturn a.endLineNumber - b.endLineNumber;\n\t\t\t}\n\t\t\treturn a.startColumn - b.startColumn;\n\t\t}\n\t\treturn a.startLineNumber - b.startLineNumber;\n\t}\n\n\t/**\n\t * A function that compares ranges, useful for sorting ranges\n\t * It will first compare ranges on the endPosition and then on the startPosition\n\t */\n\tpublic static compareRangesUsingEnds(a:EditorCommon.IRange, b:EditorCommon.IRange): number {\n\t\tif (a.endLineNumber === b.endLineNumber) {\n\t\t\tif (a.endColumn === b.endColumn) {\n\t\t\t\tif (a.startLineNumber === b.startLineNumber) {\n\t\t\t\t\treturn a.startColumn - b.startColumn;\n\t\t\t\t}\n\t\t\t\treturn a.startLineNumber - b.startLineNumber;\n\t\t\t}\n\t\t\treturn a.endColumn - b.endColumn;\n\t\t}\n\t\treturn a.endLineNumber - b.endLineNumber;\n\t}\n\n\tpublic static spansMultipleLines(range:EditorCommon.IRange):boolean {\n\t\treturn range.endLineNumber > range.startLineNumber;\n\t}\n\n\tpublic static hashCode(range:EditorCommon.IRange):number {\n\t\treturn (range.startLineNumber * 17) + (range.startColumn * 23) + (range.endLineNumber * 29) + (range.endColumn * 37);\n\t}\n\n\tpublic static collapseToStart(range:EditorCommon.IRange):EditorCommon.IRange  {\n\t\treturn {\n\t\t\tstartLineNumber: range.startLineNumber,\n\t\t\tstartColumn: range.startColumn,\n\t\t\tendLineNumber: range.startLineNumber,\n\t\t\tendColumn: range.startColumn\n\t\t};\n\t}\n\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport EditorCommon = require('vs/editor/common/editorCommon');\nimport {Range} from 'vs/editor/common/core/range';\n\nexport class EditOperation {\n\n\tpublic static insert(position:EditorCommon.IEditorPosition, text:string): EditorCommon.IIdentifiedSingleEditOperation {\n\t\treturn {\n\t\t\tidentifier: null,\n\t\t\trange: new Range(position.lineNumber, position.column, position.lineNumber, position.column),\n\t\t\ttext: text,\n\t\t\tforceMoveMarkers: true\n\t\t};\n\t}\n\n\tpublic static delete(range:EditorCommon.IEditorRange): EditorCommon.IIdentifiedSingleEditOperation {\n\t\treturn {\n\t\t\tidentifier: null,\n\t\t\trange: range,\n\t\t\ttext: null,\n\t\t\tforceMoveMarkers: true\n\t\t};\n\t}\n\n\tpublic static replace(range:EditorCommon.IEditorRange, text:string): EditorCommon.IIdentifiedSingleEditOperation {\n\t\treturn {\n\t\t\tidentifier: null,\n\t\t\trange: range,\n\t\t\ttext: text,\n\t\t\tforceMoveMarkers: false\n\t\t};\n\t}\n\n\tpublic static replaceMove(range:EditorCommon.IEditorRange, text:string): EditorCommon.IIdentifiedSingleEditOperation {\n\t\treturn {\n\t\t\tidentifier: null,\n\t\t\trange: range,\n\t\t\ttext: text,\n\t\t\tforceMoveMarkers: true\n\t\t};\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {IMatch} from 'vs/base/common/filters';\nimport {IMarker, IMarkerService} from 'vs/platform/markers/common/markers';\nimport EditorCommon = require('vs/editor/common/editorCommon');\nimport {IHTMLContentElement} from 'vs/base/common/htmlContent';\nimport URI from 'vs/base/common/uri';\nimport {IDisposable} from 'vs/base/common/lifecycle';\nimport {AsyncDescriptor0} from 'vs/platform/instantiation/common/descriptors';\n\nexport interface IWorkerParticipantDescriptor {\n\tmodeId:string;\n\tdescriptor: AsyncDescriptor0<IWorkerParticipant>;\n}\n\nexport interface IWorkerParticipant {\n\n}\n\nexport interface IValidateParticipant extends IWorkerParticipant {\n\t/**\n\t * @param context mode specific data that helps with validation.\n\t */\n\tvalidate(mirrorModel:EditorCommon.IMirrorModel, markerService:IMarkerService, context:any):void;\n}\n\nexport interface ISuggestParticipant extends IWorkerParticipant {\n\tfilter?:(word:string, suggestion:ISuggestion) => IMatch[];\n\tsuggest?:(resource:URI, position:EditorCommon.IPosition, context?:any) => TPromise<ISuggestResult>;\n}\n\nexport enum Bracket {\n\tNone = 0,\n\tOpen = 1,\n\tClose = -1\n}\n\nexport interface ITokenizationResult {\n\ttype?:string;\n\tbracket?:Bracket;\n\tnextState?:IState;\n}\n\nexport interface IState {\n\tclone():IState;\n\tequals(other:IState):boolean;\n\tgetMode():IMode;\n\ttokenize(stream:IStream):ITokenizationResult;\n\tgetStateData(): IState;\n\tsetStateData(state:IState):void;\n}\n\n/**\n * An IStream is a character & token stream abstraction over a line of text. It\n *  is never multi-line. The stream can be navigated character by character, or\n *  token by token, given some token rules.\n */\nexport interface IStream {\n\n\t/**\n\t * Returns the current character position of the stream on the line.\n\t */\n\tpos():number;\n\n\t/**\n\t * Returns true iff the stream is at the end of the line.\n\t */\n\teos():boolean;\n\n\t/**\n\t * Returns the next character in the stream.\n\t */\n\tpeek():string;\n\n\t/**\n\t * Returns the next character in the stream, and advances it by one character.\n\t */\n\tnext(): string;\n\tnext2(): void;\n\n\t/**\n\t * Advances the stream by `n` characters.\n\t */\n\tadvance(n:number):string;\n\n\t/**\n\t * Advances the stream until the end of the line.\n\t */\n\tadvanceToEOS():string;\n\n\t/**\n\t * Brings the stream back `n` characters.\n\t */\n\tgoBack(n:number):void;\n\n\t/**\n\t *  Advances the stream if the next characters validate a condition. A condition can be\n\t *\n\t *      - a regular expression (always starting with ^)\n\t * \t\t\tEXAMPLES: /^\\d+/, /^function|var|interface|class/\n\t *\n\t *  \t- a string\n\t * \t\t\tEXAMPLES: \"1954\", \"albert\"\n\t */\n\tadvanceIfCharCode(charCode: number): string;\n\tadvanceIfCharCode2(charCode:number): number;\n\n\tadvanceIfString(condition: string): string;\n\tadvanceIfString2(condition: string): number;\n\n\tadvanceIfStringCaseInsensitive(condition: string): string;\n\tadvanceIfStringCaseInsensitive2(condition: string): number;\n\n\tadvanceIfRegExp(condition: RegExp): string;\n\tadvanceIfRegExp2(condition:RegExp): number;\n\n\n\t/**\n\t * Advances the stream while the next characters validate a condition. Check #advanceIf for\n\t * details on the possible types for condition.\n\t */\n\tadvanceWhile(condition:string):string;\n\tadvanceWhile(condition:RegExp):string;\n\n\t/**\n\t * Advances the stream until the some characters validate a condition. Check #advanceIf for\n\t * details on the possible types for condition. The `including` boolean value indicates\n\t * whether the stream will advance the characters that matched the condition as well, or not.\n\t */\n\tadvanceUntil(condition: string, including: boolean): string;\n\tadvanceUntil(condition: RegExp, including: boolean): string;\n\n\tadvanceUntilString(condition: string, including: boolean): string;\n\tadvanceUntilString2(condition: string, including: boolean): number;\n\n\t/**\n\t * The token rules define how consecutive characters should be put together as a token,\n\t * or separated into two different tokens. They are given through a separator characters\n\t * string and a whitespace characters string. A separator is always one token. Consecutive\n\t * whitespace is always one token. Everything in between these two token types, is also a token.\n\t *\n\t * \tEXAMPLE: stream.setTokenRules(\"+-\", \" \");\n\t * \tSetting these token rules defines the tokens for the string \"123+456 -    7\" as being\n\t * \t\t[\"123\", \"+\", \"456\", \" \", \"-\", \"    \", \"7\"]\n\t */\n\tsetTokenRules(separators:string, whitespace:string):void;\n\n\t/**\n\t * Returns the next token, given that the stream was configured with token rules.\n\t */\n\tpeekToken():string;\n\n\t/**\n\t * Returns the next token, given that the stream was configured with token rules, and advances the\n\t * stream by the exact length of the found token.\n\t */\n\tnextToken():string;\n\n\t/**\n\t * Returns the next whitespace, if found. Returns an empty string otherwise.\n\t */\n\tpeekWhitespace():string;\n\n\t/**\n\t * Returns the next whitespace, if found, and advances the stream by the exact length of the found\n\t * whitespace. Returns an empty string otherwise.\n\t */\n\tskipWhitespace(): string;\n\tskipWhitespace2(): number;\n}\n\nexport interface IModeDescriptor {\n\tid:string;\n\tworkerParticipants:AsyncDescriptor0<IWorkerParticipant>[];\n}\n\nexport interface ILineContext {\n\tgetLineContent(): string;\n\n\tmodeTransitions: IModeTransition[];\n\n\tgetTokenCount(): number;\n\tgetTokenStartIndex(tokenIndex:number): number;\n\tgetTokenType(tokenIndex:number): string;\n\tgetTokenBracket(tokenIndex:number): Bracket;\n\tgetTokenText(tokenIndex:number): string;\n\tgetTokenEndIndex(tokenIndex:number): number;\n\tfindIndexOfOffset(offset:number): number;\n}\n\nexport interface IMode {\n\n\tgetId(): string;\n\n\t/**\n\t * Return a mode \"similar\" to this one that strips any \"smart\" supports.\n\t */\n\ttoSimplifiedMode(): IMode;\n\n\taddSupportChangedListener?(callback: (e: EditorCommon.IModeSupportChangedEvent) => void): IDisposable;\n\n\t/**\n\t * Register a support by name. Only optional.\n\t */\n\tregisterSupport?<T>(support:string, callback:(mode:IMode)=>T): IDisposable;\n\n\t/**\n\t * Optional adapter to support tokenization.\n\t */\n\ttokenizationSupport?: ITokenizationSupport;\n\n\t/**\n\t * Optional adapter to support showing occurrences of words or such.\n\t */\n\toccurrencesSupport?:IOccurrencesSupport;\n\n\t/**\n\t * Optional adapter to support revealing the declaration of a symbol.\n\t */\n\tdeclarationSupport?: IDeclarationSupport;\n\n\t/**\n\t * Optional adapter to support revealing the type declaration of a symbol.\n\t */\n\ttypeDeclarationSupport?: ITypeDeclarationSupport;\n\n\t/**\n\t * Optional adapter to support finding references to a symbol.\n\t */\n\treferenceSupport?:IReferenceSupport;\n\n\t/**\n\t * Optional adapter to support intellisense.\n\t */\n\tsuggestSupport?:ISuggestSupport;\n\n\t/**\n\t * Optional adapter to support intellisense.\n\t */\n\tparameterHintsSupport?:IParameterHintsSupport;\n\n\t/**\n\t * Optional adapter to support showing extra info in tokens.\n\t */\n\textraInfoSupport?:IExtraInfoSupport;\n\n\t/**\n\t * Optional adapter to support showing an outline.\n\t */\n\toutlineSupport?:IOutlineSupport;\n\n\t/**\n\t * Optional adapter to support logical selection.\n\t */\n\tlogicalSelectionSupport?:ILogicalSelectionSupport;\n\n\t/**\n\t * Optional adapter to support formatting.\n\t */\n\tformattingSupport?:IFormattingSupport;\n\n\t/**\n\t * Optional adapter to support inplace-replace.\n\t */\n\tinplaceReplaceSupport?:IInplaceReplaceSupport;\n\n\t/**\n\t * Optional adapter to support diff'ing two models.\n\t */\n\tdiffSupport?:IDiffSupport;\n\n\t/**\n\t * Optional adapter to support diff'ing a model with its original version.\n\t */\n\tdirtyDiffSupport?:IDirtyDiffSupport;\n\n\t/**\n\t * Optional adapter to support output for a model (e.g. markdown -> html)\n\t */\n\temitOutputSupport?:IEmitOutputSupport;\n\n\t/**\n\t * Optional adapter to support detecting links.\n\t */\n\tlinkSupport?:ILinkSupport;\n\n\t/**\n\t * Optional adapter to support configuring this mode.\n\t */\n\tconfigSupport?:IConfigurationSupport;\n\n\t/**\n\t * Optional adapter to support electric characters.\n\t */\n\telectricCharacterSupport?:IElectricCharacterSupport;\n\n\t/**\n\t * Optional adapter to support comment insertion.\n\t */\n\tcommentsSupport?:ICommentsSupport;\n\n\t/**\n\t * Optional adapter to support insertion of character pair.\n\t */\n\tcharacterPairSupport?:ICharacterPairSupport;\n\n\t/**\n\t * Optional adapter to support classification of tokens.\n\t */\n\ttokenTypeClassificationSupport?:ITokenTypeClassificationSupport;\n\n\t/**\n\t * Optional adapter to support quick fix of typing errors.\n\t */\n\tquickFixSupport?:IQuickFixSupport;\n\n\t/**\n\t * Optional adapter to show code lens\n\t */\n\tcodeLensSupport?:ICodeLensSupport;\n\n\t/**\n\t * Optional adapter to support renaming\n\t */\n\trenameSupport?: IRenameSupport;\n\n\t/**\n\t * Optional adapter to support task running\n\t */\n\ttaskSupport?: ITaskSupport;\n\n\tonEnterSupport?: IOnEnterSupport;\n}\n\n/**\n * Interface used for tokenization\n */\nexport interface IToken {\n\tstartIndex:number;\n\ttype:string;\n\tbracket:Bracket;\n}\n\nexport interface IModeTransition {\n\tstartIndex: number;\n\tmode: IMode;\n}\n\nexport interface ILineTokens {\n\ttokens: IToken[];\n\tactualStopOffset: number;\n\tendState: IState;\n\tmodeTransitions: IModeTransition[];\n\tretokenize?:TPromise<void>;\n}\n\nexport interface ITokenizationSupport {\n\n\tshouldGenerateEmbeddedModels: boolean;\n\n\tgetInitialState():IState;\n\n\t// add offsetDelta to each of the returned indices\n\t// stop tokenizing at absolute value stopAtOffset (i.e. stream.pos() + offsetDelta > stopAtOffset)\n\ttokenize(line:string, state:IState, offsetDelta?:number, stopAtOffset?:number):ILineTokens;\n}\n\n/**\n * Interface used to get extra info for a symbol\n */\nexport interface IComputeExtraInfoResult {\n\trange: EditorCommon.IRange;\n\tvalue?: string;\n\thtmlContent?: IHTMLContentElement[];\n\tclassName?: string;\n}\nexport interface IExtraInfoSupport {\n\tcomputeInfo(resource:URI, position:EditorCommon.IPosition):TPromise<IComputeExtraInfoResult>;\n}\n\n\nexport interface ISuggestion {\n\tlabel: string;\n\tcodeSnippet: string;\n\ttype: string;\n\ttypeLabel?: string;\n\tdocumentationLabel?: string;\n\tfilterText?: string;\n\tsortText?: string;\n\tnoAutoAccept?: boolean;\n\toverwriteBefore?: number;\n\toverwriteAfter?: number;\n}\n\nexport interface ISuggestResult {\n\tcurrentWord: string;\n\tsuggestions:ISuggestion[];\n\tincomplete?: boolean;\n}\n\nexport interface ISuggestionFilter {\n\t// Should return whether `suggestion` is a good suggestion for `word`\n\t(word: string, suggestion: ISuggestion): IMatch[];\n}\n\nexport interface ISuggestionCompare {\n\t(one: ISuggestion, other: ISuggestion): number;\n}\n\n/**\n * Interface used to get completion suggestions at a specific location.\n */\nexport interface ISuggestSupport {\n\n\t/**\n\t * Compute all completions for the given resource at the given position.\n\t */\n\tsuggest(resource: URI, position: EditorCommon.IPosition, triggerCharacter?: string): TPromise<ISuggestResult[]>;\n\n\t/**\n\t * Compute more details for the given suggestion.\n\t */\n\tgetSuggestionDetails?:(resource:URI, position:EditorCommon.IPosition, suggestion:ISuggestion)=>TPromise<ISuggestion>;\n\n\tgetFilter():ISuggestionFilter;\n\tgetSorter?():ISuggestionCompare;\n\tgetTriggerCharacters():string[];\n\tshouldShowEmptySuggestionList():boolean;\n\tshouldAutotriggerSuggest(context:ILineContext, offset:number, triggeredByCharacter:string):boolean;\n}\n\n/**\n * Interface used to quick fix typing errors while accesing member fields.\n */\nexport interface IQuickFix {\n\tcommand: ICommand;\n\tscore: number;\n}\n\nexport interface IQuickFixResult {\n\tedits?: IResourceEdit[];\n\tmessage?: string;\n}\n\nexport interface IQuickFixSupport {\n\tgetQuickFixes(resource: URI, range: IMarker | EditorCommon.IRange): TPromise<IQuickFix[]>;\n\t//TODO@joh this should be removed in the furture such that we can trust the command and it's args\n\trunQuickFixAction(resource: URI, range: EditorCommon.IRange, quickFix: IQuickFix):TPromise<IQuickFixResult>;\n}\n\nexport interface IParameter {\n\tlabel:string;\n\tdocumentation?:string;\n\tsignatureLabelOffset?:number;\n\tsignatureLabelEnd?:number;\n}\n\nexport interface ISignature {\n\tlabel:string;\n\tdocumentation?:string;\n\tparameters:IParameter[];\n}\n\nexport interface IParameterHints {\n\tcurrentSignature:number;\n\tcurrentParameter:number;\n\tsignatures:ISignature[];\n}\n\nexport interface IParameterHintsContribution {\n\ttriggerCharacters: string[];\n\texcludeTokens: string[];\n\tgetParameterHints: (resource: URI, position: EditorCommon.IPosition) => TPromise<IParameterHints>;\n}\n\n/**\n * Interface used to get parameter hints.\n */\nexport interface IParameterHintsSupport {\n\tgetParameterHintsTriggerCharacters(): string[];\n\tshouldTriggerParameterHints(context: ILineContext, offset: number): boolean;\n\tgetParameterHints(resource: URI, position: EditorCommon.IPosition, triggerCharacter?: string): TPromise<IParameterHints>;\n}\n\n\nexport interface IOccurence {\n\tkind?:string;\n\trange:EditorCommon.IRange;\n}\n\n/**\n * Interface used to find occurrences of a symbol\n */\nexport interface IOccurrencesSupport {\n\tfindOccurrences(resource:URI, position:EditorCommon.IPosition, strict?:boolean):TPromise<IOccurence[]>;\n}\n\n\n/**\n * Interface used to find declarations on a symbol\n */\nexport interface IReference {\n\tresource: URI;\n\trange: EditorCommon.IRange;\n}\n\n/**\n * Interface used to find references to a symbol\n */\nexport interface IReferenceSupport {\n\n\t/**\n\t * @returns true if on the given line (and its tokens) at the given\n\t * \toffset reference search can be invoked.\n\t */\n\tcanFindReferences(context:ILineContext, offset:number):boolean;\n\n\t/**\n\t * @returns a list of reference of the symbol at the position in the\n\t * \tgiven resource.\n\t */\n\tfindReferences(resource:URI, position:EditorCommon.IPosition, includeDeclaration:boolean):TPromise<IReference[]>;\n}\n\n/**\n * Interface used to find declarations on a symbol\n */\nexport interface IDeclarationSupport {\n\tcanFindDeclaration(context:ILineContext, offset:number):boolean;\n\tfindDeclaration(resource:URI, position:EditorCommon.IPosition):TPromise<IReference|IReference[]>;\n}\n\nexport interface ITypeDeclarationSupport {\n\tcanFindTypeDeclaration(context:ILineContext, offset:number):boolean;\n\tfindTypeDeclaration(resource:URI, position:EditorCommon.IPosition):TPromise<IReference>;\n}\n\n/**\n * Interface used to compute an outline\n */\nexport interface IOutlineEntry {\n\tlabel: string;\n\tcontainerLabel?: string;\n\ttype: string;\n\ticon?: string; // icon class or null to use the default images based on the type\n\trange: EditorCommon.IRange;\n\tchildren?: IOutlineEntry[];\n}\n\nexport interface IOutlineSupport {\n\tgetOutline(resource:URI):TPromise<IOutlineEntry[]>;\n\toutlineGroupLabel?: { [name: string]: string; };\n}\n\n/**\n * Interface used to compute a hierachry of logical ranges.\n */\nexport interface ILogicalSelectionEntry {\n\ttype:string;\n\trange:EditorCommon.IRange;\n}\nexport interface ILogicalSelectionSupport {\n\tgetRangesToPosition(resource:URI, position:EditorCommon.IPosition):TPromise<ILogicalSelectionEntry[]>;\n}\n\n/**\n * Interface used to format a model\n */\nexport interface IFormattingOptions {\n\ttabSize:number;\n\tinsertSpaces:boolean;\n}\n\n/**\n * Supports to format source code. There are three levels\n * on which formatting can be offered:\n * (1) format a document\n * (2) format a selectin\n * (3) format on keystroke\n */\nexport interface IFormattingSupport {\n\n\tformatDocument?: (resource: URI, options: IFormattingOptions) => TPromise<EditorCommon.ISingleEditOperation[]>;\n\n\tformatRange?: (resource: URI, range: EditorCommon.IRange, options: IFormattingOptions) => TPromise<EditorCommon.ISingleEditOperation[]>;\n\n\tautoFormatTriggerCharacters?: string[];\n\n\tformatAfterKeystroke?: (resource: URI, position: EditorCommon.IPosition, ch: string, options: IFormattingOptions) => TPromise<EditorCommon.ISingleEditOperation[]>;\n}\n\nexport interface IInplaceReplaceSupportResult {\n\tvalue: string;\n\trange:EditorCommon.IRange;\n}\n\n/**\n * Interface used to navigate with a value-set.\n */\nexport interface IInplaceReplaceSupport {\n\tnavigateValueSet(resource:URI, range:EditorCommon.IRange, up:boolean):TPromise<IInplaceReplaceSupportResult>;\n}\n\n\n/**\n * Interface used to compute the diff between two models.\n */\nexport interface IDiffSupport {\n\tcomputeDiff(original:URI, modified:URI, ignoreTrimWhitespace:boolean):TPromise<EditorCommon.ILineChange[]>;\n}\n\n\n/**\n * Interface used to compute the diff between a model and its original version.\n */\nexport interface IDirtyDiffSupport {\n\tcomputeDirtyDiff(resource:URI, ignoreTrimWhitespace:boolean):TPromise<EditorCommon.IChange[]>;\n}\n\n/**\n * Interface used to get output for a language that supports transformation (e.g. markdown -> html)\n */\nexport interface IEmitOutputSupport {\n\tgetEmitOutput(resource:URI):TPromise<IEmitOutput>;\n}\n\nexport interface IEmitOutput {\n\tfilename?:string;\n\tcontent:string;\n}\n\n/**\n * Interface used to detect links.\n */\nexport interface ILink {\n\n\trange: EditorCommon.IRange;\n\n\t/**\n\t * The url of the link.\n\t * The url should be absolute and will not get any special treatment.\n\t */\n\turl: string;\n\n\textraInlineClassName?: string;\n}\n\nexport interface ILinkSupport {\n\tcomputeLinks(resource:URI):TPromise<ILink[]>;\n}\n\n/**\n * Interface used to define a configurable editor mode.\n */\nexport interface IConfigurationSupport {\n\tconfigure(options:any):TPromise<boolean>;\n}\n\n\n\n\n/**\n * Interface used to support electric characters\n */\nexport interface IElectricAction {\n\t// Only one of the following properties should be defined:\n\n\t// The line will be indented at the same level of the line\n\t// which contains the matching given bracket type.\n\tmatchBracketType?:string;\n\n\t// The text will be appended after the electric character.\n\tappendText?:string;\n\n\t// The number of characters to advance the cursor, useful with appendText\n\tadvanceCount?:number;\n}\n\nexport enum IndentAction {\n\tNone,\n\tIndent,\n\tIndentOutdent,\n\tOutdent\n}\n\n/**\n * An action the editor executes when 'enter' is being pressed\n */\nexport interface IEnterAction {\n\tindentAction:IndentAction;\n\tappendText?:string;\n\tremoveText?:number;\n}\n\nexport interface IElectricCharacterSupport {\n\tgetElectricCharacters():string[];\n\t// Should return opening bracket type to match indentation with\n\tonElectricCharacter(context:ILineContext, offset:number):IElectricAction;\n\tonEnter(context:ILineContext, offset:number):IEnterAction;\n}\n\nexport interface IOnEnterSupport {\n\tonEnter(model:EditorCommon.ITokenizedModel, position: EditorCommon.IPosition): IEnterAction;\n}\n\n/**\n * Interface used to support insertion of mode specific comments.\n */\nexport interface ICommentsConfiguration {\n\tlineCommentTokens?:string[];\n\tblockCommentStartToken?:string;\n\tblockCommentEndToken?:string;\n}\nexport interface ICommentsSupport {\n\tgetCommentsConfiguration():ICommentsConfiguration;\n}\n\n\n\n/**\n * Interface used to support insertion of matching characters like brackets and qoutes.\n */\nexport interface IAutoClosingPair {\n\topen:string;\n\tclose:string;\n}\nexport interface ICharacterPairSupport {\n\tgetAutoClosingPairs():IAutoClosingPairConditional[];\n\tshouldAutoClosePair(character:string, context:ILineContext, offset:number):boolean;\n\tgetSurroundingPairs():IAutoClosingPair[];\n}\n\n/**\n * Interface used to support the classification of tokens.\n */\nexport interface ITokenTypeClassificationSupport {\n\tgetWordDefinition():RegExp;\n}\n\nexport interface IResourceEdit {\n\tresource: URI;\n\trange?: EditorCommon.IRange;\n\tnewText: string;\n}\n\nexport interface IRenameResult {\n\tcurrentName: string;\n\tedits: IResourceEdit[];\n\trejectReason?: string;\n}\n\n/**\n * Interface used to support renaming of symbols\n */\nexport interface IRenameSupport {\n\n\tfilter?: string[];\n\n\trename(resource: URI, position: EditorCommon.IPosition, newName: string): TPromise<IRenameResult>;\n}\n\nexport interface ICommand {\n\tid: string;\n\ttitle: string;\n\targuments?: any[];\n}\n\nexport interface ICodeLensSymbol {\n\trange: EditorCommon.IRange;\n\tid?: string;\n\tcommand?: ICommand;\n}\n\n/**\n * Interface used for the code lense support\n */\nexport interface ICodeLensSupport {\n\tfindCodeLensSymbols(resource: URI): TPromise<ICodeLensSymbol[]>;\n\tresolveCodeLensSymbol(resource: URI, symbol: ICodeLensSymbol): TPromise<ICodeLensSymbol>;\n}\n\nexport interface ITaskSummary {\n}\n\n/**\n * Interface to support building via a langauge service\n */\nexport interface ITaskSupport {\n\tbuild?():TPromise<ITaskSummary>;\n\trebuild?():TPromise<ITaskSummary>;\n\tclean?():TPromise<void>;\n}\n\n/**\n * Standard brackets used for auto indentation\n */\nexport interface IBracketPair {\n\ttokenType:string;\n\topen:string;\n\tclose:string;\n\tisElectric:boolean;\n}\n\n/**\n * Regular expression based brackets. These are always electric.\n */\nexport interface IRegexBracketPair {\n\topenTrigger?: string; // The character that will trigger the evaluation of 'open'.\n\topen: RegExp; // The definition of when an opening brace is detected. This regex is matched against the entire line upto, and including the last typed character (the trigger character).\n\tcloseComplete?: string; // How to complete a matching open brace. Matches from 'open' will be expanded, e.g. '</$1>'\n\tmatchCase?: boolean; // If set to true, the case of the string captured in 'open' will be detected an applied also to 'closeComplete'.\n\t\t\t\t\t\t// This is useful for cases like BEGIN/END or begin/end where the opening and closing phrases are unrelated.\n\t\t\t\t\t\t// For identical phrases, use the $1 replacement syntax above directly in closeComplete, as it will\n\t\t\t\t\t\t// include the proper casing from the captured string in 'open'.\n\t\t\t\t\t\t// Upper/Lower/Camel cases are detected. Camel case dection uses only the first two characters and assumes\n\t\t\t\t\t\t// that 'closeComplete' contains wors separated by spaces (e.g. 'End Loop')\n\n\tcloseTrigger?: string; // The character that will trigger the evaluation of 'close'.\n\tclose?: RegExp; // The definition of when a closing brace is detected. This regex is matched against the entire line upto, and including the last typed character (the trigger character).\n\ttokenType?: string; // The type of the token. Matches from 'open' or 'close' will be expanded, e.g. 'keyword.$1'.\n\t\t\t\t\t// Only used to auto-(un)indent a closing bracket.\n}\n\n/**\n * Definition of documentation comments (e.g. Javadoc/JSdoc)\n */\nexport interface IDocComment {\n\tscope: string; // What tokens should be used to detect a doc comment (e.g. 'comment.documentation').\n\topen: string; // The string that starts a doc comment (e.g. '/**')\n\tlineStart: string; // The string that appears at the start of each line, except the first and last (e.g. ' * ').\n\tclose?: string; // The string that appears on the last line and closes the doc comment (e.g. ' */').\n}\n\nexport interface IAutoClosingPairConditional extends IAutoClosingPair {\n\tnotIn?: string[];\n}\n\nexport interface ICharacterPairContribution {\n\tautoClosingPairs: IAutoClosingPairConditional[];\n\tsurroundingPairs?: IAutoClosingPair[];\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport Modes = require('vs/editor/common/modes');\n\nexport class AbstractState implements Modes.IState {\n\n\tprivate mode:Modes.IMode;\n\tprivate stateData:Modes.IState;\n\n\tconstructor(mode:Modes.IMode, stateData:Modes.IState = null) {\n\t\tthis.mode = mode;\n\t\tthis.stateData = stateData;\n\t}\n\n\tpublic getMode():Modes.IMode {\n\t\treturn this.mode;\n\t}\n\n\tpublic clone():Modes.IState {\n\t\tvar result:AbstractState = this.makeClone();\n\t\tresult.initializeFrom(this);\n\t\treturn result;\n\t}\n\n\tpublic makeClone():AbstractState {\n\t\tthrow new Error('Abstract Method');\n\t}\n\n\tpublic initializeFrom(other:AbstractState): void {\n\t\tthis.stateData = other.stateData !== null ? other.stateData.clone() : null;\n\t}\n\n\tpublic getStateData(): Modes.IState {\n\t\treturn this.stateData;\n\t}\n\n\tpublic setStateData(state:Modes.IState):void {\n\t\tthis.stateData = state;\n\t}\n\n\tpublic equals(other:Modes.IState):boolean {\n\t\tif (other === null || this.mode !== other.getMode()) {\n\t\t\treturn false;\n\t\t}\n\t\tif (other instanceof AbstractState) {\n\t\t\treturn AbstractState.safeEquals(this.stateData, other.stateData);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic tokenize(stream:Modes.IStream):Modes.ITokenizationResult {\n\t\tthrow new Error('Abstract Method');\n\t}\n\n\tpublic static safeEquals(a: Modes.IState, b: Modes.IState): boolean {\n\t\tif (a === null && b === null) {\n\t\t\treturn true;\n\t\t}\n\t\tif (a === null || b === null) {\n\t\t\treturn false;\n\t\t}\n\t\treturn a.equals(b);\n\t}\n\n\tpublic static safeClone(state: Modes.IState): Modes.IState {\n\t\tif (state) {\n\t\t\treturn state.clone();\n\t\t}\n\t\treturn null;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {IStream} from 'vs/editor/common/modes';\n\nexport class LineStream implements IStream {\n\n\tstatic STRING_TO_ARRAY_CACHE:{ [key:string]:boolean[]; } = {};\n\n\t/*protected*/ _source:string;\n\tprivate sourceLength:number;\n\t/*protected*/ _pos:number;\n\tprivate whitespace:string;\n\tprivate whitespaceArr:boolean[];\n\tprivate separators:string;\n\tprivate separatorsArr:boolean[];\n\tprivate tokenStart:number;\n\tprivate tokenEnd:number;\n\n\tconstructor(source:string) {\n\t\tthis._source = source;\n\t\tthis.sourceLength = source.length;\n\t\tthis._pos = 0;\n\t\tthis.whitespace = '\\t \\u00a0';\n\t\tthis.whitespaceArr = this.stringToArray(this.whitespace);\n\t\tthis.separators = '';\n\t\tthis.separatorsArr = this.stringToArray(this.separators);\n\t\tthis.tokenStart = -1;\n\t\tthis.tokenEnd = -1;\n\t}\n\n\tprivate stringToArray(str:string):boolean[] {\n\t\tif (!LineStream.STRING_TO_ARRAY_CACHE.hasOwnProperty(str)) {\n\t\t\tLineStream.STRING_TO_ARRAY_CACHE[str] = this.actualStringToArray(str);\n\t\t}\n\t\treturn LineStream.STRING_TO_ARRAY_CACHE[str];\n\t}\n\n\tprivate actualStringToArray(str:string):boolean[] {\n\t\tlet maxCharCode = 0;\n\t\tfor (let i = 0; i < str.length; i++) {\n\t\t\tmaxCharCode = Math.max(maxCharCode, str.charCodeAt(i));\n\t\t}\n\t\tlet r:boolean[] = [];\n\t\tfor (let i = 0; i <= maxCharCode; i++) {\n\t\t\tr[i] = false;\n\t\t}\n\t\tfor (let i = 0; i < str.length; i++) {\n\t\t\tr[str.charCodeAt(i)] = true;\n\t\t}\n\t\treturn r;\n\t}\n\n\tpublic pos():number {\n\t\treturn this._pos;\n\t}\n\n\tpublic eos() {\n\t\treturn this._pos >= this.sourceLength;\n\t}\n\n\tpublic peek():string {\n\t\t// Check EOS\n\t\tif (this._pos >= this.sourceLength) {\n\t\t\tthrow new Error('Stream is at the end');\n\t\t}\n\t\treturn this._source[this._pos];\n\t}\n\n\tpublic next():string {\n\t\t// Check EOS\n\t\tif (this._pos >= this.sourceLength) {\n\t\t\tthrow new Error('Stream is at the end');\n\t\t}\n\n\t\t// Reset peeked token\n\t\tthis.tokenStart = -1;\n\t\tthis.tokenEnd = -1;\n\n\t\treturn this._source[this._pos++];\n\t}\n\n\tpublic next2(): void {\n\t\t// Check EOS\n\t\tif (this._pos >= this.sourceLength) {\n\t\t\tthrow new Error('Stream is at the end');\n\t\t}\n\n\t\t// Reset peeked token\n\t\tthis.tokenStart = -1;\n\t\tthis.tokenEnd = -1;\n\n\t\tthis._pos++;\n\t}\n\n\tpublic advance(n: number): string {\n\t\tif (n === 0) {\n\t\t\treturn '';\n\t\t}\n\t\tvar oldPos = this._pos;\n\t\tthis._pos += n;\n\t\t// Reset peeked token\n\t\tthis.tokenStart = -1;\n\t\tthis.tokenEnd = -1;\n\t\treturn this._source.substring(oldPos, this._pos);\n\t}\n\n\tprivate _advance2(n: number): number {\n\t\tif (n === 0) {\n\t\t\treturn n;\n\t\t}\n\t\tthis._pos += n;\n\t\t// Reset peeked token\n\t\tthis.tokenStart = -1;\n\t\tthis.tokenEnd = -1;\n\t\treturn n;\n\t}\n\n\tpublic advanceToEOS():string {\n\t\tvar oldPos = this._pos;\n\t\tthis._pos = this.sourceLength;\n\t\tthis.resetPeekedToken();\n\t\treturn this._source.substring(oldPos, this._pos);\n\t}\n\n\tpublic goBack(n:number) {\n\t\tthis._pos -= n;\n\t\tthis.resetPeekedToken();\n\t}\n\n\tprivate createPeeker(condition:any):()=>number {\n\t\tif (condition instanceof RegExp) {\n\t\t\treturn () => {\n\t\t\t\tvar result = condition.exec(this._source.substr(this._pos));\n\t\t\t\tif (result === null) {\n\t\t\t\t\treturn 0;\n\t\t\t\t} else if (result.index !== 0) {\n\t\t\t\t\tthrow new Error('Regular expression must begin with the character \"^\"');\n\t\t\t\t}\n\t\t\t\treturn result[0].length;\n\t\t\t};\n\t\t} else if ((condition instanceof String || (typeof condition) === 'string') && condition) {\n\t\t\treturn () => {\n\t\t\t\tvar len = (<String> condition).length, match = this._pos + len <= this.sourceLength;\n\t\t\t\tfor (var i = 0; match && i < len; i++) {\n\t\t\t\t\tmatch = this._source.charCodeAt(this._pos + i) === (<String> condition).charCodeAt(i);\n\t\t\t\t}\n\t\t\t\treturn match ? len : 0;\n\t\t\t};\n\t\t}\n\t\tthrow new Error('Condition must be either a regular expression, function or a non-empty string');\n\t}\n\n\t// --- BEGIN `_advanceIfStringCaseInsensitive`\n\tprivate _advanceIfStringCaseInsensitive(condition:string): number {\n\t\tvar oldPos = this._pos,\n\t\t\tsource = this._source,\n\t\t\tlen = condition.length,\n\t\t\ti:number;\n\n\t\tif (len < 1 || oldPos + len > this.sourceLength) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (source.charAt(oldPos + i).toLowerCase() !== condition.charAt(i).toLowerCase()) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\n\t\treturn len;\n\t}\n\tpublic advanceIfStringCaseInsensitive(condition: string): string {\n\t\treturn this.advance(this._advanceIfStringCaseInsensitive(condition));\n\t}\n\tpublic advanceIfStringCaseInsensitive2(condition: string): number {\n\t\treturn this._advance2(this._advanceIfStringCaseInsensitive(condition));\n\t}\n\t// --- END\n\n\t// --- BEGIN `advanceIfString`\n\tprivate _advanceIfString(condition: string): number {\n\t\tvar oldPos = this._pos,\n\t\t\tsource = this._source,\n\t\t\tlen = condition.length,\n\t\t\ti:number;\n\n\t\tif (len < 1 || oldPos + len > this.sourceLength) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (source.charCodeAt(oldPos + i) !== condition.charCodeAt(i)) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\n\t\treturn len;\n\t}\n\tpublic advanceIfString(condition:string): string {\n\t\treturn this.advance(this._advanceIfString(condition));\n\t}\n\tpublic advanceIfString2(condition: string): number {\n\t\treturn this._advance2(this._advanceIfString(condition));\n\t}\n\t// --- END\n\n\t// --- BEGIN `advanceIfString`\n\tprivate _advanceIfCharCode(charCode:number): number {\n\t\tif (this._pos < this.sourceLength && this._source.charCodeAt(this._pos) === charCode) {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn 0;\n\t}\n\tpublic advanceIfCharCode(charCode: number): string {\n\t\treturn this.advance(this._advanceIfCharCode(charCode));\n\t}\n\tpublic advanceIfCharCode2(charCode: number): number {\n\t\treturn this._advance2(this._advanceIfCharCode(charCode));\n\t}\n\t// --- END\n\n\t// --- BEGIN `advanceIfRegExp`\n\tprivate _advanceIfRegExp(condition:RegExp): number {\n\t\tif (this._pos >= this.sourceLength) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (!condition.test(this._source.substr(this._pos))) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn RegExp.lastMatch.length;\n\t}\n\tpublic advanceIfRegExp(condition: RegExp): string {\n\t\treturn this.advance(this._advanceIfRegExp(condition));\n\t}\n\tpublic advanceIfRegExp2(condition: RegExp): number {\n\t\treturn this._advance2(this._advanceIfRegExp(condition));\n\t}\n\t// --- END\n\n\tprivate advanceLoop(condition:any, isWhile:boolean, including:boolean):string {\n\t\tif (this.eos()) {\n\t\t\treturn '';\n\t\t}\n\t\tvar peeker = this.createPeeker(condition);\n\t\tvar oldPos = this._pos;\n\t\tvar n = 0;\n\t\tvar f = null;\n\t\tif (isWhile) {\n\t\t\tf = (n) => {\n\t\t\t\treturn n > 0;\n\t\t\t};\n\t\t} else {\n\t\t\tf = (n) => {\n\t\t\t\treturn n === 0;\n\t\t\t};\n\t\t}\n\t\twhile (!this.eos() && f(n = peeker())) {\n\t\t\tif (n > 0) {\n\t\t\t\tthis.advance(n);\n\t\t\t} else {\n\t\t\t\tthis.next();\n\t\t\t}\n\t\t}\n\t\tif (including && !this.eos()) {\n\t\t\tthis.advance(n);\n\t\t}\n\t\treturn this._source.substring(oldPos, this._pos);\n\t}\n\n\tpublic advanceWhile(condition:any):string {\n\t\treturn this.advanceLoop(condition, true, false);\n\t}\n\n\tpublic advanceUntil(condition:any, including:boolean):string {\n\t\treturn this.advanceLoop(condition, false, including);\n\t}\n\n\t// --- BEGIN `advanceUntilString`\n\tprivate _advanceUntilString(condition: string, including: boolean): number {\n\t\tif (this.eos() || condition.length === 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar oldPos = this._pos;\n\t\tvar index = this._source.indexOf(condition, oldPos);\n\n\t\tif (index === -1) {\n\t\t\t// String was not found => advanced to `eos`\n\t\t\treturn (this.sourceLength - oldPos);\n\t\t}\n\n\t\tif (including) {\n\t\t\t// String was found => advance to include `condition`\n\t\t\treturn (index + condition.length - oldPos);\n\t\t}\n\n\t\t// String was found => advance right before `condition`\n\t\treturn (index - oldPos);\n\t}\n\tpublic advanceUntilString(condition: string, including: boolean): string {\n\t\treturn this.advance(this._advanceUntilString(condition, including));\n\t}\n\tpublic advanceUntilString2(condition: string, including: boolean): number {\n\t\treturn this._advance2(this._advanceUntilString(condition, including));\n\t}\n\t// --- END\n\n\tprivate resetPeekedToken() {\n\t\tthis.tokenStart = -1;\n\t\tthis.tokenEnd = -1;\n\t}\n\n\tpublic setTokenRules(separators:string, whitespace:string):void {\n\t\tif (this.separators !== separators || this.whitespace !== whitespace) {\n\t\t\tthis.separators = separators;\n\t\t\tthis.separatorsArr = this.stringToArray(this.separators);\n\t\t\tthis.whitespace = whitespace;\n\t\t\tthis.whitespaceArr = this.stringToArray(this.whitespace);\n\t\t\tthis.resetPeekedToken();\n\t\t}\n\t}\n\n\t// --- tokens\n\n\tpublic peekToken():string {\n\t\tif (this.tokenStart !== -1) {\n\t\t\treturn this._source.substring(this.tokenStart, this.tokenEnd);\n\t\t}\n\n\t\tvar\tsource = this._source,\n\t\t\tsourceLength = this.sourceLength,\n\t\t\twhitespaceArr = this.whitespaceArr,\n\t\t\tseparatorsArr = this.separatorsArr,\n\t\t\ttokenStart = this._pos;\n\n\t\t// Check EOS\n\t\tif (tokenStart >= sourceLength) {\n\t\t\tthrow new Error('Stream is at the end');\n\t\t}\n\n\t\t// Skip whitespace\n\t\twhile (whitespaceArr[source.charCodeAt(tokenStart)] && tokenStart < sourceLength) {\n\t\t\ttokenStart++;\n\t\t}\n\n\t\tvar tokenEnd = tokenStart;\n\t\t// If a separator is hit, it is a token\n\t\tif (separatorsArr[source.charCodeAt(tokenEnd)] && tokenEnd < sourceLength) {\n\t\t\ttokenEnd++;\n\t\t} else {\n\t\t\t// Advance until a separator or a whitespace is hit\n\t\t\twhile (!separatorsArr[source.charCodeAt(tokenEnd)] && !whitespaceArr[source.charCodeAt(tokenEnd)] && tokenEnd < sourceLength) {\n\t\t\t\ttokenEnd++;\n\t\t\t}\n\t\t}\n\n\t\t// Cache peeked token\n\t\tthis.tokenStart = tokenStart;\n\t\tthis.tokenEnd = tokenEnd;\n\n\t\treturn source.substring(tokenStart, tokenEnd);\n\t}\n\n\tpublic nextToken():string {\n\t\t// Check EOS\n\t\tif (this._pos >= this.sourceLength) {\n\t\t\tthrow new Error('Stream is at the end');\n\t\t}\n\n\t\t// Peek token if necessary\n\t\tvar result:string;\n\t\tif (this.tokenStart === -1)  {\n\t\t\tresult = this.peekToken();\n\t\t} else {\n\t\t\tresult = this._source.substring(this.tokenStart, this.tokenEnd);\n\t\t}\n\n\t\t// Advance to tokenEnd\n\t\tthis._pos = this.tokenEnd;\n\n\t\t// Reset peeked token\n\t\tthis.tokenStart = -1;\n\t\tthis.tokenEnd = -1;\n\n\t\treturn result;\n\t}\n\n\t// -- whitespace\n\n\tpublic peekWhitespace():string {\n\t\tvar\tsource = this._source,\n\t\t\tsourceLength = this.sourceLength,\n\t\t\twhitespaceArr = this.whitespaceArr,\n\t\t\tpeek = this._pos;\n\n\t\twhile (whitespaceArr[source.charCodeAt(peek)] && peek < sourceLength) {\n\t\t\tpeek++;\n\t\t}\n\t\treturn source.substring(this._pos, peek);\n\t}\n\n\t// --- BEGIN `advanceIfRegExp`\n\tprivate _skipWhitespace(): number {\n\t\tvar source = this._source,\n\t\t\tsourceLength = this.sourceLength,\n\t\t\twhitespaceArr = this.whitespaceArr,\n\t\t\toldPos = this._pos,\n\t\t\tpeek = this._pos;\n\n\t\twhile (whitespaceArr[source.charCodeAt(peek)] && peek < sourceLength) {\n\t\t\tpeek++;\n\t\t}\n\n\t\treturn (peek - oldPos);\n\t}\n\tpublic skipWhitespace(): string {\n\t\treturn this.advance(this._skipWhitespace());\n\t}\n\tpublic skipWhitespace2(): number {\n\t\treturn this._advance2(this._skipWhitespace());\n\t}\n\t// --- END\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport Modes = require('vs/editor/common/modes');\n\n/*\n * This module exports common types and functionality shared between\n * the Monarch compiler that compiles JSON to ILexer, and the Monarch\n * Tokenizer (that highlights at runtime)\n */\n\n/*\n * Type definitions to be used internally to Monarch.\n * Inside monarch we use fully typed definitions and compiled versions of the more abstract JSON descriptions.\n */\n\nexport interface ILexerMin {\n\tnoThrow: boolean;\n\tignoreCase: boolean;\n\tdisplayName: string;\n\tname: string;\n\tusesEmbedded: boolean;\n\tdefaultToken: string;\n\tstateNames: Object;\n}\n\nexport interface ILexer extends ILexerMin {\n\tmaxStack: number;\n\tstart: string;\n\tignoreCase: boolean;\n\tlineComment: string;\n\tblockCommentStart: string;\n\tblockCommentEnd: string;\n\ttokenPostfix: string;\n\tsuggestSupport: {\n\t\ttextualCompletions: boolean;\n\t\tdisableAutoTrigger: boolean;\n\t\ttriggerCharacters: string[];\n\t\tsnippets: Modes.ISuggestion[];\n\t};\n\n\ttokenizer: IRule[][];\n\tbrackets: IBracket[];\n\twordDefinition: RegExp;\n\tautoClosingPairs: Modes.IAutoClosingPairConditional[];\n\n\tstandardBrackets: Modes.IBracketPair[];\n\tenhancedBrackets: Modes.IRegexBracketPair[];\n\toutdentTriggers: string;\n}\n\nexport interface IAutoIndent {\n\tmatch: RegExp;\n\tmatchAfter: RegExp;\n}\n\nexport interface IAutoComplete {\n\ttriggers: string;\n\tmatch: RegExp;\n\tcomplete: string;\n}\n\nexport interface IBracket {\n\ttoken: string;\n\topen: string;\n\tclose: string;\n}\n\nexport interface IRule {\n\tregex: RegExp;\n\taction: IAction;\n\tmatchOnlyAtLineStart: boolean;\n\tname: string;\n}\n\nexport interface IAction {\n\t// an action is either a group of actions\n\tgroup?: IAction[];\n\n\t// or a function that returns a fresh action\n\ttest?: (id: string, matches: string[], state: string, eos: boolean) => IAction;\n\n\t// or it is a declarative action with a token value and various other attributes\n\ttoken?: string;\n\ttokenSubst?: boolean;\n\tnext?: string;\n\tnextEmbedded?: string;\n\tbracket?: Modes.Bracket;\n\tlog?: string;\n\tswitchTo?: string;\n\tgoBack?: number;\n\ttransform?: (states: string[]) => string[];\n}\n\nexport interface IBranch {\n\tname: string;\n\tvalue: IAction;\n\ttest: (id: string, matches: string[], state: string, eos: boolean) => boolean;\n}\n\n// Small helper functions\n\n/**\n * Is a string null, undefined, or empty?\n */\nexport function empty(s: string): boolean {\n\treturn (s ? false : true);\n}\n\n/**\n * Puts a string to lower case if 'ignoreCase' is set.\n */\nexport function fixCase(lexer: ILexerMin, str: string): string {\n\treturn (lexer.ignoreCase && str ? str.toLowerCase() : str);\n}\n\n/**\n * Ensures there are no bad characters in a CSS token class.\n */\nexport function sanitize(s: string) {\n\treturn s.replace(/[&<>'\"_]/g, '-'); // used on all output token CSS classes\n}\n\n// Logging\n\n/**\n * Logs a message.\n */\nexport function log(lexer: ILexerMin, msg: string) {\n\tconsole.log(`${lexer.name}: ${msg}`);\n}\n\n// Throwing errors\n\n/**\n * Throws error. May actually just log the error and continue.\n */\nexport function throwError(lexer: ILexerMin, msg: string) {\n\tthrow new Error(`${lexer.name}: ${msg}`);\n}\n\n// Helper functions for rule finding and substitution\n\n/**\n * substituteMatches is used on lexer strings and can substitutes predefined patterns:\n * \t\t$$  => $\n * \t\t$#  => id\n * \t\t$n  => matched entry n\n * \t\t@attr => contents of lexer[attr]\n *\n * See documentation for more info\n */\nexport function substituteMatches(lexer: ILexerMin, str: string, id: string, matches: string[], state: string) {\n\tvar re = /\\$((\\$)|(#)|(\\d\\d?)|[sS](\\d\\d?)|@(\\w+))/g;\n\tvar stateMatches: string[] = null;\n\treturn str.replace(re, function(full, sub?, dollar?, hash?, n?, s?, attr?, ofs?, total?) {\n\t\tif (!empty(dollar)) return '$'; // $$\n\t\tif (!empty(hash)) return fixCase(lexer, id);   // default $#\n\t\tif (!empty(n) && n < matches.length) return fixCase(lexer, matches[n]); // $n\n\t\tif (!empty(attr) && lexer && typeof (lexer[attr]) === 'string') return lexer[attr]; //@attribute\n\t\tif (stateMatches === null) { // split state on demand\n\t\t\tstateMatches = state.split('.');\n\t\t\tstateMatches.unshift(state);\n\t\t}\n\t\tif (!empty(s) && s < stateMatches.length) return fixCase(lexer, stateMatches[s]); //$Sn\n\t\treturn '';\n\t});\n}\n\n/**\n * Find the tokenizer rules for a specific state (i.e. next action)\n */\nexport function findRules(lexer: ILexer, state: string): IRule[] {\n\twhile (state && state.length > 0) {\n\t\tvar rules = lexer.tokenizer[state];\n\t\tif (rules) return rules;\n\n\t\tvar idx = state.lastIndexOf('.');\n\t\tif (idx < 0) state = null; // no further parent\n\t\telse state = state.substr(0, idx);\n\t}\n\treturn null;\n}\n\n/**\n * Is a certain state defined? In contrast to 'findRules' this works on a ILexerMin.\n * This is used during compilation where we may know the defined states\n * but not yet whether the corresponding rules are correct.\n */\nexport function stateExists(lexer: ILexerMin, state: string): boolean {\n\twhile (state && state.length > 0) {\n\t\tvar exist = lexer.stateNames[state];\n\t\tif (exist) return true;\n\n\t\tvar idx = state.lastIndexOf('.');\n\t\tif (idx < 0) state = null; // no further parent\n\t\telse state = state.substr(0, idx);\n\t}\n\treturn false;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\n/*\n * This module only exports 'compile' which compiles a JSON langauge definition\n * into a typed and checked ILexer definition.\n */\n\nimport MonarchTypes = require('vs/editor/common/modes/monarch/monarchTypes');\nimport MonarchCommonTypes = require('vs/editor/common/modes/monarch/monarchCommon');\nimport Modes = require('vs/editor/common/modes');\nimport Objects = require('vs/base/common/objects');\n\n/*\n * Type helpers\n *\n * Note: this is just for sanity checks on the JSON description which is\n * helpful for the programmer. No checks are done anymore once the lexer is\n * already 'compiled and checked'.\n *\n */\n\nfunction isArrayOf(elemType: (x: any) => boolean, obj: any): boolean {\n\tif (!obj) return false;\n\tif (!(Array.isArray(obj))) return false;\n\tvar idx: any;\n\tfor (idx in obj) {\n\t\tif (obj.hasOwnProperty(idx)) {\n\t\t\tif (!(elemType(obj[idx]))) return false;\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction bool(prop: any, def?: boolean, onerr?: () => void ): boolean {\n\tif (typeof (prop) === 'boolean') return prop;\n\tif (onerr && (prop || def === undefined)) onerr(); // type is wrong, or there is no default\n\treturn (def === undefined ? null : def);\n}\n\nfunction string(prop: any, def?: string, onerr?: () => void ): string {\n\tif (typeof (prop) === 'string') return prop;\n\tif (onerr && (prop || def === undefined)) onerr(); // type is wrong, or there is no default\n\treturn (def === undefined ? null : def);\n\n}\n\nfunction regExString(prop: any, def?: string, onerr?: () => void ): string {\n\t// for now just a string\n\treturn string(prop, def, onerr);\n}\n\nfunction number(prop: any, def?: number, onerr?: () => void ): number {\n\tif (typeof (prop) === 'number') return prop;\n\tif (onerr && (prop || def === undefined)) onerr(); // type is wrong, or there is no default\n\treturn (def === undefined ? null : def);\n}\n\nfunction stringArray(prop: any, def?: string[], onerr?: () => void ): string[] {\n\tif (isArrayOf(function(elem) { return (typeof (elem) === 'string'); }, prop)) return prop.slice(0);\n\tif (typeof (prop) === 'string') return [prop];\n\tif (onerr && (prop || def === undefined)) onerr(); // type is wrong, or there is no default\n\treturn (def === undefined ? null : def);\n}\n\n\n// Lexer helpers\n\n/**\n * Compiles a regular expression string, adding the 'i' flag if 'ignoreCase' is set.\n * Also replaces @\\w+ or sequences with the content of the specified attribute\n */\nfunction compileRegExp(lexer: MonarchCommonTypes.ILexerMin, str: string): RegExp {\n\tif (typeof (str) !== 'string') return null;\n\n\tvar n = 0;\n\twhile (str.indexOf('@') >= 0 && n < 5) { // at most 5 expansions\n\t\tn++;\n\t\tstr = str.replace(/@(\\w+)/g, function(s, attr?) {\n\t\t\tvar sub = '';\n\t\t\tif (typeof (lexer[attr]) === 'string') {\n\t\t\t\tsub = lexer[attr];\n\t\t\t}\n\t\t\telse if (lexer[attr] && lexer[attr] instanceof RegExp) {\n\t\t\t\tsub = lexer[attr].source;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (lexer[attr] === undefined) MonarchCommonTypes.throwError(lexer, 'language definition does not contain attribute \\'' + attr + '\\', used at: ' + str);\n\t\t\t\telse MonarchCommonTypes.throwError(lexer, 'attribute reference \\'' + attr + '\\' must be a string, used at: ' + str);\n\t\t\t}\n\t\t\treturn (MonarchCommonTypes.empty(sub) ? '' : '(?:' + sub + ')');\n\t\t});\n\t}\n\n\treturn new RegExp(str, (lexer.ignoreCase ? 'i' : ''));\n}\n\n/**\n * Compiles guard functions for case matches.\n * This compiles 'cases' attributes into efficient match functions.\n *\n */\nfunction selectScrutinee(id: string, matches: string[], state: string, num: number): string {\n\tif (num < 0) return id;\n\tif (num < matches.length) return matches[num];\n\tif (num >= 100) {\n\t\tnum = num - 100;\n\t\tvar parts = state.split('.');\n\t\tparts.unshift(state);\n\t\tif (num < parts.length) return parts[num];\n\t}\n\treturn null;\n}\n\nfunction createGuard(lexer: MonarchCommonTypes.ILexerMin, ruleName: string, tkey: string, val: MonarchCommonTypes.IAction): MonarchCommonTypes.IBranch {\n\t// get the scrutinee and pattern\n\tvar scrut = -1; // -1: $!, 0-99: $n, 100+n: $Sn\n\tvar oppat = tkey;\n\tvar matches: string[] = tkey.match(/^\\$(([sS]?)(\\d\\d?)|#)(.*)$/);\n\tif (matches) {\n\t\tif (matches[3]) { // if digits\n\t\t\tscrut = parseInt(matches[3]);\n\t\t\tif (matches[2]) scrut = scrut + 100; // if [sS] present\n\t\t}\n\t\toppat = matches[4];\n\t}\n\t// get operator\n\tvar op = '~';\n\tvar pat = oppat;\n\tif (!oppat || oppat.length === 0) {\n\t\top = '!=';\n\t\tpat = '';\n\t}\n\telse if (/^\\w*$/.test(pat)) {  // just a word\n\t\top = '==';\n\t}\n\telse {\n\t\tmatches = oppat.match(/^(@|!@|~|!~|==|!=)(.*)$/);\n\t\tif (matches) {\n\t\t\top = matches[1];\n\t\t\tpat = matches[2];\n\t\t}\n\t}\n\n\t// set the tester function\n\tvar tester: (s: string, id: string, matches: string[], state: string, eos: boolean) => boolean;\n\n\t// special case a regexp that matches just words\n\tif ((op === '~' || op === '!~') && /^(\\w|\\|)*$/.test(pat)) {\n\t\tvar inWords = Objects.createKeywordMatcher(pat.split('|'), lexer.ignoreCase);\n\t\ttester = function(s) { return (op === '~' ? inWords(s) : !inWords(s)); };\n\t}\n\telse if (op === '@' || op === '!@') {\n\t\tvar words = lexer[pat];\n\t\tif (!words) {\n\t\t\tMonarchCommonTypes.throwError(lexer, 'the @ match target \\'' + pat + '\\' is not defined, in rule: ' + ruleName);\n\t\t}\n\t\tif (!(isArrayOf(function(elem) { return (typeof (elem) === 'string'); }, words))) {\n\t\t\tMonarchCommonTypes.throwError(lexer, 'the @ match target \\'' + pat + '\\' must be an array of strings, in rule: ' + ruleName);\n\t\t}\n\t\tvar inWords = Objects.createKeywordMatcher(words, lexer.ignoreCase);\n\t\ttester = function(s) { return (op === '@' ? inWords(s) : !inWords(s)); };\n\t}\n\telse if (op === '~' || op === '!~') {\n\t\tif (pat.indexOf('$') < 0) {\n\t\t\t// precompile regular expression\n\t\t\tvar re = compileRegExp(lexer, '^' + pat + '$');\n\t\t\ttester = function(s) { return (op === '~' ? re.test(s) : !re.test(s)); };\n\t\t}\n\t\telse {\n\t\t\ttester = function(s, id, matches, state) {\n\t\t\t\tvar re = compileRegExp(lexer, '^' + MonarchCommonTypes.substituteMatches(lexer, pat, id, matches, state) + '$');\n\t\t\t\treturn re.test(s);\n\t\t\t};\n\t\t}\n\t}\n\telse { // if (op==='==' || op==='!=') {\n\t\tif (pat.indexOf('$') < 0) {\n\t\t\tvar patx = MonarchCommonTypes.fixCase(lexer, pat);\n\t\t\ttester = function(s) { return (op === '==' ? s === patx : s !== patx); };\n\t\t}\n\t\telse {\n\t\t\tvar patx = MonarchCommonTypes.fixCase(lexer, pat);\n\t\t\ttester = function(s, id, matches, state, eos) {\n\t\t\t\tvar patexp = MonarchCommonTypes.substituteMatches(lexer, patx, id, matches, state);\n\t\t\t\treturn (op === '==' ? s === patexp : s !== patexp);\n\t\t\t};\n\t\t}\n\t}\n\n\t// return the branch object\n\tif (scrut === -1) {\n\t\treturn {\n\t\t\tname: tkey, value: val, test: function(id, matches, state, eos) {\n\t\t\t\treturn tester(id, id, matches, state, eos);\n\t\t\t}\n\t\t};\n\t}\n\telse {\n\t\treturn {\n\t\t\tname: tkey, value: val, test: function(id, matches, state, eos) {\n\t\t\t\tvar scrutinee = selectScrutinee(id, matches, state, scrut);\n\t\t\t\treturn tester(!scrutinee ? '' : scrutinee, id, matches, state, eos);\n\t\t\t}\n\t\t};\n\t}\n}\n\n/**\n * Compiles an action: i.e. optimize regular expressions and case matches\n * and do many sanity checks.\n *\n * This is called only during compilation but if the lexer definition\n * contains user functions as actions (which is usually not allowed), then this\n * may be called during lexing. It is important therefore to compile common cases efficiently\n */\nfunction compileAction(lexer: MonarchCommonTypes.ILexerMin, ruleName: string, action: any): MonarchCommonTypes.IAction {\n\tif (!action) {\n\t\treturn { token: '' };\n\t}\n\telse if (typeof (action) === 'string') {\n\t\treturn action; // { token: action };\n\t}\n\telse if (action.token || action.token === '') {\n\t\tif (typeof (action.token) !== 'string') {\n\t\t\tMonarchCommonTypes.throwError(lexer, 'a \\'token\\' attribute must be of type string, in rule: ' + ruleName);\n\t\t\treturn { token: '' };\n\t\t}\n\t\telse {\n\t\t\t// only copy specific typed fields (only happens once during compile Lexer)\n\t\t\tvar newAction: MonarchCommonTypes.IAction = { token: action.token };\n\t\t\tif (action.token.indexOf('$') >= 0) {\n\t\t\t\tnewAction.tokenSubst = true;\n\t\t\t}\n\t\t\tif (typeof (action.bracket) === 'string') {\n\t\t\t\tif (action.bracket === '@open') newAction.bracket = Modes.Bracket.Open;\n\t\t\t\telse if (action.bracket === '@close') newAction.bracket = Modes.Bracket.Close;\n\t\t\t\telse {\n\t\t\t\t\tMonarchCommonTypes.throwError(lexer, 'a \\'bracket\\' attribute must be either \\'@open\\' or \\'@close\\', in rule: ' + ruleName);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (action.next) {\n\t\t\t\tif (typeof (action.next) !== 'string') {\n\t\t\t\t\tMonarchCommonTypes.throwError(lexer, 'the next state must be a string value in rule: ' + ruleName);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvar next: string = action.next;\n\t\t\t\t\tif (!/^(@pop|@push|@popall)$/.test(next)) {\n\t\t\t\t\t\tif (next[0] === '@') next = next.substr(1); // peel off starting @ sign\n\t\t\t\t\t\tif (next.indexOf('$') < 0) {  // no dollar substitution, we can check if the state exists\n\t\t\t\t\t\t\tif (!MonarchCommonTypes.stateExists(lexer, MonarchCommonTypes.substituteMatches(lexer, next, '', [], ''))) {\n\t\t\t\t\t\t\t\tMonarchCommonTypes.throwError(lexer, 'the next state \\'' + action.next + '\\' is not defined in rule: ' + ruleName);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tnewAction.next = next;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (typeof (action.goBack) === 'number') newAction.goBack = action.goBack;\n\t\t\tif (typeof (action.switchTo) === 'string') newAction.switchTo = action.switchTo;\n\t\t\tif (typeof (action.log) === 'string') newAction.log = action.log;\n\t\t\tif (typeof (action.nextEmbedded) === 'string') {\n\t\t\t\tnewAction.nextEmbedded = action.nextEmbedded;\n\t\t\t\tlexer.usesEmbedded = true;\n\t\t\t}\n\t\t\treturn newAction;\n\t\t}\n\t}\n\telse if (Array.isArray(action)) {\n\t\tvar results = [];\n\t\tvar idx: string;\n\t\tfor (idx in action) {\n\t\t\tif (action.hasOwnProperty(idx)) {\n\t\t\t\tresults[idx] = compileAction(lexer, ruleName, action[idx]);\n\t\t\t}\n\t\t}\n\t\treturn { group: results };\n\t}\n\telse if (action.cases) {\n\t\t// build an array of test cases\n\t\tvar cases: MonarchCommonTypes.IBranch[] = [];\n\n\t\t// for each case, push a test function and result value\n\t\tvar tkey: string;\n\t\tfor (tkey in action.cases) {\n\t\t\tif (action.cases.hasOwnProperty(tkey)) {\n\t\t\t\tvar val = compileAction(lexer, ruleName, action.cases[tkey]);\n\n\t\t\t\t// what kind of case\n\t\t\t\tif (tkey === '@default' || tkey === '@' || tkey === '') {\n\t\t\t\t\tcases.push({ test: null, value: val, name: tkey });\n\t\t\t\t}\n\t\t\t\telse if (tkey === '@eos') {\n\t\t\t\t\tcases.push({ test: function(id, matches, state, eos) { return eos; }, value: val, name: tkey });\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcases.push(createGuard(lexer, ruleName, tkey, val));  // call separate function to avoid local variable capture\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// create a matching function\n\t\tvar def = lexer.defaultToken;\n\t\treturn {\n\t\t\ttest: function(id, matches, state, eos) {\n\t\t\t\tvar idx: string;\n\t\t\t\tfor (idx in cases) {\n\t\t\t\t\tif (cases.hasOwnProperty(idx)) {\n\t\t\t\t\t\tvar didmatch = (!cases[idx].test || cases[idx].test(id, matches, state, eos));\n\t\t\t\t\t\tif (didmatch) {\n\t\t\t\t\t\t\treturn cases[idx].value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn def;\n\t\t\t}\n\t\t};\n\t}\n\telse {\n\t\tMonarchCommonTypes.throwError(lexer, 'an action must be a string, an object with a \\'token\\' or \\'cases\\' attribute, or an array of actions; in rule: ' + ruleName);\n\t\treturn '';\n\t}\n}\n\n/**\n * Helper class for creating matching rules\n */\nclass Rule implements MonarchCommonTypes.IRule {\n\tpublic regex: RegExp = new RegExp('');\n\tpublic action: MonarchCommonTypes.IAction = { token: '' };\n\tpublic matchOnlyAtLineStart: boolean = false;\n\tpublic name: string = '';\n\n\tconstructor(name: string) {\n\t\tthis.name = name;\n\t}\n\n\tpublic setRegex(lexer: MonarchCommonTypes.ILexerMin, re: string);\n\tpublic setRegex(lexer: MonarchCommonTypes.ILexerMin, re: RegExp);\n\tpublic setRegex(lexer: MonarchCommonTypes.ILexerMin, re: any) {\n\t\tvar sregex: string;\n\t\tif (typeof (re) === 'string') {\n\t\t\tsregex = re;\n\t\t}\n\t\telse if (re instanceof RegExp) {\n\t\t\tsregex = (<RegExp>re).source;\n\t\t}\n\t\telse {\n\t\t\tMonarchCommonTypes.throwError(lexer, 'rules must start with a match string or regular expression: ' + this.name)\n\t\t}\n\n\t\tthis.matchOnlyAtLineStart = (sregex.length > 0 && sregex[0] === '^');\n\t\tthis.name = this.name + ': ' + sregex;\n\t\tthis.regex = compileRegExp(lexer, '^(?:' + (this.matchOnlyAtLineStart ? sregex.substr(1) : sregex) + ')');\n\t}\n\n\tpublic setAction(lexer: MonarchCommonTypes.ILexerMin, act: MonarchCommonTypes.IAction) {\n\t\tthis.action = compileAction(lexer, this.name, act);\n\t}\n}\n\n/**\n * Compiles a json description function into json where all regular expressions,\n * case matches etc, are compiled and all include rules are expanded.\n * We also compile the bracket definitions, supply defaults, and do many sanity checks.\n * If the 'jsonStrict' parameter is 'false', we allow at certain locations\n * regular expression objects and functions that get called during lexing.\n * (Currently we have no samples that need this so perhaps we should always have\n * jsonStrict to true).\n */\nexport function compile(json: MonarchTypes.ILanguage): MonarchCommonTypes.ILexer {\n\tif (!json || typeof (json) !== 'object') {\n\t\tthrow new Error('Monarch: expecting a language definition object');\n\t}\n\n\t// Get names\n\tif (typeof (json.name) !== 'string') {\n\t\tthrow new Error('Monarch: a language definition must include a string \\'name\\' attribute');\n\t}\n\n\t// Create our lexer\n\tvar lexer: MonarchCommonTypes.ILexer = <MonarchCommonTypes.ILexer>{};\n\tlexer.name = json.name;\n\tlexer.displayName = string(json.displayName, lexer.name);\n\tlexer.noThrow = false; // raise exceptions during compilation\n\tlexer.maxStack = 100;\n\n\t// Set standard fields: be defensive about types\n\tlexer.start = string(json.start);\n\tlexer.ignoreCase = bool(json.ignoreCase, false);\n\n\tlexer.lineComment = string(json.lineComment, '//');\n\tlexer.blockCommentStart = string(json.blockCommentStart, '/*');\n\tlexer.blockCommentEnd = string(json.blockCommentEnd, '*/');\n\tlexer.tokenPostfix = string(json.tokenPostfix, '.' + lexer.name);\n\tlexer.defaultToken = string(json.defaultToken, 'source', function () { MonarchCommonTypes.throwError(lexer, 'the \\'defaultToken\\' must be a string'); });\n\n\tlexer.usesEmbedded = false; // becomes true if we find a nextEmbedded action\n\tlexer.wordDefinition = json.wordDefinition || undefined;\n\n\t// COMPAT: with earlier monarch versions\n\tif (!lexer.lineComment && (<any>json).lineComments) {\n\t\tif (typeof ((<any>json).lineComments) === 'string') {\n\t\t\tlexer.lineComment = (<any>json).lineComments;\n\t\t}\n\t\telse if (typeof ((<any>json).lineComments[0]) === 'string') {\n\t\t\tlexer.lineComment = (<any>json).lineComments[0];\n\t\t}\n\t}\n\n\tlexer.suggestSupport = {\n\t\ttextualCompletions: true,\n\t\tdisableAutoTrigger: false,\n\t\ttriggerCharacters: [],\n\t\tsnippets: []\n\t};\n\tif (typeof (<any>json).suggestSupport !== 'undefined') {\n\t\tvar suggestSupport = (<any>json).suggestSupport;\n\n\t\tif (Array.isArray(suggestSupport.snippets)) {\n\t\t\tvar _snippets: any[] = suggestSupport.snippets;\n\t\t\tfor (var i = 0, len = _snippets.length; i < len; i++) {\n\t\t\t\tif (typeof _snippets[i] === 'string') {\n\t\t\t\t\tlexer.suggestSupport.snippets.push({\n\t\t\t\t\t\ttype: 'snippet',\n\t\t\t\t\t\tlabel: _snippets[i],\n\t\t\t\t\t\tcodeSnippet: _snippets[i]\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tlexer.suggestSupport.snippets.push(_snippets[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (Array.isArray(suggestSupport.triggerCharacters)) {\n\t\t\tlexer.suggestSupport.triggerCharacters = suggestSupport.triggerCharacters;\n\t\t}\n\n\t\tif (typeof suggestSupport.textualCompletions !== 'undefined') {\n\t\t\tlexer.suggestSupport.textualCompletions = suggestSupport.textualCompletions;\n\t\t}\n\n\t\tif (typeof suggestSupport.disableAutoTrigger !== 'undefined') {\n\t\t\tlexer.suggestSupport.disableAutoTrigger = suggestSupport.disableAutoTrigger;\n\t\t}\n\t}\n\n\t// For calling compileAction later on\n\tvar lexerMin: MonarchCommonTypes.ILexerMin = <any>json;\n\tlexerMin.name = lexer.name;\n\tlexerMin.displayName = lexer.displayName;\n\tlexerMin.ignoreCase = lexer.ignoreCase;\n\tlexerMin.noThrow = lexer.noThrow;\n\tlexerMin.usesEmbedded = lexer.usesEmbedded;\n\tlexerMin.stateNames = json.tokenizer;\n\tlexerMin.defaultToken = lexer.defaultToken;\n\n\n\t// Compile an array of rules into newrules where RegExp objects are created.\n\tfunction addRules(state: string, newrules: MonarchCommonTypes.IRule[], rules: any[]) {\n\t\tvar idx: string;\n\t\tfor (idx in rules) {\n\t\t\tif (rules.hasOwnProperty(idx)) {\n\t\t\t\tvar rule = rules[idx];\n\t\t\t\tvar include = rule.include;\n\t\t\t\tif (include) {\n\t\t\t\t\tif (typeof (include) !== 'string') {\n\t\t\t\t\t\tMonarchCommonTypes.throwError(lexer, 'an \\'include\\' attribute must be a string at: ' + state);\n\t\t\t\t\t}\n\t\t\t\t\tif (include[0] === '@') include = include.substr(1); // peel off starting @\n\t\t\t\t\tif (!json.tokenizer[include]) {\n\t\t\t\t\t\tMonarchCommonTypes.throwError(lexer, 'include target \\'' + include + '\\' is not defined at: ' + state);\n\t\t\t\t\t}\n\t\t\t\t\taddRules(state + '.' + include, newrules, json.tokenizer[include]);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvar newrule = new Rule(state);\n\n\n\t\t\t\t\t// Set up new rule attributes\n\t\t\t\t\tif (Array.isArray(rule) && rule.length >= 1 && rule.length <= 3) {\n\t\t\t\t\t\tnewrule.setRegex(lexerMin, rule[0]);\n\t\t\t\t\t\tif (rule.length >= 3) {\n\t\t\t\t\t\t\tif (typeof (rule[1]) === 'string') {\n\t\t\t\t\t\t\t\tnewrule.setAction(lexerMin, { token: rule[1], next: rule[2] });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (typeof (rule[1]) === 'object') {\n\t\t\t\t\t\t\t\tvar rule1 = rule[1];\n\t\t\t\t\t\t\t\trule1.next = rule[2];\n\t\t\t\t\t\t\t\tnewrule.setAction(lexerMin, rule1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tMonarchCommonTypes.throwError(lexer, 'a next state as the last element of a rule can only be given if the action is either an object or a string, at: ' + state);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tnewrule.setAction(lexerMin, rule[1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (!rule.regex) {\n\t\t\t\t\t\t\tMonarchCommonTypes.throwError(lexer, 'a rule must either be an array, or an object with a \\'regex\\' or \\'include\\' field at: ' + state);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (rule.name) newrule.name = string(rule.name);\n\t\t\t\t\t\tif (rule.matchOnlyAtStart) newrule.matchOnlyAtLineStart = bool(rule.matchOnlyAtLineStart);\n\t\t\t\t\t\tnewrule.setRegex(lexerMin, rule.regex);\n\t\t\t\t\t\tnewrule.setAction(lexerMin, rule.action);\n\t\t\t\t\t}\n\n\t\t\t\t\tnewrules.push(newrule);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// compile the tokenizer rules\n\tif (!json.tokenizer || typeof (json.tokenizer) !== 'object') {\n\t\tMonarchCommonTypes.throwError(lexer, 'a language definition must define the \\'tokenizer\\' attribute as an object');\n\t}\n\n\tlexer.tokenizer = [];\n\tvar key: string;\n\tfor (key in json.tokenizer) {\n\t\tif (json.tokenizer.hasOwnProperty(key)) {\n\t\t\tif (!lexer.start) lexer.start = key;\n\n\t\t\tvar rules = json.tokenizer[key];\n\t\t\tlexer.tokenizer[key] = new Array();\n\t\t\taddRules('tokenizer.' + key, lexer.tokenizer[key], rules);\n\t\t}\n\t}\n\tlexer.usesEmbedded = lexerMin.usesEmbedded;  // can be set during compileAction\n\n\t// Set simple brackets\n\tif (json.brackets) {\n\t\tif (!(Array.isArray(<any>json.brackets))) {\n\t\t\tMonarchCommonTypes.throwError(lexer, 'the \\'brackets\\' attribute must be defined as an array');\n\t\t}\n\t}\n\telse {\n\t\tjson.brackets = [\n\t\t\t{ open: '{', close: '}', token: 'delimiter.curly' },\n\t\t\t{ open: '[', close: ']', token: 'delimiter.square' },\n\t\t\t{ open: '(', close: ')', token: 'delimiter.parenthesis' },\n\t\t\t{ open: '<', close: '>', token: 'delimiter.angle' }];\n\t}\n\tvar brackets : MonarchTypes.ILanguageBracket[] = [];\n\tfor (var bracketIdx in json.brackets) {\n\t\tif (json.brackets.hasOwnProperty(bracketIdx)) {\n\t\t\tvar desc = <any> json.brackets[bracketIdx];\n\t\t\tif (desc && Array.isArray(desc) && desc.length === 3) {\n\t\t\t\tdesc = { token: desc[2], open: desc[0], close: desc[1] };\n\t\t\t}\n\t\t\tif (desc.open === desc.close) {\n\t\t\t\tMonarchCommonTypes.throwError(lexer, 'open and close brackets in a \\'brackets\\' attribute must be different: ' + desc.open +\n\t\t\t\t\t'\\n hint: use the \\'bracket\\' attribute if matching on equal brackets is required.');\n\t\t\t}\n\t\t\tif (typeof (desc.open) === 'string' && typeof (desc.token) === 'string') {\n\t\t\t\tbrackets.push({\n\t\t\t\t\ttoken: string(desc.token) + lexer.tokenPostfix\n\t\t\t\t\t, open: MonarchCommonTypes.fixCase(lexer, string(desc.open))\n\t\t\t\t\t, close: MonarchCommonTypes.fixCase(lexer, string(desc.close))\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tMonarchCommonTypes.throwError(lexer, 'every element in the \\'brackets\\' array must be a \\'{open,close,token}\\' object or array');\n\t\t\t}\n\t\t}\n\t}\n\tlexer.brackets = brackets;\n\n\t// Set default auto closing pairs\n\tvar autoClosingPairs: any/*string[][]*/;\n\tif (json.autoClosingPairs) {\n\t\tif (!(Array.isArray(<any>json.autoClosingPairs))) {\n\t\t\tMonarchCommonTypes.throwError(lexer, 'the \\'autoClosingPairs\\' attribute must be an array of string pairs (as arrays)');\n\t\t}\n\t\tautoClosingPairs = json.autoClosingPairs.slice(0);\n\t}\n\telse {\n\t\tautoClosingPairs = [['\"', '\"'], ['\\'', '\\''], ['@brackets']];\n\t}\n\n\t// set auto closing pairs\n\tlexer.autoClosingPairs = [];\n\tif (autoClosingPairs) {\n\t\tfor (var autoClosingPairIdx in autoClosingPairs) {\n\t\t\tif (autoClosingPairs.hasOwnProperty(autoClosingPairIdx)) {\n\t\t\t\tvar pair = autoClosingPairs[autoClosingPairIdx];\n\t\t\t\tvar openClose: Modes.IAutoClosingPairConditional;\n\t\t\t\tif (pair === '@brackets' || pair[0] === '@brackets') {\n\t\t\t\t\tvar bidx: string;\n\t\t\t\t\tfor (bidx in brackets) {\n\t\t\t\t\t\tif (brackets.hasOwnProperty(bidx)) {\n\t\t\t\t\t\t\tif (brackets[bidx].open && brackets[bidx].open.length === 1 &&\n\t\t\t\t\t\t\t\tbrackets[bidx].close && brackets[bidx].close.length === 1) {\n\t\t\t\t\t\t\t\topenClose = { open: brackets[bidx].open, close: brackets[bidx].close, notIn:['string', 'comment'] };\n\t\t\t\t\t\t\t\tlexer.autoClosingPairs.push(openClose);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (Array.isArray(pair) && pair.length === 2 &&\n\t\t\t\t\ttypeof (pair[0]) === 'string' && pair[0].length === 1 &&\n\t\t\t\t\ttypeof (pair[1]) === 'string' && pair[1].length === 1) {\n\t\t\t\t\topenClose = { open: MonarchCommonTypes.fixCase(lexer, pair[0]), close: MonarchCommonTypes.fixCase(lexer, pair[1]), notIn:['string', 'comment'] };\n\t\t\t\t\tlexer.autoClosingPairs.push(openClose);\n\t\t\t\t}\n\t\t\t\telse if (typeof (pair.open) === 'string' && pair.open.length === 1 &&\n\t\t\t\t\ttypeof (pair.close) === 'string' && pair.close.length === 1) {\n\t\t\t\t\topenClose = { open: MonarchCommonTypes.fixCase(lexer, pair.open[0]), close: MonarchCommonTypes.fixCase(lexer, pair.close[0]), notIn:['string', 'comment'] };\n\t\t\t\t\tlexer.autoClosingPairs.push(openClose);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tMonarchCommonTypes.throwError(lexer, 'every element in an \\'autoClosingPairs\\' array must be a pair of 1 character strings, or a \\'@brackets\\' directive');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Set enhanced brackets\n\tvar enhancedBrackets : Modes.IRegexBracketPair[] = [];\n\tif (json.enhancedBrackets) {\n\t\tif (!(Array.isArray(<any>json.enhancedBrackets))) {\n\t\t\tMonarchCommonTypes.throwError(lexer, 'the \\'enhancedBrackets\\' attribute must be defined as an array');\n\t\t}\n\n\t\tfor (var bracketIdx in json.enhancedBrackets) {\n\t\t\tif (json.enhancedBrackets.hasOwnProperty(bracketIdx)) {\n\t\t\t\tvar desc = <any> json.enhancedBrackets[bracketIdx];\n\t\t\t\tif (desc.hasOwnProperty('openTrigger') && typeof (desc.openTrigger) !== 'string') {\n\t\t\t\t\tMonarchCommonTypes.throwError(lexer, 'openTrigger in the \\'enhancedBrackets\\' array must be a string');\n\t\t\t\t}\n\t\t\t\tif (desc.hasOwnProperty('open') && !(desc.open instanceof RegExp)) {\n\t\t\t\t\tMonarchCommonTypes.throwError(lexer, 'open in the \\'enhancedBrackets\\' array must be a regex');\n\t\t\t\t}\n\t\t\t\tif (desc.hasOwnProperty('closeComplete') && typeof (desc.closeComplete) !== 'string') {\n\t\t\t\t\tMonarchCommonTypes.throwError(lexer, 'closeComplete in the \\'enhancedBrackets\\' array must be a string');\n\t\t\t\t}\n\t\t\t\tif (desc.hasOwnProperty('matchCase') && typeof (desc.matchCase) !== 'boolean') {\n\t\t\t\t\tMonarchCommonTypes.throwError(lexer, 'matchCase in the \\'enhancedBrackets\\' array must be a boolean');\n\t\t\t\t}\n\t\t\t\tif (desc.hasOwnProperty('closeTrigger') && typeof (desc.closeTrigger) !== 'string') {\n\t\t\t\t\tMonarchCommonTypes.throwError(lexer, 'closeTrigger in the \\'enhancedBrackets\\' array must be a string');\n\t\t\t\t}\n\t\t\t\tif (desc.hasOwnProperty('close') && !(desc.close instanceof RegExp)) {\n\t\t\t\t\tMonarchCommonTypes.throwError(lexer, 'close in the \\'enhancedBrackets\\' array must be a regex');\n\t\t\t\t}\n\t\t\t\tif (desc.hasOwnProperty('tokenType')) {\n\t\t\t\t\tif (typeof (desc.tokenType) !== 'string') {\n\t\t\t\t\t\tMonarchCommonTypes.throwError(lexer, 'tokenType in the \\'enhancedBrackets\\' array must be a string');\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tdesc.tokenType += lexer.tokenPostfix;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tenhancedBrackets.push(desc);\n\t\t\t}\n\t\t}\n\t}\n\tlexer.enhancedBrackets = enhancedBrackets;\n\n\tvar standardBrackets: Modes.IBracketPair[] = [];\n\tfor (var i = 0; i < brackets.length; ++i) {\n\t\tstandardBrackets.push({\n\t\t\ttokenType: brackets[i].token,\n\t\t\topen: brackets[i].open,\n\t\t\tclose:brackets[i].close,\n\t\t\tisElectric: true\n\t\t});\n\t}\n\tlexer.standardBrackets = standardBrackets;\n\n\tlexer.outdentTriggers = string(json.outdentTriggers, '');\n\n\t// Disable throw so the syntax highlighter goes, no matter what\n\tlexer.noThrow = true;\n\treturn lexer;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport Modes = require('vs/editor/common/modes');\nimport EditorCommon = require('vs/editor/common/editorCommon');\n\nexport class NullState implements Modes.IState {\n\n\tprivate mode: Modes.IMode;\n\tprivate stateData: Modes.IState;\n\n\tconstructor(mode: Modes.IMode, stateData: Modes.IState) {\n\t\tthis.mode = mode;\n\t\tthis.stateData = stateData;\n\t}\n\n\tpublic clone(): Modes.IState {\n\t\tvar stateDataClone:Modes.IState = (this.stateData ? this.stateData.clone() : null);\n\t\treturn new NullState(this.mode, stateDataClone);\n\t}\n\n\tpublic equals(other:Modes.IState): boolean {\n\t\tif (this.mode !== other.getMode()) {\n\t\t\treturn false;\n\t\t}\n\t\tvar otherStateData = other.getStateData();\n\t\tif (!this.stateData && !otherStateData) {\n\t\t\treturn true;\n\t\t}\n\t\tif (this.stateData && otherStateData) {\n\t\t\treturn this.stateData.equals(otherStateData);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic getMode(): Modes.IMode {\n\t\treturn this.mode;\n\t}\n\n\tpublic tokenize(stream:Modes.IStream):Modes.ITokenizationResult {\n\t\tstream.advanceToEOS();\n\t\treturn { type:'' };\n\t}\n\n\tpublic getStateData(): Modes.IState {\n\t\treturn this.stateData;\n\t}\n\n\tpublic setStateData(stateData:Modes.IState):void {\n\t\tthis.stateData = stateData;\n\t}\n}\n\nexport class NullMode implements Modes.IMode {\n\n\t/**\n\t * Create a word definition regular expression based on default word separators.\n\t * Optionally provide allowed separators that should be included in words.\n\t *\n\t * The default would look like this:\n\t * /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\n\t */\n\tpublic static createWordRegExp(allowInWords:string = ''): RegExp {\n\t\tvar usualSeparators = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\n\t\tvar source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\n\t\tfor (var i = 0; i < usualSeparators.length; i++) {\n\t\t\tif (allowInWords.indexOf(usualSeparators[i]) >= 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tsource += '\\\\' + usualSeparators[i];\n\t\t}\n\t\tsource += '\\\\s]+)';\n\t\treturn new RegExp(source, 'g');\n\t}\n\n\t// catches numbers (including floating numbers) in the first group, and alphanum in the second\n\tstatic DEFAULT_WORD_REGEXP = NullMode.createWordRegExp();\n\n\tpublic static ID = 'vs.editor.modes.nullMode';\n\n\tpublic tokenTypeClassificationSupport: Modes.ITokenTypeClassificationSupport;\n\n\tconstructor() {\n\t\tthis.tokenTypeClassificationSupport = this;\n\t}\n\n\tpublic getId():string {\n\t\treturn NullMode.ID;\n\t}\n\n\tpublic toSimplifiedMode(): Modes.IMode {\n\t\treturn this;\n\t}\n\n\tpublic getWordDefinition():RegExp {\n\t\treturn NullMode.DEFAULT_WORD_REGEXP;\n\t}\n}\n\nexport function nullTokenize(mode: Modes.IMode, buffer:string, state: Modes.IState, deltaOffset:number = 0, stopAtOffset?:number): Modes.ILineTokens {\n\tvar tokens:Modes.IToken[] = [\n\t\t{\n\t\t\tstartIndex: deltaOffset,\n\t\t\ttype: '',\n\t\t\tbracket: Modes.Bracket.None\n\t\t}\n\t];\n\n\tvar modeTransitions:Modes.IModeTransition[] = [\n\t\t{\n\t\t\tstartIndex: deltaOffset,\n\t\t\tmode: mode\n\t\t}\n\t];\n\n\treturn {\n\t\ttokens: tokens,\n\t\tactualStopOffset: deltaOffset + buffer.length,\n\t\tendState: state,\n\t\tmodeTransitions: modeTransitions\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nexport interface IPrefixSumIndexOfResult {\n\tindex: number;\n\tremainder: number;\n}\n\nexport class PrefixSumComputer {\n\n\t/**\n\t * values[i] is the value at index i\n\t */\n\tprivate values:number[];\n\n\t/**\n\t * prefixSum[i] = SUM(heights[j]), 0 <= j <= i\n\t */\n\tprivate prefixSum:number[];\n\n\t/**\n\t * prefixSum[i], 0 <= i <= prefixSumValidIndex can be trusted\n\t */\n\tprivate prefixSumValidIndex:number;\n\n\tconstructor(values:number[]) {\n\t\tthis.values = values;\n\t\tthis.prefixSum = [];\n\t\tfor (var i = 0, len = this.values.length; i < len; i++) {\n\t\t\tthis.prefixSum[i] = 0;\n\t\t}\n\t\tthis.prefixSumValidIndex = -1;\n\t}\n\n\tpublic getCount(): number {\n\t\treturn this.values.length;\n\t}\n\n\tpublic insertValue(insertIndex:number, value:number): void {\n\t\tthis.values.splice(insertIndex, 0, value);\n\t\tthis.prefixSum.splice(insertIndex, 0, 0);\n\t\tif (insertIndex - 1 < this.prefixSumValidIndex) {\n\t\t\tthis.prefixSumValidIndex = insertIndex - 1;\n\t\t}\n\t}\n\n\tpublic insertValues(insertIndex: number, values: number[]): void {\n\t\tif (values.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.values = this.values.slice(0, insertIndex).concat(values).concat(this.values.slice(insertIndex));\n\t\tthis.prefixSum = this.prefixSum.slice(0, insertIndex).concat(PrefixSumComputer._zeroArray(values.length)).concat(this.prefixSum.slice(insertIndex));\n\n\t\tif (insertIndex - 1 < this.prefixSumValidIndex) {\n\t\t\tthis.prefixSumValidIndex = insertIndex - 1;\n\t\t}\n\t}\n\n\tprivate static _zeroArray(count: number): number[] {\n\t\tvar r: number[] = new Array<number>(count);\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tr[i] = 0;\n\t\t}\n\t\treturn r;\n\t}\n\n\tpublic changeValue(index:number, value:number): void {\n\t\tif (this.values[index] === value) {\n\t\t\treturn;\n\t\t}\n\t\tthis.values[index] = value;\n\t\tif (index - 1 < this.prefixSumValidIndex) {\n\t\t\tthis.prefixSumValidIndex = index - 1;\n\t\t}\n\t}\n\n\tpublic removeValues(startIndex:number, cnt:number): void {\n\t\tthis.values.splice(startIndex, cnt);\n\t\tthis.prefixSum.splice(startIndex, cnt);\n\t\tif (startIndex - 1 < this.prefixSumValidIndex) {\n\t\t\tthis.prefixSumValidIndex = startIndex - 1;\n\t\t}\n\t}\n\n\tpublic getTotalValue(): number {\n\t\tif (this.values.length === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn this.getAccumulatedValue(this.values.length - 1);\n\t}\n\n\tpublic getAccumulatedValue(index:number): number {\n\t\tif (index < 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (index <= this.prefixSumValidIndex) {\n\t\t\treturn this.prefixSum[index];\n\t\t}\n\n\t\tvar startIndex = this.prefixSumValidIndex + 1;\n\t\tif (startIndex === 0) {\n\t\t\tthis.prefixSum[0] = this.values[0];\n\t\t\tstartIndex++;\n\t\t}\n\n\t\tif (index >= this.values.length) {\n\t\t\tindex = this.values.length - 1;\n\t\t}\n\n\t\tfor (var i = startIndex; i <= index; i++) {\n\t\t\tthis.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\n\t\t}\n\t\tthis.prefixSumValidIndex = Math.max(this.prefixSumValidIndex, index);\n\t\treturn this.prefixSum[index];\n\t}\n\n\tpublic getIndexOf(accumulatedValue:number, result:IPrefixSumIndexOfResult): void {\n\t\tvar low = 0,\n\t\t\thigh = this.values.length - 1,\n\t\t\tmid:number,\n\t\t\tmidStart:number,\n\t\t\tmidStop:number;\n\n\t\twhile (low <= high) {\n\t\t\tmid = low + ( (high-low)/2 ) | 0;\n\n\t\t\tmidStop = this.getAccumulatedValue(mid);\n\t\t\tmidStart = midStop - this.values[mid];\n\n\t\t\tif (accumulatedValue < midStart) {\n\t\t\t\thigh = mid - 1;\n\t\t\t} else if (accumulatedValue >= midStop) {\n\t\t\t\tlow = mid + 1;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tresult.index = mid;\n\t\tresult.remainder = accumulatedValue - midStart;\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport stream = require('stream');\n\nvar DefaultSize:number = 8192;\nvar ContentLength:string = 'Content-Length: ';\nvar ContentLengthSize:number = Buffer.byteLength(ContentLength, 'utf8');\nvar Blank:number = new Buffer(' ', 'utf8')[0];\nvar BackslashR:number = new Buffer('\\r', 'utf8')[0];\nvar BackslashN:number = new Buffer('\\n', 'utf8')[0];\n\nclass ProtocolBuffer {\n\n\n\tprivate index:number;\n\tprivate buffer:Buffer;\n\n\tconstructor() {\n\t\tthis.index = 0;\n\t\tthis.buffer = new Buffer(DefaultSize);\n\t}\n\n\tpublic append(data:string | Buffer):void {\n\t\tvar toAppend:Buffer = null;\n\t\tif (Buffer.isBuffer(data)) {\n\t\t\ttoAppend = <Buffer>data;\n\t\t} else {\n\t\t\ttoAppend = new Buffer(<string>data, 'utf8');\n\t\t}\n\t\tif (this.buffer.length - this.index >= toAppend.length) {\n\t\t\ttoAppend.copy(this.buffer, this.index, 0, toAppend.length);\n\t\t} else {\n\t\t\tvar newSize = (Math.ceil((this.index + toAppend.length) / DefaultSize) + 1) * DefaultSize;\n\t\t\tif (this.index === 0) {\n\t\t\t\tthis.buffer = new Buffer(newSize);\n\t\t\t\ttoAppend.copy(this.buffer, 0, 0, toAppend.length);\n\t\t\t} else {\n\t\t\t\tthis.buffer = Buffer.concat([this.buffer.slice(0, this.index), toAppend], newSize);\n\t\t\t}\n\t\t}\n\t\tthis.index+= toAppend.length;\n\t}\n\n\tpublic tryReadContentLength():number {\n\t\tvar result = -1;\n\t\tvar current = 0;\n\t\t// we are utf8 encoding...\n\t\twhile (current < this.index && (this.buffer[current] === Blank || this.buffer[current] === BackslashR || this.buffer[current] === BackslashN)) {\n\t\t\tcurrent++;\n\t\t}\n\t\tif (this.index < current + ContentLengthSize) {\n\t\t\treturn result;\n\t\t}\n\t\tcurrent += ContentLengthSize;\n\t\tvar start = current;\n\t\twhile(current < this.index && this.buffer[current] !== BackslashR) {\n\t\t\tcurrent++;\n\t\t}\n\t\tif (current + 3 >= this.index || this.buffer[current + 1] !== BackslashN || this.buffer[current + 2] !== BackslashR || this.buffer[current + 3] !== BackslashN) {\n\t\t\treturn result;\n\t\t}\n\t\tvar data = this.buffer.toString('utf8', start, current);\n\t\tresult = parseInt(data);\n\t\tthis.buffer = this.buffer.slice(current + 4);\n\t\tthis.index = this.index - (current + 4);\n\t\treturn result;\n\t}\n\n\tpublic tryReadContent(length:number):string {\n\t\tif (this.index < length) {\n\t\t\treturn null;\n\t\t}\n\t\tvar result = this.buffer.toString('utf8', 0, length);\n\t\tvar sourceStart = length;\n\t\twhile(sourceStart < this.index && (this.buffer[sourceStart] === BackslashR || this.buffer[sourceStart] === BackslashN)) {\n\t\t\tsourceStart++;\n\t\t}\n\t\tthis.buffer.copy(this.buffer, 0, sourceStart);\n\t\tthis.index = this.index - sourceStart;\n\t\treturn result;\n\t}\n\n\tpublic tryReadLine():string {\n\t\tvar end:number = 0;\n\t\twhile (end < this.index && this.buffer[end] !== BackslashR && this.buffer[end] !== BackslashN) {\n\t\t\tend++;\n\t\t}\n\t\tif (end >= this.index) {\n\t\t\treturn null;\n\t\t}\n\t\tvar result = this.buffer.toString('utf8', 0, end);\n\t\twhile (end < this.index && (this.buffer[end] === BackslashR || this.buffer[end] === BackslashN)) {\n\t\t\tend++;\n\t\t}\n\t\tif (this.index === end) {\n\t\t\tthis.index = 0;\n\t\t} else {\n\t\t\tthis.buffer.copy(this.buffer, 0, end);\n\t\t\tthis.index = this.index - end;\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic get numberOfBytes():number {\n\t\treturn this.index;\n\t}\n}\n\nexport enum ReaderType {\n\tLength = 0,\n\tLine = 1\n}\n\nexport interface ICallback<T> {\n\t(data:T):void;\n}\n\nexport class Reader<T> {\n\n\tprivate readable:stream.Readable;\n\tprivate callback:ICallback<T>;\n\tprivate buffer:ProtocolBuffer;\n\tprivate nextMessageLength:number;\n\n\tpublic constructor(readable:stream.Readable, callback:ICallback<T>, type:ReaderType = ReaderType.Length) {\n\t\tthis.readable = readable;\n\t\tthis.buffer = new ProtocolBuffer();\n\t\tthis.callback = callback;\n\t\tthis.nextMessageLength = -1;\n\t\tif (type === ReaderType.Length) {\n\t\t\tthis.readable.on('data', (data:Buffer) => {\n\t\t\t\tthis.onLengthData(data);\n\t\t\t});\n\t\t} else if (type === ReaderType.Line) {\n\t\t\tthis.readable.on('data', (data:Buffer) => {\n\t\t\t\tthis.onLineData(data);\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate onLengthData(data:Buffer):void {\n\t\tthis.buffer.append(data);\n\t\twhile(true) {\n\t\t\tif (this.nextMessageLength === -1) {\n\t\t\t\tthis.nextMessageLength = this.buffer.tryReadContentLength();\n\t\t\t\tif (this.nextMessageLength === -1) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar msg = this.buffer.tryReadContent(this.nextMessageLength);\n\t\t\tif (msg === null) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.nextMessageLength = -1;\n\t\t\tvar json = JSON.parse(msg);\n\t\t\tthis.callback(json);\n\t\t}\n\t}\n\n\tprivate onLineData(data:Buffer):void {\n\t\tthis.buffer.append(data);\n\t\twhile(true) {\n\t\t\tvar msg = this.buffer.tryReadLine();\n\t\t\tif (msg === null) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.callback(JSON.parse(msg));\n\t\t}\n\t}\n}\n\nexport class Writer<T> {\n\n\tprivate writable:stream.Writable;\n\n\tpublic constructor(writable:stream.Writable) {\n\t\tthis.writable = writable;\n\t}\n\n\tpublic write(msg:T):void {\n\t\tvar json = JSON.stringify(msg);\n\n\t\tvar buffer:string[] = [\n\t\t\tContentLength,\n\t\t\tBuffer.byteLength(json, 'utf8').toString(),\n\t\t\t'\\r\\n\\r\\n',\n\t\t\tjson,\n\t\t\t'\\r\\n'\n\t\t]\n\t\tthis.writable.write(buffer.join(''), 'utf8');\n\t}\n}","define(\"vs/nls!vs/workbench/parts/extensions/node/extensionsService\",['vs/nls', 'vs/nls!vs/workbench/node/pluginHostProcess'], function(nls, data) { return nls.create(\"vs/workbench/parts/extensions/node/extensionsService\", data); });","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport nls = require('vs/nls');\n\n// Methods\nexport var GET = 'GET';\nexport var POST = 'POST';\nexport var PUT = 'PUT';\nexport var DELETE = 'DELETE';\n\n// Header\nexport namespace Header {\n\texport var CONTENT_TYPE = 'Content-Type';\n\texport var CONTENT_LENGTH = 'Content-Length';\n\texport var LAST_MODIFIED = 'Last-Modified';\n\texport var LOCATION = 'Location';\n\texport var ETAG = 'ETag';\n\texport var X_CONTENT_CHARSET = 'X-Content-Charset';\n\texport var X_CONTENT_TYPES = 'X-Content-Types';\n\texport var X_CONTENT_HASH = 'X-Content-Hash';\n\texport var X_FILEPATH = 'X-Filepath';\n\texport var X_RESOURCE = 'X-Resource';\n}\n\n// Mime\nexport namespace Mime {\n\texport var RAW = 'application/octet-stream';\n\texport var JSON = 'application/json';\n\texport var TEXT = 'text/plain';\n\texport var HTML = 'text/html';\n}\n\n// Charset\nexport namespace Charset {\n\texport var UTF8 = 'utf-8';\n\texport var UTF8_BOM = 'UTF8_BOM';\n}\n\nexport interface IDataChunk {\n\theader(name:string):string;\n\tvalue():string;\n}\n\n\nexport interface IXHROptions {\n\ttype?:string;\n\turl?:string;\n\tuser?:string;\n\tpassword?:string;\n\tresponseType?:string;\n\theaders?:any;\n\ttimeout?: number;\n\tfollowRedirects?: number;\n\tdata?:any;\n}\n\nexport interface IXHRResponse {\n\tresponseText: string;\n\tstatus: number;\n\n\treadyState : number;\n\tgetResponseHeader: (header:string) => string;\n}\n\nexport function isRedirect(status: number) : boolean {\n\treturn status >= 300 && status <= 303 || status === 307;\n}\n\nvar contentLengthPattern = /X-Chunk-Length:(\\d+)\\r\\n\\r\\n/gi,\n\theaderPattern = /(.+?):(.+?)\\r\\n(\\r\\n)?/gm;\n\nfunction newDataChunk(responseText:string, headerStartOffset:number, headerEndOffset:number, contentLength:number):IDataChunk {\n\n\tvar _value:string,\n\t\t_headers:{[name:string]:string};\n\n\treturn {\n\t\theader: function(name:string):string {\n\t\t\tif(typeof _headers === 'undefined') {\n\t\t\t\t_headers = Object.create(null);\n\t\t\t\theaderPattern.lastIndex = headerStartOffset;\n\t\t\t\twhile(true) {\n\t\t\t\t\tvar match = headerPattern.exec(responseText);\n\t\t\t\t\tif(!match) {\n\t\t\t\t\t\t// no header found\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t_headers[match[1].toLowerCase()] = match[2];\n\n\t\t\t\t\tif(match[3]) {\n\t\t\t\t\t\t// the last header found\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn _headers[name.toLowerCase()];\n\t\t},\n\t\tvalue: function() {\n\t\t\tif(typeof _value === 'undefined') {\n\t\t\t\t_value = responseText.substr(headerEndOffset + 2 /*crlf*/, contentLength);\n\t\t\t}\n\t\t\treturn _value;\n\t\t}\n\t};\n}\n\n/**\n * Parses the response text of the provided request into individual data chunks. The chunks\n * are filled into the provided array.\n */\nexport function parseChunkedData(request:IXHRResponse, collection:IDataChunk[], offset:number = 0):number {\n\n\tvar responseText = request.responseText;\n\n\tcontentLengthPattern.lastIndex = offset;\n\n\twhile(true) {\n\t\tvar match = contentLengthPattern.exec(responseText);\n\t\tif(!match) {\n\t\t\treturn offset;\n\t\t}\n\t\tvar contentLength = parseInt(match[1], 10);\n\t\tif(responseText.length < contentLengthPattern.lastIndex + contentLength) {\n\t\t\treturn offset;\n\t\t}\n\n\t\tcollection.push(newDataChunk(responseText, offset, contentLengthPattern.lastIndex - 2, contentLength));\n\t\toffset = contentLengthPattern.lastIndex + contentLength;\n\t}\n}\n\nexport function getErrorStatusDescription(status: number) : string {\n\tif (status < 400) {\n\t\treturn void 0;\n\t}\n\tswitch (status) {\n\t\tcase 400: return nls.localize('status.400', 'Bad request. The request cannot be fulfilled due to bad syntax.');\n\t\tcase 401: return nls.localize('status.401', 'Unauthorized. The server is refusing to respond.');\n\t\tcase 403: return nls.localize('status.403', 'Forbidden. The server is refusing to respond.');\n\t\tcase 404: return nls.localize('status.404', 'Not Found. The requested location could not be found.');\n\t\tcase 405: return nls.localize('status.405', 'Method not allowed. A request was made using a request method not supported by that location.');\n\t\tcase 406: return nls.localize('status.406', 'Not Acceptable. The server can only generate a response that is not accepted by the client.');\n\t\tcase 407: return nls.localize('status.407', 'Proxy Authentication Required. The client must first authenticate itself with the proxy.');\n\t\tcase 408: return nls.localize('status.408', 'Request Timeout. The server timed out waiting for the request.');\n\t\tcase 409: return nls.localize('status.409', 'Conflict. The request could not be completed because of a conflict in the request.');\n\t\tcase 410: return nls.localize('status.410', 'Gone. The requested page is no longer available.');\n\t\tcase 411: return nls.localize('status.411', 'Length Required. The \"Content-Length\" is not defined.');\n\t\tcase 412: return nls.localize('status.412', 'Precondition Failed. The precondition given in the request evaluated to false by the server.');\n\t\tcase 413: return nls.localize('status.413', 'Request Entity Too Large. The server will not accept the request, because the request entity is too large.');\n\t\tcase 414: return nls.localize('status.414', 'Request-URI Too Long. The server will not accept the request, because the URL is too long.');\n\t\tcase 415: return nls.localize('status.415', 'Unsupported Media Type. The server will not accept the request, because the media type is not supported.');\n\t\tcase 500: return nls.localize('status.500', 'Internal Server Error.');\n\t\tcase 501: return nls.localize('status.501', 'Not Implemented. The server either does not recognize the request method, or it lacks the ability to fulfill the request.');\n\t\tcase 503: return nls.localize('status.503', 'Service Unavailable. The server is currently unavailable (overloaded or down).');\n\t\tdefault: return nls.localize('status.416', 'HTTP status code {0}', status);\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport nls = require('vs/nls');\n\nexport enum ScanError {\n\tNone,\n\tUnexpectedEndOfComment,\n\tUnexpectedEndOfString,\n\tUnexpectedEndOfNumber,\n\tInvalidUnicode,\n\tInvalidEscapeCharacter\n}\n\nexport enum SyntaxKind {\n\tUnknown = 0,\n\tOpenBraceToken,\n\tCloseBraceToken,\n\tOpenBracketToken,\n\tCloseBracketToken,\n\tCommaToken,\n\tColonToken,\n\tNullKeyword,\n\tTrueKeyword,\n\tFalseKeyword,\n\tStringLiteral,\n\tNumericLiteral,\n\tLineCommentTrivia,\n\tBlockCommentTrivia,\n\tLineBreakTrivia,\n\tTrivia,\n\tEOF\n}\n\nexport interface JSONScanner {\n\tscan(): SyntaxKind;\n\tgetPosition(): number;\n\tgetToken(): SyntaxKind;\n\tgetTokenValue(): string;\n\tgetTokenOffset(): number;\n\tgetTokenLength(): number;\n\tgetTokenError(): ScanError;\n}\n\nexport function createScanner(text:string, ignoreTrivia:boolean = false):JSONScanner {\n\n\tvar pos = 0,\n\t\tlen = text.length,\n\t\tvalue:string = '',\n\t\ttokenOffset = 0,\n\t\ttoken:SyntaxKind = SyntaxKind.Unknown,\n\t\tscanError:ScanError = ScanError.None;\n\n\tfunction scanHexDigits(count: number, exact?: boolean): number {\n\t\tvar digits = 0;\n\t\tvar value = 0;\n\t\twhile (digits < count || !exact) {\n\t\t\tvar ch = text.charCodeAt(pos);\n\t\t\tif (ch >= CharacterCodes._0 && ch <= CharacterCodes._9) {\n\t\t\t\tvalue = value * 16 + ch - CharacterCodes._0;\n\t\t\t}\n\t\t\telse if (ch >= CharacterCodes.A && ch <= CharacterCodes.F) {\n\t\t\t\tvalue = value * 16 + ch - CharacterCodes.A + 10;\n\t\t\t}\n\t\t\telse if (ch >= CharacterCodes.a && ch <= CharacterCodes.f) {\n\t\t\t\tvalue = value * 16 + ch - CharacterCodes.a + 10;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpos++;\n\t\t\tdigits++;\n\t\t}\n\t\tif (digits < count) {\n\t\t\tvalue = -1;\n\t\t}\n\t\treturn value;\n\t}\n\n\tfunction scanNumber(): string {\n\t\tvar start = pos;\n\t\tif (text.charCodeAt(pos) === CharacterCodes._0) {\n\t\t\tpos++;\n\t\t} else {\n\t\t\tpos++;\n\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t}\n\t\t}\n\t\tif (pos < text.length && text.charCodeAt(pos) === CharacterCodes.dot) {\n\t\t\tpos++;\n\t\t\tif (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\tpos++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tscanError = ScanError.UnexpectedEndOfNumber;\n\t\t\t\treturn text.substring(start, end);\n\t\t\t}\n\t\t}\n\t\tvar end = pos;\n\t\tif (pos < text.length && (text.charCodeAt(pos) === CharacterCodes.E || text.charCodeAt(pos) === CharacterCodes.e)) {\n\t\t\tpos++;\n\t\t\tif (pos < text.length && text.charCodeAt(pos) === CharacterCodes.plus || text.charCodeAt(pos) === CharacterCodes.minus) {\n\t\t\t\tpos++;\n\t\t\t}\n\t\t\tif (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\tpos++;\n\t\t\t\t}\n\t\t\t\tend = pos;\n\t\t\t} else {\n\t\t\t\tscanError = ScanError.UnexpectedEndOfNumber;\n\t\t\t}\n\t\t}\n\t\treturn text.substring(start, end);\n\t}\n\n\tfunction scanString(): string {\n\n\t\tvar result = '',\n\t\t\tstart = pos;\n\n\t\twhile (true) {\n\t\t\tif (pos >= len) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tvar ch = text.charCodeAt(pos);\n\t\t\tif (ch === CharacterCodes.doubleQuote) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tpos++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (ch === CharacterCodes.backslash) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tpos++;\n\t\t\t\tif (pos >= len) {\n\t\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tch = text.charCodeAt(pos++);\n\t\t\t\tswitch (ch) {\n\t\t\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\t\t\t\tresult += '\\\"';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.backslash:\n\t\t\t\t\t\tresult += '\\\\';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.slash:\n\t\t\t\t\t\tresult += '/';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.b:\n\t\t\t\t\t\tresult += '\\b';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.f:\n\t\t\t\t\t\tresult += '\\f';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.n:\n\t\t\t\t\t\tresult += '\\n';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.r:\n\t\t\t\t\t\tresult += '\\r';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.t:\n\t\t\t\t\t\tresult += '\\t';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.u:\n\t\t\t\t\t\tvar ch = scanHexDigits(4, true);\n\t\t\t\t\t\tif (ch >= 0) {\n\t\t\t\t\t\t\tresult += String.fromCharCode(ch);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscanError = ScanError.InvalidUnicode;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tscanError = ScanError.InvalidEscapeCharacter;\n\t\t\t\t}\n\t\t\t\tstart = pos;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (isLineBreak(ch)) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpos++;\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction scanNext():SyntaxKind {\n\n\t\tvalue = '';\n\t\tscanError = ScanError.None,\n\n\t\ttokenOffset = pos;\n\n\t\tif(pos >= len) {\n\t\t\t// at the end\n\t\t\ttokenOffset = len;\n\t\t\treturn token = SyntaxKind.EOF;\n\t\t}\n\n\t\tvar code = text.charCodeAt(pos);\n\t\t// trivia: whitespace\n\t\tif (isWhiteSpace(code)) {\n\t\t\tdo {\n\t\t\t\tpos++;\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tcode = text.charCodeAt(pos);\n\t\t\t} while (isWhiteSpace(code));\n\n\t\t\treturn token = SyntaxKind.Trivia;\n\t\t}\n\n\t\t// trivia: newlines\n\t\tif (isLineBreak(code)) {\n\t\t\tpos++;\n\t\t\tvalue += String.fromCharCode(code);\n\t\t\tif (code === CharacterCodes.carriageReturn && text.charCodeAt(pos) === CharacterCodes.lineFeed) {\n\t\t\t\tpos++;\n\t\t\t\tvalue += '\\n';\n\t\t\t}\n\t\t\treturn token = SyntaxKind.LineBreakTrivia;\n\t\t}\n\n\t\tswitch(code) {\n\t\t\t// tokens: []{}:,\n\t\t\tcase CharacterCodes.openBrace:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.OpenBraceToken;\n\t\t\tcase CharacterCodes.closeBrace:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CloseBraceToken;\n\t\t\tcase CharacterCodes.openBracket:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.OpenBracketToken;\n\t\t\tcase CharacterCodes.closeBracket:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CloseBracketToken;\n\t\t\tcase CharacterCodes.colon:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.ColonToken;\n\t\t\tcase CharacterCodes.comma:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CommaToken;\n\n\t\t\t// strings\n\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\t\tpos++;\n\t\t\t\tvalue = scanString();\n\t\t\t\treturn token = SyntaxKind.StringLiteral;\n\n\t\t\t// comments\n\t\t\tcase CharacterCodes.slash:\n\t\t\t\tvar start = pos - 1;\n\t\t\t\t// Single-line comment\n\t\t\t\tif (text.charCodeAt(pos + 1) === CharacterCodes.slash) {\n\t\t\t\t\tpos += 2;\n\n\t\t\t\t\twhile (pos < len) {\n\t\t\t\t\t\tif (isLineBreak(text.charCodeAt(pos))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpos++;\n\n\t\t\t\t\t}\n\t\t\t\t\tvalue = text.substring(start, pos);\n\t\t\t\t\treturn token = SyntaxKind.LineCommentTrivia;\n\t\t\t\t}\n\n\t\t\t\t// Multi-line comment\n\t\t\t\tif (text.charCodeAt(pos + 1) === CharacterCodes.asterisk) {\n\t\t\t\t\tpos += 2;\n\n\t\t\t\t\tvar safeLength = len - 1; // For lookahead.\n\t\t\t\t\tvar commentClosed = false;\n\t\t\t\t\twhile (pos < safeLength) {\n\t\t\t\t\t\tvar ch = text.charCodeAt(pos);\n\n\t\t\t\t\t\tif (ch === CharacterCodes.asterisk && text.charCodeAt(pos + 1) === CharacterCodes.slash) {\n\t\t\t\t\t\t\tpos += 2;\n\t\t\t\t\t\t\tcommentClosed = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!commentClosed) {\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t\tscanError = ScanError.UnexpectedEndOfComment;\n\t\t\t\t\t}\n\n\t\t\t\t\tvalue = text.substring(start, pos);\n\t\t\t\t\treturn token = SyntaxKind.BlockCommentTrivia;\n\t\t\t\t}\n\t\t\t\t// just a single slash\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.Unknown;\n\n\t\t\t// numbers\n\t\t\tcase CharacterCodes.minus:\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\tif (pos === len || !isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t\t\t}\n\t\t\t\t// found a minus, followed by a number so\n\t\t\t\t// we fall through to proceed with scanning\n\t\t\t\t// numbers\n\t\t\tcase CharacterCodes._0:\n\t\t\tcase CharacterCodes._1:\n\t\t\tcase CharacterCodes._2:\n\t\t\tcase CharacterCodes._3:\n\t\t\tcase CharacterCodes._4:\n\t\t\tcase CharacterCodes._5:\n\t\t\tcase CharacterCodes._6:\n\t\t\tcase CharacterCodes._7:\n\t\t\tcase CharacterCodes._8:\n\t\t\tcase CharacterCodes._9:\n\t\t\t\tvalue += scanNumber();\n\t\t\t\treturn token = SyntaxKind.NumericLiteral;\n\t\t\t// literals and unknown symbols\n\t\t\tdefault:\n\t\t\t\t// is a literal? Read the full word.\n\t\t\t\twhile (pos < len && isUnknownContentCharacter(code)) {\n\t\t\t\t\tpos++;\n\t\t\t\t\tcode = text.charCodeAt(pos);\n\t\t\t\t}\n\t\t\t\tif (tokenOffset !== pos) {\n\t\t\t\t\tvalue = text.substring(tokenOffset, pos);\n\t\t\t\t\t// keywords: true, false, null\n\t\t\t\t\tswitch (value) {\n\t\t\t\t\t\tcase 'true': return token = SyntaxKind.TrueKeyword;\n\t\t\t\t\t\tcase 'false': return token = SyntaxKind.FalseKeyword;\n\t\t\t\t\t\tcase 'null': return token = SyntaxKind.NullKeyword;\n\t\t\t\t\t}\n\t\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t\t\t}\n\t\t\t\t// some\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t}\n\t}\n\n\tfunction isUnknownContentCharacter(code: CharacterCodes) {\n\t\tif (isWhiteSpace(code) || isLineBreak(code)) {\n\t\t\treturn false;\n\t\t}\n\t\tswitch (code) {\n\t\t\tcase CharacterCodes.closeBrace:\n\t\t\tcase CharacterCodes.closeBracket:\n\t\t\tcase CharacterCodes.openBrace:\n\t\t\tcase CharacterCodes.openBracket:\n\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\tcase CharacterCodes.colon:\n\t\t\tcase CharacterCodes.comma:\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\n\tfunction scanNextNonTrivia():SyntaxKind {\n\t\tvar result : SyntaxKind;\n\t\tdo {\n\t\t\tresult = scanNext();\n\t\t} while (result >= SyntaxKind.LineCommentTrivia && result <= SyntaxKind.Trivia);\n\t\treturn result;\n\t}\n\n\treturn {\n\t\tgetPosition: () => pos,\n\t\tscan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n\t\tgetToken: () => token,\n\t\tgetTokenValue: () => value,\n\t\tgetTokenOffset: () => tokenOffset,\n\t\tgetTokenLength: () => pos - tokenOffset,\n\t\tgetTokenError: () => scanError\n\t};\n}\n\nfunction isWhiteSpace(ch: number): boolean {\n\treturn ch === CharacterCodes.space || ch === CharacterCodes.tab || ch === CharacterCodes.verticalTab || ch === CharacterCodes.formFeed ||\n\t\tch === CharacterCodes.nonBreakingSpace || ch === CharacterCodes.ogham || ch >= CharacterCodes.enQuad && ch <= CharacterCodes.zeroWidthSpace ||\n\t\tch === CharacterCodes.narrowNoBreakSpace || ch === CharacterCodes.mathematicalSpace || ch === CharacterCodes.ideographicSpace || ch === CharacterCodes.byteOrderMark;\n}\n\nfunction isLineBreak(ch: number): boolean {\n\treturn ch === CharacterCodes.lineFeed || ch === CharacterCodes.carriageReturn || ch === CharacterCodes.lineSeparator || ch === CharacterCodes.paragraphSeparator;\n}\n\nfunction isDigit(ch: number): boolean {\n\treturn ch >= CharacterCodes._0 && ch <= CharacterCodes._9;\n}\n\nexport function isLetter(ch: number): boolean {\n\treturn ch >= CharacterCodes.a && ch <= CharacterCodes.z || ch >= CharacterCodes.A && ch <= CharacterCodes.Z;\n}\n\nenum CharacterCodes {\n\tnullCharacter = 0,\n\tmaxAsciiCharacter = 0x7F,\n\n\tlineFeed = 0x0A,              // \\n\n\tcarriageReturn = 0x0D,        // \\r\n\tlineSeparator = 0x2028,\n\tparagraphSeparator = 0x2029,\n\n\t// REVIEW: do we need to support this?  The scanner doesn't, but our IText does.  This seems\n\t// like an odd disparity?  (Or maybe it's completely fine for them to be different).\n\tnextLine = 0x0085,\n\n\t// Unicode 3.0 space characters\n\tspace = 0x0020,   // \" \"\n\tnonBreakingSpace = 0x00A0,   //\n\tenQuad = 0x2000,\n\temQuad = 0x2001,\n\tenSpace = 0x2002,\n\temSpace = 0x2003,\n\tthreePerEmSpace = 0x2004,\n\tfourPerEmSpace = 0x2005,\n\tsixPerEmSpace = 0x2006,\n\tfigureSpace = 0x2007,\n\tpunctuationSpace = 0x2008,\n\tthinSpace = 0x2009,\n\thairSpace = 0x200A,\n\tzeroWidthSpace = 0x200B,\n\tnarrowNoBreakSpace = 0x202F,\n\tideographicSpace = 0x3000,\n\tmathematicalSpace = 0x205F,\n\togham = 0x1680,\n\n\t_ = 0x5F,\n\t$ = 0x24,\n\n\t_0 = 0x30,\n\t_1 = 0x31,\n\t_2 = 0x32,\n\t_3 = 0x33,\n\t_4 = 0x34,\n\t_5 = 0x35,\n\t_6 = 0x36,\n\t_7 = 0x37,\n\t_8 = 0x38,\n\t_9 = 0x39,\n\n\ta = 0x61,\n\tb = 0x62,\n\tc = 0x63,\n\td = 0x64,\n\te = 0x65,\n\tf = 0x66,\n\tg = 0x67,\n\th = 0x68,\n\ti = 0x69,\n\tj = 0x6A,\n\tk = 0x6B,\n\tl = 0x6C,\n\tm = 0x6D,\n\tn = 0x6E,\n\to = 0x6F,\n\tp = 0x70,\n\tq = 0x71,\n\tr = 0x72,\n\ts = 0x73,\n\tt = 0x74,\n\tu = 0x75,\n\tv = 0x76,\n\tw = 0x77,\n\tx = 0x78,\n\ty = 0x79,\n\tz = 0x7A,\n\n\tA = 0x41,\n\tB = 0x42,\n\tC = 0x43,\n\tD = 0x44,\n\tE = 0x45,\n\tF = 0x46,\n\tG = 0x47,\n\tH = 0x48,\n\tI = 0x49,\n\tJ = 0x4A,\n\tK = 0x4B,\n\tL = 0x4C,\n\tM = 0x4D,\n\tN = 0x4E,\n\tO = 0x4F,\n\tP = 0x50,\n\tQ = 0x51,\n\tR = 0x52,\n\tS = 0x53,\n\tT = 0x54,\n\tU = 0x55,\n\tV = 0x56,\n\tW = 0x57,\n\tX = 0x58,\n\tY = 0x59,\n\tZ = 0x5a,\n\n\tampersand = 0x26,             // &\n\tasterisk = 0x2A,              // *\n\tat = 0x40,                    // @\n\tbackslash = 0x5C,             // \\\n\tbar = 0x7C,                   // |\n\tcaret = 0x5E,                 // ^\n\tcloseBrace = 0x7D,            // }\n\tcloseBracket = 0x5D,          // ]\n\tcloseParen = 0x29,            // )\n\tcolon = 0x3A,                 // :\n\tcomma = 0x2C,                 // ,\n\tdot = 0x2E,                   // .\n\tdoubleQuote = 0x22,           // \"\n\tequals = 0x3D,                // =\n\texclamation = 0x21,           // !\n\tgreaterThan = 0x3E,           // >\n\tlessThan = 0x3C,              // <\n\tminus = 0x2D,                 // -\n\topenBrace = 0x7B,             // {\n\topenBracket = 0x5B,           // [\n\topenParen = 0x28,             // (\n\tpercent = 0x25,               // %\n\tplus = 0x2B,                  // +\n\tquestion = 0x3F,              // ?\n\tsemicolon = 0x3B,             // ;\n\tsingleQuote = 0x27,           // '\n\tslash = 0x2F,                 // /\n\ttilde = 0x7E,                 // ~\n\n\tbackspace = 0x08,             // \\b\n\tformFeed = 0x0C,              // \\f\n\tbyteOrderMark = 0xFEFF,\n\ttab = 0x09,                   // \\t\n\tverticalTab = 0x0B,           // \\v\n}\n\n\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport function stripComments(text:string, replaceCh?:string):string {\n\n\tvar _scanner = createScanner(text),\n\t\tparts: string[] = [],\n\t\tkind:SyntaxKind,\n\t\toffset = 0,\n\t\tpos:number;\n\n\tdo {\n\t\tpos = _scanner.getPosition();\n\t\tkind = _scanner.scan();\n\t\tswitch (kind) {\n\t\t\tcase SyntaxKind.LineCommentTrivia:\n\t\t\tcase SyntaxKind.BlockCommentTrivia:\n\t\t\tcase SyntaxKind.EOF:\n\t\t\t\tif(offset !== pos) {\n\t\t\t\t\tparts.push(text.substring(offset, pos));\n\t\t\t\t}\n\t\t\t\tif(replaceCh !== void 0) {\n\t\t\t\t\tparts.push(_scanner.getTokenValue().replace(/[^\\r\\n]/g, replaceCh));\n\t\t\t\t}\n\t\t\t\toffset = _scanner.getPosition();\n\t\t\t\tbreak;\n\t\t}\n\t} while(kind !== SyntaxKind.EOF);\n\n\treturn parts.join('');\n}\n\nexport function parse(text:string, errors: string[] = []) : any {\n\tvar noMatch = Object();\n\tvar _scanner = createScanner(text, true);\n\n\tfunction scanNext() : SyntaxKind {\n\t\tvar token = _scanner.scan();\n\t\twhile (token === SyntaxKind.Unknown) {\n\t\t\thandleError(nls.localize('UnknownSymbol', 'Invalid symbol'));\n\t\t\ttoken = _scanner.scan();\n\t\t}\n\t\treturn token;\n\t}\n\n\tfunction handleError(message:string, skipUntilAfter: SyntaxKind[] = [], skipUntil: SyntaxKind[] = []) : void {\n\t\terrors.push(message);\n\t\tif (skipUntilAfter.length + skipUntil.length > 0) {\n\t\t\tvar token = _scanner.getToken();\n\t\t\twhile (token !== SyntaxKind.EOF) {\n\t\t\t\tif (skipUntilAfter.indexOf(token) !== -1) {\n\t\t\t\t\tscanNext();\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (skipUntil.indexOf(token) !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ttoken = scanNext();\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction parseString() : any {\n\t\tif (_scanner.getToken() !== SyntaxKind.StringLiteral) {\n\t\t\treturn noMatch;\n\t\t}\n\t\tvar value = _scanner.getTokenValue();\n\t\tscanNext();\n\t\treturn value;\n\t}\n\n\tfunction parseLiteral() : any {\n\t\tvar value : any;\n\t\tswitch (_scanner.getToken()) {\n\t\t\tcase SyntaxKind.NumericLiteral:\n\t\t\t\ttry {\n\t\t\t\t\tvalue = JSON.parse(_scanner.getTokenValue());\n\t\t\t\t\tif (typeof value !== 'number') {\n\t\t\t\t\t\thandleError(nls.localize('InvalidNumberFormat', 'Invalid number format'));\n\t\t\t\t\t\tvalue = 0;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tvalue = 0;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.NullKeyword:\n\t\t\t\tvalue = null;\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.TrueKeyword:\n\t\t\t\tvalue = true;\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.FalseKeyword:\n\t\t\t\tvalue = false;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn noMatch;\n\t\t}\n\t\tscanNext();\n\t\treturn value;\n\t}\n\n\tfunction parseProperty(result: any) : any {\n\t\tvar key = parseString();\n\t\tif (key === noMatch) {\n\t\t\thandleError(nls.localize('PropertyExpected', 'Property name expected'), [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken] );\n\t\t\treturn false;\n\t\t}\n\t\tif (_scanner.getToken() === SyntaxKind.ColonToken) {\n\t\t\tscanNext(); // consume colon\n\n\t\t\tvar value = parseValue();\n\t\t\tif (value !== noMatch) {\n\t\t\t\tresult[key] = value;\n\t\t\t} else {\n\t\t\t\thandleError(nls.localize('ValueExpected', 'Value expected'), [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken] );\n\t\t\t}\n\t\t} else {\n\t\t\thandleError(nls.localize('ColonExpected', 'Colon expected'), [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken] );\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseObject() : any {\n\t\tif (_scanner.getToken() !== SyntaxKind.OpenBraceToken) {\n\t\t\treturn noMatch;\n\t\t}\n\t\tvar obj = {};\n\t\tscanNext(); // consume open brace\n\n\t\tvar needsComma = false;\n\t\twhile (_scanner.getToken() !== SyntaxKind.CloseBraceToken && _scanner.getToken() !== SyntaxKind.EOF) {\n\t\t\tif (_scanner.getToken() === SyntaxKind.CommaToken) {\n\t\t\t\tif (!needsComma) {\n\t\t\t\t\thandleError(nls.localize('ValeExpected', 'Value expected'), [], [] );\n\t\t\t\t}\n\t\t\t\tscanNext(); // consume comma\n\t\t\t} else if (needsComma) {\n\t\t\t\thandleError(nls.localize('CommaExpected', 'Comma expected'), [], [] );\n\t\t\t}\n\t\t\tvar propertyParsed = parseProperty(obj);\n\t\t\tif (!propertyParsed) {\n\t\t\t\thandleError(nls.localize('ValueExpected', 'Value expected'), [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken] );\n\t\t\t}\n\t\t\tneedsComma = true;\n\t\t}\n\n\t\tif (_scanner.getToken() !== SyntaxKind.CloseBraceToken) {\n\t\t\thandleError(nls.localize('CloseBraceExpected', 'Closing brace expected'), [SyntaxKind.CloseBraceToken], []);\n\t\t} else {\n\t\t\tscanNext(); // consume close brace\n\t\t}\n\t\treturn obj;\n\t}\n\n\tfunction parseArray() : any {\n\t\tif (_scanner.getToken() !== SyntaxKind.OpenBracketToken) {\n\t\t\treturn noMatch;\n\t\t}\n\t\tvar arr: any[] = [];\n\t\tscanNext(); // consume open bracket\n\n\t\tvar needsComma = false;\n\t\twhile (_scanner.getToken() !== SyntaxKind.CloseBracketToken && _scanner.getToken() !== SyntaxKind.EOF) {\n\t\t\tif (_scanner.getToken() === SyntaxKind.CommaToken) {\n\t\t\t\tif (!needsComma) {\n\t\t\t\t\thandleError(nls.localize('ValeExpected', 'Value expected'), [], [] );\n\t\t\t\t}\n\t\t\t\tscanNext(); // consume comma\n\t\t\t} else if (needsComma) {\n\t\t\t\thandleError(nls.localize('CommaExpected', 'Comma expected'), [], [] );\n\t\t\t}\n\t\t\tvar value = parseValue();\n\t\t\tif (value === noMatch) {\n\t\t\t\thandleError(nls.localize('ValueExpected', 'Value expected'), [], [SyntaxKind.CloseBracketToken, SyntaxKind.CommaToken] );\n\t\t\t} else {\n\t\t\t\tarr.push(value);\n\t\t\t}\n\t\t\tneedsComma = true;\n\t\t}\n\n\t\tif (_scanner.getToken() !== SyntaxKind.CloseBracketToken) {\n\t\t\thandleError(nls.localize('CloseBracketExpected', 'Closing bracket expected'), [SyntaxKind.CloseBracketToken], []);\n\t\t} else {\n\t\t\tscanNext(); // consume close bracket\n\t\t}\n\t\treturn arr;\n\t}\n\n\tfunction parseValue() : any {\n\t\tvar result = parseArray();\n\t\tif (result !== noMatch) {\n\t\t\treturn result;\n\t\t}\n\t\tresult = parseObject();\n\t\tif (result !== noMatch) {\n\t\t\treturn result;\n\t\t}\n\t\tresult = parseString();\n\t\tif (result !== noMatch) {\n\t\t\treturn result;\n\t\t}\n\t\treturn parseLiteral();\n\t}\n\n\tscanNext();\n\tvar value = parseValue();\n\tif (value === noMatch) {\n\t\thandleError(nls.localize('ValueExpected', 'Value expected'), [], []);\n\t\treturn void 0;\n\t}\n\tif (_scanner.getToken() !== SyntaxKind.EOF) {\n\t\thandleError(nls.localize('EOFExpected', 'End of content expected'), [], []);\n\t}\n\treturn value;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\"use strict\";\n\nimport nls = require('vs/nls');\nimport Platform = require('vs/base/common/platform');\nimport {IHTMLContentElement} from 'vs/base/common/htmlContent';\n\n/**\n * Virtual Key Codes, the value does not hold any inherent meaning.\n * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n * But these are \"more general\", as they should work across browsers & OS`s.\n */\nexport enum KeyCode {\n\t/**\n\t * Placed first to cover the 0 value of the enum.\n\t */\n\tUnknown,\n\n\tBackspace,\n\tTab,\n\tEnter,\n\tShift,\n\tCtrl,\n\tAlt,\n\tPauseBreak,\n\tCapsLock,\n\tEscape,\n\tSpace,\n\tPageUp,\n\tPageDown,\n\tEnd,\n\tHome,\n\tLeftArrow,\n\tUpArrow,\n\tRightArrow,\n\tDownArrow,\n\tInsert,\n\tDelete,\n\n\tKEY_0,\n\tKEY_1,\n\tKEY_2,\n\tKEY_3,\n\tKEY_4,\n\tKEY_5,\n\tKEY_6,\n\tKEY_7,\n\tKEY_8,\n\tKEY_9,\n\n\tKEY_A,\n\tKEY_B,\n\tKEY_C,\n\tKEY_D,\n\tKEY_E,\n\tKEY_F,\n\tKEY_G,\n\tKEY_H,\n\tKEY_I,\n\tKEY_J,\n\tKEY_K,\n\tKEY_L,\n\tKEY_M,\n\tKEY_N,\n\tKEY_O,\n\tKEY_P,\n\tKEY_Q,\n\tKEY_R,\n\tKEY_S,\n\tKEY_T,\n\tKEY_U,\n\tKEY_V,\n\tKEY_W,\n\tKEY_X,\n\tKEY_Y,\n\tKEY_Z,\n\n\tMeta,\n\tContextMenu,\n\n\tF1,\n\tF2,\n\tF3,\n\tF4,\n\tF5,\n\tF6,\n\tF7,\n\tF8,\n\tF9,\n\tF10,\n\tF11,\n\tF12,\n\tF13,\n\tF14,\n\tF15,\n\tF16,\n\tF17,\n\tF18,\n\tF19,\n\n\tNumLock,\n\tScrollLock,\n\n\t/**\n\t * For the US standard keyboard, the ';:' key\n\t */\n\tUS_SEMICOLON,\n\t/**\n\t * For the US standard keyboard, the '=+' key\n\t */\n\tUS_EQUAL,\n\t/**\n\t * For the US standard keyboard, the ',<' key\n\t */\n\tUS_COMMA,\n\t/**\n\t * For the US standard keyboard, the '-_' key\n\t */\n\tUS_MINUS,\n\t/**\n\t * For the US standard keyboard, the '.>' key\n\t */\n\tUS_DOT,\n\t/**\n\t * For the US standard keyboard, the '/?' key\n\t */\n\tUS_SLASH,\n\t/**\n\t * For the US standard keyboard, the '`~' key\n\t */\n\tUS_BACKTICK,\n\t/**\n\t * For the US standard keyboard, the '[{' key\n\t */\n\tUS_OPEN_SQUARE_BRACKET,\n\t/**\n\t * For the US standard keyboard, the '\\|' key\n\t */\n\tUS_BACKSLASH,\n\t/**\n\t * For the US standard keyboard, the ']}' key\n\t */\n\tUS_CLOSE_SQUARE_BRACKET,\n\t/**\n\t * For the US standard keyboard, the ''\"' key\n\t */\n\tUS_QUOTE,\n\n\tNUMPAD_0, // VK_NUMPAD0, 0x60, Numeric keypad 0 key\n\tNUMPAD_1, // VK_NUMPAD1, 0x61, Numeric keypad 1 key\n\tNUMPAD_2, // VK_NUMPAD2, 0x62, Numeric keypad 2 key\n\tNUMPAD_3, // VK_NUMPAD3, 0x63, Numeric keypad 3 key\n\tNUMPAD_4, // VK_NUMPAD4, 0x64, Numeric keypad 4 key\n\tNUMPAD_5, // VK_NUMPAD5, 0x65, Numeric keypad 5 key\n\tNUMPAD_6, // VK_NUMPAD6, 0x66, Numeric keypad 6 key\n\tNUMPAD_7, // VK_NUMPAD7, 0x67, Numeric keypad 7 key\n\tNUMPAD_8, // VK_NUMPAD8, 0x68, Numeric keypad 8 key\n\tNUMPAD_9, // VK_NUMPAD9, 0x69, Numeric keypad 9 key\n\n\tNUMPAD_MULTIPLY,\t// VK_MULTIPLY, 0x6A, Multiply key\n\tNUMPAD_ADD,\t\t\t// VK_ADD, 0x6B, Add key\n\tNUMPAD_SEPARATOR,\t// VK_SEPARATOR, 0x6C, Separator key\n\tNUMPAD_SUBTRACT,\t// VK_SUBTRACT, 0x6D, Subtract key\n\tNUMPAD_DECIMAL,\t\t// VK_DECIMAL, 0x6E, Decimal key\n\tNUMPAD_DIVIDE,\t\t// VK_DIVIDE, 0x6F,\n\n\t/**\n\t * Placed last to cover the length of the enum.\n\t */\n\tMAX_VALUE\n}\n\nlet TO_STRING_MAP: string[] = [];\n(function() {\n\tTO_STRING_MAP[KeyCode.Unknown] \t\t= 'unknown';\n\n\tTO_STRING_MAP[KeyCode.Backspace] \t= 'Backspace';\n\tTO_STRING_MAP[KeyCode.Tab] \t\t\t= 'Tab';\n\tTO_STRING_MAP[KeyCode.Enter] \t\t= 'Enter';\n\tTO_STRING_MAP[KeyCode.Shift] \t\t= 'Shift';\n\tTO_STRING_MAP[KeyCode.Ctrl] \t\t= 'Ctrl';\n\tTO_STRING_MAP[KeyCode.Alt] \t\t\t= 'Alt';\n\tTO_STRING_MAP[KeyCode.PauseBreak] \t= 'PauseBreak';\n\tTO_STRING_MAP[KeyCode.CapsLock] \t= 'CapsLock';\n\tTO_STRING_MAP[KeyCode.Escape] \t\t= 'Escape';\n\tTO_STRING_MAP[KeyCode.Space] \t\t= 'Space';\n\tTO_STRING_MAP[KeyCode.PageUp] \t\t= 'PageUp';\n\tTO_STRING_MAP[KeyCode.PageDown] \t= 'PageDown';\n\tTO_STRING_MAP[KeyCode.End] \t\t\t= 'End';\n\tTO_STRING_MAP[KeyCode.Home] \t\t= 'Home';\n\tTO_STRING_MAP[KeyCode.LeftArrow] \t= 'LeftArrow';\n\tTO_STRING_MAP[KeyCode.UpArrow] \t\t= 'UpArrow';\n\tTO_STRING_MAP[KeyCode.RightArrow] \t= 'RightArrow';\n\tTO_STRING_MAP[KeyCode.DownArrow] \t= 'DownArrow';\n\tTO_STRING_MAP[KeyCode.Insert] \t\t= 'Insert';\n\tTO_STRING_MAP[KeyCode.Delete] \t\t= 'Delete';\n\n\tTO_STRING_MAP[KeyCode.KEY_0] = '0';\n\tTO_STRING_MAP[KeyCode.KEY_1] = '1';\n\tTO_STRING_MAP[KeyCode.KEY_2] = '2';\n\tTO_STRING_MAP[KeyCode.KEY_3] = '3';\n\tTO_STRING_MAP[KeyCode.KEY_4] = '4';\n\tTO_STRING_MAP[KeyCode.KEY_5] = '5';\n\tTO_STRING_MAP[KeyCode.KEY_6] = '6';\n\tTO_STRING_MAP[KeyCode.KEY_7] = '7';\n\tTO_STRING_MAP[KeyCode.KEY_8] = '8';\n\tTO_STRING_MAP[KeyCode.KEY_9] = '9';\n\n\tTO_STRING_MAP[KeyCode.KEY_A] = 'A';\n\tTO_STRING_MAP[KeyCode.KEY_B] = 'B';\n\tTO_STRING_MAP[KeyCode.KEY_C] = 'C';\n\tTO_STRING_MAP[KeyCode.KEY_D] = 'D';\n\tTO_STRING_MAP[KeyCode.KEY_E] = 'E';\n\tTO_STRING_MAP[KeyCode.KEY_F] = 'F';\n\tTO_STRING_MAP[KeyCode.KEY_G] = 'G';\n\tTO_STRING_MAP[KeyCode.KEY_H] = 'H';\n\tTO_STRING_MAP[KeyCode.KEY_I] = 'I';\n\tTO_STRING_MAP[KeyCode.KEY_J] = 'J';\n\tTO_STRING_MAP[KeyCode.KEY_K] = 'K';\n\tTO_STRING_MAP[KeyCode.KEY_L] = 'L';\n\tTO_STRING_MAP[KeyCode.KEY_M] = 'M';\n\tTO_STRING_MAP[KeyCode.KEY_N] = 'N';\n\tTO_STRING_MAP[KeyCode.KEY_O] = 'O';\n\tTO_STRING_MAP[KeyCode.KEY_P] = 'P';\n\tTO_STRING_MAP[KeyCode.KEY_Q] = 'Q';\n\tTO_STRING_MAP[KeyCode.KEY_R] = 'R';\n\tTO_STRING_MAP[KeyCode.KEY_S] = 'S';\n\tTO_STRING_MAP[KeyCode.KEY_T] = 'T';\n\tTO_STRING_MAP[KeyCode.KEY_U] = 'U';\n\tTO_STRING_MAP[KeyCode.KEY_V] = 'V';\n\tTO_STRING_MAP[KeyCode.KEY_W] = 'W';\n\tTO_STRING_MAP[KeyCode.KEY_X] = 'X';\n\tTO_STRING_MAP[KeyCode.KEY_Y] = 'Y';\n\tTO_STRING_MAP[KeyCode.KEY_Z] = 'Z';\n\n\tTO_STRING_MAP[KeyCode.ContextMenu] = 'ContextMenu';\n\n\tTO_STRING_MAP[KeyCode.F1] = 'F1';\n\tTO_STRING_MAP[KeyCode.F2] = 'F2';\n\tTO_STRING_MAP[KeyCode.F3] = 'F3';\n\tTO_STRING_MAP[KeyCode.F4] = 'F4';\n\tTO_STRING_MAP[KeyCode.F5] = 'F5';\n\tTO_STRING_MAP[KeyCode.F6] = 'F6';\n\tTO_STRING_MAP[KeyCode.F7] = 'F7';\n\tTO_STRING_MAP[KeyCode.F8] = 'F8';\n\tTO_STRING_MAP[KeyCode.F9] = 'F9';\n\tTO_STRING_MAP[KeyCode.F10] = 'F10';\n\tTO_STRING_MAP[KeyCode.F11] = 'F11';\n\tTO_STRING_MAP[KeyCode.F12] = 'F12';\n\tTO_STRING_MAP[KeyCode.F13] = 'F13';\n\tTO_STRING_MAP[KeyCode.F14] = 'F14';\n\tTO_STRING_MAP[KeyCode.F15] = 'F15';\n\tTO_STRING_MAP[KeyCode.F16] = 'F16';\n\tTO_STRING_MAP[KeyCode.F17] = 'F17';\n\tTO_STRING_MAP[KeyCode.F18] = 'F18';\n\tTO_STRING_MAP[KeyCode.F19] = 'F19';\n\n\n\tTO_STRING_MAP[KeyCode.NumLock] \t\t= 'NumLock';\n\tTO_STRING_MAP[KeyCode.ScrollLock] \t= 'ScrollLock';\n\n\tTO_STRING_MAP[KeyCode.US_SEMICOLON] \t\t\t= ';';\n\tTO_STRING_MAP[KeyCode.US_EQUAL] \t\t\t\t= '=';\n\tTO_STRING_MAP[KeyCode.US_COMMA] \t\t\t\t= ',';\n\tTO_STRING_MAP[KeyCode.US_MINUS] \t\t\t\t= '-';\n\tTO_STRING_MAP[KeyCode.US_DOT] \t\t\t\t\t= '.';\n\tTO_STRING_MAP[KeyCode.US_SLASH] \t\t\t\t= '/';\n\tTO_STRING_MAP[KeyCode.US_BACKTICK] \t\t\t\t= '`';\n\tTO_STRING_MAP[KeyCode.US_OPEN_SQUARE_BRACKET] \t= '[';\n\tTO_STRING_MAP[KeyCode.US_BACKSLASH] \t\t\t= '\\\\';\n\tTO_STRING_MAP[KeyCode.US_CLOSE_SQUARE_BRACKET] \t= ']';\n\tTO_STRING_MAP[KeyCode.US_QUOTE]\t\t\t\t\t= '\\'';\n\n\tTO_STRING_MAP[KeyCode.NUMPAD_0] = 'NumPad0';\n\tTO_STRING_MAP[KeyCode.NUMPAD_1] = 'NumPad1';\n\tTO_STRING_MAP[KeyCode.NUMPAD_2] = 'NumPad2';\n\tTO_STRING_MAP[KeyCode.NUMPAD_3] = 'NumPad3';\n\tTO_STRING_MAP[KeyCode.NUMPAD_4] = 'NumPad4';\n\tTO_STRING_MAP[KeyCode.NUMPAD_5] = 'NumPad5';\n\tTO_STRING_MAP[KeyCode.NUMPAD_6] = 'NumPad6';\n\tTO_STRING_MAP[KeyCode.NUMPAD_7] = 'NumPad7';\n\tTO_STRING_MAP[KeyCode.NUMPAD_8] = 'NumPad8';\n\tTO_STRING_MAP[KeyCode.NUMPAD_9] = 'NumPad9';\n\n\tTO_STRING_MAP[KeyCode.NUMPAD_MULTIPLY] = 'NumPad_Multiply';\n\tTO_STRING_MAP[KeyCode.NUMPAD_ADD] = 'NumPad_Add';\n\tTO_STRING_MAP[KeyCode.NUMPAD_SEPARATOR] = 'NumPad_Separator';\n\tTO_STRING_MAP[KeyCode.NUMPAD_SUBTRACT] = 'NumPad_Subtract';\n\tTO_STRING_MAP[KeyCode.NUMPAD_DECIMAL] = 'NumPad_Decimal';\n\tTO_STRING_MAP[KeyCode.NUMPAD_DIVIDE] = 'NumPad_Divide';\n\n\t// for (let i = 0; i < KeyCode.MAX_VALUE; i++) {\n\t// \tif (!TO_STRING_MAP[i]) {\n\t// \t\tconsole.warn('Missing string representation for ' + KeyCode[i]);\n\t// \t}\n\t// }\n})();\n\nlet FROM_STRING_MAP: {[str:string]:KeyCode;} = {};\nFROM_STRING_MAP['\\r'] = KeyCode.Enter;\n(function() {\n\tfor (let i = 0, len = TO_STRING_MAP.length; i < len; i++) {\n\t\tif (!TO_STRING_MAP[i]) {\n\t\t\tcontinue;\n\t\t}\n\t\tFROM_STRING_MAP[TO_STRING_MAP[i]] = i;\n\t\tFROM_STRING_MAP[TO_STRING_MAP[i].toLowerCase()] = i;\n\t}\n})();\n\nexport namespace KeyCode {\n\texport function toString(key:KeyCode): string {\n\t\treturn TO_STRING_MAP[key];\n\t}\n\texport function fromString(key:string): KeyCode {\n\t\tif (FROM_STRING_MAP.hasOwnProperty(key)) {\n\t\t\treturn FROM_STRING_MAP[key];\n\t\t}\n\t\treturn KeyCode.Unknown;\n\t}\n}\n\n// Binary encoding strategy:\n// 15:  1 bit for ctrlCmd\n// 14:  1 bit for shift\n// 13:  1 bit for alt\n// 12:  1 bit for winCtrl\n//  0: 12 bits for keyCode (up to a maximum keyCode of 4096. Given we have 83 at this point thats good enough)\n\nconst BIN_CTRLCMD_MASK = 1 << 15;\nconst BIN_SHIFT_MASK = 1 << 14;\nconst BIN_ALT_MASK = 1 << 13;\nconst BIN_WINCTRL_MASK = 1 << 12;\nconst BIN_KEYCODE_MASK = 0x00000fff;\n\nexport class BinaryKeybindings {\n\n\tpublic static extractFirstPart(keybinding:number): number {\n\t\treturn keybinding & 0x0000ffff;\n\t}\n\n\tpublic static extractChordPart(keybinding:number): number {\n\t\treturn (keybinding >> 16) & 0x0000ffff;\n\t}\n\n\tpublic static hasChord(keybinding:number): boolean {\n\t\treturn (this.extractChordPart(keybinding) !== 0);\n\t}\n\n\tpublic static hasCtrlCmd(keybinding:number): boolean {\n\t\treturn (keybinding & BIN_CTRLCMD_MASK ? true : false);\n\t}\n\n\tpublic static hasShift(keybinding:number): boolean {\n\t\treturn (keybinding & BIN_SHIFT_MASK ? true : false);\n\t}\n\n\tpublic static hasAlt(keybinding:number): boolean {\n\t\treturn (keybinding & BIN_ALT_MASK ? true : false);\n\t}\n\n\tpublic static hasWinCtrl(keybinding:number): boolean {\n\t\treturn (keybinding & BIN_WINCTRL_MASK ? true : false);\n\t}\n\n\tpublic static extractKeyCode(keybinding:number): KeyCode {\n\t\treturn (keybinding & BIN_KEYCODE_MASK);\n\t}\n}\n\n\n\nexport class KeyMod {\n\tpublic static CtrlCmd = BIN_CTRLCMD_MASK;\n\tpublic static Shift = BIN_SHIFT_MASK;\n\tpublic static Alt = BIN_ALT_MASK;\n\tpublic static WinCtrl = BIN_WINCTRL_MASK;\n\n\tpublic static chord(firstPart:number, secondPart:number): number {\n\t\treturn firstPart | ((secondPart & 0x0000ffff) << 16);\n\t}\n}\n\n/**\n * A set of usual keybindings that can be reused in code\n */\nexport class CommonKeybindings {\n\n\tpublic static ENTER: number = KeyCode.Enter;\n\tpublic static SHIFT_ENTER: number = KeyMod.Shift | KeyCode.Enter;\n\tpublic static CTRLCMD_ENTER: number = KeyMod.CtrlCmd | KeyCode.Enter;\n\tpublic static WINCTRL_ENTER: number = KeyMod.WinCtrl | KeyCode.Enter;\n\n\tpublic static TAB: number = KeyCode.Tab;\n\tpublic static ESCAPE: number = KeyCode.Escape;\n\tpublic static SPACE: number = KeyCode.Space;\n\tpublic static DELETE: number = KeyCode.Delete;\n\tpublic static SHIFT_DELETE: number = KeyMod.Shift | KeyCode.Delete;\n\tpublic static CTRLCMD_BACKSPACE: number = KeyMod.CtrlCmd | KeyCode.Backspace;\n\n\tpublic static UP_ARROW: number = KeyCode.UpArrow;\n\tpublic static SHIFT_UP_ARROW: number = KeyMod.Shift | KeyCode.UpArrow;\n\tpublic static CTRLCMD_UP_ARROW: number = KeyMod.CtrlCmd | KeyCode.UpArrow;\n\n\tpublic static DOWN_ARROW: number = KeyCode.DownArrow;\n\tpublic static SHIFT_DOWN_ARROW: number = KeyMod.Shift | KeyCode.DownArrow;\n\tpublic static CTRLCMD_DOWN_ARROW: number = KeyMod.CtrlCmd | KeyCode.DownArrow;\n\n\tpublic static LEFT_ARROW: number = KeyCode.LeftArrow;\n\n\tpublic static RIGHT_ARROW: number = KeyCode.RightArrow;\n\n\tpublic static PAGE_UP: number = KeyCode.PageUp;\n\tpublic static SHIFT_PAGE_UP: number = KeyMod.Shift | KeyCode.PageUp;\n\n\tpublic static PAGE_DOWN: number = KeyCode.PageDown;\n\tpublic static SHIFT_PAGE_DOWN: number = KeyMod.Shift | KeyCode.PageDown;\n\n\tpublic static F2: number = KeyCode.F2;\n\n\tpublic static CTRLCMD_S: number = KeyMod.CtrlCmd | KeyCode.KEY_S;\n\tpublic static CTRLCMD_C: number = KeyMod.CtrlCmd | KeyCode.KEY_C;\n\tpublic static CTRLCMD_V: number = KeyMod.CtrlCmd | KeyCode.KEY_V;\n}\n\nexport class Keybinding {\n\n\t/**\n\t * Format the binding to a format appropiate for rendering in the UI\n\t */\n\tprivate static _toUSLabel(value:number): string {\n\t\treturn _asString(value, (Platform.isMacintosh ? MacUIKeyLabelProvider.INSTANCE : ClassicUIKeyLabelProvider.INSTANCE));\n\t}\n\n\t/**\n\t * Format the binding to a format appropiate for rendering in the UI\n\t */\n\tprivate static _toUSHTMLLabel(value:number): IHTMLContentElement[] {\n\t\treturn _asHTML(value, (Platform.isMacintosh ? MacUIKeyLabelProvider.INSTANCE : ClassicUIKeyLabelProvider.INSTANCE));\n\t}\n\n\t/**\n\t * Format the binding to a format appropiate for rendering in the UI\n\t */\n\tprivate static _toCustomLabel(value:number, labelProvider:IKeyBindingLabelProvider): string {\n\t\treturn _asString(value, labelProvider);\n\t}\n\n\t/**\n\t * Format the binding to a format appropiate for rendering in the UI\n\t */\n\tprivate static _toCustomHTMLLabel(value:number, labelProvider:IKeyBindingLabelProvider): IHTMLContentElement[] {\n\t\treturn _asHTML(value, labelProvider);\n\t}\n\n\t/**\n\t * This prints the binding in a format suitable for electron's accelerators.\n\t * See https://github.com/atom/electron/blob/master/docs/api/accelerator.md\n\t */\n\tprivate static _toElectronAccelerator(value:number): string {\n\t\tif (BinaryKeybindings.hasChord(value)) {\n\t\t\t// Electron cannot handle chords\n\t\t\treturn null;\n\t\t}\n\t\treturn _asString(value, ElectronAcceleratorLabelProvider.INSTANCE);\n\t}\n\n\t/**\n\t * Format the binding to a format appropiate for the user settings file.\n\t */\n\tpublic static toUserSettingsLabel(value:number): string {\n\t\tlet result = _asString(value, UserSettingsKeyLabelProvider.INSTANCE);\n\t\tresult = result.toLowerCase().replace(/arrow/g, '');\n\n\t\tif (Platform.isMacintosh) {\n\t\t\tresult = result.replace(/meta/g, 'cmd');\n\t\t} else if (Platform.isWindows) {\n\t\t\tresult = result.replace(/meta/g, 'win');\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic value:number;\n\n\tconstructor(keybinding:number) {\n\t\tthis.value = keybinding;\n\t}\n\n\tpublic hasCtrlCmd(): boolean {\n\t\treturn BinaryKeybindings.hasCtrlCmd(this.value);\n\t}\n\n\tpublic hasShift(): boolean {\n\t\treturn BinaryKeybindings.hasShift(this.value);\n\t}\n\n\tpublic hasAlt(): boolean {\n\t\treturn BinaryKeybindings.hasAlt(this.value);\n\t}\n\n\tpublic hasWinCtrl(): boolean {\n\t\treturn BinaryKeybindings.hasWinCtrl(this.value);\n\t}\n\n\tpublic extractKeyCode(): KeyCode {\n\t\treturn BinaryKeybindings.extractKeyCode(this.value);\n\t}\n\n\t/**\n\t * Format the binding to a format appropiate for rendering in the UI\n\t */\n\tpublic _toUSLabel(): string {\n\t\treturn Keybinding._toUSLabel(this.value);\n\t}\n\n\t/**\n\t * Format the binding to a format appropiate for rendering in the UI\n\t */\n\tpublic _toUSHTMLLabel(): IHTMLContentElement[] {\n\t\treturn Keybinding._toUSHTMLLabel(this.value);\n\t}\n\n\t/**\n\t * Format the binding to a format appropiate for rendering in the UI\n\t */\n\tpublic toCustomLabel(labelProvider:IKeyBindingLabelProvider): string {\n\t\treturn Keybinding._toCustomLabel(this.value, labelProvider);\n\t}\n\n\t/**\n\t * Format the binding to a format appropiate for rendering in the UI\n\t */\n\tpublic toCustomHTMLLabel(labelProvider:IKeyBindingLabelProvider): IHTMLContentElement[] {\n\t\treturn Keybinding._toCustomHTMLLabel(this.value, labelProvider);\n\t}\n\n\t/**\n\t * This prints the binding in a format suitable for electron's accelerators.\n\t * See https://github.com/atom/electron/blob/master/docs/api/accelerator.md\n\t */\n\tpublic _toElectronAccelerator(): string {\n\t\treturn Keybinding._toElectronAccelerator(this.value);\n\t}\n\n\t/**\n\t * Format the binding to a format appropiate for the user settings file.\n\t */\n\tpublic toUserSettingsLabel(): string {\n\t\treturn Keybinding.toUserSettingsLabel(this.value);\n\t}\n\n}\n\nexport interface IKeyBindingLabelProvider {\n\tctrlKeyLabel:string;\n\tshiftKeyLabel:string;\n\taltKeyLabel:string;\n\tcmdKeyLabel:string;\n\twindowsKeyLabel:string;\n\tmodifierSeparator:string;\n\tgetLabelForKey(keyCode:KeyCode): string;\n}\n\n/**\n * Print for Electron\n */\nexport class ElectronAcceleratorLabelProvider implements IKeyBindingLabelProvider {\n\tpublic static INSTANCE = new ElectronAcceleratorLabelProvider();\n\n\tpublic ctrlKeyLabel = 'Ctrl';\n\tpublic shiftKeyLabel = 'Shift';\n\tpublic altKeyLabel = 'Alt';\n\tpublic cmdKeyLabel = 'Cmd';\n\tpublic windowsKeyLabel = 'Super';\n\tpublic modifierSeparator = '+';\n\n\tpublic getLabelForKey(keyCode:KeyCode): string {\n\t\tswitch (keyCode) {\n\t\t\tcase KeyCode.UpArrow:\n\t\t\t\treturn 'Up';\n\t\t\tcase KeyCode.DownArrow:\n\t\t\t\treturn 'Down';\n\t\t\tcase KeyCode.LeftArrow:\n\t\t\t\treturn 'Left';\n\t\t\tcase KeyCode.RightArrow:\n\t\t\t\treturn 'Right';\n\t\t}\n\n\t\treturn KeyCode.toString(keyCode);\n\t}\n}\n\n/**\n * Print for Mac UI\n */\nexport class MacUIKeyLabelProvider implements IKeyBindingLabelProvider {\n\tpublic static INSTANCE = new MacUIKeyLabelProvider();\n\n\tprivate static leftArrowUnicodeLabel = String.fromCharCode(8592);\n\tprivate static upArrowUnicodeLabel = String.fromCharCode(8593);\n\tprivate static rightArrowUnicodeLabel = String.fromCharCode(8594);\n\tprivate static downArrowUnicodeLabel = String.fromCharCode(8595);\n\n\tpublic ctrlKeyLabel = '\\u2303';\n\tpublic shiftKeyLabel = '\\u21E7';\n\tpublic altKeyLabel = '\\u2325';\n\tpublic cmdKeyLabel = '\\u2318';\n\tpublic windowsKeyLabel = nls.localize('windowsKey', \"Windows\");\n\tpublic modifierSeparator = '';\n\n\tpublic getLabelForKey(keyCode:KeyCode): string {\n\t\tswitch (keyCode) {\n\t\t\tcase KeyCode.LeftArrow:\n\t\t\t\treturn MacUIKeyLabelProvider.leftArrowUnicodeLabel;\n\t\t\tcase KeyCode.UpArrow:\n\t\t\t\treturn MacUIKeyLabelProvider.upArrowUnicodeLabel;\n\t\t\tcase KeyCode.RightArrow:\n\t\t\t\treturn MacUIKeyLabelProvider.rightArrowUnicodeLabel;\n\t\t\tcase KeyCode.DownArrow:\n\t\t\t\treturn MacUIKeyLabelProvider.downArrowUnicodeLabel;\n\t\t}\n\n\t\treturn KeyCode.toString(keyCode);\n\t}\n}\n\n/**\n * Print for Windows, Linux UI\n */\nexport class ClassicUIKeyLabelProvider implements IKeyBindingLabelProvider {\n\tpublic static INSTANCE = new ClassicUIKeyLabelProvider();\n\n\tpublic ctrlKeyLabel = nls.localize('ctrlKey', \"Ctrl\");\n\tpublic shiftKeyLabel = nls.localize('shiftKey', \"Shift\");\n\tpublic altKeyLabel = nls.localize('altKey', \"Alt\");\n\tpublic cmdKeyLabel = nls.localize('cmdKey', \"Command\");\n\tpublic windowsKeyLabel = nls.localize('windowsKey', \"Windows\");\n\tpublic modifierSeparator = '+';\n\n\tpublic getLabelForKey(keyCode:KeyCode): string {\n\t\treturn KeyCode.toString(keyCode);\n\t}\n}\n\n/**\n * Print for the user settings file.\n */\nclass UserSettingsKeyLabelProvider implements IKeyBindingLabelProvider {\n\tpublic static INSTANCE = new UserSettingsKeyLabelProvider();\n\n\tpublic ctrlKeyLabel = 'Ctrl';\n\tpublic shiftKeyLabel = 'Shift';\n\tpublic altKeyLabel = 'Alt';\n\tpublic cmdKeyLabel = 'Meta';\n\tpublic windowsKeyLabel = 'Meta';\n\n\tpublic modifierSeparator = '+';\n\n\tpublic getLabelForKey(keyCode:KeyCode): string {\n\t\treturn KeyCode.toString(keyCode);\n\t}\n}\n\nfunction _asString(keybinding:number, labelProvider:IKeyBindingLabelProvider): string {\n\tlet result:string[] = [],\n\t\tctrlCmd = BinaryKeybindings.hasCtrlCmd(keybinding),\n\t\tshift = BinaryKeybindings.hasShift(keybinding),\n\t\talt = BinaryKeybindings.hasAlt(keybinding),\n\t\twinCtrl = BinaryKeybindings.hasWinCtrl(keybinding),\n\t\tkeyCode = BinaryKeybindings.extractKeyCode(keybinding);\n\n\tlet keyLabel = labelProvider.getLabelForKey(keyCode);\n\tif (!keyLabel) {\n\t\t// cannot trigger this key code under this kb layout\n\t\treturn '';\n\t}\n\n\t// translate modifier keys: Ctrl-Shift-Alt-Meta\n\tif ((ctrlCmd && !Platform.isMacintosh) || (winCtrl && Platform.isMacintosh)) {\n\t\tresult.push(labelProvider.ctrlKeyLabel);\n\t}\n\n\tif (shift) {\n\t\tresult.push(labelProvider.shiftKeyLabel);\n\t}\n\n\tif (alt) {\n\t\tresult.push(labelProvider.altKeyLabel);\n\t}\n\n\tif (ctrlCmd && Platform.isMacintosh) {\n\t\tresult.push(labelProvider.cmdKeyLabel);\n\t}\n\n\tif (winCtrl && !Platform.isMacintosh) {\n\t\tresult.push(labelProvider.windowsKeyLabel);\n\t}\n\n\t// the actual key\n\tresult.push(keyLabel);\n\n\tvar actualResult = result.join(labelProvider.modifierSeparator);\n\n\tif (BinaryKeybindings.hasChord(keybinding)) {\n\t\treturn actualResult + ' ' + _asString(BinaryKeybindings.extractChordPart(keybinding), labelProvider);\n\t}\n\n\treturn actualResult;\n}\n\nfunction _pushKey(result:IHTMLContentElement[], str:string): void {\n\tif (result.length > 0) {\n\t\tresult.push({\n\t\t\ttagName: 'span',\n\t\t\ttext: '+'\n\t\t});\n\t}\n\tresult.push({\n\t\ttagName: 'span',\n\t\tclassName: 'monaco-kbkey',\n\t\ttext: str\n\t});\n}\n\nfunction _asHTML(keybinding:number, labelProvider:IKeyBindingLabelProvider, isChord:boolean = false): IHTMLContentElement[] {\n\tlet result:IHTMLContentElement[] = [],\n\t\tctrlCmd = BinaryKeybindings.hasCtrlCmd(keybinding),\n\t\tshift = BinaryKeybindings.hasShift(keybinding),\n\t\talt = BinaryKeybindings.hasAlt(keybinding),\n\t\twinCtrl = BinaryKeybindings.hasWinCtrl(keybinding),\n\t\tkeyCode = BinaryKeybindings.extractKeyCode(keybinding);\n\n\tlet keyLabel = labelProvider.getLabelForKey(keyCode);\n\tif (!keyLabel) {\n\t\t// cannot trigger this key code under this kb layout\n\t\treturn [];\n\t}\n\n\t// translate modifier keys: Ctrl-Shift-Alt-Meta\n\tif ((ctrlCmd && !Platform.isMacintosh) || (winCtrl && Platform.isMacintosh)) {\n\t\t_pushKey(result, labelProvider.ctrlKeyLabel);\n\t}\n\n\tif (shift) {\n\t\t_pushKey(result, labelProvider.shiftKeyLabel);\n\t}\n\n\tif (alt) {\n\t\t_pushKey(result, labelProvider.altKeyLabel);\n\t}\n\n\tif (ctrlCmd && Platform.isMacintosh) {\n\t\t_pushKey(result, labelProvider.cmdKeyLabel);\n\t}\n\n\tif (winCtrl && !Platform.isMacintosh) {\n\t\t_pushKey(result, labelProvider.windowsKeyLabel);\n\t}\n\n\t// the actual key\n\t_pushKey(result, keyLabel);\n\n\tlet chordTo: IHTMLContentElement[] = null;\n\n\tif (BinaryKeybindings.hasChord(keybinding)) {\n\t\tchordTo = _asHTML(BinaryKeybindings.extractChordPart(keybinding), labelProvider, true);\n\t\tresult.push({\n\t\t\ttagName: 'span',\n\t\t\ttext: ' '\n\t\t});\n\t\tresult = result.concat(chordTo);\n\t}\n\n\tif (isChord) {\n\t\treturn result;\n\t}\n\n\treturn [{\n\t\ttagName: 'span',\n\t\tclassName: 'monaco-kb',\n\t\tchildren: result\n\t}]\n\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport nls = require('vs/nls');\n\n/**\n * The empty string.\n */\nexport var empty = '';\n\n/**\n * @returns the provided number with the given number of preceding zeros.\n */\nexport function pad(n: number, l: number, char: string = '0'): string {\n\tvar str = '' + n;\n\tvar r = [str];\n\n\tfor (var i = str.length; i < l; i++) {\n\t\tr.push(char);\n\t}\n\n\treturn r.reverse().join('');\n}\n\nvar _formatRegexp = /{(\\d+)}/g;\n\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value: string, ...args: any[]): string {\n\tif (args.length === 0) {\n\t\treturn value;\n\t}\n\treturn value.replace(_formatRegexp, function (match, group) {\n\t\tvar idx = parseInt(group, 10);\n\t\treturn isNaN(idx) || idx < 0 || idx >= args.length ?\n\t\t\tmatch :\n\t\t\targs[idx];\n\t});\n}\n\n/**\n * Simple, non-language-aware date formatter.\n */\nexport function formatDate(date: Date = new Date()): string {\n\treturn nls.localize(\n\t\t{\n\t\t\tkey: 'format.date',\n\t\t\tcomment: [\n\t\t\t\t'{0} represents the month as a 2 digit number',\n\t\t\t\t'{1} represents the day as a 2 digit number',\n\t\t\t\t'{2} represents the year as a 4 digit number',\n\t\t\t\t'{3} represents the hours as a 2 digit number',\n\t\t\t\t'{4} represents the minutes as a 2 digit number',\n\t\t\t\t'{5} represents the seconds as a 2 digit number'\n\t\t\t]\n\t\t},\n\t\t\"{0}-{1}-{2} {3}:{4}:{5}\",\n\t\tpad(date.getMonth() + 1, 2),\n\t\tpad(date.getDate(), 2),\n\t\tpad(date.getFullYear(), 4),\n\t\tpad(date.getHours(), 2),\n\t\tpad(date.getMinutes(), 2),\n\t\tpad(date.getSeconds(), 2)\n\t);\n}\n\n/**\n * Simple, non-language-aware time formatter.\n */\nexport function formatTime(date: Date = new Date()): string {\n\treturn nls.localize(\n\t\t{\n\t\t\tkey: 'format.time',\n\t\t\tcomment: [\n\t\t\t\t'{0} represents the hours as a 2 digit number',\n\t\t\t\t'{1} represents the minutes as a 2 digit number',\n\t\t\t\t'{2} represents the seconds as a 2 digit number'\n\t\t\t]\n\t\t},\n\t\t\"{0}:{1}:{2}\",\n\t\tpad(date.getHours(), 2),\n\t\tpad(date.getMinutes(), 2),\n\t\tpad(date.getSeconds(), 2)\n\t);\n}\n\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html: string): string {\n\treturn html.replace(/[<|>|&]/g, function (match) {\n\t\tswitch (match) {\n\t\t\tcase '<': return '&lt;';\n\t\t\tcase '>': return '&gt;';\n\t\t\tcase '&': return '&amp;';\n\t\t\tdefault: return match;\n\t\t}\n\t});\n}\n\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value: string): string {\n\treturn value.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&');\n}\n\n/**\n * Searches for all occurrences of needle in haystack and replaces them with replacement.\n */\nexport function replaceAll(haystack: string, needle: string, replacement: string): string {\n\treturn haystack.replace(new RegExp(escapeRegExpCharacters(needle.toString()), 'g'), replacement);\n}\n\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack: string, needle: string = ' '): string {\n\tvar trimmed = ltrim(haystack, needle);\n\treturn rtrim(trimmed, needle);\n}\n\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack?: string, needle?: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tvar needleLen = needle.length;\n\tif (needleLen === 0 || haystack.length === 0) {\n\t\treturn haystack;\n\t}\n\n\tvar offset = 0,\n\t\tidx = -1;\n\n\twhile ((idx = haystack.indexOf(needle, offset)) === offset) {\n\t\toffset = offset + needleLen;\n\t}\n\treturn haystack.substring(offset);\n}\n\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack?: string, needle?: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tvar needleLen = needle.length,\n\t\thaystackLen = haystack.length;\n\n\tif (needleLen === 0 || haystackLen === 0) {\n\t\treturn haystack;\n\t}\n\n\tvar offset = haystackLen,\n\t\tidx = -1;\n\n\twhile (true) {\n\t\tidx = haystack.lastIndexOf(needle, offset - 1);\n\t\tif (idx === -1 || idx + needleLen !== offset) {\n\t\t\tbreak;\n\t\t}\n\t\tif (idx === 0) {\n\t\t\treturn '';\n\t\t}\n\t\toffset = idx;\n\t}\n\n\treturn haystack.substring(0, offset);\n}\n\n/**\n * Removes all occurrences of whitespaces from the beginning and end of haystack.\n */\nexport function trimWhitespace(haystack: string): string {\n\treturn haystack.replace(/(^\\s+|\\s+$)/g, '');\n}\n\nexport function convertSimple2RegExpPattern(pattern: string): string {\n\treturn pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\n\nexport function stripWildcards(pattern: string): string {\n\treturn replaceAll(pattern, '*', '');\n}\n\n/**\n * Determines if haystack starts with needle.\n */\nexport function startsWith(haystack: string, needle: string): boolean {\n\tif (haystack.length < needle.length) {\n\t\treturn false;\n\t}\n\n\tfor (var i = 0; i < needle.length; i++) {\n\t\tif (haystack[i] !== needle[i]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * Determines if haystack ends with needle.\n */\nexport function endsWith(haystack: string, needle: string): boolean {\n\tvar diff = haystack.length - needle.length;\n\tif (diff > 0) {\n\t\treturn haystack.lastIndexOf(needle) === haystack.length - needle.length;\n\t} else if (diff === 0) {\n\t\treturn haystack === needle;\n\t} else {\n\t\treturn false;\n\t}\n}\n\nexport function splice(haystack: string, offset: number, length: number, value: string = ''): string {\n\treturn haystack.substring(0, offset) + value + haystack.substring(offset + length);\n}\n\nexport function createRegExp(searchString: string, isRegex: boolean, matchCase: boolean, wholeWord: boolean): RegExp {\n\tif (searchString === '') {\n\t\tthrow new Error('Cannot create regex from empty string');\n\t}\n\tif (!isRegex) {\n\t\tsearchString = searchString.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&');\n\t}\n\tif (wholeWord) {\n\t\tif (!/\\B/.test(searchString.charAt(0))) {\n\t\t\tsearchString = '\\\\b' + searchString;\n\t\t}\n\t\tif (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n\t\t\tsearchString = searchString + '\\\\b';\n\t\t}\n\t}\n\tvar modifiers = 'g';\n\tif (!matchCase) {\n\t\tmodifiers += 'i';\n\t}\n\n\treturn new RegExp(searchString, modifiers);\n}\n\nexport function regExpLeadsToEndlessLoop(regexp: RegExp): boolean {\n\t// Exit early if it's one of these special cases which are meant to match\n\t// against an empty string\n\tif (regexp.source === \"^\" || regexp.source === \"^$\" || regexp.source === \"$\") {\n\t\treturn false;\n\t}\n\n\t// We check against an empty string. If the regular expression doesn't advance\n\t// (e.g. ends in an endless loop) it will match an empty string.\n\tvar match = regexp.exec('');\n\treturn (match && <any>regexp.lastIndex === 0);\n}\n\n/**\n * The normalize() method returns the Unicode Normalization Form of a given string. The form will be\n * the Normalization Form Canonical Composition.\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize}\n */\nexport var canNormalize = typeof ((<any>'').normalize) === 'function';\nexport function normalizeNFC(str: string, cache?:{[str: string]: string}): string {\n\tif (!canNormalize || !str) {\n\t\treturn str;\n\t}\n\n\tif (cache && cache[str]) {\n\t\treturn cache[str];\n\t}\n\n\tvar res = (<any>str).normalize('NFC');\n\n\tif (cache) {\n\t\tcache[str] = res;\n\t}\n\n\treturn res;\n}\n\nexport function encodeURIPart(haystack: string, keepSlashes?: boolean): string {\n\tif (!haystack) {\n\t\treturn haystack;\n\t}\n\n\tif (!keepSlashes) {\n\t\treturn encodeURIComponent(haystack);\n\t} else {\n\t\tvar parts = haystack.split('/');\n\t\tfor (var i = 0, len = parts.length; i < len; i++) {\n\t\t\tparts[i] = encodeURIComponent(parts[i]);\n\t\t}\n\t\treturn parts.join('/');\n\t}\n}\n\nexport function isCamelCasePattern(pattern: string): boolean {\n\treturn (/^\\w[\\w.]*$/).test(pattern);\n}\n\nexport function isFalsyOrWhitespace(s: string): boolean {\n\treturn !s || !s.trim();\n}\n\nexport function anchorPattern(value: string, start: boolean, end: boolean): string {\n\tif (start) {\n\t\tvalue = '^' + value;\n\t}\n\n\tif (end) {\n\t\tvalue = value + '$';\n\t}\n\n\treturn value;\n}\n\nexport function assertRegExp(pattern: string, modifiers: string): void {\n\tif (regExpLeadsToEndlessLoop(new RegExp(pattern, modifiers))) {\n\t\tthrow new Error('Regular expression /' + pattern + '/g results in infinitive matches');\n\t}\n}\n\nexport function normalizePath(path?: string): string {\n\n\t// No path provided, assume root\n\tif (!path) {\n\t\treturn '';\n\t}\n\n\t// Paths must not start with a slash because they are always relative to the workspace root\n\tif (path.indexOf('/') === 0) {\n\t\tpath = path.substring(1);\n\t}\n\n\treturn encodeURIPart(path, true);\n}\n\nexport function colorize(code: number, value: string): string {\n\treturn '\\x1b[' + code + 'm' + value + '\\x1b[0m';\n};\n\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str: string): number {\n\tfor (var i = 0, len = str.length; i < len; i++) {\n\t\tif (str.charAt(i) !== ' ' && str.charAt(i) !== '\\t') {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str: string): string {\n\tfor (var i = 0, len = str.length; i < len; i++) {\n\t\tif (str.charAt(i) !== ' ' && str.charAt(i) !== '\\t') {\n\t\t\treturn str.substring(0, i);\n\t\t}\n\t}\n\treturn str;\n}\n\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str: string): number {\n\tfor (var i = str.length - 1; i >= 0; i--) {\n\t\tif (str.charAt(i) !== ' ' && str.charAt(i) !== '\\t') {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nexport function localeCompare(strA: string, strB: string): number {\n\treturn strA.localeCompare(strB);\n}\n\nfunction isAsciiChar(code: number): boolean {\n\treturn (code >= 97 && code <= 122) || (code >= 65 && code <= 90);\n}\n\nexport function equalsIgnoreCase(a: string, b: string): boolean {\n\n\tvar len1 = a.length,\n\t\tlen2 = b.length;\n\n\tif (len1 !== len2) {\n\t\treturn false;\n\t}\n\n\tfor (var i = 0; i < len1; i++) {\n\n\t\tvar codeA = a.charCodeAt(i),\n\t\t\tcodeB = b.charCodeAt(i);\n\n\t\tif (codeA === codeB) {\n\t\t\tcontinue;\n\n\t\t} else if (isAsciiChar(codeA) && isAsciiChar(codeB)) {\n\t\t\tvar diff = Math.abs(codeA - codeB);\n\t\t\tif (diff !== 0 && diff !== 32) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\tif (String.fromCharCode(codeA).toLocaleLowerCase() !== String.fromCharCode(codeB).toLocaleLowerCase()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a: string, b: string): number {\n\n\tvar i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(i) !== b.charCodeAt(i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a: string, b: string): number {\n\n\tvar i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tvar aLastIndex = a.length - 1;\n\tvar bLastIndex = b.length - 1;\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n// --- unicode\n// http://en.wikipedia.org/wiki/Surrogate_pair\n// Returns the code point starting at a specified index in a string\n// Code points U+0000 to U+D7FF and U+E000 to U+FFFF are represented on a single character\n// Code points U+10000 to U+10FFFF are represented on two consecutive characters\n//export function getUnicodePoint(str:string, index:number, len:number):number {\n//\tvar chrCode = str.charCodeAt(index);\n//\tif (0xD800 <= chrCode && chrCode <= 0xDBFF && index + 1 < len) {\n//\t\tvar nextChrCode = str.charCodeAt(index + 1);\n//\t\tif (0xDC00 <= nextChrCode && nextChrCode <= 0xDFFF) {\n//\t\t\treturn (chrCode - 0xD800) << 10 + (nextChrCode - 0xDC00) + 0x10000;\n//\t\t}\n//\t}\n//\treturn chrCode;\n//}\n//export function isLeadSurrogate(chr:string) {\n//\tvar chrCode = chr.charCodeAt(0);\n//\treturn ;\n//}\n//\n//export function isTrailSurrogate(chr:string) {\n//\tvar chrCode = chr.charCodeAt(0);\n//\treturn 0xDC00 <= chrCode && chrCode <= 0xDFFF;\n//}\n\n/**\n * Computes the difference score for two strings. More similar strings have a higher score.\n * We use largest common subsequence dynamic programming approach but penalize in the end for length differences.\n * Strings that have a large length difference will get a bad default score 0.\n * Complexity - both time and space O(first.length * second.length)\n * Dynamic programming LCS computation http://en.wikipedia.org/wiki/Longest_common_subsequence_problem\n *\n * @param first a string\n * @param second a string\n */\nexport function difference(first: string, second: string, maxLenDelta: number = 4): number {\n\tvar lengthDifference = Math.abs(first.length - second.length);\n\t// We only compute score if length of the currentWord and length of entry.name are similar.\n\tif (lengthDifference > maxLenDelta) {\n\t\treturn 0;\n\t}\n\t// Initialize LCS (largest common subsequence) matrix.\n\tvar LCS: number[][] = [];\n\tvar zeroArray: number[] = [];\n\tvar i: number, j: number;\n\tfor (i = 0; i < second.length + 1; ++i) {\n\t\tzeroArray.push(0);\n\t}\n\tfor (i = 0; i < first.length + 1; ++i) {\n\t\tLCS.push(zeroArray);\n\t}\n\tfor (i = 1; i < first.length + 1; ++i) {\n\t\tfor (j = 1; j < second.length + 1; ++j) {\n\t\t\tif (first[i - 1] === second[j - 1]) {\n\t\t\t\tLCS[i][j] = LCS[i - 1][j - 1] + 1;\n\t\t\t} else {\n\t\t\t\tLCS[i][j] = Math.max(LCS[i - 1][j], LCS[i][j - 1]);\n\t\t\t}\n\t\t}\n\t}\n\treturn LCS[first.length][second.length] - Math.sqrt(lengthDifference);\n}\n\n/**\n * Returns an array in which every entry is the offset of a\n * line. There is always one entry which is zero.\n */\nexport function computeLineStarts(text: string): number[] {\n\tvar regexp = /\\r\\n|\\r|\\n/g,\n\t\tret: number[] = [0],\n\t\tmatch: RegExpExecArray;\n\twhile ((match = regexp.exec(text))) {\n\t\tret.push(regexp.lastIndex);\n\t}\n\treturn ret;\n}\n\n/**\n * Given a string and a max length returns a shorted version. Shorting\n * happens at favorable positions - such as whitespace or punctuation characters.\n */\nexport function lcut(text: string, n: number): string {\n\n\tif (text.length < n) {\n\t\treturn text;\n\t}\n\n\tvar segments = text.split(/\\b/),\n\t\tcount = 0;\n\n\tfor (var i = segments.length - 1; i >= 0; i--) {\n\t\tcount += segments[i].length;\n\n\t\tif (count > n) {\n\t\t\tsegments.splice(0, i);\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn segments.join(empty).replace(/^\\s/, empty);\n}\n\n// Escape codes\n// http://en.wikipedia.org/wiki/ANSI_escape_code\nvar EL = /\\x1B\\x5B[12]?K/g; // Erase in line\nvar LF = /\\xA/g; // line feed\nvar COLOR_START = /\\x1b\\[\\d+m/g; // Color\nvar COLOR_END = /\\x1b\\[0?m/g; // Color\n\nexport function removeAnsiEscapeCodes(str: string): string {\n\tif (str) {\n\t\tstr = str.replace(EL, '');\n\t\tstr = str.replace(LF, '\\n');\n\t\tstr = str.replace(COLOR_START, '');\n\t\tstr = str.replace(COLOR_END, '');\n\t}\n\n\treturn str;\n}\n\n// -- UTF-8 BOM\n\nvar __utf8_bom = 65279;\n\nexport var UTF8_BOM_CHARACTER = String.fromCharCode(__utf8_bom);\n\nexport function startsWithUTF8BOM(str: string): boolean {\n\treturn (str && str.length > 0 && str.charCodeAt(0) === __utf8_bom);\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport nls = require('vs/nls');\nimport objects = require('vs/base/common/objects');\nimport platform = require('vs/base/common/platform');\nimport types = require('vs/base/common/types');\nimport arrays = require('vs/base/common/arrays');\nimport strings = require('vs/base/common/strings');\nimport {IAction} from 'vs/base/common/actions';\nimport {IXHRResponse} from 'vs/base/common/http';\nimport Severity from 'vs/base/common/severity';\n\nexport interface ErrorListenerCallback {\n\t(error: any): void;\n}\n\nexport interface ErrorListenerUnbind {\n\t(): void;\n}\n\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n\tprivate unexpectedErrorHandler: (e: any) => void;\n\tprivate listeners: ErrorListenerCallback[];\n\n\tconstructor() {\n\n\t\tthis.listeners = [];\n\n\t\tthis.unexpectedErrorHandler = function(e: any) {\n\t\t\tplatform.setTimeout(() => {\n\t\t\t\tif (e.stack) {\n\t\t\t\t\tthrow new Error(e.message + '\\n\\n' + e.stack);\n\t\t\t\t}\n\n\t\t\t\tthrow e;\n\t\t\t}, 0);\n\t\t};\n\t}\n\n\tpublic addListener(listener: ErrorListenerCallback): ErrorListenerUnbind {\n\t\tthis.listeners.push(listener);\n\n\t\treturn () => {\n\t\t\tthis._removeListener(listener);\n\t\t};\n\t}\n\n\tprivate emit(e: any): void {\n\t\tthis.listeners.forEach((listener) => {\n\t\t\tlistener(e);\n\t\t});\n\t}\n\n\tprivate _removeListener(listener: ErrorListenerCallback): void {\n\t\tthis.listeners.splice(this.listeners.indexOf(listener), 1);\n\t}\n\n\tpublic setUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\t\tthis.unexpectedErrorHandler = newUnexpectedErrorHandler;\n\t}\n\n\tpublic getUnexpectedErrorHandler(): (e: any) => void {\n\t\treturn this.unexpectedErrorHandler;\n\t}\n\n\tpublic onUnexpectedError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t\tthis.emit(e);\n\t}\n}\n\nexport var errorHandler = new ErrorHandler();\n\nexport function setUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\terrorHandler.setUnexpectedErrorHandler(newUnexpectedErrorHandler);\n}\n\nexport function onUnexpectedError(e: any): void {\n\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedError(e);\n\t}\n}\n\nexport interface IConnectionErrorData {\n\tstatus: number;\n\tstatusText?: string;\n\tresponseText?: string;\n}\n\nexport function transformErrorForSerialization(error: any): any {\n\tif (!(error instanceof Error)) {\n\t\treturn error;\n\t}\n\tvar data: any = {};\n\tif (error.stacktrace) {\n\t\tdata.stack = error.stacktrace;\n\t} else if (error.stack) {\n\t\tdata.stack = error.stack;\n\t}\n\tdata.message = error.toString();\n\treturn data;\n}\n\n/**\n * The base class for all connection errors originating from XHR requests.\n */\nexport class ConnectionError implements Error {\n\tpublic status: number;\n\tpublic statusText: string;\n\tpublic responseText: string;\n\tpublic errorMessage: string;\n\tpublic errorCode: string;\n\tpublic errorObject: any;\n\tpublic name: string;\n\n\tconstructor(mixin: IConnectionErrorData);\n\tconstructor(request: IXHRResponse);\n\tconstructor(arg: any) {\n\t\tthis.status = arg.status;\n\t\tthis.statusText = arg.statusText;\n\t\tthis.name = 'ConnectionError';\n\n\t\ttry {\n\t\t\tthis.responseText = arg.responseText;\n\t\t} catch (e) {\n\t\t\tthis.responseText = '';\n\t\t}\n\n\t\tthis.errorMessage = null;\n\t\tthis.errorCode = null;\n\t\tthis.errorObject = null;\n\n\t\tif (this.responseText) {\n\t\t\ttry {\n\t\t\t\tvar errorObj = JSON.parse(this.responseText);\n\t\t\t\tthis.errorMessage = errorObj.message;\n\t\t\t\tthis.errorCode = errorObj.code;\n\t\t\t\tthis.errorObject = errorObj;\n\t\t\t} catch (error) {\n\t\t\t\t// Ignore\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic get message(): string {\n\t\treturn this.connectionErrorToMessage(this, false);\n\t}\n\n\tpublic get verboseMessage(): string {\n\t\treturn this.connectionErrorToMessage(this, true);\n\t}\n\n\tprivate connectionErrorDetailsToMessage(error: ConnectionError, verbose: boolean): string {\n\t\tvar errorCode = error.errorCode;\n\t\tvar errorMessage = error.errorMessage;\n\n\t\tif (errorCode !== null && errorMessage !== null) {\n\t\t\treturn nls.localize(\n\t\t\t\t{\n\t\t\t\t\tkey: 'message',\n\t\t\t\t\tcomment: [\n\t\t\t\t\t\t'{0} represents the error message',\n\t\t\t\t\t\t'{1} represents the error code'\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"{0}. Error code: {1}\",\n\t\t\t\tstrings.rtrim(errorMessage, '.'), errorCode);\n\t\t}\n\n\t\tif (errorMessage !== null) {\n\t\t\treturn errorMessage;\n\t\t}\n\n\t\tif (verbose && error.responseText !== null) {\n\t\t\treturn error.responseText;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate connectionErrorToMessage(error: ConnectionError, verbose: boolean): string {\n\t\tvar details = this.connectionErrorDetailsToMessage(error, verbose);\n\n\t\t// Status Code based Error\n\t\tif (error.status === 401) {\n\t\t\tif (details !== null) {\n\t\t\t\treturn nls.localize(\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: 'error.permission.verbose',\n\t\t\t\t\t\tcomment: [\n\t\t\t\t\t\t\t'{0} represents detailed information why the permission got denied'\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t\"Permission Denied (HTTP {0})\",\n\t\t\t\t\tdetails);\n\t\t\t}\n\n\t\t\treturn nls.localize('error.permission', \"Permission Denied\");\n\t\t}\n\n\t\t// Return error details if present\n\t\tif (details) {\n\t\t\treturn details;\n\t\t}\n\n\t\t// Fallback to HTTP Status and Code\n\t\tif (error.status > 0 && error.statusText !== null) {\n\t\t\tif (verbose && error.responseText !== null && error.responseText.length > 0) {\n\t\t\t\treturn nls.localize('error.http.verbose', \"{0} (HTTP {1}: {2})\", error.statusText, error.status, error.responseText);\n\t\t\t}\n\n\t\t\treturn nls.localize('error.http', \"{0} (HTTP {1})\", error.statusText, error.status);\n\t\t}\n\n\t\t// Finally its an Unknown Connection Error\n\t\tif (verbose && error.responseText !== null && error.responseText.length > 0) {\n\t\t\treturn nls.localize('error.connection.unknown.verbose', \"Unknown Connection Error ({0})\", error.responseText);\n\t\t}\n\n\t\treturn nls.localize('error.connection.unknown', \"An unknown connection error occurred. Either you are no longer connected to the internet or the server you are connected to is offline.\");\n\t}\n}\n\n// Bug: Can not subclass a JS Type. Do it manually (as done in WinJS.Class.derive)\nobjects.derive(Error, ConnectionError);\n\nfunction _xhrToErrorMessage(xhr: IConnectionErrorData, verbose: boolean): string {\n\tvar ce = new ConnectionError(xhr);\n\tif (verbose) {\n\t\treturn ce.verboseMessage;\n\t} else {\n\t\treturn ce.message;\n\t}\n}\n\nfunction _exceptionToErrorMessage(exception: any, verbose: boolean): string {\n\tif (verbose && exception.message && (exception.stack || exception.stacktrace)) {\n\t\treturn nls.localize('stackTrace.format', \"{0}: {1}\", exception.message, exception.stack || exception.stacktrace);\n\t}\n\n\tif (exception.message) {\n\t\treturn exception.message;\n\t}\n\n\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\n\n/**\n * Tries to generate a human readable error message out of the error. If the verbose parameter\n * is set to true, the error message will include stacktrace details if provided.\n * @returns A string containing the error message.\n */\nexport function toErrorMessage(error: any = null, verbose: boolean = false): string {\n\tif (!error) {\n\t\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n\t}\n\n\tif (Array.isArray(error)) {\n\t\tvar errors: any[] = arrays.coalesce(error);\n\t\tvar msg = toErrorMessage(errors[0], verbose);\n\n\t\tif (errors.length > 1) {\n\t\t\treturn nls.localize('error.moreErrors', \"{0} ({1} errors in total)\", msg, errors.length);\n\t\t}\n\n\t\treturn msg;\n\t}\n\n\tif (types.isString(error)) {\n\t\treturn error;\n\t}\n\n\tif (!types.isUndefinedOrNull(error.status)) {\n\t\treturn _xhrToErrorMessage(error, verbose);\n\t}\n\n\tif (error.detail) {\n\t\tvar detail = error.detail;\n\n\t\tif (detail.error) {\n\t\t\tif (detail.error && !types.isUndefinedOrNull(detail.error.status)) {\n\t\t\t\treturn _xhrToErrorMessage(detail.error, verbose);\n\t\t\t}\n\n\t\t\tif (types.isArray(detail.error)) {\n\t\t\t\tfor (var i = 0; i < detail.error.length; i++) {\n\t\t\t\t\tif (detail.error[i] && !types.isUndefinedOrNull(detail.error[i].status)) {\n\t\t\t\t\t\treturn _xhrToErrorMessage(detail.error[i], verbose);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\telse {\n\t\t\t\treturn _exceptionToErrorMessage(detail.error, verbose);\n\t\t\t}\n\t\t}\n\n\t\tif (detail.exception) {\n\t\t\tif (!types.isUndefinedOrNull(detail.exception.status)) {\n\t\t\t\treturn _xhrToErrorMessage(detail.exception, verbose);\n\t\t\t}\n\n\t\t\treturn _exceptionToErrorMessage(detail.exception, verbose);\n\t\t}\n\t}\n\n\tif (error.stack) {\n\t\treturn _exceptionToErrorMessage(error, verbose);\n\t}\n\n\tif (error.message) {\n\t\treturn error.message;\n\t}\n\n\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\n\n/**\n * Looks for an HTTP Status in the provided error parameter.\n */\nexport function getHttpStatus(error: any): number {\n\tif (error) {\n\t\tif (types.isArray(error)) {\n\t\t\tfor (var i = 0; i < error.length; i++) {\n\t\t\t\tif (error[i] && error[i].status) {\n\t\t\t\t\treturn error[i].status;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (error.status) {\n\t\t\treturn error.status;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\nvar canceledName = 'Canceled';\n\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isPromiseCanceledError(error: any): boolean {\n\treturn error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n\n/**\n * Returns an error that signals cancellation.\n */\nexport function canceled(): Error {\n\tvar error = new Error(canceledName);\n\terror.name = error.message;\n\treturn error;\n}\n\n/**\n * Returns an error that signals something is not implemented.\n */\nexport function notImplemented(): Error {\n\treturn new Error(nls.localize('notImplementedError', \"Not Implemented\"));\n}\n\nexport function illegalArgument(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(nls.localize('illegalArgumentError', \"Illegal argument: {0}\", name));\n\t} else {\n\t\treturn new Error(nls.localize('illegalArgumentError2', \"Illegal argument\"));\n\t}\n}\n\nexport function illegalState(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(nls.localize('illegalStateError', \"Illegal state: {0}\", name));\n\t} else {\n\t\treturn new Error(nls.localize('illegalStateError2', \"Illegal state\"));\n\t}\n}\n\nexport function readonly(): Error {\n\treturn new Error('readonly property cannot be changed');\n}\n\nexport function loaderError(err: Error): Error {\n\tif (platform.isWeb) {\n\t\treturn new Error(nls.localize('loaderError', \"Failed to load a required file. Either you are no longer connected to the internet or the server you are connected to is offline. Please refresh the browser to try again.\"));\n\t}\n\n\treturn new Error(nls.localize('loaderErrorNative', \"Failed to load a required file. Please restart the application to try again. Details: {0}\", JSON.stringify(err)));\n}\n\nexport interface IErrorOptions {\n\tseverity?: Severity;\n\tactions?: IAction[];\n}\n\nexport function create(message: string, options: IErrorOptions = {}): Error {\n\tvar result = new Error(message);\n\n\tif (types.isNumber(options.severity)) {\n\t\t(<any>result).severity = options.severity;\n\t}\n\n\tif (options.actions) {\n\t\t(<any>result).actions = options.actions;\n\t}\n\n\treturn result;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {IDisposable} from 'vs/base/common/lifecycle';\nimport {onUnexpectedError} from 'vs/base/common/errors';\n\nexport default class CallbackList {\n\n\tprivate _callbacks: Function[];\n\tprivate _contexts: any[];\n\n\tpublic add(callback: Function, context: any = null, bucket?: IDisposable[]): void {\n\t\tif (!this._callbacks) {\n\t\t\tthis._callbacks = [];\n\t\t\tthis._contexts = [];\n\t\t}\n\t\tthis._callbacks.push(callback);\n\t\tthis._contexts.push(context);\n\n\t\tif (Array.isArray(bucket)) {\n\t\t\tbucket.push({ dispose: () => this.remove(callback, context) });\n\t\t}\n\t}\n\n\tpublic remove(callback: Function, context: any = null): void {\n\t\tif (!this._callbacks) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar foundCallbackWithDifferentContext = false;\n\t\tfor (var i = 0, len = this._callbacks.length; i < len; i++) {\n\t\t\tif (this._callbacks[i] === callback) {\n\t\t\t\tif (this._contexts[i] === context) {\n\t\t\t\t\t// callback & context match => remove it\n\t\t\t\t\tthis._callbacks.splice(i, 1);\n\t\t\t\t\tthis._contexts.splice(i, 1);\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tfoundCallbackWithDifferentContext = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (foundCallbackWithDifferentContext) {\n\t\t\tthrow new Error('When adding a listener with a context, you should remove it with the same context');\n\t\t}\n\t}\n\n\tpublic invoke(...args: any[]): any[] {\n\t\tif (!this._callbacks) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar ret: any[] = [],\n\t\t\tcallbacks = this._callbacks.slice(0),\n\t\t\tcontexts = this._contexts.slice(0);\n\n\t\tfor (var i = 0, len = callbacks.length; i < len; i++) {\n\t\t\ttry {\n\t\t\t\tret.push(callbacks[i].apply(contexts[i], args));\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedError(e);\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\n\tpublic isEmpty(): boolean {\n\t\treturn !this._callbacks || this._callbacks.length === 0;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._callbacks = undefined;\n\t\tthis._contexts = undefined;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {IDisposable}  from 'vs/base/common/lifecycle';\nimport CallbackList from 'vs/base/common/callbackList';\nimport {EventEmitter} from 'vs/base/common/eventEmitter';\n\n/**\n * To an event a function with one or zero parameters\n * can be subscribed. The event is the subscriber function itself.\n */\ninterface Event<T> {\n\t(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable;\n}\n\nnamespace Event {\n\tconst _disposable = { dispose() { } };\n\texport const None: Event<any> = function() { return _disposable; };\n}\n\nexport default Event;\n\nexport interface EmitterOptions {\n\tonFirstListenerAdd?: Function;\n\tonLastListenerRemove?: Function;\n}\n\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n\tclass Document {\n\n\t\tprivate _onDidChange = new Emitter<(value:string)=>any>();\n\n\t\tpublic onDidChange = this._onDidChange.event;\n\n\t\t// getter-style\n\t\t// get onDidChange(): Event<(value:string)=>any> {\n\t\t// \treturn this._onDidChange.event;\n\t\t// }\n\n\t\tprivate _doIt() {\n\t\t\t//...\n\t\t\tthis._onDidChange.fire(value);\n\t\t}\n\t}\n */\nexport class Emitter<T> {\n\n\tprivate static _noop = function () { };\n\n\tprivate _event: Event<T>;\n\tprivate _callbacks: CallbackList;\n\tprivate _disposed: boolean;\n\n\tconstructor(private _options?: EmitterOptions) {\n\n\t}\n\n\t/**\n\t * For the public to allow to subscribe\n\t * to events from this Emitter\n\t */\n\tget event(): Event<T> {\n\t\tif (!this._event) {\n\t\t\tthis._event = (listener: (e: T) => any,  thisArgs?: any, disposables?: IDisposable[]) => {\n\t\t\t\tif (!this._callbacks) {\n\t\t\t\t\tthis._callbacks = new CallbackList();\n\t\t\t\t}\n\t\t\t\tif (this._options && this._options.onFirstListenerAdd && this._callbacks.isEmpty()) {\n\t\t\t\t\tthis._options.onFirstListenerAdd(this);\n\t\t\t\t}\n\t\t\t\tthis._callbacks.add(listener, thisArgs);\n\n\t\t\t\tlet result: IDisposable;\n\t\t\t\tresult = {\n\t\t\t\t\tdispose: () => {\n\t\t\t\t\t\tresult.dispose = Emitter._noop;\n\t\t\t\t\t\tif (!this._disposed) {\n\t\t\t\t\t\t\tthis._callbacks.remove(listener, thisArgs);\n\t\t\t\t\t\t\tif(this._options && this._options.onLastListenerRemove && this._callbacks.isEmpty()) {\n\t\t\t\t\t\t\t\tthis._options.onLastListenerRemove(this);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif(Array.isArray(disposables)) {\n\t\t\t\t\tdisposables.push(result);\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t};\n\t\t}\n\t\treturn this._event;\n\t}\n\n\t/**\n\t * To be kept private to fire an event to\n\t * subscribers\n\t */\n\tfire(event: T): any {\n\t\tif (this._callbacks) {\n\t\t\tthis._callbacks.invoke.call(this._callbacks, event);\n\t\t}\n\t}\n\n\tdispose() {\n\t\tif(this._callbacks) {\n\t\t\tthis._callbacks.dispose();\n\t\t\tthis._callbacks = undefined;\n\t\t\tthis._disposed = true;\n\t\t}\n\t}\n}\n\n/**\n * Creates an Event which is backed-up by the event emitter. This allows\n * to use the existing eventing pattern and is likely using less memory.\n * Sample:\n *\n * \tclass Document {\n *\n *\t\tprivate _eventbus = new EventEmitter();\n *\n *\t\tpublic onDidChange = fromEventEmitter(this._eventbus, 'changed');\n *\n *\t\t// getter-style\n *\t\t// get onDidChange(): Event<(value:string)=>any> {\n *\t\t// \tcache fromEventEmitter result and return\n *\t\t// }\n *\n *\t\tprivate _doIt() {\n *\t\t\t// ...\n *\t\t\tthis._eventbus.emit('changed', value)\n *\t\t}\n *\t}\n */\nexport function fromEventEmitter<T>(emitter: EventEmitter, eventType: string): Event<T> {\n\treturn function (listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable {\n\t\tconst result = emitter.addListener2(eventType, function () {\n\t\t\tlistener.apply(thisArgs, arguments);\n\t\t});\n\t\tif(Array.isArray(disposables)) {\n\t\t\tdisposables.push(result);\n\t\t}\n\t\treturn result;\n\t};\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport Event, {Emitter} from 'vs/base/common/event';\n\nexport interface CancellationToken {\n\tisCancellationRequested: boolean;\n\tonCancellationRequested: Event<any>;\n}\n\nexport namespace CancellationToken {\n\n\texport const None: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: false,\n\t\tonCancellationRequested: Event.None\n\t});\n\n\texport const Cancelled: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: true,\n\t\tonCancellationRequested: Event.None\n\t});\n}\n\nconst ShortcutEvent: Event<any> = Object.freeze(function(callback, context?) {\n\tlet handle = setTimeout(callback.bind(context), 0);\n\treturn { dispose() { clearTimeout(handle); } };\n});\n\nclass MutableToken implements CancellationToken {\n\n\tprivate _isCancelled = false;\n\tprivate _emitter: Emitter<any>;\n\n\tpublic cancel() {\n\t\tif(!this._isCancelled) {\n\t\t\tthis._isCancelled = true;\n\t\t\tif (this._emitter) {\n\t\t\t\tthis._emitter.fire(undefined);\n\t\t\t\tthis._emitter = undefined;\n\t\t\t}\n\t\t}\n\t}\n\n\tget isCancellationRequested():boolean {\n\t\treturn this._isCancelled;\n\t}\n\n\tget onCancellationRequested(): Event<any> {\n\t\tif (this._isCancelled) {\n\t\t\treturn ShortcutEvent;\n\t\t}\n\t\tif (!this._emitter) {\n\t\t\tthis._emitter = new Emitter<any>();\n\t\t}\n\t\treturn this._emitter.event;\n\t}\n}\n\nexport class CancellationTokenSource {\n\n\tprivate _token: CancellationToken;\n\n\tget token(): CancellationToken {\n\t\tif (!this._token) {\n\t\t\t// be lazy and create the token only when\n\t\t\t// actually needed\n\t\t\tthis._token = new MutableToken();\n\t\t}\n\t\treturn this._token;\n\t}\n\n\tcancel(): void {\n\t\tif(!this._token) {\n\t\t\t// save an object by returning the default\n\t\t\t// cancelled token when cancellation happens\n\t\t\t// before someone asks for the token\n\t\t\tthis._token = CancellationToken.Cancelled;\n\t\t} else {\n\t\t\t(<MutableToken> this._token).cancel();\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport Errors = require('vs/base/common/errors');\nimport Lifecycle = require('vs/base/common/lifecycle');\n\nexport interface IEmitterEvent {\n\tgetType():string;\n\tgetData():any;\n}\n\nexport class EmitterEvent implements IEmitterEvent {\n\n\tprivate _type:string;\n\tprivate _data:any;\n\tprivate _emitterType:string;\n\n\tconstructor(eventType:string, data:any, emitterType:string=null) {\n\t\tthis._type = eventType;\n\t\tthis._data = data;\n\t\tthis._emitterType = emitterType;\n\t}\n\n\tpublic getType():string {\n\t\treturn this._type;\n\t}\n\n\tpublic getData():any {\n\t\treturn this._data;\n\t}\n\n\tpublic getEmitterType():string {\n\t\treturn this._emitterType;\n\t}\n}\n\nexport interface ListenerCallback {\n\t(value:any):void;\n}\n\nexport interface IBulkListenerCallback {\n\t(value:IEmitterEvent[]):void;\n}\n\nexport interface ListenerUnbind {\n\t():void;\n}\n\nexport interface IEventEmitter extends Lifecycle.IDisposable {\n\taddListener(eventType:string, listener:ListenerCallback):ListenerUnbind;\n\taddListener2(eventType:string, listener:ListenerCallback):Lifecycle.IDisposable;\n\taddOneTimeListener(eventType:string, listener:ListenerCallback):ListenerUnbind;\n\n\taddBulkListener(listener:IBulkListenerCallback):ListenerUnbind;\n\taddBulkListener2(listener:IBulkListenerCallback):Lifecycle.IDisposable;\n\n\taddEmitter(eventEmitter:IEventEmitter, emitterType?:string):ListenerUnbind;\n\taddEmitter2(eventEmitter:IEventEmitter, emitterType?:string):Lifecycle.IDisposable;\n\n\taddEmitterTypeListener(eventType:string, emitterType:string, listener:ListenerCallback):ListenerUnbind;\n\temit(eventType:string, data?:any):void;\n}\n\nexport interface IListenersMap {\n\t[key:string]:ListenerCallback[];\n}\n\nexport class EventEmitter implements IEventEmitter {\n\n\tprotected _listeners:IListenersMap;\n\tprotected _bulkListeners:ListenerCallback[];\n\tprivate _collectedEvents:EmitterEvent[];\n\tprivate _deferredCnt:number;\n\tprivate _allowedEventTypes:{[eventType:string]:boolean;};\n\n\tconstructor(allowedEventTypes:string[] = null) {\n\t\tthis._listeners = {};\n\t\tthis._bulkListeners = [];\n\t\tthis._collectedEvents = [];\n\t\tthis._deferredCnt = 0;\n\t\tif (allowedEventTypes) {\n\t\t\tthis._allowedEventTypes = {};\n\t\t\tfor (var i = 0; i < allowedEventTypes.length; i++) {\n\t\t\t\tthis._allowedEventTypes[allowedEventTypes[i]] = true;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._allowedEventTypes = null;\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._listeners = {};\n\t\tthis._bulkListeners = [];\n\t\tthis._collectedEvents = [];\n\t\tthis._deferredCnt = 0;\n\t\tthis._allowedEventTypes = null;\n\t}\n\n\tpublic addListener(eventType:string, listener:ListenerCallback):ListenerUnbind {\n\t\tif (eventType === '*') {\n\t\t\tthrow new Error('Use addBulkListener(listener) to register your listener!');\n\t\t}\n\n\t\tif (this._allowedEventTypes && !this._allowedEventTypes.hasOwnProperty(eventType)) {\n\t\t\tthrow new Error('This object will never emit this event type!');\n\t\t}\n\n\t\tif (this._listeners.hasOwnProperty(eventType)) {\n\t\t\tthis._listeners[eventType].push(listener);\n\t\t} else {\n\t\t\tthis._listeners[eventType] = [listener];\n\t\t}\n\n\t\tvar bound = this;\n\t\treturn () => {\n\t\t\tif (!bound) {\n\t\t\t\t// Already called\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tbound._removeListener(eventType, listener);\n\n\t\t\t// Prevent leakers from holding on to the event emitter\n\t\t\tbound = null;\n\t\t\tlistener = null;\n\t\t};\n\t}\n\n\tpublic addListener2(eventType:string, listener:ListenerCallback):Lifecycle.IDisposable {\n\t\tvar dispose = this.addListener(eventType, listener);\n\t\treturn {\n\t\t\tdispose: dispose\n\t\t};\n\t}\n\n\tpublic on(eventType:string, listener:ListenerCallback):ListenerUnbind {\n\t\treturn this.addListener(eventType, listener);\n\t}\n\n\tpublic addOneTimeListener(eventType:string, listener:ListenerCallback):ListenerUnbind {\n\t\tvar unbind:ListenerUnbind = this.addListener(eventType, function(value:any) {\n\t\t\tunbind();\n\t\t\tlistener(value);\n\t\t});\n\t\treturn unbind;\n\t}\n\n\tpublic addOneTimeDisposableListener(eventType:string, listener:ListenerCallback):Lifecycle.IDisposable {\n\t\tvar dispose = this.addOneTimeListener(eventType, listener);\n\t\treturn {\n\t\t\tdispose: dispose\n\t\t};\n\t}\n\n\tpublic addBulkListener(listener:IBulkListenerCallback):ListenerUnbind {\n\n\t\tthis._bulkListeners.push(listener);\n\n\t\treturn () => {\n\t\t\tthis._removeBulkListener(listener);\n\t\t};\n\t}\n\n\tpublic addBulkListener2(listener:IBulkListenerCallback):Lifecycle.IDisposable {\n\t\tvar dispose = this.addBulkListener(listener);\n\t\treturn {\n\t\t\tdispose: dispose\n\t\t};\n\t}\n\n\tpublic addEmitter(eventEmitter:IEventEmitter, emitterType:string=null):ListenerUnbind {\n\t\treturn eventEmitter.addBulkListener((events:IEmitterEvent[]):void => {\n\t\t\tvar newEvents = events;\n\n\t\t\tif (emitterType) {\n\t\t\t\t// If the emitter has an emitterType, recreate events\n\t\t\t\tnewEvents = [];\n\t\t\t\tfor (var i = 0, len = events.length; i < len; i++) {\n\t\t\t\t\tnewEvents.push(new EmitterEvent(events[i].getType(), events[i].getData(), emitterType));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._deferredCnt === 0) {\n\t\t\t\tthis._emitEvents(<EmitterEvent[]>newEvents);\n\t\t\t} else {\n\t\t\t\t// Collect for later\n\t\t\t\tthis._collectedEvents.push.apply(this._collectedEvents, newEvents);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic addEmitter2(eventEmitter:IEventEmitter, emitterType?:string):Lifecycle.IDisposable {\n\t\tvar dispose = this.addEmitter(eventEmitter, emitterType);\n\t\treturn {\n\t\t\tdispose: dispose\n\t\t};\n\t}\n\n\tpublic addEmitterTypeListener(eventType:string, emitterType:string, listener:ListenerCallback):ListenerUnbind {\n\t\tif (emitterType) {\n\t\t\tif (eventType === '*') {\n\t\t\t\tthrow new Error('Bulk listeners cannot specify an emitter type');\n\t\t\t}\n\n\t\t\treturn this.addListener(eventType + '/' + emitterType, listener);\n\t\t} else {\n\t\t\treturn this.addListener(eventType, listener);\n\t\t}\n\t}\n\n\tprivate _removeListener(eventType:string, listener:ListenerCallback): void {\n\t\tif (this._listeners.hasOwnProperty(eventType)) {\n\t\t\tvar listeners = this._listeners[eventType];\n\t\t\tfor (var i = 0, len = listeners.length; i < len; i++) {\n\t\t\t\tif (listeners[i] === listener) {\n\t\t\t\t\tlisteners.splice(i, 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t}\n\n\tprivate _removeBulkListener(listener:IBulkListenerCallback): void {\n\t\tfor (var i = 0, len = this._bulkListeners.length; i < len; i++) {\n\t\t\tif (this._bulkListeners[i] === listener) {\n\t\t\t\tthis._bulkListeners.splice(i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _emitToSpecificTypeListeners(eventType:string, data:any): void {\n\t\tif (this._listeners.hasOwnProperty(eventType)) {\n\t\t\tvar listeners = this._listeners[eventType].slice(0);\n\t\t\tfor (var i = 0, len = listeners.length; i < len; i++) {\n\t\t\t\ttry {\n\t\t\t\t\tlisteners[i](data);\n\t\t\t\t} catch(e) {\n\t\t\t\t\tErrors.onUnexpectedError(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _emitToBulkListeners(events:EmitterEvent[]): void {\n\t\tvar bulkListeners = this._bulkListeners.slice(0);\n\t\tfor (var i = 0, len = bulkListeners.length; i < len; i++) {\n\t\t\ttry {\n\t\t\t\tbulkListeners[i](events);\n\t\t\t} catch(e) {\n\t\t\t\tErrors.onUnexpectedError(e);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _emitEvents(events:EmitterEvent[]): void {\n\t\tif (this._bulkListeners.length > 0) {\n\t\t\tthis._emitToBulkListeners(events);\n\t\t}\n\t\tfor (var i = 0, len = events.length; i < len; i++) {\n\t\t\tvar e = events[i];\n\n\t\t\tthis._emitToSpecificTypeListeners(e.getType(), e.getData());\n\t\t\tif (e.getEmitterType()) {\n\t\t\t\tthis._emitToSpecificTypeListeners(e.getType() + '/' + e.getEmitterType(), e.getData());\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic emit(eventType:string, data:any={}):void {\n\t\tif (this._allowedEventTypes && !this._allowedEventTypes.hasOwnProperty(eventType)) {\n\t\t\tthrow new Error('Cannot emit this event type because it wasn\\'t white-listed!');\n\t\t}\n\t\t// Early return if no listeners would get this\n\t\tif (!this._listeners.hasOwnProperty(eventType) && this._bulkListeners.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tvar emitterEvent = new EmitterEvent(eventType, data);\n\n\t\tif (this._deferredCnt === 0) {\n\t\t\tthis._emitEvents([emitterEvent]);\n\t\t} else {\n\t\t\t// Collect for later\n\t\t\tthis._collectedEvents.push(emitterEvent);\n\t\t}\n\t}\n\n\tpublic deferredEmit(callback:()=>any):any {\n\t\tthis._deferredCnt = this._deferredCnt + 1;\n\t\tvar result: any = null;\n\t\ttry {\n\t\t\tresult = callback();\n\t\t} catch (e) {\n\t\t\tErrors.onUnexpectedError(e);\n\t\t}\n\t\tthis._deferredCnt = this._deferredCnt - 1;\n\n\t\tif (this._deferredCnt === 0) {\n\t\t\tthis._emitCollected();\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate _emitCollected(): void {\n\t\t// Flush collected events\n\t\tvar events = this._collectedEvents;\n\t\tthis._collectedEvents = [];\n\n\t\tif (events.length > 0) {\n\t\t\tthis._emitEvents(events);\n\t\t}\n\t}\n}\n\nclass EmitQueueElement {\n\tpublic target: Function;\n\tpublic arg: any;\n\n\tconstructor(target: Function, arg: any) {\n\t\tthis.target = target;\n\t\tthis.arg = arg;\n\t}\n}\n\n/**\n * Same as EventEmitter, but guarantees events are delivered in order to each listener\n */\nexport class OrderGuaranteeEventEmitter extends EventEmitter {\n\n\tprivate _emitQueue: EmitQueueElement[];\n\n\tconstructor(allowedEventTypes:string[] = null) {\n\t\tsuper(allowedEventTypes);\n\t\tthis._emitQueue = [];\n\t}\n\n\tprotected _emitToSpecificTypeListeners(eventType:string, data:any): void {\n\t\tif (this._listeners.hasOwnProperty(eventType)) {\n\t\t\tlet listeners = this._listeners[eventType];\n\t\t\tfor (let i = 0, len = listeners.length; i < len; i++) {\n\t\t\t\tthis._emitQueue.push(new EmitQueueElement(listeners[i], data));\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _emitToBulkListeners(events:EmitterEvent[]): void {\n\t\tlet bulkListeners = this._bulkListeners;\n\t\tfor (let i = 0, len = bulkListeners.length; i < len; i++) {\n\t\t\tthis._emitQueue.push(new EmitQueueElement(bulkListeners[i], events));\n\t\t}\n\t}\n\n\tprotected _emitEvents(events:EmitterEvent[]): void {\n\t\tsuper._emitEvents(events);\n\n\t\twhile (this._emitQueue.length > 0) {\n\t\t\tlet queueElement = this._emitQueue.shift();\n\t\t\ttry {\n\t\t\t\tqueueElement.target(queueElement.arg);\n\t\t\t} catch(e) {\n\t\t\t\tErrors.onUnexpectedError(e);\n\t\t\t}\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport CallbackList from 'vs/base/common/callbackList';\nimport { EventProvider } from 'vs/base/common/eventProvider';\n\nexport class EventSource<T extends Function> {\n\n\tprivate _value: CallbackList;\n\n\tpublic fire(...args: any[]): any[] {\n\t\tif(!this._value) {\n\t\t\treturn;\n\t\t}\n\t\treturn this._value.invoke.apply(this._value, args);\n\t}\n\n\tpublic get value(): EventProvider<T> {\n\t\tif(!this._value) {\n\t\t\tthis._value = new CallbackList();\n\t\t}\n\t\treturn {\n\t\t\tadd: (callback, context?, bucket?) => {\n\t\t\t\tthis._value.add(callback, context, bucket);\n\t\t\t},\n\t\t\tremove: this._value.remove.bind(this._value)\n\t\t};\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport strings = require('vs/base/common/strings');\n\nexport interface IFilter {\n\t// Returns null if word doesn't match.\n\t(word: string, wordToMatchAgainst: string): IMatch[];\n}\n\nexport interface IMatch {\n\tstart: number;\n\tend: number;\n}\n\n// Combined filters\n\n/**\n * @returns A filter which combines the provided set\n * of filters with an or. The *first* filters that\n * matches defined the return value of the returned\n * filter.\n */\nexport function or(...filter: IFilter[]): IFilter {\n\treturn function(word: string, wordToMatchAgainst: string): IMatch[] {\n\t\tfor (let i = 0, len = filter.length; i < len; i++) {\n\t\t\tlet match = filter[i](word, wordToMatchAgainst);\n\t\t\tif (match) {\n\t\t\t\treturn match;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n}\n\n/**\n * @returns A filter which combines the provided set\n * of filters with an and. The combines matches are\n * returned if *all* filters match.\n */\nexport function and(...filter: IFilter[]): IFilter {\n\treturn function(word: string, wordToMatchAgainst: string): IMatch[] {\n\t\tlet result: IMatch[] = [];\n\t\tfor (let i = 0, len = filter.length; i < len; i++) {\n\t\t\tlet match = filter[i](word, wordToMatchAgainst);\n\t\t\tif (!match) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tresult = result.concat(match);\n\t\t}\n\t\treturn result;\n\t};\n}\n\n// Prefix\n\nexport let matchesStrictPrefix: IFilter = (word: string, wordToMatchAgainst: string): IMatch[] => { return _matchesPrefix(false, word, wordToMatchAgainst); };\nexport let matchesPrefix: IFilter = (word: string, wordToMatchAgainst: string): IMatch[] => { return _matchesPrefix(true, word, wordToMatchAgainst); };\n\nfunction _matchesPrefix(ignoreCase: boolean, word: string, wordToMatchAgainst: string): IMatch[] {\n\tif (wordToMatchAgainst.length === 0 || wordToMatchAgainst.length < word.length) {\n\t\treturn null;\n\t}\n\tif (ignoreCase) {\n\t\tword = word.toLowerCase();\n\t\twordToMatchAgainst = wordToMatchAgainst.toLowerCase();\n\t}\n\tfor (let i = 0; i < word.length; i++) {\n\t\tif (word[i] !== wordToMatchAgainst[i]) {\n\t\t\treturn null;\n\t\t}\n\t}\n\treturn word.length > 0 ? [{ start: 0, end: word.length }] : [];\n}\n\n// Contiguous Substring\n\nexport function matchesContiguousSubString(word: string, wordToMatchAgainst: string): IMatch[] {\n\tlet index = wordToMatchAgainst.toLowerCase().indexOf(word.toLowerCase());\n\n\tif (index === -1) {\n\t\treturn null;\n\t}\n\n\treturn [{ start: index, end: index + word.length }];\n}\n\n// Substring\n\nexport function matchesSubString(word: string, wordToMatchAgainst: string): IMatch[] {\n\treturn _matchesSubString(word.toLowerCase(), wordToMatchAgainst.toLowerCase(), 0, 0);\n}\n\nfunction _matchesSubString(word: string, wordToMatchAgainst: string, i: number, j: number): IMatch[] {\n\tif (i === word.length) {\n\t\treturn [];\n\t} else if (j === wordToMatchAgainst.length) {\n\t\treturn null;\n\t} else {\n\t\tif (word[i] === wordToMatchAgainst[j]) {\n\t\t\tlet result: IMatch[] = null;\n\t\t\tif (result = _matchesSubString(word, wordToMatchAgainst, i + 1, j + 1)) {\n\t\t\t\treturn join({ start: j, end: j + 1 }, result);\n\t\t\t}\n\t\t}\n\n\t\treturn _matchesSubString(word, wordToMatchAgainst, i, j + 1);\n\t}\n}\n\n// CamelCase\n\nfunction isLower(code: number): boolean {\n\treturn 97 <= code && code <= 122;\n}\n\nfunction isUpper(code: number): boolean {\n\treturn 65 <= code && code <= 90;\n}\n\nfunction isNumber(code: number): boolean {\n\treturn 48 <= code && code <= 57;\n}\n\nfunction isWhitespace(code: number): boolean {\n\treturn [32, 9, 10, 13].indexOf(code) > -1;\n}\n\nfunction isAlphanumeric(code: number): boolean {\n\treturn isLower(code) || isUpper(code) || isNumber(code);\n}\n\nfunction join(head: IMatch, tail: IMatch[]): IMatch[] {\n\tif (tail.length === 0) {\n\t\ttail = [head];\n\t} else if (head.end === tail[0].start) {\n\t\ttail[0].start = head.start;\n\t} else {\n\t\ttail.unshift(head);\n\t}\n\treturn tail;\n}\n\nfunction nextAnchor(camelCaseWord: string, start: number): number {\n\tfor (let i = start; i < camelCaseWord.length; i++) {\n\t\tlet c = camelCaseWord.charCodeAt(i);\n\t\tif (isUpper(c) || isNumber(c) || (i > 0 && !isAlphanumeric(camelCaseWord.charCodeAt(i - 1)))) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn camelCaseWord.length;\n}\n\nfunction _matchesCamelCase(word: string, camelCaseWord: string, i: number, j: number): IMatch[] {\n\tif (i === word.length) {\n\t\treturn [];\n\t} else if (j === camelCaseWord.length) {\n\t\treturn null;\n\t} else if (word[i] !== camelCaseWord[j].toLowerCase()) {\n\t\treturn null;\n\t} else {\n\t\tlet result = null;\n\t\tlet nextUpperIndex = j + 1;\n\t\tresult = _matchesCamelCase(word, camelCaseWord, i + 1, j + 1);\n\t\twhile (!result && (nextUpperIndex = nextAnchor(camelCaseWord, nextUpperIndex)) < camelCaseWord.length) {\n\t\t\tresult = _matchesCamelCase(word, camelCaseWord, i + 1, nextUpperIndex);\n\t\t\tnextUpperIndex++;\n\t\t}\n\t\treturn result === null ? null : join({ start: j, end: j + 1 }, result);\n\t}\n}\n\n// Heuristic to avoid computing camel case matcher for words that don't\n// look like camelCaseWords.\nfunction isCamelCaseWord(word: string): boolean {\n\tif (word.length > 40) {\n\t\treturn false;\n\t}\n\n\tlet upper = 0, lower = 0, alpha = 0, code = 0;\n\n\tfor (let i = 0; i < word.length; i++) {\n\t\tcode = word.charCodeAt(i);\n\n\t\tisUpper(code) && upper++;\n\t\tisLower(code) && lower++;\n\t\tisAlphanumeric(code) && alpha++;\n\t}\n\n\tlet upperPercent = upper / word.length;\n\tlet lowerPercent = lower / word.length;\n\tlet alphaPercent = alpha / word.length;\n\n\treturn lowerPercent > 0.2 && upperPercent < 0.8 && alphaPercent > 0.6;\n}\n\n// Heuristic to avoid computing camel case matcher for words that don't\n// look like camel case patterns.\nfunction isCamelCasePattern(word: string): boolean {\n\tlet upper = 0, lower = 0, code = 0, whitespace = 0;\n\n\tfor (let i = 0; i < word.length; i++) {\n\t\tcode = word.charCodeAt(i);\n\n\t\tisUpper(code) && upper++;\n\t\tisLower(code) && lower++;\n\t\tisWhitespace(code) && whitespace++;\n\t}\n\n\tif ((upper === 0 || lower === 0) && whitespace === 0) {\n\t\treturn word.length <= 30;\n\t} else {\n\t\treturn upper <= 5;\n\t}\n}\n\nexport function matchesCamelCase(word: string, camelCaseWord: string): IMatch[] {\n\tif (camelCaseWord.length === 0) {\n\t\treturn null;\n\t}\n\n\tif (!isCamelCasePattern(word)) {\n\t\treturn null;\n\t}\n\n\tif (!isCamelCaseWord(camelCaseWord)) {\n\t\treturn null;\n\t}\n\n\tlet result: IMatch[] = null;\n\tlet i = 0;\n\n\twhile (i < camelCaseWord.length && (result = _matchesCamelCase(word.toLowerCase(), camelCaseWord, 0, i)) === null) {\n\t\ti = nextAnchor(camelCaseWord, i + 1);\n\t}\n\n\treturn result;\n}\n\n// Fuzzy\n\nexport enum SubstringMatching {\n\tContiguous,\n\tSeparate\n}\n\nconst fuzzyContiguousFilter = or(matchesPrefix, matchesCamelCase, matchesContiguousSubString);\nconst fuzzySeparateFilter = or(matchesPrefix, matchesCamelCase, matchesSubString);\nconst fuzzyRegExpCache: { [key: string]: RegExp; } = {};\n\nexport function matchesFuzzy(word: string, wordToMatchAgainst: string, enableSeparateSubstringMatching = false): IMatch[] {\n\n\t// Form RegExp for wildcard matches\n\tlet regexp = fuzzyRegExpCache[word];\n\tif (!regexp) {\n\t\tregexp = new RegExp(strings.convertSimple2RegExpPattern(word), 'i');\n\t\tfuzzyRegExpCache[word] = regexp;\n\t}\n\n\t// RegExp Filter\n\tlet match: RegExpExecArray = regexp.exec(wordToMatchAgainst);\n\tif (match) {\n\t\treturn [{ start: match.index, end: match.index + match[0].length }];\n\t}\n\n\t// Default Filter\n\treturn enableSeparateSubstringMatching ? fuzzySeparateFilter(word, wordToMatchAgainst) : fuzzyContiguousFilter(word, wordToMatchAgainst);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport strings = require('vs/base/common/strings');\nimport paths = require('vs/base/common/paths');\n\nvar CACHE: { [glob: string]: RegExp } = Object.create(null);\n\nexport interface IExpression {\n\t[pattern: string]: boolean|SiblingClause|any;\n}\n\nexport interface SiblingClause {\n\twhen: string;\n}\n\nvar PATH_REGEX = '[/\\\\\\\\]';\t\t// any slash or backslash\nvar NO_PATH_REGEX = '[^/\\\\\\\\]';\t// any non-slash and non-backslash\n\nfunction starsToRegExp(starCount: number): string {\n\tswitch (starCount) {\n\t\tcase 0:\n\t\t\treturn '';\n\t\tcase 1:\n\t\t\treturn NO_PATH_REGEX + '*?'; // 1 star matches any number of characters except path separator (/ and \\) - non greedy (?)\n\t\tdefault:\n\t\t\t// Matches:  (Path Sep    OR     Path Val followed by Path Sep     OR    Path Sep followed by Path Val) 0-many times\n\t\t\t// Group is non capturing because we don't need to capture at all (?:...)\n\t\t\t// Overall we use non-greedy matching because it could be that we match too much\n\t\t\treturn '(?:' + PATH_REGEX + '|' + NO_PATH_REGEX + '+' + PATH_REGEX + '|' + PATH_REGEX + NO_PATH_REGEX + '+)*?';\n\t}\n}\n\nexport function splitGlobAware(pattern: string, splitChar: string): string[] {\n\tif (!pattern) {\n\t\treturn [];\n\t}\n\n\tvar segments: string[] = [];\n\n\tvar inBraces = false;\n\tvar inBrackets = false;\n\n\tvar char: string;\n\tvar curVal = '';\n\tfor (var i = 0; i < pattern.length; i++) {\n\t\tchar = pattern[i];\n\n\t\tswitch (char) {\n\t\t\tcase splitChar:\n\t\t\t\tif (!inBraces && !inBrackets) {\n\t\t\t\t\tsegments.push(curVal);\n\t\t\t\t\tcurVal = '';\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase '{':\n\t\t\t\tinBraces = true;\n\t\t\t\tbreak;\n\t\t\tcase '}':\n\t\t\t\tinBraces = false;\n\t\t\t\tbreak;\n\t\t\tcase '[':\n\t\t\t\tinBrackets = true;\n\t\t\t\tbreak;\n\t\t\tcase ']':\n\t\t\t\tinBrackets = false;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tcurVal += char;\n\t}\n\n\t// Tail\n\tif (curVal) {\n\t\tsegments.push(curVal);\n\t}\n\n\treturn segments;\n}\n\nfunction parseRegExp(pattern: string): string {\n\tif (!pattern) {\n\t\treturn '';\n\t}\n\n\tvar regEx = '';\n\n\t// Split up into segments for each slash found\n\tvar segments = splitGlobAware(pattern, '/');\n\n\t// Special case where we only have globstars\n\tif (segments.every(s => s === '**')) {\n\t\tregEx = '.*';\n\t}\n\n\t// Build regex over segments\n\telse {\n\t\tvar previousSegmentWasGlobStar = false;\n\t\tsegments.forEach((segment, index) => {\n\n\t\t\t// Globstar is special\n\t\t\tif (segment === '**') {\n\n\t\t\t\t// if we have more than one globstar after another, just ignore it\n\t\t\t\tif (!previousSegmentWasGlobStar) {\n\t\t\t\t\tregEx += starsToRegExp(2);\n\t\t\t\t\tpreviousSegmentWasGlobStar = true;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// States\n\t\t\tvar inBraces = false;\n\t\t\tvar braceVal = '';\n\n\t\t\tvar inBrackets = false;\n\t\t\tvar bracketVal = '';\n\n\t\t\tvar char: string;\n\t\t\tfor (var i = 0; i < segment.length; i++) {\n\t\t\t\tchar = segment[i];\n\n\t\t\t\t// Support brace expansion\n\t\t\t\tif (char !== '}' && inBraces) {\n\t\t\t\t\tbraceVal += char;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Support brackets\n\t\t\t\tif (char !== ']' && inBrackets) {\n\t\t\t\t\tvar res: string;\n\t\t\t\t\tswitch (char) {\n\t\t\t\t\t\tcase '-':\t\t// allow the range operator\n\t\t\t\t\t\t\tres = char;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase '^':\t\t// allow the negate operator\n\t\t\t\t\t\t\tres = char;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tres = strings.escapeRegExpCharacters(char);\n\t\t\t\t\t}\n\n\t\t\t\t\tbracketVal += res;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tswitch (char) {\n\t\t\t\t\tcase '{':\n\t\t\t\t\t\tinBraces = true;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '[':\n\t\t\t\t\t\tinBrackets = true;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '}':\n\t\t\t\t\t\tvar choices = splitGlobAware(braceVal, ',');\n\n\t\t\t\t\t\t// Converts {foo,bar} => [foo|bar]\n\t\t\t\t\t\tvar braceRegExp = '(?:' + choices.reduce((prevValue, curValue, index, array) => {\n\t\t\t\t\t\t\treturn prevValue + '|' + parseRegExp(curValue);\n\t\t\t\t\t\t}, parseRegExp(choices[0]) /* parse the first segment as regex and give as initial value */) + ')';\n\n\t\t\t\t\t\tregEx += braceRegExp;\n\n\t\t\t\t\t\tinBraces = false;\n\t\t\t\t\t\tbraceVal = '';\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ']':\n\t\t\t\t\t\tregEx += ('[' + bracketVal + ']');\n\n\t\t\t\t\t\tinBrackets = false;\n\t\t\t\t\t\tbracketVal = '';\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tcase '?':\n\t\t\t\t\t\tregEx += NO_PATH_REGEX; // 1 ? matches any single character except path separator (/ and \\)\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '*':\n\t\t\t\t\t\tregEx += starsToRegExp(1);\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tregEx += strings.escapeRegExpCharacters(char);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Tail: Add the slash we had split on if there is more to come and the next one is not a globstar\n\t\t\tif (index < segments.length - 1 && segments[index + 1] !== '**') {\n\t\t\t\tregEx += PATH_REGEX;\n\t\t\t}\n\n\t\t\t// reset state\n\t\t\tpreviousSegmentWasGlobStar = false;\n\t\t});\n\t}\n\n\treturn regEx;\n}\n\nfunction globToRegExp(pattern: string): RegExp {\n\tif (!pattern) {\n\t\treturn null;\n\t}\n\n\t// Whitespace trimming\n\tpattern = pattern.trim();\n\n\t// Check cache\n\tif (CACHE[pattern]) {\n\t\tvar cached = CACHE[pattern];\n\t\tcached.lastIndex = 0; // reset RegExp to its initial state to reuse it!\n\n\t\treturn cached;\n\t}\n\n\tvar regEx = parseRegExp(pattern);\n\n\t// Wrap it\n\tregEx = '^' + regEx + '$';\n\n\t// Convert to regexp and be ready for errors\n\tvar result: RegExp;\n\ttry {\n\t\tresult = new RegExp(regEx);\n\t} catch (error) {\n\t\tresult = /.^/; // create a regex that matches nothing if we cannot parse the pattern\n\t}\n\n\t// Make sure to cache\n\tCACHE[pattern] = result;\n\n\treturn result;\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * - * matches anything inside a path segment\n * - ? matches 1 character inside a path segment\n * - ** matches anything including an empty path segment\n * - simple brace expansion ({js,ts} => js or ts)\n * - character ranges (using [...])\n */\nexport function match(pattern: string, path: string): boolean;\nexport function match(expression: IExpression, path: string, siblings?: string[]): string /* the matching pattern */;\nexport function match(arg1: string|IExpression, path: string, siblings?: string[]): any {\n\tif (!arg1 || !path) {\n\t\treturn false;\n\t}\n\n\t// Glob with String\n\tif (typeof arg1 === 'string') {\n\t\ttry {\n\t\t\treturn globToRegExp(arg1).test(path);\n\t\t} catch (error) {\n\t\t\treturn false; // ignore pattern if the regex is invalid\n\t\t}\n\t}\n\n\t// Glob with Expression\n\treturn matchExpression(<IExpression>arg1, path, siblings);\n}\n\nfunction matchExpression(expression: IExpression, path: string, siblings?: string[]): string /* the matching pattern */ {\n\tvar patterns = Object.getOwnPropertyNames(expression);\n\tfor (var i = 0; i < patterns.length; i++) {\n\t\tvar pattern = patterns[i];\n\n\t\t// Pattern matches path\n\t\tif (match(pattern, path)) {\n\t\t\tvar value = expression[pattern];\n\n\t\t\t// Expression Pattern is <boolean>\n\t\t\tif (typeof value === 'boolean') {\n\t\t\t\tif (value === false) {\n\t\t\t\t\tcontinue; // pattern is disabled\n\t\t\t\t}\n\n\t\t\t\treturn pattern;\n\t\t\t}\n\n\t\t\t// Expression Pattern is <SiblingClause>\n\t\t\tif (value && typeof (<SiblingClause>value).when === 'string') {\n\t\t\t\tif (!siblings || !siblings.length) {\n\t\t\t\t\tcontinue; // pattern is malformed or we don't have siblings\n\t\t\t\t}\n\n\t\t\t\tvar clause = <SiblingClause>value;\n\t\t\t\tvar basename = strings.rtrim(paths.basename(path), paths.extname(path));\n\t\t\t\tvar clausePattern = strings.replaceAll(clause.when, '$(basename)', basename);\n\t\t\t\tif (siblings.some((sibling) => sibling === clausePattern)) {\n\t\t\t\t\treturn pattern;\n\t\t\t\t} else {\n\t\t\t\t\tcontinue; // pattern does not match in the end because the when clause is not satisfied\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Expression is Anything\n\t\t\treturn pattern;\n\t\t}\n\t}\n\n\treturn null;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport uri from 'vs/base/common/uri';\nimport platform = require('vs/base/common/platform');\nimport types = require('vs/base/common/types');\nimport strings = require('vs/base/common/strings');\nimport paths = require('vs/base/common/paths');\n\nexport interface ILabelProvider {\n\n\t/**\n\t * Given an element returns a label for it to display in the UI.\n\t */\n\tgetLabel(element: any): string;\n}\n\nexport interface IWorkspaceProvider {\n\tgetWorkspace(): {\n\t\tresource: uri;\n\t}\n}\n\nexport class PathLabelProvider implements ILabelProvider {\n\tprivate root: string;\n\n\tconstructor(arg1?: uri|string|IWorkspaceProvider) {\n\t\tthis.root = arg1 && getPath(arg1);\n\t}\n\n\tpublic getLabel(arg1: uri|string|IWorkspaceProvider): string {\n\t\treturn getPathLabel(getPath(arg1), this.root);\n\t}\n}\n\nexport function getPathLabel(arg1: uri|string, arg2?: uri|string|IWorkspaceProvider): string {\n\tvar basepath = arg2 && getPath(arg2);\n\tvar absolutePath = getPath(arg1);\n\n\tif (basepath && paths.isEqualOrParent(absolutePath, basepath)) {\n\t\treturn paths.normalize(strings.ltrim(absolutePath.substr(basepath.length), paths.nativeSep), true);\n\t}\n\n\tif (platform.isWindows && absolutePath[1] === ':') {\n\t\treturn paths.normalize(absolutePath.charAt(0).toUpperCase() + absolutePath.slice(1), true);\n\t}\n\n\treturn paths.normalize(absolutePath, true);\n}\n\nfunction getPath(arg1: uri|string|IWorkspaceProvider): string {\n\tif (!arg1) {\n\t\treturn null;\n\t}\n\n\tif (typeof arg1 === 'string') {\n\t\treturn arg1;\n\t}\n\n\tif (types.isFunction((<IWorkspaceProvider>arg1).getWorkspace)) {\n\t\tvar ws = (<IWorkspaceProvider>arg1).getWorkspace();\n\t\treturn ws ? ws.resource.fsPath : void 0;\n\t}\n\n\treturn (<uri>arg1).fsPath;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport paths = require('vs/base/common/paths');\nimport types = require('vs/base/common/types');\nimport strings = require('vs/base/common/strings');\n\nexport let MIME_TEXT = 'text/plain';\nexport let MIME_BINARY = 'application/octet-stream';\nexport let MIME_UNKNOWN = 'application/unknown';\n\nconst registeredTextMimesByFilename: { [str: string]: string; } = Object.create(null);\nconst registeredTextMimesByFirstLine: { regexp: RegExp; mime: string; }[] = [];\n\n// This is for automatic generation at native.guplfile.js#41 => darwinBundleDocumentTypes.extensions\nexport function generateKnownFilenames(onlyExtensions: boolean = true): any {\n\tlet filter = (ext: string) => {\n\t\tif (onlyExtensions) {\n\t\t\treturn /^\\./.test(ext);\n\t\t}\n\t\treturn true;\n\t};\n\tlet removeLeadingDot = (ext: string) => {\n\t\treturn ext.replace(/^\\./, '');\n\t}\n\n\tlet list: string[] = [];\n\tlist = list.concat(Object.keys(registeredTextMimesByFilename));\n\n\tlist = list.filter(filter).map(removeLeadingDot);\n\tlist.sort();\n\n\tlet result: string[] = [];\n\tlet currentLetter: string = null;\n\tlet previousItem: string = null;\n\tlet currentRow: string[] = [];\n\n\tlet pushCurrentRow = () => {\n\t\tif (currentRow.length > 0) {\n\t\t\tresult.push('\\'' + currentRow.join('\\', \\'') + '\\'')\n\t\t}\n\t};\n\n\tfor (let i = 0, len = list.length; i < len; i++) {\n\t\tlet item = list[i];\n\t\tif (item.length === 0) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (item === previousItem) {\n\t\t\tcontinue;\n\t\t}\n\t\tlet letter = item.charAt(0);\n\n\t\tif (currentLetter !== letter) {\n\t\t\tpushCurrentRow();\n\t\t\tcurrentLetter = letter;\n\t\t\tcurrentRow = [];\n\t\t}\n\n\t\tcurrentRow.push(item);\n\t\tpreviousItem = item;\n\t}\n\tpushCurrentRow();\n\n\treturn result.join(',\\n');\n}\n\n/**\n * Allow to register extra text mimes dynamically based on filename\n */\nexport function registerTextMimeByFilename(nameOrExtension: string, mime: string): void {\n\tif (nameOrExtension && mime) {\n\t\tif (registeredTextMimesByFilename[nameOrExtension] && registeredTextMimesByFilename[nameOrExtension] !== mime) {\n\t\t\tconsole.warn('Overwriting filename <<' + nameOrExtension + '>> to now point to mime <<' + mime + '>>');\n\t\t}\n\t\tregisteredTextMimesByFilename[nameOrExtension] = mime;\n\t}\n}\n\n/**\n * Allow to register extra text mimes dynamically based on firstline\n */\nexport function registerTextMimeByFirstLine(firstLineRegexp: RegExp, mime: string): void {\n\tif (firstLineRegexp && mime) {\n\t\tregisteredTextMimesByFirstLine.push({ regexp: firstLineRegexp, mime: mime });\n\t}\n}\n\n/**\n * Given a comma separated list of mimes in order of priority, find if the list describes a binary\n * or textual resource.\n */\nexport function isBinaryMime(mimes: string): boolean;\nexport function isBinaryMime(mimes: string[]): boolean;\nexport function isBinaryMime(mimes: any): boolean {\n\tif (!mimes) {\n\t\treturn false;\n\t}\n\n\tlet mimeVals: string[];\n\tif (types.isArray(mimes)) {\n\t\tmimeVals = (<string[]>mimes);\n\t} else {\n\t\tmimeVals = (<string>mimes).split(',').map((mime) => mime.trim());\n\t}\n\n\treturn mimeVals.indexOf(MIME_BINARY) >= 0;\n}\n\n/**\n * New function for mime type detection supporting application/unknown as concept.\n */\nexport function guessMimeTypes(path: string, firstLine?: string): string[] {\n\tif (!path) {\n\t\treturn [MIME_UNKNOWN];\n\t}\n\n\t// 1.) Firstline gets highest priority\n\tif (firstLine) {\n\t\tif (strings.startsWithUTF8BOM(firstLine)) {\n\t\t\tfirstLine = firstLine.substr(1);\n\t\t}\n\n\t\tif (firstLine.length > 0) {\n\t\t\tfor (let i = 0; i < registeredTextMimesByFirstLine.length; ++i) {\n\n\t\t\t\t// Make sure the entire line matches, not just a subpart.\n\t\t\t\tlet matches = firstLine.match(registeredTextMimesByFirstLine[i].regexp);\n\t\t\t\tif (matches && matches.length > 0 && matches[0].length === firstLine.length) {\n\t\t\t\t\treturn [registeredTextMimesByFirstLine[i].mime, MIME_TEXT];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check with file name and extension\n\tpath = path.toLowerCase();\n\tlet filename = paths.basename(path);\n\tlet extension = paths.extname(path);\n\n\tlet exactNameMatch: string;\n\tlet extensionMatch: string;\n\n\t// Check for dynamically registered match based on filename and extension\n\tfor (let nameOrExtension in registeredTextMimesByFilename) {\n\t\tlet nameOrExtensionLower:string = nameOrExtension.toLowerCase();\n\n\t\t// First exact name match\n\t\tif (!exactNameMatch && filename === nameOrExtensionLower) {\n\t\t\texactNameMatch = nameOrExtension;\n\t\t\tbreak; // take it!\n\t\t}\n\n\t\t// Longest extension match\n\t\tif (nameOrExtension[0] === '.' && strings.endsWith(filename, nameOrExtensionLower)) {\n\t\t\tif (!extensionMatch || nameOrExtensionLower.length > extensionMatch.length) {\n\t\t\t\textensionMatch = nameOrExtension;\n\t\t\t}\n\t\t}\n\t}\n\n\t// 2.) Exact name match has second highest prio\n\tif (exactNameMatch) {\n\t\treturn [registeredTextMimesByFilename[exactNameMatch], MIME_TEXT];\n\t}\n\n\t// 3.) Match on extension comes last\n\tif (extensionMatch) {\n\t\treturn [registeredTextMimesByFilename[extensionMatch], MIME_TEXT];\n\t}\n\n\treturn [MIME_UNKNOWN];\n}\n\nexport function isUnspecific(mime: string[] | string): boolean {\n\tif (!mime) {\n\t\treturn true;\n\t}\n\n\tif (typeof mime === 'string') {\n\t\treturn mime === MIME_BINARY || mime === MIME_TEXT || mime === MIME_UNKNOWN;\n\t}\n\n\treturn mime.length === 1 && isUnspecific(mime[0]);\n}\n\nexport function suggestFilename(theMime: string, prefix: string): string {\n\tfor (let fileExtension in registeredTextMimesByFilename) {\n\t\tlet mime = registeredTextMimesByFilename[fileExtension];\n\t\tif (mime === theMime) {\n\t\t\treturn prefix + fileExtension;\n\t\t}\n\t}\n\n\treturn null;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport nls = require('vs/nls');\nimport strings = require('vs/base/common/strings');\n\nenum Severity {\n\tIgnore = 0,\n\tInfo = 1,\n\tWarning = 2,\n\tError = 3\n}\n\nnamespace Severity {\n\n\tvar _error = 'error',\n\t\t_warning = 'warning',\n\t\t_warn = 'warn',\n\t\t_info = 'info';\n\n\tvar _displayStrings: { [value: number]: string; } = Object.create(null);\n\t_displayStrings[Severity.Error] = nls.localize('sev.error', \"Error\");\n\t_displayStrings[Severity.Warning] = nls.localize('sev.warning', \"Warning\");\n\t_displayStrings[Severity.Info] = nls.localize('sev.info', \"Info\");\n\n\t/**\n\t * Parses 'error', 'warning', 'warn', 'info' in call casings\n\t * and falls back to ignore.\n\t */\n\texport function fromValue(value: string): Severity {\n\t\tif (!value) {\n\t\t\treturn Severity.Ignore;\n\t\t}\n\n\t\tif (strings.equalsIgnoreCase(_error, value)) {\n\t\t\treturn Severity.Error;\n\t\t}\n\n\t\tif (strings.equalsIgnoreCase(_warning, value) || strings.equalsIgnoreCase(_warn, value)) {\n\t\t\treturn Severity.Warning;\n\t\t}\n\n\t\tif (strings.equalsIgnoreCase(_info, value)) {\n\t\t\treturn Severity.Info;\n\t\t}\n\n\t\treturn Severity.Ignore;\n\t}\n\n\texport function toString(value: Severity): string {\n\t\treturn _displayStrings[value] || strings.empty;\n\t}\n\n\texport function compare(a: Severity, b: Severity): number {\n\t\treturn b - a;\n\t}\n}\n\nexport default Severity;","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport nls = require('vs/nls');\nimport Platform = require('vs/base/common/platform');\nimport EventEmitter = require('vs/base/common/eventEmitter');\nimport Schedulers = require('vs/base/common/async');\nimport errors = require('vs/base/common/errors');\nimport precision = require('vs/base/common/stopwatch');\n\nexport var ENABLE_TIMER = false;\nvar msWriteProfilerMark = Platform.globals['msWriteProfilerMark'];\n\nexport enum Topic {\n\tEDITOR,\n\tLANGUAGES,\n\tWORKER,\n\tWORKBENCH,\n\tSTARTUP\n}\n\nexport interface ITimerEvent {\n\tid: number;\n\ttopic: string;\n\tname: string;\n\tdescription: string;\n\tdata: any;\n\n\tstartTime: Date;\n\tstopTime: Date;\n\n\tstop(stopTime?: Date): void;\n\ttimeTaken(): number;\n}\n\nexport interface IExistingTimerEvent {\n\ttopic: string;\n\tname: string;\n\n\tdescription?: string;\n\n\tstartTime: Date;\n\tstopTime: Date;\n}\n\nclass NullTimerEvent implements ITimerEvent {\n\tpublic id: number;\n\tpublic topic: string;\n\tpublic name: string;\n\tpublic description: string;\n\tpublic data: any;\n\n\tpublic startTime: Date;\n\tpublic stopTime: Date;\n\n\tpublic stop(): void {\n\t\treturn;\n\t}\n\n\tpublic timeTaken(): number {\n\t\treturn -1;\n\t}\n}\n\nclass TimerEvent implements ITimerEvent {\n\tpublic id: number;\n\tpublic topic: string;\n\tpublic name: string;\n\tpublic description: string;\n\tpublic data: any;\n\n\tpublic startTime: Date;\n\tpublic stopTime: Date;\n\n\tprivate timeKeeper: TimeKeeper;\n\tprivate sw: precision.StopWatch;\n\n\tconstructor(timeKeeper: TimeKeeper, name: string, topic: string, startTime?: Date, description?: string) {\n\t\tthis.timeKeeper = timeKeeper;\n\t\tthis.name = name;\n\t\tthis.description = description;\n\t\tthis.topic = topic;\n\t\tthis.stopTime = null;\n\n\t\tif (startTime) {\n\t\t\tthis.startTime = startTime;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.startTime = new Date();\n\t\tthis.sw = precision.StopWatch.create();\n\n\t\tif (msWriteProfilerMark) {\n\t\t\tvar profilerName = ['Monaco', this.topic, this.name, 'start'];\n\t\t\tmsWriteProfilerMark(profilerName.join('|'));\n\t\t}\n\t}\n\n\tpublic stop(stopTime?: Date): void {\n\n\t\t// already stopped\n\t\tif (this.stopTime !== null) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (stopTime) {\n\t\t\tthis.stopTime = stopTime;\n\t\t\tthis.sw = null;\n\t\t\tthis.timeKeeper._onEventStopped(this);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.stopTime = new Date();\n\t\tif (this.sw) {\n\t\t\tthis.sw.stop();\n\t\t}\n\n\t\tthis.timeKeeper._onEventStopped(this);\n\n\t\tif (msWriteProfilerMark) {\n\t\t\tvar profilerName = ['Monaco', this.topic, this.name, 'stop'];\n\t\t\tmsWriteProfilerMark(profilerName.join('|'));\n\t\t}\n\t}\n\n\tpublic timeTaken(): number {\n\t\tif (this.sw) {\n\t\t\treturn this.sw.elapsed();\n\t\t}\n\t\tif (this.stopTime) {\n\t\t\treturn this.stopTime.getTime() - this.startTime.getTime();\n\t\t}\n\t\treturn -1;\n\t}\n}\n\nexport interface IEventsListener {\n\t(events: ITimerEvent[]): void;\n}\n\nexport class TimeKeeper /*extends EventEmitter.EventEmitter*/ {\n\t/**\n\t * After being started for 1 minute, all timers are automatically stopped.\n\t */\n\tprivate static _MAX_TIMER_LENGTH = 60000; // 1 minute\n\t/**\n\t * Every 2 minutes, a sweep of current started timers is done.\n\t */\n\tprivate static _CLEAN_UP_INTERVAL = 120000; // 2 minutes\n\t/**\n\t * Collect at most 1000 events.\n\t */\n\tprivate static _EVENT_CACHE_LIMIT = 1000;\n\n\tprivate static EVENT_ID = 1;\n\tpublic static PARSE_TIME = new Date();\n\n\n\tprivate cleaningIntervalId: Platform.IntervalToken;\n\tprivate collectedEvents: ITimerEvent[];\n\tprivate listeners: IEventsListener[];\n\n\tconstructor() {\n\t\tthis.cleaningIntervalId = -1;\n\t\tthis.collectedEvents = [];\n\t\tthis.listeners = [];\n\t}\n\n\tpublic isEnabled(): boolean {\n\t\treturn ENABLE_TIMER;\n\t}\n\n\tpublic start(topic: Topic|string, name: string, start?: Date, description?: string): ITimerEvent {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn nullEvent;\n\t\t}\n\n\t\tvar strTopic: string;\n\n\t\tif (typeof topic === 'string') {\n\t\t\tstrTopic = topic;\n\t\t} else if (topic === Topic.EDITOR) {\n\t\t\tstrTopic = 'Editor';\n\t\t} else if (topic === Topic.LANGUAGES) {\n\t\t\tstrTopic = 'Languages';\n\t\t} else if (topic === Topic.WORKER) {\n\t\t\tstrTopic = 'Worker';\n\t\t} else if (topic === Topic.WORKBENCH) {\n\t\t\tstrTopic = 'Workbench';\n\t\t} else if (topic === Topic.STARTUP) {\n\t\t\tstrTopic = 'Startup';\n\t\t}\n\n\t\tthis.initAutoCleaning();\n\t\tvar event = new TimerEvent(this, name, strTopic, start, description);\n\t\tthis.addEvent(event);\n\n\t\treturn event;\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.cleaningIntervalId !== -1) {\n\t\t\tPlatform.clearInterval(this.cleaningIntervalId);\n\t\t\tthis.cleaningIntervalId = -1;\n\t\t}\n\t}\n\n\tpublic addListener(listener: IEventsListener): void {\n\t\tthis.listeners.push(listener);\n\t}\n\n\tpublic removeListener(listener: IEventsListener): void {\n\t\tfor (var i = 0; i < this.listeners.length; i++) {\n\t\t\tif (this.listeners[i] === listener) {\n\t\t\t\tthis.listeners.splice(i, 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate addEvent(event: ITimerEvent): void {\n\t\tevent.id = TimeKeeper.EVENT_ID;\n\t\tTimeKeeper.EVENT_ID++;\n\t\tthis.collectedEvents.push(event);\n\t\t// expire items from the front of the cache\n\t\tif (this.collectedEvents.length > TimeKeeper._EVENT_CACHE_LIMIT) {\n\t\t\tthis.collectedEvents.shift();\n\t\t}\n\t}\n\n\tprivate initAutoCleaning(): void {\n\t\tif (this.cleaningIntervalId === -1) {\n\t\t\tthis.cleaningIntervalId = Platform.setInterval(() => {\n\t\t\t\tvar now = Date.now();\n\t\t\t\tthis.collectedEvents.forEach((event) => {\n\t\t\t\t\tif (!event.stopTime && (now - event.startTime.getTime()) >= TimeKeeper._MAX_TIMER_LENGTH) {\n\t\t\t\t\t\tevent.stop();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}, TimeKeeper._CLEAN_UP_INTERVAL);\n\t\t}\n\t}\n\n\tpublic getCollectedEvents(): ITimerEvent[] {\n\t\treturn this.collectedEvents.slice(0);\n\t}\n\n\tpublic clearCollectedEvents(): void {\n\t\tthis.collectedEvents = [];\n\t}\n\n\t_onEventStopped(event: ITimerEvent): void {\n\t\tvar emitEvents = [event];\n\n\t\tvar listeners = this.listeners.slice(0);\n\t\tfor (var i = 0; i < listeners.length; i++) {\n\t\t\ttry {\n\t\t\t\tlisteners[i](emitEvents);\n\t\t\t} catch (e) {\n\t\t\t\terrors.onUnexpectedError(e);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic setInitialCollectedEvents(events: IExistingTimerEvent[], startTime?: Date): void {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (startTime) {\n\t\t\tTimeKeeper.PARSE_TIME = startTime;\n\t\t}\n\n\t\tevents.forEach((event) => {\n\t\t\tvar e = new TimerEvent(this, event.name, event.topic, event.startTime, event.description);\n\t\t\te.stop(event.stopTime);\n\t\t\tthis.addEvent(e);\n\t\t});\n\t}\n}\n\nvar timeKeeper = new TimeKeeper();\nexport var nullEvent: ITimerEvent = new NullTimerEvent();\n\nexport function start(topic: Topic|string, name: string, start?: Date, description?: string): ITimerEvent {\n\treturn timeKeeper.start(topic, name, start, description);\n}\n\nexport function getTimeKeeper(): TimeKeeper {\n\treturn timeKeeper;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\ndefine(\"vs/base/common/winjs.base\", ['./winjs.base.raw', 'vs/base/common/errors'], function (raw, __Errors__) {\n\t'use strict';\n\n\tvar winjs = raw;\n\n\tvar outstandingPromiseErrors = {};\n\tfunction promiseErrorHandler(e) {\n\n\t\t//\n\t\t// e.detail looks like: { exception, error, promise, handler, id, parent }\n\t\t//\n\t\tvar details = e.detail;\n\t\tvar id = details.id;\n\n\t\t// If the error has a parent promise then this is not the origination of the\n\t\t//  error so we check if it has a handler, and if so we mark that the error\n\t\t//  was handled by removing it from outstandingPromiseErrors\n\t\t//\n\t\tif (details.parent) {\n\t\t\tif (details.handler && outstandingPromiseErrors) {\n\t\t\t\tdelete outstandingPromiseErrors[id];\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// Indicate that this error was originated and needs to be handled\n\t\toutstandingPromiseErrors[id] = details;\n\n\t\t// The first time the queue fills up this iteration, schedule a timeout to\n\t\t// check if any errors are still unhandled.\n\t\tif (Object.keys(outstandingPromiseErrors).length === 1) {\n\t\t\tsetTimeout(function () {\n\t\t\t\tvar errors = outstandingPromiseErrors;\n\t\t\t\toutstandingPromiseErrors = {};\n\t\t\t\tObject.keys(errors).forEach(function (errorId) {\n\t\t\t\t\tvar error = errors[errorId];\n\t\t\t\t\tif(error.exception) {\n\t\t\t\t\t\t__Errors__.onUnexpectedError(error.exception);\n\t\t\t\t\t} else if(error.error) {\n\t\t\t\t\t\t__Errors__.onUnexpectedError(error.error);\n\t\t\t\t\t}\n\t\t\t\t\tconsole.log(\"WARNING: Promise with no error callback:\" + error.id);\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t\tif(error.exception) {\n\t\t\t\t\t\tconsole.log(error.exception.stack);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}, 0);\n\t\t}\n\t}\n\n\twinjs.Promise.addEventListener(\"error\", promiseErrorHandler);\n\n\n\tfunction decoratePromise(promise, completeCallback, errorCallback) {\n\t\tvar pc, pe, pp;\n\n\t\tvar resultPromise = new winjs.Promise(\n\t\t\tfunction (c, e, p) {\n\t\t\t\tpc = c;\n\t\t\t\tpe = e;\n\t\t\t\tpp = p;\n\t\t\t}, function () {\n\t\t\t\tpromise.cancel();\n\t\t\t}\n\t\t);\n\n\t\tpromise.then(function (r) {\n\t\t\tif (completeCallback) {\n\t\t\t\tcompleteCallback(r);\n\t\t\t}\n\t\t\tpc(r);\n\t\t}, function (e) {\n\t\t\tif (errorCallback) {\n\t\t\t\terrorCallback(e);\n\t\t\t}\n\t\t\tpe(e);\n\t\t}, pp);\n\n\t\treturn resultPromise;\n\t}\n\n\treturn {\n\t\tdecoratePromise: decoratePromise,\n\t\tClass: winjs.Class,\n\t\txhr: winjs.xhr,\n\t\tPromise: winjs.Promise,\n\t\tTPromise: winjs.Promise,\n\t\tPPromise: winjs.Promise,\n\t\tUtilities: winjs.Utilities\n\t};\n});","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {Promise} from 'vs/base/common/winjs.base';\nimport { IEventEmitter, EventEmitter, ListenerCallback, IBulkListenerCallback, ListenerUnbind } from 'vs/base/common/eventEmitter';\nimport Lifecycle = require('vs/base/common/lifecycle');\nimport Events = require('vs/base/common/events');\n\nexport interface IAction extends Lifecycle.IDisposable {\n\tid: string;\n\tlabel: string;\n\ttooltip: string;\n\tclass: string;\n\tenabled: boolean;\n\tchecked: boolean;\n\trun(event?: any): Promise;\n}\n\nexport interface IActionRunner extends IEventEmitter {\n\trun(action: IAction, context?: any): Promise;\n}\n\nexport interface IActionItem extends IEventEmitter {\n\tactionRunner: IActionRunner;\n\tsetActionContext(context: any): void;\n\trender(element: any /* HTMLElement */): void;\n\tisEnabled(): boolean;\n\tfocus(): void;\n\tblur(): void;\n\tdispose(): void;\n}\n\n/**\n * Checks if the provided object is compatible\n * with the IAction interface.\n * @param thing an object\n */\nexport function isAction(thing: any): thing is IAction {\n\tif (!thing) {\n\t\treturn false;\n\t} else if (thing instanceof Action) {\n\t\treturn true;\n\t} else if (typeof thing.id !== 'string') {\n\t\treturn false;\n\t} else if (typeof thing.label !== 'string') {\n\t\treturn false;\n\t} else if (typeof thing.class !== 'string') {\n\t\treturn false;\n\t} else if (typeof thing.enabled !== 'boolean') {\n\t\treturn false;\n\t} else if (typeof thing.checked !== 'boolean') {\n\t\treturn false;\n\t} else if (typeof thing.run !== 'function') {\n\t\treturn false;\n\t} else {\n\t\treturn true;\n\t}\n}\n\nexport interface IActionCallback {\n\t(event: any): Promise;\n}\n\nexport interface IActionProvider {\n\tgetAction(id: string): IAction;\n}\n\nexport class Action extends EventEmitter implements IAction {\n\n\tstatic LABEL = 'label';\n\tstatic TOOLTIP = 'tooltip';\n\tstatic CLASS = 'class';\n\tstatic ENABLED = 'enabled';\n\tstatic CHECKED = 'checked';\n\n\tpublic _id: string;\n\tpublic _label: string;\n\tpublic _tooltip: string;\n\tpublic _cssClass: string;\n\tpublic _enabled: boolean;\n\tpublic _checked: boolean;\n\tpublic _actionCallback: IActionCallback;\n\tpublic _order: number;\n\n\tconstructor(id: string, label = '', cssClass = '', enabled = true, actionCallback: IActionCallback = null) {\n\t\tsuper();\n\n\t\tthis._id = id;\n\t\tthis._label = label;\n\t\tthis._cssClass = cssClass;\n\t\tthis._enabled = enabled;\n\t\tthis._actionCallback = actionCallback;\n\t}\n\n\tpublic get id(): string {\n\t\treturn this._id;\n\t}\n\n\tpublic get label(): string {\n\t\treturn this._label;\n\t}\n\n\tpublic set label(value: string) {\n\t\tthis._setLabel(value);\n\t}\n\n\t_setLabel(value: string): void {\n\t\tif (this._label !== value) {\n\t\t\tthis._label = value;\n\t\t\tthis.emit(Action.LABEL, { source: this });\n\t\t}\n\t}\n\n\tpublic get tooltip(): string {\n\t\treturn this._tooltip;\n\t}\n\n\tpublic set tooltip(value: string) {\n\t\tthis._setTooltip(value);\n\t}\n\n\t_setTooltip(value: string): void {\n\t\tif (this._tooltip !== value) {\n\t\t\tthis._tooltip = value;\n\t\t\tthis.emit(Action.TOOLTIP, { source: this });\n\t\t}\n\t}\n\n\tpublic get class(): string {\n\t\treturn this._cssClass;\n\t}\n\n\tpublic set class(value: string) {\n\t\tthis._setClass(value);\n\t}\n\n\t_setClass(value: string): void {\n\t\tif (this._cssClass !== value) {\n\t\t\tthis._cssClass = value;\n\t\t\tthis.emit(Action.CLASS, { source: this });\n\t\t}\n\t}\n\n\tpublic get enabled(): boolean {\n\t\treturn this._enabled;\n\t}\n\n\tpublic set enabled(value: boolean) {\n\t\tthis._setEnabled(value);\n\t}\n\n\t_setEnabled(value: boolean): void {\n\t\tif (this._enabled !== value) {\n\t\t\tthis._enabled = value;\n\t\t\tthis.emit(Action.ENABLED, { source: this });\n\t\t}\n\t}\n\n\tpublic get checked(): boolean {\n\t\treturn this._checked;\n\t}\n\n\tpublic set checked(value: boolean) {\n\t\tthis._setChecked(value);\n\t}\n\n\t_setChecked(value: boolean): void {\n\t\tif (this._checked !== value) {\n\t\t\tthis._checked = value;\n\t\t\tthis.emit(Action.CHECKED, { source: this });\n\t\t}\n\t}\n\n\tpublic get order(): number {\n\t\treturn this._order;\n\t}\n\n\tpublic set order(value: number) {\n\t\tthis._order = value;\n\t}\n\n\tpublic get actionCallback(): IActionCallback {\n\t\treturn this._actionCallback;\n\t}\n\n\tpublic set actionCallback(value: IActionCallback) {\n\t\tthis._actionCallback = value;\n\t}\n\n\tpublic run(event?: any): Promise {\n\t\tif (this._actionCallback !== null) {\n\t\t\treturn this._actionCallback(event);\n\t\t} else {\n\t\t\treturn Promise.as(true);\n\t\t}\n\t}\n}\n\nclass ProxyAction extends Action implements IEventEmitter {\n\n\tconstructor(private delegate: Action, private runHandler: (e: any) => void) {\n\t\tsuper(delegate.id, delegate.label, delegate.class, delegate.enabled, null);\n\t}\n\n\tpublic get id(): string {\n\t\treturn this.delegate.id;\n\t}\n\n\tpublic get label(): string {\n\t\treturn this.delegate.label;\n\t}\n\n\tpublic set label(value: string) {\n\t\tthis.delegate.label = value;\n\t}\n\n\tpublic get class(): string {\n\t\treturn this.delegate.class;\n\t}\n\n\tpublic set class(value: string) {\n\t\tthis.delegate.class = value;\n\t}\n\n\tpublic get enabled(): boolean {\n\t\treturn this.delegate.enabled;\n\t}\n\n\tpublic set enabled(value: boolean) {\n\t\tthis.delegate.enabled = value;\n\t}\n\n\tpublic get checked(): boolean {\n\t\treturn this.delegate.checked;\n\t}\n\n\tpublic set checked(value: boolean) {\n\t\tthis.delegate.checked = value;\n\t}\n\n\tpublic run(event?: any): Promise {\n\t\tthis.runHandler(event);\n\t\treturn this.delegate.run(event);\n\t}\n\n\tpublic addListener(eventType: string, listener: ListenerCallback): ListenerUnbind {\n\t\treturn this.delegate.addListener(eventType, listener);\n\t}\n\n\tpublic addBulkListener(listener: IBulkListenerCallback): ListenerUnbind {\n\t\treturn this.delegate.addBulkListener(listener);\n\t}\n\n\tpublic addEmitter(eventEmitter: IEventEmitter, emitterType?: string): ListenerUnbind {\n\t\treturn this.delegate.addEmitter(eventEmitter, emitterType);\n\t}\n\n\tpublic addEmitterTypeListener(eventType: string, emitterType: string, listener: ListenerCallback): ListenerUnbind {\n\t\treturn this.delegate.addEmitterTypeListener(eventType, emitterType, listener);\n\t}\n\n\tpublic emit(eventType: string, data?: any): void {\n\t\tthis.delegate.emit(eventType, data);\n\t}\n}\n\nexport function radioGroup(actions: Action[]): Action[] {\n\n\tfunction newCecker(action: Action): any {\n\t\treturn function() {\n\t\t\tactions.forEach((otherAction: Action) => {\n\t\t\t\totherAction.checked = (otherAction === action);\n\t\t\t});\n\t\t};\n\t};\n\n\treturn actions.map(function(action) {\n\t\treturn new ProxyAction(action, newCecker(action));\n\t});\n\n}\n\nexport interface IRunEvent {\n\taction: IAction;\n\tresult?: any;\n\terror?: any;\n}\n\nexport class ActionRunner extends EventEmitter implements IActionRunner {\n\n\tpublic run(action: IAction, context?: any): Promise {\n\t\tif (!action.enabled) {\n\t\t\treturn Promise.as(null);\n\t\t}\n\n\t\tthis.emit(Events.EventType.BEFORE_RUN, { action: action });\n\n\t\treturn Promise.as(action.run(context)).then((result: any) => {\n\t\t\tthis.emit(Events.EventType.RUN, <IRunEvent>{ action: action, result: result });\n\t\t}, (error: any) => {\n\t\t\tthis.emit(Events.EventType.RUN, <IRunEvent>{ action: action, error: error });\n\t\t});\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport errors = require('vs/base/common/errors');\nimport { Promise, TPromise, ValueCallback, ErrorCallback, ProgressCallback } from 'vs/base/common/winjs.base';\nimport platform = require('vs/base/common/platform');\nimport {CancellationTokenSource} from 'vs/base/common/cancellation';\n\nexport interface PromiseLike<T> {\n\t/**\n\t * Attaches callbacks for the resolution and/or rejection of the Promise.\n\t * @param onfulfilled The callback to execute when the Promise is resolved.\n\t * @param onrejected The callback to execute when the Promise is rejected.\n\t * @returns A Promise for the completion of which ever callback is executed.\n\t*/\n\tthen<TResult>(onfulfilled?: (value: T) => TResult | PromiseLike<TResult>, onrejected?: (reason: any) => TResult | PromiseLike<TResult>): PromiseLike<TResult>;\n\tthen<TResult>(onfulfilled?: (value: T) => TResult | PromiseLike<TResult>, onrejected?: (reason: any) => void): PromiseLike<TResult>;\n}\n\nexport function wrapAsWinJSPromise<T>(callback: (...args: any[]) => PromiseLike<T>, context: any): (...args: any[]) => TPromise<T> {\n\n\tif (!callback) {\n\t\treturn;\n\t}\n\n\tlet result = function(...args: any[]) {\n\n\t\tlet source = new CancellationTokenSource();\n\n\t\treturn new TPromise<T>((c, e) => {\n\n\t\t\targs.push(source.token);\n\t\t\tlet value = callback.apply(context, args);\n\n\t\t\tif (value && typeof value['then'] === 'function') {\n\t\t\t\tvalue.then(c, e);\n\t\t\t} else {\n\t\t\t\tc(value);\n\t\t\t}\n\n\t\t}, function() {\n\t\t\tsource.cancel();\n\t\t});\n\t};\n\n\treturn result;\n}\n\nexport interface ITask<T> {\n\t(): T;\n}\n\n/**\n * A helper to prevent accumulation of sequential async tasks.\n *\n * Imagine a mail man with the sole task of delivering letters. As soon as\n * a letter submitted for delivery, he drives to the destination, delivers it\n * and returns to his base. Imagine that during the trip, N more letters were submitted.\n * When the mail man returns, he picks those N letters and delivers them all in a\n * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\n *\n * The throttler implements this via the queue() method, by providing it a task\n * factory. Following the example:\n *\n * \t\tvar throttler = new Throttler();\n * \t\tvar letters = [];\n *\n * \t\tfunction letterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tthrottler.queue(() => { return makeTheTrip(); });\n * \t\t}\n */\nexport class Throttler {\n\n\tprivate activePromise: Promise;\n\tprivate queuedPromise: Promise;\n\tprivate queuedPromiseFactory: ITask<Promise>;\n\n\tconstructor() {\n\t\tthis.activePromise = null;\n\t\tthis.queuedPromise = null;\n\t\tthis.queuedPromiseFactory = null;\n\t}\n\n\tpublic queue<T>(promiseFactory: ITask<TPromise<T>>): TPromise<T> {\n\t\tif (this.activePromise) {\n\t\t\tthis.queuedPromiseFactory = promiseFactory;\n\n\t\t\tif (!this.queuedPromise) {\n\t\t\t\tvar onComplete = () => {\n\t\t\t\t\tthis.queuedPromise = null;\n\n\t\t\t\t\tvar result = this.queue(this.queuedPromiseFactory);\n\t\t\t\t\tthis.queuedPromiseFactory = null;\n\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\n\t\t\t\tthis.queuedPromise = new Promise((c, e, p) => {\n\t\t\t\t\tthis.activePromise.then(onComplete, onComplete, p).done(c);\n\t\t\t\t}, () => {\n\t\t\t\t\tthis.activePromise.cancel();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn new Promise((c, e, p) => {\n\t\t\t\tthis.queuedPromise.then(c, e, p);\n\t\t\t}, () => {\n\t\t\t\t// no-op\n\t\t\t});\n\t\t}\n\n\t\tthis.activePromise = promiseFactory();\n\n\t\treturn new Promise((c, e, p) => {\n\t\t\tthis.activePromise.done((result: any) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\tc(result);\n\t\t\t}, (err: any) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\te(err);\n\t\t\t}, p);\n\t\t}, () => {\n\t\t\tthis.activePromise.cancel();\n\t\t});\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often.\n *\n * Following the throttler, now imagine the mail man wants to optimize the number of\n * trips proactively. The trip itself can be long, so the he decides not to make the trip\n * as soon as a letter is submitted. Instead he waits a while, in case more\n * letters are submitted. After said waiting period, if no letters were submitted, he\n * decides to make the trip. Imagine that N more letters were submitted after the first\n * one, all within a short period of time between each other. Even though N+1\n * submissions occurred, only 1 delivery was made.\n *\n * The delayer offers this behavior via the trigger() method, into which both the task\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\n * the example:\n *\n * \t\tvar delayer = new Delayer(WAITING_PERIOD);\n * \t\tvar letters = [];\n *\n * \t\tfunction letterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\n * \t\t}\n */\nexport class Delayer<T> {\n\n\tpublic defaultDelay: number;\n\tprivate timeout: number;\n\tprivate completionPromise: Promise;\n\tprivate onSuccess: ValueCallback;\n\tprivate task: ITask<T>;\n\n\tconstructor(defaultDelay: number) {\n\t\tthis.defaultDelay = defaultDelay;\n\t\tthis.timeout = null;\n\t\tthis.completionPromise = null;\n\t\tthis.onSuccess = null;\n\t\tthis.task = null;\n\t}\n\n\tpublic trigger(task: ITask<T>, delay: number = this.defaultDelay): TPromise<T> {\n\t\tthis.task = task;\n\t\tthis.cancelTimeout();\n\n\t\tif (!this.completionPromise) {\n\t\t\tthis.completionPromise = new Promise((c) => {\n\t\t\t\tthis.onSuccess = c;\n\t\t\t}, () => {\n\t\t\t\t// no-op\n\t\t\t}).then(() => {\n\t\t\t\tthis.completionPromise = null;\n\t\t\t\tthis.onSuccess = null;\n\n\t\t\t\tvar result = this.task();\n\t\t\t\tthis.task = null;\n\n\t\t\t\treturn result;\n\t\t\t});\n\t\t}\n\n\t\tthis.timeout = setTimeout(() => {\n\t\t\tthis.timeout = null;\n\t\t\tthis.onSuccess(null);\n\t\t}, delay);\n\n\t\treturn this.completionPromise;\n\t}\n\n\tpublic isTriggered(): boolean {\n\t\treturn this.timeout !== null;\n\t}\n\n\tpublic cancel(): void {\n\t\tthis.cancelTimeout();\n\n\t\tif (this.completionPromise) {\n\t\t\tthis.completionPromise.cancel();\n\t\t\tthis.completionPromise = null;\n\t\t}\n\t}\n\n\tprivate cancelTimeout(): void {\n\t\tif (this.timeout !== null) {\n\t\t\tclearTimeout(this.timeout);\n\t\t\tthis.timeout = null;\n\t\t}\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often, while\n * preventing accumulation of consecutive executions, while the task runs.\n *\n * Simply combine the two mail man strategies from the Throttler and Delayer\n * helpers, for an analogy.\n */\nexport class ThrottledDelayer<T> extends Delayer<TPromise<T>> {\n\n\tprivate throttler: Throttler;\n\n\tconstructor(defaultDelay: number) {\n\t\tsuper(defaultDelay);\n\n\t\tthis.throttler = new Throttler();\n\t}\n\n\tpublic trigger(promiseFactory: ITask<TPromise<T>>, delay?: number): Promise {\n\t\treturn super.trigger(() => this.throttler.queue(promiseFactory), delay);\n\t}\n}\n\n/**\n * Similar to the ThrottledDelayer, except it also guarantees that the promise\n * factory doesn't get called more often than every `minimumPeriod` milliseconds.\n */\nexport class PeriodThrottledDelayer<T> extends ThrottledDelayer<T> {\n\n\tprivate minimumPeriod: number;\n\tprivate periodThrottler: Throttler;\n\n\tconstructor(defaultDelay: number, minimumPeriod: number = 0) {\n\t\tsuper(defaultDelay);\n\n\t\tthis.minimumPeriod = minimumPeriod;\n\t\tthis.periodThrottler = new Throttler();\n\t}\n\n\tpublic trigger(promiseFactory: ITask<TPromise<T>>, delay?: number): Promise {\n\t\treturn super.trigger(() => {\n\t\t\treturn this.periodThrottler.queue(() => {\n\t\t\t\treturn Promise.join([\n\t\t\t\t\tPromise.timeout(this.minimumPeriod),\n\t\t\t\t\tpromiseFactory()\n\t\t\t\t]).then(r => r[1]);\n\t\t\t});\n\t\t}, delay);\n\t}\n}\n\nexport class PromiseSource<T> {\n\n\tprivate _value: TPromise<T>;\n\tprivate _completeCallback: Function;\n\tprivate _errorCallback: Function;\n\n\tconstructor() {\n\t\tthis._value = new TPromise<T>((c, e) => {\n\t\t\tthis._completeCallback = c;\n\t\t\tthis._errorCallback = e;\n\t\t});\n\t}\n\n\tget value(): TPromise<T> {\n\t\treturn this._value;\n\t}\n\n\tcomplete(value?: T): void {\n\t\tthis._completeCallback(value);\n\t}\n\n\terror(err?: any): void {\n\t\tthis._errorCallback(err);\n\t}\n}\n\nexport class ShallowCancelThenPromise<T> extends TPromise<T> {\n\n\tconstructor(outer: TPromise<T>) {\n\n\t\tvar completeCallback: ValueCallback,\n\t\t\terrorCallback: ErrorCallback,\n\t\t\tprogressCallback: ProgressCallback;\n\n\t\tsuper((c, e, p) => {\n\t\t\tcompleteCallback = c,\n\t\t\terrorCallback = e;\n\t\t\tprogressCallback = p;\n\t\t}, () => {\n\t\t\t// cancel this promise but not the\n\t\t\t// outer promise\n\t\t\terrorCallback(errors.canceled());\n\t\t});\n\n\t\touter.then(completeCallback, errorCallback, progressCallback);\n\t}\n}\n\n/**\n * Returns a new promise that joins the provided promise. Upon completion of\n * the provided promise the provided function will always be called. This\n * method is comparable to a try-finally code block.\n * @param promise a promise\n * @param f a function that will be call in the success and error case.\n */\nexport function always<T>(promise: TPromise<T>, f: Function): TPromise<T> {\n\treturn new TPromise<T>((c, e, p) => {\n\t\tpromise.done((result) => {\n\t\t\ttry {\n\t\t\t\tf(result);\n\t\t\t} catch (e1) {\n\t\t\t\terrors.onUnexpectedError(e1);\n\t\t\t}\n\t\t\tc(result);\n\t\t}, (err) => {\n\t\t\ttry {\n\t\t\t\tf(err);\n\t\t\t} catch (e1) {\n\t\t\t\terrors.onUnexpectedError(e1);\n\t\t\t}\n\t\t\te(err);\n\t\t}, (progress) => {\n\t\t\tp(progress);\n\t\t});\n\t}, () => {\n\t\tpromise.cancel();\n\t});\n}\n\n/**\n * Runs the provided list of promise factories in sequential order. The returned\n * promise will complete to an array of results from each promise.\n */\nexport function sequence<T>(promiseFactory: ITask<TPromise<T>>[]): TPromise<T[]> {\n\tvar results: T[] = [];\n\n\t// Reverse since we start with last element using pop()\n\tpromiseFactory = promiseFactory.reverse();\n\n\tfunction next(): Promise {\n\t\tif (promiseFactory.length) {\n\t\t\treturn promiseFactory.pop()();\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tfunction thenHandler(result: any): Promise {\n\t\tif (result) {\n\t\t\tresults.push(result);\n\t\t}\n\n\t\tvar n = next();\n\t\tif (n) {\n\t\t\treturn n.then(thenHandler);\n\t\t}\n\n\t\treturn TPromise.as(results);\n\t}\n\n\treturn Promise.as(null).then(thenHandler);\n}\n\nexport interface IFunction<A, R> {\n\t(...args: A[]): R;\n}\n\nexport function once<A, R>(fn: IFunction<A, R>): IFunction<A, R> {\n\tvar _this = this;\n\tvar didCall = false;\n\tvar result: R;\n\n\treturn function() {\n\t\tif (didCall) {\n\t\t\treturn result;\n\t\t}\n\n\t\tdidCall = true;\n\t\tresult = fn.apply(_this, arguments);\n\n\t\treturn result;\n\t};\n}\n\ninterface ILimitedTaskFactory {\n\tfactory: ITask<Promise>;\n\tc: ValueCallback;\n\te: ErrorCallback;\n\tp: ProgressCallback;\n}\n\n/**\n * A helper to queue N promises and run them all with a max degree of parallelism. The helper\n * ensures that at any time no more than M promises are running at the same time.\n */\nexport class Limiter<T> {\n\tprivate runningPromises: number;\n\tprivate maxDegreeOfParalellism: number;\n\tprivate outstandingPromises: ILimitedTaskFactory[];\n\n\tconstructor(maxDegreeOfParalellism: number) {\n\t\tthis.maxDegreeOfParalellism = maxDegreeOfParalellism;\n\t\tthis.outstandingPromises = [];\n\t\tthis.runningPromises = 0;\n\t}\n\n\tpublic queue(promiseFactory: ITask<Promise>): Promise;\n\tpublic queue(promiseFactory: ITask<TPromise<T>>): TPromise<T> {\n\t\treturn new TPromise<T>((c, e, p) => {\n\t\t\tthis.outstandingPromises.push({\n\t\t\t\tfactory: promiseFactory,\n\t\t\t\tc: c,\n\t\t\t\te: e,\n\t\t\t\tp: p\n\t\t\t});\n\n\t\t\tthis.consume();\n\t\t});\n\t}\n\n\tprivate consume(): void {\n\t\twhile (this.outstandingPromises.length && this.runningPromises < this.maxDegreeOfParalellism) {\n\t\t\tvar iLimitedTask = this.outstandingPromises.shift();\n\t\t\tthis.runningPromises++;\n\n\t\t\tvar promise = iLimitedTask.factory();\n\t\t\tpromise.done(iLimitedTask.c, iLimitedTask.e, iLimitedTask.p);\n\t\t\tpromise.done(() => this.consumed(), () => this.consumed());\n\t\t}\n\t}\n\n\tprivate consumed(): void {\n\t\tthis.runningPromises--;\n\t\tthis.consume();\n\t}\n}\n\nexport class RunOnceScheduler {\n\n\tprivate timeoutToken: platform.TimeoutToken;\n\tprivate runner: () => void;\n\tprivate timeout: number;\n\tprivate timeoutHandler: () => void;\n\n\tconstructor(runner: () => void, timeout: number) {\n\t\tthis.timeoutToken = -1;\n\t\tthis.runner = runner;\n\t\tthis.timeout = timeout;\n\t\tthis.timeoutHandler = this.onTimeout.bind(this);\n\t}\n\n\t/**\n\t * Dispose RunOnceScheduler\n\t */\n\tpublic dispose(): void {\n\t\tthis.cancel();\n\t\tthis.runner = null;\n\t}\n\n\t/**\n\t * Cancel current scheduled runner (if any).\n\t */\n\tpublic cancel(): void {\n\t\tif (this.timeoutToken !== -1) {\n\t\t\tplatform.clearTimeout(this.timeoutToken);\n\t\t\tthis.timeoutToken = -1;\n\t\t}\n\t}\n\n\t/**\n\t * Replace runner. If there is a runner already scheduled, the new runner will be called.\n\t */\n\tpublic setRunner(runner: () => void): void {\n\t\tthis.runner = runner;\n\t}\n\n\t/**\n\t * Set timeout. This change will only impact new schedule calls.\n\t */\n\tpublic setTimeout(timeout: number): void {\n\t\tthis.timeout = timeout;\n\t}\n\n\t/**\n\t * Cancel previous runner (if any) & schedule a new runner.\n\t */\n\tpublic schedule(): void {\n\t\tthis.cancel();\n\t\tthis.timeoutToken = platform.setTimeout(this.timeoutHandler, this.timeout);\n\t}\n\n\tprivate onTimeout() {\n\t\tthis.timeoutToken = -1;\n\t\tif (this.runner) {\n\t\t\tthis.runner();\n\t\t}\n\t}\n}\n\nexport function nfcall(fn: Function, ...args: any[]): Promise;\nexport function nfcall<T>(fn: Function, ...args: any[]): TPromise<T>;\nexport function nfcall(fn: Function, ...args: any[]): any {\n\treturn new Promise((c, e) => fn(...args, (err, result) => err ? e(err) : c(result)));\n}\n\nexport function ninvoke(thisArg: any, fn: Function, ...args: any[]): Promise;\nexport function ninvoke<T>(thisArg: any, fn: Function, ...args: any[]): TPromise<T>;\nexport function ninvoke(thisArg: any, fn: Function, ...args: any[]): any {\n\treturn new Promise((c, e) => fn.call(thisArg, ...args, (err, result) => err ? e(err) : c(result)));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport { Promise } from 'vs/base/common/winjs.base';\nimport { assign } from 'vs/base/common/objects';\nimport { IDisposable, fnToDisposable }  from 'vs/base/common/lifecycle';\nimport Event, { Emitter } from 'vs/base/common/event';\n\nenum RequestType {\n\tCommon,\n\tCancel\n}\n\ninterface IRawRequest {\n\tid: number;\n\ttype: RequestType;\n\tserviceName?: string;\n\tname?: string;\n\targs?: any[];\n}\n\ninterface IRequest {\n\traw: IRawRequest;\n\temitter?: Emitter<any>;\n\tflush?: ()=>void;\n}\n\nenum ResponseType {\n\tInitialize,\n\tSuccess,\n\tProgress,\n\tError,\n\tErrorObj\n}\n\ninterface IRawResponse {\n\tid: number;\n\ttype: ResponseType;\n\tdata: any;\n}\n\ninterface IHandler {\n\t(response: IRawResponse): void;\n}\n\nexport interface IMessagePassingProtocol {\n\tsend(request: any): void;\n\tonMessage(callback: (response: any) => void): void;\n}\n\nexport interface IServiceCtor<T> {\n\tnew? (): T;\n\tnew? (arg0: any): T;\n\tnew? (a0: any, a1: any): T;\n\tnew? (a0: any, a1: any, a2: any): T;\n\tnew? (a0: any, a1: any, a2: any, a3: any): T;\n\tnew? (a0: any, a1: any, a2: any, a3: any, a4: any): T;\n\tprototype: any;\n}\n\nenum ServiceState {\n\tUninitialized,\n\tIdle\n}\n\nexport interface IServiceMap {\n\t[name: string]: any;\n}\n\nconst ServiceEventProperty = '$__SERVICE_EVENT';\n\n/**\n * Use this as a property decorator.\n */\nexport function ServiceEvent<T>(target: T, key: string): void {\n\ttarget[key] = { [ServiceEventProperty]: true };\n}\n\nexport function isServiceEvent(target: any): boolean {\n\treturn target[ServiceEventProperty];\n}\n\nexport class Server {\n\n\tprivate services: IServiceMap;\n\tprivate activeRequests: { [id: number]: IDisposable; };\n\n\tconstructor(private protocol: IMessagePassingProtocol) {\n\t\tthis.services = Object.create(null);\n\t\tthis.activeRequests = Object.create(null);\n\t\tthis.protocol.onMessage(r => this.onMessage(r));\n\t\tthis.protocol.send(<IRawResponse> { type: ResponseType.Initialize });\n\t}\n\n\tregisterService<TService>(serviceName: string, service: TService): void {\n\t\tthis.services[serviceName] = service;\n\t}\n\n\tprivate onMessage(request: IRawRequest): void {\n\t\tswitch (request.type) {\n\t\t\tcase RequestType.Common:\n\t\t\t\tthis.onCommonRequest(request);\n\t\t\t\tbreak;\n\n\t\t\tcase RequestType.Cancel:\n\t\t\t\tthis.onCancelRequest(request);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate onCommonRequest(request: IRawRequest): void {\n\t\tconst service = this.services[request.serviceName];\n\t\tconst servicePrototype = service.constructor.prototype;\n\t\tconst prototypeMethod = servicePrototype && servicePrototype[request.name];\n\t\tconst isEvent = prototypeMethod && prototypeMethod[ServiceEventProperty];\n\t\tconst method = service[request.name];\n\t\tlet promise: Promise;\n\n\t\tif (isEvent) {\n\t\t\tlet disposable: IDisposable;\n\n\t\t\tpromise = new Promise(\n\t\t\t\t(c, e, p) => disposable = method.call(service, p),\n\t\t\t\t() => disposable.dispose()\n\t\t\t);\n\t\t} else {\n\t\t\tif (!method) {\n\t\t\t\tpromise = Promise.wrapError(new Error(`${ request.name } is not a valid method on ${ request.serviceName }`));\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tpromise = method.call(service, ...request.args);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tpromise = Promise.wrapError(err);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!Promise.is(promise)) {\n\t\t\t\tconst message = `'${ request.name }' did not return a promise`;\n\t\t\t\tconsole.warn(message);\n\t\t\t\tpromise = Promise.wrapError(new Error(message));\n\t\t\t}\n\t\t}\n\n\t\tthis.onPromiseRequest(promise, request);\n\t}\n\n\tprivate onPromiseRequest(promise: Promise, request: IRawRequest): void {\n\t\tconst id = request.id;\n\n\t\tconst requestPromise = promise.then(data => {\n\t\t\tthis.protocol.send(<IRawResponse> { id, data, type: ResponseType.Success });\n\t\t\tdelete this.activeRequests[request.id];\n\t\t}, data => {\n\t\t\tif (data instanceof Error) {\n\t\t\t\tthis.protocol.send(<IRawResponse> { id, data: {\n\t\t\t\t\tmessage: data.message,\n\t\t\t\t\tname: data.name,\n\t\t\t\t\tstack: data.stack ? data.stack.split('\\n') : void 0\n\t\t\t\t}, type: ResponseType.Error });\n\t\t\t} else {\n\t\t\t\tthis.protocol.send(<IRawResponse> { id, data, type: ResponseType.ErrorObj });\n\t\t\t}\n\n\t\t\tdelete this.activeRequests[request.id];\n\t\t}, data => {\n\t\t\tthis.protocol.send(<IRawResponse> { id, data, type: ResponseType.Progress });\n\t\t});\n\n\t\tthis.activeRequests[request.id] = fnToDisposable(() => requestPromise.cancel());\n\t}\n\n\tprivate onCancelRequest(request: IRawRequest): void {\n\t\tconst disposable = this.activeRequests[request.id];\n\n\t\tif (disposable) {\n\t\t\tdisposable.dispose();\n\t\t\tdelete this.activeRequests[request.id];\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tObject.keys(this.activeRequests).forEach(id => {\n\t\t\tthis.activeRequests[<any>id].dispose();\n\t\t});\n\n\t\tthis.activeRequests = null;\n\t}\n}\n\nexport class Client {\n\n\tprivate state: ServiceState;\n\tprivate bufferedRequests: IRequest[];\n\tprivate handlers: { [id: number]: IHandler; };\n\tprivate lastRequestId: number;\n\n\tconstructor(private protocol: IMessagePassingProtocol) {\n\t\tthis.state = ServiceState.Uninitialized;\n\t\tthis.bufferedRequests = [];\n\t\tthis.handlers = Object.create(null);\n\t\tthis.lastRequestId = 0;\n\t\tthis.protocol.onMessage(r => this.onMessage(r));\n\t}\n\n\tgetService<TService>(serviceName: string, serviceCtor: IServiceCtor<TService>): TService {\n\t\tconst props = Object.keys(serviceCtor.prototype)\n\t\t\t.filter(key => key !== 'constructor');\n\n\t\treturn <TService> props.reduce((service, key) => {\n\t\t\tif (serviceCtor.prototype[key][ServiceEventProperty]) {\n\t\t\t\tlet promise: Promise;\n\n\t\t\t\tconst emitter = new Emitter<any>({\n\t\t\t\t\tonFirstListenerAdd: () => {\n\t\t\t\t\t\tpromise = this.request(serviceName, key)\n\t\t\t\t\t\t\t.then(null, null, event => emitter.fire(event));\n\t\t\t\t\t},\n\t\t\t\t\tonLastListenerRemove: () => {\n\t\t\t\t\t\tpromise.cancel();\n\t\t\t\t\t\tpromise = null;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn assign(service, { [key]: emitter.event });\n\t\t\t}\n\n\t\t\treturn assign(service, { [key]: (...args) => this.request(serviceName, key, ...args) });\n\t\t}, {});\n\t}\n\n\tprivate request(serviceName: string, name: string, ...args: any[]): Promise {\n\t\tconst request = {\n\t\t\traw: {\n\t\t\t\tid: this.lastRequestId++,\n\t\t\t\ttype: RequestType.Common,\n\t\t\t\tserviceName,\n\t\t\t\tname,\n\t\t\t\targs\n\t\t\t}\n\t\t};\n\n\t\tif (this.state === ServiceState.Uninitialized) {\n\t\t\treturn this.bufferRequest(request);\n\t\t}\n\n\t\treturn this.doRequest(request);\n\t}\n\n\tprivate doRequest(request: IRequest): Promise {\n\t\tconst id = request.raw.id;\n\n\t\treturn new Promise((c, e, p) => {\n\t\t\tthis.handlers[id] = response => {\n\t\t\t\tswitch (response.type) {\n\t\t\t\t\tcase ResponseType.Success:\n\t\t\t\t\t\tdelete this.handlers[id];\n\t\t\t\t\t\tc(response.data);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ResponseType.Error:\n\t\t\t\t\t\tdelete this.handlers[id];\n\t\t\t\t\t\tconst error = new Error(response.data.message);\n\t\t\t\t\t\t(<any> error).stack = response.data.stack;\n\t\t\t\t\t\terror.name = response.data.name;\n\t\t\t\t\t\te(error);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ResponseType.ErrorObj:\n\t\t\t\t\t\tdelete this.handlers[id];\n\t\t\t\t\t\te(response.data);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ResponseType.Progress:\n\t\t\t\t\t\tp(response.data);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.send(request.raw);\n\t\t},\n\t\t() => this.send({ id, type: RequestType.Cancel }));\n\t}\n\n\tprivate bufferRequest(request: IRequest): Promise {\n\t\tlet flushedRequest: Promise = null;\n\n\t\treturn new Promise((c, e, p) => {\n\t\t\tthis.bufferedRequests.push(request);\n\n\t\t\trequest.flush = () => {\n\t\t\t\trequest.flush = null;\n\t\t\t\tflushedRequest = this.doRequest(request).then(c, e, p);\n\t\t\t};\n\t\t}, () => {\n\t\t\trequest.flush = null;\n\n\t\t\tif (this.state !== ServiceState.Uninitialized) {\n\t\t\t\tif (flushedRequest) {\n\t\t\t\t\tflushedRequest.cancel();\n\t\t\t\t\tflushedRequest = null;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst idx = this.bufferedRequests.indexOf(request);\n\n\t\t\tif (idx === -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.bufferedRequests.splice(idx, 1);\n\t\t});\n\t}\n\n\tprivate onMessage(response: IRawResponse): void {\n\t\tif (this.state === ServiceState.Uninitialized && response.type === ResponseType.Initialize) {\n\t\t\tthis.state = ServiceState.Idle;\n\t\t\tthis.bufferedRequests.forEach(r => r.flush && r.flush());\n\t\t\tthis.bufferedRequests = null;\n\t\t\treturn;\n\t\t}\n\n\t\tconst handler = this.handlers[response.id];\n\t\tif (handler) {\n\t\t\thandler(response);\n\t\t}\n\t}\n\n\tprivate send(raw: IRawRequest) {\n\t\ttry {\n\t\t\tthis.protocol.send(raw);\n\t\t} catch (err) {\n\t\t\t// noop\n\t\t}\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport uuid = require('vs/base/common/uuid');\nimport types = require('vs/base/common/types');\nimport strings = require('vs/base/common/strings');\nimport platform = require('vs/base/common/platform');\nimport glob = require('vs/base/common/glob');\nimport events = require('vs/base/common/eventEmitter');\n\nimport flow = require('vs/base/node/flow');\n\nimport fs = require('fs');\nimport paths = require('path');\nimport stream = require('stream');\n\nvar loop = flow.loop;\nvar sequence = flow.sequence;\n\nvar normalizedCache = Object.create(null);\nexport function readdir(path: string, callback: (error: Error, files: string[]) => void): void {\n\n\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t// See also https://github.com/nodejs/node/issues/2165\n\tif (platform.isMacintosh) {\n\t\treturn readdirNormalize(path, (error, children) => {\n\t\t\tif (error) {\n\t\t\t\treturn callback(error, null);\n\t\t\t}\n\n\t\t\treturn callback(null, children.map(c => strings.normalizeNFC(c, normalizedCache)));\n\t\t});\n\t}\n\n\treturn readdirNormalize(path, callback);\n};\n\nfunction readdirNormalize(path: string, callback: (error: Error, files: string[]) => void): void {\n\tfs.readdir(path, (error, children) => {\n\t\tif (error) {\n\t\t\treturn callback(error, null);\n\t\t}\n\n\t\t// Bug in node: In some environments we get \".\" and \"..\" as entries from the call to readdir().\n\t\t// For example Sharepoint via WebDav on Windows includes them. We never want those\n\t\t// entries in the result set though because they are not valid children of the folder\n\t\t// for our concerns.\n\t\t// See https://github.com/nodejs/node/issues/4002\n\t\treturn callback(null, children.filter(c => c !== '.' && c !== '..'));\n\t})\n}\n\nexport function mkdirp(path: string, mode: number, callback: (error: Error) => void): void {\n\tfs.exists(path, (exists) => {\n\t\tif (exists) {\n\t\t\treturn isDirectory(path, (err: Error, itIs?: boolean) => {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\n\t\t\t\tif (!itIs) {\n\t\t\t\t\treturn callback(new Error('\"' + path + '\" is not a directory.'));\n\t\t\t\t}\n\n\t\t\t\tcallback(null);\n\t\t\t});\n\t\t}\n\n\t\tmkdirp(paths.dirname(path), mode, (err: Error) => {\n\t\t\tif (err) { callback(err); return; }\n\n\t\t\tif (mode) {\n\t\t\t\tfs.mkdir(path, mode, (error) => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treturn callback(error);\n\t\t\t\t\t}\n\n\t\t\t\t\tfs.chmod(path, mode, callback); // we need to explicitly chmod because of https://github.com/nodejs/node/issues/1104\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tfs.mkdir(path, null, callback);\n\t\t\t}\n\t\t});\n\t});\n}\n\nfunction isDirectory(path: string, callback: (error: Error, isDirectory?: boolean) => void): void {\n\tfs.stat(path, (error: Error, stat: fs.Stats) => {\n\t\tif (error) { return callback(error); }\n\n\t\tcallback(null, stat.isDirectory());\n\t});\n}\n\nexport function copy(source: string, target: string, callback: (error: Error) => void, copiedSources?: { [path: string]: boolean }): void {\n\tif (!copiedSources) {\n\t\tcopiedSources = Object.create(null);\n\t}\n\n\tfs.stat(source, (error, stat) => {\n\t\tif (error) { return callback(error); }\n\t\tif (!stat.isDirectory()) { return pipeFs(source, target, stat.mode & 511, callback); }\n\n\t\tif (copiedSources[source]) {\n\t\t\treturn callback(null); // escape when there are cycles (can happen with symlinks)\n\t\t} else {\n\t\t\tcopiedSources[source] = true; // remember as copied\n\t\t}\n\n\t\tmkdirp(target, stat.mode & 511, (err) => {\n\t\t\treaddir(source, (err, files) => {\n\t\t\t\tloop(files, (file: string, clb: (error: Error) => void) => {\n\t\t\t\t\tcopy(paths.join(source, file), paths.join(target, file), clb, copiedSources);\n\t\t\t\t}, callback);\n\t\t\t});\n\t\t});\n\t});\n}\n\nfunction pipeFs(source: string, target: string, mode: number, callback: (error: Error) => void): void {\n\tvar callbackHandled = false;\n\n\tvar readStream = fs.createReadStream(source);\n\tvar writeStream = fs.createWriteStream(target, { mode: mode });\n\n\tvar onError = (error: Error) => {\n\t\tif (!callbackHandled) {\n\t\t\tcallbackHandled = true;\n\t\t\tcallback(error);\n\t\t}\n\t};\n\n\treadStream.on('error', onError);\n\twriteStream.on('error', onError);\n\n\treadStream.on('end', () => {\n\t\t(<any>writeStream).end(() => { // In this case the write stream is known to have an end signature with callback\n\t\t\tif (!callbackHandled) {\n\t\t\t\tcallbackHandled = true;\n\n\t\t\t\tfs.chmod(target, mode, callback); // we need to explicitly chmod because of https://github.com/nodejs/node/issues/1104\n\t\t\t}\n\t\t});\n\t});\n\n\t// In node 0.8 there is no easy way to find out when the pipe operation has finished. As such, we use the end property = false\n\t// so that we are in charge of calling end() on the write stream and we will be notified when the write stream is really done.\n\t// We can do this because file streams have an end() method that allows to pass in a callback.\n\t// In node 0.10 there is an event 'finish' emitted from the write stream that can be used. See\n\t// https://groups.google.com/forum/?fromgroups=#!topic/nodejs/YWQ1sRoXOdI\n\treadStream.pipe(writeStream, { end: false });\n}\n\n// Deletes the given path by first moving it out of the workspace. This has two benefits. For one, the operation can return fast because\n// after the rename, the contents are out of the workspace although not yet deleted. The greater benefit however is that this operation\n// will fail in case any file is used by another process. fs.unlink() in node will not bail if a file unlinked is used by another process.\n// However, the consequences are bad as outlined in all the related bugs from https://github.com/joyent/node/issues/7164\nexport function del(path: string, tmpFolder: string, callback: (error: Error) => void, done?: (error: Error) => void): void {\n\tfs.exists(path, (exists) => {\n\t\tif (!exists) {\n\t\t\treturn callback(null);\n\t\t}\n\n\t\tfs.stat(path, (err, stat) => {\n\t\t\tif (err || !stat) {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\n\t\t\t// Special windows workaround: A file or folder that ends with a \".\" cannot be moved to another place\n\t\t\t// because it is not a valid file name. In this case, we really have to do the deletion without prior move.\n\t\t\tif (path[path.length - 1] === '.' || strings.endsWith(path, './') || strings.endsWith(path, '.\\\\')) {\n\t\t\t\treturn rmRecursive(path, callback);\n\t\t\t}\n\n\t\t\tvar pathInTemp = paths.join(tmpFolder, uuid.generateUuid());\n\t\t\tfs.rename(path, pathInTemp, (error: Error) => {\n\t\t\t\tif (error) {\n\t\t\t\t\treturn rmRecursive(path, callback); // if rename fails, delete without tmp dir\n\t\t\t\t}\n\n\t\t\t\t// Return early since the move succeeded\n\t\t\t\tcallback(null);\n\n\t\t\t\t// do the heavy deletion outside the callers callback\n\t\t\t\trmRecursive(pathInTemp, (error) => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\tconsole.error(error);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (done) {\n\t\t\t\t\t\tdone(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t});\n}\n\nfunction rmRecursive(path: string, callback: (error: Error) => void): void {\n\tif (path === '\\\\' || path === '/') {\n\t\treturn callback(new Error('Will not delete root!'));\n\t}\n\n\tfs.exists(path, (exists) => {\n\t\tif (!exists) {\n\t\t\tcallback(null);\n\t\t} else {\n\t\t\tfs.lstat(path, (err, stat) => {\n\t\t\t\tif (err || !stat) {\n\t\t\t\t\tcallback(err);\n\t\t\t\t} else if (!stat.isDirectory() || stat.isSymbolicLink() /* !!! never recurse into links when deleting !!! */) {\n\t\t\t\t\tvar mode = stat.mode;\n\t\t\t\t\tif (!(mode & 128)) { // 128 === 0200\n\t\t\t\t\t\tfs.chmod(path, mode | 128, (err: Error) => { // 128 === 0200\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\tcallback(err);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfs.unlink(path, callback);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfs.unlink(path, callback);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treaddir(path, (err, children) => {\n\t\t\t\t\t\tif (err || !children) {\n\t\t\t\t\t\t\tcallback(err);\n\t\t\t\t\t\t} else if (children.length === 0) {\n\t\t\t\t\t\t\tfs.rmdir(path, callback);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar firstError: Error = null;\n\t\t\t\t\t\t\tvar childrenLeft = children.length;\n\t\t\t\t\t\t\tchildren.forEach((child) => {\n\t\t\t\t\t\t\t\trmRecursive(paths.join(path, child), (err: Error) => {\n\t\t\t\t\t\t\t\t\tchildrenLeft--;\n\t\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\t\tfirstError = firstError || err;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif (childrenLeft === 0) {\n\t\t\t\t\t\t\t\t\t\tif (firstError) {\n\t\t\t\t\t\t\t\t\t\t\tcallback(firstError);\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tfs.rmdir(path, callback);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n}\n\nexport function mv(source: string, target: string, callback: (error: Error) => void): void {\n\tif (source === target) {\n\t\treturn callback(null);\n\t}\n\n\tfunction updateMtime(err: Error): void {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tfs.stat(target, (error: Error, stat: fs.Stats) => {\n\t\t\tif (error) {\n\t\t\t\treturn callback(error);\n\t\t\t}\n\n\t\t\tif (stat.isDirectory()) {\n\t\t\t\treturn callback(null);\n\t\t\t}\n\n\t\t\tfs.open(target, 'a', null, (err: Error, fd: number) => {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\n\t\t\t\tfs.futimes(fd, stat.atime, new Date(), (err: Error) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn callback(err);\n\t\t\t\t\t}\n\n\t\t\t\t\tfs.close(fd, callback);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\t// Try native rename()\n\tfs.rename(source, target, (err: Error) => {\n\t\tif (!err) {\n\t\t\treturn updateMtime(null);\n\t\t}\n\n\t\t// In two cases we fallback to classic copy and delete:\n\t\t//\n\t\t// 1.) The EXDEV error indicates that source and target are on different devices\n\t\t// In this case, fallback to using a copy() operation as there is no way to\n\t\t// rename() between different devices.\n\t\t//\n\t\t// 2.) The user tries to rename a file/folder that ends with a dot. This is not\n\t\t// really possible to move then, at least on UNC devices.\n\t\tif (err && source.toLowerCase() !== target.toLowerCase() && ((<any>err).code === 'EXDEV') || strings.endsWith(source, '.')) {\n\t\t\treturn copy(source, target, (err: Error) => {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\n\t\t\t\trmRecursive(source, updateMtime);\n\t\t\t});\n\t\t}\n\n\t\treturn callback(err);\n\t});\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport { Promise, TPromise } from 'vs/base/common/winjs.base';\nimport extfs = require('vs/base/node/extfs');\nimport paths = require('vs/base/common/paths');\nimport { dirname, join } from 'path';\nimport { nfcall } from 'vs/base/common/async';\nimport fs = require('fs');\n\nexport function isRoot(path: string): boolean {\n\treturn path === dirname(path);\n}\n\nexport function readdir(path: string): TPromise<string[]> {\n\treturn nfcall(extfs.readdir, path);\n}\n\nexport function exists(path: string): TPromise<boolean> {\n\treturn new Promise(c => fs.exists(path, c));\n}\n\nexport function chmod(path: string, mode: number): TPromise<boolean> {\n\treturn nfcall(fs.chmod, path, mode);\n}\n\nexport function mkdirp(path: string, mode?: number): TPromise<boolean> {\n\tconst mkdir = () => nfcall(fs.mkdir, path, mode)\n\t\t.then(null, (err: NodeJS.ErrnoException) => {\n\t\t\tif (err.code === 'EEXIST') {\n\t\t\t\treturn nfcall(fs.stat, path)\n\t\t\t\t\t.then((stat: fs.Stats) => stat.isDirectory\n\t\t\t\t\t\t? null\n\t\t\t\t\t\t: Promise.wrapError(new Error(`'${ path }' exists and is not a directory.`)));\n\t\t\t}\n\n\t\t\treturn TPromise.wrapError<boolean>(err);\n\t\t});\n\n\tif (isRoot(path)) {\n\t\treturn TPromise.as(true);\n\t}\n\n\treturn mkdir().then(null, (err: NodeJS.ErrnoException) => {\n\t\tif (err.code === 'ENOENT') {\n\t\t\treturn mkdirp(dirname(path), mode).then(mkdir);\n\t\t}\n\n\t\treturn TPromise.wrapError<boolean>(err);\n\t});\n}\n\nexport function rimraf(path: string): TPromise<void> {\n\treturn stat(path).then(stat => {\n\t\tif (stat.isDirectory()) {\n\t\t\treturn readdir(path)\n\t\t\t\t.then(children => TPromise.join(children.map(child => rimraf(join(path, child)))))\n\t\t\t\t.then(() => rmdir(path));\n\t\t} else {\n\t\t\treturn unlink(path);\n\t\t}\n\t}, (err: NodeJS.ErrnoException) => {\n\t\tif (err.code === 'ENOENT') {\n\t\t\treturn;\n\t\t}\n\n\t\treturn TPromise.wrapError<void>(err);\n\t});\n}\n\nexport function realpath(path: string): TPromise<string> {\n\treturn nfcall(fs.realpath, path, null);\n}\n\nexport function stat(path: string): TPromise<fs.Stats> {\n\treturn nfcall(fs.stat, path);\n}\n\nexport function mstat(paths: string[]): TPromise<{ path: string; stats: fs.Stats; }> {\n\treturn doStatMultiple(paths.slice(0));\n}\n\nexport function rename(oldPath: string, newPath: string): Promise {\n\treturn nfcall(fs.rename, oldPath, newPath);\n}\n\nexport function rmdir(path: string): Promise {\n\treturn nfcall(fs.rmdir, path);\n}\n\nexport function unlink(path: string): Promise {\n\treturn nfcall(fs.unlink, path);\n}\n\nfunction doStatMultiple(paths: string[]): TPromise<{ path: string; stats: fs.Stats; }> {\n\tvar path = paths.shift();\n\treturn stat(path).then((value) => {\n\t\treturn {\n\t\t\tpath: path,\n\t\t\tstats: value\n\t\t};\n\t}, (err) => {\n\t\tif (paths.length === 0) {\n\t\t\treturn err;\n\t\t}\n\t\treturn mstat(paths);\n\t});\n}\n\nexport function readFile(path: string): TPromise<Buffer>;\nexport function readFile(path: string, encoding: string): TPromise<string>;\nexport function readFile(path: string, encoding?: string): TPromise<Buffer | string> {\n\treturn nfcall(fs.readFile, path, encoding);\n}\n\nexport function writeFile(path: string, data: string, encoding?: string): Promise;\nexport function writeFile(path: string, data: NodeBuffer, encoding?: string): Promise;\nexport function writeFile(path: string, data: any, encoding: string = 'utf8'): Promise {\n\treturn nfcall(fs.writeFile, path, data, encoding);\n}\n\n/**\n* Read a dir and return only subfolders\n*/\nexport function readDirsInDir(dirPath: string): TPromise<string[]> {\n\treturn readdir(dirPath).then((children) => {\n\t\treturn TPromise.join(\n\t\t\tchildren.map((child) => dirExistsWithResult(paths.join(dirPath, child), child))\n\t\t).then((subdirs) => {\n\t\t\treturn removeNull(subdirs);\n\t\t});\n\t});\n}\n\nfunction dirExistsWithResult<T>(path: string, successResult: T): TPromise<T> {\n\treturn dirExists(path).then((exists) => {\n\t\treturn exists ? successResult : null;\n\t});\n}\n\n/**\n* `path` exists and is a directory\n*/\nexport function dirExists(path: string): TPromise<boolean> {\n\treturn stat(path).then(stat => stat.isDirectory(), () => false);\n}\n\n/**\n* `path` exists and is a file.\n*/\nexport function fileExists(path: string): TPromise<boolean> {\n\treturn stat(path).then(stat => stat.isFile(), () => false);\n}\n\n/**\n* Read dir at `path` and return only files matching `pattern`\n*/\nexport function readFiles(path: string, pattern: RegExp): TPromise<string[]> {\n\treturn readdir(path).then((children) => {\n\t\tchildren = children.filter((child) => {\n\t\t\treturn pattern.test(child);\n\t\t});\n\t\tlet fileChildren = children.map((child) => {\n\t\t\treturn fileExistsWithResult(paths.join(path, child), child);\n\t\t});\n\t\treturn TPromise.join(fileChildren).then((subdirs) => {\n\t\t\treturn removeNull(subdirs);\n\t\t});\n\t});\n}\n\nexport function fileExistsWithResult<T>(path: string, successResult: T): TPromise<T> {\n\treturn fileExists(path).then((exists) => {\n\t\treturn exists ? successResult : null;\n\t}, (err) => {\n\t\treturn TPromise.wrapError(err);\n\t});\n}\n\n\nfunction removeNull<T>(arr: T[]): T[] {\n\treturn arr.filter(item => (item !== null));\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport { Promise, TPromise } from 'vs/base/common/winjs.base';\nimport https = require('https');\nimport http = require('http');\nimport { Url, parse as parseUrl } from 'url';\nimport { createWriteStream } from 'fs';\nimport { assign } from 'vs/base/common/objects';\n\nexport interface IRequestOptions {\n\ttype?: string;\n\turl?: string;\n\tuser?: string;\n\tpassword?: string;\n\theaders?: any;\n\ttimeout?: number;\n\tdata?: any;\n\tagent?: any;\n\tfollowRedirects?: number;\n}\n\nexport interface IRequestResult {\n\treq: http.ClientRequest;\n\tres: http.ClientResponse;\n}\n\nexport function request(options: IRequestOptions): TPromise<IRequestResult> {\n\tvar req: http.ClientRequest;\n\n\treturn new TPromise<IRequestResult>((c, e) => {\n\t\tvar endpoint = parseUrl(options.url);\n\n\t\tvar opts: https.RequestOptions = {\n\t\t\thostname: endpoint.hostname,\n\t\t\tport: endpoint.port ? parseInt(endpoint.port) : (endpoint.protocol === 'https:' ? 443 : 80),\n\t\t\tpath: endpoint.path,\n\t\t\tmethod: options.type || 'GET',\n\t\t\theaders: options.headers,\n\t\t\tagent: options.agent\n\t\t};\n\n\t\tif (options.user && options.password) {\n\t\t\topts.auth = options.user + ':' + options.password;\n\t\t}\n\n\t\tvar protocol = endpoint.protocol === 'https:' ? https : http;\n\t\treq = protocol.request(opts, (res: http.ClientResponse) => {\n\t\t\tif (res.statusCode >= 300 && res.statusCode < 400 && options.followRedirects && options.followRedirects > 0 && res.headers['location']) {\n\t\t\t\tc(<any> request(assign({}, options, {\n\t\t\t\t\turl: res.headers['location'],\n\t\t\t\t\tfollowRedirects: options.followRedirects - 1\n\t\t\t\t})));\n\t\t\t} else {\n\t\t\t\tc({ req, res });\n\t\t\t}\n\t\t});\n\t\treq.on('error', e);\n\n\t\toptions.timeout && req.setTimeout(options.timeout);\n\t\toptions.data && req.write(options.data);\n\n\t\treq.end();\n\t},\n\t() => req && req.abort());\n}\n\nexport function download(filePath: string, opts: IRequestOptions): Promise {\n\treturn request(assign(opts, { followRedirects: 3 })).then(pair => new Promise((c, e) => {\n\t\tlet out = createWriteStream(filePath);\n\n\t\tout.once('finish', () => c(null));\n\t\tpair.res.once('error', e);\n\t\tpair.res.pipe(out);\n\t}));\n}\n\nexport function json<T>(opts: IRequestOptions): TPromise<T> {\n\treturn request(opts).then(pair => new Promise((c, e) => {\n\t\tif (!((pair.res.statusCode >= 200 && pair.res.statusCode < 300) || pair.res.statusCode === 1223)) {\n\t\t\treturn e('Server returned ' + pair.res.statusCode);\n\t\t}\n\n\t\tif (pair.res.statusCode === 204) {\n\t\t\treturn c(null);\n\t\t}\n\n\t\tif (!/application\\/json/.test(pair.res.headers['content-type'])) {\n\t\t\treturn e('Response doesn\\'t appear to be JSON');\n\t\t}\n\n\t\tvar buffer: string[] = [];\n\t\tpair.res.on('data', d => buffer.push(d));\n\t\tpair.res.on('end', () => c(JSON.parse(buffer.join(''))));\n\t\tpair.res.on('error', e);\n\t}));\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport net = require('net');\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { Server as IPCServer, Client as IPCClient, IServiceCtor, IServiceMap, IMessagePassingProtocol } from 'vs/base/common/service';\nimport { TPromise } from 'vs/base/common/winjs.base';\n\nfunction bufferIndexOf(buffer: Buffer, value: number, start = 0) {\n\twhile (start < buffer.length && buffer[start] !== value) {\n\t\tstart++;\n\t}\n\n\treturn start;\n}\n\nclass Protocol implements IMessagePassingProtocol {\n\n\tprivate static Boundary = new Buffer([0]);\n\tprivate buffer: Buffer;\n\n\tconstructor(private socket: net.Socket) {\n\t\tthis.buffer = null;\n\t}\n\n\tpublic send(message: any): void {\n\t\tthis.socket.write(JSON.stringify(message));\n\t\tthis.socket.write(Protocol.Boundary);\n\t}\n\n\tpublic onMessage(callback: (message: any) => void): void {\n\t\tthis.socket.on('data', (data: Buffer) => {\n\t\t\tlet lastIndex = 0;\n\t\t\tlet index = 0;\n\n\t\t\twhile ((index = bufferIndexOf(data, 0, lastIndex)) < data.length) {\n\t\t\t\tconst dataToParse = data.slice(lastIndex, index);\n\n\t\t\t\tif (this.buffer) {\n\t\t\t\t\tcallback(JSON.parse(Buffer.concat([this.buffer, dataToParse]).toString('utf8')));\n\t\t\t\t\tthis.buffer = null;\n\t\t\t\t} else {\n\t\t\t\t\tcallback(JSON.parse(dataToParse.toString('utf8')));\n\t\t\t\t}\n\n\t\t\t\tlastIndex = index + 1;\n\t\t\t}\n\n\t\t\tif (index - lastIndex > 0) {\n\t\t\t\tconst dataToBuffer = data.slice(lastIndex, index);\n\n\t\t\t\tif (this.buffer) {\n\t\t\t\t\tthis.buffer = Buffer.concat([this.buffer, dataToBuffer]);\n\t\t\t\t} else {\n\t\t\t\t\tthis.buffer = dataToBuffer;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport class Server implements IDisposable {\n\n\tprivate services: IServiceMap;\n\n\tconstructor(private server: net.Server) {\n\t\tthis.services = Object.create(null);\n\n\t\tthis.server.on('connection', (socket: net.Socket) => {\n\t\t\tconst ipcServer = new IPCServer(new Protocol(socket));\n\n\t\t\tObject.keys(this.services)\n\t\t\t\t.forEach(name => ipcServer.registerService(name, this.services[name]));\n\n\t\t\tsocket.once('close', () => ipcServer.dispose());\n\t\t});\n\t}\n\n\tregisterService<TService>(serviceName: string, service: TService) {\n\t\tthis.services[serviceName] = service;\n\t}\n\n\tdispose(): void {\n\t\tthis.services = null;\n\t\tthis.server.close();\n\t\tthis.server = null;\n\t}\n}\n\nexport class Client implements IDisposable {\n\n\tprivate ipcClient: IPCClient;\n\n\tconstructor(private socket: net.Socket) {\n\t\tthis.ipcClient = new IPCClient(new Protocol(socket));\n\t}\n\n\tgetService<TService>(serviceName: string, serviceCtor: IServiceCtor<TService>): TService {\n\t\treturn this.ipcClient.getService(serviceName, serviceCtor);\n\t}\n\n\tdispose(): void {\n\t\tthis.socket.end();\n\t\tthis.socket = null;\n\t\tthis.ipcClient = null;\n\t}\n}\n\nexport function serve(port: number): TPromise<Server>;\nexport function serve(namedPipe: string): TPromise<Server>;\nexport function serve(hook: any): TPromise<Server> {\n\treturn new TPromise<Server>((c, e) => {\n\t\tconst server = net.createServer();\n\n\t\tserver.on('error', e);\n\t\tserver.listen(hook, () => {\n\t\t\tserver.removeListener('error', e);\n\t\t\tc(new Server(server));\n\t\t});\n\t});\n}\n\nexport function connect(port: number): TPromise<Client>;\nexport function connect(namedPipe: string): TPromise<Client>;\nexport function connect(hook: any): TPromise<Client> {\n\treturn new TPromise<Client>((c, e) => {\n\t\tconst socket = net.createConnection(hook, () => {\n\t\t\tsocket.removeListener('error', e);\n\t\t\tc(new Client(socket));\n\t\t});\n\n\t\tsocket.once('error', e);\n\t});\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport Strings = require('vs/base/common/strings');\nimport Modes = require('vs/editor/common/modes');\nimport EditorCommon = require('vs/editor/common/editorCommon');\nimport Errors = require('vs/base/common/errors');\n\nclass InflatedToken implements Modes.IToken {\n\tstartIndex:number;\n\ttype:string;\n\tbracket:Modes.Bracket;\n\n\tconstructor(startIndex:number, type:string, bracket:Modes.Bracket) {\n\t\tthis.startIndex = startIndex;\n\t\tthis.type = type;\n\t\tthis.bracket = bracket;\n\t}\n\n\tpublic toString(): string {\n\t\treturn '{ ' + this.startIndex + ', \\'' + this.type + '\\', ' + this.bracket + '}';\n\t}\n}\n\nexport var START_INDEX_MASK = 0xffffffff;\nexport var TYPE_MASK = 0xffff;\nexport var BRACKET_MASK = 0xff;\nexport var START_INDEX_OFFSET = 1;\nexport var TYPE_OFFSET = Math.pow(2, 32);\nexport var BRACKET_OFFSET = Math.pow(2, 48);\n\nvar DEFAULT_TOKEN = {\n\tstartIndex: 0,\n\ttype: '',\n\tbracket: 0\n};\nvar INFLATED_TOKENS_EMPTY_TEXT = <Modes.IToken[]>[];\nvar DEFLATED_TOKENS_EMPTY_TEXT = <number[]>[];\nvar INFLATED_TOKENS_NON_EMPTY_TEXT = <Modes.IToken[]>[DEFAULT_TOKEN];\nvar DEFLATED_TOKENS_NON_EMPTY_TEXT = <number[]>[0];\n\nexport function deflateArr(map:EditorCommon.ITokensInflatorMap, tokens:Modes.IToken[]): number[] {\n\tif (tokens.length === 0) {\n\t\treturn DEFLATED_TOKENS_EMPTY_TEXT;\n\t}\n\tif (tokens.length === 1 && tokens[0].startIndex === 0 && !tokens[0].type && !tokens[0].bracket) {\n\t\treturn DEFLATED_TOKENS_NON_EMPTY_TEXT;\n\t}\n\n\tvar i:number,\n\t\tlen:number,\n\t\tdeflatedToken:number,\n\t\tdeflatedBracket:number,\n\t\tdeflated:number,\n\t\ttoken:Modes.IToken,\n\t\tinflateMap = map._inflate,\n\t\tdeflateMap = map._deflate,\n\t\tprevStartIndex:number = -1,\n\t\tresult:number[] = new Array(tokens.length);\n\n\tfor (i = 0, len = tokens.length; i < len; i++) {\n\t\ttoken = tokens[i];\n\n\t\tif (token.startIndex <= prevStartIndex) {\n\t\t\ttoken.startIndex = prevStartIndex + 1;\n\t\t\tErrors.onUnexpectedError({\n\t\t\t\tmessage: 'Invalid tokens detected',\n\t\t\t\ttokens: tokens\n\t\t\t});\n\t\t}\n\n\t\tif (deflateMap.hasOwnProperty(token.type)) {\n\t\t\tdeflatedToken = deflateMap[token.type];\n\t\t} else {\n\t\t\tdeflatedToken = inflateMap.length;\n\t\t\tdeflateMap[token.type] = deflatedToken;\n\t\t\tinflateMap.push(token.type);\n\t\t}\n\n\t\tdeflatedBracket = token.bracket;\n\t\tif (deflatedBracket < 0) {\n\t\t\tdeflatedBracket = 2;\n\t\t}\n\n\t\t// http://stackoverflow.com/a/2803010\n\t\t// All numbers in JavaScript are actually IEEE-754 compliant floating-point doubles.\n\t\t// These have a 53-bit mantissa which should mean that any integer value with a magnitude\n\t\t// of approximately 9 quadrillion or less -- more specifically, 9,007,199,254,740,991 --\n\t\t// will be represented accurately.\n\n\t\t// http://stackoverflow.com/a/6729252\n\t\t// Bitwise operations cast numbers to 32bit representation in JS\n\n\t\t// 32 bits for startIndex => up to 2^32 = 4,294,967,296\n\t\t// 16 bits for token => up to 2^16 = 65,536\n\t\t// 2 bits for bracket => up to 2^2 = 4\n\n\t\t// [bracket][token][startIndex]\n\t\tdeflated = deflatedBracket * BRACKET_OFFSET + deflatedToken * TYPE_OFFSET + token.startIndex * START_INDEX_OFFSET;\n\n\t\tresult[i] = deflated;\n\n\t\tprevStartIndex = token.startIndex;\n\t}\n\n\treturn result;\n}\n\nexport function inflate(map:EditorCommon.ITokensInflatorMap, binaryEncodedToken:number): Modes.IToken {\n\tif (binaryEncodedToken === 0) {\n\t\treturn DEFAULT_TOKEN;\n\t}\n\n\tvar startIndex = (binaryEncodedToken / START_INDEX_OFFSET) & START_INDEX_MASK;\n\tvar deflatedType = (binaryEncodedToken / TYPE_OFFSET) & TYPE_MASK;\n\tvar deflatedBracket = (binaryEncodedToken / BRACKET_OFFSET) & BRACKET_MASK;\n\n\tif (deflatedBracket === 2) {\n\t\tdeflatedBracket = -1;\n\t}\n\n\treturn new InflatedToken(startIndex, map._inflate[deflatedType], deflatedBracket);\n}\n\nexport function getStartIndex(binaryEncodedToken:number): number {\n\treturn (binaryEncodedToken / START_INDEX_OFFSET) & START_INDEX_MASK;\n}\n\nexport function getType(map:EditorCommon.ITokensInflatorMap, binaryEncodedToken:number): string {\n\tvar deflatedType = (binaryEncodedToken / TYPE_OFFSET) & TYPE_MASK;\n\tif (deflatedType === 0) {\n\t\treturn Strings.empty;\n\t}\n\treturn map._inflate[deflatedType];\n}\n\nexport function getBracket(binaryEncodedToken:number): Modes.Bracket {\n\tvar deflatedBracket = (binaryEncodedToken / BRACKET_OFFSET) & BRACKET_MASK;\n\n\tif (deflatedBracket === 2) {\n\t\tdeflatedBracket = -1;\n\t}\n\n\treturn deflatedBracket;\n}\n\nexport function inflateArr(map:EditorCommon.ITokensInflatorMap, binaryEncodedTokens:number[]): Modes.IToken[] {\n\tif (binaryEncodedTokens.length === 0) {\n\t\treturn INFLATED_TOKENS_EMPTY_TEXT;\n\t}\n\tif (binaryEncodedTokens.length === 1 && binaryEncodedTokens[0] === 0) {\n\t\treturn INFLATED_TOKENS_NON_EMPTY_TEXT;\n\t}\n\n\tvar result: Modes.IToken[] = new Array(binaryEncodedTokens.length),\n\t\ti:number,\n\t\tlen:number,\n\t\tdeflated:number,\n\t\tstartIndex:number,\n\t\tdeflatedBracket:number,\n\t\tdeflatedType:number,\n\t\tinflateMap = map._inflate;\n\n\tfor (i = 0, len = binaryEncodedTokens.length; i < len; i++) {\n\t\tdeflated = binaryEncodedTokens[i];\n\n\t\tstartIndex = (deflated / START_INDEX_OFFSET) & START_INDEX_MASK;\n\t\tdeflatedType = (deflated / TYPE_OFFSET) & TYPE_MASK;\n\t\tdeflatedBracket = (deflated / BRACKET_OFFSET) & BRACKET_MASK;\n\n\t\tif (deflatedBracket === 2) {\n\t\t\tdeflatedBracket = -1;\n\t\t}\n\n\t\tresult[i] = new InflatedToken(startIndex, inflateMap[deflatedType], deflatedBracket);\n\t}\n\n\treturn result;\n}\n\nexport function findIndexOfOffset(binaryEncodedTokens:number[], offset:number): number {\n\treturn findIndexInSegmentsArray(binaryEncodedTokens, offset);\n}\n\nexport function sliceAndInflate(map:EditorCommon.ITokensInflatorMap, binaryEncodedTokens:number[], startOffset:number, endOffset:number, deltaStartIndex:number): Modes.IToken[] {\n\tif (binaryEncodedTokens.length === 0) {\n\t\treturn INFLATED_TOKENS_EMPTY_TEXT;\n\t}\n\tif (binaryEncodedTokens.length === 1 && binaryEncodedTokens[0] === 0) {\n\t\treturn INFLATED_TOKENS_NON_EMPTY_TEXT;\n\t}\n\n\tvar startIndex = findIndexInSegmentsArray(binaryEncodedTokens, startOffset),\n\t\ti:number,\n\t\tlen:number,\n\t\toriginalToken:number,\n\t\toriginalStartIndex:number,\n\t\tnewStartIndex:number,\n\t\tdeflatedType:number,\n\t\tdeflatedBracket:number,\n\t\tresult: Modes.IToken[] = [],\n\t\tinflateMap = map._inflate;\n\n\toriginalToken = binaryEncodedTokens[startIndex];\n\tdeflatedType = (originalToken / TYPE_OFFSET) & TYPE_MASK;\n\tdeflatedBracket = (originalToken / BRACKET_OFFSET) & BRACKET_MASK;\n\tnewStartIndex = 0;\n\tresult.push(new InflatedToken(newStartIndex, inflateMap[deflatedType], deflatedBracket));\n\n\tfor (i = startIndex + 1, len = binaryEncodedTokens.length; i < len; i++) {\n\t\toriginalToken = binaryEncodedTokens[i];\n\t\toriginalStartIndex = (originalToken / START_INDEX_OFFSET) & START_INDEX_MASK;\n\n\t\tif (originalStartIndex >= endOffset) {\n\t\t\tbreak;\n\t\t}\n\n\t\tdeflatedType = (originalToken / TYPE_OFFSET) & TYPE_MASK;\n\t\tdeflatedBracket = (originalToken / BRACKET_OFFSET) & BRACKET_MASK;\n\t\tnewStartIndex = originalStartIndex - startOffset + deltaStartIndex;\n\t\tresult.push(new InflatedToken(newStartIndex, inflateMap[deflatedType], deflatedBracket));\n\t}\n\n\treturn result;\n}\n\nexport function findIndexInSegmentsArray(arr:number[], desiredIndex: number):number {\n\n\tvar low = 0,\n\t\thigh = arr.length - 1,\n\t\tmid:number,\n\t\tvalue:number;\n\n\twhile (low < high) {\n\n\t\tmid = low + Math.ceil((high - low)/2);\n\n\t\tvalue = arr[mid] & 0xffffffff;\n\n\t\tif (value > desiredIndex) {\n\t\t\thigh = mid - 1;\n\t\t} else {\n\t\t\tlow = mid;\n\t\t}\n\t}\n\n\treturn low;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {IEventEmitter, ListenerUnbind} from 'vs/base/common/eventEmitter';\nimport Modes = require('vs/editor/common/modes');\nimport TokensBinaryEncoding = require('vs/editor/common/model/tokensBinaryEncoding');\nimport {IInstantiationService, INewConstructorSignature1, IConstructorSignature2, INewConstructorSignature2} from 'vs/platform/instantiation/common/instantiation';\nimport {IAction} from 'vs/base/common/actions';\nimport {IHTMLContentElement} from 'vs/base/common/htmlContent';\nimport URI from 'vs/base/common/uri';\nimport Event from 'vs/base/common/event';\nimport {IDisposable} from 'vs/base/common/lifecycle';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {KeyCode, KeyMod} from 'vs/base/common/keyCodes';\n\nexport type KeyCode = KeyCode;\nexport type KeyMod = KeyMod;\n\n// --- position & range\n\n/**\n * A position in the editor. This interface is suitable for serialization.\n */\nexport interface IPosition {\n\t/**\n\t * line number (starts at 1)\n\t */\n\tlineNumber:number;\n\t/**\n\t * column (the first character in a line is between column 1 and column 2)\n\t */\n\tcolumn:number;\n}\n\n/**\n * A position in the editor.\n */\nexport interface IEditorPosition extends IPosition {\n\t/**\n\t * Test if this position equals other position\n\t */\n\tequals(other:IPosition): boolean;\n\t/**\n\t * Test if this position is before other position. If the two positions are equal, the result will be false.\n\t */\n\tisBefore(other:IPosition): boolean;\n\t/**\n\t * Test if this position is before other position. If the two positions are equal, the result will be true.\n\t */\n\tisBeforeOrEqual(other:IPosition): boolean;\n\t/**\n\t * Clone this position.\n\t */\n\tclone(): IEditorPosition;\n}\n\n/**\n * A range in the editor. This interface is suitable for serialization.\n */\nexport interface IRange {\n\t/**\n\t * Line number on which the range starts (starts at 1).\n\t */\n\tstartLineNumber:number;\n\t/**\n\t * Column on which the range starts in line `startLineNumber` (starts at 1).\n\t */\n\tstartColumn:number;\n\t/**\n\t * Line number on which the range ends.\n\t */\n\tendLineNumber:number;\n\t/**\n\t * Column on which the range ends in line `endLineNumber`.\n\t */\n\tendColumn:number;\n}\n\n/**\n * A range in the editor.\n */\nexport interface IEditorRange extends IRange {\n\t/**\n\t * Test if this range is empty.\n\t */\n\tisEmpty(): boolean;\n\tcollapseToStart():IEditorRange;\n\t/**\n\t * Test if position is in this range. If the position is at the edges, will return true.\n\t */\n\tcontainsPosition(position:IPosition): boolean;\n\t/**\n\t * Test if range is in this range. If the range is equal to this range, will return true.\n\t */\n\tcontainsRange(range:IRange): boolean;\n\t/**\n\t * A reunion of the two ranges. The smallest position will be used as the start point, and the largest one as the end point.\n\t */\n\tplusRange(range:IRange): IEditorRange;\n\t/**\n\t * A intersection of the two ranges.\n\t */\n\tintersectRanges(range:IRange): IEditorRange;\n\t/**\n\t * Test if this range equals other.\n\t */\n\tequalsRange(other:IRange): boolean;\n\t/**\n\t * Return the end position (which will be after or equal to the start position)\n\t */\n\tgetEndPosition(): IEditorPosition;\n\t/**\n\t * Create a new range using this range's start position, and using endLineNumber and endColumn as the end position.\n\t */\n\tsetEndPosition(endLineNumber: number, endColumn: number): IEditorRange;\n\t/**\n\t * Return the start position (which will be before or equal to the end position)\n\t */\n\tgetStartPosition(): IEditorPosition;\n\t/**\n\t * Create a new range using this range's end position, and using startLineNumber and startColumn as the start position.\n\t */\n\tsetStartPosition(startLineNumber: number, startColumn: number): IEditorRange;\n\t/**\n\t * Clone this range.\n\t */\n\tcloneRange(): IEditorRange;\n\t/**\n\t * Transform to a user presentable string representation.\n\t */\n\ttoString(): string;\n}\n\n/**\n * A selection in the editor.\n * The selection is a range that has an orientation.\n */\nexport interface ISelection {\n\t/**\n\t * The line number on which the selection has started.\n\t */\n\tselectionStartLineNumber: number;\n\t/**\n\t * The column on `selectionStartLineNumber` where the selection has started.\n\t */\n\tselectionStartColumn: number;\n\t/**\n\t * The line number on which the selection has ended.\n\t */\n\tpositionLineNumber: number;\n\t/**\n\t * The column on `positionLineNumber` where the selection has ended.\n\t */\n\tpositionColumn: number;\n}\n\n/**\n * The direction of a selection.\n */\nexport enum SelectionDirection {\n\t/**\n\t * The selection starts above where it ends.\n\t */\n\tLTR,\n\t/**\n\t * The selection starts below where it ends.\n\t */\n\tRTL\n};\n\n/**\n * A selection in the editor.\n */\nexport interface IEditorSelection extends ISelection, IEditorRange {\n\t/**\n\t * Test if equals other selection.\n\t */\n\tequalsSelection(other:ISelection): boolean;\n\t/**\n\t * Clone this selection.\n\t */\n\tclone(): IEditorSelection;\n\t/**\n\t * Get directions (LTR or RTL).\n\t */\n\tgetDirection(): SelectionDirection;\n\t/**\n\t * Create a new selection with a different `positionLineNumber` and `positionColumn`.\n\t */\n\tsetEndPosition(endLineNumber: number, endColumn: number): IEditorSelection;\n\t/**\n\t * Create a new selection with a different `selectionStartLineNumber` and `selectionStartColumn`.\n\t */\n\tsetStartPosition(startLineNumber: number, startColumn: number): IEditorSelection;\n}\n\n/**\n * Configuration options for editor scrollbars\n */\nexport interface IEditorScrollbarOptions {\n\t/**\n\t * The size of arrows (if displayed).\n\t * Defaults to 11.\n\t */\n\tarrowSize?:number;\n\t/**\n\t * Render vertical scrollbar.\n\t * Accepted values: 'auto', 'visible', 'hidden'.\n\t * Defaults to 'auto'.\n\t */\n\tvertical?:string;\n\t/**\n\t * Render horizontal scrollbar.\n\t * Accepted values: 'auto', 'visible', 'hidden'.\n\t * Defaults to 'auto'.\n\t */\n\thorizontal?:string;\n\t/**\n\t * Cast horizontal and vertical shadows when the content is scrolled.\n\t * Defaults to false.\n\t */\n\tuseShadows?:boolean;\n\t/**\n\t * Render arrows at the top and bottom of the vertical scrollbar.\n\t * Defaults to false.\n\t */\n\tverticalHasArrows?:boolean;\n\t/**\n\t * Render arrows at the left and right of the horizontal scrollbar.\n\t * Defaults to false.\n\t */\n\thorizontalHasArrows?:boolean;\n\t/**\n\t * Listen to mouse wheel events and react to them by scrolling.\n\t * Defaults to true.\n\t */\n\thandleMouseWheel?: boolean;\n\t/**\n\t * Height in pixels for the horizontal scrollbar.\n\t * Defaults to 10 (px).\n\t */\n\thorizontalScrollbarSize?: number;\n\t/**\n\t * Width in pixels for the vertical scrollbar.\n\t * Defaults to 10 (px).\n\t */\n\tverticalScrollbarSize?: number;\n\tverticalSliderSize?: number;\n\thorizontalSliderSize?: number;\n}\n\nexport enum WrappingIndent {\n\tNone = 0,\n\tSame = 1,\n\tIndent = 2\n}\n\nexport function wrappingIndentFromString(wrappingIndent:string): WrappingIndent {\n\tif (wrappingIndent === 'indent') {\n\t\treturn WrappingIndent.Indent;\n\t} else if (wrappingIndent === 'same') {\n\t\treturn WrappingIndent.Same;\n\t} else {\n\t\treturn WrappingIndent.None;\n\t}\n}\n\n/**\n * Configuration options for the editor. Common between configuring the editor and the options the editor has computed\n */\nexport interface ICommonEditorOptions {\n\t/**\n\t * Control the rendering of line numbers.\n\t * If it is a function, it will be invoked when rendering a line number and the return value will be rendered.\n\t * Otherwise, if it is a truey, line numbers will be rendered normally (equivalent of using an identity function).\n\t * Otherwise, line numbers will not be rendered.\n\t * Defaults to true.\n\t */\n\tlineNumbers?:any;\n\t/**\n\t * Should the corresponding line be selected when clicking on the line number?\n\t * Defaults to true.\n\t */\n\tselectOnLineNumbers?:boolean;\n\t/**\n\t * Control the width of line numbers, by reserving horizontal space for rendering at least an amount of digits.\n\t * Defaults to 5.\n\t */\n\tlineNumbersMinChars?:number;\n\t/**\n\t * Enable the rendering of the glyph margin.\n\t * Defaults to false.\n\t */\n\tglyphMargin?:boolean;\n\t/**\n\t * The width reserved for line decorations (in px).\n\t * Line decorations are placed between line numbers and the editor content.\n\t * Defaults to 10.\n\t */\n\tlineDecorationsWidth?:number;\n\t/**\n\t * When revealing the cursor, a virtual padding (px) is added to the cursor, turning it into a rectangle.\n\t * This virtual padding ensures that the cursor gets revealed before hitting the edge of the viewport.\n\t * Defaults to 30 (px).\n\t */\n\trevealHorizontalRightPadding?:number;\n\t/**\n\t * Render the editor selection with rounded borders.\n\t * Defaults to true.\n\t */\n\troundedSelection?:boolean;\n\t/**\n\t * Theme to be used for rendering. Consists of two parts, the UI theme and the syntax theme,\n\t * separated by a space.\n\t * The current available UI themes are: 'vs' (default), 'vs-dark', 'hc-black'\n\t * The syntax themes are contributed. The default is 'default-theme'\n\t */\n\ttheme?:string;\n\t/**\n\t * Should the editor be read only.\n\t * Defaults to false.\n\t */\n\treadOnly?:boolean;\n\t/**\n\t * Control the behavior and rendering of the scrollbars.\n\t */\n\tscrollbar?:IEditorScrollbarOptions;\n\t/**\n\t * The number of vertical lanes the overview ruler should render.\n\t * Defaults to 2.\n\t */\n\toverviewRulerLanes?:number;\n\t/**\n\t * Control the cursor blinking animation.\n\t * Defaults to 'blink'.\n\t */\n\tcursorBlinking?:string;\n\t/**\n\t * Should the cursor be hidden in the overview ruler.\n\t * Defaults to false.\n\t */\n\thideCursorInOverviewRuler?:boolean;\n\t/**\n\t * Enable that scrolling can go one screen size after the last line.\n\t * Defaults to true.\n\t */\n\tscrollBeyondLastLine?:boolean;\n\t/**\n\t * Enable that the editor will install an interval to check if its container dom node size has changed.\n\t * Enabling this might have a severe performance impact.\n\t * Defaults to false.\n\t */\n\tautomaticLayout?:boolean;\n\t/**\n\t * Control the wrapping strategy of the editor.\n\t * Using -1 means no wrapping whatsoever.\n\t * Using 0 means viewport width wrapping (ajusts with the resizing of the editor).\n\t * Using a positive number means wrapping after a fixed number of characters.\n\t * Defaults to 300.\n\t */\n\twrappingColumn?:number;\n\t/**\n\t * Control indentation of wrapped lines. Can be: 'none', 'same' or 'indent'.\n\t * Defaults to 'none'.\n\t */\n\twrappingIndent?: string;\n\t/**\n\t * Configure word wrapping characters. A break will be introduced before these characters.\n\t * Defaults to '{([+'.\n\t */\n\twordWrapBreakBeforeCharacters?: string;\n\t/**\n\t * Configure word wrapping characters. A break will be introduced after these characters.\n\t * Defaults to ' \\t})]?|&,;'.\n\t */\n\twordWrapBreakAfterCharacters?: string;\n\t/**\n\t * Configure word wrapping characters. A break will be introduced after these characters only if no `wordWrapBreakBeforeCharacters` or `wordWrapBreakAfterCharacters` were found.\n\t * Defaults to '.'.\n\t */\n\twordWrapBreakObtrusiveCharacters?: string;\n\n//\tautoSize?:boolean;\n\t/**\n\t * Control what pressing Tab does.\n\t * If it is false, pressing Tab or Shift-Tab will be handled by the editor.\n\t * If it is true, pressing Tab or Shift-Tab will move the browser focus.\n\t * Defaults to false.\n\t */\n\ttabFocusMode?:boolean;\n\n\t/**\n\t * Performance guard: Stop tokenizing a line after x characters.\n\t * Defaults to 10000 if wrappingColumn is -1. Defaults to -1 if wrappingColumn is >= 0.\n\t * Use -1 to never stop tokenization.\n\t */\n\tstopLineTokenizationAfter?:number;\n\t/**\n\t * Performance guard: Stop rendering a line after x characters.\n\t * Defaults to 10000 if wrappingColumn is -1. Defaults to -1 if wrappingColumn is >= 0.\n\t * Use -1 to never stop rendering\n\t */\n\tstopRenderingLineAfter?:number;\n\t/**\n\t * Performance guard: Force viewport width wrapping if more than half of the\n\t * characters in a model are on lines of length >= `longLineBoundary`.\n\t * Defaults to 300.\n\t */\n\tlongLineBoundary?:number;\n\t/**\n\t * Performance guard: Tokenize in the background if the [wrapped] lines count is above\n\t * this number. If the [wrapped] lines count is below this number, then the view will\n\t * always force tokenization before rendering.\n\t * Defaults to 1000.\n\t */\n\tforcedTokenizationBoundary?:number;\n\t/**\n\t * Enable hover.\n\t * Defaults to true.\n\t */\n\thover?:boolean;\n\t/**\n\t * Enable custom contextmenu.\n\t * Defaults to true.\n\t */\n\tcontextmenu?:boolean;\n\t/**\n\t * A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events.\n\t * Defaults to 1.\n\t */\n\tmouseWheelScrollSensitivity?: number;\n\t/**\n\t * Enable quick suggestions (shaddow suggestions)\n\t * Defaults to true.\n\t */\n\tquickSuggestions?:boolean;\n\t/**\n\t * Quick suggestions show delay (in ms)\n\t * Defaults to 500 (ms)\n\t */\n\tquickSuggestionsDelay?:number;\n\t/**\n\t * Render icons in suggestions box.\n\t * Defaults to true.\n\t */\n\ticonsInSuggestions?:boolean;\n\t/**\n\t * Enable auto closing brackets.\n\t * Defaults to true.\n\t */\n\tautoClosingBrackets?:boolean;\n\t/**\n\t * Enable format on type.\n\t * Defaults to false.\n\t */\n\tformatOnType?:boolean;\n\t/**\n\t * Enable the suggestion box to pop-up on trigger characters.\n\t * Defaults to true.\n\t */\n\tsuggestOnTriggerCharacters?:boolean;\n\t/**\n\t * Enable selection highlight.\n\t * Defaults to true.\n\t */\n\tselectionHighlight?:boolean;\n\t/**\n\t * Show lines before classes and methods (based on outline info).\n\t * Defaults to false.\n\t */\n\toutlineMarkers?: boolean;\n\t/**\n\t * Show reference infos (a.k.a. code lenses) for modes that support it\n\t * Defaults to true.\n\t */\n\treferenceInfos?: boolean;\n\t/**\n\t * Enable rendering of leading whitespace.\n\t * Defaults to false.\n\t */\n\trenderWhitespace?: boolean;\n}\n\n/**\n * Configuration options for the editor.\n */\nexport interface IEditorOptions extends ICommonEditorOptions {\n\t/**\n\t * Tab size in spaces. This is used for rendering and for editing.\n\t * 'auto' means the model attached to the editor will be scanned and this property will be guessed.\n\t * Defaults to 4.\n\t */\n\ttabSize?:any;\n\t/**\n\t * Insert spaces instead of tabs when indenting or when auto-indenting.\n\t * 'auto' means the model attached to the editor will be scanned and this property will be guessed.\n\t * Defaults to true.\n\t */\n\tinsertSpaces?:any;\n\t/**\n\t * The font family\n\t */\n\tfontFamily?: string;\n\t/**\n\t * The font size\n\t */\n\tfontSize?: number;\n\t/**\n\t * The line height\n\t */\n\tlineHeight?: number;\n}\n\n/**\n * Configuration options for the diff editor.\n */\nexport interface IDiffEditorOptions extends IEditorOptions {\n\t/**\n\t * Allow the user to resize the diff editor split view.\n\t * Defaults to true.\n\t */\n\tenableSplitViewResizing?: boolean;\n\t/**\n\t * Render the differences in two side-by-side editors.\n\t * Defaults to true.\n\t */\n\trenderSideBySide?: boolean;\n\t/**\n\t * Compute the diff by ignoring leading/trailing whitespace\n\t * Defaults to true.\n\t */\n\tignoreTrimWhitespace?: boolean;\n}\n\n/**\n * Internal indentation options (computed) for the editor.\n */\nexport interface IInternalIndentationOptions {\n\t/**\n\t * Tab size in spaces. This is used for rendering and for editing.\n\t */\n\ttabSize:number;\n\t/**\n\t * Insert spaces instead of tabs when indenting or when auto-indenting.\n\t */\n\tinsertSpaces:boolean;\n}\n\nexport interface IInternalEditorScrollbarOptions {\n\tarrowSize:number;\n\tvertical:string;\n\thorizontal:string;\n\tuseShadows:boolean;\n\tverticalHasArrows:boolean;\n\thorizontalHasArrows:boolean;\n\thandleMouseWheel: boolean;\n\thorizontalScrollbarSize: number;\n\thorizontalSliderSize: number;\n\tverticalScrollbarSize: number;\n\tverticalSliderSize: number;\n\tmouseWheelScrollSensitivity: number;\n}\n\nexport interface IEditorWrappingInfo {\n\tisViewportWrapping: boolean;\n\twrappingColumn: number;\n}\n\n/**\n * Internal configuration options (transformed or computed) for the editor.\n */\nexport interface IInternalEditorOptions {\n\n\t// ---- Options that are transparent - get no massaging\n\tlineNumbers:any;\n\tselectOnLineNumbers:boolean;\n\tglyphMargin:boolean;\n\trevealHorizontalRightPadding:number;\n\troundedSelection:boolean;\n\ttheme:string;\n\treadOnly:boolean;\n\tscrollbar:IInternalEditorScrollbarOptions;\n\toverviewRulerLanes:number;\n\tcursorBlinking:string;\n\thideCursorInOverviewRuler:boolean;\n\tscrollBeyondLastLine:boolean;\n\twrappingIndent: string;\n\twordWrapBreakBeforeCharacters: string;\n\twordWrapBreakAfterCharacters: string;\n\twordWrapBreakObtrusiveCharacters: string;\n\ttabFocusMode:boolean;\n\tstopLineTokenizationAfter:number;\n\tstopRenderingLineAfter: number;\n\tlongLineBoundary:number;\n\tforcedTokenizationBoundary:number;\n\n\t// ---- Options that are transparent - get no massaging\n\thover:boolean;\n\tcontextmenu:boolean;\n\tquickSuggestions:boolean;\n\tquickSuggestionsDelay:number;\n\ticonsInSuggestions:boolean;\n\tautoClosingBrackets:boolean;\n\tformatOnType:boolean;\n\tsuggestOnTriggerCharacters:boolean;\n\tselectionHighlight:boolean;\n\toutlineMarkers: boolean;\n\treferenceInfos: boolean;\n\trenderWhitespace: boolean;\n\n\t// ---- Options that are computed\n\n\tlayoutInfo: IEditorLayoutInfo;\n\n\tstylingInfo: IEditorStyling;\n\n\twrappingInfo: IEditorWrappingInfo;\n\n\tindentInfo: IInternalIndentationOptions;\n\n\t/**\n\t * Computed width of the container of the editor in px.\n\t */\n\tobservedOuterWidth:number;\n\t/**\n\t * Computed height of the container of the editor in px.\n\t */\n\tobservedOuterHeight:number;\n\t/**\n\t * Computed line height (deduced from theme and CSS) in px.\n\t */\n\tlineHeight:number;\n\t/**\n\t * Computed page size (deduced from editor size) in lines.\n\t */\n\tpageSize:number;\n\t/**\n\t * Computed width of 'm' (deduced from theme and CSS) in px.\n\t */\n\ttypicalHalfwidthCharacterWidth:number;\n\t/**\n\t * Computed width of fullwidth 'm' (U+FF4D)\n\t */\n\ttypicalFullwidthCharacterWidth:number;\n\t/**\n\t * Computed font size.\n\t */\n\tfontSize:number;\n}\n\n/**\n * An event describing that the configuration of the editor has changed.\n */\nexport interface IConfigurationChangedEvent {\n\tlayoutInfo:boolean;\n\tstylingInfo:boolean;\n\twrappingInfo:boolean;\n\tindentInfo:boolean;\n\tobservedOuterWidth:boolean;\n\tobservedOuterHeight:boolean;\n\tlineHeight:boolean;\n\tpageSize:boolean;\n\ttypicalHalfwidthCharacterWidth:boolean;\n\ttypicalFullwidthCharacterWidth:boolean;\n\tfontSize:boolean;\n\tlineNumbers:boolean;\n\tselectOnLineNumbers:boolean;\n\tglyphMargin:boolean;\n\trevealHorizontalRightPadding:boolean;\n\troundedSelection:boolean;\n\ttheme:boolean;\n\treadOnly:boolean;\n\tscrollbar:boolean;\n\toverviewRulerLanes:boolean;\n\tcursorBlinking:boolean;\n\thideCursorInOverviewRuler:boolean;\n\tscrollBeyondLastLine:boolean;\n\twrappingIndent:boolean;\n\twordWrapBreakBeforeCharacters: boolean;\n\twordWrapBreakAfterCharacters: boolean;\n\twordWrapBreakObtrusiveCharacters: boolean;\n\ttabFocusMode:boolean;\n\tstopLineTokenizationAfter:boolean;\n\tstopRenderingLineAfter:boolean;\n\tlongLineBoundary:boolean;\n\tforcedTokenizationBoundary:boolean;\n\thover:boolean;\n\tcontextmenu:boolean;\n\tquickSuggestions:boolean;\n\tquickSuggestionsDelay:boolean;\n\ticonsInSuggestions:boolean;\n\tautoClosingBrackets:boolean;\n\tformatOnType:boolean;\n\tsuggestOnTriggerCharacters:boolean;\n\tselectionHighlight:boolean;\n\toutlineMarkers: boolean;\n\treferenceInfos: boolean;\n}\n\n/**\n * An event describing that one or more supports of a mode have changed.\n */\nexport interface IModeSupportChangedEvent {\n\ttokenizationSupport:boolean;\n\toccurrencesSupport:boolean;\n\tdeclarationSupport:boolean;\n\ttypeDeclarationSupport:boolean;\n\tnavigateTypesSupport:boolean;\n\treferenceSupport:boolean;\n\tsuggestSupport:boolean;\n\tparameterHintsSupport:boolean;\n\textraInfoSupport:boolean;\n\toutlineSupport:boolean;\n\tlogicalSelectionSupport:boolean;\n\tformattingSupport:boolean;\n\tinplaceReplaceSupport:boolean;\n\tdiffSupport:boolean;\n\tdirtyDiffSupport:boolean;\n\temitOutputSupport:boolean;\n\tlinkSupport:boolean;\n\tconfigSupport:boolean;\n\telectricCharacterSupport:boolean;\n\tcommentsSupport:boolean;\n\tcharacterPairSupport:boolean;\n\ttokenTypeClassificationSupport:boolean;\n\tquickFixSupport: boolean;\n\tcodeLensSupport: boolean;\n\tonEnterSupport: boolean;\n}\n\n/**\n * Vertical Lane in the overview ruler of the editor.\n */\nexport enum OverviewRulerLane {\n\tLeft = 1,\n\tCenter = 2,\n\tRight = 4,\n\tFull = 7\n}\n\n/**\n * Options for rendering a model decoration in the overview ruler.\n */\nexport interface IModelDecorationOverviewRulerOptions {\n\t/**\n\t * CSS color to render in the overview ruler.\n\t * e.g.: rgba(100, 100, 100, 0.5)\n\t */\n\tcolor: string;\n\t/**\n\t * CSS color to render in the overview ruler.\n\t * e.g.: rgba(100, 100, 100, 0.5)\n\t */\n\tdarkColor: string;\n\t/**\n\t * The position in the overview ruler.\n\t */\n\tposition: OverviewRulerLane;\n}\n\n/**\n * Options for a model decoration.\n */\nexport interface IModelDecorationOptions {\n\t/**\n\t * Customize the growing behaviour of the decoration when typing at the edges of the decoration.\n\t * Defaults to TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges\n\t */\n\tstickiness?:TrackedRangeStickiness;\n\t/**\n\t * CSS class name describing the decoration.\n\t */\n\tclassName?:string;\n\t/**\n\t * Message to be rendered when hovering over the decoration.\n\t */\n\thoverMessage?:string;\n\t/**\n\t * Array of IHTMLContentElements to render as the decoration message.\n\t */\n\thtmlMessage?:IHTMLContentElement[];\n\t/**\n\t * Should the decoration expand to encompass a whole line.\n\t */\n\tisWholeLine?:boolean;\n\t/**\n\t * @deprecated : Use `overviewRuler` instead\n\t */\n\tshowInOverviewRuler?:string;\n\t/**\n\t * If set, render this decoration in the overview ruler.\n\t */\n\toverviewRuler?:IModelDecorationOverviewRulerOptions;\n\t/**\n\t * If set, the decoration will be rendered in the glyph margin with this CSS class name.\n\t */\n\tglyphMarginClassName?:string;\n\t/**\n\t * If set, the decoration will be rendered in the lines decorations with this CSS class name.\n\t */\n\tlinesDecorationsClassName?:string;\n\t/**\n\t * If set, the decoration will be rendered inline with the text with this CSS class name.\n\t * Please use this only for CSS rules that must impact the text. For example, use `className`\n\t * to have a background color decoration.\n\t */\n\tinlineClassName?:string;\n}\n\n/**\n * New model decorations.\n */\nexport interface IModelDeltaDecoration {\n\t/**\n\t * Range that this decoration covers.\n\t */\n\trange: IRange;\n\t/**\n\t * Options associated with this decoration.\n\t */\n\toptions: IModelDecorationOptions;\n}\n\n/**\n * A tracked range in the model.\n */\nexport interface IModelTrackedRange {\n\t/**\n\t * Identifier for a tracked range\n\t */\n\tid: string;\n\t/**\n\t * Range that this tracked range covers\n\t */\n\trange: IRange;\n}\n\n/**\n * A decoration in the model.\n */\nexport interface IModelDecoration {\n\t/**\n\t * Identifier for a decoration.\n\t */\n\tid: string;\n\t/**\n\t * Identifier for a decoration's owener.\n\t */\n\townerId: number;\n\t/**\n\t * Range that this decoration covers.\n\t */\n\trange: IRange;\n\t/**\n\t * Options associated with this decoration.\n\t */\n\toptions: IModelDecorationOptions;\n}\n\n/**\n * An accessor that can add, change or remove model decorations.\n */\nexport interface IModelDecorationsChangeAccessor {\n\t/**\n\t * Add a new decoration.\n\t * @param range Range that this decoration covers.\n\t * @param options Options associated with this decoration.\n\t * @return An unique identifier associated with this decoration.\n\t */\n\taddDecoration(range:IRange, options:IModelDecorationOptions): string;\n\t/**\n\t * Change the range that an existing decoration covers.\n\t * @param id The unique identifier associated with the decoration.\n\t * @param newRange The new range that this decoration covers.\n\t */\n\tchangeDecoration(id:string, newRange:IRange): void;\n\t/**\n\t * Change the options associated with an existing decoration.\n\t * @param id The unique identifier associated with the decoration.\n\t * @param newOptions The new options associated with this decoration.\n\t */\n\tchangeDecorationOptions(id: string, newOptions:IModelDecorationOptions): void;\n\t/**\n\t * Remove an existing decoration.\n\t * @param id The unique identifier associated with the decoration.\n\t */\n\tremoveDecoration(id:string): void;\n\t/**\n\t * Perform a minimum ammount of operations, in order to transform the decorations\n\t * identified by `oldDecorations` to the decorations described by `newDecorations`\n\t * and returns the new identifiers associated with the resulting decorations.\n\t *\n\t * @param oldDecorations Array containing previous decorations identifiers.\n\t * @param newDecorations Array describing what decorations should result after the call.\n\t * @return An array containing the new decorations identifiers.\n\t */\n\tdeltaDecorations(oldDecorations:string[], newDecorations:IModelDeltaDecoration[]): string[];\n}\n\n/**\n * Word inside a model.\n */\nexport interface IWordAtPosition {\n\t/**\n\t * The word.\n\t */\n\tword: string;\n\t/**\n\t * The column where the word starts.\n\t */\n\tstartColumn: number;\n\t/**\n\t * The column where the word ends.\n\t */\n\tendColumn: number;\n}\n\n/**\n * Range of a word inside a model.\n */\nexport interface IWordRange {\n\t/**\n\t * The column where the word starts.\n\t */\n\tstart:number;\n\t/**\n\t * The column where the word ends.\n\t */\n\tend:number;\n}\n\nexport interface ITokenInfo {\n\ttoken: Modes.IToken;\n\tlineNumber: number;\n\tstartColumn: number;\n\tendColumn: number;\n}\n\nexport interface ITokenIterator {\n\thasNext(): boolean;\n\tnext(): ITokenInfo;\n\thasPrev(): boolean;\n\tprev(): ITokenInfo;\n}\n\n/**\n * End of line character preference.\n */\nexport enum EndOfLinePreference {\n\t/**\n\t * Use the end of line character identified in the text buffer.\n\t */\n\tTextDefined = 0,\n\t/**\n\t * Use line feed (\\n) as the end of line character.\n\t */\n\tLF = 1,\n\t/**\n\t * Use carriage return and line feed (\\r\\n) as the end of line character.\n\t */\n\tCRLF = 2\n}\n\n/**\n * End of line character preference.\n */\nexport enum EndOfLineSequence {\n\t/**\n\t * Use line feed (\\n) as the end of line character.\n\t */\n\tLF = 0,\n\t/**\n\t * Use carriage return and line feed (\\r\\n) as the end of line character.\n\t */\n\tCRLF = 1\n}\n\n/**\n * The result of a matchBracket operation.\n */\nexport interface IMatchBracketResult {\n\t/**\n\t * The two ranges describing matching brackets, or null\n\t */\n\tbrackets:IEditorRange[];\n\t/**\n\t * Indicates that the bracket match result is not accurate because the search\n\t * hit some untokenized lines.\n\t */\n\tisAccurate:boolean;\n}\n\n/**\n * A read-only line marker in the model.\n */\nexport interface IReadOnlyLineMarker {\n\tid: string;\n\tcolumn: number;\n}\n\n/**\n * And identifier for a single edit operation.\n */\nexport interface ISingleEditOperationIdentifier {\n\t/**\n\t * Identifier major\n\t */\n\tmajor:number;\n\t/**\n\t * Identifier minor\n\t */\n\tminor:number;\n}\n\n/**\n * A builder and helper for edit operations for a command.\n */\nexport interface IEditOperationBuilder {\n\t/**\n\t * Add a new edit operation (a replace operation).\n\t * @param range The range to replace (delete). May be empty to represent a simple insert.\n\t * @param text The text to replace with. May be null to represent a simple delete.\n\t */\n\taddEditOperation(range:IEditorRange, text:string): void;\n\n\t/**\n\t * Track `selection` when applying edit operations.\n\t * A best effort will be made to not grow/expand the selection.\n\t * An empty selection will clamp to a nearby character.\n\t * @param selection The selection to track.\n\t * @param trackPreviousOnEmpty If set, and the selection is empty, indicates whether the selection\n\t *           should clamp to the previous or the next character.\n\t * @return A unique identifer.\n\t */\n\ttrackSelection(selection:IEditorSelection, trackPreviousOnEmpty?:boolean): string;\n}\n\n/**\n * A helper for computing cursor state after a command.\n */\nexport interface ICursorStateComputerData {\n\t/**\n\t * Get the inverse edit operations of the added edit operations.\n\t */\n\tgetInverseEditOperations(): IIdentifiedSingleEditOperation[];\n\t/**\n\t * Get a previously tracked selection.\n\t * @param id The unique identifier returned by `trackSelection`.\n\t * @return The selection.\n\t */\n\tgetTrackedSelection(id:string): IEditorSelection;\n}\n\n/**\n * A command that modifies text / cursor state on a model.\n */\nexport interface ICommand {\n\t/**\n\t * Get the edit operations needed to execute this command.\n\t * @param model The model the command will execute on.\n\t * @param builder A helper to collect the needed edit operations and to track selections.\n\t */\n\tgetEditOperations(model:ITokenizedModel, builder:IEditOperationBuilder): void;\n\t/**\n\t * Compute the cursor state after the edit operations were applied.\n\t * @param model The model the commad has executed on.\n\t * @param helper A helper to get inverse edit operations and to get previously tracked selections.\n\t * @return The cursor state after the command executed.\n\t */\n\tcomputeCursorState(model:ITokenizedModel, helper:ICursorStateComputerData): IEditorSelection;\n}\n\n/**\n * A single edit operation, that acts as a simple replace.\n * i.e. Replace text at `range` with `text` in model.\n */\nexport interface ISingleEditOperation {\n\t/**\n\t * The range to replace. This can be empty to emulate a simple insert.\n\t */\n\trange: IRange;\n\t/**\n\t * The text to replace with. This can be null to emulate a simple delete.\n\t */\n\ttext: string;\n\t/**\n\t * This indicates that this operation has \"insert\" semantics.\n\t * i.e. forceMoveMarkers = true => if `range` is collapsed, all markers at the position will be moved.\n\t */\n\tforceMoveMarkers?: boolean;\n}\n\n/**\n * A single edit operation, that has an identifier.\n */\nexport interface IIdentifiedSingleEditOperation {\n\t/**\n\t * An identifier associated with this single edit operation.\n\t */\n\tidentifier: ISingleEditOperationIdentifier;\n\t/**\n\t * The range to replace. This can be empty to emulate a simple insert.\n\t */\n\trange: IEditorRange;\n\t/**\n\t * The text to replace with. This can be null to emulate a simple delete.\n\t */\n\ttext: string;\n\t/**\n\t * This indicates that this operation has \"insert\" semantics.\n\t * i.e. forceMoveMarkers = true => if `range` is collapsed, all markers at the position will be moved.\n\t */\n\tforceMoveMarkers: boolean;\n}\n\n\n/**\n * A callback that can compute the cursor state after applying a series of edit operations.\n */\nexport interface ICursorStateComputer {\n\t/**\n\t * A callback that can compute the resulting cursors state after some edit operations have been executed.\n\t */\n\t(inverseEditOperations:IIdentifiedSingleEditOperation[]): IEditorSelection[];\n}\n\n/**\n * A token on a line.\n */\nexport interface ILineToken {\n\tstartIndex: number;\n\ttype: string;\n}\n\nexport interface ITokensInflatorMap {\n\t_inflate:string[];\n\t_deflate: { [token:string]:number; };\n}\n\nexport interface ILineTokensBinaryEncoding {\n\tSTART_INDEX_MASK: number;\n\tTYPE_MASK: number;\n\tBRACKET_MASK: number;\n\tSTART_INDEX_OFFSET: number;\n\tTYPE_OFFSET: number;\n\tBRACKET_OFFSET: number;\n\n\tdeflateArr(map:ITokensInflatorMap, tokens:Modes.IToken[]): number[];\n\tinflate(map:ITokensInflatorMap, binaryEncodedToken:number): Modes.IToken;\n\tgetStartIndex(binaryEncodedToken:number): number;\n\tgetType(map:ITokensInflatorMap, binaryEncodedToken:number): string;\n\tgetBracket(binaryEncodedToken:number): Modes.Bracket;\n\tinflateArr(map:ITokensInflatorMap, binaryEncodedTokens:number[]): Modes.IToken[];\n\tfindIndexOfOffset(binaryEncodedTokens:number[], offset:number): number;\n\tsliceAndInflate(map:ITokensInflatorMap, binaryEncodedTokens:number[], startOffset:number, endOffset:number, deltaStartIndex:number): Modes.IToken[];\n}\nexport var LineTokensBinaryEncoding:ILineTokensBinaryEncoding = TokensBinaryEncoding;\n\n/**\n * A list of tokens on a line.\n */\nexport interface ILineTokens {\n\t/**\n\t * Get the binary representation of tokens.\n\t */\n\tgetBinaryEncodedTokens(): number[];\n\n\t/**\n\t * A map to help decoding the token type.\n\t */\n\tgetBinaryEncodedTokensMap(): ITokensInflatorMap;\n\n\tgetTokenCount(): number;\n\tgetTokenStartIndex(tokenIndex:number): number;\n\tgetTokenType(tokenIndex:number): string;\n\tgetTokenBracket(tokenIndex:number): Modes.Bracket;\n\tgetTokenEndIndex(tokenIndex:number, textLength:number): number;\n\n\t/**\n\t * Check if tokens have changed. This is called by the view to validate rendered lines\n\t * and decide which lines need re-rendering.\n\t */\n\tequals(other:ILineTokens): boolean;\n\n\t/**\n\t * Find the token containing offset `offset`.\n\t *    For example, with the following tokens [0, 5), [5, 9), [9, infinity)\n\t *    Searching for 0, 1, 2, 3 or 4 will return 0.\n\t *    Searching for 5, 6, 7 or 8 will return 1.\n\t *    Searching for 9, 10, 11, ... will return 2.\n\t * @param offset The search offset\n\t * @return The index of the token containing the offset.\n\t */\n\tfindIndexOfOffset(offset:number): number;\n}\n\n/**\n * Result for a ITextModel.guessIndentation\n */\nexport interface IGuessedIndentation {\n\t/**\n\t * If indentation is based on spaces (`insertSpaces` = true), then what is the number of spaces that make an indent?\n\t */\n\ttabSize: number;\n\t/**\n\t * Is indentation based on spaces?\n\t */\n\tinsertSpaces: boolean;\n}\n\n/**\n * A textual read-only model.\n */\nexport interface ITextModel {\n\n\t/**\n\t * Get the current version id of the model.\n\t * Anytime a change happens to the model (even undo/redo),\n\t * the version id is incremented.\n\t */\n\tgetVersionId(): number;\n\n\t/**\n\t * Get the alternative version id of the model.\n\t * This alternative version id is not always incremented,\n\t * it will return the same values in the case of undo-redo.\n\t */\n\tgetAlternativeVersionId(): number;\n\n\t/**\n\t * Replace the entire text buffer value contained in this model.\n\t */\n\tsetValue(newValue:string): void;\n\n\t/**\n\t * Get the text stored in this model.\n\t * @param eol The end of line character preference. Defaults to `EndOfLinePreference.TextDefined`.\n\t * @param preserverBOM Preserve a BOM character if it was detected when the model was constructed.\n\t * @return The text.\n\t */\n\tgetValue(eol?:EndOfLinePreference, preserveBOM?:boolean): string;\n\n\tgetValueLength(eol?:EndOfLinePreference, preserveBOM?:boolean): number;\n\n\ttoRawText(): IRawText;\n\n\t/**\n\t * Get the text in a certain range.\n\t * @param range The range describing what text to get.\n\t * @param eol The end of line character preference. This will only be used for multiline ranges. Defaults to `EndOfLinePreference.TextDefined`.\n\t * @return The text.\n\t */\n\tgetValueInRange(range:IRange, eol?:EndOfLinePreference): string;\n\n\t/**\n\t * Get the length of text in a certain range.\n\t * @param range The range describing what text length to get.\n\t * @return The text length.\n\t */\n\tgetValueLengthInRange(range:IRange): number;\n\n\t/**\n\t * Splits characters in two buckets. First bucket (A) is of characters that\n\t * sit in lines with length < `longLineBoundary`. Second bucket (B) is of\n\t * characters that sit in lines with length >= `longLineBoundary`.\n\t * If count(B) > count(A) return true. Returns false otherwise.\n\t */\n\tisDominatedByLongLines(longLineBoundary:number): boolean;\n\n\t/**\n\t * Guess the text indentation.\n\t * @param defaultTabSize The tab size to use if `insertSpaces` is false.\n\t * If `insertSpaces` is true, then `tabSize` is relevant.\n\t * If `insertSpaces` is false, then `tabSize` is `defaultTabSize`.\n\t */\n\tguessIndentation(defaultTabSize:number): IGuessedIndentation;\n\n\t/**\n\t * Get the number of lines in the model.\n\t */\n\tgetLineCount(): number;\n\n\t/**\n\t * Get the text for a certain line.\n\t */\n\tgetLineContent(lineNumber:number): string;\n\n\t/**\n\t * Get the text for all lines.\n\t */\n\tgetLinesContent(): string[];\n\n\t/**\n\t * Get the end of line character predominantly used in the text buffer.\n\t * @return EOL char sequence (e.g.: '\\n' or '\\r\\n').\n\t */\n\tgetEOL(): string;\n\n\tsetEOL(eol: EndOfLineSequence): void;\n\n\t/**\n\t * Get the minimum legal column for line at `lineNumber`\n\t */\n\tgetLineMinColumn(lineNumber:number): number;\n\n\t/**\n\t * Get the maximum legal column for line at `lineNumber`\n\t */\n\tgetLineMaxColumn(lineNumber:number): number;\n\n\t/**\n\t * Returns the column before the first non whitespace character for line at `lineNumber`.\n\t * Returns 0 if line is empty or contains only whitespace.\n\t */\n\tgetLineFirstNonWhitespaceColumn(lineNumber:number): number;\n\n\t/**\n\t * Returns the column after the last non whitespace character for line at `lineNumber`.\n\t * Returns 0 if line is empty or contains only whitespace.\n\t */\n\tgetLineLastNonWhitespaceColumn(lineNumber:number): number;\n\n\t/**\n\t * Create a valid position,\n\t */\n\tvalidatePosition(position:IPosition): IEditorPosition;\n\n\t/**\n\t * Advances the given position by the given offest (negative offsets are also accepted)\n\t * and returns it as a new valid position.\n\t *\n\t * If the offset and position are such that their combination goes beyond the beginning or\n\t * end of the model, throws an exception.\n\t *\n\t * If the ofsset is such that the new position would be in the middle of a multi-byte\n\t * line terminator, throws an exception.\n\t */\n\tmodifyPosition(position: IPosition, offset: number): IEditorPosition;\n\n\t/**\n\t * Create a valid range.\n\t */\n\tvalidateRange(range:IRange): IEditorRange;\n\n\t/**\n\t * Get a range covering the entire model\n\t */\n\tgetFullModelRange(): IEditorRange;\n\n\t/**\n\t * Returns iff the model was disposed or not.\n\t */\n\tisDisposed(): boolean;\n}\n\n/**\n * A model that is tokenized.\n */\nexport interface ITokenizedModel extends ITextModel {\n\n\t/**\n\t * Set the value at which to stop tokenization.\n\t * The default is 10000.\n\t */\n\tsetStopLineTokenizationAfter(stopLineTokenizationAfter:number): void;\n\n\t/**\n\t * Tokenize if necessary and get the tokens for the line `lineNumber`.\n\t * @param lineNumber The line number\n\t * @param inaccurateTokensAcceptable Are inaccurate tokens acceptable? Defaults to false\n\t */\n\tgetLineTokens(lineNumber:number, inaccurateTokensAcceptable?:boolean): ILineTokens;\n\n\t/**\n\t * Tokenize if necessary and get the tokenization result for the line `lineNumber`, as returned by the language mode.\n\t */\n\tgetLineContext(lineNumber:number): Modes.ILineContext;\n\n\t/*package*/_getLineModeTransitions(lineNumber:number): Modes.IModeTransition[];\n\n\t/**\n\t * Replace the entire text buffer value contained in this model.\n\t * Optionally, the language mode of the model can be changed.\n\t * This call clears all of the undo / redo stack,\n\t * removes all decorations or tracked ranges, emits a\n\t * ModelContentChanged(ModelContentChangedFlush) event and\n\t * unbinds the mirror model from the previous mode to the new\n\t * one if the mode has changed.\n\t */\n\tsetValue(newValue:string, newMode?:Modes.IMode): void;\n\n\t/**\n\t * Get the current language mode associated with the model.\n\t */\n\tgetMode(): Modes.IMode;\n\n\t/**\n\t * Set the current language mode associated with the model.\n\t */\n\tsetMode(newMode:Modes.IMode): void;\n\tsetMode(newModePromise:TPromise<Modes.IMode>): void;\n\t/**\n\t * A mode can be currently pending loading if a promise is used when constructing a model or calling setMode().\n\t *\n\t * If there is no currently pending loading mode, then the result promise will complete immediately.\n\t * Otherwise, the result will complete once the currently pending loading mode is loaded.\n\t */\n\twhenModeIsReady(): TPromise<Modes.IMode>;\n\n\t/**\n\t * Returns the true (inner-most) language mode at a given position.\n\t */\n\tgetModeAtPosition(lineNumber:number, column:number): Modes.IMode;\n\n\t/**\n\t * Get the word under or besides `position`.\n\t * @param position The position to look for a word.\n\t * @param skipSyntaxTokens Ignore syntax tokens, as identified by the mode.\n\t * @return The word under or besides `position`. Might be null.\n\t */\n\tgetWordAtPosition(position:IPosition): IWordAtPosition;\n\n\t/**\n\t * Get the word under or besides `position` trimmed to `position`.column\n\t * @param position The position to look for a word.\n\t * @param skipSyntaxTokens Ignore syntax tokens, as identified by the mode.\n\t * @return The word under or besides `position`. Will never be null.\n\t */\n\tgetWordUntilPosition(position:IPosition): IWordAtPosition;\n\n\t/**\n\t * Get the words on line `lineNumber`.\n\t * @param lineNumber The lineNumber\n\t * @param skipSyntaxTokens Ignore syntax tokens, as identified by the mode.\n\t * @return All the words on the line.\n\t */\n\tgetWords(lineNumber:number): IWordRange[];\n\n\t/**\n\t * Returns an iterator that can be used to read\n\t * next and previous tokens from the provided position.\n\t * The iterator is made available through the callback\n\t * function and can't be used afterwards.\n\t */\n\ttokenIterator(position: IPosition, callback: (it: ITokenIterator) =>any): any;\n\n\t/**\n\t * Find the matching bracket of `tokenType` up, counting brackets.\n\t * @param tokenType The token type of the bracket we're searching for\n\t * @param position The position at which to start the search.\n\t * @return The range of the matching bracket, or null if the bracket match was not found.\n\t */\n\tfindMatchingBracketUp(tokenType:string, position:IPosition): IEditorRange;\n\n\t/**\n\t * Given a `position`, if the position is on top or near a bracket,\n\t * find the matching bracket of that bracket and return the ranges of both brackets.\n\t * @param position The position at which to look for a bracket.\n\t */\n\tmatchBracket(position:IPosition, inaccurateResultAcceptable?:boolean): IMatchBracketResult;\n\n\t/**\n\t * No mode supports allowed on this model because it is simply too large.\n\t * (even tokenization would cause too much memory pressure)\n\t */\n\tisTooLargeForHavingAMode(): boolean;\n\n\t/**\n\t * Only basic mode supports allowed on this model because it is simply too large.\n\t * (tokenization is allowed and other basic supports)\n\t */\n\tisTooLargeForHavingARichMode(): boolean;\n}\n\n/**\n * A model that can track markers.\n */\nexport interface ITextModelWithMarkers extends ITextModel {\n\t/*package*/_addMarker(lineNumber:number, column:number, stickToPreviousCharacter:boolean): string;\n\t/*package*/_changeMarker(id:string, newLineNumber:number, newColumn:number): void;\n\t/*package*/_changeMarkerStickiness(id:string, newStickToPreviousCharacter:boolean): void;\n\t/*package*/_getMarker(id:string): IEditorPosition;\n\t/*package*/_removeMarker(id:string): void;\n\t/*package*/_getLineMarkers(lineNumber: number): IReadOnlyLineMarker[];\n}\n\n/**\n * A map of changed ranges used during the model internal processing\n */\nexport interface IChangedTrackedRanges {\n\t[key:string]:IRange;\n}\n\nexport enum TrackedRangeStickiness {\n\tAlwaysGrowsWhenTypingAtEdges = 0,\n\tNeverGrowsWhenTypingAtEdges = 1,\n\tGrowsOnlyWhenTypingBefore = 2,\n\tGrowsOnlyWhenTypingAfter = 3,\n}\n\n/**\n * A model that can track ranges.\n */\nexport interface ITextModelWithTrackedRanges extends ITextModel {\n\t/**\n\t * Start tracking a range (across edit operations).\n\t * @param range The range to start tracking.\n\t * @param stickiness The behaviour when typing at the edges of the range.\n\t * @return A unique identifier for the tracked range.\n\t */\n\taddTrackedRange(range:IRange, stickiness:TrackedRangeStickiness): string;\n\n\t/**\n\t * Change the range of a tracked range.\n\t * @param id The id of the tracked range, as returned by a `addTrackedRange` call.\n\t * @param newRange The new range of the tracked range.\n\t */\n\tchangeTrackedRange(id:string, newRange:IRange): void;\n\n\t/**\n\t * Change the stickiness (behaviour when typing at the edges of the range) for a tracked range.\n\t * @param id The id of the tracked range, as returned by a `addTrackedRange` call.\n\t * @param newStickiness The new behaviour when typing at the edges of the range.\n\t */\n\tchangeTrackedRangeStickiness(id:string, newStickiness:TrackedRangeStickiness): void;\n\n\t/**\n\t * Remove a tracked range.\n\t * @param id The id of the tracked range, as returned by a `addTrackedRaneg` call.\n\t */\n\tremoveTrackedRange(id:string): void;\n\n\t/**\n\t * Get the range of a tracked range.\n\t * @param id The id of the tracked range, as returned by a `addTrackedRaneg` call.\n\t */\n\tgetTrackedRange(id:string): IEditorRange;\n\n\t/**\n\t * Gets all the tracked ranges for the lines between `startLineNumber` and `endLineNumber` as an array.\n\t * @param startLineNumber The start line number\n\t * @param endLineNumber The end line number\n\t * @return An array with the tracked ranges\n\t */\n\tgetLinesTrackedRanges(startLineNumber:number, endLineNumber:number): IModelTrackedRange[];\n}\n\n/**\n * A model that can have decorations.\n */\nexport interface ITextModelWithDecorations {\n\t/**\n\t * Change the decorations. The callback will be called with a change accessor\n\t * that becomes invalid as soon as the callback finishes executing.\n\t * This allows for all events to be queued up until the change\n\t * is completed. Returns whatever the callback returns.\n\t * @param ownerId Identifies the editor id in which these decorations should appear. If no `ownerId` is provided, the decorations will appear in all editors that attach this model.\n\t */\n\tchangeDecorations(callback: (changeAccessor:IModelDecorationsChangeAccessor)=>any, ownerId?:number): any;\n\n\t/**\n\t * Perform a minimum ammount of operations, in order to transform the decorations\n\t * identified by `oldDecorations` to the decorations described by `newDecorations`\n\t * and returns the new identifiers associated with the resulting decorations.\n\t *\n\t * @param oldDecorations Array containing previous decorations identifiers.\n\t * @param newDecorations Array describing what decorations should result after the call.\n\t * @param ownerId Identifies the editor id in which these decorations should appear. If no `ownerId` is provided, the decorations will appear in all editors that attach this model.\n\t * @return An array containing the new decorations identifiers.\n\t */\n\tdeltaDecorations(oldDecorations:string[], newDecorations:IModelDeltaDecoration[], ownerId?:number): string[];\n\n\t/**\n\t * Remove all decorations that have been added with this specific ownerId.\n\t * @param ownerId The owner id to search for.\n\t */\n\tremoveAllDecorationsWithOwnerId(ownerId:number): void;\n\n\t/**\n\t * Get the options associated with a decoration.\n\t * @param id The decoration id.\n\t * @return The decoration options or null if the decoration was not found.\n\t */\n\tgetDecorationOptions(id:string): IModelDecorationOptions;\n\n\t/**\n\t * Get the range associated with a decoration.\n\t * @param id The decoration id.\n\t * @return The decoration range or null if the decoration was not found.\n\t */\n\tgetDecorationRange(id:string): IEditorRange;\n\n\t/**\n\t * Gets all the decorations for the line `lineNumber` as an array.\n\t * @param lineNumber The line number\n\t * @param ownerId If set, it will ignore decorations belonging to other owners.\n\t * @param filterOutValidation If set, it will ignore decorations specific to validation (i.e. warnings, errors).\n\t * @return An array with the decorations\n\t */\n\tgetLineDecorations(lineNumber:number, ownerId?:number, filterOutValidation?:boolean): IModelDecoration[];\n\n\t/**\n\t * Gets all the decorations for the lines between `startLineNumber` and `endLineNumber` as an array.\n\t * @param startLineNumber The start line number\n\t * @param endLineNumber The end line number\n\t * @param ownerId If set, it will ignore decorations belonging to other owners.\n\t * @param filterOutValidation If set, it will ignore decorations specific to validation (i.e. warnings, errors).\n\t * @return An array with the decorations\n\t */\n\tgetLinesDecorations(startLineNumber:number, endLineNumber:number, ownerId?:number, filterOutValidation?:boolean): IModelDecoration[];\n\n\t/**\n\t * Gets all the deocorations in a range as an array. Only `startLineNumber` and `endLineNumber` from `range` are used for filtering.\n\t * So for now it returns all the decorations on the same line as `range`.\n\t * @param range The range to search in\n\t * @param ownerId If set, it will ignore decorations belonging to other owners.\n\t * @param filterOutValidation If set, it will ignore decorations specific to validation (i.e. warnings, errors).\n\t * @return An array with the decorations\n\t */\n\tgetDecorationsInRange(range:IRange, ownerId?:number, filterOutValidation?:boolean): IModelDecoration[];\n\n\t/**\n\t * Gets all the decorations as an array.\n\t * @param ownerId If set, it will ignore decorations belonging to other owners.\n\t * @param filterOutValidation If set, it will ignore decorations specific to validation (i.e. warnings, errors).\n\t */\n\tgetAllDecorations(ownerId?:number, filterOutValidation?:boolean): IModelDecoration[];\n}\n\n/**\n * An editable text model.\n */\nexport interface IEditableTextModel extends ITextModelWithMarkers {\n\t/**\n\t * Push a stack element onto the undo stack. This acts as an undo/redo point.\n\t * The idea is to use `pushEditOperations` to edit the model and then to\n\t * `pushStackElement` to create an undo/redo stop point.\n\t */\n\tpushStackElement(): void;\n\n\t/**\n\t * Push edit operations, basically editing the model. This is the preferred way\n\t * of editing the model. The edit operations will land on the undo stack.\n\t * @param beforeCursorState The cursor state before the edit operaions. This cursor state will be returned when `undo` or `redo` are invoked.\n\t * @param editOperations The edit operations.\n\t * @param cursorStateComputer A callback that can compute the resulting cursors state after the edit operations have been executed.\n\t * @return The cursor state returned by the `cursorStateComputer`.\n\t */\n\tpushEditOperations(beforeCursorState:IEditorSelection[], editOperations:IIdentifiedSingleEditOperation[], cursorStateComputer:ICursorStateComputer): IEditorSelection[];\n\n\t/**\n\t * Edit the model without adding the edits to the undo stack.\n\t * This can have dire consequences on the undo stack! See @pushEditOperations for the preferred way.\n\t * @param operations The edit operations.\n\t * @return The inverse edit operations, that, when applied, will bring the model back to the previous state.\n\t */\n\tapplyEdits(operations:IIdentifiedSingleEditOperation[]): IIdentifiedSingleEditOperation[];\n\n\t/**\n\t * Undo edit operations until the first previous stop point created by `pushStackElement`.\n\t * The inverse edit operations will be pushed on the redo stack.\n\t */\n\tundo(): IEditorSelection[];\n\n\t/**\n\t * Redo edit operations until the next stop point created by `pushStackElement`.\n\t * The inverse edit operations will be pushed on the undo stack.\n\t */\n\tredo(): IEditorSelection[];\n\n\t/**\n\t * Set an editable range on the model.\n\t */\n\tsetEditableRange(range:IRange): void;\n\n\t/**\n\t * Check if the model has an editable range.\n\t */\n\thasEditableRange(): boolean;\n\n\t/**\n\t * Get the editable range on the model.\n\t */\n\tgetEditableRange(): IEditorRange;\n}\n\n/**\n * A model.\n */\nexport interface IModel extends IEditableTextModel, ITextModelWithMarkers, ITokenizedModel, ITextModelWithTrackedRanges, ITextModelWithDecorations, IEventEmitter, IEditorModel {\n\t/**\n\t * A unique identifier associated with this model.\n\t */\n\tid: string;\n\n\t/**\n\t * Destroy this model. This will unbind the model from the mode\n\t * and make all necessary clean-up to release this object to the GC.\n\t */\n\tdestroy(): void;\n\n\t/**\n\t * Set a property on the model. This property will be forwarded to the\n\t * mirror model associated with this model. Please make sure that the\n\t * value can be serialized. If a property by the same name exists,\n\t * it will be overwritten.\n\t */\n\tsetProperty(name:string, value:any): void;\n\n\t/**\n\t * Returns a property previously set on the model.\n\t * If the property is not defined, returns null.\n\t */\n\tgetProperty(name:string): any;\n\n\t/**\n\t * Returns all properties set on the model.\n\t */\n\tgetProperties(): {[name:string]:any;};\n\n\t/**\n\t * Gets the resource associated with this editor model.\n\t */\n\tgetAssociatedResource(): URI;\n\n\t/**\n\t * Search the model.\n\t * @param searchString The string used to search. If it is a regular expression, set `isRegex` to true.\n\t * @param searchOnlyEditableRange Limit the searching to only search inside the editable range of the model.\n\t * @param isRegex Used to indicate that `searchString` is a regular expression.\n\t * @param matchCase Force the matching to match lower/upper case exactly.\n\t * @param wholeWord Force the matching to match entire words only.\n\t * @param limitResultCount Limit the number of results\n\t * @return The ranges where the matches are. It is empty if not matches have been found.\n\t */\n\tfindMatches(searchString:string, searchOnlyEditableRange:boolean, isRegex:boolean, matchCase:boolean, wholeWord:boolean, limitResultCount?:number): IEditorRange[];\n\t/**\n\t * Search the model.\n\t * @param searchString The string used to search. If it is a regular expression, set `isRegex` to true.\n\t * @param searchScope Limit the searching to only search inside this range.\n\t * @param isRegex Used to indicate that `searchString` is a regular expression.\n\t * @param matchCase Force the matching to match lower/upper case exactly.\n\t * @param wholeWord Force the matching to match entire words only.\n\t * @param limitResultCount Limit the number of results\n\t * @return The ranges where the matches are. It is empty if not matches have been found.\n\t */\n\tfindMatches(searchString:string, searchScope:IRange, isRegex:boolean, matchCase:boolean, wholeWord:boolean, limitResultCount?:number): IEditorRange[];\n\t/**\n\t * Search the model.\n\t * @param searchString The string used to search. If it is a regular expression, set `isRegex` to true.\n\t * @param searchStart Start the searching at the specified position.\n\t * @param isRegex Used to indicate that `searchString` is a regular expression.\n\t * @param matchCase Force the matching to match lower/upper case exactly.\n\t * @param wholeWord Force the matching to match entire words only.\n\t * @return The ranges where the matches are. It is empty if not matches have been found.\n\t */\n\tfindNextMatch(searchString:string, searchStart:IPosition, isRegex:boolean, matchCase:boolean, wholeWord:boolean): IEditorRange;\n\n\t/**\n\t * Replace the entire text buffer value contained in this model.\n\t * Optionally, the language mode of the model can be changed.\n\t * This call clears all of the undo / redo stack,\n\t * removes all decorations or tracked ranges, emits a\n\t * ModelContentChanged(ModelContentChangedFlush) event and\n\t * unbinds the mirror model from the previous mode to the new\n\t * one if the mode has changed.\n\t */\n\tsetValue(newValue:string, newMode?:Modes.IMode): void;\n\tsetValue(newValue:string, newModePromise:TPromise<Modes.IMode>): void;\n\n\tonBeforeAttached(): void;\n\n\tonBeforeDetached(): void;\n\n\tgetModeId(): string;\n\n\t/**\n\t * Returns iff this model is attached to an editor or not.\n\t */\n\tisAttachedToEditor(): boolean;\n}\n\nexport interface IRangeWithText {\n\ttext:string;\n\trange:IRange;\n}\n\nexport interface IMirrorModel extends IEventEmitter, ITokenizedModel {\n\tgetEmbeddedAtPosition(position:IPosition): IMirrorModel;\n\tgetAllEmbedded(): IMirrorModel[];\n\n\tgetAssociatedResource(): URI;\n\tgetProperty(key:string): any;\n\n\tgetOffsetFromPosition(position:IPosition): number;\n\tgetPositionFromOffset(offset:number): IPosition;\n\tgetOffsetAndLengthFromRange(range:IRange): {offset:number; length:number;};\n\tgetRangeFromOffsetAndLength(offset:number, length:number): IRange;\n\tgetLineStart(lineNumber:number): number;\n\n\tgetAllWordsWithRange(): IRangeWithText[];\n\tgetAllUniqueWords(skipWordOnce?:string): string[];\n}\n\n/**\n * An event describing that the current mode associated with a model has changed.\n */\nexport interface IModelModeChangedEvent {\n\t/**\n\t * Previous mode\n\t */\n\toldMode:Modes.IMode;\n\t/**\n\t * New mode\n\t */\n\tnewMode:Modes.IMode;\n}\n\n/**\n * An event describing a change in the text of a model.\n */\nexport interface IModelContentChangedEvent2 {\n\t/**\n\t * The range that got replaced.\n\t */\n\trange: IRange;\n\t/**\n\t * The length of the range that got replaced.\n\t */\n\trangeLength: number;\n\t/**\n\t * The new text for the range.\n\t */\n\ttext: string;\n\t/**\n\t * The new version id the model has transitioned to.\n\t */\n\tversionId: number;\n\t/**\n\t * Flag that indicates that this event was generated while undoing.\n\t */\n\tisUndoing: boolean;\n\t/**\n\t * Flag that indicates that this event was generated while redoing.\n\t */\n\tisRedoing: boolean;\n}\n/**\n * An event describing a change in the text of a model.\n */\nexport interface IModelContentChangedEvent {\n\t/**\n\t * The event type. It can be used to detect the actual event type:\n\t * \t\tEditorCommon.EventType.ModelContentChangedFlush => IModelContentChangedFlushEvent\n\t * \t\tEditorCommon.EventType.ModelContentChangedLinesDeleted => IModelContentChangedLineChangedEvent\n\t * \t\tEditorCommon.EventType.ModelContentChangedLinesInserted => IModelContentChangedLinesDeletedEvent\n\t * \t\tEditorCommon.EventType.ModelContentChangedLineChanged => IModelContentChangedLinesInsertedEvent\n\t */\n\tchangeType: string;\n\t/**\n\t * The new version id the model has transitioned to.\n\t */\n\tversionId: number;\n\t/**\n\t * Flag that indicates that this event was generated while undoing.\n\t */\n\tisUndoing: boolean;\n\t/**\n\t * Flag that indicates that this event was generated while redoing.\n\t */\n\tisRedoing: boolean;\n}\nexport interface IRawText {\n\tlength: number;\n\tlines: string[];\n\tBOM: string;\n\tEOL: string;\n}\n/**\n * An event describing that a model has been reset to a new value.\n */\nexport interface IModelContentChangedFlushEvent extends IModelContentChangedEvent {\n\t/**\n\t * The new text content of the model.\n\t */\n\tdetail: IRawText;\n}\n/**\n * An event describing that a line has changed in a model.\n */\nexport interface IModelContentChangedLineChangedEvent extends IModelContentChangedEvent {\n\t/**\n\t * The line that has changed.\n\t */\n\tlineNumber: number;\n\t/**\n\t * The new value of the line.\n\t */\n\tdetail: string;\n}\n/**\n * An event describing that line(s) have been deleted in a model.\n */\nexport interface IModelContentChangedLinesDeletedEvent extends IModelContentChangedEvent {\n\t/**\n\t * At what line the deletion began (inclusive).\n\t */\n\tfromLineNumber: number;\n\t/**\n\t * At what line the deletion stopped (inclusive).\n\t */\n\ttoLineNumber: number;\n}\n/**\n * An event describing that line(s) have been inserted in a model.\n */\nexport interface IModelContentChangedLinesInsertedEvent extends IModelContentChangedEvent {\n\t/**\n\t * Before what line did the insertion begin\n\t */\n\tfromLineNumber: number;\n\t/**\n\t * `toLineNumber` - `fromLineNumber` + 1 denotes the number of lines that were inserted\n\t */\n\ttoLineNumber: number;\n\t/**\n\t * The text that was inserted\n\t */\n\tdetail: string;\n}\n/**\n * An event describing that model properties have changed.\n */\nexport interface IModelPropertiesChangedEvent {\n\t/**\n\t * A map with all the properties of the model.\n\t */\n\tproperties: {\n\t\t[key:string]:any;\n\t};\n}\n/**\n * Decoration data associated with a model decorations changed event.\n */\nexport interface IModelDecorationsChangedEvent_DecorationData {\n\tid:string;\n\townerId:number;\n\trange:IRange;\n\tisForValidation:boolean;\n\toptions:IModelDecorationOptions;\n}\n/**\n * An event describing that model decorations have changed.\n */\nexport interface IModelDecorationsChangedEvent {\n\t/**\n\t * A summary with ids of decorations that have changed.\n\t */\n\tids:string[];\n\t/**\n\t * Lists of details\n\t */\n\taddedOrChangedDecorations:IModelDecorationsChangedEvent_DecorationData[];\n\tremovedDecorations:string[];\n\toldOptions:{[decorationId:string]:IModelDecorationOptions;};\n\toldRanges:{[decorationId:string]:IRange;};\n}\n/**\n * An event describing that a range of lines has been tokenized\n */\nexport interface IModelTokensChangedEvent {\n\t/**\n\t * The start of the range (inclusive)\n\t */\n\tfromLineNumber:number;\n\t/**\n\t * The end of the range (inclusive)\n\t */\n\ttoLineNumber:number;\n}\n/**\n * An event describing that the cursor position has changed.\n */\nexport interface ICursorPositionChangedEvent {\n\t/**\n\t * Primary cursor's position.\n\t */\n\tposition:IEditorPosition;\n\t/**\n\t * Primary cursor's view position\n\t */\n\tviewPosition:IEditorPosition;\n\t/**\n\t * Secondary cursors' position.\n\t */\n\tsecondaryPositions:IEditorPosition[];\n\t/**\n\t * Secondary cursors' view position.\n\t */\n\tsecondaryViewPositions:IEditorPosition[];\n\t/**\n\t * Reason.\n\t */\n\treason:string;\n\t/**\n\t * Source of the call that caused the event.\n\t */\n\tsource:string;\n\t/**\n\t * Is the primary cursor in the editable range?\n\t */\n\tisInEditableRange:boolean;\n}\n/**\n * An event describing that the cursor selection has changed.\n */\nexport interface ICursorSelectionChangedEvent {\n\t/**\n\t * The primary selection.\n\t */\n\tselection:IEditorSelection;\n\t/**\n\t * The primary selection in view coordinates.\n\t */\n\tviewSelection:IEditorSelection;\n\t/**\n\t * The secondary selections.\n\t */\n\tsecondarySelections:IEditorSelection[];\n\t/**\n\t * The secondary selections in view coordinates.\n\t */\n\tsecondaryViewSelections:IEditorSelection[];\n\t/**\n\t * Source of the call that caused the event.\n\t */\n\tsource:string;\n\t/**\n\t * Reason.\n\t */\n\treason:string;\n}\nexport enum VerticalRevealType {\n\tSimple = 0,\n\tCenter = 1,\n\tCenterIfOutsideViewport = 2\n}\n/**\n * An event describing a request to reveal a specific range in the view of the editor.\n */\nexport interface ICursorRevealRangeEvent {\n\t/**\n\t * Range to be reavealed.\n\t */\n\trange:IEditorRange;\n\t/**\n\t * View range to be reavealed.\n\t */\n\tviewRange:IEditorRange;\n\n\tverticalType: VerticalRevealType;\n\t/**\n\t * If true: there should be a horizontal & vertical revealing\n\t * If false: there should be just a vertical revealing\n\t */\n\trevealHorizontal:boolean;\n}\n\nexport interface ICursorScrollRequestEvent {\n\tdeltaLines: number;\n}\n\nexport interface IModelChangedEvent {\n\toldModelUrl: string;\n\tnewModelUrl: string;\n}\n\nexport interface IEditorWhitespace {\n\tid:number;\n\tafterLineNumber:number;\n\theightInLines:number;\n}\n\n/**\n * A description for the overview ruler position.\n */\nexport interface IOverviewRulerPosition {\n\t/**\n\t * Width of the overview ruler\n\t */\n\twidth:number;\n\t/**\n\t * Height of the overview ruler\n\t */\n\theight:number;\n\t/**\n\t * Top position for the overview ruler\n\t */\n\ttop:number;\n\t/**\n\t * Right position for the overview ruler\n\t */\n\tright:number;\n}\n\n/**\n * The internal layout details of the editor.\n */\nexport interface IEditorLayoutInfo {\n\t/**\n\t * Full editor width.\n\t */\n\twidth:number;\n\t/**\n\t * Full editor height.\n\t */\n\theight:number;\n\n\t/**\n\t * Left position for the glyph margin.\n\t */\n\tglyphMarginLeft:number;\n\t/**\n\t * The width of the glyph margin.\n\t */\n\tglyphMarginWidth:number;\n\t/**\n\t * The height of the glyph margin.\n\t */\n\tglyphMarginHeight:number;\n\n\t/**\n\t * Left position for the line numbers.\n\t */\n\tlineNumbersLeft:number;\n\t/**\n\t * The width of the line numbers.\n\t */\n\tlineNumbersWidth:number;\n\t/**\n\t * The height of the line numbers.\n\t */\n\tlineNumbersHeight:number;\n\n\t/**\n\t * Left position for the line decorations.\n\t */\n\tdecorationsLeft:number;\n\t/**\n\t * The width of the line decorations.\n\t */\n\tdecorationsWidth:number;\n\t/**\n\t * The height of the line decorations.\n\t */\n\tdecorationsHeight:number;\n\n\t/**\n\t * Left position for the content (actual text)\n\t */\n\tcontentLeft:number;\n\t/**\n\t * The width of the content (actual text)\n\t */\n\tcontentWidth:number;\n\t/**\n\t * The height of the content (actual height)\n\t */\n\tcontentHeight:number;\n\n\t/**\n\t * The width of the vertical scrollbar.\n\t */\n\tverticalScrollbarWidth:number;\n\t/**\n\t * The height of the horizontal scrollbar.\n\t */\n\thorizontalScrollbarHeight:number;\n\n\t/**\n\t * The position of the overview ruler.\n\t */\n\toverviewRuler:IOverviewRulerPosition;\n}\n\n/**\n * Options for creating the editor.\n */\nexport interface ICodeEditorWidgetCreationOptions extends IEditorOptions {\n\tmodel?:IModel;\n}\n\n/**\n * An editor model.\n */\nexport interface IEditorModel {\n}\n/**\n * An editor view state.\n */\nexport interface IEditorViewState {\n}\nexport interface IDimension {\n\twidth:number;\n\theight:number;\n}\n/**\n * Conditions describing action enablement\n */\nexport interface IActionEnablement {\n\t/**\n\t * The action is enabled only if text in the editor is focused (e.g. blinking cursor).\n\t * Warning: This condition will be disabled if the action is marked to be displayed in the context menu\n\t * Defaults to false.\n\t */\n\ttextFocus?: boolean;\n\t/**\n\t * The action is enabled only if the editor or its widgets have focus (e.g. focus is in find widget).\n\t * Defaults to false.\n\t */\n\twidgetFocus?: boolean;\n\t/**\n\t * The action is enabled only if the editor is not in read only mode.\n\t * Defaults to false.\n\t */\n\twriteableEditor?: boolean;\n\t/**\n\t * The action is enabled only if the cursor position is over tokens of a certain kind.\n\t * Defaults to no tokens required.\n\t */\n\ttokensAtPosition?: string[];\n\t/**\n\t * The action is enabled only if the cursor position is over a word (i.e. not whitespace).\n\t * Defaults to false.\n\t */\n\twordAtPosition?: boolean;\n}\n\n/**\n * A (serializable) state of the cursors.\n */\nexport interface ICursorState {\n\tinSelectionMode:boolean;\n\tselectionStart:IPosition;\n\tposition:IPosition;\n}\n/**\n * A (serializable) state of the view.\n */\nexport interface IViewState {\n\tscrollTop: number;\n\tscrollTopWithoutViewZones: number;\n\tscrollLeft: number;\n}\n/**\n * A (serializable) state of the code editor.\n */\nexport interface ICodeEditorViewState extends IEditorViewState {\n\tcursorState:ICursorState[];\n\tviewState:IViewState;\n}\n\n/**\n * Type of hit element with the mouse in the editor.\n */\nexport enum MouseTargetType {\n\t/**\n\t * Mouse is on top of an unknown element.\n\t */\n\tUNKNOWN,\n\t/**\n\t * Mouse is on top of the textarea used for input.\n\t */\n\tTEXTAREA,\n\t/**\n\t * Mouse is on top of the glyph margin\n\t */\n\tGUTTER_GLYPH_MARGIN,\n\t/**\n\t * Mouse is on top of the line numbers\n\t */\n\tGUTTER_LINE_NUMBERS,\n\t/**\n\t * Mouse is on top of the line decorations\n\t */\n\tGUTTER_LINE_DECORATIONS,\n\t/**\n\t * Mouse is on top of the whitespace left in the gutter by a view zone.\n\t */\n\tGUTTER_VIEW_ZONE,\n\t/**\n\t * Mouse is on top of text in the content.\n\t */\n\tCONTENT_TEXT,\n\t/**\n\t * Mouse is on top of empty space in the content (e.g. after line text or below last line)\n\t */\n\tCONTENT_EMPTY,\n\t/**\n\t * Mouse is on top of a view zone in the content.\n\t */\n\tCONTENT_VIEW_ZONE,\n\t/**\n\t * Mouse is on top of a content widget.\n\t */\n\tCONTENT_WIDGET,\n\t/**\n\t * Mouse is on top of the decorations overview ruler.\n\t */\n\tOVERVIEW_RULER,\n\t/**\n\t * Mouse is on top of a scrollbar.\n\t */\n\tSCROLLBAR,\n\t/**\n\t * Mouse is on top of an overlay widget.\n\t */\n\tOVERLAY_WIDGET\n}\n\n/**\n * A model for the diff editor.\n */\nexport interface IDiffEditorModel extends IEditorModel {\n\t/**\n\t * Original model.\n\t */\n\toriginal: IModel;\n\t/**\n\t * Modified model.\n\t */\n\tmodified: IModel;\n}\n/**\n * (Serializable) View state for the diff editor.\n */\nexport interface IDiffEditorViewState extends IEditorViewState {\n\toriginal: ICodeEditorViewState;\n\tmodified: ICodeEditorViewState;\n}\n/**\n * A change\n */\nexport interface IChange {\n\toriginalStartLineNumber:number;\n\toriginalEndLineNumber:number;\n\tmodifiedStartLineNumber:number;\n\tmodifiedEndLineNumber:number;\n}\n/**\n * A character level change.\n */\nexport interface ICharChange extends IChange {\n\toriginalStartColumn:number;\n\toriginalEndColumn:number;\n\tmodifiedStartColumn:number;\n\tmodifiedEndColumn:number;\n}\n/**\n * A line change\n */\nexport interface ILineChange extends IChange {\n\tcharChanges:ICharChange[];\n}\n/**\n * Information about a line in the diff editor\n */\nexport interface IDiffLineInformation {\n\tequivalentLineNumber: number;\n}\n\nexport var KEYBINDING_CONTEXT_EDITOR_TEXT_FOCUS = 'editorTextFocus';\nexport var KEYBINDING_CONTEXT_EDITOR_FOCUS = 'editorFocus';\nexport var KEYBINDING_CONTEXT_EDITOR_TAB_MOVES_FOCUS = 'editorTabMovesFocus';\nexport var KEYBINDING_CONTEXT_EDITOR_HAS_MULTIPLE_SELECTIONS = 'editorHasMultipleSelections';\nexport var KEYBINDING_CONTEXT_EDITOR_HAS_NON_EMPTY_SELECTION = 'editorHasSelection';\nexport var KEYBINDING_CONTEXT_EDITOR_LANGUAGE_ID = 'editorLangId';\n\nexport interface IDispatcherEvent {\n\tgetSource(): string;\n\tgetData(): any;\n}\n\nexport interface IHandler {\n\t(e:IDispatcherEvent): boolean;\n}\n\nexport interface IHandlerDispatcher {\n\tsetHandler(handlerId:string, handlerCallback:IHandler): void;\n\tclearHandlers(): void;\n\ttrigger(source:string, handlerId:string, payload:any): boolean;\n}\n\nexport interface IEditorStyling {\n\teditorClassName: string;\n\tfontFamily: string;\n\tfontSize: number;\n\tlineHeight: number;\n}\n\nexport interface IConfiguration extends IEventEmitter {\n\teditor:IInternalEditorOptions;\n\n\tsetLineCount(lineCount:number): void;\n\n\thandlerDispatcher: IHandlerDispatcher;\n\n\tgetIndentationOptions(): IInternalIndentationOptions;\n\tgetOneIndent(): string;\n\tnormalizeIndentation(str:string): string;\n}\n\n// --- view\n\nexport interface IViewLineTokens {\n\tgetTokens(): ILineToken[];\n\tgetFauxIndentLength(): number;\n\tgetTextLength(): number;\n\tequals(other:IViewLineTokens): boolean;\n\tfindIndexOfOffset(offset:number): number;\n}\n\nexport interface IViewModelDecorationsResolver {\n\tgetDecorations(): IModelDecoration[];\n\tgetInlineDecorations(lineNumber: number): IModelDecoration[];\n}\n\nexport interface IViewEventBus {\n\temit(eventType:string, data?:any): void;\n}\n\nexport interface IWhitespaceManager {\n\t/**\n\t * Reserve rendering space.\n\t * @param height is specified in pixels.\n\t * @return an identifier that can be later used to remove or change the whitespace.\n\t */\n\taddWhitespace(afterLineNumber:number, ordinal:number, height:number): number;\n\n\t/**\n\t * Change the height of a whitespace.\n\t * @param height is specified in pixels.\n\t */\n\tchangeWhitespace(id:number, newHeight:number): boolean;\n\n\t/**\n\t * Change the `afterLineNumber` of a whitespace.\n\t * @return a boolean indicating if something has actually changed\n\t */\n\tchangeAfterLineNumberForWhitespace(id:number, newAfterLineNumber:number): boolean;\n\n\t/**\n\t * Remove rendering space\n\t */\n\tremoveWhitespace(id:number): boolean;\n\n\t/**\n\t * Get the layout information for whitespaces currently in the viewport\n\t */\n\tgetWhitespaceViewportData(): IViewWhitespaceViewportData[];\n\n\tgetWhitespaces(): IEditorWhitespace[];\n}\n\nexport interface IViewModel extends IEventEmitter, IDisposable {\n\n\tgetLineCount(): number;\n\tgetLineContent(lineNumber:number): string;\n\tgetLineMinColumn(lineNumber:number): number;\n\tgetLineMaxColumn(lineNumber:number): number;\n\tgetLineFirstNonWhitespaceColumn(lineNumber:number): number;\n\tgetLineLastNonWhitespaceColumn(lineNumber:number): number;\n\tgetLineTokens(lineNumber:number): IViewLineTokens;\n\tgetDecorationsResolver(startLineNumber:number, endLineNumber:number): IViewModelDecorationsResolver;\n\tgetLineRenderLineNumber(lineNumber:number): string;\n\tgetAllDecorations(): IModelDecoration[];\n\tgetValueInRange(range:IRange, eol:EndOfLinePreference): string;\n\tdispose(): void;\n\n\tgetSelections(): IEditorSelection[];\n\n\tgetModelLineContent(modelLineNumber:number): string;\n\tgetModelLineMaxColumn(modelLineNumber:number): number;\n\tvalidateModelPosition(position:IPosition): IEditorPosition;\n\tconvertViewPositionToModelPosition(viewLineNumber:number, viewColumn:number): IEditorPosition;\n\tconvertViewRangeToModelRange(viewRange:IRange): IEditorRange;\n\tconvertModelPositionToViewPosition(modelLineNumber:number, modelColumn:number): IEditorPosition;\n\tconvertModelSelectionToViewSelection(modelSelection:IEditorSelection): IEditorSelection;\n}\n\nexport interface IViewEventNames {\n\tModelFlushedEvent: string;\n\tLinesDeletedEvent: string;\n\tLinesInsertedEvent: string;\n\tLineChangedEvent: string;\n\tTokensChangedEvent: string;\n\tDecorationsChangedEvent: string;\n\tCursorPositionChangedEvent: string;\n\tCursorSelectionChangedEvent: string;\n\tRevealRangeEvent: string;\n\tLineMappingChangedEvent: string;\n}\n\nexport var ViewEventNames = {\n\tModelFlushedEvent: 'modelFlushedEvent',\n\tLinesDeletedEvent: 'linesDeletedEvent',\n\tLinesInsertedEvent: 'linesInsertedEvent',\n\tLineChangedEvent: 'lineChangedEvent',\n\tTokensChangedEvent: 'tokensChangedEvent',\n\tDecorationsChangedEvent: 'decorationsChangedEvent',\n\tCursorPositionChangedEvent: 'cursorPositionChangedEvent',\n\tCursorSelectionChangedEvent: 'cursorSelectionChangedEvent',\n\tRevealRangeEvent: 'revealRangeEvent',\n\tLineMappingChangedEvent: 'lineMappingChangedEvent',\n\tScrollRequestEvent: 'scrollRequestEvent'\n};\n\nexport interface IScrollEvent {\n\tvertical: boolean;\n\thorizontal: boolean;\n\tscrollTop:number;\n\tscrollLeft:number;\n}\n\nexport interface IViewLinesDeletedEvent {\n\t/**\n\t * At what line the deletion began (inclusive).\n\t */\n\tfromLineNumber: number;\n\t/**\n\t * At what line the deletion stopped (inclusive).\n\t */\n\ttoLineNumber: number;\n}\n\nexport interface IViewLinesInsertedEvent {\n\t/**\n\t * Before what line did the insertion begin\n\t */\n\tfromLineNumber: number;\n\t/**\n\t * `toLineNumber` - `fromLineNumber` + 1 denotes the number of lines that were inserted\n\t */\n\ttoLineNumber: number;\n}\n\nexport interface IViewLineChangedEvent {\n\t/**\n\t * The line that has changed.\n\t */\n\tlineNumber: number;\n}\n\nexport interface IViewTokensChangedEvent {\n\t/**\n\t * Start line number of range\n\t */\n\tfromLineNumber: number;\n\t/**\n\t * End line number of range\n\t */\n\ttoLineNumber: number;\n}\n\nexport interface IViewDecorationsChangedEvent {\n\t/**\n\t * signals that at least one inline decoration has changed\n\t */\n\tinlineDecorationsChanged: boolean;\n}\n\nexport interface IViewCursorPositionChangedEvent {\n\t/**\n\t * Primary cursor's position.\n\t */\n\tposition: IEditorPosition;\n\t/**\n\t * Secondary cursors' position.\n\t */\n\tsecondaryPositions: IEditorPosition[];\n\t/**\n\t * Is the primary cursor in the editable range?\n\t */\n\tisInEditableRange: boolean;\n}\n\nexport interface IViewCursorSelectionChangedEvent {\n\t/**\n\t * The primary selection.\n\t */\n\tselection: IEditorSelection;\n\t/**\n\t * The secondary selections.\n\t */\n\tsecondarySelections: IEditorSelection[];\n}\n\nexport interface IViewRevealRangeEvent {\n\t/**\n\t * Range to be reavealed.\n\t */\n\trange: IEditorRange;\n\n\tverticalType: VerticalRevealType;\n\t/**\n\t * If true: there should be a horizontal & vertical revealing\n\t * If false: there should be just a vertical revealing\n\t */\n\trevealHorizontal: boolean;\n}\n\nexport interface IViewScrollRequestEvent {\n\tdeltaLines: number;\n}\n\nexport interface IViewWhitespaceViewportData {\n\tid:number;\n\tafterLineNumber:number;\n\tverticalOffset:number;\n\theight:number;\n}\n\nexport interface IViewLinesViewportData {\n\tviewportTop: number;\n\tviewportHeight: number;\n\n\tbigNumbersDelta: number;\n\n\tvisibleRangesDeltaTop:number;\n\t/**\n\t * The line number at which to start rendering (inclusive).\n\t */\n\tstartLineNumber:number;\n\t/**\n\t * The line number at which to end rendering (inclusive).\n\t */\n\tendLineNumber:number;\n\t/**\n\t * relativeVerticalOffset[i] is the gap that must be left between line at\n\t * i - 1 + `startLineNumber` and i + `startLineNumber`.\n\t */\n\trelativeVerticalOffset:number[];\n\t/**\n\t * The viewport as a range (`startLineNumber`,1) -> (`endLineNumber`,maxColumn(`endLineNumber`)).\n\t */\n\tvisibleRange:IEditorRange;\n\n\tgetInlineDecorationsForLineInViewport(lineNumber:number): IModelDecoration[];\n\tgetDecorationsInViewport(): IModelDecoration[];\n}\n\nexport interface IViewport {\n\ttop: number;\n\tleft: number;\n\twidth: number;\n\theight: number;\n}\n\n/**\n * Description of an action contribution\n */\nexport interface IActionDescriptor {\n\t/**\n\t * An unique identifier of the contributed action.\n\t */\n\tid: string;\n\t/**\n\t * A label of the action that will be presented to the user.\n\t */\n\tlabel: string;\n\t/**\n\t * An array of keybindings for the action.\n\t */\n\tkeybindings?: number[];\n\tkeybindingContext: string;\n\t/**\n\t * A set of enablement conditions.\n\t */\n\tenablement?: IActionEnablement;\n\t/**\n\t * Control if the action should show up in the context menu and where.\n\t * Built-in groups:\n\t *   1_goto/* => e.g. 1_goto/1_peekDefinition\n\t *   2_change/* => e.g. 2_change/2_format\n\t *   3_edit/* => e.g. 3_edit/1_copy\n\t *   4_tools/* => e.g. 4_tools/1_commands\n\t * You can also create your own group.\n\t * Defaults to null (don't show in context menu).\n\t */\n\tcontextMenuGroupId?: string;\n\t/**\n\t * Method that will be executed when the action is triggered.\n\t * @param editor The editor instance is passed in as a convinience\n\t */\n\trun:(editor:ICommonCodeEditor)=>TPromise<void>;\n}\n\n/**\n * Data associated with an editor action contribution\n */\nexport interface IEditorActionDescriptorData {\n\tid:string;\n\tlabel:string;\n}\n\nexport type IEditorActionContributionCtor = INewConstructorSignature2<IEditorActionDescriptorData, ICommonCodeEditor, IEditorContribution>;\n\nexport type ICommonEditorContributionCtor = INewConstructorSignature1<ICommonCodeEditor, IEditorContribution>;\n\n/**\n * An editor contribution descriptor that will be used to construct editor contributions\n */\nexport interface ICommonEditorContributionDescriptor {\n\t/**\n\t * Create an instance of the contribution\n\t */\n\tcreateInstance(instantiationService:IInstantiationService, editor:ICommonCodeEditor): IEditorContribution;\n}\n\n/**\n * An editor.\n */\nexport interface IEditor extends IEventEmitter {\n\n\tgetId(): string;\n\n\t/**\n\t * Get the editor type. Current supported types:\n\t * \t\t\tEditorCommon.EditorType.ICodeEditor => ICodeEditor;\n\t * \t\t\tEditorCommon.EditorType.IDiffEditor => IDiffEditor;\n\t * This is to avoid an instanceof check\n\t */\n\tgetEditorType(): string;\n\n\t/**\n\t * Destroy the editor.\n\t */\n\tdestroy(): void;\n\n\t/**\n\t * Update the editor's options after the editor has been created.\n\t */\n\tupdateOptions(newOptions: IEditorOptions): void;\n\n\t/**\n\t * Indicates that the editor becomes visible.\n\t */\n\tonVisible(): void;\n\n\t/**\n\t * Indicates that the editor becomes hidden.\n\t */\n\tonHide(): void;\n\n\t/**\n\t * Instructs the editor to remeasure its container. This method should\n\t * be called when the container of the editor gets resized.\n\t */\n\tlayout(dimension?:IDimension): void;\n\n\t/**\n\t * Brings browser focus to the editor\n\t */\n\tfocus(): void;\n\n\t/**\n\t * Returns true if this editor has keyboard focus.\n\t */\n\tisFocused(): boolean;\n\n\t/**\n\t * Add a new action to this editor.\n\t */\n\taddAction(descriptor:IActionDescriptor): void;\n\n\t/**\n\t * Returns all actions associated with this editor.\n\t */\n\tgetActions(): IAction[];\n\n\t/**\n\t * Saves current view state of the editor in a serializable object.\n\t */\n\tsaveViewState(): IEditorViewState;\n\n\t/**\n\t * Restores the view state of the editor from a serializable object generated by `saveViewState`.\n\t */\n\trestoreViewState(state: IEditorViewState): void;\n\n\t/**\n\t * Given a position, returns a column number that takes tab-widths into account.\n\t */\n\tgetVisibleColumnFromPosition(position:IPosition): number;\n\n\t/**\n\t * Returns the primary position of the cursor.\n\t */\n\tgetPosition(): IEditorPosition;\n\n\t/**\n\t * Set the primary position of the cursor. This will remove any secondary cursors.\n\t * @param position New primary cursor's position\n\t */\n\tsetPosition(position:IPosition): void;\n\n\t/**\n\t * Scroll vertically as necessary and reveal a line.\n\t */\n\trevealLine(lineNumber: number): void;\n\n\t/**\n\t * Scroll vertically as necessary and reveal a line centered vertically.\n\t */\n\trevealLineInCenter(lineNumber: number): void;\n\n\t/**\n\t * Scroll vertically as necessary and reveal a line centered vertically only if it lies outside the viewport.\n\t */\n\trevealLineInCenterIfOutsideViewport(lineNumber: number): void;\n\n\t/**\n\t * Scroll vertically or horizontally as necessary and reveal a position.\n\t */\n\trevealPosition(position: IPosition): void;\n\n\t/**\n\t * Scroll vertically or horizontally as necessary and reveal a position centered vertically.\n\t */\n\trevealPositionInCenter(position: IPosition): void;\n\n\t/**\n\t * Scroll vertically or horizontally as necessary and reveal a position centered vertically only if it lies outside the viewport.\n\t */\n\trevealPositionInCenterIfOutsideViewport(position: IPosition): void;\n\n\t/**\n\t * Returns the primary selection of the editor.\n\t */\n\tgetSelection(): IEditorSelection;\n\n\t/**\n\t * Returns all the selections of the editor.\n\t */\n\tgetSelections(): IEditorSelection[];\n\n\t/**\n\t * Set the primary selection of the editor. This will remove any secondary cursors.\n\t * @param selection The new selection\n\t */\n\tsetSelection(selection:IRange): void;\n\tsetSelection(selection:IEditorRange): void;\n\tsetSelection(selection:ISelection): void;\n\tsetSelection(selection:IEditorSelection): void;\n\n\t/**\n\t * Set the selections for all the cursors of the editor.\n\t * Cursors will be removed or added, as necessary.\n\t */\n\tsetSelections(selections:ISelection[]): void;\n\n\t/**\n\t * Scroll vertically as necessary and reveal lines.\n\t */\n\trevealLines(startLineNumber: number, endLineNumber: number): void;\n\n\t/**\n\t * Scroll vertically as necessary and reveal lines centered vertically.\n\t */\n\trevealLinesInCenter(lineNumber: number, endLineNumber: number): void;\n\n\t/**\n\t * Scroll vertically as necessary and reveal lines centered vertically only if it lies outside the viewport.\n\t */\n\trevealLinesInCenterIfOutsideViewport(lineNumber: number, endLineNumber: number): void;\n\n\t/**\n\t * Scroll vertically or horizontally as necessary and reveal a range.\n\t */\n\trevealRange(range: IRange): void;\n\n\t/**\n\t * Scroll vertically or horizontally as necessary and reveal a range centered vertically.\n\t */\n\trevealRangeInCenter(range: IRange): void;\n\n\t/**\n\t * Scroll vertically or horizontally as necessary and reveal a range centered vertically only if it lies outside the viewport.\n\t */\n\trevealRangeInCenterIfOutsideViewport(range: IRange): void;\n\n\n\t/**\n\t * Directly trigger a handler or an editor action.\n\t * @param source The source of the call.\n\t * @param handlerId The id of the handler or the id of a contribution.\n\t * @param payload Extra data to be sent to the handler.\n\t */\n\ttrigger(source:string, handlerId:string, payload:any): void;\n\n\t/**\n\t * Gets the current model attached to this editor.\n\t */\n\tgetModel(): IEditorModel;\n\n\t/**\n\t * Sets the current model attached to this editor.\n\t * If the previous model was created by the editor via the value key in the options\n\t * literal object, it will be destroyed. Otherwise, if the previous model was set\n\t * via setModel, or the model key in the options literal object, the previous model\n\t * will not be destroyed.\n\t * It is safe to call setModel(null) to simply detach the current model from the editor.\n\t */\n\tsetModel(model:IEditorModel): void;\n\n\t/**\n\t * Change the decorations. All decorations added through this changeAccessor\n\t * will get the ownerId of the editor (meaning they will not show up in other\n\t * editors).\n\t * @see IModel.changeDecorations\n\t */\n\tchangeDecorations(callback: (changeAccessor:IModelDecorationsChangeAccessor)=>any): any;\n}\n\nexport interface ICodeEditorState {\n\tvalidate(editor:ICommonCodeEditor): boolean;\n}\n\nexport enum CodeEditorStateFlag {\n\tValue,\n\tSelection,\n\tPosition,\n\tScroll\n}\n\n/**\n * An editor contribution that gets created every time a new editor gets created and gets disposed when the editor gets disposed.\n */\nexport interface IEditorContribution {\n\t/**\n\t * Get a unique identifier for this contribution.\n\t */\n\tgetId(): string;\n\t/**\n\t * Dispose this contribution.\n\t */\n\tdispose(): void;\n}\n\nexport type MarkedString = string | { language: string; value: string };\n\nexport interface IThemeDecorationRenderOptions {\n\tbackgroundColor?: string;\n\n\toutlineColor?: string;\n\toutlineStyle?: string;\n\toutlineWidth?: string;\n\n\tborderColor?: string;\n\tborderRadius?: string;\n\tborderSpacing?: string;\n\tborderStyle?: string;\n\tborderWidth?: string;\n\n\ttextDecoration?: string;\n\tcursor?: string;\n\tcolor?: string;\n\n\tgutterIconPath?: string;\n\n\toverviewRulerColor?: string;\n}\n\nexport interface IDecorationRenderOptions extends IThemeDecorationRenderOptions {\n\tisWholeLine?: boolean;\n\toverviewRulerLane?: OverviewRulerLane;\n\n\tlight?: IThemeDecorationRenderOptions;\n\tdark?: IThemeDecorationRenderOptions;\n}\n\nexport interface IRangeWithMessage {\n\trange: IRange;\n\thoverMessage?: IHTMLContentElement[];\n}\n\nexport interface ICommonCodeEditor extends IEditor {\n\n\t/**\n\t * Get a contribution of this editor.\n\t * @id Unique identifier of the contribution.\n\t * @return The contribution or null if contribution not found.\n\t */\n\tgetContribution(id: string): IEditorContribution;\n\n\tcaptureState(...flags:CodeEditorStateFlag[]): ICodeEditorState;\n\n\t/**\n\t * Type the getModel() of IEditor.\n\t */\n\tgetModel(): IModel;\n\n\t/**\n\t * Returns the current editor's configuration\n\t */\n\tgetConfiguration(): IInternalEditorOptions;\n\n\t/**\n\t * Returns the 'raw' editor's configuration, as it was applied over the defaults, but without any computed members.\n\t */\n\tgetRawConfiguration(): IEditorOptions;\n\n\t/**\n\t * Computed indentation options.\n\t * If either one of the `tabSize` and `insertSpaces` options is set to 'auto', this is computed based on the current attached model.\n\t * Otherwise, they are equal to `tabSize` and `insertSpaces`.\n\t */\n\tgetIndentationOptions(): IInternalIndentationOptions;\n\n\t/**\n\t * Normalize whitespace using the editor's whitespace specific settings\n\t */\n\tnormalizeIndentation(str: string): string;\n\n\t/**\n\t * Get value of the current model attached to this editor.\n\t * @see IModel.getValue\n\t */\n\tgetValue(options?: { preserveBOM: boolean; lineEnding: string; }): string;\n\n\t/**\n\t * Set the value of the current model attached to this editor.\n\t * @see IModel.setValue\n\t */\n\tsetValue(newValue: string): void;\n\n\t/**\n\t * Returns the range that is currently centered in the view port.\n\t */\n\tgetCenteredRangeInViewport(): IEditorRange;\n\n\t/**\n\t * Change the scrollTop of the editor's viewport.\n\t */\n\tsetScrollTop(newScrollTop: number): void;\n\t/**\n\t * Get the scrollTop of the editor's viewport.\n\t */\n\tgetScrollTop(): number;\n\n\t/**\n\t * Change the scrollLeft of the editor's viewport.\n\t */\n\tsetScrollLeft(newScrollLeft: number): void;\n\t/**\n\t * Get the scrollLeft of the editor's viewport.\n\t */\n\tgetScrollLeft(): number;\n\n\t/**\n\t * Get the scrollWidth of the editor's viewport.\n\t */\n\tgetScrollWidth(): number;\n\n\t/**\n\t * Get the scrollHeight of the editor's viewport.\n\t */\n\tgetScrollHeight(): number;\n\n\t/**\n\t * Get an action that is a contribution to this editor.\n\t * @id Unique identifier of the contribution.\n\t * @return The action or null if action not found.\n\t */\n\tgetAction(id: string): IAction;\n\n\t/**\n\t * Execute a command on the editor.\n\t * @param source The source of the call.\n\t * @param command The command to execute\n\t */\n\texecuteCommand(source: string, command: ICommand): boolean;\n\n\t/**\n\t * Execute a command on the editor.\n\t * @param source The source of the call.\n\t * @param command The command to execute\n\t */\n\texecuteEdits(source: string, edits: IIdentifiedSingleEditOperation[]): boolean;\n\n\t/**\n\t * Execute multiple (concommitent) commands on the editor.\n\t * @param source The source of the call.\n\t * @param command The commands to execute\n\t */\n\texecuteCommands(source: string, commands: ICommand[]): boolean;\n\n\t/**\n\t * Get all the decorations on a line (filtering out decorations from other editors).\n\t */\n\tgetLineDecorations(lineNumber: number): IModelDecoration[];\n\n\t/**\n\t * All decorations added through this call wii get the ownerId of this editor.\n\t * @see IModel.deltaDecorations\n\t */\n\tdeltaDecorations(oldDecorations: string[], newDecorations: IModelDeltaDecoration[]): string[];\n\n\tsetDecorations(decorationTypeKey: string, ranges:IRangeWithMessage[]): void;\n\n\tremoveDecorations(decorationTypeKey:string): void;\n\n\t/**\n\t * Get the horizontal position (left offset) for the column w.r.t to the beginning of the line.\n\t * This method works only if the line `lineNumber` is currently rendered (in the editor's viewport).\n\t * Use this method with caution.\n\t */\n\tgetOffsetForColumn(lineNumber: number, column: number): number;\n\n\t/**\n\t * Get the vertical position (top offset) for the line w.r.t. to the first line.\n\t */\n\tgetTopForLineNumber(lineNumber: number): number;\n\n\t/**\n\t * Get the vertical position (top offset) for the position w.r.t. to the first line.\n\t */\n\tgetTopForPosition(lineNumber: number, column: number): number;\n\n\t/**\n\t * Get the visible position for `position`.\n\t * The result position takes scrolling into account and is relative to the top left corner of the editor.\n\t * Explanation 1: the results of this method will change for the same `position` if the user scrolls the editor.\n\t * Explanation 2: the results of this method will not change if the container of the editor gets repositioned.\n\t * Warning: the results of this method are innacurate for positions that are outside the current editor viewport.\n\t */\n\tgetScrolledVisiblePosition(position: IPosition): { top: number; left: number; height: number; };\n\n\t/**\n\t * Get the layout info for the editor.\n\t */\n\tgetLayoutInfo(): IEditorLayoutInfo;\n\n\t/**\n\t * Get the view zones.\n\t */\n\tgetWhitespaces(): IEditorWhitespace[];\n\n\t/**\n\t * Prevent the editor from sending a widgetFocusLost event,\n\t * set it in a state where it believes that focus is in one of its widgets.\n\t * Use this method with care and always add a matching `endForcedWidgetFocus`\n\t */\n\tbeginForcedWidgetFocus(): void;\n\n\t/**\n\t * End the preventing of sending a widgetFocusLost event.\n\t */\n\tendForcedWidgetFocus(): void;\n\n\t/**\n\t * This listener is notified when a keypress produces a visible character.\n\t * The callback should not do operations on the view, as the view might not be updated to reflect previous typed characters.\n\t * @param character Character to listen to.\n\t * @param callback Function to call when `character` is typed.\n\t */\n\taddTypingListener(character: string, callback: () => void): ListenerUnbind;\n\n}\n\nexport interface ICommonDiffEditor extends IEditor {\n\t/**\n\t * Type the getModel() of IEditor.\n\t */\n\tgetModel(): IDiffEditorModel;\n\n\tgetOriginalEditor(): ICommonCodeEditor;\n\tgetModifiedEditor(): ICommonCodeEditor;\n\n\tgetLineChanges(): ILineChange[];\n\n\t/**\n\t * Get information based on computed diff about a line number from the original model.\n\t * If the diff computation is not finished or the model is missing, will return null.\n\t */\n\tgetDiffLineInformationForOriginal(lineNumber:number): IDiffLineInformation;\n\t/**\n\t * Get information based on computed diff about a line number from the modified model.\n\t * If the diff computation is not finished or the model is missing, will return null.\n\t */\n\tgetDiffLineInformationForModified(lineNumber:number): IDiffLineInformation;\n\n\t/**\n\t * @see ICodeEditor.getValue\n\t */\n\tgetValue(options?:{ preserveBOM:boolean; lineEnding:string; }): string;\n\n\t/**\n\t * Returns whether the diff editor is ignoring trim whitespace or not.\n\t */\n\tignoreTrimWhitespace: boolean;\n\t/**\n\t * Returns whether the diff editor is rendering side by side or not.\n\t */\n\trenderSideBySide: boolean;\n}\n\nexport var EditorType = {\n\tICodeEditor: 'vs.editor.ICodeEditor',\n\tIDiffEditor: 'vs.editor.IDiffEditor'\n};\n\nexport var ClassName = {\n\tEditorWarningDecoration: 'greensquiggly',\n\tEditorErrorDecoration: 'redsquiggly'\n};\n\nexport var EventType = {\n\tDisposed: 'disposed',\n\n\tConfigurationChanged: 'configurationChanged',\n\n\tModelDispose: 'modelDispose',\n\n\tModelChanged: 'modelChanged',\n\n\tModelTokensChanged: 'modelTokensChanged',\n\tModelModeChanged: 'modelsModeChanged',\n\tModelModeSupportChanged: 'modelsModeSupportChanged',\n\tModelContentChanged: 'contentChanged',\n\tModelContentChanged2: 'contentChanged2',\n\tModelContentChangedFlush: 'flush',\n\tModelContentChangedLinesDeleted: 'linesDeleted',\n\tModelContentChangedLinesInserted: 'linesInserted',\n\tModelContentChangedLineChanged: 'lineChanged',\n\n\tEditorTextBlur: 'blur',\n\tEditorTextFocus: 'focus',\n\tEditorFocus: 'widgetFocus',\n\tEditorBlur: 'widgetBlur',\n\n\tModelPropertiesChanged: 'propertiesChanged',\n\tModelDecorationsChanged: 'decorationsChanged',\n\n\tCursorPositionChanged: 'positionChanged',\n\tCursorSelectionChanged: 'selectionChanged',\n\tCursorRevealRange: 'revealRange',\n\tCursorScrollRequest: 'scrollRequest',\n\n\tViewFocusGained: 'focusGained',\n\tViewFocusLost: 'focusLost',\n\tViewFocusChanged: 'focusChanged',\n\tViewScrollWidthChanged: 'scrollWidthChanged',\n\tViewScrollHeightChanged: 'scrollHeightChanged',\n\tViewScrollChanged: 'scrollChanged',\n\tViewZonesChanged: 'zonesChanged',\n\n\tViewLayoutChanged: 'viewLayoutChanged',\n\n\tContextMenu: 'contextMenu',\n\tMouseDown: 'mousedown',\n\tMouseUp: 'mouseup',\n\tMouseMove: 'mousemove',\n\tMouseLeave: 'mouseleave',\n\tKeyDown: 'keydown',\n\tKeyUp: 'keyup',\n\n\tEditorLayout: 'editorLayout',\n\n\tDiffUpdated: 'diffUpdated'\n};\n\nexport var Handler = {\n\tExecuteCommand:\t\t\t\t'executeCommand',\n\tExecuteCommands:\t\t\t'executeCommands',\n\n\tCursorLeft:\t\t\t\t\t'cursorLeft',\n\tCursorLeftSelect:\t\t\t'cursorLeftSelect',\n\tCursorWordLeft:\t\t\t\t'cursorWordLeft',\n\tCursorWordLeftSelect:\t\t'cursorWordLeftSelect',\n\n\tCursorRight:\t\t\t\t'cursorRight',\n\tCursorRightSelect:\t\t\t'cursorRightSelect',\n\tCursorWordRight:\t\t\t'cursorWordRight',\n\tCursorWordRightSelect:\t\t'cursorWordRightSelect',\n\n\tCursorUp:\t\t\t\t\t'cursorUp',\n\tCursorUpSelect:\t\t\t\t'cursorUpSelect',\n\tCursorDown:\t\t\t\t\t'cursorDown',\n\tCursorDownSelect:\t\t\t'cursorDownSelect',\n\n\tCursorPageUp:\t\t\t\t'cursorPageUp',\n\tCursorPageUpSelect:\t\t\t'cursorPageUpSelect',\n\tCursorPageDown:\t\t\t\t'cursorPageDown',\n\tCursorPageDownSelect:\t\t'cursorPageDownSelect',\n\n\tCursorHome:\t\t\t\t\t'cursorHome',\n\tCursorHomeSelect:\t\t\t'cursorHomeSelect',\n\n\tCursorEnd:\t\t\t\t\t'cursorEnd',\n\tCursorEndSelect:\t\t\t'cursorEndSelect',\n\n\tExpandLineSelection:\t\t'expandLineSelection',\n\n\tCursorTop:\t\t\t\t\t'cursorTop',\n\tCursorTopSelect:\t\t\t'cursorTopSelect',\n\tCursorBottom:\t\t\t\t'cursorBottom',\n\tCursorBottomSelect:\t\t\t'cursorBottomSelect',\n\n\tAddCursorDown:\t\t\t\t'addCursorDown',\n\tAddCursorUp:\t\t\t\t'addCursorUp',\n\tCursorUndo:\t\t\t\t\t'cursorUndo',\n\tMoveTo:\t\t\t\t\t\t'moveTo',\n\tMoveToSelect:\t\t\t\t'moveToSelect',\n\tCreateCursor:\t\t\t\t'createCursor',\n\tLastCursorMoveToSelect:\t\t'lastCursorMoveToSelect',\n\n\tJumpToBracket:\t\t\t\t'jumpToBracket',\n\n\tType:\t\t\t\t\t\t'type',\n\tReplacePreviousChar:\t\t'replacePreviousChar',\n\tPaste:\t\t\t\t\t\t'paste',\n\n\tTab:\t\t\t\t\t\t'tab',\n\tIndent:\t\t\t\t\t\t'indent',\n\tOutdent:\t\t\t\t\t'outdent',\n\n\tDeleteLeft:\t\t\t\t\t'deleteLeft',\n\tDeleteRight:\t\t\t\t'deleteRight',\n\tDeleteWordLeft:\t\t\t\t'deleteWordLeft',\n\tDeleteWordRight:\t\t\t'deleteWordRight',\n\tDeleteAllLeft:\t\t\t\t'deleteAllLeft',\n\tDeleteAllRight:\t\t\t\t'deleteAllRight',\n\n\tEnter: \t\t\t\t\t\t'enter',\n\tRemoveSecondaryCursors: \t'removeSecondaryCursors',\n\tCancelSelection:\t\t\t'cancelSelection',\n\n\tCut:\t\t\t\t\t\t'cut',\n\n\tUndo:\t\t\t\t\t\t'undo',\n\tRedo:\t\t\t\t\t\t'redo',\n\n\tWordSelect:\t\t\t\t\t'wordSelect',\n\tWordSelectDrag:\t\t\t\t'wordSelectDrag',\n\tLastCursorWordSelect: \t\t'lastCursorWordSelect',\n\n\tLineSelect:\t\t\t\t\t'lineSelect',\n\tLineSelectDrag:\t\t\t\t'lineSelectDrag',\n\tLastCursorLineSelect:\t\t'lastCursorLineSelect',\n\tLastCursorLineSelectDrag:\t'lastCursorLineSelectDrag',\n\tLineInsertBefore:\t\t\t'lineInsertBefore',\n\tLineInsertAfter:\t\t\t'lineInsertAfter',\n\tLineBreakInsert:\t\t\t'lineBreakInsert',\n\n\tSelectAll:\t\t\t\t\t'selectAll',\n\n\tScrollLineUp:\t\t\t\t'scrollLineUp',\n\tScrollLineDown:\t\t\t\t'scrollLineDown',\n\n\tScrollPageUp:\t\t\t\t'scrollPageUp',\n\tScrollPageDown:\t\t\t\t'scrollPageDown'\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {Range} from 'vs/editor/common/core/range';\nimport EditorCommon = require('vs/editor/common/editorCommon');\n\nexport class Selection extends Range implements EditorCommon.IEditorSelection {\n\tpublic selectionStartLineNumber: number;\n\tpublic selectionStartColumn: number;\n\tpublic positionLineNumber: number;\n\tpublic positionColumn: number;\n\n\tconstructor(selectionStartLineNumber: number, selectionStartColumn: number, positionLineNumber: number, positionColumn: number) {\n\t\tthis.selectionStartLineNumber = selectionStartLineNumber;\n\t\tthis.selectionStartColumn = selectionStartColumn;\n\t\tthis.positionLineNumber = positionLineNumber;\n\t\tthis.positionColumn = positionColumn;\n\t\tsuper(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn);\n\t}\n\n\tpublic clone(): EditorCommon.IEditorSelection {\n\t\treturn new Selection(this.selectionStartLineNumber, this.selectionStartColumn, this.positionLineNumber, this.positionColumn);\n\t}\n\n\tpublic toString(): string {\n\t\treturn '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\n\t}\n\n\tpublic equalsSelection(other: EditorCommon.ISelection): boolean {\n\t\treturn (\n\t\t\tSelection.selectionsEqual(this, other)\n\t\t);\n\t}\n\n\tpublic getDirection(): EditorCommon.SelectionDirection {\n\t\tif (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\n\t\t\treturn EditorCommon.SelectionDirection.LTR;\n\t\t}\n\t\treturn EditorCommon.SelectionDirection.RTL;\n\t}\n\n\tpublic setEndPosition(endLineNumber: number, endColumn: number): EditorCommon.IEditorSelection {\n\t\tif (this.getDirection() === EditorCommon.SelectionDirection.LTR) {\n\t\t\treturn new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n\t\t}\n\t\treturn new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn);\n\t}\n\n\tpublic setStartPosition(startLineNumber: number, startColumn: number): EditorCommon.IEditorSelection {\n\t\tif (this.getDirection() === EditorCommon.SelectionDirection.LTR) {\n\t\t\treturn new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n\t\t}\n\t\treturn new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn);\n\t}\n\n\t// ----\n\n\tpublic static createSelection(selectionStartLineNumber: number, selectionStartColumn: number, positionLineNumber: number, positionColumn: number): EditorCommon.IEditorSelection {\n\t\treturn new Selection(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn);\n\t}\n\n\tpublic static liftSelection(sel:EditorCommon.ISelection): EditorCommon.IEditorSelection {\n\t\treturn new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n\t}\n\n\tpublic static selectionsEqual(a:EditorCommon.ISelection, b:EditorCommon.ISelection): boolean {\n\t\treturn (\n\t\t\ta.selectionStartLineNumber === b.selectionStartLineNumber &&\n\t\t\ta.selectionStartColumn === b.selectionStartColumn &&\n\t\t\ta.positionLineNumber === b.positionLineNumber &&\n\t\t\ta.positionColumn === b.positionColumn\n\t\t);\n\t}\n\n\tpublic static selectionsArrEqual(a:EditorCommon.ISelection[], b:EditorCommon.ISelection[]): boolean {\n\t\tif (a && !b || !a && b) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!a && !b) {\n\t\t\treturn true;\n\t\t}\n\t\tif (a.length !== b.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (var i = 0, len = a.length; i < len; i++) {\n\t\t\tif (!this.selectionsEqual(a[i], b[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic static isISelection(obj: any): boolean {\n\t\treturn (\n\t\t\tobj\n\t\t\t&& (typeof obj.selectionStartLineNumber === 'number')\n\t\t\t&& (typeof obj.selectionStartColumn === 'number')\n\t\t\t&& (typeof obj.positionLineNumber === 'number')\n\t\t\t&& (typeof obj.positionColumn === 'number')\n\t\t);\n\t}\n\n\tpublic static createWithDirection(startLineNumber: number, startColumn: number, endLineNumber: number, endColumn: number, direction:EditorCommon.SelectionDirection): EditorCommon.IEditorSelection {\n\n\t\tif (direction === EditorCommon.SelectionDirection.LTR) {\n\t\t\treturn new Selection(startLineNumber, startColumn, endLineNumber, endColumn);\n\t\t}\n\n\t\treturn new Selection(endLineNumber, endColumn, startLineNumber, startColumn);\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {NullMode} from 'vs/editor/common/modes/nullMode';\nimport {Range} from 'vs/editor/common/core/range';\nimport Modes = require('vs/editor/common/modes');\nimport EditorCommon = require('vs/editor/common/editorCommon');\nimport {Arrays} from 'vs/editor/common/core/arrays';\nimport Errors = require('vs/base/common/errors');\n\nexport interface ITextSource {\n\n\t_lineIsTokenized(lineNumber:number): boolean;\n\n\tgetLineContent(lineNumber:number): string;\n\n\tgetLineCount(): number;\n\n\tgetMode(): Modes.IMode;\n\n\tgetModeAtPosition(lineNumber:number, column:number): Modes.IMode;\n\n\t_getLineModeTransitions(lineNumber:number): Modes.IModeTransition[];\n\n\tgetLineTokens(lineNumber:number, inaccurateTokensAcceptable:boolean): EditorCommon.ILineTokens;\n}\n\nvar getType = EditorCommon.LineTokensBinaryEncoding.getType;\nvar getBracket = EditorCommon.LineTokensBinaryEncoding.getBracket;\nvar getStartIndex = EditorCommon.LineTokensBinaryEncoding.getStartIndex;\n\nexport interface INonWordTokenMap {\n\t[key:string]:boolean;\n}\n\nexport class WordHelper {\n\n\tprivate static _safeGetWordDefinition(mode:Modes.IMode): RegExp {\n\t\tvar result: RegExp = null;\n\n\t\tif (mode.tokenTypeClassificationSupport) {\n\t\t\ttry {\n\t\t\t\tresult = mode.tokenTypeClassificationSupport.getWordDefinition();\n\t\t\t} catch(e) {\n\t\t\t\tErrors.onUnexpectedError(e);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic static ensureValidWordDefinition(wordDefinition?:RegExp): RegExp {\n\t\tvar result: RegExp = NullMode.DEFAULT_WORD_REGEXP;\n\n\t\tif (wordDefinition && (wordDefinition instanceof RegExp)) {\n\t\t\tif (!wordDefinition.global) {\n\t\t\t\tvar flags = 'g';\n\t\t\t\tif (wordDefinition.ignoreCase) {\n\t\t\t\t\tflags += 'i';\n\t\t\t\t}\n\t\t\t\tif (wordDefinition.multiline) {\n\t\t\t\t\tflags += 'm';\n\t\t\t\t}\n\t\t\t\tresult = new RegExp(wordDefinition.source, flags);\n\t\t\t} else {\n\t\t\t\tresult = wordDefinition;\n\t\t\t}\n\t\t}\n\n\t\tresult.lastIndex = 0;\n\n\t\treturn result;\n\t}\n\n\tpublic static massageWordDefinitionOf(mode:Modes.IMode): RegExp {\n\t\treturn WordHelper.ensureValidWordDefinition(WordHelper._safeGetWordDefinition(mode));\n\t}\n\n\tpublic static getWords(textSource:ITextSource, lineNumber:number): EditorCommon.IWordRange[] {\n\t\tif (!textSource._lineIsTokenized(lineNumber)) {\n\t\t\treturn WordHelper._getWordsInText(textSource.getLineContent(lineNumber), WordHelper.massageWordDefinitionOf(textSource.getMode()));\n\t\t}\n\n\t\tvar r: EditorCommon.IWordRange[] = [],\n\t\t\ttxt = textSource.getLineContent(lineNumber);\n\n\t\tif (txt.length > 0) {\n\n\t\t\tvar modeTransitions = textSource._getLineModeTransitions(lineNumber),\n\t\t\t\ti:number,\n\t\t\t\tlen:number,\n\t\t\t\tk:number,\n\t\t\t\tlenK:number,\n\t\t\t\tcurrentModeStartIndex: number,\n\t\t\t\tcurrentModeEndIndex: number,\n\t\t\t\tcurrentWordDefinition:RegExp,\n\t\t\t\tcurrentModeText: string,\n\t\t\t\twords: RegExpMatchArray,\n\t\t\t\tstartWord: number,\n\t\t\t\tendWord: number,\n\t\t\t\tword: string;\n\n\t\t\t// Go through all the modes\n\t\t\tfor (i = 0, currentModeStartIndex = 0, len = modeTransitions.length; i < len; i++) {\n\t\t\t\tcurrentWordDefinition = WordHelper.massageWordDefinitionOf(modeTransitions[i].mode);\n\t\t\t\tcurrentModeStartIndex = modeTransitions[i].startIndex;\n\t\t\t\tcurrentModeEndIndex = (i + 1 < len ? modeTransitions[i + 1].startIndex : txt.length);\n\t\t\t\tcurrentModeText = txt.substring(currentModeStartIndex, currentModeEndIndex);\n\t\t\t\twords = currentModeText.match(currentWordDefinition);\n\n\t\t\t\tif (!words) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tendWord = 0;\n\t\t\t\tfor (k = 0, lenK = words.length; k < lenK; k++) {\n\t\t\t\t\tword = words[k];\n\t\t\t\t\tif (word.length > 0) {\n\t\t\t\t\t\tstartWord = currentModeText.indexOf(word, endWord);\n\t\t\t\t\t\tendWord = startWord + word.length;\n\n\t\t\t\t\t\tr.push({\n\t\t\t\t\t\t\tstart: currentModeStartIndex + startWord,\n\t\t\t\t\t\t\tend: currentModeStartIndex + endWord\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn r;\n\t}\n\n\tstatic _getWordsInText(text:string, wordDefinition:RegExp): EditorCommon.IWordRange[] {\n\t\tvar words = text.match(wordDefinition) || [],\n\t\t\tk:number,\n\t\t\tstartWord:number,\n\t\t\tendWord:number,\n\t\t\tstartColumn:number,\n\t\t\tendColumn:number,\n\t\t\tword:string,\n\t\t\tr: EditorCommon.IWordRange[] = [];\n\n\t\tfor (k = 0; k < words.length; k++) {\n\t\t\tword = words[k].trim();\n\t\t\tif (word.length > 0) {\n\t\t\t\tstartWord = text.indexOf(word, endWord);\n\t\t\t\tendWord = startWord + word.length;\n\n\t\t\t\tstartColumn = startWord;\n\t\t\t\tendColumn = endWord;\n\n\t\t\t\tr.push({\n\t\t\t\t\tstart: startColumn,\n\t\t\t\t\tend: endColumn\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn r;\n\t}\n\n\tprivate static _getWordAtColumn(txt:string, column:number, modeIndex: number, modeTransitions:Modes.IModeTransition[]): EditorCommon.IWordAtPosition {\n\t\tvar modeStartIndex = modeTransitions[modeIndex].startIndex,\n\t\t\tmodeEndIndex = (modeIndex + 1 < modeTransitions.length ? modeTransitions[modeIndex + 1].startIndex : txt.length),\n\t\t\tmode = modeTransitions[modeIndex].mode;\n\n\t\treturn WordHelper._getWordAtText(\n\t\t\tcolumn, WordHelper.massageWordDefinitionOf(mode),\n\t\t\ttxt.substring(modeStartIndex, modeEndIndex), modeStartIndex\n\t\t);\n\t}\n\n\tpublic static getWordAtPosition(textSource:ITextSource, position:EditorCommon.IPosition): EditorCommon.IWordAtPosition {\n\n\t\tif (!textSource._lineIsTokenized(position.lineNumber)) {\n\t\t\treturn WordHelper._getWordAtText(position.column, WordHelper.massageWordDefinitionOf(textSource.getMode()), textSource.getLineContent(position.lineNumber), 0);\n\t\t}\n\n\t\tvar result: EditorCommon.IWordAtPosition = null;\n\t\tvar txt = textSource.getLineContent(position.lineNumber),\n\t\t\tmodeTransitions = textSource._getLineModeTransitions(position.lineNumber),\n\t\t\tcolumnIndex = position.column - 1,\n\t\t\tmodeIndex = Arrays.findIndexInSegmentsArray(modeTransitions, columnIndex);\n\n\t\tresult = WordHelper._getWordAtColumn(txt, position.column, modeIndex, modeTransitions);\n\n\t\tif (!result && modeIndex > 0 && modeTransitions[modeIndex].startIndex === columnIndex) {\n\t\t\t// The position is right at the beginning of `modeIndex`, so try looking at `modeIndex` - 1 too\n\t\t\tresult = WordHelper._getWordAtColumn(txt, position.column, modeIndex - 1, modeTransitions);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tstatic _getWordAtText(column:number, wordDefinition:RegExp, text:string, textOffset:number): EditorCommon.IWordAtPosition {\n\n\t\t// console.log('_getWordAtText: ', column, text, textOffset);\n\n\t\tvar words = text.match(wordDefinition),\n\t\t\tk:number,\n\t\t\tstartWord:number,\n\t\t\tendWord:number,\n\t\t\tstartColumn:number,\n\t\t\tendColumn:number,\n\t\t\tword:string;\n\n\t\tif (words) {\n\t\t\tfor (k = 0; k < words.length; k++) {\n\t\t\t\tword = words[k].trim();\n\t\t\t\tif (word.length > 0) {\n\t\t\t\t\tstartWord = text.indexOf(word, endWord);\n\t\t\t\t\tendWord = startWord + word.length;\n\n\t\t\t\t\tstartColumn = textOffset + startWord + 1;\n\t\t\t\t\tendColumn = textOffset + endWord + 1;\n\n\t\t\t\t\tif (startColumn <= column && column <= endColumn) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tword: word,\n\t\t\t\t\t\t\tstartColumn: startColumn,\n\t\t\t\t\t\t\tendColumn: endColumn\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n}\n\nexport class BracketsHelper {\n\n\tprivate static _sign(n:number): number {\n\t\treturn n < 0 ? -1 : n > 0 ? 1 : 0;\n\t}\n\n\tprivate static _findMatchingBracketUp(textSource:ITextSource, type:string, lineNumber:number, tokenIndex:number, initialCount:number): Range {\n\n\t\tvar i:number,\n\t\t\tend:number,\n\t\t\tj:number,\n\t\t\tcount = initialCount;\n\n\t\tfor (i = lineNumber; i >= 1; i--) {\n\n\t\t\tvar lineTokens = textSource.getLineTokens(i, false),\n\t\t\t\ttokens = lineTokens.getBinaryEncodedTokens(),\n\t\t\t\ttokensMap = lineTokens.getBinaryEncodedTokensMap(),\n\t\t\t\tlineText = textSource.getLineContent(i);\n\n\t\t\tfor (j = (i === lineNumber ? tokenIndex : tokens.length) - 1; j >= 0; j--) {\n\t\t\t\tif (getType(tokensMap, tokens[j]) === type) {\n\t\t\t\t\tcount += BracketsHelper._sign(getBracket(tokens[j]));\n\t\t\t\t\tif (count === 0) {\n\t\t\t\t\t\tend = (j === tokens.length - 1 ? lineText.length : getStartIndex(tokens[j + 1]));\n\t\t\t\t\t\treturn new Range(i, getStartIndex(tokens[j]) + 1, i, end + 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate static _findMatchingBracketDown(textSource:ITextSource, type:string, lineNumber:number, tokenIndex:number, inaccurateResultAcceptable:boolean): { range:Range; isAccurate:boolean; } {\n\n\t\tvar i:number,\n\t\t\tlen:number,\n\t\t\tend:number,\n\t\t\tj:number,\n\t\t\tlenJ:number,\n\t\t\tcount = 1;\n\n\t\tfor (i = lineNumber, len = textSource.getLineCount(); i <= len; i++) {\n\t\t\tif (inaccurateResultAcceptable && !textSource._lineIsTokenized(i)) {\n\t\t\t\treturn {\n\t\t\t\t\trange: null,\n\t\t\t\t\tisAccurate: false\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar lineTokens = textSource.getLineTokens(i, false),\n\t\t\t\ttokens = lineTokens.getBinaryEncodedTokens(),\n\t\t\t\ttokensMap = lineTokens.getBinaryEncodedTokensMap(),\n\t\t\t\tlineText = textSource.getLineContent(i);\n\n\t\t\tfor (j = (i === lineNumber ? tokenIndex + 1 : 0), lenJ = tokens.length; j < lenJ; j++) {\n\t\t\t\tif (getType(tokensMap, tokens[j]) === type) {\n\t\t\t\t\tcount += BracketsHelper._sign(getBracket(tokens[j]));\n\t\t\t\t\tif (count === 0) {\n\t\t\t\t\t\tend = (j === tokens.length - 1 ? lineText.length : getStartIndex(tokens[j + 1]));\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\trange: new Range(i, getStartIndex(tokens[j]) + 1, i, end + 1),\n\t\t\t\t\t\t\tisAccurate: true\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\trange: null,\n\t\t\tisAccurate: true\n\t\t};\n\t}\n\n\tpublic static findMatchingBracketUp(textSource:ITextSource, tokenType:string, position:EditorCommon.IPosition): EditorCommon.IEditorRange {\n\n\t\tvar i:number,\n\t\t\tlen:number,\n\t\t\tend:number,\n\t\t\tcolumnIndex = position.column - 1,\n\t\t\ttokenIndex = -1,\n\t\t\tlineTokens = textSource.getLineTokens(position.lineNumber, false),\n\t\t\ttokens = lineTokens.getBinaryEncodedTokens(),\n\t\t\tlineText = textSource.getLineContent(position.lineNumber);\n\n\t\tfor (i = 0, len = tokens.length; tokenIndex === -1 && i < len; i++) {\n\t\t\tend = i === len - 1 ? lineText.length : getStartIndex(tokens[i + 1]);\n\n\t\t\tif (getStartIndex(tokens[i]) <= columnIndex && columnIndex <= end) {\n\t\t\t\ttokenIndex = i;\n\t\t\t}\n\t\t}\n\n\t\t// Start looking one token after the bracket\n\t\treturn BracketsHelper._findMatchingBracketUp(textSource, tokenType, position.lineNumber, tokenIndex + 1, 0);\n\t}\n\n\tpublic static matchBracket(textSource:ITextSource, position:EditorCommon.IPosition, inaccurateResultAcceptable:boolean): EditorCommon.IMatchBracketResult {\n\t\tif (inaccurateResultAcceptable && !textSource._lineIsTokenized(position.lineNumber)) {\n\t\t\treturn {\n\t\t\t\tbrackets: null,\n\t\t\t\tisAccurate: false\n\t\t\t};\n\t\t}\n\n\t\tvar lineText = textSource.getLineContent(position.lineNumber),\n\t\t\ti:number,\n\t\t\tlen:number;\n\n\t\tvar result:EditorCommon.IMatchBracketResult = {\n\t\t\tbrackets: null,\n\t\t\tisAccurate: true\n\t\t};\n\n\t\tif (lineText.length > 0) {\n\t\t\tvar columnIndex = position.column - 1;\n\t\t\tvar token:number;\n\t\t\tvar end:number;\n\n\t\t\tvar lineTokens = textSource.getLineTokens(position.lineNumber, false),\n\t\t\t\ttokens = lineTokens.getBinaryEncodedTokens(),\n\t\t\t\ttokensMap = lineTokens.getBinaryEncodedTokensMap(),\n\t\t\t\ttokenStartIndex:number,\n\t\t\t\ttokenBracket:number,\n\t\t\t\ttokenType:string;\n\n\t\t\tfor (i = 0, len = tokens.length; result.brackets === null && i < len; i++) {\n\t\t\t\ttoken = tokens[i];\n\t\t\t\ttokenStartIndex = getStartIndex(token);\n\t\t\t\ttokenType = getType(tokensMap, token);\n\t\t\t\ttokenBracket = getBracket(token);\n\n\t\t\t\tend = i === len - 1 ? lineText.length : getStartIndex(tokens[i + 1]);\n\n\t\t\t\tif (tokenStartIndex <= columnIndex && columnIndex <= end) {\n\t\t\t\t\tif (tokenBracket < 0) {\n\t\t\t\t\t\tvar upMatch = BracketsHelper._findMatchingBracketUp(textSource, tokenType, position.lineNumber, i, -1);\n\t\t\t\t\t\tif (upMatch) {\n\t\t\t\t\t\t\tresult.brackets = [new Range(position.lineNumber, tokenStartIndex + 1, position.lineNumber, end + 1), upMatch];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (result.brackets === null && tokenBracket > 0) {\n\t\t\t\t\t\tvar downMatch = BracketsHelper._findMatchingBracketDown(textSource, tokenType, position.lineNumber, i, inaccurateResultAcceptable);\n\t\t\t\t\t\tresult.isAccurate = downMatch.isAccurate;\n\t\t\t\t\t\tif (downMatch.range) {\n\t\t\t\t\t\t\tresult.brackets = [new Range(position.lineNumber, tokenStartIndex + 1, position.lineNumber, end + 1), downMatch.range];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport Strings = require('vs/base/common/strings');\nimport Modes = require('vs/editor/common/modes');\n\nenum Lettercase { Unknown, Lowercase, Uppercase, Camelcase}\n\nexport class Brackets {\n\n\tprivate brackets: Modes.IBracketPair[];\n\tprivate regexBrackets: Modes.IRegexBracketPair[];\n\tprivate docComment: Modes.IDocComment;\n\tprivate caseInsensitive: boolean;\n\n\t/**\n\t * In case of case insensitive brackets, these assumptions must be met:\n\t * - all standard brackets are passed as lowercase\n\t * - the passed regular expressions already contain the /i flag\n\t *\n\t * Brackets defined in 'regexBrackets' are not used in the following methods:\n\t * - stringIsBracket\n\t *\n\t */\n\tconstructor(brackets: Modes.IBracketPair[], regexBrackets: Modes.IRegexBracketPair[] = [], docComment: Modes.IDocComment = null,\n\t\tcaseInsensitive: boolean = false) {\n\t\tthis.brackets = brackets;\n\t\tthis.regexBrackets = regexBrackets ? regexBrackets : [];\n\t\tthis.docComment = docComment ? docComment : null;\n\t\tthis.caseInsensitive = caseInsensitive ? caseInsensitive : false;\n\t}\n\n\tpublic getElectricCharacters():string[] {\n\t\tvar result: string[] = [];\n\n\t\t// Plain brackets\n\t\tvar bracketPair: Modes.IBracketPair;\n\t\tvar length = this.brackets.length;\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tbracketPair = this.brackets[i];\n\t\t\tif (bracketPair.isElectric) {\n\t\t\t\tvar lastChar = bracketPair.close.charAt(bracketPair.close.length - 1);\n\t\t\t\tresult.push(this.caseInsensitive ? lastChar.toLowerCase() : lastChar);\n\t\t\t}\n\t\t}\n\n\t\t// Regexp brackets (always electric)\n\t\tvar regexBracketPair: Modes.IRegexBracketPair;\n\t\tlength = this.regexBrackets.length;\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tregexBracketPair = this.regexBrackets[i];\n\t\t\tif (regexBracketPair.openTrigger) {\n\t\t\t\tresult.push( this.caseInsensitive ? regexBracketPair.openTrigger.toLowerCase() : regexBracketPair.openTrigger);\n\t\t\t}\n\t\t\tif (regexBracketPair.closeTrigger) {\n\t\t\t\tresult.push( this.caseInsensitive ? regexBracketPair.closeTrigger.toLowerCase() : regexBracketPair.closeTrigger);\n\t\t\t}\n\t\t}\n\n\t\t// Doc comments\n\t\tif (this.docComment){\n\t\t\tresult.push(this.docComment.open.charAt(this.docComment.open.length - 1));\n\t\t}\n\n\t\t// Add uppercase if needed\n\t\tif (this.caseInsensitive)\n\t\t{\n\t\t\tvar oldLength = result.length;\n\t\t\tfor (var i = 0; i < oldLength; ++i) {\n\t\t\t\tresult.push(result[i].toUpperCase());\n\t\t\t}\n\t\t}\n\n\t\t// Filter duplicate entries\n\t\tresult = result.filter((item, pos, array) => {\n\t\t\treturn array.indexOf(item) == pos;\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tpublic onEnter(context: Modes.ILineContext, offset: number): Modes.IEnterAction {\n\t\tif (context.getTokenCount() === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this._onEnterRegexBrackets(context, offset);\n\t}\n\n\tpublic onElectricCharacter(context: Modes.ILineContext, offset: number): Modes.IElectricAction {\n\t\tif (context.getTokenCount() === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn (this._onElectricCharacterDocComment(context, offset) ||\n\t\t\tthis._onElectricCharacterRegexBrackets(context, offset) ||\n\t\t\tthis._onElectricCharacterStandardBrackets(context, offset));\n\t}\n\n\tpublic stringIsBracket(text: string): boolean {\n\t\tvar caseCorrectString = text;\n\t\tif (this.caseInsensitive) {\n\t\t\tcaseCorrectString = text.toLowerCase();\n\t\t}\n\n\t\tvar bracketPair: Modes.IBracketPair;\n\t\tfor (var i = 0; i < this.brackets.length; i++) {\n\t\t\tbracketPair = this.brackets[i];\n\t\t\tif (caseCorrectString === bracketPair.open || caseCorrectString === bracketPair.close) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate containsTokenTypes(fullTokenSpec: string, tokensToLookFor: string): boolean {\n\t\tvar array = tokensToLookFor.split('.');\n\t\tfor (var i = 0; i < array.length; ++i) {\n\t\t\tif (fullTokenSpec.indexOf(array[i]) < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate _onEnterRegexBrackets(context: Modes.ILineContext, offset: number): Modes.IEnterAction {\n\t\t// Handle regular expression brackets\n\t\tfor (var i = 0; i < this.regexBrackets.length; ++i) {\n\t\t\tvar regexBracket = this.regexBrackets[i];\n\t\t\tvar line = context.getLineContent();\n\n\t\t\tif (this.caseInsensitive) {\n\t\t\t\tline = line.toLowerCase(); // Even with the /../i regexes we need this for the indexof below\n\t\t\t}\n\n\t\t\t// Check if an open bracket matches the line up to offset.\n\t\t\tvar matchLine = line.substr(0, offset);\n\t\t\tvar matches = matchLine.match(regexBracket.open);\n\n\t\t\tif (matches) {\n\n\t\t\t\t// The opening bracket matches. Check the closing one.\n\t\t\t\tif (regexBracket.closeComplete) {\n\t\t\t\t\tmatchLine = line.substring(offset);\n\t\t\t\t\tvar matchAfter = matches[0].replace(regexBracket.open, regexBracket.closeComplete);\n\t\t\t\t\tif (matchLine.indexOf(matchAfter) === 0) {\n\t\t\t\t\t\treturn { indentAction: Modes.IndentAction.IndentOutdent };\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn { indentAction: Modes.IndentAction.Indent };\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate _onElectricCharacterStandardBrackets(context: Modes.ILineContext, offset: number): Modes.IElectricAction {\n\t\tvar tokenIndex = context.findIndexOfOffset(offset);\n\t\tvar tokenText = context.getTokenText(tokenIndex);\n\t\tvar tokenType = context.getTokenType(tokenIndex);\n\t\tif (!this.stringIsBracket(tokenText)) {\n\t\t\t// This is not a brace type that we are aware of.\n\t\t\t// Keep in mind that tokenType above might be different than what this.tokenTypeFromString(tokenText)\n\t\t\t// returns, which could happen when using TextMate bundles.\n\t\t\treturn null;\n\t\t}\n\n\t\tif (tokenIndex >= 0 && context.getTokenEndIndex(tokenIndex)-1 > offset) {\n\t\t\t// We're in the middle of a token, do not do anything\n\t\t\treturn null;\n\t\t}\n\n\t\tvar firstNonWhitespaceIndex = Strings.firstNonWhitespaceIndex(context.getLineContent());\n\n\t\tif (firstNonWhitespaceIndex !== -1 && firstNonWhitespaceIndex <= offset-tokenText.length) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn { matchBracketType: tokenType };\n\t}\n\n\tprivate _onElectricCharacterRegexBrackets(context: Modes.ILineContext, offset: number): Modes.IElectricAction {\n\t\t// Handle regular expression brackets\n\t\tvar line = context.getLineContent();\n\t\tfor (var i = 0; i < this.regexBrackets.length; ++i) {\n\t\t\tvar regexBracket = this.regexBrackets[i];\n\n\t\t\t// Check if an open bracket matches the line up to offset.\n\t\t\tif (regexBracket.openTrigger && regexBracket.closeComplete &&\n\t\t\t\t(line.charAt(offset) === regexBracket.openTrigger ||\n\t\t\t\t\t(this.caseInsensitive && line.charAt(offset).toLowerCase() === regexBracket.openTrigger.toLowerCase()))) {\n\n\t\t\t\tvar matchLine = line.substr(0, offset+1);\n\t\t\t\tvar matches = matchLine.match(regexBracket.open);\n\t\t\t\tif (matches) {\n\t\t\t\t\t// Auto-complete with closing bracket.\n\t\t\t\t\tvar finalText = matches[0].replace(regexBracket.open, regexBracket.closeComplete);\n\t\t\t\t\tif (regexBracket.matchCase) {\n\t\t\t\t\t\tfinalText = this._changeLettercase(finalText, this._detectLetercase(matches[0]));\n\t\t\t\t\t}\n\t\t\t\t\treturn { appendText: finalText };\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check if a close bracket matches the line up to offset.\n\t\t\tif (regexBracket.closeTrigger &&\n\t\t\t\t\t(line.charAt(offset) === regexBracket.closeTrigger ||\n\t\t\t\t\t\t(this.caseInsensitive && line.charAt(offset).toLowerCase() === regexBracket.closeTrigger.toLowerCase()))) {\n\t\t\t\tvar matches = matchLine.match(regexBracket.close);\n\t\t\t\tif (matches) {\n\t\t\t\t\t// Auto-indent to the level of the opening bracket.\n\t\t\t\t\tvar properCaseMatch = matches[0];\n\t\t\t\t\tif (this.caseInsensitive) {\n\t\t\t\t\t\tproperCaseMatch = properCaseMatch.toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\treturn { matchBracketType: properCaseMatch.replace(regexBracket.close, regexBracket.tokenType)};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate _onElectricCharacterDocComment(context: Modes.ILineContext, offset: number): Modes.IElectricAction {\n\t\t// We only auto-close, so do nothing if there is no closing part.\n\t\tif (!this.docComment || !this.docComment.close) {\n\t\t\treturn null;\n\t\t}\n\n\t\tvar line = context.getLineContent();\n\t\tvar char: string = line[offset];\n\n\t\t// See if the right electric character was pressed\n\t\tif (char !== this.docComment.open.charAt(this.docComment.open.length - 1)) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// If this line already contains the closing tag, do nothing.\n\t\tif (line.indexOf(this.docComment.close, offset) >= 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// If we're not in a documentation comment, do nothing.\n\t\tvar lastTokenIndex = context.findIndexOfOffset(offset);\n\t\tif (! this.containsTokenTypes(context.getTokenType(lastTokenIndex), this.docComment.scope)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (line.substring(context.getTokenStartIndex(lastTokenIndex), offset+1/* include electric char*/) !== this.docComment.open) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn { appendText: this.docComment.close};\n\t}\n\n\tprivate _detectLetercase(s: string): Lettercase {\n\t\tif (s.toLowerCase() === s) {\n\t\t\treturn Lettercase.Lowercase;\n\t\t}\n\t\tif (s.toUpperCase() === s) {\n\t\t\treturn Lettercase.Uppercase;\n\t\t}\n\t\tif (s.length > 1) {\n\t\t\tif (s.charAt(0).toUpperCase() === s.charAt(0) && s.charAt(1).toLowerCase() === s.charAt(1)) {\n\t\t\t\treturn Lettercase.Camelcase;\n\t\t\t}\n\t\t}\n\n\t\treturn Lettercase.Unknown;\n\t}\n\n\tprivate _changeLettercase(s: string, newCase: Lettercase): string {\n\t\tswitch (newCase) {\n\t\t\tcase Lettercase.Lowercase:\n\t\t\t\treturn s.toLowerCase();\n\t\t\tcase Lettercase.Uppercase:\n\t\t\t\treturn s.toUpperCase();\n\t\t\tcase Lettercase.Camelcase:\n\t\t\t\tvar words = s.toLowerCase().split(' ');\n\t\t\t\tfor (var i = 0; i < words.length; ++i) {\n\t\t\t\t\twords[i] = words[i].charAt(0).toUpperCase() + words[i].substr(1);\n\t\t\t\t}\n\t\t\t\treturn words.join(' ');\n\t\t\tdefault:\n\t\t\t\treturn s;\n\t\t}\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport URI from 'vs/base/common/uri';\nimport {IModel} from 'vs/editor/common/editorCommon';\nimport {match as matchGlobPattern} from 'vs/base/common/glob';\n\nexport interface LanguageFilter {\n\tlanguage?: string;\n\tscheme?: string;\n\tpattern?: string;\n}\n\nexport type LanguageSelector = string|LanguageFilter|(string|LanguageFilter)[];\n\nexport default function matches(selection: LanguageSelector, uri: URI, language: string): boolean {\n\treturn score(selection, uri, language) > 0;\n}\n\nexport function score(selector: LanguageSelector, uri: URI, language: string): number {\n\n\tif (Array.isArray(selector)) {\n\t\t// for each\n\t\tlet values = (<LanguageSelector[]>selector).map(item => score(item, uri, language));\n\t\treturn Math.max(...values);\n\n\t} else if (typeof selector === 'string') {\n\t\t// compare language id\n\t\tif (selector === language) {\n\t\t\treturn 10;\n\t\t} else if (selector === '*') {\n\t\t\treturn 5;\n\t\t} else  {\n\t\t\treturn 0;\n\t\t}\n\t} else if (selector) {\n\t\tlet filter = <LanguageFilter>selector;\n\t\tlet value = 0;\n\n\t\t// language id\n\t\tif (filter.language) {\n\t\t\tif (filter.language === language) {\n\t\t\t\tvalue += 10;\n\t\t\t} else if (filter.language === '*') {\n\t\t\t\tvalue += 5;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\n\t\t// scheme\n\t\tif (filter.scheme) {\n\t\t\tif (filter.scheme === uri.scheme) {\n\t\t\t\tvalue += 10;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\n\t\t// match fsPath with pattern\n\t\tif (filter.pattern) {\n\t\t\tif (filter.pattern === uri.fsPath) {\n\t\t\t\tvalue += 10;\n\t\t\t} else if (matchGlobPattern(filter.pattern, uri.fsPath)) {\n\t\t\t\tvalue += 5;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport Event, {Emitter} from 'vs/base/common/event';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {IDisposable} from 'vs/base/common/lifecycle';\nimport URI from 'vs/base/common/uri';\nimport {binarySearch} from 'vs/base/common/arrays';\nimport {IPosition, IModel} from 'vs/editor/common/editorCommon';\nimport {IDeclarationSupport, ILineContext, IReference} from 'vs/editor/common/modes';\nimport {LanguageSelector, score} from 'vs/editor/common/modes/languageSelector';\n\ninterface Entry<T> {\n\tselector: LanguageSelector;\n\tprovider: T;\n\t_score: number;\n\t_time: number;\n}\n\nexport default class LanguageFeatureRegistry<T> {\n\n\tprivate _entries: Entry<T>[] = [];\n\tprivate _onDidChange = new Emitter<number>();\n\tprivate _supportName: string;\n\n\tconstructor(supportName?: string) {\n\t\tthis._supportName = supportName;\n\t}\n\n\tget onDidChange():Event<number> {\n\t\treturn this._onDidChange.event;\n\t}\n\n\tregister(selector: LanguageSelector, provider: T): IDisposable {\n\n\t\tlet entry: Entry<T> = {\n\t\t\tselector,\n\t\t\tprovider,\n\t\t\t_score: -1,\n\t\t\t_time: Date.now()\n\t\t};\n\n\t\tthis._entries.push(entry);\n\t\tthis._lastCandidate = undefined;\n\t\tthis._onDidChange.fire(this._entries.length);\n\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tif (entry) {\n\t\t\t\t\tlet idx = this._entries.indexOf(entry);\n\t\t\t\t\tif (idx >= 0) {\n\t\t\t\t\t\tthis._entries.splice(idx, 1);\n\t\t\t\t\t\tthis._lastCandidate = undefined;\n\t\t\t\t\t\tthis._onDidChange.fire(this._entries.length);\n\t\t\t\t\t\tentry = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\thas(model: IModel): boolean {\n\t\treturn this.all(model).length > 0;\n\t}\n\n\tall(model: IModel): T[] {\n\t\tif (!model || model.isTooLargeForHavingAMode()) {\n\t\t\treturn [];\n\t\t}\n\n\t\tthis._updateScores(model);\n\t\tconst result: T[] = [];\n\n\t\t// (1) from registry\n\t\tfor (let entry of this._entries) {\n\t\t\tif (entry._score > 0) {\n\t\t\t\tresult.push(entry.provider);\n\t\t\t}\n\t\t}\n\t\t// (2) from mode\n\t\tif (model.getMode() && model.getMode()[this._supportName]) {\n\t\t\tresult.push(model.getMode()[this._supportName]);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tordered(model: IModel): T[] {\n\t\tconst result: T[] = [];\n\t\tthis._orderedForEach(model, entry => result.push(entry.provider));\n\t\treturn result;\n\t}\n\n\torderedGroups(model: IModel): T[][] {\n\t\tconst result: T[][] = [];\n\t\tlet lastBucket: T[];\n\t\tlet lastBucketScore: number;\n\n\t\tthis._orderedForEach(model, entry => {\n\t\t\tif (lastBucket && lastBucketScore === entry._score) {\n\t\t\t\tlastBucket.push(entry.provider);\n\t\t\t} else {\n\t\t\t\tlastBucketScore = entry._score;\n\t\t\t\tlastBucket = [entry.provider];\n\t\t\t\tresult.push(lastBucket);\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tprivate _orderedForEach(model: IModel, callback: (provider: Entry<T>) => any): void {\n\n\t\tif (!model || model.isTooLargeForHavingAMode()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._updateScores(model)) {\n\t\t\tthis._sortByScore();\n\t\t}\n\n\t\tlet supportIndex: number = -1;\n\t\tlet supportEntry: Entry<T>;\n\n\t\tif (model.getMode() && model.getMode()[this._supportName]) {\n\t\t\tsupportEntry = {\n\t\t\t\tselector: undefined,\n\t\t\t\tprovider: model.getMode()[this._supportName],\n\t\t\t\t_score: .5,\n\t\t\t\t_time: 0\n\t\t\t};\n\t\t\tsupportIndex = ~binarySearch(this._entries, supportEntry, LanguageFeatureRegistry._compareByScoreAndTime);\n\t\t}\n\n\t\tconst to = Math.max(supportIndex + 1, this._entries.length);\n\t\tfor (let from = 0; from < to; from++) {\n\t\t\tif (from === supportIndex) {\n\t\t\t\tcallback(supportEntry);\n\t\t\t} else {\n\t\t\t\tlet entry = this._entries[from];\n\t\t\t\tif (entry._score > 0) {\n\t\t\t\t\tcallback(entry);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _lastCandidate: { uri: string; language: string; };\n\n\tprivate _updateScores(model: IModel): boolean {\n\n\t\tlet candidate = {\n\t\t\turi: model.getAssociatedResource().toString(),\n\t\t\tlanguage: model.getModeId()\n\t\t};\n\n\t\tif (this._lastCandidate\n\t\t\t&& this._lastCandidate.language === candidate.language\n\t\t\t&& this._lastCandidate.uri === candidate.uri) {\n\n\t\t\t// nothing has changed\n\t\t\treturn;\n\t\t}\n\n\t\tthis._lastCandidate = candidate;\n\n\t\tfor (let entry of this._entries) {\n\t\t\tentry._score = score(entry.selector, model.getAssociatedResource(), model.getModeId());\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate _sortByScore(): void {\n\t\tthis._entries.sort(LanguageFeatureRegistry._compareByScoreAndTime);\n\t}\n\n\tprivate static _compareByScoreAndTime(a: Entry<any>, b: Entry<any>): number {\n\t\tif (a._score < b._score) {\n\t\t\treturn 1;\n\t\t} else if (a._score > b._score) {\n\t\t\treturn -1;\n\t\t} else if(a._time < b._time){\n\t\t\treturn 1;\n\t\t} else if (a._time > b._time) {\n\t\t\treturn -1;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {ISuggestionFilter, ISuggestion} from 'vs/editor/common/modes';\nimport * as Filters from 'vs/base/common/filters';\nimport {isFalsyOrEmpty} from 'vs/base/common/arrays';\n\nexport type IMatch = Filters.IMatch;\n\nfunction wrapBaseFilter(filter: Filters.IFilter): ISuggestionFilter {\n\treturn (word: string, suggestion: ISuggestion): Filters.IMatch[] => {\n\t\tconst result = filter(word, suggestion.filterText || suggestion.label);\n\t\treturn isFalsyOrEmpty(result) ? undefined : result;\n\t};\n}\n\nexport var StrictPrefix: ISuggestionFilter = wrapBaseFilter(Filters.matchesStrictPrefix);\nexport var Prefix: ISuggestionFilter = wrapBaseFilter(Filters.matchesPrefix);\nexport var CamelCase: ISuggestionFilter = wrapBaseFilter(Filters.matchesCamelCase);\nexport var ContiguousSubString: ISuggestionFilter = wrapBaseFilter(Filters.matchesContiguousSubString);\n\n// Combined Filters\n\nexport function or(first: ISuggestionFilter, second: ISuggestionFilter): ISuggestionFilter {\n\treturn (word, suggestion) => first(word, suggestion) || second(word, suggestion);\n}\n\nexport function and(first: ISuggestionFilter, second: ISuggestionFilter): ISuggestionFilter {\n\treturn (word, suggestion) => first(word, suggestion) && second(word, suggestion);\n}\n\nexport var DefaultFilter = or(or(Prefix, CamelCase), ContiguousSubString);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport Errors = require('vs/base/common/errors');\nimport Strings = require('vs/base/common/strings');\nimport {IModelService} from 'vs/editor/common/services/modelService';\nimport {LineStream} from 'vs/editor/common/modes/lineStream';\nimport {NullMode, NullState, nullTokenize} from 'vs/editor/common/modes/nullMode';\nimport {Brackets} from 'vs/editor/common/modes/autoIndentation';\nimport {DefaultFilter} from 'vs/editor/common/modes/modesFilters';\nimport Modes = require('vs/editor/common/modes');\nimport EditorCommon = require('vs/editor/common/editorCommon');\nimport {IResourceService} from 'vs/editor/common/services/resourceService';\nimport {Arrays} from 'vs/editor/common/core/arrays';\nimport URI from 'vs/base/common/uri';\nimport {IDisposable} from 'vs/base/common/lifecycle';\n\nexport class Token implements Modes.IToken {\n\tpublic startIndex:number;\n\tpublic type:string;\n\tpublic bracket:Modes.Bracket;\n\n\tconstructor(startIndex:number, type:string, bracket:Modes.Bracket) {\n\t\tthis.startIndex = startIndex;\n\t\tthis.type = type;\n\t\tthis.bracket = bracket;\n\t}\n\n\tpublic toString(): string {\n\t\treturn '(' + this.startIndex + ', ' + this.type + ', ' + this.bracket + ')';\n\t}\n}\n\nexport function handleEvent<T>(context:Modes.ILineContext, offset:number, runner:(mode:Modes.IMode, newContext:Modes.ILineContext, offset:number)=>T):T {\n\tvar modeTransitions = context.modeTransitions;\n\tif (modeTransitions.length === 1) {\n\t\treturn runner(modeTransitions[0].mode, context, offset);\n\t}\n\n\tvar modeIndex = Arrays.findIndexInSegmentsArray(modeTransitions, offset);\n\tvar nestedMode = modeTransitions[modeIndex].mode;\n\tvar modeStartIndex = modeTransitions[modeIndex].startIndex;\n\n\tvar firstTokenInModeIndex = context.findIndexOfOffset(modeStartIndex);\n\tvar nextCharacterAfterModeIndex = -1;\n\tvar nextTokenAfterMode = -1;\n\tif (modeIndex + 1 < modeTransitions.length) {\n\t\tnextTokenAfterMode = context.findIndexOfOffset(modeTransitions[modeIndex + 1].startIndex);\n\t\tnextCharacterAfterModeIndex = context.getTokenStartIndex(nextTokenAfterMode);\n\t} else {\n\t\tnextTokenAfterMode = context.getTokenCount();\n\t\tnextCharacterAfterModeIndex = context.getLineContent().length;\n\t}\n\n\tvar firstTokenCharacterOffset = context.getTokenStartIndex(firstTokenInModeIndex);\n\tvar newCtx = new FilteredLineContext(context, nestedMode, firstTokenInModeIndex, nextTokenAfterMode, firstTokenCharacterOffset, nextCharacterAfterModeIndex);\n\treturn runner(nestedMode, newCtx, offset - firstTokenCharacterOffset);\n}\n\n/**\n * Returns {{true}} if the line token at the specified\n * offset matches one of the provided types. Matching\n * happens on a substring start from the end, unless\n * anywhereInToken is set to true in which case matches\n * happen on a substring at any position.\n */\nexport function isLineToken(context:Modes.ILineContext, offset:number, types:string[], anywhereInToken:boolean = false):boolean {\n\n\tif (!Array.isArray(types) || types.length === 0) {\n\t\treturn false;\n\t}\n\n\tif (context.getLineContent().length <= offset) {\n\t\treturn false;\n\t}\n\n\tvar tokenIdx = context.findIndexOfOffset(offset);\n\tvar type = context.getTokenType(tokenIdx);\n\n\tfor (var i = 0, len = types.length; i < len; i++) {\n\t\tif (anywhereInToken) {\n\t\t\tif (type.indexOf(types[i]) >= 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (Strings.endsWith(type, types[i])) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn false;\n}\n\nexport class FilteredLineContext implements Modes.ILineContext {\n\n\tpublic modeTransitions: Modes.IModeTransition[];\n\n\tprivate _actual:Modes.ILineContext;\n\tprivate _firstTokenInModeIndex:number;\n\tprivate _nextTokenAfterMode:number;\n\tprivate _firstTokenCharacterOffset:number;\n\tprivate _nextCharacterAfterModeIndex:number;\n\n\tconstructor(actual:Modes.ILineContext, mode:Modes.IMode,\n\t\t\tfirstTokenInModeIndex:number, nextTokenAfterMode:number,\n\t\t\tfirstTokenCharacterOffset:number, nextCharacterAfterModeIndex:number) {\n\n\t\tthis.modeTransitions = [{\n\t\t\tstartIndex: 0,\n\t\t\tmode: mode\n\t\t}];\n\t\tthis._actual = actual;\n\t\tthis._firstTokenInModeIndex = firstTokenInModeIndex;\n\t\tthis._nextTokenAfterMode = nextTokenAfterMode;\n\t\tthis._firstTokenCharacterOffset = firstTokenCharacterOffset;\n\t\tthis._nextCharacterAfterModeIndex = nextCharacterAfterModeIndex;\n\t}\n\n\tpublic getLineContent(): string {\n\t\tvar actualLineContent = this._actual.getLineContent();\n\t\treturn actualLineContent.substring(this._firstTokenCharacterOffset, this._nextCharacterAfterModeIndex);\n\t}\n\n\tpublic getTokenCount(): number {\n\t\treturn this._nextTokenAfterMode - this._firstTokenInModeIndex;\n\t}\n\n\tpublic findIndexOfOffset(offset:number): number {\n\t\treturn this._actual.findIndexOfOffset(offset + this._firstTokenCharacterOffset) - this._firstTokenInModeIndex;\n\t}\n\n\tpublic getTokenStartIndex(tokenIndex:number): number {\n\t\treturn this._actual.getTokenStartIndex(tokenIndex + this._firstTokenInModeIndex) - this._firstTokenCharacterOffset;\n\t}\n\n\tpublic getTokenEndIndex(tokenIndex:number): number {\n\t\treturn this._actual.getTokenEndIndex(tokenIndex + this._firstTokenInModeIndex) - this._firstTokenCharacterOffset;\n\t}\n\n\tpublic getTokenType(tokenIndex:number): string {\n\t\treturn this._actual.getTokenType(tokenIndex + this._firstTokenInModeIndex);\n\t}\n\n\tpublic getTokenBracket(tokenIndex:number): Modes.Bracket {\n\t\treturn this._actual.getTokenBracket(tokenIndex + this._firstTokenInModeIndex);\n\t}\n\n\tpublic getTokenText(tokenIndex:number): string {\n\t\treturn this._actual.getTokenText(tokenIndex + this._firstTokenInModeIndex);\n\t}\n}\n\n\nexport class AbstractSupport {\n\n\tprivate _mode:Modes.IMode;\n\n\tconstructor(mode:Modes.IMode) {\n\t\tthis._mode = mode;\n\t}\n\n\tpublic get mode() {\n\t\treturn this._mode;\n\t}\n}\n\n//---  Tokenazation support implementation\n\nexport interface ILeavingNestedModeData {\n\t/**\n\t * The part of the line that will be tokenized by the nested mode\n\t */\n\tnestedModeBuffer: string;\n\n\t/**\n\t * The part of the line that will be tokenized by the parent mode when it continues after the nested mode\n\t */\n\tbufferAfterNestedMode: string;\n\n\t/**\n\t * The state that will be used for continuing tokenization by the parent mode after the nested mode\n\t */\n\tstateAfterNestedMode: Modes.IState;\n}\n\nexport interface IEnteringNestedModeData {\n\tmode:Modes.IMode;\n\tmissingModePromise:TPromise<void>;\n}\n\nexport interface ITokenizationCustomization {\n\n\tgetInitialState():Modes.IState;\n\n\tenterNestedMode?: (state:Modes.IState) => boolean;\n\n\tgetNestedMode?: (state:Modes.IState) => IEnteringNestedModeData;\n\n\tgetNestedModeInitialState?: (myState:Modes.IState) => { state:Modes.IState; missingModePromise:TPromise<void>; };\n\n\t/**\n\t * Return null if the line does not leave the nested mode\n\t */\n\tgetLeavingNestedModeData?: (line:string, state:Modes.IState) => ILeavingNestedModeData;\n\n\t/**\n\t * Callback for when leaving a nested mode and returning to the outer mode.\n\t * @param myStateAfterNestedMode The outer mode's state that will begin to tokenize\n\t * @param lastNestedModeState The nested mode's last state\n\t */\n\tonReturningFromNestedMode?: (myStateAfterNestedMode:Modes.IState, lastNestedModeState:Modes.IState)=> void;\n}\n\nfunction isFunction(something) {\n\treturn typeof something === 'function';\n}\n\nexport class TokenizationSupport extends AbstractSupport implements Modes.ITokenizationSupport, IDisposable {\n\n\tstatic MAX_EMBEDDED_LEVELS = 5;\n\n\tprivate customization:ITokenizationCustomization;\n\tprivate defaults: {\n\t\tenterNestedMode: boolean;\n\t\tgetNestedMode: boolean;\n\t\tgetNestedModeInitialState: boolean;\n\t\tgetLeavingNestedModeData: boolean;\n\t\tonReturningFromNestedMode: boolean;\n\t};\n\n\tpublic shouldGenerateEmbeddedModels:boolean;\n\tpublic supportsNestedModes:boolean;\n\n\tprivate _embeddedModesListeners: { [modeId:string]: IDisposable; };\n\n\tconstructor(mode:Modes.IMode, customization:ITokenizationCustomization, supportsNestedModes:boolean, shouldGenerateEmbeddedModels:boolean) {\n\t\tsuper(mode);\n\t\tthis.customization = customization;\n\t\tthis.supportsNestedModes = supportsNestedModes;\n\t\tthis._embeddedModesListeners = {};\n\t\tif (this.supportsNestedModes) {\n\t\t\tif (!this.mode.registerSupport) {\n\t\t\t\tthrow new Error('Cannot be a mode with nested modes unless I can emit a tokenizationSupport changed event!');\n\t\t\t}\n\t\t}\n\t\tthis.shouldGenerateEmbeddedModels = shouldGenerateEmbeddedModels;\n\t\tthis.defaults = {\n\t\t\tenterNestedMode: !isFunction(customization.enterNestedMode),\n\t\t\tgetNestedMode: !isFunction(customization.getNestedMode),\n\t\t\tgetNestedModeInitialState: !isFunction(customization.getNestedModeInitialState),\n\t\t\tgetLeavingNestedModeData: !isFunction(customization.getLeavingNestedModeData),\n\t\t\tonReturningFromNestedMode: !isFunction(customization.onReturningFromNestedMode)\n\t\t};\n\t}\n\n\tpublic dispose() : void {\n\t\tfor (var listener in this._embeddedModesListeners) {\n\t\t\tthis._embeddedModesListeners[listener].dispose();\n\t\t\tdelete this._embeddedModesListeners[listener];\n\t\t}\n\t}\n\n\tpublic getInitialState(): Modes.IState {\n\t\treturn this.customization.getInitialState();\n\t}\n\n\tpublic tokenize(line:string, state:Modes.IState, deltaOffset:number = 0, stopAtOffset:number = deltaOffset + line.length):Modes.ILineTokens {\n\t\tif (state.getMode() !== this.mode) {\n\t\t\treturn this._nestedTokenize(line, state, deltaOffset, stopAtOffset, [], []);\n\t\t} else {\n\t\t\treturn this._myTokenize(line, state, deltaOffset, stopAtOffset, [], []);\n\t\t}\n\t}\n\n\t/**\n\t * Precondition is: nestedModeState.getMode() !== this\n\t * This means we are in a nested mode when parsing starts on this line.\n\t */\n\tprivate _nestedTokenize(buffer:string, nestedModeState:Modes.IState, deltaOffset:number, stopAtOffset:number, prependTokens:Modes.IToken[], prependModeTransitions:Modes.IModeTransition[]):Modes.ILineTokens {\n\t\tvar myStateBeforeNestedMode = nestedModeState.getStateData();\n\t\tvar leavingNestedModeData = this.getLeavingNestedModeData(buffer, myStateBeforeNestedMode);\n\n\t\t// Be sure to give every embedded mode the\n\t\t// opportunity to leave nested mode.\n\t\t// i.e. Don't go straight to the most nested mode\n\t\tvar stepOnceNestedState = nestedModeState;\n\t\twhile (stepOnceNestedState.getStateData() && stepOnceNestedState.getStateData().getMode() !== this.mode) {\n\t\t\tstepOnceNestedState = stepOnceNestedState.getStateData();\n\t\t}\n\t\tvar nestedMode = stepOnceNestedState.getMode();\n\n\t\tif (!leavingNestedModeData) {\n\t\t\t// tokenization will not leave nested mode\n\t\t\tvar result:Modes.ILineTokens;\n\t\t\tif (nestedMode.tokenizationSupport) {\n\t\t\t\tresult = nestedMode.tokenizationSupport.tokenize(buffer, nestedModeState, deltaOffset, stopAtOffset);\n\t\t\t} else {\n\t\t\t\t// The nested mode doesn't have tokenization support,\n\t\t\t\t// unfortunatelly this means we have to fake it\n\t\t\t\tresult = nullTokenize(nestedMode, buffer, nestedModeState, deltaOffset);\n\t\t\t}\n\t\t\tresult.tokens = prependTokens.concat(result.tokens);\n\t\t\tresult.modeTransitions = prependModeTransitions.concat(result.modeTransitions);\n\t\t\treturn result;\n\t\t}\n\n\t\tvar nestedModeBuffer = leavingNestedModeData.nestedModeBuffer;\n\t\tif (nestedModeBuffer.length > 0) {\n\t\t\t// Tokenize with the nested mode\n\t\t\tvar nestedModeLineTokens:Modes.ILineTokens;\n\t\t\tif (nestedMode.tokenizationSupport) {\n\t\t\t\tnestedModeLineTokens = nestedMode.tokenizationSupport.tokenize(nestedModeBuffer, nestedModeState, deltaOffset, stopAtOffset);\n\t\t\t} else {\n\t\t\t\t// The nested mode doesn't have tokenization support,\n\t\t\t\t// unfortunatelly this means we have to fake it\n\t\t\t\tnestedModeLineTokens = nullTokenize(nestedMode, nestedModeBuffer, nestedModeState, deltaOffset);\n\t\t\t}\n\n\t\t\t// Save last state of nested mode\n\t\t\tnestedModeState = nestedModeLineTokens.endState;\n\n\t\t\t// Prepend nested mode's result to our result\n\t\t\tprependTokens = prependTokens.concat(nestedModeLineTokens.tokens);\n\t\t\tprependModeTransitions = prependModeTransitions.concat(nestedModeLineTokens.modeTransitions);\n\t\t}\n\n\t\tvar bufferAfterNestedMode = leavingNestedModeData.bufferAfterNestedMode;\n\t\tvar myStateAfterNestedMode = leavingNestedModeData.stateAfterNestedMode;\n\t\tmyStateAfterNestedMode.setStateData(myStateBeforeNestedMode.getStateData());\n\t\tthis.onReturningFromNestedMode(myStateAfterNestedMode, nestedModeState);\n\n\t\treturn this._myTokenize(bufferAfterNestedMode, myStateAfterNestedMode, deltaOffset + nestedModeBuffer.length, stopAtOffset, prependTokens, prependModeTransitions);\n\t}\n\n\t/**\n\t * Precondition is: state.getMode() === this\n\t * This means we are in the current mode when parsing starts on this line.\n\t */\n\tprivate _myTokenize(buffer:string, myState:Modes.IState, deltaOffset:number, stopAtOffset:number, prependTokens:Modes.IToken[], prependModeTransitions:Modes.IModeTransition[]):Modes.ILineTokens {\n\t\tvar lineStream = new LineStream(buffer);\n\t\tvar tokenResult:Modes.ITokenizationResult, beforeTokenizeStreamPos:number;\n\t\tvar previousType:string = null;\n\t\tvar retokenize:TPromise<void> = null;\n\n\t\tmyState = myState.clone();\n\t\tif (prependModeTransitions.length <= 0 || prependModeTransitions[prependModeTransitions.length-1].mode !== this.mode) {\n\t\t\t// Avoid transitioning to the same mode (this can happen in case of empty embedded modes)\n\t\t\tprependModeTransitions.push({\n\t\t\t\tstartIndex: deltaOffset,\n\t\t\t\tmode: this.mode\n\t\t\t});\n\t\t}\n\n\t\tvar maxPos = Math.min(stopAtOffset - deltaOffset, buffer.length);\n\t\tvar noneBracket = Modes.Bracket.None;\n\t\twhile (lineStream.pos() < maxPos) {\n\t\t\tbeforeTokenizeStreamPos = lineStream.pos();\n\n\t\t\tdo {\n\t\t\t\ttokenResult = myState.tokenize(lineStream);\n\t\t\t\tif (tokenResult === null || tokenResult === undefined ||\n\t\t\t\t\t((tokenResult.type === undefined || tokenResult.type === null) &&\n\t\t\t\t\t(tokenResult.nextState === undefined || tokenResult.nextState === null))) {\n\t\t\t\t\tthrow new Error('Tokenizer must return a valid state');\n\t\t\t\t}\n\n\t\t\t\tif (tokenResult.nextState) {\n\t\t\t\t\ttokenResult.nextState.setStateData(myState.getStateData());\n\t\t\t\t\tmyState = tokenResult.nextState;\n\t\t\t\t}\n\t\t\t\tif (lineStream.pos() <= beforeTokenizeStreamPos) {\n\t\t\t\t\tthrow new Error('Stream did not advance while tokenizing. Mode id is ' + this.mode.getId() + ' (stuck at token type: \"' + tokenResult.type + '\", prepend tokens: \"' + (prependTokens.map(t => t.type).join(',')) + '\").');\n\t\t\t\t}\n\t\t\t} while (!tokenResult.type && tokenResult.type !== '');\n\n\t\t\tif (previousType !== tokenResult.type || tokenResult.bracket || previousType === null) {\n\t\t\t\tprependTokens.push(new Token(beforeTokenizeStreamPos + deltaOffset, tokenResult.type, tokenResult.bracket || noneBracket));\n\t\t\t}\n\n\t\t\tpreviousType = tokenResult.type;\n\n\t\t\tif (this.supportsNestedModes && this.enterNestedMode(myState)) {\n\t\t\t\tvar currentEmbeddedLevels = this._getEmbeddedLevel(myState);\n\t\t\t\tif (currentEmbeddedLevels < TokenizationSupport.MAX_EMBEDDED_LEVELS) {\n\t\t\t\t\tvar nestedModeState = this.getNestedModeInitialState(myState);\n\n\t\t\t\t\t// Re-emit tokenizationSupport change events from all modes that I ever embedded\n\t\t\t\t\tvar embeddedMode = nestedModeState.state.getMode();\n\t\t\t\t\tif (typeof embeddedMode.addSupportChangedListener === 'function' && !this._embeddedModesListeners.hasOwnProperty(embeddedMode.getId())) {\n\t\t\t\t\t\tvar emitting = false;\n\t\t\t\t\t\tthis._embeddedModesListeners[embeddedMode.getId()] = embeddedMode.addSupportChangedListener((e) => {\n\t\t\t\t\t\t\tif (emitting) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (e.tokenizationSupport) {\n\t\t\t\t\t\t\t\temitting = true;\n\t\t\t\t\t\t\t\tthis.mode.registerSupport('tokenizationSupport', (mode) => {\n\t\t\t\t\t\t\t\t\treturn mode.tokenizationSupport;\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\temitting = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif (!lineStream.eos()) {\n\t\t\t\t\t\t// There is content from the embedded mode\n\t\t\t\t\t\tvar restOfBuffer = buffer.substr(lineStream.pos());\n\t\t\t\t\t\tvar result = this._nestedTokenize(restOfBuffer, nestedModeState.state, deltaOffset + lineStream.pos(), stopAtOffset, prependTokens, prependModeTransitions);\n\t\t\t\t\t\tresult.retokenize = result.retokenize || nestedModeState.missingModePromise;\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Transition to the nested mode state\n\t\t\t\t\t\tmyState = nestedModeState.state;\n\t\t\t\t\t\tretokenize = nestedModeState.missingModePromise;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\ttokens: prependTokens,\n\t\t\tactualStopOffset: lineStream.pos() + deltaOffset,\n\t\t\tmodeTransitions: prependModeTransitions,\n\t\t\tendState: myState,\n\t\t\tretokenize: retokenize\n\t\t};\n\t}\n\n\tprivate _getEmbeddedLevel(state:Modes.IState): number {\n\t\tvar result = -1;\n\t\twhile(state) {\n\t\t\tresult++;\n\t\t\tstate = state.getStateData();\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate enterNestedMode(state:Modes.IState): boolean {\n\t\tif (this.defaults.enterNestedMode) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.customization.enterNestedMode(state);\n\n\t}\n\n\tprivate getNestedMode(state:Modes.IState): IEnteringNestedModeData {\n\t\tif (this.defaults.getNestedMode) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this.customization.getNestedMode(state);\n\t}\n\n\tprivate static _validatedNestedMode(input:IEnteringNestedModeData): IEnteringNestedModeData {\n\t\tvar mode: Modes.IMode = new NullMode(),\n\t\t\tmissingModePromise: TPromise<void> = null;\n\n\t\tif (input && input.mode) {\n\t\t\tmode = input.mode;\n\t\t}\n\t\tif (input && input.missingModePromise) {\n\t\t\tmissingModePromise = input.missingModePromise;\n\t\t}\n\n\t\treturn {\n\t\t\tmode: mode,\n\t\t\tmissingModePromise: missingModePromise\n\t\t};\n\t}\n\n\tprivate getNestedModeInitialState(state:Modes.IState): { state:Modes.IState; missingModePromise:TPromise<void>; } {\n\t\tif (this.defaults.getNestedModeInitialState) {\n\t\t\tvar nestedMode = TokenizationSupport._validatedNestedMode(this.getNestedMode(state));\n\t\t\tvar missingModePromise = nestedMode.missingModePromise;\n\t\t\tvar nestedModeState: Modes.IState;\n\n\t\t\tif (nestedMode.mode.tokenizationSupport) {\n\t\t\t\tnestedModeState = nestedMode.mode.tokenizationSupport.getInitialState();\n\t\t\t} else {\n\t\t\t\tnestedModeState = new NullState(nestedMode.mode, null);\n\t\t\t}\n\n\t\t\tnestedModeState.setStateData(state);\n\n\t\t\treturn {\n\t\t\t\tstate: nestedModeState,\n\t\t\t\tmissingModePromise: missingModePromise\n\t\t\t};\n\t\t}\n\t\treturn this.customization.getNestedModeInitialState(state);\n\t}\n\n\tprivate getLeavingNestedModeData(line:string, state:Modes.IState): ILeavingNestedModeData {\n\t\tif (this.defaults.getLeavingNestedModeData) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this.customization.getLeavingNestedModeData(line, state);\n\t}\n\n\tprivate onReturningFromNestedMode(myStateAfterNestedMode:Modes.IState, lastNestedModeState:Modes.IState): void {\n\t\tif (this.defaults.onReturningFromNestedMode) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this.customization.onReturningFromNestedMode(myStateAfterNestedMode, lastNestedModeState);\n\t}\n}\n\nexport interface IBracketElectricCharacterContribution {\n\tbrackets: Modes.IBracketPair[];\n\tregexBrackets?: Modes.IRegexBracketPair[];\n\tdocComment?: Modes.IDocComment;\n\tcaseInsensitive?: boolean;\n\tembeddedElectricCharacters?: string[];\n}\nexport class BracketElectricCharacterSupport extends AbstractSupport implements Modes.IElectricCharacterSupport {\n\n\tprivate contribution: IBracketElectricCharacterContribution;\n\tprivate brackets: Brackets;\n\n\tconstructor(mode:Modes.IMode, contribution: IBracketElectricCharacterContribution) {\n\t\tsuper(mode);\n\t\tthis.contribution = contribution;\n\t\tthis.brackets = new Brackets(contribution.brackets, contribution.regexBrackets,\n\t\t\tcontribution.docComment, contribution.caseInsensitive);\n\t}\n\n\tpublic getElectricCharacters(): string[]{\n\t\tif (Array.isArray(this.contribution.embeddedElectricCharacters)) {\n\t\t\treturn this.contribution.embeddedElectricCharacters.concat(this.brackets.getElectricCharacters());\n\t\t}\n\t\treturn this.brackets.getElectricCharacters();\n\t}\n\n\tpublic onElectricCharacter(context:Modes.ILineContext, offset:number): Modes.IElectricAction {\n\t\treturn handleEvent(context, offset, (nestedMode:Modes.IMode, context:Modes.ILineContext, offset:number) => {\n\t\t\tif (this.mode === nestedMode) {\n\t\t\t\treturn this.brackets.onElectricCharacter(context, offset);\n\t\t\t} else if (nestedMode.electricCharacterSupport) {\n\t\t\t\treturn nestedMode.electricCharacterSupport.onElectricCharacter(context, offset);\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic onEnter(context: Modes.ILineContext, offset: number): Modes.IEnterAction {\n\t\treturn handleEvent(context, offset, (nestedMode:Modes.IMode, context:Modes.ILineContext, offset:number) => {\n\t\t\tif (this.mode === nestedMode) {\n\t\t\t\treturn this.brackets.onEnter(context, offset);\n\t\t\t} else if (nestedMode.electricCharacterSupport) {\n\t\t\t\treturn nestedMode.electricCharacterSupport.onEnter(context, offset);\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t});\n\t}\n}\n\n\n\nexport interface IDeclarationContribution {\n\ttokens?: string[];\n\tfindDeclaration: (resource: URI, position: EditorCommon.IPosition) => TPromise<Modes.IReference>;\n}\nexport class DeclarationSupport extends AbstractSupport implements Modes.IDeclarationSupport {\n\n\tprivate contribution: IDeclarationContribution;\n\n\t/**\n\t * Provide the token type postfixes for the tokens where a declaration can be found in the 'tokens' argument.\n\t */\n\tconstructor(mode: Modes.IMode, contribution: IDeclarationContribution) {\n\t\tsuper(mode);\n\t\tthis.contribution = contribution;\n\t}\n\n\tpublic canFindDeclaration(context: Modes.ILineContext, offset:number):boolean {\n\t\treturn handleEvent(context, offset, (nestedMode:Modes.IMode, context:Modes.ILineContext, offset:number) => {\n\t\t\tif (this.mode === nestedMode) {\n\t\t\t\treturn (!Array.isArray(this.contribution.tokens) ||\n\t\t\t\t\tthis.contribution.tokens.length < 1 ||\n\t\t\t\t\tisLineToken(context, offset, this.contribution.tokens));\n\t\t\t} else if (nestedMode.declarationSupport) {\n\t\t\t\treturn nestedMode.declarationSupport.canFindDeclaration(context, offset);\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic findDeclaration(resource: URI, position: EditorCommon.IPosition): TPromise<Modes.IReference>{\n\t\treturn this.contribution.findDeclaration(resource, position);\n\t}\n}\n\nexport interface ITypeDeclarationContribution {\n\ttokens: string[];\n\tfindTypeDeclaration: (resource: URI, position: EditorCommon.IPosition) => TPromise<Modes.IReference>;\n}\nexport class TypeDeclarationSupport extends AbstractSupport implements Modes.ITypeDeclarationSupport {\n\n\tprivate contribution: ITypeDeclarationContribution;\n\n\t/**\n\t * Provide the token type postfixes for the tokens where a declaration can be found in the 'tokens' argument.\n\t */\n\tconstructor(mode: Modes.IMode, contribution: ITypeDeclarationContribution) {\n\t\tsuper(mode);\n\t\tthis.contribution = contribution;\n\t}\n\n\tpublic canFindTypeDeclaration(context: Modes.ILineContext, offset:number):boolean {\n\t\treturn handleEvent(context, offset, (nestedMode:Modes.IMode, context:Modes.ILineContext, offset:number) => {\n\t\t\tif (this.mode === nestedMode) {\n\t\t\t\treturn (!Array.isArray(this.contribution.tokens) ||\n\t\t\t\t\tthis.contribution.tokens.length < 1 ||\n\t\t\t\t\tisLineToken(context, offset, this.contribution.tokens));\n\t\t\t} else if (nestedMode.typeDeclarationSupport) {\n\t\t\t\treturn nestedMode.typeDeclarationSupport.canFindTypeDeclaration(context, offset);\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic findTypeDeclaration(resource: URI, position: EditorCommon.IPosition): TPromise<Modes.IReference> {\n\t\treturn this.contribution.findTypeDeclaration(resource, position);\n\t}\n}\n\nexport interface IReferenceContribution {\n\ttokens: string[];\n\tfindReferences: (resource: URI, position: EditorCommon.IPosition, includeDeclaration: boolean) => TPromise<Modes.IReference[]>;\n}\n\nexport class ReferenceSupport extends AbstractSupport implements Modes.IReferenceSupport {\n\n\tprivate contribution: IReferenceContribution;\n\n\t/**\n\t * Provide the token type postfixes for the tokens where a reference can be found in the 'tokens' argument.\n\t */\n\tconstructor(mode: Modes.IMode, contribution: IReferenceContribution) {\n\t\tsuper(mode);\n\t\tthis.contribution = contribution;\n\t}\n\n\tpublic canFindReferences(context: Modes.ILineContext, offset:number):boolean {\n\t\treturn handleEvent(context, offset, (nestedMode:Modes.IMode, context:Modes.ILineContext, offset:number) => {\n\t\t\tif (this.mode === nestedMode) {\n\t\t\t\treturn (!Array.isArray(this.contribution.tokens) ||\n\t\t\t\t\tthis.contribution.tokens.length < 1 ||\n\t\t\t\t\tisLineToken(context, offset, this.contribution.tokens));\n\t\t\t} else if (nestedMode.referenceSupport) {\n\t\t\t\treturn nestedMode.referenceSupport.canFindReferences(context, offset);\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic findReferences(resource: URI, position: EditorCommon.IPosition, includeDeclaration: boolean): TPromise<Modes.IReference[]> {\n\t\treturn this.contribution.findReferences(resource, position, includeDeclaration);\n\t}\n}\n\nexport class ParameterHintsSupport extends AbstractSupport implements Modes.IParameterHintsSupport {\n\n\tprivate contribution: Modes.IParameterHintsContribution;\n\n\tconstructor(mode: Modes.IMode, contribution: Modes.IParameterHintsContribution) {\n\t\tsuper(mode);\n\t\tthis.contribution = contribution;\n\t}\n\n\tpublic getParameterHintsTriggerCharacters(): string[]\n\t{\n\t\treturn this.contribution.triggerCharacters;\n\t}\n\n\tpublic shouldTriggerParameterHints(context: Modes.ILineContext, offset: number): boolean\n\t{\n\t\treturn handleEvent(context, offset, (nestedMode:Modes.IMode, context:Modes.ILineContext, offset:number) => {\n\t\t\tif (this.mode === nestedMode) {\n\t\t\t\tif (!Array.isArray(this.contribution.excludeTokens)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (this.contribution.excludeTokens.length === 1 && this.contribution.excludeTokens[0] === '*') {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn !isLineToken(context, offset-1, this.contribution.excludeTokens);\n\t\t\t} else if (nestedMode.parameterHintsSupport) {\n\t\t\t\treturn nestedMode.parameterHintsSupport.shouldTriggerParameterHints(context, offset);\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t}\n\tpublic getParameterHints(resource: URI, position: EditorCommon.IPosition): TPromise<Modes.IParameterHints> {\n\t\treturn this.contribution.getParameterHints(resource, position);\n\t}\n}\n\nexport interface ISuggestContribution {\n\ttriggerCharacters: string[];\n\tdisableAutoTrigger?: boolean;\n\texcludeTokens: string[];\n\n\tsortBy?: ISortingTypeAndSeparator[];\n\n\tsuggest: (resource: URI, position: EditorCommon.IPosition) => TPromise<Modes.ISuggestResult[]>;\n\tgetSuggestionDetails? : (resource:URI, position:EditorCommon.IPosition, suggestion:Modes.ISuggestion) => TPromise<Modes.ISuggestion>;\n}\n\nexport interface ISortingTypeAndSeparator {\n\ttype: string;\n\tpartSeparator?: string;\n}\n\nexport class SuggestSupport extends AbstractSupport implements Modes.ISuggestSupport {\n\n\tprivate contribution: ISuggestContribution;\n\tprivate sortByType: string[];\n\tprivate separatorForType: string[]; // Must have identical size to the above\n\n\tpublic suggest : (resource:URI, position:EditorCommon.IPosition) => TPromise<Modes.ISuggestResult[]>;\n\tpublic getSuggestionDetails : (resource:URI, position:EditorCommon.IPosition, suggestion:Modes.ISuggestion) => TPromise<Modes.ISuggestion>;\n\n\tconstructor(mode: Modes.IMode, contribution : ISuggestContribution){\n\t\tsuper(mode);\n\t\tthis.contribution = contribution;\n\t\tthis.suggest = (resource, position) => contribution.suggest(resource, position);\n\n\t\tif (typeof contribution.getSuggestionDetails === 'function') {\n\t\t\tthis.getSuggestionDetails = (resource, position, suggestion) => contribution.getSuggestionDetails(resource, position, suggestion);\n\t\t}\n\n\t\tthis.sortByType = [];\n\t\tthis.separatorForType = [];\n\t\tif (Array.isArray(contribution.sortBy) && contribution.sortBy.length > 0) {\n\t\t\tfor (var i = 0; i < contribution.sortBy.length; ++i) {\n\t\t\t\tthis.sortByType.push(contribution.sortBy[i].type);\n\t\t\t\tthis.separatorForType.push(contribution.sortBy[i].partSeparator);\n\t\t\t}\n\t\t}\n\t}\n\n\tshouldAutotriggerSuggest(context: Modes.ILineContext, offset: number, triggeredByCharacter: string): boolean {\n\t\treturn handleEvent(context, offset, (nestedMode:Modes.IMode, context:Modes.ILineContext, offset:number) => {\n\t\t\tif (this.mode === nestedMode) {\n\t\t\t\tif (this.contribution.disableAutoTrigger) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (!Array.isArray(this.contribution.excludeTokens)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (this.contribution.excludeTokens.length === 1 && this.contribution.excludeTokens[0] === '*') {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn  !isLineToken(context, offset-1, this.contribution.excludeTokens, true);\n\t\t\t} else if (nestedMode.suggestSupport) {\n\t\t\t\treturn nestedMode.suggestSupport.shouldAutotriggerSuggest(context, offset, triggeredByCharacter);\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic getFilter(): Modes.ISuggestionFilter {\n\t\treturn DefaultFilter;\n\t}\n\n\tpublic getSorter(): Modes.ISuggestionCompare {\n\t\treturn (one, other) => {\n\t\t\tif (this.sortByType.length > 0) {\n\t\t\t\tvar oneTypeIndex = this.sortByType.indexOf(one.type);\n\t\t\t\tvar otherTypeIndex = this.sortByType.indexOf(other.type);\n\n\t\t\t\tif (oneTypeIndex < 0) {\n\t\t\t\t\toneTypeIndex = this.sortByType.length;\n\t\t\t\t}\n\t\t\t\tif (otherTypeIndex < 0) {\n\t\t\t\t\totherTypeIndex = this.sortByType.length;\n\t\t\t\t}\n\n\t\t\t\tif (oneTypeIndex < otherTypeIndex) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\tif (otherTypeIndex < oneTypeIndex) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\n\t\t\t\t// TypeIndices are equal\n\t\t\t\tif (oneTypeIndex < this.sortByType.length) {\n\t\t\t\t\tvar separator = this.separatorForType[oneTypeIndex];\n\t\t\t\t\tvar oneParts = ((typeof separator === 'string' && separator.length > 0) ? one.label.split(separator) : [one.label]);\n\t\t\t\t\tvar otherParts = ((typeof separator === 'string' && separator.length > 0) ? other.label.split(separator) : [other.label]);\n\n\t\t\t\t\tif (oneParts.length < otherParts.length) {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t} else if (oneParts.length > otherParts.length) {\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (var i = 0; i < oneParts.length; i++) {\n\t\t\t\t\t\t\tvar result = Strings.localeCompare(oneParts[i], otherParts[i]);\n\n\t\t\t\t\t\t\tif (result !== 0) {\n\t\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet cmp = 0;\n\t\t\tif (one.sortText && other.sortText) {\n\t\t\t\tcmp = one.sortText.localeCompare(other.sortText);\n\t\t\t}\n\t\t\tif (!cmp) {\n\t\t\t\tcmp = Strings.localeCompare(one.label.toLowerCase(), other.label.toLowerCase());\n\t\t\t}\n\n\t\t\treturn Strings.localeCompare(one.documentationLabel || '', other.documentationLabel || '');\n\t\t};\n\t}\n\n\tpublic getTriggerCharacters(): string[] {\n\t\treturn this.contribution.triggerCharacters;\n\t}\n\n\tpublic shouldShowEmptySuggestionList(): boolean\t{\n\t\treturn true;\n\t}\n}\n\nexport interface IComposableSuggestContribution extends ISuggestContribution {\n\tcomposeSuggest(resource:URI, position:EditorCommon.IPosition, superSuggestions:Modes.ISuggestResult[]): TPromise<Modes.ISuggestResult[]>;\n}\n\nexport class ComposableSuggestSupport extends SuggestSupport {\n\n\tconstructor(mode: Modes.IMode, contribution: IComposableSuggestContribution) {\n\t\tsuper(mode, contribution);\n\n\t\tthis.suggest = (resource, position) => {\n\t\t\treturn (\n\t\t\t\tcontribution.suggest(resource, position)\n\t\t\t\t\t.then(superSuggestions => contribution.composeSuggest(resource, position, superSuggestions))\n\t\t\t);\n\t\t};\n\t}\n\n}\n\nexport class CharacterPairSupport extends AbstractSupport implements Modes.ICharacterPairSupport {\n\n\tprivate _autoClosingPairs: Modes.IAutoClosingPairConditional[];\n\tprivate _surroundingPairs: Modes.IAutoClosingPair[];\n\n\tconstructor(mode: Modes.IMode, contribution: Modes.ICharacterPairContribution) {\n\n\t\tsuper(mode);\n\t\tthis._autoClosingPairs = contribution.autoClosingPairs;\n\t\tthis._surroundingPairs = Array.isArray(contribution.surroundingPairs) ? contribution.surroundingPairs : contribution.autoClosingPairs;\n\t}\n\n\tpublic getAutoClosingPairs(): Modes.IAutoClosingPair[] {\n\t\treturn this._autoClosingPairs;\n\t}\n\n\tpublic shouldAutoClosePair(character:string, context:Modes.ILineContext, offset:number): boolean {\n\t\treturn handleEvent(context, offset, (nestedMode:Modes.IMode, context:Modes.ILineContext, offset:number) => {\n\t\t\tif (this.mode === nestedMode) {\n\n\t\t\t\t// Always complete on empty line\n\t\t\t\tif (context.getTokenCount() === 0) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tvar tokenIndex = context.findIndexOfOffset(offset - 1);\n\t\t\t\tvar tokenType = context.getTokenType(tokenIndex);\n\n\t\t\t\tfor (var i = 0; i < this._autoClosingPairs.length; ++i) {\n\t\t\t\t\tif (this._autoClosingPairs[i].open === character) {\n\t\t\t\t\t\tif (this._autoClosingPairs[i].notIn) {\n\t\t\t\t\t\t\tfor (var notInIndex = 0; notInIndex < this._autoClosingPairs[i].notIn.length; ++notInIndex) {\n\t\t\t\t\t\t\t\tif (tokenType.indexOf(this._autoClosingPairs[i].notIn[notInIndex]) > -1) {\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t} else if (nestedMode.characterPairSupport) {\n\t\t\t\treturn nestedMode.characterPairSupport.shouldAutoClosePair(character, context, offset);\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic getSurroundingPairs(): Modes.IAutoClosingPair[]{\n\t\treturn this._surroundingPairs;\n\t}\n}\n\nexport interface IReplaceSupportHelper {\n\tvalueSetReplace(valueSet: string[], value: string, up: boolean): string;\n\tvalueSetsReplace(valueSets: string[][], value: string, up: boolean): string;\n}\nclass ReplaceSupportHelperImpl implements IReplaceSupportHelper {\n\n\tpublic valueSetsReplace(valueSets:string[][], value:string, up:boolean):string {\n\t\tvar result:string = null;\n\t\tfor (let i = 0, len = valueSets.length; result === null && i < len; i++) {\n\t\t\tresult = this.valueSetReplace(valueSets[i], value, up);\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic valueSetReplace(valueSet:string[], value:string, up:boolean):string {\n\t\tvar idx = valueSet.indexOf(value);\n\t\tif(idx >= 0) {\n\t\t\tidx += up ? +1 : -1;\n\t\t\tif(idx < 0) {\n\t\t\t\tidx = valueSet.length - 1;\n\t\t\t} else {\n\t\t\t\tidx %= valueSet.length;\n\t\t\t}\n\t\t\treturn valueSet[idx];\n\t\t}\n\t\treturn null;\n\t}\n\n}\n\nexport var ReplaceSupport: IReplaceSupportHelper = new ReplaceSupportHelperImpl();\n\nexport interface IInplaceReplaceSupportCustomization {\n\ttextReplace?: (value: string, up: boolean) => string;\n\tnavigateValueSetFallback?: (resource: URI, range: EditorCommon.IRange, up: boolean) => TPromise<Modes.IInplaceReplaceSupportResult>;\n}\n\nexport class AbstractInplaceReplaceSupport implements Modes.IInplaceReplaceSupport {\n\n\tprivate defaults: {\n\t\ttextReplace: boolean;\n\t\tnavigateValueSetFallback: boolean;\n\t};\n\tprivate customization:IInplaceReplaceSupportCustomization;\n\n\tconstructor(customization: IInplaceReplaceSupportCustomization = null) {\n\t\tthis.defaults = {\n\t\t\ttextReplace: !customization || !isFunction(customization.textReplace),\n\t\t\tnavigateValueSetFallback: !customization || !isFunction(customization.navigateValueSetFallback)\n\t\t};\n\t\tthis.customization = customization;\n\t}\n\n\tpublic navigateValueSet(resource:URI, range:EditorCommon.IRange, up:boolean):TPromise<Modes.IInplaceReplaceSupportResult> {\n\t\tvar result = this.doNavigateValueSet(resource, range, up, true);\n\t\tif (result && result.value && result.range) {\n\t\t\treturn TPromise.as(result);\n\t\t}\n\t\tif (this.defaults.navigateValueSetFallback) {\n\t\t\treturn TPromise.as(null);\n\t\t}\n\t\treturn this.customization.navigateValueSetFallback(resource, range, up);\n\t}\n\n\tprivate doNavigateValueSet(resource:URI, range:EditorCommon.IRange, up:boolean, selection:boolean):Modes.IInplaceReplaceSupportResult {\n\n\t\tvar model = this.getModel(resource),\n\t\t\tresult:Modes.IInplaceReplaceSupportResult = { range:null, value: null },\n\t\t\ttext:string;\n\n\t\tif(selection) {\n\t\t\t// Replace selection\n\t\t\tif(range.startColumn === range.endColumn) {\n\t\t\t\trange.endColumn += 1;\n\t\t\t}\n\t\t\ttext = model.getValueInRange(range);\n\t\t\tresult.range = range;\n\t\t} else {\n\t\t\t// Replace word\n\t\t\tvar position = { lineNumber: range.startLineNumber, column: range.startColumn };\n\t\t\tvar\twordPos = model.getWordAtPosition(position);\n\n\t\t\tif(!wordPos || wordPos.startColumn === -1) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\ttext = wordPos.word;\n\t\t\tresult.range = { startLineNumber : range.startLineNumber, endLineNumber: range.endLineNumber, startColumn: wordPos.startColumn, endColumn: wordPos.endColumn };\n\t\t}\n\n\t\t// Try to replace numbers or text\n\t\tvar numberResult = this.numberReplace(text, up);\n\t\tif(numberResult !== null) {\n\t\t\tresult.value = numberResult;\n\t\t} else {\n\t\t\tvar textResult = this.textReplace(text, up);\n\t\t\tif(textResult !== null) {\n\t\t\t\tresult.value = textResult;\n\t\t\t} else if(selection) {\n\t\t\t\treturn this.doNavigateValueSet(resource, range, up, false);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate numberReplace(value:string, up:boolean):string {\n\t\tvar precision = Math.pow(10, value.length - (value.lastIndexOf('.') + 1)),\n\t\t\tn1 = Number(value),\n\t\t\tn2 = parseFloat(value);\n\n\t\tif(!isNaN(n1) && !isNaN(n2) && n1 === n2) {\n\n\t\t\tif(n1 === 0 && !up) {\n\t\t\t\treturn null; // don't do negative\n//\t\t\t} else if(n1 === 9 && up) {\n//\t\t\t\treturn null; // don't insert 10 into a number\n\t\t\t} else {\n\t\t\t\tn1 = Math.floor(n1 * precision);\n\t\t\t\tn1 += up ? precision : -precision;\n\t\t\t\treturn String(n1 / precision);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate _defaultValueSet: string[][] = [\n\t\t['true', 'false'],\n\t\t['True', 'False'],\n\t\t['Private', 'Public', 'Friend', 'ReadOnly', 'Partial', 'Protected', 'WriteOnly'],\n\t\t['public', 'protected', 'private'],\n\t];\n\n\tprivate textReplace(value:string, up:boolean):string {\n\t\tif (this.defaults.textReplace) {\n\t\t\treturn ReplaceSupport.valueSetsReplace(this._defaultValueSet, value, up);\n\t\t}\n\t\treturn this.customization.textReplace(value, up)\n\t\t\t|| ReplaceSupport.valueSetsReplace(this._defaultValueSet, value, up);\n\t}\n\n\tprotected getModel(resource:URI): EditorCommon.ITokenizedModel {\n\t\tthrow new Error('Not implemented');\n\t}\n}\n\nexport class WorkerInplaceReplaceSupport extends AbstractInplaceReplaceSupport {\n\n\tprivate resourceService: IResourceService;\n\n\tconstructor(resourceService: IResourceService, customization: IInplaceReplaceSupportCustomization = null) {\n\t\tsuper(customization);\n\t\tthis.resourceService = resourceService;\n\t}\n\n\tprotected getModel(resource:URI): EditorCommon.ITokenizedModel {\n\t\treturn this.resourceService.get(resource);\n\t}\n}\n\nexport class MainInplaceReplaceSupport extends AbstractInplaceReplaceSupport {\n\tprivate modelService: IModelService;\n\n\tconstructor(modelService: IModelService, customization: IInplaceReplaceSupportCustomization = null) {\n\t\tsuper(customization);\n\t\tthis.modelService = modelService;\n\t}\n\n\tprotected getModel(resource:URI): EditorCommon.ITokenizedModel {\n\t\treturn this.modelService.getModel(resource);\n\t}\n}\n\nexport interface ICommentsSupportContribution {\n\tcommentsConfiguration: Modes.ICommentsConfiguration;\n}\n\nexport class CommentsSupport implements Modes.ICommentsSupport {\n\n\tprivate _contribution: ICommentsSupportContribution;\n\n\tconstructor(contribution:ICommentsSupportContribution) {\n\t\tthis._contribution = contribution;\n\t}\n\n\tpublic getCommentsConfiguration(): Modes.ICommentsConfiguration {\n\t\treturn this._contribution.commentsConfiguration;\n\t}\n\n}\n\nexport interface ITokenTypeClassificationSupportContribution {\n\twordDefinition?: RegExp;\n}\n\nexport class TokenTypeClassificationSupport implements Modes.ITokenTypeClassificationSupport {\n\n\tprivate _contribution: ITokenTypeClassificationSupportContribution;\n\n\tconstructor(contribution: ITokenTypeClassificationSupportContribution) {\n\t\tthis._contribution = contribution;\n\t}\n\n\tpublic getWordDefinition(): RegExp {\n\t\tif (typeof this._contribution.wordDefinition === 'undefined') {\n\t\t\treturn NullMode.DEFAULT_WORD_REGEXP;\n\t\t}\n\t\treturn this._contribution.wordDefinition;\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {handleEvent} from 'vs/editor/common/modes/supports';\nimport {IEnterAction, IndentAction, IOnEnterSupport, ILineContext, IMode} from 'vs/editor/common/modes';\nimport EditorCommon = require('vs/editor/common/editorCommon');\nimport Errors = require('vs/base/common/errors');\nimport Strings = require('vs/base/common/strings');\nimport {Position} from 'vs/editor/common/core/position';\n\nexport interface IBracketPair {\n\topen: string;\n\tclose: string;\n}\n\nexport interface IIndentationRules {\n\tdecreaseIndentPattern: RegExp;\n\tincreaseIndentPattern: RegExp;\n\tindentNextLinePattern?: RegExp;\n\tunIndentedLinePattern?: RegExp;\n}\n\nexport interface IOnEnterRegExpRules {\n\tbeforeText: RegExp;\n\tafterText?: RegExp;\n\taction: IEnterAction;\n}\n\nexport interface IOnEnterSupportOptions {\n\tbrackets?: IBracketPair[];\n\tindentationRules?: IIndentationRules;\n\tregExpRules?: IOnEnterRegExpRules[];\n}\n\ninterface IProcessedBracketPair extends IBracketPair {\n\topenRegExp: RegExp;\n\tcloseRegExp: RegExp;\n}\n\nexport class OnEnterSupport implements IOnEnterSupport {\n\n\tprivate static _INDENT: IEnterAction = { indentAction: IndentAction.Indent };\n\tprivate static _INDENT_OUTDENT: IEnterAction = { indentAction: IndentAction.IndentOutdent };\n\tprivate static _OUTDENT: IEnterAction = { indentAction: IndentAction.Outdent };\n\n\tprivate _modeId: string;\n\tprivate _brackets: IProcessedBracketPair[];\n\tprivate _indentationRules: IIndentationRules;\n\tprivate _regExpRules: IOnEnterRegExpRules[];\n\n\tconstructor(modeId: string, opts?:IOnEnterSupportOptions) {\n\t\topts = opts || {};\n\t\topts.brackets = opts.brackets || [\n\t\t\t{ open: '(', close: ')' },\n\t\t\t{ open: '{', close: '}' },\n\t\t\t{ open: '[', close: ']' }\n\t\t];\n\n\t\tthis._modeId = modeId;\n\t\tthis._brackets = opts.brackets.map((bracket) => {\n\t\t\treturn {\n\t\t\t\topen: bracket.open,\n\t\t\t\topenRegExp: OnEnterSupport._createOpenBracketRegExp(bracket.open),\n\t\t\t\tclose: bracket.close,\n\t\t\t\tcloseRegExp: OnEnterSupport._createCloseBracketRegExp(bracket.close),\n\t\t\t};\n\t\t});\n\t\tthis._regExpRules = opts.regExpRules || [];\n\t\tthis._indentationRules = opts.indentationRules;\n\t}\n\n\tpublic onEnter(model:EditorCommon.ITokenizedModel, position: EditorCommon.IPosition): IEnterAction {\n\t\tvar context = model.getLineContext(position.lineNumber);\n\n\t\treturn handleEvent(context, position.column - 1, (nestedMode:IMode, context:ILineContext, offset:number) => {\n\t\t\tif (this._modeId === nestedMode.getId()) {\n\t\t\t\treturn this._onEnter(model, position);\n\t\t\t} else if (nestedMode.onEnterSupport) {\n\t\t\t\treturn nestedMode.onEnterSupport.onEnter(model, position);\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _onEnter(model:EditorCommon.ITextModel, position: EditorCommon.IPosition): IEnterAction {\n\t\tlet lineText = model.getLineContent(position.lineNumber);\n\t\tlet beforeEnterText = lineText.substr(0, position.column - 1);\n\t\tlet afterEnterText = lineText.substr(position.column - 1);\n\n\t\tlet oneLineAboveText = position.lineNumber === 1 ? '' : model.getLineContent(position.lineNumber - 1);\n\n\t\treturn this._actualOnEnter(oneLineAboveText, beforeEnterText, afterEnterText);\n\t}\n\n\t_actualOnEnter(oneLineAboveText:string, beforeEnterText:string, afterEnterText:string): IEnterAction {\n\t\t// (1): `regExpRules`\n\t\tfor (let i = 0, len = this._regExpRules.length; i < len; i++) {\n\t\t\tlet rule = this._regExpRules[i];\n\t\t\tif (rule.beforeText.test(beforeEnterText)) {\n\t\t\t\tif (rule.afterText) {\n\t\t\t\t\tif (rule.afterText.test(afterEnterText)) {\n\t\t\t\t\t\treturn rule.action;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn rule.action;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (2): Special indent-outdent\n\t\tif (beforeEnterText.length > 0 && afterEnterText.length > 0) {\n\t\t\tfor (let i = 0, len = this._brackets.length; i < len; i++) {\n\t\t\t\tlet bracket = this._brackets[i];\n\t\t\t\tif (bracket.openRegExp.test(beforeEnterText) && bracket.closeRegExp.test(afterEnterText)) {\n\t\t\t\t\treturn OnEnterSupport._INDENT_OUTDENT;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (3): Indentation Support\n\t\tif (this._indentationRules) {\n\t\t\tif (this._indentationRules.increaseIndentPattern && this._indentationRules.increaseIndentPattern.test(beforeEnterText)) {\n\t\t\t\treturn OnEnterSupport._INDENT;\n\t\t\t}\n\t\t\tif (this._indentationRules.indentNextLinePattern && this._indentationRules.indentNextLinePattern.test(beforeEnterText)) {\n\t\t\t\treturn OnEnterSupport._INDENT;\n\t\t\t}\n\t\t\tif (/^\\s/.test(beforeEnterText)) {\n\t\t\t\t// No reason to run regular expressions if there is nothing to outdent from\n\t\t\t\tif (this._indentationRules.decreaseIndentPattern && this._indentationRules.decreaseIndentPattern.test(afterEnterText)) {\n\t\t\t\t\treturn OnEnterSupport._OUTDENT;\n\t\t\t\t}\n\t\t\t\tif (this._indentationRules.indentNextLinePattern && this._indentationRules.indentNextLinePattern.test(oneLineAboveText)) {\n\t\t\t\t\treturn OnEnterSupport._OUTDENT;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (4): Open Bracket based logic\n\t\tif (beforeEnterText.length > 0) {\n\t\t\tfor (let i = 0, len = this._brackets.length; i < len; i++) {\n\t\t\t\tlet bracket = this._brackets[i];\n\t\t\t\tif (bracket.openRegExp.test(beforeEnterText)) {\n\t\t\t\t\treturn OnEnterSupport._INDENT;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate static _createOpenBracketRegExp(bracket:string): RegExp {\n\t\tvar str = Strings.escapeRegExpCharacters(bracket);\n\t\tif (!/\\B/.test(str.charAt(0))) {\n\t\t\tstr = '\\\\b' + str;\n\t\t}\n\t\tstr += '\\\\s*$';\n\t\treturn OnEnterSupport._safeRegExp(str);\n\t}\n\n\tprivate static _createCloseBracketRegExp(bracket:string): RegExp {\n\t\tvar str = Strings.escapeRegExpCharacters(bracket);\n\t\tif (!/\\B/.test(str.charAt(str.length - 1))) {\n\t\t\tstr = str + '\\\\b';\n\t\t}\n\t\tstr = '^\\\\s*' + str;\n\t\treturn OnEnterSupport._safeRegExp(str);\n\t}\n\n\tprivate static _safeRegExp(def:string): RegExp {\n\t\ttry {\n\t\t\treturn new RegExp(def);\n\t\t} catch(err) {\n\t\t\tErrors.onUnexpectedError(err);\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\nexport function getRawEnterActionAtPosition(model:EditorCommon.ITokenizedModel, lineNumber:number, column:number): IEnterAction {\n\tlet enterAction:IEnterAction;\n\n\tif (model.getMode().onEnterSupport) {\n\t\ttry {\n\t\t\tenterAction = model.getMode().onEnterSupport.onEnter(model, new Position(lineNumber, column));\n\t\t} catch (e) {\n\t\t\tErrors.onUnexpectedError(e);\n\t\t}\n\t}\n\n\tif (!enterAction) {\n\t\tif (model.getMode().electricCharacterSupport) {\n\t\t\tlet lineContext = model.getLineContext(lineNumber);\n\t\t\ttry {\n\t\t\t\tenterAction = model.getMode().electricCharacterSupport.onEnter(lineContext, column - 1);\n\t\t\t} catch(e) {\n\t\t\t\tErrors.onUnexpectedError(e);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// console.log('USING NEW INDENTATION LOGIC!');\n\t}\n\n\treturn enterAction;\n}\n\nexport function getEnterActionAtPosition(model:EditorCommon.ITokenizedModel, lineNumber:number, column:number): { enterAction: IEnterAction; indentation: string; } {\n\tlet lineText = model.getLineContent(lineNumber);\n\tlet indentation = Strings.getLeadingWhitespace(lineText);\n\tif (indentation.length > column - 1) {\n\t\tindentation = indentation.substring(0, column - 1);\n\t}\n\n\tlet enterAction = getRawEnterActionAtPosition(model, lineNumber, column);\n\tif (!enterAction) {\n\t\tenterAction = {\n\t\t\tindentAction: IndentAction.None,\n\t\t\tappendText: '',\n\t\t};\n\t} else {\n\t\tif(!enterAction.appendText) {\n\t\t\tif (\n\t\t\t\t(enterAction.indentAction === IndentAction.Indent) ||\n\t\t\t\t(enterAction.indentAction === IndentAction.IndentOutdent)\n\t\t\t) {\n\t\t\t\tenterAction.appendText = '\\t';\n\t\t\t} else {\n\t\t\t\tenterAction.appendText = '';\n\t\t\t}\n\t\t}\n\t}\n\n\tif (enterAction.removeText) {\n\t\tindentation = indentation.substring(0, indentation.length - 1);\n\t}\n\n\treturn {\n\t\tenterAction: enterAction,\n\t\tindentation: indentation\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport errors = require('vs/base/common/errors');\nimport objects = require('vs/base/common/objects');\nimport marshalling = require('vs/base/common/marshalling');\nimport hash = require('vs/base/common/hash');\nimport instantiation = require('./instantiation');\n\nexport class AbstractDescriptor<T> {\n\n\tconstructor(private _staticArguments:any[]) {\n\t\t// empty\n\t}\n\n\tpublic appendStaticArguments(more:any[]):void {\n\t\tthis._staticArguments.push.apply(this._staticArguments, more);\n\t}\n\n\tpublic staticArguments():any[];\n\tpublic staticArguments(nth:number):any;\n\tpublic staticArguments(nth?:number):any[] {\n\t\tif(isNaN(nth)) {\n\t\t\treturn this._staticArguments.slice(0);\n\t\t} else {\n\t\t\treturn this._staticArguments[nth];\n\t\t}\n\t}\n\n\t_validate(type:T):void {\n\t\tif(!type) {\n\t\t\tthrow errors.illegalArgument('can not be falsy');\n\t\t}\n\t}\n}\n\nexport class SyncDescriptor<T> extends AbstractDescriptor<T> implements objects.IEqualable {\n\n\tconstructor(private _ctor:any, ...staticArguments:any[]) {\n\t\tsuper(staticArguments);\n\t}\n\n\tpublic get ctor():any {\n\t\treturn this._ctor;\n\t}\n\n\tpublic equals(other:any):boolean {\n\t\tif(other === this) {\n\t\t\treturn true;\n\t\t}\n\t\tif(!(other instanceof SyncDescriptor)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn (<SyncDescriptor<T>> other).ctor === this.ctor;\n\t}\n\n\tpublic hashCode():number {\n\t\treturn 61 * (1 + this.ctor.length);\n\t}\n\n\tprotected bind(...moreStaticArguments): SyncDescriptor<T> {\n\t\tvar allArgs = [];\n\t\tallArgs = allArgs.concat(this.staticArguments());\n\t\tallArgs = allArgs.concat(moreStaticArguments);\n\t\treturn new SyncDescriptor<T>(this._ctor, ...allArgs);\n\t}\n}\n\nexport interface CreateSyncFunc {\n\t<T>(ctor:instantiation.IConstructorSignature0<T>): SyncDescriptor0<T>;\n\t<A1, T>(ctor:instantiation.IConstructorSignature1<A1, T>): SyncDescriptor1<A1, T>;\n\t<A1, T>(ctor:instantiation.IConstructorSignature1<A1, T>, a1: A1): SyncDescriptor0<T>;\n\n\n\t<T>(ctor:instantiation.INewConstructorSignature0<T>): SyncDescriptor0<T>;\n\n\t<A1, T>(ctor:instantiation.INewConstructorSignature1<A1, T>): SyncDescriptor1<A1, T>;\n\t<A1, T>(ctor:instantiation.INewConstructorSignature1<A1, T>, a1: A1): SyncDescriptor0<T>;\n\n\t<A1, A2, T>(ctor:instantiation.INewConstructorSignature2<A1, A2, T>): SyncDescriptor2<A1, A2, T>;\n\t<A1, A2, T>(ctor:instantiation.INewConstructorSignature2<A1, A2, T>, a1: A1): SyncDescriptor1<A2, T>;\n\t<A1, A2, T>(ctor:instantiation.INewConstructorSignature2<A1, A2, T>, a1: A1, a2: A2): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, T>(ctor:instantiation.INewConstructorSignature3<A1, A2, A3, T>): SyncDescriptor3<A1, A2, A3, T>;\n\t<A1, A2, A3, T>(ctor:instantiation.INewConstructorSignature3<A1, A2, A3, T>, a1: A1): SyncDescriptor2<A2, A3, T>;\n\t<A1, A2, A3, T>(ctor:instantiation.INewConstructorSignature3<A1, A2, A3, T>, a1: A1, a2: A2): SyncDescriptor1<A3, T>;\n\t<A1, A2, A3, T>(ctor:instantiation.INewConstructorSignature3<A1, A2, A3, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, T>(ctor:instantiation.INewConstructorSignature4<A1, A2, A3, A4, T>): SyncDescriptor4<A1, A2, A3, A4, T>;\n\t<A1, A2, A3, A4, T>(ctor:instantiation.INewConstructorSignature4<A1, A2, A3, A4, T>, a1: A1): SyncDescriptor3<A2, A3, A4, T>;\n\t<A1, A2, A3, A4, T>(ctor:instantiation.INewConstructorSignature4<A1, A2, A3, A4, T>, a1: A1, a2: A2): SyncDescriptor2<A3, A4, T>;\n\t<A1, A2, A3, A4, T>(ctor:instantiation.INewConstructorSignature4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor1<A4, T>;\n\t<A1, A2, A3, A4, T>(ctor:instantiation.INewConstructorSignature4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, T>(ctor:instantiation.INewConstructorSignature5<A1, A2, A3, A4, A5, T>): SyncDescriptor5<A1, A2, A3, A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor:instantiation.INewConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1): SyncDescriptor4<A2, A3, A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor:instantiation.INewConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2): SyncDescriptor3<A3, A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor:instantiation.INewConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor2<A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor:instantiation.INewConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor1<A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor:instantiation.INewConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, A6, T>(ctor:instantiation.INewConstructorSignature6<A1, A2, A3, A4, A5, A6, T>): SyncDescriptor6<A1, A2, A3, A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor:instantiation.INewConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1): SyncDescriptor5<A2, A3, A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor:instantiation.INewConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2): SyncDescriptor4<A3, A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor:instantiation.INewConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor3<A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor:instantiation.INewConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor2<A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor:instantiation.INewConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor1<A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor:instantiation.INewConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor:instantiation.INewConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>): SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor:instantiation.INewConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1): SyncDescriptor6<A2, A3, A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor:instantiation.INewConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2): SyncDescriptor5<A3, A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor:instantiation.INewConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor4<A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor:instantiation.INewConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor3<A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor:instantiation.INewConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor2<A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor:instantiation.INewConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor1<A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor:instantiation.INewConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor:instantiation.INewConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>): SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor:instantiation.INewConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1): SyncDescriptor7<A2, A3, A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor:instantiation.INewConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2): SyncDescriptor6<A3, A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor:instantiation.INewConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor5<A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor:instantiation.INewConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor4<A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor:instantiation.INewConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor3<A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor:instantiation.INewConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor2<A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor:instantiation.INewConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor1<A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor:instantiation.INewConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): SyncDescriptor0<T>;\n}\nexport var createSyncDescriptor:CreateSyncFunc = <T>(ctor:any, ...staticArguments:any[]): any => {\n\treturn new SyncDescriptor<T>(ctor, ...staticArguments);\n}\n\nexport interface SyncDescriptor0<T> {\n\tctor:any;\n\tbind(): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor1<A1, T> {\n\tctor:any;\n\tbind(a1: A1): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor2<A1, A2, T> {\n\tctor:any;\n\tbind(a1: A1): SyncDescriptor1<A2, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor3<A1, A2, A3, T> {\n\tctor:any;\n\tbind(a1: A1): SyncDescriptor2<A2, A3, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor1<A3, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor4<A1, A2, A3, A4, T> {\n\tctor:any;\n\tbind(a1: A1): SyncDescriptor3<A2, A3, A4, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor2<A3, A4, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor1<A4, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor5<A1, A2, A3, A4, A5, T> {\n\tctor:any;\n\tbind(a1: A1): SyncDescriptor4<A2, A3, A4, A5, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor3<A3, A4, A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor2<A4, A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor1<A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor6<A1, A2, A3, A4, A5, A6, T> {\n\tctor:any;\n\tbind(a1: A1): SyncDescriptor5<A2, A3, A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor4<A3, A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor3<A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor2<A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor1<A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T> {\n\tctor:any;\n\tbind(a1: A1): SyncDescriptor6<A2, A3, A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor5<A3, A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor4<A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor3<A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor2<A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor1<A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n\tctor:any;\n\tbind(a1: A1): SyncDescriptor7<A2, A3, A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor6<A3, A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor5<A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor4<A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor3<A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor2<A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor1<A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): SyncDescriptor0<T>;\n}\n\nexport interface IAsyncDescriptor {\n\tmoduleName:string;\n\tctorName:string;\n}\n\nexport interface ISerializedAsyncDescriptor {\n\t$isAsyncDescriptor:boolean;\n\t$moduleName:string;\n\t$ctorName:string;\n\t$staticArguments: any[];\n}\n\nmarshalling.registerMarshallingContribution({\n\n\tcanSerialize: (obj:any): boolean => {\n\t\treturn obj instanceof AsyncDescriptor;\n\t},\n\n\tserialize: (asyncDescriptor:AsyncDescriptor<any>, serialize:(obj:any)=>any): ISerializedAsyncDescriptor => {\n\t\treturn {\n\t\t\t$isAsyncDescriptor: true,\n\t\t\t$moduleName: asyncDescriptor.moduleName,\n\t\t\t$ctorName: asyncDescriptor.ctorName,\n\t\t\t$staticArguments: serialize(asyncDescriptor.staticArguments())\n\t\t};\n\t},\n\n\tcanDeserialize: (obj:ISerializedAsyncDescriptor): boolean => {\n\t\treturn obj.$isAsyncDescriptor;\n\t},\n\n\tdeserialize: (obj:ISerializedAsyncDescriptor, deserialize:(obj:any)=>any): any => {\n\t\tvar r = new AsyncDescriptor<any>(obj.$moduleName, obj.$ctorName);\n\t\tr.appendStaticArguments(deserialize(obj.$staticArguments));\n\t\treturn r;\n\t}\n});\n\nexport class AsyncDescriptor<T> extends AbstractDescriptor<T> implements IAsyncDescriptor, objects.IEqualable {\n\n\tpublic static create<T>(moduleName:string, ctorName:string):AsyncDescriptor<T> {\n\t\treturn new AsyncDescriptor<T>(moduleName, ctorName);\n\t}\n\n\tconstructor(private _moduleName:string, private _ctorName?:string, ...staticArguments:any[]) {\n\t\tsuper(staticArguments);\n\t}\n\n\tpublic get moduleName():string {\n\t\treturn this._moduleName;\n\t}\n\n\tpublic get ctorName():string {\n\t\treturn this._ctorName;\n\t}\n\n\tpublic equals(other:any):boolean {\n\t\tif(other === this) {\n\t\t\treturn true;\n\t\t}\n\t\tif(!(other instanceof AsyncDescriptor)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn (<AsyncDescriptor<any>> other).moduleName === this.moduleName &&\n\t\t\t(<AsyncDescriptor<any>> other).ctorName === this.ctorName;\n\t}\n\n\tpublic hashCode():number {\n\t\treturn hash.computeMurmur2StringHashCode(this.moduleName) * hash.computeMurmur2StringHashCode(this.ctorName);\n\t}\n\n\tprotected bind(...moreStaticArguments): AsyncDescriptor<T> {\n\t\tvar allArgs = [];\n\t\tallArgs = allArgs.concat(this.staticArguments());\n\t\tallArgs = allArgs.concat(moreStaticArguments);\n\t\treturn new AsyncDescriptor<T>(this.moduleName, this.ctorName, ...allArgs);\n\t}\n}\n\nexport interface CreateAsyncFunc0 {\n\t<T>(moduleName:string, ctorName:string): AsyncDescriptor0<T>;\n\t<A1, T>(moduleName:string, ctorName:string, a1: A1): AsyncDescriptor0<T>;\n\t<A1, A2, T>(moduleName:string, ctorName:string, a1: A1, a2: A2): AsyncDescriptor0<T>;\n\t<A1, A2, A3, T>(moduleName:string, ctorName:string, a1: A1, a2: A2, a3: A3): AsyncDescriptor0<T>;\n\t<A1, A2, A3, A4, T>(moduleName:string, ctorName:string, a1: A1, a2: A2, a3: A3, a4: A4): AsyncDescriptor0<T>;\n\t<A1, A2, A3, A4, A5, T>(moduleName:string, ctorName:string, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): AsyncDescriptor0<T>;\n\t<A1, A2, A3, A4, A5, A6, T>(moduleName:string, ctorName:string, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): AsyncDescriptor0<T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(moduleName:string, ctorName:string, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): AsyncDescriptor0<T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(moduleName:string, ctorName:string, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): AsyncDescriptor0<T>;\n}\n\nexport interface CreateAsyncFunc1 {\n\t<A1, T>(moduleName:string, ctorName:string): AsyncDescriptor1<A1, T>;\n\t<A1, A2, T>(moduleName:string, ctorName:string, a1: A1): AsyncDescriptor1<A2, T>;\n\t<A1, A2, A3, T>(moduleName:string, ctorName:string, a1: A1, a2: A2): AsyncDescriptor1<A3, T>;\n\t<A1, A2, A3, A4, T>(moduleName:string, ctorName:string, a1: A1, a2: A2, a3: A3): AsyncDescriptor1<A4, T>;\n\t<A1, A2, A3, A4, A5, T>(moduleName:string, ctorName:string, a1: A1, a2: A2, a3: A3, a4: A4): AsyncDescriptor1<A5, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(moduleName:string, ctorName:string, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): AsyncDescriptor1<A6, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(moduleName:string, ctorName:string, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): AsyncDescriptor1<A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(moduleName:string, ctorName:string, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): AsyncDescriptor1<A8, T>;\n}\n\nexport interface CreateAsyncFunc2 {\n\t<A1, A2, T>(moduleName:string, ctorName:string): AsyncDescriptor2<A1, A2, T>;\n\t<A1, A2, A3, T>(moduleName:string, ctorName:string, a1: A1): AsyncDescriptor2<A2, A3, T>;\n\t<A1, A2, A3, A4, T>(moduleName:string, ctorName:string, a1: A1, a2: A2): AsyncDescriptor2<A3, A4, T>;\n\t<A1, A2, A3, A4, A5, T>(moduleName:string, ctorName:string, a1: A1, a2: A2, a3: A3): AsyncDescriptor2<A4, A5, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(moduleName:string, ctorName:string, a1: A1, a2: A2, a3: A3, a4: A4): AsyncDescriptor2<A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(moduleName:string, ctorName:string, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): AsyncDescriptor2<A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(moduleName:string, ctorName:string, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): AsyncDescriptor2<A7, A8, T>;\n}\n\nexport interface CreateAsyncFunc3 {\n\t<A1, A2, A3, T>(moduleName:string, ctorName:string): AsyncDescriptor3<A1, A2, A3, T>;\n\t<A1, A2, A3, A4, T>(moduleName:string, ctorName:string, a1: A1): AsyncDescriptor3<A2, A3, A4, T>;\n\t<A1, A2, A3, A4, A5, T>(moduleName:string, ctorName:string, a1: A1, a2: A2): AsyncDescriptor3<A3, A4, A5, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(moduleName:string, ctorName:string, a1: A1, a2: A2, a3: A3): AsyncDescriptor3<A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(moduleName:string, ctorName:string, a1: A1, a2: A2, a3: A3, a4: A4): AsyncDescriptor3<A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(moduleName:string, ctorName:string, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): AsyncDescriptor3<A6, A7, A8, T>;\n}\n\nexport interface CreateAsyncFunc4 {\n\t<A1, A2, A3, A4, T>(moduleName:string, ctorName:string): AsyncDescriptor4<A1, A2, A3, A4, T>;\n\t<A1, A2, A3, A4, A5, T>(moduleName:string, ctorName:string, a1: A1): AsyncDescriptor4<A2, A3, A4, A5, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(moduleName:string, ctorName:string, a1: A1, a2: A2): AsyncDescriptor4<A3, A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(moduleName:string, ctorName:string, a1: A1, a2: A2, a3: A3): AsyncDescriptor4<A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(moduleName:string, ctorName:string, a1: A1, a2: A2, a3: A3, a4: A4): AsyncDescriptor4<A5, A6, A7, A8, T>;\n}\n\nexport interface CreateAsyncFunc5 {\n\t<A1, A2, A3, A4, A5, T>(moduleName:string, ctorName:string): AsyncDescriptor5<A1, A2, A3, A4, A5, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(moduleName:string, ctorName:string, a1: A1): AsyncDescriptor5<A2, A3, A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(moduleName:string, ctorName:string, a1: A1, a2: A2): AsyncDescriptor5<A3, A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(moduleName:string, ctorName:string, a1: A1, a2: A2, a3: A3): AsyncDescriptor5<A4, A5, A6, A7, A8, T>;\n}\n\nexport interface CreateAsyncFunc6 {\n\t<A1, A2, A3, A4, A5, A6, T>(moduleName:string, ctorName:string): AsyncDescriptor6<A1, A2, A3, A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(moduleName:string, ctorName:string, a1: A1): AsyncDescriptor6<A2, A3, A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(moduleName:string, ctorName:string, a1: A1, a2: A2): AsyncDescriptor6<A3, A4, A5, A6, A7, A8, T>;\n}\n\nexport interface CreateAsyncFunc7 {\n\t<A1, A2, A3, A4, A5, A6, A7, T>(moduleName:string, ctorName:string): AsyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(moduleName:string, ctorName:string, a1: A1): AsyncDescriptor7<A2, A3, A4, A5, A6, A7, A8, T>;\n}\n\nexport interface CreateAsyncFunc8 {\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(moduleName:string, ctorName:string): AsyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T>;\n}\n\nvar _createAsyncDescriptor = <T>(moduleName:string, ctorName:string, ...staticArguments:any[]): any => {\n\treturn new AsyncDescriptor<T>(moduleName, ctorName, ...staticArguments);\n}\nexport var createAsyncDescriptor0:CreateAsyncFunc0 = _createAsyncDescriptor;\nexport var createAsyncDescriptor1:CreateAsyncFunc1 = _createAsyncDescriptor;\nexport var createAsyncDescriptor2:CreateAsyncFunc2 = _createAsyncDescriptor;\nexport var createAsyncDescriptor3:CreateAsyncFunc3 = _createAsyncDescriptor;\nexport var createAsyncDescriptor4:CreateAsyncFunc4 = _createAsyncDescriptor;\nexport var createAsyncDescriptor5:CreateAsyncFunc5 = _createAsyncDescriptor;\nexport var createAsyncDescriptor6:CreateAsyncFunc6 = _createAsyncDescriptor;\nexport var createAsyncDescriptor7:CreateAsyncFunc7 = _createAsyncDescriptor;\n\nexport interface AsyncDescriptor0<T> {\n\tmoduleName:string;\n\tbind(): AsyncDescriptor0<T>;\n}\nexport interface AsyncDescriptor1<A1, T> {\n\tmoduleName:string;\n\tbind(a1: A1): AsyncDescriptor0<T>;\n}\nexport interface AsyncDescriptor2<A1, A2, T> {\n\tmoduleName:string;\n\tbind(a1: A1): AsyncDescriptor1<A2, T>;\n\tbind(a1: A1, a2: A2): AsyncDescriptor0<T>;\n}\nexport interface AsyncDescriptor3<A1, A2, A3, T> {\n\tmoduleName:string;\n\tbind(a1: A1): AsyncDescriptor2<A2, A3, T>;\n\tbind(a1: A1, a2: A2): AsyncDescriptor1<A3, T>;\n\tbind(a1: A1, a2: A2, a3: A3): AsyncDescriptor0<T>;\n}\nexport interface AsyncDescriptor4<A1, A2, A3, A4, T> {\n\tmoduleName:string;\n\tbind(a1: A1): AsyncDescriptor3<A2, A3, A4, T>;\n\tbind(a1: A1, a2: A2): AsyncDescriptor2<A3, A4, T>;\n\tbind(a1: A1, a2: A2, a3: A3): AsyncDescriptor1<A4, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): AsyncDescriptor0<T>;\n}\nexport interface AsyncDescriptor5<A1, A2, A3, A4, A5, T> {\n\tmoduleName:string;\n\tbind(a1: A1): AsyncDescriptor4<A2, A3, A4, A5, T>;\n\tbind(a1: A1, a2: A2): AsyncDescriptor3<A3, A4, A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3): AsyncDescriptor2<A4, A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): AsyncDescriptor1<A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): AsyncDescriptor0<T>;\n}\nexport interface AsyncDescriptor6<A1, A2, A3, A4, A5, A6, T> {\n\tmoduleName:string;\n\tbind(a1: A1): AsyncDescriptor5<A2, A3, A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2): AsyncDescriptor4<A3, A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3): AsyncDescriptor3<A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): AsyncDescriptor2<A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): AsyncDescriptor1<A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): AsyncDescriptor0<T>;\n}\nexport interface AsyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T> {\n\tmoduleName:string;\n\tbind(a1: A1): AsyncDescriptor6<A2, A3, A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2): AsyncDescriptor5<A3, A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3): AsyncDescriptor4<A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): AsyncDescriptor3<A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): AsyncDescriptor2<A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): AsyncDescriptor1<A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): AsyncDescriptor0<T>;\n}\nexport interface AsyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n\tmoduleName:string;\n\tbind(a1: A1): AsyncDescriptor7<A2, A3, A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2): AsyncDescriptor6<A3, A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3): AsyncDescriptor5<A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): AsyncDescriptor4<A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): AsyncDescriptor3<A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): AsyncDescriptor2<A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): AsyncDescriptor1<A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): AsyncDescriptor0<T>;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport winjs = require('vs/base/common/winjs.base');\nimport descriptors = require('./descriptors');\n\n// ----------------------- internal util -----------------------\n\nexport namespace _util {\n\n\texport const DI_TARGET = '$di$target'\n\texport const DI_DEPENDENCIES = '$di$dependencies';\n\texport const DI_DEPENDENCIES_USES = '$di$dependencies_uses';\n\texport const DI_PROVIDES = '$di$provides_service';\n\n\texport function getServiceId(id: ServiceIdentifier<any>): string {\n\t\treturn id[DI_PROVIDES];\n\t}\n\n\texport function getServiceDependencies(ctor: any): { serviceId: string, index: number }[] {\n\t\tlet a = ctor[DI_DEPENDENCIES];\n\t\tlet b = ctor[DI_DEPENDENCIES_USES];\n\t\treturn !a ? b : !b ? a : a.slice(0).concat(b);\n\t}\n}\n\n// ----------------------- interfaces -----------------------\n\nexport interface ServiceContext {\n\t// intentionally empty: The idea is that services dependencies must be declared\n}\n\nexport interface IConstructorSignature0<T> {\n\tnew(context:ServiceContext):T;\n}\n\nexport interface IConstructorSignature1<A1, T> {\n\tnew(context:ServiceContext, first:A1):T;\n}\n\nexport interface IConstructorSignature2<A1, A2, T> {\n\tnew(context:ServiceContext, first:A1, second:A2):T;\n}\nexport interface IConstructorSignature3<A1, A2, A3, T> {\n\tnew(context:ServiceContext, first:A1, second:A2, third:A3):T;\n}\n\nexport interface IConstructorSignature4<A1, A2, A3, A4, T> {\n\tnew(context:ServiceContext, first:A1, second:A2, third:A3, forth:A4):T;\n}\n\nexport interface IConstructorSignature5<A1, A2, A3, A4, A5, T> {\n\tnew(context:ServiceContext, first:A1, second:A2, third:A3, forth:A4, fifth:A5):T;\n}\n\nexport interface IConstructorSignature6<A1, A2, A3, A4, A5, A6, T> {\n\tnew(context:ServiceContext, first:A1, second:A2, third:A3, forth:A4, fifth:A5, sixth:A6):T;\n}\n\nexport interface IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T> {\n\tnew(context:ServiceContext, first:A1, second:A2, third:A3, forth:A4, fifth:A5, sixth:A6, seventh:A7):T;\n}\n\nexport interface IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n\tnew(context:ServiceContext, first:A1, second:A2, third:A3, forth:A4, fifth:A5, sixth:A6, seventh:A7, eigth:A8):T;\n}\n\nexport interface INewConstructorSignature0<T> {\n\tnew(...services:{ serviceId: ServiceIdentifier<any>; }[]):T;\n}\n\nexport interface INewConstructorSignature1<A1, T> {\n\tnew(first:A1, ...services:{ serviceId: ServiceIdentifier<any>; }[]):T;\n}\n\nexport interface INewConstructorSignature2<A1, A2, T> {\n\tnew(first:A1, second:A2, ...services:{ serviceId: ServiceIdentifier<any>; }[]):T;\n}\n\nexport interface INewConstructorSignature3<A1, A2, A3, T> {\n\tnew(first:A1, second:A2, third:A3, ...services:{ serviceId: ServiceIdentifier<any>; }[]):T;\n}\n\nexport interface INewConstructorSignature4<A1, A2, A3, A4, T> {\n\tnew(first:A1, second:A2, third:A3, forth:A4, ...services:{ serviceId: ServiceIdentifier<any>; }[]):T;\n}\n\nexport interface INewConstructorSignature5<A1, A2, A3, A4, A5, T> {\n\tnew(first:A1, second:A2, third:A3, forth:A4, fifth:A5, ...services:{ serviceId: ServiceIdentifier<any>; }[]):T;\n}\n\nexport interface INewConstructorSignature6<A1, A2, A3, A4, A5, A6, T> {\n\tnew(first:A1, second:A2, third:A3, forth:A4, fifth:A5, sixth:A6, ...services:{ serviceId: ServiceIdentifier<any>; }[]):T;\n}\n\nexport interface INewConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T> {\n\tnew(first:A1, second:A2, third:A3, forth:A4, fifth:A5, sixth:A6, seventh:A7, ...services:{ serviceId: ServiceIdentifier<any>; }[]):T;\n}\n\nexport interface INewConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n\tnew(first:A1, second:A2, third:A3, forth:A4, fifth:A5, sixth:A6, seventh:A7, eigth:A8, ...services:{ serviceId: ServiceIdentifier<any>; }[]):T;\n}\n\nexport interface ServicesAccessor {\n\tget<T>(id: ServiceIdentifier<T>): T;\n}\n\nexport interface IFunctionSignature0<R> {\n\t(accessor:ServicesAccessor):R;\n}\n\nexport interface IFunctionSignature1<A1, R> {\n\t(accessor:ServicesAccessor, first:A1):R;\n}\n\nexport interface IFunctionSignature2<A1, A2, R> {\n\t(accessor:ServicesAccessor, first:A1, second:A2):R;\n}\n\nexport interface IFunctionSignature3<A1, A2, A3, R> {\n\t(accessor:ServicesAccessor, first:A1, second:A2, third:A3):R;\n}\n\nexport interface IFunctionSignature4<A1, A2, A3, A4, R> {\n\t(accessor:ServicesAccessor, first:A1, second:A2, third:A3, forth:A4):R;\n}\n\nexport interface IFunctionSignature5<A1, A2, A3, A4, A5, R> {\n\t(accessor:ServicesAccessor, first:A1, second:A2, third:A3, forth:A4, fifth:A5):R;\n}\n\nexport interface IFunctionSignature6<A1, A2, A3, A4, A5, A6, R> {\n\t(accessor:ServicesAccessor, first:A1, second:A2, third:A3, forth:A4, fifth:A5, sixth:A6):R;\n}\n\nexport interface IFunctionSignature7<A1, A2, A3, A4, A5, A6, A7, R> {\n\t(accessor:ServicesAccessor, first:A1, second:A2, third:A3, forth:A4, fifth:A5, sixth:A6, seventh:A7):R;\n}\n\nexport interface IFunctionSignature8<A1, A2, A3, A4, A5, A6, A7, A8, R> {\n\t(accessor:ServicesAccessor, first:A1, second:A2, third:A3, forth:A4, fifth:A5, sixth:A6, seventh:A7, eigth:A8):R;\n}\n\n\nexport var IInstantiationService = createDecorator<IInstantiationService>('instantiationService');\n\nexport interface IInstantiationService {\n\tserviceId : ServiceIdentifier<any>;\n\n\t/**\n\t * Returns an instance of the service identified by\n\t * {{id}}. If the service is not known {{undefined}}\n\t * is returned. If the service has not been created\n\t * yet it will be created.\n\t */\n\tgetInstance<T>(id: ServiceIdentifier<T>): T;\n\n\t/**\n\t * Synchronously creates an instance that is defined by\n\t * the constructor signature.\n\t */\n\tcreateInstance<T>(ctor:IConstructorSignature0<T>):T;\n\n\t/**\n\t * Synchronously creates an instance that is defined by\n\t * the constructor signature.\n\t */\n\tcreateInstance<A1, T>(ctor:IConstructorSignature1<A1, T>, first:A1):T;\n\n\t/**\n\t * Synchronously creates an instance that is defined by\n\t * the constructor signature.\n\t */\n\tcreateInstance<A1, A2, T>(ctor:IConstructorSignature2<A1, A2, T>, first:A1, second:A2):T;\n\n\t/**\n\t * Synchronously creates an instance that is defined by\n\t * the constructor signature.\n\t */\n\tcreateInstance<A1, A2, A3, T>(ctor:IConstructorSignature3<A1, A2, A3, T>, first:A1, second:A2, third:A3):T;\n\n\t/**\n\t * Synchronously creates an instance that is defined by\n\t * the constructor signature.\n\t */\n\tcreateInstance<A1, A2, A3, A4, T>(ctor:IConstructorSignature4<A1, A2, A3, A4, T>, first:A1, second:A2, third:A3, fourth:A4):T;\n\n\t/**\n\t * Synchronously creates an instance that is defined by\n\t * the constructor signature.\n\t */\n\tcreateInstance<A1, A2, A3, A4, A5, T>(ctor:IConstructorSignature5<A1, A2, A3, A4, A5, T>, first:A1, second:A2, third:A3, fourth:A4, fifth:A5):T;\n\n\t/**\n\t * Synchronously creates an instance that is defined by\n\t * the constructor signature.\n\t */\n\tcreateInstance<A1, A2, A3, A4, A5, A6, T>(ctor:IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, first:A1, second:A2, third:A3, fourth:A4, fifth:A5, sixth:A6):T;\n\n\t/**\n\t * Synchronously creates an instance that is defined by\n\t * the constructor signature.\n\t */\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, T>(ctor:IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, first:A1, second:A2, third:A3, fourth:A4, fifth:A5, sixth:A6, seventh:A7):T;\n\n\t/**\n\t * Synchronously creates an instance that is defined by\n\t * the constructor signature.\n\t */\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor:IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, first:A1, second:A2, third:A3, fourth:A4, fifth:A5, sixth:A6, seventh:A7, eigth:A8):T;\n\n\t/**\n\t * Synchronously creates an instance that is denoted by\n\t * the descriptor\n\t */\n\tcreateInstance<T>(descriptor: descriptors.SyncDescriptor0<T>): T;\n\tcreateInstance<A1, T>(descriptor: descriptors.SyncDescriptor1<A1, T>, a1: A1): T;\n\tcreateInstance<A1, A2, T>(descriptor: descriptors.SyncDescriptor2<A1, A2, T>, a1: A1, a2: A2): T;\n\tcreateInstance<A1, A2, A3, T>(descriptor: descriptors.SyncDescriptor3<A1, A2, A3, T>, a1: A1, a2: A2, a3: A3): T;\n\tcreateInstance<A1, A2, A3, A4, T>(descriptor: descriptors.SyncDescriptor4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3, a4: A4): T;\n\tcreateInstance<A1, A2, A3, A4, A5, T>(descriptor: descriptors.SyncDescriptor5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, T>(descriptor: descriptors.SyncDescriptor6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, T>(descriptor: descriptors.SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, A8, T>(descriptor: descriptors.SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): T;\n\n\tcreateInstance<T>(ctor: INewConstructorSignature0<T>): T;\n\tcreateInstance<A1, T>(ctor:INewConstructorSignature1<A1, T>, first:A1):T;\n\tcreateInstance<A1, A2, T>(ctor:INewConstructorSignature2<A1, A2, T>, first:A1, second:A2):T;\n\tcreateInstance<A1, A2, A3, T>(ctor:INewConstructorSignature3<A1, A2, A3, T>, first:A1, second:A2, third:A3):T;\n\tcreateInstance<A1, A2, A3, A4, T>(ctor:INewConstructorSignature4<A1, A2, A3, A4, T>, first:A1, second:A2, third:A3, fourth:A4):T;\n\tcreateInstance<A1, A2, A3, A4, A5, T>(ctor:INewConstructorSignature5<A1, A2, A3, A4, A5, T>, first:A1, second:A2, third:A3, fourth:A4, fifth:A5):T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, T>(ctor:INewConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, first:A1, second:A2, third:A3, fourth:A4, fifth:A5, sixth:A6):T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, T>(ctor:INewConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, first:A1, second:A2, third:A3, fourth:A4, fifth:A5, sixth:A6, seventh:A7):T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: INewConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, eigth: A8): T;\n\n\t/**\n\t * Asynchronously creates an instance that is denoted by\n\t * the descriptor\n\t */\n\tcreateInstance<T>(descriptor: descriptors.AsyncDescriptor0<T>): winjs.TPromise<T>;\n\tcreateInstance<A1, T>(descriptor: descriptors.AsyncDescriptor1<A1, T>, a1: A1): winjs.TPromise<T>;\n\tcreateInstance<A1, A2, T>(descriptor: descriptors.AsyncDescriptor2<A1, A2, T>, a1: A1, a2: A2): winjs.TPromise<T>;\n\tcreateInstance<A1, A2, A3, T>(descriptor: descriptors.AsyncDescriptor3<A1, A2, A3, T>, a1: A1, a2: A2, a3: A3): winjs.TPromise<T>;\n\tcreateInstance<A1, A2, A3, A4, T>(descriptor: descriptors.AsyncDescriptor4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3, a4: A4): winjs.TPromise<T>;\n\tcreateInstance<A1, A2, A3, A4, A5, T>(descriptor: descriptors.AsyncDescriptor5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): winjs.TPromise<T>;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, T>(descriptor: descriptors.AsyncDescriptor6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): winjs.TPromise<T>;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, T>(descriptor: descriptors.AsyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): winjs.TPromise<T>;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, A8, T>(descriptor: descriptors.AsyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): winjs.TPromise<T>;\n\n\tcreateInstance<T>(descriptor:descriptors.AsyncDescriptor<T>, ...args:any[]):winjs.TPromise<T>;\n\n\t/**\n\t *\n\t */\n\tinvokeFunction<R>(ctor: IFunctionSignature0<R>): R;\n\tinvokeFunction<A1, R>(ctor:IFunctionSignature1<A1, R>, first:A1):R;\n\tinvokeFunction<A1, A2, R>(ctor:IFunctionSignature2<A1, A2, R>, first:A1, second:A2):R;\n\tinvokeFunction<A1, A2, A3, R>(ctor:IFunctionSignature3<A1, A2, A3, R>, first:A1, second:A2, third:A3):R;\n\tinvokeFunction<A1, A2, A3, A4, R>(ctor:IFunctionSignature4<A1, A2, A3, A4, R>, first:A1, second:A2, third:A3, fourth:A4):R;\n\tinvokeFunction<A1, A2, A3, A4, A5, R>(ctor:IFunctionSignature5<A1, A2, A3, A4, A5, R>, first:A1, second:A2, third:A3, fourth:A4, fifth:A5):R;\n\tinvokeFunction<A1, A2, A3, A4, A5, A6, R>(ctor:IFunctionSignature6<A1, A2, A3, A4, A5, A6, R>, first:A1, second:A2, third:A3, fourth:A4, fifth:A5, sixth:A6):R;\n\tinvokeFunction<A1, A2, A3, A4, A5, A6, A7, R>(ctor:IFunctionSignature7<A1, A2, A3, A4, A5, A6, A7, R>, first:A1, second:A2, third:A3, fourth:A4, fifth:A5, sixth:A6, seventh:A7):R;\n\tinvokeFunction<A1, A2, A3, A4, A5, A6, A7, A8, R>(ctor:IFunctionSignature8<A1, A2, A3, A4, A5, A6, A7, A8, R>, first:A1, second:A2, third:A3, fourth:A4, fifth:A5, sixth:A6, seventh:A7, eigth:A8):R;\n\n\t/**\n\t * Creates a child of this service which inherts all current services\n\t * and adds/overwrites the given services\n\t */\n\tcreateChild(services: any): IInstantiationService;\n\n\t/**\n\t * Registers a new service to this instantation service.\n\t */\n\tregisterService(name: string, service: any): void;\n\n\t/**\n\t * Adds a service or a descriptor to the collection of services and\n\t * treats it as a singleton which means every consumer will receive\n\t * the same instance.\n\t */\n\taddSingleton<T>(id: ServiceIdentifier<T>, instanceOrDescriptor: T|descriptors.SyncDescriptor<T>): void;\n}\n\n\n/**\n * Identifies a service of type T\n */\nexport interface ServiceIdentifier<T> {\n\t(...args: any[]): void;\n\ttype: T;\n}\n\n/**\n * A *only* valid way to create a {{ServiceIdentifier}}.\n */\nexport function createDecorator<T>(serviceId: string): {(...args: any[]): void;type: T;} {\n\n\tvar ret = function (target: any, key: string, index: number): any {\n\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@IServiceName-decorator can only be used to decorate a parameter');\n\t\t}\n\n\t\tif (target[_util.DI_TARGET] === target) {\n\t\t\ttarget[_util.DI_DEPENDENCIES].push({ serviceId, index });\n\t\t} else {\n\t\t\ttarget[_util.DI_DEPENDENCIES] = [{ serviceId, index }];\n\t\t\ttarget[_util.DI_TARGET] = target;\n\t\t}\n\t}\n\n\tret[_util.DI_PROVIDES] = serviceId;\n\t// ret['type'] = undefined;\n\treturn <any> ret;\n}\n\n/**\n *\n */\nexport function Uses(...ids: ServiceIdentifier<any>[]): any {\n\n\tlet serviceIds: { serviceId: string; index?: number; }[] = [];\n\tfor (let id of ids) {\n\t\tserviceIds.push({ serviceId: _util.getServiceId(id) });\n\t}\n\n\treturn function (target: Function) {\n\t\tvar existing: typeof serviceIds = target[_util.DI_DEPENDENCIES_USES];\n\t\tif (!existing) {\n\t\t\ttarget[_util.DI_DEPENDENCIES_USES] = serviceIds;\n\t\t} else {\n\t\t\texisting.push.apply(existing, serviceIds);\n\t\t}\n\t\treturn target;\n\t}\n}\n\n/**\n * A service context which can be used to retrieve services\n * given a valid service identifer is being presented\n */\nexport interface Context {\n\tget<T>(id:ServiceIdentifier<T>): T;\n}\n\n/*\n * Dummy service to make signal that the new service injection is used. I will go away once we remove the old way (using ctx)\n */\nexport var INullService = createDecorator<IInstantiationService>('nullService');\n\nexport interface INullService {\n\tserviceId: ServiceIdentifier<any>;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport Event from 'vs/base/common/event';\nimport {ICommonCodeEditor, IDecorationRenderOptions, IModelDecorationOptions} from 'vs/editor/common/editorCommon';\nimport {createDecorator, IInstantiationService, ServiceIdentifier} from 'vs/platform/instantiation/common/instantiation';\n\nexport var ID_CODE_EDITOR_SERVICE = 'codeEditorService';\nexport var ICodeEditorService = createDecorator<ICodeEditorService>(ID_CODE_EDITOR_SERVICE);\n\nexport interface ICodeEditorService {\n\tserviceId: ServiceIdentifier<any>;\n\n\taddCodeEditor(editor: ICommonCodeEditor): void;\n\n\tonCodeEditorAdd: Event<ICommonCodeEditor>;\n\n\tremoveCodeEditor(editor: ICommonCodeEditor): void;\n\n\tonCodeEditorRemove: Event<ICommonCodeEditor>;\n\n\tgetCodeEditor(editorId: string): ICommonCodeEditor;\n\n\tlistCodeEditors(): ICommonCodeEditor[];\n\n\tregisterDecorationType(key:string, options: IDecorationRenderOptions): void;\n\tremoveDecorationType(key:string): void;\n\tresolveDecorationType(key:string): IModelDecorationOptions;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {createDecorator, ServiceIdentifier} from 'vs/platform/instantiation/common/instantiation';\nimport EditorCommon = require('vs/editor/common/editorCommon');\nimport {EventProvider} from 'vs/base/common/eventProvider';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport URI from 'vs/base/common/uri';\nimport Modes = require('vs/editor/common/modes');\nimport Supports = require ('vs/editor/common/modes/supports');\nimport MonarchTypes = require('vs/editor/common/modes/monarch/monarchTypes');\nimport {IOnEnterSupportOptions} from 'vs/editor/common/modes/supports/onEnter';\nimport {IDisposable} from 'vs/base/common/lifecycle';\n\nexport var IModeService = createDecorator<IModeService>('modeService');\n\nexport interface IModeLookupResult {\n\tmodeId: string;\n\tisInstantiated: boolean;\n}\n\nexport interface IModeService {\n\tserviceId: ServiceIdentifier<any>;\n\n\tconfigureMode(modeName: string, options: any): void;\n\tconfigureModeById(modeId: string, options: any): void;\n\tconfigureAllModes(config:any): void;\n\tgetConfigurationForMode(modeId:string): any;\n\n\t// --- instantiation\n\tlookup(commaSeparatedMimetypesOrCommaSeparatedIds: string): IModeLookupResult[];\n\tgetMode(commaSeparatedMimetypesOrCommaSeparatedIds: string): Modes.IMode;\n\tgetOrCreateMode(commaSeparatedMimetypesOrCommaSeparatedIds: string): TPromise<Modes.IMode>;\n\tgetOrCreateModeByLanguageName(languageName: string): TPromise<Modes.IMode>;\n\tgetOrCreateModeByFilenameOrFirstLine(filename: string, firstLine?:string): TPromise<Modes.IMode>;\n\n\tregisterDeclarativeCharacterPairSupport(modeId: string, support: Modes.ICharacterPairContribution): IDisposable;\n\tregisterCodeLensSupport(modeId: string, support: Modes.ICodeLensSupport): IDisposable;\n\tregisterDeclarativeCommentsSupport(modeId: string, support: Supports.ICommentsSupportContribution): IDisposable;\n\tregisterDeclarativeDeclarationSupport(modeId: string, contribution: Supports.IDeclarationContribution): IDisposable;\n\tregisterDeclarativeElectricCharacterSupport(modeId: string, support: Supports.IBracketElectricCharacterContribution): IDisposable;\n\tregisterExtraInfoSupport(modeId: string, support: Modes.IExtraInfoSupport): IDisposable;\n\tregisterFormattingSupport(modeId: string, support: Modes.IFormattingSupport): IDisposable;\n\tregisterInplaceReplaceSupport(modeId: string, support: Modes.IInplaceReplaceSupport): IDisposable;\n\tregisterOccurrencesSupport(modeId: string, support: Modes.IOccurrencesSupport): IDisposable;\n\tregisterOutlineSupport(modeId: string, support: Modes.IOutlineSupport): IDisposable;\n\tregisterDeclarativeParameterHintsSupport(modeId: string, support: Modes.IParameterHintsContribution): IDisposable;\n\tregisterQuickFixSupport(modeId: string, support: Modes.IQuickFixSupport): IDisposable;\n\tregisterDeclarativeReferenceSupport(modeId: string, contribution: Supports.IReferenceContribution): IDisposable;\n\tregisterRenameSupport(modeId: string, support: Modes.IRenameSupport): IDisposable;\n\tregisterDeclarativeSuggestSupport(modeId: string, declaration: Supports.ISuggestContribution): IDisposable;\n\tregisterTokenizationSupport(modeId: string, callback: (mode: Modes.IMode) => Modes.ITokenizationSupport): IDisposable;\n\tregisterDeclarativeTokenTypeClassificationSupport(modeId: string, support: Supports.ITokenTypeClassificationSupportContribution): IDisposable;\n\tregisterDeclarativeOnEnterSupport(modeId: string, support: IOnEnterSupportOptions): IDisposable;\n\n\tregisterMonarchDefinition(modeId:string, language:MonarchTypes.ILanguage): IDisposable;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {createDecorator, ServiceIdentifier} from 'vs/platform/instantiation/common/instantiation';\nimport EditorCommon = require('vs/editor/common/editorCommon');\nimport Modes = require('vs/editor/common/modes');\nimport {EventProvider} from 'vs/base/common/eventProvider';\nimport URI from 'vs/base/common/uri';\n\nexport var IModelService = createDecorator<IModelService>('modelService');\n\nexport interface IModelService {\n\tserviceId: ServiceIdentifier<any>;\n\n\tcreateModel(value:string, modeOrPromise:TPromise<Modes.IMode>|Modes.IMode, resource: URI): EditorCommon.IModel;\n\n\tdestroyModel(resource: URI): void;\n\n\tgetModels(): EditorCommon.IModel[];\n\n\tgetModel(resource: URI): EditorCommon.IModel;\n\n\tonModelAdded: EventProvider<(model: EditorCommon.IModel) => void>;\n\n\tonModelRemoved: EventProvider<(model: EditorCommon.IModel) => void>;\n\n\tonModelModeChanged: EventProvider<(model: EditorCommon.IModel, oldModeId:string) => void>;\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {createDecorator, ServiceIdentifier} from 'vs/platform/instantiation/common/instantiation';\nimport {IEventEmitter} from 'vs/base/common/eventEmitter';\nimport winjs = require('vs/base/common/winjs.base');\n\nexport var IConfigurationService = createDecorator<IConfigurationService>('configurationService');\n\nexport interface IConfigurationService extends IEventEmitter {\n\tserviceId : ServiceIdentifier<any>;\n\n\t/**\n\t * Fetches the appropriate section of the configuration JSON file.\n\t * This will be an object keyed off the section name.\n\t */\n\tloadConfiguration(section?:string):winjs.TPromise<any>;\n\n\t/**\n\t * Returns iff the workspace has configuration or not.\n\t */\n\thasWorkspaceConfiguration():boolean;\n}\n\nexport class ConfigurationServiceEventTypes {\n\n\t/**\n\t * This event happens after configuration is updated either programmatically\n\t * or through a file change. It will include a IConfigurationServiceEvent\n\t * object that includes the new config and which section was updated\n\t * or null if entire config was updated.\n\t *\n\t * Subscribers can use the provided updated configuration\n\t * rather than re-pulling for updates\n\t */\n\tpublic static UPDATED = 'update';\n}\n\nexport interface IConfigurationServiceEvent {\n\tsection?:string;\n\tconfig:any;\n}\n\nexport function extractSetting(config: any, settingPath: string): any {\n\tfunction accessSetting(config: any, path: string[]): any {\n\t\tlet current = config;\n\t\tfor (let i = 0; i < path.length; i++) {\n\t\t\tcurrent = current[path[i]];\n\t\t\tif (!current) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}\n\t\treturn current;\n\t}\n\n\tlet path = settingPath.split('.');\n\treturn accessSetting(config, path);\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport URI from 'vs/base/common/uri';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {IEventEmitter} from 'vs/base/common/eventEmitter';\n\nimport {ISelection} from 'vs/platform/selection/common/selection';\nimport {createDecorator, ServiceIdentifier} from 'vs/platform/instantiation/common/instantiation';\n\nexport var IEditorService = createDecorator<IEditorService>('editorService');\n\nexport interface IEditorService {\n\tserviceId: ServiceIdentifier<any>;\n\t/**\n\t * Specific overload to open an instance of IResourceInput.\n\t */\n\topenEditor(input: IResourceInput, sideBySide?: boolean): TPromise<IEditor>;\n\n\t/**\n\t * Specific overload to resolve a IResourceInput to an editor model with a text representation.\n\t */\n\tresolveEditorModel(input: IResourceInput, refresh?: boolean): TPromise<ITextEditorModel>;\n}\n\nexport interface IEditorModel extends IEventEmitter {\n}\n\nexport interface ITextEditorModel extends IEditorModel {\n\ttextEditorModel: any;\n}\n\nexport interface IResourceInput extends ITextInput {\n\n\t/**\n\t * The resource URL of the resource to open.\n\t */\n\tresource: URI;\n}\n\nexport interface ITextInput {\n\n\t/**\n\t * The mime type of the text input if known.\n\t */\n\tmime?: string;\n\n\t/**\n\t * Optional options to use when opening the text input.\n\t */\n\toptions?: {\n\n\t\t/**\n\t\t * Text editor selection.\n\t\t */\n\t\tselection?: {\n\t\t\tstartLineNumber: number;\n\t\t\tstartColumn: number;\n\t\t\tendLineNumber?: number;\n\t\t\tendColumn?: number;\n\t\t};\n\n\t\t/**\n\t\t * Will force the editor to open even if the input is already showing.\n\t\t */\n\t\tforceOpen?: boolean;\n\n\t\t/**\n\t\t * Will open the editor but not move keyboard focus into the editor.\n\t\t */\n\t\tpreserveFocus?: boolean;\n\n\t\t/**\n\t\t * Ensures that the editor is being activated even if the input is already showing. This only applies\n\t\t * if there is more than one editor open already and preserveFocus is set to false.\n\t\t */\n\t\tforceActive?: boolean;\n\t};\n}\n\nexport interface IEditor {\n\n\t/**\n\t * The assigned input of this editor.\n\t */\n\tinput: IEditorInput;\n\n\t/**\n\t * The assigned options of this editor.\n\t */\n\toptions: IEditorOptions;\n\n\t/**\n\t * The assigned position of this editor.\n\t */\n\tposition: Position;\n\n\t/**\n\t * Returns the unique identifier of this editor.\n\t */\n\tgetId(): string;\n\n\t/**\n\t * Returns the underlying control of this editor.\n\t */\n\tgetControl(): IEventEmitter;\n\n\t/**\n\t * Returns the selection of this editor.\n\t */\n\tgetSelection(): ISelection;\n\n\t/**\n\t * Asks the underlying control to focus.\n\t */\n\tfocus(): void;\n}\n\n/**\n * Possible locations for opening an editor.\n */\nexport enum Position {\n\n\t/** Opens the editor in the LEFT most position replacing the input currently showing */\n\tLEFT = 0,\n\n\t/** Opens the editor in the CENTER position replacing the input currently showing */\n\tCENTER = 1,\n\n\t/** Opens the editor in the RIGHT most position replacing the input currently showing */\n\tRIGHT = 2\n}\n\nexport var POSITIONS = [Position.LEFT, Position.CENTER, Position.RIGHT];\n\nexport interface IEditorInput extends IEventEmitter {\n\n\t/**\n\t * Returns the identifier of this input or null if none.\n\t */\n\tgetId(): string;\n\n\t/**\n\t * Returns the display name of this input.\n\t */\n\tgetName(): string;\n\n\t/**\n\t * Returns if the other object matches this input.\n\t */\n\tmatches(other: any): boolean;\n}\n\nexport interface IEditorOptions {\n\n\t/**\n\t * Returns if the other object matches this options.\n\t */\n\tmatches(other: any): boolean;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {IEventEmitter} from 'vs/base/common/eventEmitter';\nimport {IDisposable} from 'vs/base/common/lifecycle';\nimport {createDecorator, ServiceIdentifier} from 'vs/platform/instantiation/common/instantiation';\n\nexport var IEventService = createDecorator<IEventService>('eventService');\n\nexport interface IEventService {\n\tserviceId: ServiceIdentifier<any>;\n\n\t/**\n\t * Allows to add a listener to the platform event bus for all emitters that are known to the platform.\n\t */\n\taddListener(eventType: string, listener: (event: any) => void): () => void;\n\n\t/**\n\t * Allows to add a listener to the platform event bus for all emitters that are known to the platform.\n\t */\n\taddListener2(eventType: string, listener: (event: any) => void): IDisposable;\n\n\t/**\n\t * Allows to add a listener to an emitter on the platform event bus with the given type identifier.\n\t */\n\taddEmitterTypeListener(eventType: string, emitterType: string, listener: (event: any) => void): () => void;\n\n\t/**\n\t * Allows to add an event emitter to the platform bus such as Events from the emitter\n\t * can be received from all listeners on the bus.\n\t */\n\taddEmitter(eventEmitter: IEventEmitter, emitterType?: string): () => void;\n\n\t/**\n\t * Emits an event of the given type into the platform event bus.\n\t * Note: Instead of emitting directly to the platform bus, it is also possible to register\n\t * as event emitter to the bus using addEmitter() with a emitterType specified. This\n\t * makes it possible to scope Events on the bus to a specific namespace, depending on the\n\t * emitter and avoids polluting the global namespace in the bus with Events.\n\t */\n\temit(eventType: string, e?: any): void;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport assert = require('vs/base/common/assert');\nimport winjs = require('vs/base/common/winjs.base');\nimport paths = require('vs/base/common/paths');\nimport URI from 'vs/base/common/uri';\nimport nls = require('vs/nls');\nimport encoding = require('vs/base/common/bits/encoding');\nimport types = require('vs/base/common/types');\nimport strings = require('vs/base/common/strings');\nimport glob = require('vs/base/common/glob');\nimport arrays = require('vs/base/common/arrays');\nimport events = require('vs/base/common/events');\nimport mimes = require('vs/base/common/mime');\nimport {createDecorator, ServiceIdentifier} from 'vs/platform/instantiation/common/instantiation';\n\nexport var IFileService = createDecorator<IFileService>('fileService');\n\nexport interface IFileService {\n\tserviceId: ServiceIdentifier<any>;\n\n\t/**\n\t * Resolve the properties of a file identified by the resource.\n\t *\n\t * If the optional parameter \"resolveTo\" is specified in options, the stat service is asked\n\t * to provide a stat object that should contain the full graph of folders up to all of the\n\t * target resources.\n\t *\n\t * If the optional parameter \"resolveSingleChildDescendants\" is specified in options,\n\t * the stat service is asked to automatically resolve child folders that only\n\t * contain a single element.\n\t */\n\tresolveFile(resource: URI, options?: IResolveFileOptions): winjs.TPromise<IFileStat>;\n\n\t/**\n\t * Resolve the contents of a file identified by the resource.\n\t *\n\t * The returned object contains properties of the file and the full value as string.\n\t */\n\tresolveContent(resource: URI, options?: IResolveContentOptions): winjs.TPromise<IContent>;\n\n\t/**\n\t * Returns the contents of all files by the given array of file resources.\n\t */\n\tresolveContents(resources: URI[]): winjs.TPromise<IContent[]>;\n\n\t/**\n\t * Updates the content replacing its previous value.\n\t */\n\tupdateContent(resource: URI, value: string, options?: IUpdateContentOptions): winjs.TPromise<IFileStat>;\n\n\t/**\n\t * Moves the file to a new path identified by the resource.\n\t *\n\t * The optional parameter overwrite can be set to replace an existing file at the location.\n\t */\n\tmoveFile(source: URI, target: URI, overwrite?: boolean): winjs.TPromise<IFileStat>;\n\n\t/**\n\t * Copies the file to a path identified by the resource.\n\t *\n\t * The optional parameter overwrite can be set to replace an existing file at the location.\n\t */\n\tcopyFile(source: URI, target: URI, overwrite?: boolean): winjs.TPromise<IFileStat>;\n\n\t/**\n\t * Creates a new file with the given path. The returned promise\n\t * will have the stat model object as a result.\n\t *\n\t * The optional parameter content can be used as value to fill into the new file.\n\t */\n\tcreateFile(resource: URI, content?: string): winjs.TPromise<IFileStat>;\n\n\t/**\n\t * Creates a new folder with the given path. The returned promise\n\t * will have the stat model object as a result.\n\t */\n\tcreateFolder(resource: URI): winjs.TPromise<IFileStat>;\n\n\t/**\n\t * Renames the provided file to use the new name. The returned promise\n\t * will have the stat model object as a result.\n\t */\n\trename(resource: URI, newName: string): winjs.TPromise<IFileStat>;\n\n\t/**\n\t * Deletes the provided file.  The optional useTrash parameter allows to\n\t * move the file to trash.\n\t */\n\tdel(resource: URI, useTrash?: boolean): winjs.TPromise<void>;\n\n\t/**\n\t * Imports the file to the parent identified by the resource.\n\t */\n\timportFile(source: URI, targetFolder: URI): winjs.TPromise<IImportResult>;\n\n\t/**\n\t * Allows to start a watcher that reports file change events on the provided resource.\n\t */\n\twatchFileChanges(resource: URI): void;\n\n\t/**\n\t * Allows to stop a watcher on the provided resource or absolute fs path.\n\t */\n\tunwatchFileChanges(resource: URI): void;\n\tunwatchFileChanges(fsPath: string): void;\n\n\t/**\n\t * Configures the file service with the provided options.\n\t */\n\tupdateOptions(options: any): void;\n\n\t/**\n\t * Frees up any resources occupied by this service.\n\t */\n\tdispose(): void;\n}\n\n\n/**\n * Possible changes that can occur to a file.\n */\nexport enum FileChangeType {\n\tUPDATED = 0,\n\tADDED = 1,\n\tDELETED = 2\n}\n\n/**\n * Possible events to subscribe to\n */\nexport var EventType = {\n\n\t/**\n\t* Send on file changes.\n\t*/\n\tFILE_CHANGES: 'files:fileChanges'\n};\n\n/**\n * Identifies a single change in a file.\n */\nexport interface IFileChange {\n\n\t/**\n\t * The type of change that occured to the file.\n\t */\n\ttype: FileChangeType;\n\n\t/**\n\t * The unified resource identifier of the file that changed.\n\t */\n\tresource: URI;\n};\n\nexport class FileChangesEvent extends events.Event {\n\tprivate _changes: IFileChange[];\n\n\tconstructor(changes: IFileChange[]) {\n\t\tsuper();\n\n\t\tthis._changes = changes;\n\t}\n\n\tpublic get changes() {\n\t\treturn this._changes;\n\t}\n\n\t/**\n\t * Returns true if this change event contains the provided file with the given change type. In case of\n\t * type DELETED, this method will also return true if a folder got deleted that is the parent of the\n\t * provided file path.\n\t */\n\tpublic contains(resource: URI, type: FileChangeType): boolean {\n\t\tif (!resource) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.containsAny([resource], type);\n\t}\n\n\t/**\n\t * Returns true if this change event contains any of the provided files with the given change type. In case of\n\t * type DELETED, this method will also return true if a folder got deleted that is the parent of any of the\n\t * provided file paths.\n\t */\n\tpublic containsAny(resources: URI[], type: FileChangeType): boolean {\n\t\tif (!resources || !resources.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this._changes.some((change) => {\n\t\t\tif (change.type !== type) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// For deleted also return true when deleted folder is parent of target path\n\t\t\tif (type === FileChangeType.DELETED) {\n\t\t\t\treturn resources.some((a: URI) => {\n\t\t\t\t\tif (!a) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn paths.isEqualOrParent(a.fsPath, change.resource.fsPath);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn resources.some((a: URI) => {\n\t\t\t\tif (!a) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn a.fsPath === change.resource.fsPath;\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Returns the changes that describe added files.\n\t */\n\tpublic getAdded(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.ADDED);\n\t}\n\n\t/**\n\t * Returns if this event contains added files.\n\t */\n\tpublic gotAdded(): boolean {\n\t\treturn this.hasType(FileChangeType.ADDED);\n\t}\n\n\t/**\n\t * Returns the changes that describe deleted files.\n\t */\n\tpublic getDeleted(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.DELETED);\n\t}\n\n\t/**\n\t * Returns if this event contains deleted files.\n\t */\n\tpublic gotDeleted(): boolean {\n\t\treturn this.hasType(FileChangeType.DELETED);\n\t}\n\n\t/**\n\t * Returns the changes that describe updated files.\n\t */\n\tpublic getUpdated(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.UPDATED);\n\t}\n\n\t/**\n\t * Returns if this event contains updated files.\n\t */\n\tpublic gotUpdated(): boolean {\n\t\treturn this.hasType(FileChangeType.UPDATED);\n\t}\n\n\tprivate getOfType(type: FileChangeType): IFileChange[] {\n\t\treturn this._changes.filter((change) => change.type === type);\n\t}\n\n\tprivate hasType(type: FileChangeType): boolean {\n\t\treturn this._changes.some((change) => {\n\t\t\treturn change.type === type;\n\t\t});\n\t}\n}\n\nexport interface IBaseStat {\n\n\t/**\n\t * The unified resource identifier of this file or folder.\n\t */\n\tresource: URI;\n\n\t/**\n\t * The name which is the last segement\n\t * of the {{path}}.\n\t */\n\tname: string;\n\n\t/**\n\t * The last modifictaion date represented\n\t * as millis from unix epoch.\n\t */\n\tmtime: number;\n\n\t/**\n\t * A unique identifier thet represents the\n\t * current state of the file or directory.\n\t */\n\tetag: string;\n\n\t/**\n\t * The mime type string. Applicate for files\n\t * only.\n\t */\n\tmime: string;\n}\n\n/**\n * A file resource with meta information.\n */\nexport interface IFileStat extends IBaseStat {\n\n\t/**\n\t * The resource is a directory. Iff {{true}}\n\t * {{mime}} and {{charset}} have no meaning.\n\t */\n\tisDirectory: boolean;\n\n\t/**\n\t * Return {{true}} when this is a directory\n\t * that is not empty.\n\t */\n\thasChildren: boolean;\n\n\t/**\n\t * The children of the file stat or undefined if none.\n\t */\n\tchildren?: IFileStat[];\n\n\t/**\n\t * The size of the file if known.\n\t */\n\tsize?: number;\n}\n\n/**\n * Content and meta information of a file.\n */\nexport interface IContent extends IBaseStat {\n\n\t/**\n\t * The content of a text file.\n\t */\n\tvalue: string;\n\n\t/**\n\t * The charset of the content if known.\n\t */\n\tcharset: string;\n}\n\nexport interface IResolveContentOptions {\n\n\t/**\n\t * The optional acceptTextOnly parameter allows to fail this request early if the file\n\t * contents are not textual.\n\t */\n\tacceptTextOnly?: boolean;\n\n\t/**\n\t * The optional etag parameter allows to return a 304 (Not Modified) if the etag matches\n\t * with the remote resource. It is the task of the caller to makes sure to handle this\n\t * error case from the promise.\n\t */\n\tetag?: string;\n\n\t/**\n\t * The optional encoding parameter allows to specify the desired encoding when resolving\n\t * the contents of the file.\n\t */\n\tencoding?: string;\n}\n\nexport interface IUpdateContentOptions {\n\n\t/**\n\t * The charset to use when updating a file.\n\t */\n\tcharset?: string;\n\n\t/**\n\t * Whether to overwrite a file even if it is readonly.\n\t */\n\toverwriteReadonly?: boolean;\n\n\t/**\n\t * The last known modification time of the file. This can be used to prevent dirty writes.\n\t */\n\tmtime?: number;\n\n\t/**\n\t * The etag of the file. This can be used to prevent dirty writes.\n\t */\n\tetag?: string;\n}\n\nexport interface IResolveFileOptions {\n\tresolveTo?: URI[];\n\tresolveSingleChildDescendants?: boolean;\n}\n\nexport interface IImportResult {\n\tstat: IFileStat;\n\tisNew: boolean;\n}\n\nexport interface IFileOperationResult {\n\tmessage: string;\n\tfileOperationResult: FileOperationResult;\n}\n\nexport enum FileOperationResult {\n\tFILE_IS_BINARY,\n\tFILE_IS_DIRECTORY,\n\tFILE_NOT_FOUND,\n\tFILE_NOT_MODIFIED_SINCE,\n\tFILE_MODIFIED_SINCE,\n\tFILE_MOVE_CONFLICT,\n\tFILE_READ_ONLY,\n\tFILE_TOO_LARGE\n}\n\nexport interface IFilesConfiguration {\n\tfiles: {\n\t\texclude: glob.IExpression;\n\t\tencoding: string;\n\t\ttrimTrailingWhitespace: boolean;\n\t};\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as nls from 'vs/nls';\nimport URI from 'vs/base/common/uri';\nimport {merge} from 'vs/base/common/arrays';\nimport {IStringDictionary, forEach, values} from 'vs/base/common/collections';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {IEventService} from 'vs/platform/event/common/event';\nimport {IEditorService} from 'vs/platform/editor/common/editor';\nimport {IRange, ISelection, IEditorSelection, IModel, IIdentifiedSingleEditOperation} from 'vs/editor/common/editorCommon';\nimport {ICommonCodeEditor} from 'vs/editor/common/editorCommon';\nimport {Range} from 'vs/editor/common/core/range';\nimport {Selection} from 'vs/editor/common/core/selection';\nimport {IFileChange, EventType as FileEventType, FileChangesEvent} from 'vs/platform/files/common/files';\nimport {EditOperation} from 'vs/editor/common/core/editOperation';\n\nexport interface IResourceEdit {\n\tresource: URI;\n\trange?: IRange;\n\tnewText: string;\n}\n\ninterface IRecording {\n\tstop(): void;\n\thasChanged(resource: URI): boolean;\n\tallChanges(): IFileChange[];\n}\n\nclass ChangeRecorder {\n\n\tprivate _eventService: IEventService;\n\n\tconstructor(eventService: IEventService) {\n\t\tthis._eventService = eventService;\n\t}\n\n\tpublic start(): IRecording {\n\n\t\tvar changes: IStringDictionary<IFileChange[]> = Object.create(null);\n\n\t\tvar stop = this._eventService.addListener(FileEventType.FILE_CHANGES,(event: FileChangesEvent) => {\n\t\t\tevent.changes.forEach(change => {\n\n\t\t\t\tvar key = String(change.resource),\n\t\t\t\t\tarray = changes[key];\n\n\t\t\t\tif (!array) {\n\t\t\t\t\tchanges[key] = array = [];\n\t\t\t\t}\n\n\t\t\t\tarray.push(change);\n\t\t\t});\n\t\t});\n\n\t\treturn {\n\t\t\tstop,\n\t\t\thasChanged: (resource: URI) => !!changes[resource.toString()],\n\t\t\tallChanges: () => merge(values(changes))\n\t\t};\n\t}\n}\n\nclass EditTask {\n\n\tprivate _initialSelections: IEditorSelection[];\n\tprivate _endCursorSelection: IEditorSelection;\n\tprivate _model: IModel;\n\tprivate _edits: IIdentifiedSingleEditOperation[];\n\n\tconstructor(model: IModel) {\n\t\tthis._endCursorSelection = null;\n\t\tthis._model = model;\n\t\tthis._edits = [];\n\t}\n\n\tpublic addEdit(edit: IResourceEdit): void {\n\t\tvar range: IRange;\n\t\tif (!edit.range) {\n\t\t\trange = this._model.getFullModelRange();\n\t\t} else {\n\t\t\trange = edit.range;\n\t\t}\n\t\tthis._edits.push(EditOperation.replace(Range.lift(range), edit.newText));\n\t}\n\n\tpublic apply(): void {\n\t\tif (this._edits.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tthis._edits.sort(EditTask._editCompare);\n\n\t\tthis._initialSelections = this._getInitialSelections();\n\t\tthis._model.pushEditOperations(this._initialSelections, this._edits, (edits) => this._getEndCursorSelections(edits));\n\t}\n\n\tprotected _getInitialSelections(): IEditorSelection[] {\n\t\tvar firstRange = this._edits[0].range;\n\t\tvar initialSelection = Selection.createSelection(\n\t\t\tfirstRange.startLineNumber,\n\t\t\tfirstRange.startColumn,\n\t\t\tfirstRange.endLineNumber,\n\t\t\tfirstRange.endColumn\n\t\t);\n\t\treturn [initialSelection];\n\t}\n\n\tprivate _getEndCursorSelections(inverseEditOperations:IIdentifiedSingleEditOperation[]): IEditorSelection[] {\n\t\tvar relevantEditIndex = 0;\n\t\tfor (var i = 0; i < inverseEditOperations.length; i++) {\n\t\t\tvar editRange = inverseEditOperations[i].range;\n\t\t\tfor (var j = 0; j < this._initialSelections.length; j++) {\n\t\t\t\tvar selectionRange = this._initialSelections[j];\n\t\t\t\tif (Range.areIntersectingOrTouching(editRange, selectionRange)) {\n\t\t\t\t\trelevantEditIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar srcRange = inverseEditOperations[relevantEditIndex].range;\n\t\tthis._endCursorSelection = Selection.createSelection(\n\t\t\tsrcRange.endLineNumber,\n\t\t\tsrcRange.endColumn,\n\t\t\tsrcRange.endLineNumber,\n\t\t\tsrcRange.endColumn\n\t\t);\n\t\treturn [this._endCursorSelection];\n\t}\n\n\tpublic getEndCursorSelection(): IEditorSelection {\n\t\treturn this._endCursorSelection;\n\t}\n\n\tprivate static _editCompare(a: IIdentifiedSingleEditOperation, b: IIdentifiedSingleEditOperation): number {\n\t\treturn Range.compareRangesUsingStarts(a.range, b.range);\n\t}\n}\n\nclass SourceModelEditTask extends EditTask {\n\n\tprivate _knownInitialSelections:IEditorSelection[];\n\n\tconstructor(model: IModel, initialSelections:IEditorSelection[]) {\n\t\tsuper(model);\n\t\tthis._knownInitialSelections = initialSelections;\n\t}\n\n\tprotected _getInitialSelections(): IEditorSelection[] {\n\t\treturn this._knownInitialSelections;\n\t}\n}\n\nclass BulkEditModel {\n\n\tprivate _editorService: IEditorService;\n\tprivate _numberOfResourcesToModify: number = 0;\n\tprivate _numberOfChanges: number = 0;\n\tprivate _edits: IStringDictionary<IResourceEdit[]> = Object.create(null);\n\tprivate _tasks: EditTask[];\n\tprivate _sourceModel: URI;\n\tprivate _sourceSelections: IEditorSelection[];\n\tprivate _sourceModelTask: SourceModelEditTask;\n\n\tconstructor(editorService: IEditorService, sourceModel: URI, sourceSelections: IEditorSelection[], edits: IResourceEdit[]) {\n\t\tthis._editorService = editorService;\n\t\tthis._sourceModel = sourceModel;\n\t\tthis._sourceSelections = sourceSelections;\n\t\tthis._sourceModelTask = null;\n\n\t\tfor (let edit of edits) {\n\t\t\tthis._addEdit(edit);\n\t\t}\n\t}\n\n\tpublic resourcesCount(): number {\n\t\treturn this._numberOfResourcesToModify;\n\t}\n\n\tpublic changeCount(): number {\n\t\treturn this._numberOfChanges;\n\t}\n\n\tprivate _addEdit(edit: IResourceEdit): void {\n\t\tvar array = this._edits[edit.resource.toString()];\n\t\tif (!array) {\n\t\t\tthis._edits[edit.resource.toString()] = array = [];\n\t\t\tthis._numberOfResourcesToModify += 1;\n\t\t}\n\t\tthis._numberOfChanges += 1;\n\t\tarray.push(edit);\n\t}\n\n\tpublic prepare(): TPromise<BulkEditModel> {\n\n\t\tif (this._tasks) {\n\t\t\tthrow new Error('illegal state - already prepared');\n\t\t}\n\n\t\tthis._tasks = [];\n\t\tvar promises: TPromise<any>[] = [];\n\n\t\tforEach(this._edits, entry => {\n\t\t\tvar promise = this._editorService.resolveEditorModel({ resource: URI.parse(entry.key) }).then(model => {\n\t\t\t\tif (!model || !model.textEditorModel) {\n\t\t\t\t\tthrow new Error(`Cannot load file ${entry.key}`);\n\t\t\t\t}\n\n\t\t\t\tvar textEditorModel = <IModel>model.textEditorModel,\n\t\t\t\t\ttask: EditTask;\n\n\t\t\t\tif (textEditorModel.getAssociatedResource().toString() ===  this._sourceModel.toString()) {\n\t\t\t\t\tthis._sourceModelTask = new SourceModelEditTask(textEditorModel, this._sourceSelections);\n\t\t\t\t\ttask = this._sourceModelTask;\n\t\t\t\t} else {\n\t\t\t\t\ttask = new EditTask(textEditorModel);\n\t\t\t\t}\n\n\t\t\t\tentry.value.forEach(edit => task.addEdit(edit));\n\t\t\t\tthis._tasks.push(task);\n\t\t\t});\n\t\t\tpromises.push(promise);\n\t\t});\n\n\t\treturn TPromise.join(promises).then(_ => this);\n\t}\n\n\tpublic apply(): IEditorSelection {\n\t\tthis._tasks.forEach(task => task.apply());\n\t\tvar r: IEditorSelection = null;\n\t\tif (this._sourceModelTask) {\n\t\t\tr = this._sourceModelTask.getEndCursorSelection();\n\t\t}\n\t\treturn r;\n\t}\n}\n\nexport interface BulkEdit {\n\tadd(edit: IResourceEdit[]): void;\n\tfinish(): TPromise<ISelection>;\n}\n\nexport function bulkEdit(eventService:IEventService, editorService:IEditorService, editor:ICommonCodeEditor, edits:IResourceEdit[]):TPromise<any> {\n\tlet bulk = createBulkEdit(eventService, editorService, editor);\n\tbulk.add(edits);\n\treturn bulk.finish();\n}\n\nexport function createBulkEdit(eventService: IEventService, editorService: IEditorService, editor: ICommonCodeEditor): BulkEdit {\n\n\tlet all: IResourceEdit[] = [];\n\tlet recording = new ChangeRecorder(eventService).start();\n\n\tfunction add(edits: IResourceEdit[]): void {\n\t\tall.push(...edits);\n\t}\n\n\tfunction getConcurrentEdits() {\n\t\tlet names: string[];\n\t\tfor (let edit of all) {\n\t\t\tif (recording.hasChanged(edit.resource)) {\n\t\t\t\tif (!names) {\n\t\t\t\t\tnames = [];\n\t\t\t\t}\n\t\t\t\tnames.push(edit.resource.fsPath);\n\t\t\t}\n\t\t}\n\t\tif (names) {\n\t\t\treturn nls.localize('conflict', \"These files have changed in the meantime: {0}\", names.join(', '));\n\t\t}\n\t}\n\n\tfunction finish(): TPromise<ISelection> {\n\n\t\tif (all.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet concurrentEdits = getConcurrentEdits();\n\t\tif (concurrentEdits) {\n\t\t\treturn TPromise.wrapError(concurrentEdits);\n\t\t}\n\n\t\tlet uri: URI;\n\t\tlet selections: IEditorSelection[];\n\n\t\tif (editor) {\n\t\t\turi = editor.getModel().getAssociatedResource();\n\t\t\tselections = editor.getSelections();\n\t\t}\n\n\t\tlet model = new BulkEditModel(editorService, uri, selections, all);\n\n\t\treturn model.prepare().then(_ => {\n\n\t\t\tlet concurrentEdits = getConcurrentEdits();\n\t\t\tif (concurrentEdits) {\n\t\t\t\tthrow new Error(concurrentEdits);\n\t\t\t}\n\n\t\t\trecording.stop();\n\t\t\treturn model.apply();\n\t\t});\n\t}\n\n\treturn {\n\t\tadd,\n\t\tfinish\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport winjs = require('vs/base/common/winjs.base');\nimport errors = require('vs/base/common/errors');\nimport strings = require('vs/base/common/strings');\nimport types = require('vs/base/common/types');\nimport collections = require('vs/base/common/collections');\nimport descriptors = require('./descriptors');\nimport {Graph} from 'vs/base/common/graph';\nimport * as instantiation from './instantiation';\n\nimport IInstantiationService = instantiation.IInstantiationService;\nimport ServiceIdentifier = instantiation.ServiceIdentifier;\n\n/**\n * Creates a new instance of an instantiation service.\n */\nexport function create(services:any = Object.create(null)):IInstantiationService {\n\tlet result = new InstantiationService(services, new AccessLock());\n\treturn result;\n}\n\nexport interface MutableContext extends instantiation.Context {\n\tadd<T>(service: any, id: string|ServiceIdentifier<T>): void;\n}\n\n/**\n * Creates a {{MutableContext}} which can be used to create objects\n * that use property bag injection. *Only* use this for testing and\n * *not* in production code.\n */\nexport function createContext(): MutableContext {\n\n\tconst idx: { [name: string]: any } = Object.create(null);\n\n\tfunction add<T>(service: any, id: string|ServiceIdentifier<T>) {\n\t\tif (typeof id === 'string') {\n\t\t\tidx[id] = service;\n\t\t} else {\n\t\t\tidx[instantiation._util.getServiceId(id)] = service;\n\t\t}\n\t}\n\n\tfunction get<T>(id: ServiceIdentifier<T>): T {\n\t\tlet name = id[instantiation._util.DI_PROVIDES];\n\t\tif (!name) {\n\t\t\tthrow new Error('@ServiceName decoration expected');\n\t\t}\n\t\tvar service = idx[name];\n\t\tif(!service) {\n\t\t\tthrow new Error(`service '${name}' not found. @Uses-decorator incomplete?`);\n\t\t}\n\t\treturn service;\n\t}\n\n\treturn {\n\t\tget,\n\t\tadd\n\t}\n}\n\nclass AccessLock {\n\n\tprivate _value:number = 0;\n\n\tpublic get locked() {\n\t\treturn this._value === 0;\n\t}\n\n\tpublic runUnlocked<R>(r:() => R):R {\n\t\tthis._value++;\n\t\ttry {\n\t\t\treturn r();\n\t\t} finally {\n\t\t\tthis._value--;\n\t\t}\n\t}\n}\n\nclass ServicesMap {\n\n\tconstructor(private _services:any, private _lock:AccessLock) {\n\t\tcollections.forEach(this._services, (entry) => {\n\n\t\t\t// add a accessor to myselves\n\t\t\tthis.registerService(entry.key, entry.value);\n\t\t});\n\t}\n\n\tpublic registerService(name: string, service: any): void {\n\t\t// add a accessor to myselves\n\t\tObject.defineProperty(this, name, {\n\t\t\tget: () => {\n\t\t\t\tif (this._lock.locked) {\n\t\t\t\t\tthrow errors.illegalState('the services map can only be used during construction');\n\t\t\t\t}\n\t\t\t\tif (!service) {\n\t\t\t\t\tthrow errors.illegalArgument(strings.format('service with \\'{0}\\' not found', name));\n\t\t\t\t}\n\t\t\t\tif (service instanceof descriptors.SyncDescriptor) {\n\t\t\t\t\tlet cached = this._services[name];\n\t\t\t\t\tif (cached instanceof descriptors.SyncDescriptor) {\n\t\t\t\t\t\tthis._ensureInstances(name, service);\n\t\t\t\t\t\tservice = this._services[name];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tservice = cached;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn service;\n\t\t\t},\n\t\t\tset: (value: any) => {\n\t\t\t\tthrow errors.illegalState('services cannot be changed');\n\t\t\t},\n\t\t\tconfigurable: false,\n\t\t\tenumerable: false\n\t\t});\n\t\t// add to services map\n\t\tthis._services[name] = service;\n\t}\n\n\tpublic get lock():AccessLock {\n\t\treturn this._lock;\n\t}\n\n\tpublic get services():any {\n\t\treturn this._services;\n\t}\n\n\tprivate _ensureInstances(serviceId: string, desc: descriptors.SyncDescriptor<any>): void {\n\n\t\tlet seen: { [n: string]: boolean } = Object.create(null);\n\t\tlet graph = new Graph<{ serviceId: string, desc: descriptors.SyncDescriptor<any> }>(i => i.serviceId);\n\n\t\tlet stack = [{ serviceId, desc }];\n\t\twhile (stack.length) {\n\t\t\tlet item = stack.pop();\n\t\t\tgraph.lookupOrInsertNode(item);\n\n\t\t\t// check for cycles between the descriptors\n\t\t\tif (seen[item.serviceId]) {\n\t\t\t\tthrow new Error(`[createInstance] cyclic dependency: ${Object.keys(seen).join('>>')}`);\n\t\t\t}\n\t\t\tseen[item.serviceId] = true;\n\n\t\t\t// check all dependencies for existence and if the need to be created first\n\t\t\tlet dependencies = instantiation._util.getServiceDependencies(item.desc.ctor);\n\t\t\tif (Array.isArray(dependencies)) {\n\t\t\t\tfor (let dependency of dependencies) {\n\t\t\t\t\tlet instanceOrDesc = this.services[dependency.serviceId];\n\t\t\t\t\tif (!instanceOrDesc) {\n\t\t\t\t\t\tthrow new Error(`[createInstance] ${serviceId} depends on ${dependency.serviceId} which is NOT registered.`);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (instanceOrDesc instanceof descriptors.SyncDescriptor) {\n\t\t\t\t\t\tvar d = { serviceId: dependency.serviceId, desc: instanceOrDesc };\n\t\t\t\t\t\tstack.push(d);\n\t\t\t\t\t\tgraph.insertEdge(item, d);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twhile (true) {\n\t\t\tlet roots = graph.roots();\n\n\t\t\t// if there is no more roots but still\n\t\t\t// nodes in the graph we have a cycle\n\t\t\tif (roots.length === 0) {\n\t\t\t\tif (graph.length !== 0) {\n\t\t\t\t\tthrow new Error('[createInstance] cyclinc dependency!');\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tfor (let root of roots) {\n\t\t\t\tlet instance = this.createInstance(root.data.desc, []);\n\t\t\t\tthis._services[root.data.serviceId] = instance;\n\t\t\t\tgraph.removeNode(root.data);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic invokeFunction<R>(fn: Function, args: any[]): R {\n\n\t\treturn this._lock.runUnlocked(() => {\n\n\t\t\tlet accessor: instantiation.ServicesAccessor = {\n\t\t\t\tget: <T>(id:instantiation.ServiceIdentifier<T>) => {\n\t\t\t\t\tlet value = instantiation._util.getServiceId(id);\n\t\t\t\t\treturn <T>this[value];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn fn.apply(undefined, [accessor].concat(args));\n\t\t});\n\t}\n\n\tpublic createInstance<T>(descriptor: descriptors.SyncDescriptor<T>, args: any[]): T {\n\t\tlet allArguments: any[] = [];\n\t\tlet serviceInjections = instantiation._util.getServiceDependencies(descriptor.ctor);\n\t\tif (Array.isArray(serviceInjections)) {\n\t\t\tlet fixedArguments = descriptor.staticArguments().concat(args);\n\t\t\tlet expectedFirstServiceIndex = fixedArguments.length;\n\t\t\tlet actualFirstServiceIndex = Number.MAX_VALUE;\n\t\t\tlet ctx: MutableContext;\n\t\t\tserviceInjections.forEach(si => {\n\t\t\t\tlet {serviceId, index} = si;\n\t\t\t\tlet service = this._lock.runUnlocked(() => this[serviceId]);\n\t\t\t\tif (index === void 0) {\n\t\t\t\t\t// @Uses\n\t\t\t\t\tif (!ctx) {\n\t\t\t\t\t\tctx = createContext();\n\t\t\t\t\t\tallArguments[0] = ctx; // ctx goes first\n\t\t\t\t\t\texpectedFirstServiceIndex += 1;\n\t\t\t\t\t}\n\t\t\t\t\tctx.add(service, serviceId);\n\t\t\t\t} else {\n\t\t\t\t\t// @IServiceName\n\t\t\t\t\tallArguments[index] = service;\n\t\t\t\t\tactualFirstServiceIndex = Math.min(actualFirstServiceIndex, si.index);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// insert the fixed arguments into the array of all ctor\n\t\t\t// arguments. don't overwrite existing values tho it indicates\n\t\t\t// something is off\n\t\t\tlet i = ctx ? 1 : 0;\n\t\t\tfor (let arg of fixedArguments) {\n\t\t\t\tlet hasValue = allArguments[i] !== void 0;\n\t\t\t\tif(!hasValue) {\n\t\t\t\t\tallArguments[i] = arg;\n\t\t\t\t}\n\t\t\t\ti += 1;\n\t\t\t}\n\n\t\t\tallArguments.unshift(descriptor.ctor); // ctor is first arg\n\n\t\t\t// services are the last arguments of ctor-calls. We check if static ctor arguments\n\t\t\t// (like those from a [sync|async] desriptor) or args that are passed by createInstance\n\t\t\t// don't override positions of those arguments\n\t\t\tif (actualFirstServiceIndex !== Number.MAX_VALUE\n\t\t\t\t&& actualFirstServiceIndex !== expectedFirstServiceIndex) {\n\n\t\t\t\tlet msg = `[createInstance] constructor '${descriptor.ctor.name}' has first` +\n\t\t\t\t\t` service dependency at position ${actualFirstServiceIndex + 1} but is called with` +\n\t\t\t\t\t` ${expectedFirstServiceIndex - 1} static arguments that are expected to come first`;\n\n\t\t\t\t// throw new Error(msg);\n\t\t\t\tconsole.warn(msg);\n\t\t\t}\n\n\t\t} else {\n\t\t\tallArguments = [descriptor.ctor, this /*this === ctx*/];\n\t\t\tallArguments.push.apply(allArguments, descriptor.staticArguments());\n\t\t\tallArguments.push.apply(allArguments, args);\n\t\t\t// console.warn('using OLD INJECTION STYLE for ' + descriptor.ctor.name);\n\t\t}\n\n\t\treturn this._lock.runUnlocked(() => {\n\t\t\tvar instance = types.create.apply(null, allArguments);\n\t\t\tdescriptor._validate(instance);\n\t\t\treturn <T> instance;\n\t\t});\n\t}\n}\n\nclass InstantiationService implements IInstantiationService {\n\tpublic serviceId = IInstantiationService;\n\n\tprivate _servicesMap:ServicesMap;\n\n\tconstructor(services:any, lock:AccessLock) {\n\t\tservices['instantiationService'] = this;\n\t\tthis._servicesMap = new ServicesMap(services, lock);\n\t}\n\n\tcreateChild(services:any):IInstantiationService {\n\t\tvar childServices = {};\n\t\t// copy existing services\n\t\tcollections.forEach(this._servicesMap.services, (entry) => {\n\t\t\tchildServices[entry.key] = entry.value;\n\t\t});\n\t\t// insert new services (might overwrite)\n\t\tcollections.forEach(services, (entry) => {\n\t\t\tchildServices[entry.key] = entry.value;\n\t\t});\n\t\treturn new InstantiationService(childServices, this._servicesMap.lock);\n\t}\n\n\tregisterService(name:string, service:any):void {\n\t\tthis._servicesMap.registerService(name, service);\n\t}\n\n\taddSingleton<T>(id: ServiceIdentifier<T>, instanceOrDescriptor: T|descriptors.SyncDescriptor<T>): void {\n\t\tlet name = instantiation._util.getServiceId(id);\n\t\tthis._servicesMap.registerService(name, instanceOrDescriptor);\n\t}\n\n\tgetInstance<T>(id: ServiceIdentifier<T>): T {\n\t\tlet name = instantiation._util.getServiceId(id);\n\t\tlet result = this._servicesMap.lock.runUnlocked(() => this._servicesMap[name]);\n\t\treturn result;\n\t}\n\n\tcreateInstance<T>(ctor:instantiation.IConstructorSignature0<T>, ...rest:any[]):T;\n\tcreateInstance<A1, T>(ctor:instantiation.IConstructorSignature1<A1, T>, ...rest:any[]):T;\n\tcreateInstance<A1, A2, T>(ctor:instantiation.IConstructorSignature2<A1, A2, T>, ...rest:any[]):T;\n\tcreateInstance<A1, A2, A3, T>(ctor:instantiation.IConstructorSignature3<A1, A2, A3, T>, ...rest:any[]):T;\n\tcreateInstance<A1, A2, A3, A4, T>(ctor:instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, first:A1, second:A2, third:A3, fourth:A4):T;\n\tcreateInstance<A1, A2, A3, A4, A5, T>(ctor:instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, first:A1, second:A2, third:A3, fourth:A4, fifth:A5):T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, T>(ctor:instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, first:A1, second:A2, third:A3, fourth:A4, fifth:A5, sixth:A6):T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, T>(ctor:instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, first:A1, second:A2, third:A3, fourth:A4, fifth:A5, sixth:A6, seventh:A7):T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor:instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, eigth: A8): T;\n\n\tcreateInstance<T>(ctor:instantiation.INewConstructorSignature0<T>, ...rest: any[]): T;\n\tcreateInstance<A1, T>(ctor:instantiation.INewConstructorSignature1<A1, T>, ...rest:any[]):T;\n\tcreateInstance<A1, A2, T>(ctor:instantiation.INewConstructorSignature2<A1, A2, T>, ...rest:any[]):T;\n\tcreateInstance<A1, A2, A3, T>(ctor:instantiation.INewConstructorSignature3<A1, A2, A3, T>, ...rest:any[]):T;\n\tcreateInstance<A1, A2, A3, A4, T>(ctor:instantiation.INewConstructorSignature4<A1, A2, A3, A4, T>, first:A1, second:A2, third:A3, fourth:A4):T;\n\tcreateInstance<A1, A2, A3, A4, A5, T>(ctor:instantiation.INewConstructorSignature5<A1, A2, A3, A4, A5, T>, first:A1, second:A2, third:A3, fourth:A4, fifth:A5):T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, T>(ctor:instantiation.INewConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, first:A1, second:A2, third:A3, fourth:A4, fifth:A5, sixth:A6):T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, T>(ctor:instantiation.INewConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, first:A1, second:A2, third:A3, fourth:A4, fifth:A5, sixth:A6, seventh:A7):T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor:instantiation.INewConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, first:A1, second:A2, third:A3, fourth:A4, fifth:A5, sixth:A6, seventh:A7, eigth:A8):T;\n\n\tcreateInstance<T>(descriptor: descriptors.SyncDescriptor0<T>): T;\n\tcreateInstance<A1, T>(descriptor: descriptors.SyncDescriptor1<A1, T>, a1: A1): T;\n\tcreateInstance<A1, A2, T>(descriptor: descriptors.SyncDescriptor2<A1, A2, T>, a1: A1, a2: A2): T;\n\tcreateInstance<A1, A2, A3, T>(descriptor: descriptors.SyncDescriptor3<A1, A2, A3, T>, a1: A1, a2: A2, a3: A3): T;\n\tcreateInstance<A1, A2, A3, A4, T>(descriptor: descriptors.SyncDescriptor4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3, a4: A4): T;\n\tcreateInstance<A1, A2, A3, A4, A5, T>(descriptor: descriptors.SyncDescriptor5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, T>(descriptor: descriptors.SyncDescriptor6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, T>(descriptor: descriptors.SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, A8, T>(descriptor: descriptors.SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): T;\n\n\tcreateInstance<T>(descriptor: descriptors.AsyncDescriptor0<T>): winjs.TPromise<T>;\n\tcreateInstance<A1, T>(descriptor: descriptors.AsyncDescriptor1<A1, T>, a1: A1): winjs.TPromise<T>;\n\tcreateInstance<A1, A2, T>(descriptor: descriptors.AsyncDescriptor2<A1, A2, T>, a1: A1, a2: A2): winjs.TPromise<T>;\n\tcreateInstance<A1, A2, A3, T>(descriptor: descriptors.AsyncDescriptor3<A1, A2, A3, T>, a1: A1, a2: A2, a3: A3): winjs.TPromise<T>;\n\tcreateInstance<A1, A2, A3, A4, T>(descriptor: descriptors.AsyncDescriptor4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3, a4: A4): winjs.TPromise<T>;\n\tcreateInstance<A1, A2, A3, A4, A5, T>(descriptor: descriptors.AsyncDescriptor5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): winjs.TPromise<T>;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, T>(descriptor: descriptors.AsyncDescriptor6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): winjs.TPromise<T>;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, T>(descriptor: descriptors.AsyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): winjs.TPromise<T>;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, A8, T>(descriptor: descriptors.AsyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): winjs.TPromise<T>;\n\n\tcreateInstance<T>(descriptor:descriptors.AsyncDescriptor<T>, ...args:any[]):winjs.TPromise<T>;\n\n\tcreateInstance<T>(param:any):any {\n\n\t\tvar rest = new Array<any>(arguments.length - 1);\n\t\tfor(var i = 1, len = arguments.length; i < len; i++) {\n\t\t\trest[i - 1] = arguments[i];\n\t\t}\n\n\t\tif(param instanceof descriptors.SyncDescriptor) {\n\t\t\treturn this._servicesMap.createInstance(<descriptors.SyncDescriptor<T>> param, rest);\n\t\t} else if(param instanceof descriptors.AsyncDescriptor) {\n\t\t\treturn this._createInstanceAsync(<descriptors.AsyncDescriptor<T>> param, rest);\n\t\t} else {\n\t\t\treturn this._servicesMap.createInstance(new descriptors.SyncDescriptor(<instantiation.IConstructorSignature0<T>> param), rest);\n\t\t}\n\t}\n\n\t_createInstanceAsync<T>(descriptor:descriptors.AsyncDescriptor<T>, args:any[]):winjs.TPromise<T> {\n\n\t\tvar canceled:Error;\n\n\t\treturn new winjs.TPromise((c, e, p) => {\n\t\t\trequire([descriptor.moduleName], (_module?: any) => {\n\t\t\t\tif (canceled) {\n\t\t\t\t\te(canceled);\n\t\t\t\t}\n\n\t\t\t\tif (!_module) {\n\t\t\t\t\treturn e(errors.illegalArgument('module not found: ' + descriptor.moduleName));\n\t\t\t\t}\n\n\t\t\t\tvar ctor: Function;\n\t\t\t\tif(!descriptor.ctorName) {\n\t\t\t\t\tctor = _module;\n\t\t\t\t} else {\n\t\t\t\t\tctor = _module[descriptor.ctorName];\n\t\t\t\t}\n\n\t\t\t\tif (typeof ctor !== 'function') {\n\t\t\t\t\treturn e(errors.illegalArgument('not a function: ' + descriptor.ctorName || descriptor.moduleName));\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\targs.unshift.apply(args, descriptor.staticArguments()); // instead of spread in ctor call\n\t\t\t\t\tc(this._servicesMap.createInstance(new descriptors.SyncDescriptor<T>(ctor), args));\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn e(error);\n\t\t\t\t}\n\t\t\t}, e);\n\t\t}, () => {\n\t\t\tcanceled = errors.canceled();\n\t\t});\n\t}\n\n\tinvokeFunction<R>(ctor: instantiation.IFunctionSignature0<R>): R;\n\tinvokeFunction<A1, R>(ctor:instantiation.IFunctionSignature1<A1, R>, first:A1):R;\n\tinvokeFunction<A1, A2, R>(ctor:instantiation.IFunctionSignature2<A1, A2, R>, first:A1, second:A2):R;\n\tinvokeFunction<A1, A2, A3, R>(ctor:instantiation.IFunctionSignature3<A1, A2, A3, R>, first:A1, second:A2, third:A3):R;\n\tinvokeFunction<A1, A2, A3, A4, R>(ctor:instantiation.IFunctionSignature4<A1, A2, A3, A4, R>, first:A1, second:A2, third:A3, fourth:A4):R;\n\tinvokeFunction<A1, A2, A3, A4, A5, R>(ctor:instantiation.IFunctionSignature5<A1, A2, A3, A4, A5, R>, first:A1, second:A2, third:A3, fourth:A4, fifth:A5):R;\n\tinvokeFunction<A1, A2, A3, A4, A5, A6, R>(ctor:instantiation.IFunctionSignature6<A1, A2, A3, A4, A5, A6, R>, first:A1, second:A2, third:A3, fourth:A4, fifth:A5, sixth:A6):R;\n\tinvokeFunction<A1, A2, A3, A4, A5, A6, A7, R>(ctor:instantiation.IFunctionSignature7<A1, A2, A3, A4, A5, A6, A7, R>, first:A1, second:A2, third:A3, fourth:A4, fifth:A5, sixth:A6, seventh:A7):R;\n\tinvokeFunction<A1, A2, A3, A4, A5, A6, A7, A8, R>(ctor:instantiation.IFunctionSignature8<A1, A2, A3, A4, A5, A6, A7, A8, R>, first:A1, second:A2, third:A3, fourth:A4, fifth:A5, sixth:A6, seventh:A7, eigth:A8):R;\n\tinvokeFunction<R>(signature: any, ...args: any[]): R {\n\t\treturn this._servicesMap.invokeFunction<R>(signature, args);\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {TypeConstraint} from 'vs/base/common/types';\nimport {createDecorator, IInstantiationService, ServiceIdentifier, ServicesAccessor} from 'vs/platform/instantiation/common/instantiation';\nimport {Keybinding} from 'vs/base/common/keyCodes';\nimport {IHTMLContentElement} from 'vs/base/common/htmlContent';\n\nexport interface IUserFriendlyKeybinding {\n\tkey: string;\n\tcommand: string;\n\twhen?: string;\n}\n\nexport interface IKeybindings {\n\tprimary: number;\n\tsecondary?: number[];\n\twin?: {\n\t\tprimary: number;\n\t\tsecondary?: number[];\n\t};\n\tlinux?: {\n\t\tprimary: number;\n\t\tsecondary?: number[];\n\t};\n\tmac?: {\n\t\tprimary: number;\n\t\tsecondary?: number[];\n\t};\n}\n\nexport interface IKeybindingContextRule {\n\tkey: string;\n\t/**\n\t * Defaults to 'equal' (string)\n\t */\n\toperator?: string;\n\t/**\n\t * Defaults to true (boolean)\n\t */\n\toperand?: any;\n}\n\nexport interface IKeybindingItem {\n\tkeybinding: number;\n\tcommand: string;\n\tcontext: IKeybindingContextRule[];\n\tweight1: number;\n\tweight2: number;\n}\n\nexport interface ICommandHandler {\n\t(accessor: ServicesAccessor, args: any): void;\n\tdescription?: string | ICommandHandlerDescription;\n}\n\nexport interface ICommandHandlerDescription {\n\tdescription: string;\n\targs: { name: string; description?: string; constraint?: TypeConstraint; }[];\n\treturns?: string;\n}\n\nexport interface ICommandsMap {\n\t[id: string]: ICommandHandler\n}\n\nexport interface IKeybindingContextKey<T> {\n\tset(value: T): void;\n\treset(): void;\n}\n\nexport var IKeybindingService = createDecorator<IKeybindingService>('keybindingService');\n\nexport interface IKeybindingScopeLocation {\n\tsetAttribute(attr:string, value:string): void;\n\tremoveAttribute(attr:string): void;\n}\n\nexport interface IKeybindingService {\n\tserviceId : ServiceIdentifier<any>;\n\tdispose(): void;\n\n\tcreateKey<T>(key: string, defaultValue: T): IKeybindingContextKey<T>;\n\n\tcreateScoped(domNode: IKeybindingScopeLocation): IKeybindingService;\n\n\tgetDefaultKeybindings(): string;\n\tlookupKeybindings(commandId: string): Keybinding[];\n\tcustomKeybindingsCount(): number;\n\n\tgetLabelFor(keybinding:Keybinding): string;\n\tgetHTMLLabelFor(keybinding:Keybinding): IHTMLContentElement[];\n\tgetElectronAcceleratorFor(keybinding:Keybinding): string;\n\n\texecuteCommand<T>(commandId: string, args?: any): TPromise<T>;\n\texecuteCommand(commandId: string, args?: any): TPromise<any>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport nls = require('vs/nls');\nimport Platform = require('vs/base/common/platform');\n\nimport {IKeybindings} from 'vs/platform/keybinding/common/keybindingService';\nimport {KeyMod, KeyCode} from 'vs/base/common/keyCodes';\n\nexport class KeybindingsUtils {\n\t/**\n\t * Take current platform into account and reduce to primary & secondary.\n\t */\n\tpublic static bindToCurrentPlatform(kb:IKeybindings): { primary?: number; secondary?: number[]; } {\n\t\tif (Platform.isWindows) {\n\t\t\tif (kb && kb.win) {\n\t\t\t\treturn kb.win;\n\t\t\t}\n\t\t} else if (Platform.isMacintosh) {\n\t\t\tif (kb && kb.mac) {\n\t\t\t\treturn kb.mac;\n\t\t\t}\n\t\t} else {\n\t\t\tif (kb && kb.linux) {\n\t\t\t\treturn kb.linux;\n\t\t\t}\n\t\t}\n\n\t\treturn kb;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport winjs = require('vs/base/common/winjs.base');\nimport {EventProvider} from 'vs/base/common/eventProvider';\nimport {createDecorator, ServiceIdentifier} from 'vs/platform/instantiation/common/instantiation';\n\nexport var ILifecycleService = createDecorator<ILifecycleService>('lifecycleService');\n\nexport interface IBeforeShutdownParticipant {\n\n\t/**\n\t * Called when the window is about to close. Clients have a chance to veto the closing by either returning\n\t * a boolean \"true\" directly or via a promise that resolves to a boolean. Returning a promise is useful\n\t * in cases of long running operations on shutdown.\n\t *\n\t * Note: It is absolutely important to avoid long running promises on this call. Please try hard to return\n\t * a boolean directly. Returning a promise has quite an impact on the shutdown sequence!\n\t */\n\tbeforeShutdown(): boolean|winjs.TPromise<boolean>;\n}\n\n/**\n * A lifecycle service informs about lifecycle events of the\n * application, such as shutdown.\n */\nexport interface ILifecycleService {\n\n\tserviceId: ServiceIdentifier<any>;\n\n\t/**\n\t * Participate before shutting down to be able to veto.\n\t */\n\taddBeforeShutdownParticipant(p: IBeforeShutdownParticipant): void;\n\n\t/**\n\t * Fired when no client is preventing the shutdown from happening. Can be used to dispose heavy resources\n\t * like running processes. Can also be used to save UI state to storage.\n\t */\n\tonShutdown: EventProvider<() => void>;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport URI from 'vs/base/common/uri';\nimport Severity from 'vs/base/common/severity';\nimport Event from 'vs/base/common/event';\nimport {createDecorator, ServiceIdentifier} from 'vs/platform/instantiation/common/instantiation';\n\nexport var IMarkerService = createDecorator<IMarkerService>('markerService');\n\nexport interface IMarkerService {\n\tserviceId: ServiceIdentifier<any>;\n\n\tgetStatistics(): MarkerStatistics;\n\n\tchangeOne(owner: string, resource: URI, markers: IMarkerData[]): void;\n\n\tchangeAll(owner: string, data: IResourceMarker[]): void;\n\n\tremove(owner: string, resources: URI[]): void\n\n\tread(filter?: { owner?: string; resource?: URI; selector?: RegExp, take?: number; }): IMarker[];\n\n\tonMarkerChanged: Event<URI[]>;\n}\n\nexport enum MarkerType {\n\ttransient = 1,\n\tpermanent = 2\n}\n\nexport interface IMarkerData {\n\tcode?: string;\n\tseverity: Severity;\n\tmessage: string;\n\tsource?: string;\n\tstartLineNumber: number;\n\tstartColumn: number;\n\tendLineNumber: number;\n\tendColumn: number;\n}\n\nexport interface IResourceMarker {\n\tresource: URI;\n\tmarker: IMarkerData;\n}\n\nexport interface IMarker {\n\towner: string;\n\tresource: URI;\n\tseverity: Severity;\n\tcode?: string;\n\tmessage: string;\n\tsource?: string;\n\tstartLineNumber: number;\n\tstartColumn: number;\n\tendLineNumber: number;\n\tendColumn: number;\n}\n\nexport interface MarkerStatistics {\n\terrors: number;\n\twarnings: number;\n\tinfos: number;\n\tunknwons: number;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport nls = require('vs/nls');\nimport {Promise} from 'vs/base/common/winjs.base';\nimport {IDisposable} from 'vs/base/common/lifecycle';\nimport Severity from 'vs/base/common/severity';\nimport {createDecorator, ServiceIdentifier} from 'vs/platform/instantiation/common/instantiation';\nimport {Action} from 'vs/base/common/actions';\n\nexport interface IMessageWithAction {\n\tmessage: string;\n\tactions: Action[];\n}\n\nexport interface IConfirmation {\n\ttitle?: string;\n\tmessage: string;\n\tdetail?: string;\n\tprimaryButton?: string;\n\tsecondaryButton?: string;\n}\n\nexport var CloseAction = new Action('close.message', nls.localize('close', \"Close\"), null, true, () => Promise.as(true));\nexport var CancelAction = new Action('close.message', nls.localize('cancel', \"Cancel\"), null, true, () => Promise.as(true));\n\nexport var IMessageService = createDecorator<IMessageService>('messageService');\n\nexport interface IMessageService {\n\tserviceId: ServiceIdentifier<any>;\n\n\t/**\n\t * Tells the service to show a message with a given severity\n\t * the returned function can be used to hide the message again\n\t */\n\tshow(sev: Severity, message: string): () => void;\n\tshow(sev: Severity, message: Error): () => void;\n\tshow(sev: Severity, message: string[]): () => void;\n\tshow(sev: Severity, message: Error[]): () => void;\n\tshow(sev: Severity, message: IMessageWithAction): () => void;\n\n\t/**\n\t * Prints something to the status bar area with optional auto dispose and delay.\n\t */\n\tsetStatusMessage(message: string, autoDisposeAfter?: number, delayBy?: number): IDisposable;\n\n\t/**\n\t * Hide any messages showing currently.\n\t */\n\thideAll(): void;\n\n\t/**\n\t * Ask the user for confirmation.\n\t */\n\tconfirm(confirmation: IConfirmation): boolean;\n}\n\nexport import Severity = Severity;","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport Types = require('vs/base/common/types');\nimport Assert = require('vs/base/common/assert');\nimport {IInstantiationService, IConstructorSignature0, INewConstructorSignature0} from 'vs/platform/instantiation/common/instantiation';\n\nexport interface IRegistry {\n\n\t/**\n\t * Adds the extension functions and properties defined by data to the\n\t * platform. The provided id must be unique.\n\t * @param id a unique identifier\n\t * @param data a contribution\n\t */\n\tadd(id:string, data:any):void;\n\n\t/**\n\t * Returns true iff there is an extension with the provided id.\n\t * @param id an extension idenifier\n\t */\n\tknows(id:string):boolean;\n\n\t/**\n\t * Returns the extension functions and properties defined by the specified key or null.\n\t * @param id an extension idenifier\n\t */\n\tas(id:string):any;\n}\n\nclass RegistryImpl implements IRegistry {\n\n\tprivate data:{[id:string]:any;};\n\n\tconstructor() {\n\t\tthis.data = {};\n\t}\n\n\tpublic add(id:string, data:any):void {\n\t\tAssert.ok(Types.isString(id));\n\t\tAssert.ok(Types.isObject(data));\n\t\tAssert.ok(!this.data.hasOwnProperty(id), 'There is already an extension with this id');\n\n\t\tthis.data[id] = data;\n\t}\n\n\tpublic knows(id:string):boolean {\n\t\treturn this.data.hasOwnProperty(id);\n\t}\n\n\tpublic as(id:string):any {\n\t\treturn this.data[id] || null;\n\t}\n}\n\nexport var Registry = <IRegistry> new RegistryImpl();\n\n/**\n * A base class for registries that leverage the instantiation service to create instances.\n */\nexport class BaseRegistry<T> {\n\tprivate toBeInstantiated:IConstructorSignature0<T>[] = [];\n\tprivate instances:T[] = [];\n\tprivate instantiationService:IInstantiationService;\n\n\tpublic setInstantiationService(service:IInstantiationService):void {\n\t\tthis.instantiationService = service;\n\n\t\twhile(this.toBeInstantiated.length > 0) {\n\t\t\tvar entry = this.toBeInstantiated.shift();\n\t\t\tthis.instantiate(entry);\n\t\t}\n\t}\n\n\tprivate instantiate(ctor:IConstructorSignature0<T> | INewConstructorSignature0<T>):void {\n\t\tvar instance = this.instantiationService.createInstance(ctor);\n\t\tthis.instances.push(instance);\n\t}\n\n\t_register(ctor:IConstructorSignature0<T> | INewConstructorSignature0<T>):void {\n\t\tif (this.instantiationService) {\n\t\t\tthis.instantiate(ctor);\n\t\t} else {\n\t\t\tthis.toBeInstantiated.push(ctor);\n\t\t}\n\t}\n\n\t_getInstances():T[] {\n\t\treturn this.instances.slice(0);\n\t}\n\n\t_setInstances(instances:T[]):void {\n\t\tthis.instances = instances;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport nls = require('vs/nls');\nimport {IJSONSchema} from 'vs/base/common/jsonSchema';\nimport platform = require('vs/platform/platform');\nimport {IPluginDescription} from 'vs/platform/plugins/common/plugins';\nimport {PluginsRegistry} from 'vs/platform/plugins/common/pluginsRegistry';\nimport {IEventEmitter, EventEmitter} from 'vs/base/common/eventEmitter';\nimport {IDisposable} from 'vs/base/common/lifecycle';\n\nexport var Extensions = {\n\tJSONContribution: 'base.contributions.json'\n};\n\nexport interface ISchemaContributions {\n\tschemas?: { [id:string]: IJSONSchema };\n\tschemaAssociations?: { [pattern:string]: string[] };\n}\n\nexport interface IJSONContributionRegistry {\n\n\t/**\n\t * Register a schema to the registry.\n\t */\n\tregisterSchema(uri: string, unresolvedSchemaContent: IJSONSchema): void;\n\n\t/**\n\t * Register a schema association\n\t */\n\taddSchemaFileAssociation(pattern: string, uri:string): void;\n\n\t/**\n\t * Get all schemas\n\t */\n\tgetSchemaContributions() : ISchemaContributions;\n\n\t/**\n\t * Adds a change listener\n\t */\n\taddRegistryChangedListener(callback: (e: IJSONContributionRegistryEvent) => void) : IDisposable;\n\n}\n\nexport interface IJSONContributionRegistryEvent {\n\n}\n\nfunction normalizeId(id: string) {\n\tif (id.length > 0 && id.charAt(id.length - 1) === '#') {\n\t\treturn id.substring(0, id.length - 1);\n\t}\n\treturn id;\n}\n\n\n\nclass JSONContributionRegistry implements IJSONContributionRegistry {\n\tprivate schemasById: { [id:string]:IJSONSchema };\n\tprivate schemaAssociations: { [pattern:string]:string[] };\n\tprivate eventEmitter: IEventEmitter;\n\n\tconstructor() {\n\t\tthis.schemasById = {};\n\t\tthis.schemaAssociations = {};\n\t\tthis.eventEmitter = new EventEmitter();\n\t}\n\n\tpublic addRegistryChangedListener(callback: (e: IJSONContributionRegistryEvent) => void) : IDisposable {\n\t\treturn this.eventEmitter.addListener2('registryChanged', callback);\n\t}\n\n\tpublic registerSchema(uri: string, unresolvedSchemaContent: IJSONSchema): void {\n\t\tthis.schemasById[normalizeId(uri)] = unresolvedSchemaContent;\n\t\tthis.eventEmitter.emit('registryChanged', {});\n\t}\n\n\tpublic addSchemaFileAssociation(pattern: string, uri:string): void {\n\t\tvar uris = this.schemaAssociations[pattern];\n\t\tif(!uris) {\n\t\t\turis = [];\n\t\t\tthis.schemaAssociations[pattern] = uris;\n\t\t}\n\t\turis.push(uri);\n\t\tthis.eventEmitter.emit('registryChanged', {});\n\t}\n\n\tpublic getSchemaContributions() : ISchemaContributions {\n\t\treturn {\n\t\t\tschemas: this.schemasById,\n\t\t\tschemaAssociations: this.schemaAssociations\n\t\t}\n\t}\n\n}\n\nvar jsonContributionRegistry = new JSONContributionRegistry();\nplatform.Registry.add(Extensions.JSONContribution, jsonContributionRegistry);\n\n// preload the schema-schema with a version that contains descriptions.\njsonContributionRegistry.registerSchema('http://json-schema.org/draft-04/schema#', {\n\t'id': 'http://json-schema.org/draft-04/schema#',\n\t'title': nls.localize('schema.json', 'Describes a JSON file using a schema. See json-schema.org for more info.'),\n\t'$schema': 'http://json-schema.org/draft-04/schema#',\n\t'definitions': {\n\t\t'schemaArray': {\n\t\t\t'type': 'array',\n\t\t\t'minItems': 1,\n\t\t\t'items': { '$ref': '#' }\n\t\t},\n\t\t'positiveInteger': {\n\t\t\t'type': 'integer',\n\t\t\t'minimum': 0\n\t\t},\n\t\t'positiveIntegerDefault0': {\n\t\t\t'allOf': [{ '$ref': '#/definitions/positiveInteger' }, { 'default': 0 }]\n\t\t},\n\t\t'simpleTypes': {\n\t\t\t'type': 'string',\n\t\t\t'enum': ['array', 'boolean', 'integer', 'null', 'number', 'object', 'string']\n\t\t},\n\t\t'stringArray': {\n\t\t\t'type': 'array',\n\t\t\t'items': { 'type': 'string' },\n\t\t\t'minItems': 1,\n\t\t\t'uniqueItems': true\n\t\t}\n\t},\n\t'type': 'object',\n\t'properties': {\n\t\t'id': {\n\t\t\t'type': 'string',\n\t\t\t'format': 'uri',\n\t\t\t'description': nls.localize('schema.json.id', 'A unique identifier for the schema.')\n\t\t},\n\t\t'$schema': {\n\t\t\t'type': 'string',\n\t\t\t'format': 'uri',\n\t\t\t'description': nls.localize('schema.json.$schema', 'The schema to verify this document against ')\n\t\t},\n\t\t'title': {\n\t\t\t'type': 'string',\n\t\t\t'description': nls.localize('schema.json.title', 'A descriptive title of the element')\n\t\t},\n\t\t'description': {\n\t\t\t'type': 'string',\n\t\t\t'description': nls.localize('schema.json.description', 'A long description of the element. Used in hover menus and suggestions.')\n\t\t},\n\t\t'default': {\n\t\t\t'description': nls.localize('schema.json.default', 'A default value. Used by suggestions.')\n\t\t},\n\t\t'multipleOf': {\n\t\t\t'type': 'number',\n\t\t\t'minimum': 0,\n\t\t\t'exclusiveMinimum': true,\n\t\t\t'description': nls.localize('schema.json.multipleOf', 'A number that should cleanly divide the current value (i.e. have no remainder)')\n\t\t},\n\t\t'maximum': {\n\t\t\t'type': 'number',\n\t\t\t'description': nls.localize('schema.json.maximum', 'The maximum numerical value, inclusive by default.')\n\t\t},\n\t\t'exclusiveMaximum': {\n\t\t\t'type': 'boolean',\n\t\t\t'default': false,\n\t\t\t'description': nls.localize('schema.json.exclusiveMaximum', 'Makes the maximum property exclusive.')\n\t\t},\n\t\t'minimum': {\n\t\t\t'type': 'number',\n\t\t\t'description': nls.localize('schema.json.minimum', 'The minimum numerical value, inclusive by default.')\n\t\t},\n\t\t'exclusiveMinimum': {\n\t\t\t'type': 'boolean',\n\t\t\t'default': false,\n\t\t\t'description': nls.localize('schema.json.exclusiveMininum', 'Makes the minimum property exclusive.')\n\t\t},\n\t\t'maxLength': {\n\t\t\t'allOf': [\n\t\t\t\t{ '$ref': '#/definitions/positiveInteger' }\n\t\t\t],\n\t\t\t'description': nls.localize('schema.json.maxLength', 'The maximum length of a string.')\n\t\t},\n\t\t'minLength': {\n\t\t\t'allOf': [\n\t\t\t\t{ '$ref': '#/definitions/positiveIntegerDefault0' }\n\t\t\t],\n\t\t\t'description': nls.localize('schema.json.minLength', 'The minimum length of a string.')\n\t\t},\n\t\t'pattern': {\n\t\t\t'type': 'string',\n\t\t\t'format': 'regex',\n\t\t\t'description': nls.localize('schema.json.pattern', 'A regular expression to match the string against. It is not implicitly anchored.')\n\t\t},\n\t\t'additionalItems': {\n\t\t\t'anyOf': [\n\t\t\t\t{ 'type': 'boolean' },\n\t\t\t\t{ '$ref': '#' }\n\t\t\t],\n\t\t\t'default': {},\n\t\t\t'description': nls.localize('schema.json.additionalItems', 'For arrays, only when items is set as an array. If it is a schema, then this schema validates items after the ones specified by the items array. If it is false, then additional items will cause validation to fail.')\n\t\t},\n\t\t'items': {\n\t\t\t'anyOf': [\n\t\t\t\t{ '$ref': '#' },\n\t\t\t\t{ '$ref': '#/definitions/schemaArray' }\n\t\t\t],\n\t\t\t'default': {},\n\t\t\t'description': nls.localize('schema.json.items', 'For arrays. Can either be a schema to validate every element against or an array of schemas to validate each item against in order (the first schema will validate the first element, the second schema will validate the second element, and so on.')\n\t\t},\n\t\t'maxItems': {\n\t\t\t'allOf': [\n\t\t\t\t{ '$ref': '#/definitions/positiveInteger' }\n\t\t\t],\n\t\t\t'description': nls.localize('schema.json.maxItems', 'The maximum number of items that can be inside an array. Inclusive.')\n\t\t},\n\t\t'minItems': {\n\t\t\t'allOf': [\n\t\t\t\t{ '$ref': '#/definitions/positiveIntegerDefault0' }\n\t\t\t],\n\t\t\t'description': nls.localize('schema.json.minItems', 'The minimum number of items that can be inside an array. Inclusive.')\n\t\t},\n\t\t'uniqueItems': {\n\t\t\t'type': 'boolean',\n\t\t\t'default': false,\n\t\t\t'description': nls.localize('schema.json.uniqueItems', 'If all of the items in the array must be unique. Defaults to false.')\n\t\t},\n\t\t'maxProperties': {\n\t\t\t'allOf': [\n\t\t\t\t{ '$ref': '#/definitions/positiveInteger' }\n\t\t\t],\n\t\t\t'description': nls.localize('schema.json.maxProperties', 'The maximum number of properties an object can have. Inclusive.')\n\t\t},\n\t\t'minProperties': {\n\t\t\t'allOf': [\n\t\t\t\t{ '$ref': '#/definitions/positiveIntegerDefault0' },\n\t\t\t],\n\t\t\t'description': nls.localize('schema.json.minProperties', 'The minimum number of properties an object can have. Inclusive.')\n\t\t},\n\t\t'required': {\n\t\t\t'allOf': [\n\t\t\t\t{ '$ref': '#/definitions/stringArray' }\n\t\t\t],\n\t\t\t'description': nls.localize('schema.json.required', 'An array of strings that lists the names of all properties required on this object.')\n\t\t},\n\t\t'additionalProperties': {\n\t\t\t'anyOf': [\n\t\t\t\t{ 'type': 'boolean' },\n\t\t\t\t{ '$ref': '#' }\n\t\t\t],\n\t\t\t'default': {},\n\t\t\t'description': nls.localize('schema.json.additionalProperties', 'Either a schema or a boolean. If a schema, then used to validate all properties not matched by \\'properties\\' or \\'patternProperties\\'. If false, then any properties not matched by either will cause this schema to fail.')\n\t\t},\n\t\t'definitions': {\n\t\t\t'type': 'object',\n\t\t\t'additionalProperties': { '$ref': '#' },\n\t\t\t'default': {},\n\t\t\t'description': nls.localize('schema.json.definitions', 'Not used for validation. Place subschemas here that you wish to reference inline with $ref')\n\t\t},\n\t\t'properties': {\n\t\t\t'type': 'object',\n\t\t\t'additionalProperties': { '$ref': '#' },\n\t\t\t'default': {},\n\t\t\t'description': nls.localize('schema.json.properties', 'A map of property names to schemas for each property.')\n\t\t},\n\t\t'patternProperties': {\n\t\t\t'type': 'object',\n\t\t\t'additionalProperties': { '$ref': '#' },\n\t\t\t'default': {},\n\t\t\t'description': nls.localize('schema.json.patternProperties', 'A map of regular expressions on property names to schemas for matching properties.')\n\t\t},\n\t\t'dependencies': {\n\t\t\t'type': 'object',\n\t\t\t'additionalProperties': {\n\t\t\t\t'anyOf': [\n\t\t\t\t\t{ '$ref': '#' },\n\t\t\t\t\t{ '$ref': '#/definitions/stringArray' }\n\t\t\t\t]\n\t\t\t},\n\t\t\t'description': nls.localize('schema.json.dependencies', 'A map of property names to either an array of property names or a schema. An array of property names means the property named in the key depends on the properties in the array being present in the object in order to be valid. If the value is a schema, then the schema is only applied to the object if the property in the key exists on the object.')\n\t\t},\n\t\t'enum': {\n\t\t\t'type': 'array',\n\t\t\t'minItems': 1,\n\t\t\t'uniqueItems': true,\n\t\t\t'description': nls.localize('schema.json.enum', 'The set of literal values that are valid')\n\t\t},\n\t\t'type': {\n\t\t\t'anyOf': [\n\t\t\t\t{ '$ref': '#/definitions/simpleTypes' },\n\t\t\t\t{\n\t\t\t\t\t'type': 'array',\n\t\t\t\t\t'items': { '$ref': '#/definitions/simpleTypes' },\n\t\t\t\t\t'minItems': 1,\n\t\t\t\t\t'uniqueItems': true\n\t\t\t\t}\n\t\t\t],\n\t\t\t'description': nls.localize('schema.json.type', 'Either a string of one of the basic schema types (number, integer, null, array, object, boolean, string) or an array of strings specifying a subset of those types.')\n\t\t},\n\t\t'allOf': {\n\t\t\t'allOf': [\n\t\t\t\t{ '$ref': '#/definitions/schemaArray' }\n\t\t\t],\n\t\t\t'description': nls.localize('schema.json.allOf', 'An array of schemas, all of which must match.')\n\t\t},\n\t\t'anyOf': {\n\t\t\t'allOf': [\n\t\t\t\t{ '$ref': '#/definitions/schemaArray' }\n\t\t\t],\n\t\t\t'description': nls.localize('schema.json.anyOf', 'An array of schemas, where at least one must match.')\n\t\t},\n\t\t'oneOf': {\n\t\t\t'allOf': [\n\t\t\t\t{ '$ref': '#/definitions/schemaArray' }\n\t\t\t],\n\t\t\t'description': nls.localize('schema.json.oneOf', 'An array of schemas, exactly one of which must match.')\n\t\t},\n\t\t'not': {\n\t\t\t'allOf': [\n\t\t\t\t{ '$ref': '#' }\n\t\t\t],\n\t\t\t'description': nls.localize('schema.json.not', 'A schema which must not match.')\n\t\t}\n\t},\n\t'dependencies': {\n\t\t'exclusiveMaximum': ['maximum'],\n\t\t'exclusiveMinimum': ['minimum']\n\t},\n\t'default': {}\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {Registry} from 'vs/platform/platform';\nimport {TypeConstraint, validateConstraints} from 'vs/base/common/types';\nimport {ICommandHandler, ICommandHandlerDescription, ICommandsMap, IKeybindingItem, IKeybindings, IKeybindingContextRule} from 'vs/platform/keybinding/common/keybindingService';\nimport {KeybindingsUtils} from 'vs/platform/keybinding/common/keybindingsUtils';\nimport {KeyMod, KeyCode, BinaryKeybindings} from 'vs/base/common/keyCodes';\nimport Platform = require('vs/base/common/platform');\n\nexport interface ICommandRule extends IKeybindings {\n\tid: string;\n\tweight: number;\n\tcontext: IKeybindingContextRule[];\n}\n\nexport interface ICommandDescriptor extends ICommandRule {\n\thandler: ICommandHandler;\n\tdescription?: string | ICommandHandlerDescription;\n}\n\nexport interface IKeybindingsRegistry {\n\tregisterCommandRule(rule:ICommandRule);\n\tregisterCommandDesc(desc: ICommandDescriptor): void;\n\tgetCommands(): ICommandsMap;\n\tgetDefaultKeybindings(): IKeybindingItem[];\n\n\tKEYBINDING_CONTEXT_OPERATOR_EQUAL: string;\n\tKEYBINDING_CONTEXT_OPERATOR_NOT_EQUAL: string;\n\n\tWEIGHT: {\n\t\teditorCore(importance?: number): number;\n\t\teditorContrib(importance?: number): number;\n\t\tworkbenchContrib(importance?: number): number;\n\t\tbuiltinExtension(importance?:number): number;\n\t\texternalExtension(importance?:number): number;\n\t};\n}\n\nclass KeybindingsRegistryImpl implements IKeybindingsRegistry {\n\n\tprivate _keybindings: IKeybindingItem[];\n\tprivate _commands: ICommandsMap;\n\n\tpublic KEYBINDING_CONTEXT_OPERATOR_EQUAL = 'equal';\n\tpublic KEYBINDING_CONTEXT_OPERATOR_NOT_EQUAL = 'not_equal';\n\n\tpublic WEIGHT = {\n\t\teditorCore: (importance: number = 0): number => {\n\t\t\treturn 0 + importance;\n\t\t},\n\t\teditorContrib: (importance: number = 0): number => {\n\t\t\treturn 100 + importance;\n\t\t},\n\t\tworkbenchContrib: (importance: number = 0): number => {\n\t\t\treturn 200 + importance;\n\t\t},\n\t\tbuiltinExtension: (importance:number = 0): number => {\n\t\t\treturn 300 + importance;\n\t\t},\n\t\texternalExtension: (importance:number = 0): number => {\n\t\t\treturn 400 + importance;\n\t\t}\n\t};\n\n\tconstructor() {\n\t\tthis._keybindings = [];\n\t\tthis._commands = Object.create(null);\n\t}\n\n\tpublic registerCommandRule(rule:ICommandRule): void {\n\t\tvar actualKb = KeybindingsUtils.bindToCurrentPlatform(rule);\n\n\t\tif (actualKb && actualKb.primary) {\n\t\t\tthis.registerDefaultKeybinding(actualKb.primary, rule.id, rule.weight, 0, rule.context);\n\t\t}\n\n\t\tif (actualKb && Array.isArray(actualKb.secondary)) {\n\t\t\tactualKb.secondary.forEach((k, i) => this.registerDefaultKeybinding(k, rule.id, rule.weight, -i - 1, rule.context));\n\t\t}\n\t}\n\n\tpublic registerCommandDesc(desc: ICommandDescriptor): void {\n\t\tthis.registerCommandRule(desc);\n\n\t\t// if (_commands[desc.id]) {\n\t\t// \tconsole.warn('Duplicate handler for command: ' + desc.id);\n\t\t// }\n\t\t// this._commands[desc.id] = desc.handler;\n\n\t\tlet {handler} = desc;\n\t\tlet description = desc.description || handler.description;\n\n\t\t// add argument validation if rich command metadata is provided\n\t\tif (typeof description === 'object') {\n\t\t\tconst metadata = <ICommandHandlerDescription>description;\n\t\t\tconst constraints: TypeConstraint[] = [];\n\t\t\tfor (let arg of metadata.args) {\n\t\t\t\tconstraints.push(arg.constraint);\n\t\t\t}\n\t\t\thandler = function(accesor, args) {\n\t\t\t\tvalidateConstraints(args, constraints);\n\t\t\t\treturn desc.handler(accesor, args);\n\t\t\t};\n\t\t}\n\n\t\t// make sure description is there\n\t\thandler.description = description;\n\n\t\t// register handler\n\t\tthis._commands[desc.id] = handler;\n\t}\n\n\tpublic getCommands(): ICommandsMap {\n\t\treturn this._commands;\n\t}\n\n\tprivate registerDefaultKeybinding(keybinding: number, commandId:string, weight1: number, weight2:number, context:IKeybindingContextRule[]): void {\n\t\tif (Platform.isWindows) {\n\t\t\tif (BinaryKeybindings.hasCtrlCmd(keybinding) && !BinaryKeybindings.hasShift(keybinding) && BinaryKeybindings.hasAlt(keybinding) && !BinaryKeybindings.hasWinCtrl(keybinding)) {\n\t\t\t\tif (/^[A-Z0-9\\[\\]\\|\\;\\'\\,\\.\\/\\`]$/.test(KeyCode.toString(BinaryKeybindings.extractKeyCode(keybinding)))) {\n\t\t\t\t\tconsole.warn('Ctrl+Alt+ keybindings should not be used by default under Windows. Offender: ', keybinding, ' for ', commandId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._keybindings.push({\n\t\t\tkeybinding: keybinding,\n\t\t\tcommand: commandId,\n\t\t\tcontext: context,\n\t\t\tweight1: weight1,\n\t\t\tweight2: weight2\n\t\t});\n\t}\n\n\tpublic getDefaultKeybindings(): IKeybindingItem[] {\n\t\treturn this._keybindings;\n\t}\n}\nexport var KeybindingsRegistry:IKeybindingsRegistry = new KeybindingsRegistryImpl();\n\n// Define extension point ids\nexport var Extensions = {\n\tEditorModes: 'platform.keybindingsRegistry'\n};\nRegistry.add(Extensions.EditorModes, KeybindingsRegistry);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {KeybindingsRegistry,ICommandDescriptor} from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport {IKeybindingContextRule, IKeybindings} from 'vs/platform/keybinding/common/keybindingService';\nimport {ServicesAccessor} from 'vs/platform/instantiation/common/instantiation';\nimport {IEditorService} from 'vs/platform/editor/common/editor';\nimport {ICodeEditorService} from 'vs/editor/common/services/codeEditorService';\nimport EditorCommon = require('vs/editor/common/editorCommon');\nimport {KeyMod, KeyCode} from 'vs/base/common/keyCodes';\n\nexport function findFocusedEditor(commandId: string, accessor: ServicesAccessor, args: any, complain: boolean): EditorCommon.ICommonCodeEditor {\n\tvar codeEditorService = accessor.get(ICodeEditorService);\n\tvar editorId = args.context.editorId;\n\tif (!editorId) {\n\t\tif (complain) {\n\t\t\tconsole.warn('Cannot execute ' + commandId + ' because no editor is focused.');\n\t\t}\n\t\treturn null;\n\t}\n\tvar editor = codeEditorService.getCodeEditor(editorId);\n\tif (!editor) {\n\t\tif (complain) {\n\t\t\tconsole.warn('Cannot execute ' + commandId + ' because editor `' + editorId + '` could not be found.');\n\t\t}\n\t\treturn null;\n\t}\n\treturn editor;\n}\n\nexport function withCodeEditorFromCommandHandler(commandId: string, accessor: ServicesAccessor, args: any, callback: (editor:EditorCommon.ICommonCodeEditor) => void): void {\n\tvar editor = findFocusedEditor(commandId, accessor, args, true);\n\tif (editor) {\n\t\tcallback(editor);\n\t}\n}\n\nexport function getActiveEditor(accessor: ServicesAccessor): EditorCommon.ICommonCodeEditor {\n\tvar editorService = accessor.get(IEditorService);\n\tvar activeEditor = (<any>editorService).getActiveEditor && (<any>editorService).getActiveEditor();\n\tif (activeEditor) {\n\t\tvar editor = <EditorCommon.IEditor>activeEditor.getControl();\n\n\t\t// Substitute for (editor instanceof ICodeEditor)\n\t\tif (editor && typeof editor.getEditorType === 'function') {\n\t\t\tvar codeEditor = <EditorCommon.ICommonCodeEditor>editor;\n\t\t\treturn codeEditor;\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction triggerEditorHandler(handlerId: string, accessor: ServicesAccessor, args: any): void {\n\twithCodeEditorFromCommandHandler(handlerId, accessor, args, (editor) => {\n\t\teditor.trigger('keyboard', handlerId, args);\n\t});\n}\n\nfunction registerCoreCommand(handlerId: string, kb: IKeybindings, weight: number = KeybindingsRegistry.WEIGHT.editorCore(), context?: IKeybindingContextRule[]) {\n\tvar desc: ICommandDescriptor = {\n\t\tid: handlerId,\n\t\thandler: triggerEditorHandler.bind(null, handlerId),\n\t\tweight: weight,\n\t\tcontext: (context ? context : [{ key: EditorCommon.KEYBINDING_CONTEXT_EDITOR_TEXT_FOCUS}]),\n\t\tprimary: kb.primary,\n\t\tsecondary: kb.secondary,\n\t\twin: kb.win,\n\t\tmac: kb.mac,\n\t\tlinux: kb.linux\n\t};\n\tKeybindingsRegistry.registerCommandDesc(desc);\n}\n\nfunction getMacWordNavigationKB(shift:boolean, key:KeyCode): number {\n\t// For macs, word navigation is based on the alt modifier\n\tif (shift) {\n\t\treturn KeyMod.Shift | KeyMod.Alt | key;\n\t} else {\n\t\treturn KeyMod.Alt | key;\n\t}\n}\n\nfunction getWordNavigationKB(shift:boolean, key:KeyCode): number {\n\t// Normally word navigation is based on the ctrl modifier\n\tif (shift) {\n\t\treturn KeyMod.CtrlCmd | KeyMod.Shift | key;\n\t} else {\n\t\treturn KeyMod.CtrlCmd | key;\n\t}\n}\n\nvar H = EditorCommon.Handler;\n\n// https://support.apple.com/en-gb/HT201236\n// [ADDED] Control-H\t\t\t\t\tDelete the character to the left of the insertion point. Or use Delete.\n// [ADDED] Control-D\t\t\t\t\tDelete the character to the right of the insertion point. Or use Fn-Delete.\n// [ADDED] Control-K\t\t\t\t\tDelete the text between the insertion point and the end of the line or paragraph.\n// [ADDED] Command–Up Arrow\t\t\t\tMove the insertion point to the beginning of the document.\n// [ADDED] Command–Down Arrow\t\t\tMove the insertion point to the end of the document.\n// [ADDED] Command–Left Arrow\t\t\tMove the insertion point to the beginning of the current line.\n// [ADDED] Command–Right Arrow\t\t\tMove the insertion point to the end of the current line.\n// [ADDED] Option–Left Arrow\t\t\tMove the insertion point to the beginning of the previous word.\n// [ADDED] Option–Right Arrow\t\t\tMove the insertion point to the end of the next word.\n// [ADDED] Command–Shift–Up Arrow\t\tSelect the text between the insertion point and the beginning of the document.\n// [ADDED] Command–Shift–Down Arrow\t\tSelect the text between the insertion point and the end of the document.\n// [ADDED] Command–Shift–Left Arrow\t\tSelect the text between the insertion point and the beginning of the current line.\n// [ADDED] Command–Shift–Right Arrow\tSelect the text between the insertion point and the end of the current line.\n// [USED BY DUPLICATE LINES] Shift–Option–Up Arrow\t\tExtend text selection to the beginning of the current paragraph, then to the beginning of the following paragraph if pressed again.\n// [USED BY DUPLICATE LINES] Shift–Option–Down Arrow\tExtend text selection to the end of the current paragraph, then to the end of the following paragraph if pressed again.\n// [ADDED] Shift–Option–Left Arrow\t\tExtend text selection to the beginning of the current word, then to the beginning of the following word if pressed again.\n// [ADDED] Shift–Option–Right Arrow\t\tExtend text selection to the end of the current word, then to the end of the following word if pressed again.\n// [ADDED] Control-A\t\t\t\t\tMove to the beginning of the line or paragraph.\n// [ADDED] Control-E\t\t\t\t\tMove to the end of a line or paragraph.\n// [ADDED] Control-F\t\t\t\t\tMove one character forward.\n// [ADDED] Control-B\t\t\t\t\tMove one character backward.\n//Control-L\t\t\t\t\t\t\t\tCenter the cursor or selection in the visible area.\n// [ADDED] Control-P\t\t\t\t\tMove up one line.\n// [ADDED] Control-N\t\t\t\t\tMove down one line.\n// [ADDED] Control-O\t\t\t\t\tInsert a new line after the insertion point.\n//Control-T\t\t\t\t\t\t\t\tSwap the character behind the insertion point with the character in front of the insertion point.\n// Unconfirmed????\n//\tConfig.addKeyBinding(EditorCommon.Handler.CursorPageDown,\t\tKeyMod.WinCtrl | KeyCode.KEY_V);\n\n// OS X built in commands\n// Control+y => yank\n// [ADDED] Command+backspace => Delete to Hard BOL\n// [ADDED] Command+delete => Delete to Hard EOL\n// [ADDED] Control+k => Delete to Hard EOL\n// Control+l => show_at_center\n// Control+Command+d => noop\n// Control+Command+shift+d => noop\n\nregisterCoreCommand(H.CursorLeft, {\n\tprimary: KeyCode.LeftArrow,\n\tmac: { primary: KeyCode.LeftArrow, secondary: [KeyMod.WinCtrl | KeyCode.KEY_B] }\n});\nregisterCoreCommand(H.CursorLeftSelect, {\n\tprimary: KeyMod.Shift | KeyCode.LeftArrow\n});\nregisterCoreCommand(H.CursorRight, {\n\tprimary: KeyCode.RightArrow,\n\tmac: { primary: KeyCode.RightArrow, secondary: [KeyMod.WinCtrl | KeyCode.KEY_F] }\n});\nregisterCoreCommand(H.CursorRightSelect, {\n\tprimary: KeyMod.Shift | KeyCode.RightArrow\n});\nregisterCoreCommand(H.CursorUp, {\n\tprimary: KeyCode.UpArrow,\n\tmac: { primary: KeyCode.UpArrow, secondary: [KeyMod.WinCtrl | KeyCode.KEY_P] }\n});\nregisterCoreCommand(H.CursorUpSelect, {\n\tprimary: KeyMod.Shift | KeyCode.UpArrow,\n\tsecondary: [getWordNavigationKB(true, KeyCode.UpArrow)],\n\tmac: { primary: KeyMod.Shift | KeyCode.UpArrow },\n\tlinux: { primary: KeyMod.Shift | KeyCode.UpArrow }\n});\nregisterCoreCommand(H.CursorDown, {\n\tprimary: KeyCode.DownArrow,\n\tmac: { primary: KeyCode.DownArrow, secondary: [KeyMod.WinCtrl | KeyCode.KEY_N] }\n});\nregisterCoreCommand(H.CursorDownSelect, {\n\tprimary: KeyMod.Shift | KeyCode.DownArrow,\n\tsecondary: [getWordNavigationKB(true, KeyCode.DownArrow)],\n\tmac: { primary: KeyMod.Shift | KeyCode.DownArrow },\n\tlinux: { primary: KeyMod.Shift | KeyCode.DownArrow }\n});\n\nregisterCoreCommand(H.CursorPageUp, {\n\tprimary: KeyCode.PageUp\n});\nregisterCoreCommand(H.CursorPageUpSelect, {\n\tprimary: KeyMod.Shift | KeyCode.PageUp\n});\nregisterCoreCommand(H.CursorPageDown, {\n\tprimary: KeyCode.PageDown\n});\nregisterCoreCommand(H.CursorPageDownSelect, {\n\tprimary: KeyMod.Shift | KeyCode.PageDown\n});\nregisterCoreCommand(H.CursorHome, {\n\tprimary: KeyCode.Home,\n\tmac: { primary: KeyCode.Home, secondary: [KeyMod.CtrlCmd | KeyCode.LeftArrow, KeyMod.WinCtrl | KeyCode.KEY_A] }\n});\nregisterCoreCommand(H.CursorHomeSelect, {\n\tprimary: KeyMod.Shift | KeyCode.Home,\n\tmac: { primary: KeyMod.Shift | KeyCode.Home, secondary: [KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.LeftArrow] }\n});\nregisterCoreCommand(H.CursorEnd, {\n\tprimary: KeyCode.End,\n\tmac: { primary: KeyCode.End, secondary: [KeyMod.CtrlCmd | KeyCode.RightArrow, KeyMod.WinCtrl | KeyCode.KEY_E] }\n});\nregisterCoreCommand(H.CursorEndSelect, {\n\tprimary: KeyMod.Shift | KeyCode.End,\n\tmac: { primary: KeyMod.Shift | KeyCode.End, secondary: [KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.RightArrow] }\n});\nregisterCoreCommand(H.ExpandLineSelection, {\n\tprimary: KeyMod.CtrlCmd | KeyCode.KEY_I\n});\n\nregisterCoreCommand(H.ScrollLineUp, {\n\tprimary: KeyMod.CtrlCmd | KeyCode.UpArrow,\n\tmac: { primary: KeyMod.WinCtrl | KeyCode.PageUp}\n});\nregisterCoreCommand(H.ScrollLineDown, {\n\tprimary: KeyMod.CtrlCmd | KeyCode.DownArrow,\n\tmac: { primary: KeyMod.WinCtrl | KeyCode.PageDown}\n});\n\nregisterCoreCommand(H.ScrollPageUp, {\n\tprimary: KeyMod.CtrlCmd | KeyCode.PageUp\n});\nregisterCoreCommand(H.ScrollPageDown, {\n\tprimary: KeyMod.CtrlCmd | KeyCode.PageDown\n});\n\nregisterCoreCommand(H.Tab, {\n\tprimary: KeyCode.Tab\n}, KeybindingsRegistry.WEIGHT.editorCore(), [\n\t{ key: EditorCommon.KEYBINDING_CONTEXT_EDITOR_TEXT_FOCUS },\n\t{ key: EditorCommon.KEYBINDING_CONTEXT_EDITOR_TAB_MOVES_FOCUS, operator: KeybindingsRegistry.KEYBINDING_CONTEXT_OPERATOR_NOT_EQUAL, operand: true }\n]);\nregisterCoreCommand(H.Outdent, {\n\tprimary: KeyMod.Shift | KeyCode.Tab\n}, KeybindingsRegistry.WEIGHT.editorCore(), [\n\t{ key: EditorCommon.KEYBINDING_CONTEXT_EDITOR_TEXT_FOCUS },\n\t{ key: EditorCommon.KEYBINDING_CONTEXT_EDITOR_TAB_MOVES_FOCUS, operator: KeybindingsRegistry.KEYBINDING_CONTEXT_OPERATOR_NOT_EQUAL, operand: true }\n]);\n\nregisterCoreCommand(H.DeleteLeft, {\n\tprimary: KeyCode.Backspace,\n\tsecondary: [KeyMod.Shift | KeyCode.Backspace],\n\tmac: { primary: KeyCode.Backspace, secondary: [KeyMod.Shift | KeyCode.Backspace, KeyMod.WinCtrl | KeyCode.KEY_H, KeyMod.WinCtrl | KeyCode.Backspace] }\n});\nregisterCoreCommand(H.DeleteRight, {\n\tprimary: KeyCode.Delete,\n\tmac: { primary: KeyCode.Delete, secondary: [KeyMod.WinCtrl | KeyCode.KEY_D, KeyMod.WinCtrl | KeyCode.Delete] }\n});\nregisterCoreCommand(H.DeleteAllLeft, {\n\tprimary: null,\n\tmac: { primary: KeyMod.CtrlCmd | KeyCode.Backspace }\n});\nregisterCoreCommand(H.DeleteAllRight, {\n\tprimary: null,\n\tmac: { primary: KeyMod.WinCtrl | KeyCode.KEY_K, secondary: [KeyMod.CtrlCmd | KeyCode.Delete] }\n});\n\nfunction registerWordCommand(handlerId: string, shift:boolean, key:KeyCode): void {\n\tregisterCoreCommand(handlerId, {\n\t\tprimary: getWordNavigationKB(shift, key),\n\t\tmac: { primary: getMacWordNavigationKB(shift, key) }\n\t});\n}\nregisterWordCommand(H.CursorWordLeft, false, KeyCode.LeftArrow);\nregisterWordCommand(H.CursorWordLeftSelect, true, KeyCode.LeftArrow);\nregisterWordCommand(H.CursorWordRight, false, KeyCode.RightArrow);\nregisterWordCommand(H.CursorWordRightSelect, true, KeyCode.RightArrow);\nregisterWordCommand(H.DeleteWordLeft, false, KeyCode.Backspace);\nregisterWordCommand(H.DeleteWordRight, false, KeyCode.Delete);\n\nregisterCoreCommand(H.CancelSelection, {\n\tprimary: KeyCode.Escape\n}, KeybindingsRegistry.WEIGHT.editorCore(), [\n\t{ key: EditorCommon.KEYBINDING_CONTEXT_EDITOR_TEXT_FOCUS },\n\t{ key: EditorCommon.KEYBINDING_CONTEXT_EDITOR_HAS_NON_EMPTY_SELECTION }\n]);\nregisterCoreCommand(H.RemoveSecondaryCursors, {\n\tprimary: KeyCode.Escape\n}, KeybindingsRegistry.WEIGHT.editorCore(1), [\n\t{ key: EditorCommon.KEYBINDING_CONTEXT_EDITOR_TEXT_FOCUS },\n\t{ key: EditorCommon.KEYBINDING_CONTEXT_EDITOR_HAS_MULTIPLE_SELECTIONS }\n]);\n\nregisterCoreCommand(H.CursorTop, {\n\tprimary: KeyMod.CtrlCmd | KeyCode.Home,\n\tmac: { primary: KeyMod.CtrlCmd | KeyCode.UpArrow }\n});\nregisterCoreCommand(H.CursorTopSelect, {\n\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Home,\n\tmac: { primary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.UpArrow }\n});\nregisterCoreCommand(H.CursorBottom, {\n\tprimary: KeyMod.CtrlCmd | KeyCode.End,\n\tmac: { primary: KeyMod.CtrlCmd | KeyCode.DownArrow }\n});\nregisterCoreCommand(H.CursorBottomSelect, {\n\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.End,\n\tmac: { primary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.DownArrow }\n});\n\nregisterCoreCommand(H.LineBreakInsert, {\n\tprimary: null,\n\tmac: { primary: KeyMod.WinCtrl | KeyCode.KEY_O }\n});\n\nregisterCoreCommand(H.Undo, {\n\tprimary: KeyMod.CtrlCmd | KeyCode.KEY_Z\n});\nregisterCoreCommand(H.CursorUndo, {\n\tprimary: KeyMod.CtrlCmd | KeyCode.KEY_U\n});\nregisterCoreCommand(H.Redo, {\n\tprimary: KeyMod.CtrlCmd | KeyCode.KEY_Y,\n\tsecondary: [KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_Z],\n\tmac: { primary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_Z }\n});\n\n\nfunction selectAll(accessor: ServicesAccessor, args: any): void {\n\tvar HANDLER = EditorCommon.Handler.SelectAll;\n\n\t// If editor text focus\n\tif (args.context[EditorCommon.KEYBINDING_CONTEXT_EDITOR_TEXT_FOCUS]) {\n\t\tvar focusedEditor = findFocusedEditor(HANDLER, accessor, args, false);\n\t\tif (focusedEditor) {\n\t\t\tfocusedEditor.trigger('keyboard', HANDLER, args);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// Ignore this action when user is focussed on an element that allows for entering text\n\tvar activeElement = <HTMLElement>document.activeElement;\n\tif (activeElement && ['input', 'textarea'].indexOf(activeElement.tagName.toLowerCase()) >= 0) {\n\t\t(<any>activeElement).select();\n\t\treturn;\n\t}\n\n\t// Redirecting to last active editor\n\tvar activeEditor = getActiveEditor(accessor);\n\tif (activeEditor) {\n\t\tactiveEditor.trigger('keyboard', HANDLER, args);\n\t\treturn;\n\t}\n}\nKeybindingsRegistry.registerCommandDesc({\n\tid: 'editor.action.selectAll',\n\thandler: selectAll,\n\tweight: KeybindingsRegistry.WEIGHT.editorCore(),\n\tcontext: null,\n\tprimary: KeyMod.CtrlCmd | KeyCode.KEY_A\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport winjs = require('vs/base/common/winjs.base');\nimport marshalling = require('vs/base/common/marshalling');\nimport remote = require('vs/base/common/remote');\nimport errors = require('vs/base/common/errors');\n\ninterface IRPCReply {\n\tc: winjs.ValueCallback;\n\te: winjs.ErrorCallback;\n\tp: winjs.ProgressCallback;\n}\n\ninterface IRPCFunc {\n\t(rpcId: string, method: string, args: any[]): winjs.TPromise<any>;\n}\n\nvar pendingRPCReplies: { [msgId: string]: IRPCReply; } = {};\n\nfunction createRPC(serializeAndSend:(obj:any)=>void): IRPCFunc {\n\tvar lastMessageId = 0;\n\n\treturn function rpc(rpcId: string, method: string, args: any[]): winjs.TPromise<any> {\n\t\tvar req = String(++lastMessageId);\n\t\tvar reply: IRPCReply = {\n\t\t\tc: null,\n\t\t\te: null,\n\t\t\tp: null\n\t\t};\n\t\tvar r = new winjs.TPromise<any>((c, e, p) => {\n\t\t\treply.c = c;\n\t\t\treply.e = e;\n\t\t\treply.p = p;\n\t\t}, () => {\n\t\t\tserializeAndSend({\n\t\t\t\tcancel: req\n\t\t\t});\n\t\t});\n\t\tpendingRPCReplies[req] = reply;\n\n\t\tserializeAndSend({\n\t\t\treq: req,\n\t\t\trpcId: rpcId,\n\t\t\tmethod: method,\n\t\t\targs: args\n\t\t});\n\n\t\treturn r;\n\t};\n};\n\nexport interface IPluginsIPC extends remote.IRemoteCom {\n\thandle(msg: string): void;\n}\n\nexport function create(send:(obj:string)=>void): IPluginsIPC {\n\tvar rpc = createRPC(serializeAndSend);\n\tvar bigHandler: remote.IManyHandler = null;\n\tvar invokedHandlers: { [req: string]: winjs.TPromise<any>; } = Object.create(null);\n\n\tvar r: IPluginsIPC = {\n\t\tcallOnRemote: rpc,\n\t\tregisterBigHandler: (_bigHandler: remote.IManyHandler): void => {\n\t\t\tbigHandler = _bigHandler;\n\t\t},\n\t\thandle: (rawmsg) => {\n\t\t\tvar msg = marshalling.demarshallObject(rawmsg, proxiesMarshalling);\n\n\t\t\tif (msg.seq) {\n\t\t\t\tif (!pendingRPCReplies.hasOwnProperty(msg.seq)) {\n\t\t\t\t\tconsole.warn('Got reply to unknown seq');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar reply = pendingRPCReplies[msg.seq];\n\t\t\t\tdelete pendingRPCReplies[msg.seq];\n\n\t\t\t\tif (msg.err) {\n\t\t\t\t\treply.e(msg.err);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\treply.c(msg.res);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (msg.cancel) {\n\t\t\t\tif (invokedHandlers[msg.cancel]) {\n\t\t\t\t\tinvokedHandlers[msg.cancel].cancel();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (msg.err) {\n\t\t\t\tconsole.error(msg.err);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar rpcId = msg.rpcId;\n\n\t\t\tif (!bigHandler) {\n\t\t\t\tthrow new Error('got message before big handler attached!');\n\t\t\t}\n\n\t\t\tvar req = msg.req;\n\n\t\t\tinvokedHandlers[req] = invokeHandler(rpcId, msg.method, msg.args);\n\n\t\t\tinvokedHandlers[req].then((r) => {\n\t\t\t\tdelete invokedHandlers[req];\n\t\t\t\tserializeAndSend({\n\t\t\t\t\tseq: req,\n\t\t\t\t\tres: r\n\t\t\t\t});\n\t\t\t},(err) => {\n\t\t\t\tdelete invokedHandlers[req];\n\t\t\t\tserializeAndSend({\n\t\t\t\t\tseq: req,\n\t\t\t\t\terr: errors.transformErrorForSerialization(err)\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t};\n\n\tvar proxiesMarshalling = new remote.ProxiesMarshallingContribution(r);\n\n\tfunction serializeAndSend(msg:any): void {\n\t\tsend(marshalling.marshallObject(msg, proxiesMarshalling));\n\t}\n\n\tfunction invokeHandler(rpcId:string, method:string, args:any[]): winjs.TPromise<any> {\n\t\ttry {\n\t\t\treturn winjs.TPromise.as(bigHandler.handle(rpcId, method, args));\n\t\t} catch (err) {\n\t\t\treturn winjs.TPromise.wrapError(err);\n\t\t}\n\t}\n\n\treturn r;\n};\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {createDecorator, ServiceIdentifier, IInstantiationService} from 'vs/platform/instantiation/common/instantiation';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport Severity from 'vs/base/common/severity';\n\nexport interface IPluginDescription {\n\tid: string;\n\tname: string;\n\tversion: string;\n\tpublisher: string;\n\tisBuiltin: boolean;\n\textensionFolderPath: string;\n\textensionDependencies?: string[];\n\tactivationEvents?: string[];\n\tengines: {\n\t\tvscode: string;\n\t};\n\tmain?: string;\n\tcontributes?: { [point: string]: any; };\n\tisAMD: boolean;\n}\n\nexport interface IActivationEventListener {\n\t():void;\n}\n\nexport interface IPointListener {\n\t(desc: IPluginDescription[]): void;\n}\n\nexport var IPluginService = createDecorator<IPluginService>('pluginService');\n\nexport interface IMessage {\n\ttype: Severity;\n\tmessage: string;\n\tsource: string;\n}\n\nexport interface IPluginStatus {\n\tmessages: IMessage[];\n}\n\nexport interface IPluginService {\n\tserviceId: ServiceIdentifier<any>;\n\n\tactivateByEvent(activationEvent:string): TPromise<any>;\n\tactivateAndGet(pluginId:string): TPromise<any>;\n\tactivateAndGet<T>(pluginId:string): TPromise<T>;\n\tisActivated(pluginId:string): boolean;\n\n\t/**\n\t * This method should be called only on shutdown!\n\t * More work is needed for this to be called any time!\n\t */\n\tdeactivate(pluginId:string): void;\n\n\t/**\n\t * To be used only by the platform once on startup.\n\t */\n\tregistrationDone(errors?:IMessage[]): void;\n\n\tregisterOneTimeActivationEventListener(activationEvent: string, listener: IActivationEventListener): void;\n\n\tget(pluginId:string): any;\n\n\t/**\n\t * Block on this signal any interactions with extensions.\n\t */\n\tonReady(): TPromise<boolean>;\n\tgetPluginsStatus(): { [id: string]: IPluginStatus };\n}\n\nexport var INSTANCE:IPluginService = null;","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {IPluginDescription, IPointListener, IActivationEventListener, IMessage} from 'vs/platform/plugins/common/plugins';\nimport {Registry} from 'vs/platform/platform';\nimport Errors = require('vs/base/common/errors');\nimport env = require('vs/base/common/flags');\nimport * as JSONContributionRegistry from 'vs/platform/jsonschemas/common/jsonContributionRegistry';\nimport {IJSONSchema} from 'vs/base/common/jsonSchema';\nimport nls = require('vs/nls');\nimport paths = require('vs/base/common/paths');\nimport Severity from 'vs/base/common/severity';\n\nexport interface IMessageCollector {\n\terror(message:any): void;\n\twarn(message:any): void;\n\tinfo(message:any): void;\n}\n\nexport interface IPluginsMessageCollector {\n\terror(source:string, message:any): void;\n\twarn(source:string, message:any): void;\n\tinfo(source:string, message:any): void;\n\tscopeTo(source:string): IMessageCollector;\n}\n\nclass ScopedMessageCollector implements IMessageCollector {\n\tprivate _scope: string;\n\tprivate _actual: IPluginsMessageCollector;\n\n\tconstructor(scope:string, actual: IPluginsMessageCollector) {\n\t\tthis._scope = scope;\n\t\tthis._actual = actual;\n\t}\n\n\tpublic error(message:any): void {\n\t\tthis._actual.error(this._scope, message);\n\t}\n\n\tpublic warn(message:any): void {\n\t\tthis._actual.warn(this._scope, message);\n\t}\n\n\tpublic info(message:any): void {\n\t\tthis._actual.info(this._scope, message);\n\t}\n}\n\nexport interface IMessageHandler {\n\t(severity:Severity, source:string, message:string): void;\n}\n\nclass PluginsMessageForwarder implements IPluginsMessageCollector {\n\n\tprivate _handler: IMessageHandler;\n\n\tconstructor(handler: IMessageHandler) {\n\t\tthis._handler = handler;\n\t}\n\n\tprivate _pushMessage(type: Severity, source: string, message: any): void {\n\t\tthis._handler(\n\t\t\ttype,\n\t\t\tsource,\n\t\t\tthis._ensureString(message)\n\t\t);\n\t}\n\n\tprivate _ensureString(e: any): string {\n\t\tif (e && e.message && e.stack) {\n\t\t\treturn e.message + '\\n\\n' + e.stack;\n\t\t}\n\t\treturn String(e);\n\t}\n\n\tpublic error(source: string, message: any): void {\n\t\tthis._pushMessage(Severity.Error, source, message);\n\t}\n\n\tpublic warn(source: string, message: any): void {\n\t\tthis._pushMessage(Severity.Warning, source, message);\n\t}\n\n\tpublic info(source: string, message: any): void {\n\t\tthis._pushMessage(Severity.Info, source, message);\n\t}\n\n\tpublic scopeTo(source:string): IMessageCollector {\n\t\treturn new ScopedMessageCollector(source, this);\n\t}\n}\n\nexport class PluginsMessageCollector implements IPluginsMessageCollector {\n\n\tprivate _messages: IMessage[];\n\n\tconstructor() {\n\t\tthis._messages = [];\n\t}\n\n\tpublic getMessages(): IMessage[] {\n\t\treturn this._messages;\n\t}\n\n\tprivate _pushMessage(type: Severity, source: string, message: any): void {\n\t\tthis._messages.push({\n\t\t\ttype: type,\n\t\t\tmessage: this._ensureString(message),\n\t\t\tsource: source\n\t\t});\n\t}\n\n\tprivate _ensureString(e: any): string {\n\t\tif (e && e.message && e.stack) {\n\t\t\treturn e.message + '\\n\\n' + e.stack;\n\t\t}\n\t\treturn String(e);\n\t}\n\n\tpublic error(source: string, message: any): void {\n\t\tthis._pushMessage(Severity.Error, source, message);\n\t}\n\n\tpublic warn(source: string, message: any): void {\n\t\tthis._pushMessage(Severity.Warning, source, message);\n\t}\n\n\tpublic info(source: string, message: any): void {\n\t\tthis._pushMessage(Severity.Info, source, message);\n\t}\n\n\tpublic scopeTo(source:string): IMessageCollector {\n\t\treturn new ScopedMessageCollector(source, this);\n\t}\n}\n\nexport function isValidPluginDescription(extensionFolderPath: string, pluginDescription:IPluginDescription, notices:string[]): boolean {\n\tif (!pluginDescription) {\n\t\tnotices.push(nls.localize('pluginDescription.empty', \"Got empty extension description\"));\n\t\treturn false;\n\t}\n\tif (typeof pluginDescription.publisher !== 'string') {\n\t\tnotices.push(nls.localize('pluginDescription.publisher', \"property `{0}` is mandatory and must be of type `string`\", 'publisher'));\n\t\treturn false;\n\t}\n\tif (typeof pluginDescription.name !== 'string') {\n\t\tnotices.push(nls.localize('pluginDescription.name', \"property `{0}` is mandatory and must be of type `string`\", 'name'));\n\t\treturn false;\n\t}\n\tif (typeof pluginDescription.version !== 'string') {\n\t\tnotices.push(nls.localize('pluginDescription.version', \"property `{0}` is mandatory and must be of type `string`\", 'version'));\n\t\treturn false;\n\t}\n\tif (!pluginDescription.engines) {\n\t\tnotices.push(nls.localize('pluginDescription.engines', \"property `{0}` is mandatory and must be of type `object`\", 'engines'));\n\t\treturn false;\n\t}\n\tif (typeof pluginDescription.engines.vscode !== 'string') {\n\t\tnotices.push(nls.localize('pluginDescription.engines.vscode', \"property `{0}` is mandatory and must be of type `string`\", 'engines.vscode'));\n\t\treturn false;\n\t}\n\tif (typeof pluginDescription.extensionDependencies !== 'undefined') {\n\t\tif (!_isStringArray(pluginDescription.extensionDependencies)) {\n\t\t\tnotices.push(nls.localize('pluginDescription.extensionDependencies', \"property `{0}` can be omitted or must be of type `string[]`\", 'extensionDependencies'));\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (typeof pluginDescription.activationEvents !== 'undefined') {\n\t\tif (!_isStringArray(pluginDescription.activationEvents)) {\n\t\t\tnotices.push(nls.localize('pluginDescription.activationEvents1', \"property `{0}` can be omitted or must be of type `string[]`\", 'activationEvents'));\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof pluginDescription.main === 'undefined') {\n\t\t\tnotices.push(nls.localize('pluginDescription.activationEvents2', \"properties `{0}` and `{1}` must both be specified or must both be omitted\", 'activationEvents', 'main'));\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (typeof pluginDescription.main !== 'undefined') {\n\t\tif (typeof pluginDescription.main !== 'string') {\n\t\t\tnotices.push(nls.localize('pluginDescription.main1', \"property `{0}` can be omitted or must be of type `string`\", 'main'));\n\t\t\treturn false;\n\t\t} else {\n\t\t\tlet normalizedAbsolutePath = paths.normalize(paths.join(extensionFolderPath, pluginDescription.main));\n\n\t\t\tif (normalizedAbsolutePath.indexOf(extensionFolderPath)) {\n\t\t\t\tnotices.push(nls.localize('pluginDescription.main2', \"Expected `main` ({0}) to be included inside extension's folder ({1}). This might make the extension non-portable.\", normalizedAbsolutePath, extensionFolderPath));\n\t\t\t\t// not a failure case\n\t\t\t}\n\t\t}\n\t\tif (typeof pluginDescription.activationEvents === 'undefined') {\n\t\t\tnotices.push(nls.localize('pluginDescription.main3', \"properties `{0}` and `{1}` must both be specified or must both be omitted\", 'activationEvents', 'main'));\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\ninterface IPluginDescriptionMap {\n\t[pluginId: string]: IPluginDescription;\n}\nvar hasOwnProperty = Object.hasOwnProperty;\nlet schemaRegistry = <JSONContributionRegistry.IJSONContributionRegistry>Registry.as(JSONContributionRegistry.Extensions.JSONContribution);\n\nexport interface IExtensionPointUser<T> {\n\tdescription: IPluginDescription;\n\tvalue: T;\n\tcollector: IMessageCollector;\n}\n\nexport interface IExtensionPointHandler<T> {\n\t(extensions:IExtensionPointUser<T>[]): void;\n}\n\nexport interface IExtensionPoint<T> {\n\tname: string;\n\tsetHandler(handler: IExtensionPointHandler<T>): void;\n}\n\nexport interface IPluginsRegistry {\n\tregisterPlugins(pluginDescriptions: IPluginDescription[]): void;\n\n\tgetPluginDescriptionsForActivationEvent(activationEvent:string): IPluginDescription[];\n\tgetAllPluginDescriptions(): IPluginDescription[];\n\tgetPluginDescription(pluginId:string): IPluginDescription;\n\n\tregisterOneTimeActivationEventListener(activationEvent: string, listener:IActivationEventListener): void;\n\ttriggerActivationEventListeners(activationEvent:string): void;\n\n\tregisterExtensionPoint<T>(extensionPoint:string, jsonSchema: IJSONSchema): IExtensionPoint<T>;\n\thandleExtensionPoints(messageHandler:IMessageHandler): void;\n}\n\nclass ExtensionPoint<T> implements IExtensionPoint<T> {\n\n\tpublic name:string;\n\tprivate _registry: PluginsRegistryImpl;\n\tprivate _handler: IExtensionPointHandler<T>;\n\tprivate _collector: IPluginsMessageCollector;\n\n\tconstructor(name:string, registry: PluginsRegistryImpl) {\n\t\tthis.name = name;\n\t\tthis._registry = registry;\n\t\tthis._handler = null;\n\t\tthis._collector = null;\n\t}\n\n\tsetHandler(handler: IExtensionPointHandler<T>): void {\n\t\tif (this._handler) {\n\t\t\tthrow new Error('Handler already set!');\n\t\t}\n\t\tthis._handler = handler;\n\t\tthis._handle();\n\t}\n\n\thandle(collector:IPluginsMessageCollector): void {\n\t\tthis._collector = collector;\n\t\tthis._handle();\n\t}\n\n\tprivate _handle(): void {\n\t\tif (!this._handler || !this._collector) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._registry.registerPointListener(this.name, (descriptions: IPluginDescription[]) => {\n\t\t\tlet users = descriptions.map((desc) => {\n\t\t\t\treturn {\n\t\t\t\t\tdescription: desc,\n\t\t\t\t\tvalue: desc.contributes[this.name],\n\t\t\t\t\tcollector: this._collector.scopeTo(desc.extensionFolderPath)\n\t\t\t\t};\n\t\t\t});\n\t\t\tthis._handler(users);\n\t\t});\n\t}\n}\n\ninterface IPointListenerEntry {\n\textensionPoint: string;\n\tlistener: IPointListener;\n}\n\nclass PluginsRegistryImpl implements IPluginsRegistry {\n\n\tprivate _pluginsMap: IPluginDescriptionMap;\n\tprivate _pluginsArr: IPluginDescription[];\n\tprivate _activationMap: {[activationEvent:string]:IPluginDescription[];};\n\tprivate _pointListeners: IPointListenerEntry[];\n\tprivate _oneTimeActivationEventListeners: { [activationEvent:string]: IActivationEventListener[]; }\n\tprivate _extensionPoints: { [extPoint: string]: ExtensionPoint<any>; };\n\n\tconstructor() {\n\t\tthis._pluginsMap = {};\n\t\tthis._pluginsArr = [];\n\t\tthis._activationMap = {};\n\t\tthis._pointListeners = [];\n\t\tthis._extensionPoints = {};\n\t\tthis._oneTimeActivationEventListeners = {};\n\t}\n\n\tpublic registerPointListener(point: string, handler: IPointListener): void {\n\t\tlet entry = {\n\t\t\textensionPoint: point,\n\t\t\tlistener: handler\n\t\t};\n\t\tthis._pointListeners.push(entry);\n\t\tthis._triggerPointListener(entry, PluginsRegistryImpl._filterWithExtPoint(this.getAllPluginDescriptions(), point));\n\t}\n\n\tpublic registerExtensionPoint<T>(extensionPoint:string, jsonSchema: IJSONSchema): IExtensionPoint<T> {\n\t\tif (hasOwnProperty.call(this._extensionPoints, extensionPoint)) {\n\t\t\tthrow new Error('Duplicate extension point: ' + extensionPoint);\n\t\t}\n\t\tlet result = new ExtensionPoint<T>(extensionPoint, this);\n\t\tthis._extensionPoints[extensionPoint] = result;\n\n\t\t(<any>schema).properties.contributes.properties[extensionPoint] = jsonSchema;\n\t\tschemaRegistry.registerSchema(schemaId, schema);\n\n\t\treturn result;\n\t}\n\n\tpublic handleExtensionPoints(messageHandler:IMessageHandler): void {\n\t\tvar collector = new PluginsMessageForwarder(messageHandler);\n\n\t\tObject.keys(this._extensionPoints).forEach((extensionPointName) => {\n\t\t\tthis._extensionPoints[extensionPointName].handle(collector);\n\t\t});\n\t}\n\n\tprivate _triggerPointListener(handler: IPointListenerEntry, desc: IPluginDescription[]): void {\n\t\t// console.log('_triggerPointListeners: ' + desc.length + ' OF ' + handler.extensionPoint);\n\t\tif (!desc || desc.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\ttry {\n\t\t\thandler.listener(desc);\n\t\t} catch(e) {\n\t\t\tErrors.onUnexpectedError(e);\n\t\t}\n\t}\n\n\tpublic registerPlugins(pluginDescriptions: IPluginDescription[]): void {\n\t\tfor (let i = 0, len = pluginDescriptions.length; i < len; i++) {\n\t\t\tlet pluginDescription = pluginDescriptions[i];\n\n\t\t\tif (hasOwnProperty.call(this._pluginsMap, pluginDescription.id)) {\n\t\t\t\t// No overwriting allowed!\n\t\t\t\tconsole.error('Plugin `' + pluginDescription.id + '` is already registered');\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tthis._pluginsMap[pluginDescription.id] = pluginDescription;\n\t\t\tthis._pluginsArr.push(pluginDescription);\n\n\t\t\tif (Array.isArray(pluginDescription.activationEvents)) {\n\t\t\t\tfor (let j = 0, lenJ = pluginDescription.activationEvents.length; j < lenJ; j++) {\n\t\t\t\t\tlet activationEvent = pluginDescription.activationEvents[j];\n\t\t\t\t\tthis._activationMap[activationEvent] = this._activationMap[activationEvent] || [];\n\t\t\t\t\tthis._activationMap[activationEvent].push(pluginDescription);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0, len = this._pointListeners.length; i < len; i++) {\n\t\t\tlet listenerEntry = this._pointListeners[i];\n\t\t\tlet descriptions = PluginsRegistryImpl._filterWithExtPoint(pluginDescriptions, listenerEntry.extensionPoint);\n\t\t\tthis._triggerPointListener(listenerEntry, descriptions);\n\t\t}\n\t}\n\n\tprivate static _filterWithExtPoint(input: IPluginDescription[], point: string): IPluginDescription[] {\n\t\treturn input.filter((desc) => {\n\t\t\treturn (desc.contributes && hasOwnProperty.call(desc.contributes, point));\n\t\t});\n\t}\n\n\tpublic getPluginDescriptionsForActivationEvent(activationEvent:string): IPluginDescription[] {\n\t\tif (!hasOwnProperty.call(this._activationMap, activationEvent)) {\n\t\t\treturn [];\n\t\t}\n\t\treturn this._activationMap[activationEvent].slice(0);\n\t}\n\n\tpublic getAllPluginDescriptions(): IPluginDescription[] {\n\t\treturn this._pluginsArr.slice(0);\n\t}\n\n\tpublic getPluginDescription(pluginId:string): IPluginDescription {\n\t\tif (!hasOwnProperty.call(this._pluginsMap, pluginId)) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this._pluginsMap[pluginId];\n\t}\n\n\tpublic registerOneTimeActivationEventListener(activationEvent: string, listener:IActivationEventListener): void {\n\t\tif (!hasOwnProperty.call(this._oneTimeActivationEventListeners, activationEvent)) {\n\t\t\tthis._oneTimeActivationEventListeners[activationEvent] = [];\n\t\t}\n\t\tthis._oneTimeActivationEventListeners[activationEvent].push(listener);\n\t}\n\n\tpublic triggerActivationEventListeners(activationEvent:string): void {\n\t\tif (hasOwnProperty.call(this._oneTimeActivationEventListeners, activationEvent)) {\n\t\t\tvar listeners = this._oneTimeActivationEventListeners[activationEvent];\n\t\t\tdelete this._oneTimeActivationEventListeners[activationEvent];\n\n\t\t\tfor (let i = 0, len = listeners.length; i < len; i++) {\n\t\t\t\tlet listener = listeners[i];\n\t\t\t\ttry {\n\t\t\t\t\tlistener();\n\t\t\t\t} catch(e) {\n\t\t\t\t\tErrors.onUnexpectedError(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nfunction _isStringArray(arr: string[]): boolean {\n\tif (!Array.isArray(arr)) {\n\t\treturn false;\n\t}\n\tfor (var i = 0, len = arr.length; i < len; i++) {\n\t\tif (typeof arr[i] !== 'string') {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nvar Extensions = {\n\tPluginsRegistry: 'PluginsRegistry'\n};\nRegistry.add(Extensions.PluginsRegistry, new PluginsRegistryImpl());\nexport var PluginsRegistry:IPluginsRegistry = Registry.as(Extensions.PluginsRegistry);\n\nvar schemaId = 'local://schemas/vscode-extension';\nvar schema : IJSONSchema = {\n\tdefault: {\n\t\t'name': '{{name}}',\n\t\t'description': '{{description}}',\n\t\t'author': '{{author}}',\n\t\t'version': '{{1.0.0}}',\n\t\t'main': '{{pathToMain}}',\n\t\t'dependencies': {}\n\t},\n\tproperties: {\n\t\t// engines: {\n\t\t// \trequired: [ 'vscode' ],\n\t\t// \tproperties: {\n\t\t// \t\t'vscode': {\n\t\t// \t\t\ttype: 'string',\n\t\t// \t\t\tdescription: nls.localize('vscode.extension.engines.vscode', 'Specifies that this package only runs inside VSCode of the given version.'),\n\t\t// \t\t}\n\t\t// \t}\n\t\t// },\n\t\tdisplayName: {\n\t\t\tdescription: nls.localize('vscode.extension.displayName', 'The display name for the extension used in the VS Code gallery.'),\n\t\t\ttype: 'string'\n\t\t},\n\t\tcategories : {\n\t\t\tdescription: nls.localize('vscode.extension.categories', 'The categories used by the VS Code gallery to categorize the extension.'),\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\ttype: 'string',\n\t\t\t\tenum: ['Languages', 'Snippets', 'Linters', 'Themes', 'Debuggers', 'Other']\n\t\t\t}\n\t\t},\n\t\tgalleryBanner: {\n\t\t\ttype: 'object',\n\t\t\tdescription: nls.localize('vscode.extension.galleryBanner', 'Banner used in the VS Code marketplace.'),\n\t\t\tproperties: {\n\t\t\t\tcolor: {\n\t\t\t\t\tdescription: nls.localize('vscode.extension.galleryBanner.color', 'The banner color on the VS Code marketplace page header.'),\n\t\t\t\t\ttype: 'string'\n\t\t\t\t},\n\t\t\t\ttheme: {\n\t\t\t\t\tdescription: nls.localize('vscode.extension.galleryBanner.theme', 'The color theme for the font used in the banner.'),\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tenum: ['dark', 'light']\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tpublisher: {\n\t\t\tdescription: nls.localize('vscode.extension.publisher', 'The publisher of the VS Code extension.'),\n\t\t\ttype: 'string'\n\t\t},\n\t\tactivationEvents: {\n\t\t\tdescription: nls.localize('vscode.extension.activationEvents', 'Activation events for the VS Code extension.'),\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\ttype: 'string'\n\t\t\t}\n\t\t},\n\t\textensionDependencies: {\n\t\t\tdescription: nls.localize('vscode.extension.extensionDependencies', 'Dependencies to other extensions. The id of an extension is always ${publisher}.${name}. For example: vscode.csharp.'),\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\ttype: 'string'\n\t\t\t}\n\t\t},\n\t\tscripts: {\n\t\t\ttype: 'object',\n\t\t\tproperties: {\n\t\t\t\t'vscode:prepublish': {\n\t\t\t\t\tdescription: nls.localize('vscode.extension.scripts.prepublish', 'Script executed before the package is published as a VS Code extension.'),\n\t\t\t\t\ttype: 'string'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tcontributes: {\n\t\t\tdescription: nls.localize('vscode.extension.contributes', 'All contributions of the VS Code extension represented by this package.'),\n\t\t\ttype: 'object',\n\t\t\tproperties: {\n\t\t\t\t// extensions will fill in\n\t\t\t},\n\t\t\tdefault: { }\n\t\t},\n\t\tisAMD: {\n\t\t\tdescription: nls.localize('vscode.extension.isAMD', 'Indicated whether VS Code should load your code as AMD or CommonJS. Default: false.'),\n\t\t\ttype: 'boolean'\n\t\t}\n\t}\n}\n\nschemaRegistry.registerSchema(schemaId, schema);\nschemaRegistry.addSchemaFileAssociation('/package.json', schemaId);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport nls = require('vs/nls');\nimport {IPluginDescription, IPluginService, IMessage, IPointListener, IActivationEventListener, IPluginStatus } from 'vs/platform/plugins/common/plugins';\nimport WinJS = require('vs/base/common/winjs.base');\nimport {IDisposable} from 'vs/base/common/lifecycle';\nimport Errors = require('vs/base/common/errors');\nimport {IInstantiationService} from 'vs/platform/instantiation/common/instantiation';\nimport {PluginsRegistry} from 'vs/platform/plugins/common/pluginsRegistry';\nimport Severity from 'vs/base/common/severity';\n\nvar hasOwnProperty = Object.hasOwnProperty;\nvar global = this;\n\nexport interface IPluginExports {\n\t// $isPluginExports:boolean;\n}\n\nexport interface IPluginModule {\n\tactivate(ctx: IPluginContext): WinJS.TPromise<IPluginExports>;\n\tdeactivate(): void;\n}\n\nexport interface IPluginContext {\n\tsubscriptions: IDisposable[];\n\tworkspaceState: IPluginMemento;\n\tglobalState: IPluginMemento;\n\textensionPath: string;\n\tasAbsolutePath(relativePath:string): string;\n}\n\nexport interface IPluginMemento {\n\tget<T>(key: string, defaultValue: T): T;\n\tupdate(key: string, value: any): Thenable<boolean>;\n}\n\nexport class ActivatedPlugin {\n\tactivationFailed: boolean;\n\tmodule: IPluginModule;\n\texports: IPluginExports;\n\tsubscriptions: IDisposable[];\n\n\tconstructor(activationFailed: boolean, module: IPluginModule, exports: IPluginExports, subscriptions: IDisposable[]) {\n\t\tthis.activationFailed = activationFailed\n\t\tthis.module = module;\n\t\tthis.exports = exports;\n\t\tthis.subscriptions = subscriptions;\n\t}\n}\n\nexport interface IActivatedPluginMap {\n\t[pluginId: string]: ActivatedPlugin;\n}\n\ninterface IActivatingPluginMap {\n\t[pluginId: string]: WinJS.TPromise<IPluginExports>;\n}\n\nexport abstract class AbstractPluginService implements IPluginService {\n\tpublic serviceId = IPluginService;\n\n\tprivate activatingPlugins: IActivatingPluginMap;\n\tprotected activatedPlugins: IActivatedPluginMap;\n\tprivate _onReady: WinJS.TPromise<boolean>;\n\tprivate _onReadyC: (v: boolean) => void;\n\n\tconstructor(isReadyByDefault:boolean) {\n\t\tif (isReadyByDefault) {\n\t\t\tthis._onReady = WinJS.TPromise.as(true);\n\t\t\tthis._onReadyC = (v: boolean) => { /*No-op*/ };\n\t\t} else {\n\t\t\tthis._onReady = new WinJS.TPromise<boolean>((c, e, p) => {\n\t\t\t\tthis._onReadyC = c;\n\t\t\t}, () => {\n\t\t\t\tconsole.warn('You should really not try to cancel this ready promise!');\n\t\t\t});\n\t\t}\n\t\tthis.activatingPlugins = {};\n\t\tthis.activatedPlugins = {};\n\t}\n\n\tpublic abstract deactivate(pluginId:string): void;\n\tprotected abstract _showMessage(severity:Severity, message:string): void;\n\n\tprotected showMessage(severity:Severity, source:string, message:string): void {\n\t\tthis._showMessage(severity, ( source ? '[' + source + ']: ' : '') + message);\n\t}\n\n\tpublic registrationDone(messages: IMessage[]): void {\n\t\tmessages.forEach((entry) => {\n\t\t\tthis.showMessage(entry.type, entry.source, entry.message);\n\t\t});\n\t\tthis._onReadyC(true);\n\t}\n\n\tpublic registerOneTimeActivationEventListener(activationEvent: string, listener: IActivationEventListener): void {\n\t\tPluginsRegistry.registerOneTimeActivationEventListener(activationEvent, listener);\n\t}\n\n\tpublic onReady(): WinJS.TPromise<boolean> {\n\t\treturn this._onReady;\n\t}\n\n\tpublic get(pluginId: string): IPluginExports {\n\t\tif (!hasOwnProperty.call(this.activatedPlugins, pluginId)) {\n\t\t\tthrow new Error('Plugin `' + pluginId + '` is not known or not activated');\n\t\t}\n\t\treturn this.activatedPlugins[pluginId].exports;\n\t}\n\n\tpublic getPluginsStatus(): { [id: string]: IPluginStatus } {\n\t\treturn null;\n\t}\n\n\tpublic isActivated(pluginId:string): boolean {\n\t\treturn hasOwnProperty.call(this.activatedPlugins, pluginId);\n\t}\n\n\tpublic activateByEvent(activationEvent: string): WinJS.TPromise<void> {\n\t\treturn this._onReady.then(() => {\n\t\t\tPluginsRegistry.triggerActivationEventListeners(activationEvent);\n\t\t\tlet activatePlugins = PluginsRegistry.getPluginDescriptionsForActivationEvent(activationEvent);\n\t\t\treturn this._activatePlugins(activatePlugins, 0);\n\t\t});\n\t}\n\n\tpublic activateAndGet(pluginId: string): WinJS.TPromise<IPluginExports> {\n\t\treturn this._onReady.then(() => {\n\t\t\tvar desc = PluginsRegistry.getPluginDescription(pluginId);\n\t\t\tif (!desc) {\n\t\t\t\tthrow new Error('Plugin `' + pluginId + '` is not known');\n\t\t\t}\n\n\t\t\treturn this._activatePlugins([desc], 0).then(() => {\n\t\t\t\treturn this.get(pluginId);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Handle semantics related to dependencies for `currentPlugin`.\n\t * semantics: `redExtensions` must wait for `greenExtensions`.\n\t */\n\tprivate _handleActivateRequest(currentPlugin:IPluginDescription, greenExtensions: { [id:string]: IPluginDescription; }, redExtensions: IPluginDescription[]): void {\n\t\tlet depIds = (typeof currentPlugin.extensionDependencies === 'undefined' ? [] : currentPlugin.extensionDependencies);\n\t\tlet currentPluginGetsGreenLight = true;\n\n\t\tfor (let j = 0, lenJ = depIds.length; j < lenJ; j++) {\n\t\t\tlet depId = depIds[j];\n\t\t\tlet depDesc = PluginsRegistry.getPluginDescription(depId);\n\n\t\t\tif (!depDesc) {\n\t\t\t\t// Error condition 1: unknown dependency\n\t\t\t\tthis._showMessage(Severity.Error, nls.localize('unknownDep', \"Extension `{1}` failed to activate. Reason: unknown dependency `{0}`.\", depId, currentPlugin.id));\n\t\t\t\tthis.activatedPlugins[currentPlugin.id] = new ActivatedPlugin(true, { activate: undefined, deactivate: undefined }, {}, []);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (hasOwnProperty.call(this.activatedPlugins, depId)) {\n\t\t\t\tlet dep = this.activatedPlugins[depId];\n\t\t\t\tif (dep.activationFailed) {\n\t\t\t\t\t// Error condition 2: a dependency has already failed activation\n\t\t\t\t\tthis._showMessage(Severity.Error, nls.localize('failedDep', \"Extension `{1}` failed to activate. Reason: dependency `{0}` failed to activate.\", depId, currentPlugin.id));\n\t\t\t\t\tthis.activatedPlugins[currentPlugin.id] = new ActivatedPlugin(true, { activate: undefined, deactivate: undefined }, {}, []);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// must first wait for the dependency to activate\n\t\t\t\tcurrentPluginGetsGreenLight = false;\n\t\t\t\tgreenExtensions[depId] = depDesc;\n\t\t\t}\n\t\t}\n\n\t\tif (currentPluginGetsGreenLight) {\n\t\t\tgreenExtensions[currentPlugin.id] = currentPlugin;\n\t\t} else {\n\t\t\tredExtensions.push(currentPlugin);\n\t\t}\n\t}\n\n\tprivate _activatePlugins(pluginDescriptions: IPluginDescription[], recursionLevel:number): WinJS.TPromise<void> {\n\t\t// console.log(recursionLevel, '_activatePlugins: ', pluginDescriptions.map(p => p.id));\n\t\tif (pluginDescriptions.length === 0) {\n\t\t\treturn WinJS.TPromise.as(void 0);\n\t\t}\n\n\t\tpluginDescriptions = pluginDescriptions.filter((p) => !hasOwnProperty.call(this.activatedPlugins, p.id));\n\t\tif (pluginDescriptions.length === 0) {\n\t\t\treturn WinJS.TPromise.as(void 0);\n\t\t}\n\n\t\tif (recursionLevel > 10) {\n\t\t\t// More than 10 dependencies deep => most likely a dependency loop\n\t\t\tfor (let i = 0, len = pluginDescriptions.length; i < len; i++) {\n\t\t\t\t// Error condition 3: dependency loop\n\t\t\t\tthis._showMessage(Severity.Error, nls.localize('failedDep', \"Extension `{0}` failed to activate. Reason: more than 10 levels of dependencies (most likely a dependency loop).\", pluginDescriptions[i].id));\n\t\t\t\tthis.activatedPlugins[pluginDescriptions[i].id] = new ActivatedPlugin(true, { activate: undefined, deactivate: undefined }, {}, []);\n\t\t\t}\n\t\t\treturn WinJS.TPromise.as(void 0);\n\t\t}\n\n\t\tlet greenMap: { [id:string]: IPluginDescription; } = Object.create(null),\n\t\t\tred: IPluginDescription[] = [];\n\n\t\tfor (let i = 0, len = pluginDescriptions.length; i < len; i++) {\n\t\t\tthis._handleActivateRequest(pluginDescriptions[i], greenMap, red);\n\t\t}\n\n\t\t// Make sure no red is also green\n\t\tfor (let i = 0, len = red.length; i < len; i++) {\n\t\t\tif (greenMap[red[i].id]) {\n\t\t\t\tdelete greenMap[red[i].id];\n\t\t\t}\n\t\t}\n\n\t\tlet green = Object.keys(greenMap).map(id => greenMap[id]);\n\n\t\t// console.log('greenExtensions: ', green.map(p => p.id));\n\t\t// console.log('redExtensions: ', red.map(p => p.id));\n\n\t\tif (red.length === 0) {\n\t\t\t// Finally reached only leafs!\n\t\t\treturn WinJS.TPromise.join(green.map((p) => this._activatePlugin(p))).then(_ => void 0);\n\t\t}\n\n\t\treturn this._activatePlugins(green, recursionLevel + 1).then(_ => {\n\t\t\treturn this._activatePlugins(red, recursionLevel + 1);\n\t\t});\n\t}\n\n\tprotected _activatePlugin(pluginDescription: IPluginDescription): WinJS.TPromise<IPluginExports> {\n\t\tif (hasOwnProperty.call(this.activatedPlugins, pluginDescription.id)) {\n\t\t\treturn WinJS.TPromise.as(this.activatedPlugins[pluginDescription.id].exports);\n\t\t}\n\n\t\tif (hasOwnProperty.call(this.activatingPlugins, pluginDescription.id)) {\n\t\t\treturn this.activatingPlugins[pluginDescription.id];\n\t\t}\n\n\t\tthis.activatingPlugins[pluginDescription.id] = this._actualActivatePlugin(pluginDescription).then(null, (err) => {\n\t\t\tthis._showMessage(Severity.Error, nls.localize('activationError', \"Activating extension `{0}` failed: {1}.\", pluginDescription.id, err.message));\n\t\t\tconsole.error('Activating extension `' + pluginDescription.id + '` failed: ', err.message);\n\t\t\tconsole.log('Here is the error stack: ', err.stack);\n\t\t\t// Treat the plugin as being empty\n\t\t\treturn new ActivatedPlugin(true, { activate: undefined, deactivate: undefined }, {}, []);\n\t\t}).then((x) => {\n\t\t\tthis.activatedPlugins[pluginDescription.id] = x;\n\t\t\tdelete this.activatingPlugins[pluginDescription.id];\n\t\t\treturn x.exports;\n\t\t});\n\n\t\treturn this.activatingPlugins[pluginDescription.id];\n\t}\n\n\tprotected _actualActivatePlugin(pluginDescription: IPluginDescription): WinJS.TPromise<ActivatedPlugin> {\n\t\tif (!pluginDescription.main) {\n\t\t\t// Treat the plugin as being empty => NOT AN ERROR CASE\n\t\t\treturn WinJS.TPromise.as(new ActivatedPlugin(false, { activate: undefined, deactivate: undefined }, {}, []));\n\t\t}\n\t\treturn this._loadPluginModule(pluginDescription).then((pluginModule) => {\n\t\t\treturn this._loadPluginContext(pluginDescription).then(context => {\n\t\t\t\treturn AbstractPluginService._callActivate(pluginModule, context);\n\t\t\t});\n\t\t});\n\t}\n\n\tprotected _loadPluginModule(pluginDescription: IPluginDescription): WinJS.TPromise<IPluginModule> {\n\t\treturn loadAMDModule<IPluginModule>(pluginDescription.main);\n\t}\n\n\tprotected _loadPluginContext(pluginDescription: IPluginDescription): WinJS.TPromise<IPluginContext> {\n\t\treturn WinJS.TPromise.as(undefined);\n\t}\n\n\tprivate static _callActivate(pluginModule: IPluginModule, context: IPluginContext): WinJS.TPromise<ActivatedPlugin> {\n\t\t// Make sure the plugin's surface is not undefined\n\t\tpluginModule = pluginModule || {\n\t\t\tactivate: undefined,\n\t\t\tdeactivate: undefined\n\t\t};\n\n\t\t// let subscriptions:IDisposable[] = [];\n\t\treturn this._callActivateOptional(pluginModule, context).then((pluginExports) => {\n\t\t\treturn new ActivatedPlugin(false, pluginModule, pluginExports, context.subscriptions);\n\t\t});\n\t}\n\n\tprivate static _callActivateOptional(pluginModule: IPluginModule, context: IPluginContext): WinJS.TPromise<IPluginExports> {\n\t\tif (typeof pluginModule.activate === 'function') {\n\t\t\ttry {\n\t\t\t\treturn WinJS.TPromise.as(pluginModule.activate.apply(global, [context]));\n\t\t\t} catch (err) {\n\t\t\t\treturn WinJS.TPromise.wrapError(err);\n\t\t\t}\n\t\t} else {\n\t\t\t// No activate found => the module is the plugin's exports\n\t\t\treturn WinJS.TPromise.as<IPluginExports>(pluginModule);\n\t\t}\n\t}\n}\n\nexport function loadAMDModule<T>(moduleId: string): WinJS.TPromise<T> {\n\treturn new WinJS.TPromise<T>((c, e, p) => {\n\t\trequire([moduleId], (r: T) => {\n\t\t\tc(r);\n\t\t}, e);\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport nls = require('vs/nls');\nimport {IPluginDescription, IPointListener, IActivationEventListener, IMessage} from 'vs/platform/plugins/common/plugins';\nimport {isValidPluginDescription as baseIsValidPluginDescription} from 'vs/platform/plugins/common/pluginsRegistry';\nimport * as semver from 'semver';\n\nexport interface IParsedVersion {\n\thasCaret: boolean;\n\tmajorBase: number;\n\tmajorMustEqual: boolean;\n\tminorBase: number;\n\tminorMustEqual: boolean;\n\tpatchBase: number;\n\tpatchMustEqual: boolean;\n\tpreRelease: string;\n}\n\nexport interface INormalizedVersion {\n\tmajorBase: number;\n\tmajorMustEqual: boolean;\n\tminorBase: number;\n\tminorMustEqual: boolean;\n\tpatchBase: number;\n\tpatchMustEqual: boolean;\n}\n\nconst VERSION_REGEXP = /^(\\^)?((\\d+)|x)\\.((\\d+)|x)\\.((\\d+)|x)(\\-.*)?$/;\n\nexport function isValidVersionStr(version:string): boolean {\n\tversion = version.trim();\n\treturn (version === '*' || VERSION_REGEXP.test(version));\n}\n\nexport function parseVersion(version:string): IParsedVersion {\n\tif (!isValidVersionStr(version)) {\n\t\treturn null;\n\t}\n\n\tversion = version.trim();\n\n\tif (version === '*') {\n\t\treturn {\n\t\t\thasCaret: false,\n\t\t\tmajorBase: 0,\n\t\t\tmajorMustEqual: false,\n\t\t\tminorBase: 0,\n\t\t\tminorMustEqual: false,\n\t\t\tpatchBase: 0,\n\t\t\tpatchMustEqual: false,\n\t\t\tpreRelease: null\n\t\t};\n\t}\n\n\tlet m = version.match(VERSION_REGEXP);\n\treturn {\n\t\thasCaret: !!m[1],\n\t\tmajorBase: m[2] === 'x' ? 0 : parseInt(m[2], 10),\n\t\tmajorMustEqual: (m[2] === 'x' ? false : true),\n\t\tminorBase: m[4] === 'x' ? 0 : parseInt(m[4], 10),\n\t\tminorMustEqual: (m[4] === 'x' ? false : true),\n\t\tpatchBase: m[6] === 'x' ? 0 : parseInt(m[6], 10),\n\t\tpatchMustEqual: (m[6] === 'x' ? false : true),\n\t\tpreRelease: m[8] || null\n\t};\n}\n\nexport function normalizeVersion(version: IParsedVersion): INormalizedVersion {\n\tif (!version) {\n\t\treturn null;\n\t}\n\n\tlet majorBase = version.majorBase,\n\t\tmajorMustEqual = version.majorMustEqual,\n\t\tminorBase = version.minorBase,\n\t\tminorMustEqual = version.minorMustEqual,\n\t\tpatchBase = version.patchBase,\n\t\tpatchMustEqual = version.patchMustEqual;\n\n\tif (version.hasCaret) {\n\t\tif (majorBase === 0) {\n\t\t\tpatchMustEqual = false;\n\t\t} else {\n\t\t\tminorMustEqual = false;\n\t\t\tpatchMustEqual = false;\n\t\t}\n\t}\n\n\treturn {\n\t\tmajorBase: majorBase,\n\t\tmajorMustEqual: majorMustEqual,\n\t\tminorBase: minorBase,\n\t\tminorMustEqual: minorMustEqual,\n\t\tpatchBase: patchBase,\n\t\tpatchMustEqual: patchMustEqual\n\t};\n}\n\nexport function isValidVersion(_version:string|INormalizedVersion, _desiredVersion:string|INormalizedVersion): boolean {\n\tlet version:INormalizedVersion;\n\tif (typeof _version === 'string') {\n\t\tversion = normalizeVersion(parseVersion(_version));\n\t} else {\n\t\tversion = _version;\n\t}\n\n\tlet desiredVersion:INormalizedVersion;\n\tif (typeof _desiredVersion === 'string') {\n\t\tdesiredVersion = normalizeVersion(parseVersion(_desiredVersion));\n\t} else {\n\t\tdesiredVersion = _desiredVersion;\n\t}\n\n\tif (!version || !desiredVersion) {\n\t\treturn false;\n\t}\n\n\tif (version.majorBase < desiredVersion.majorBase) {\n\t\t// smaller major version\n\t\treturn false;\n\t}\n\n\tif (version.majorBase > desiredVersion.majorBase) {\n\t\t// higher major version\n\t\treturn (!desiredVersion.majorMustEqual);\n\t}\n\n\t// at this point, majorBase are equal\n\n\tif (version.minorBase < desiredVersion.minorBase) {\n\t\t// smaller minor version\n\t\treturn false;\n\t}\n\n\tif (version.minorBase > desiredVersion.minorBase) {\n\t\t// higher minor version\n\t\treturn (!desiredVersion.minorMustEqual);\n\t}\n\n\t// at this point, minorBase are equal\n\n\tif (version.patchBase < desiredVersion.patchBase) {\n\t\t// smaller patch version\n\t\treturn false;\n\t}\n\n\tif (version.patchBase > desiredVersion.patchBase) {\n\t\t// higher patch version\n\t\treturn (!desiredVersion.patchMustEqual);\n\t}\n\n\t// at this point, patchBase are equal\n\treturn true;\n}\n\nexport interface IReducedExtensionDescription {\n\tisBuiltin: boolean;\n\tengines: {\n\t\tvscode: string;\n\t};\n\tmain?: string;\n}\n\nexport function isValidExtensionVersion(version: string, extensionDesc:IReducedExtensionDescription, notices:string[]): boolean {\n\n\tif (extensionDesc.isBuiltin || typeof extensionDesc.main === 'undefined') {\n\t\t// No version check for builtin or declarative extensions\n\t\treturn true;\n\t}\n\n\tlet desiredVersion = normalizeVersion(parseVersion(extensionDesc.engines.vscode));\n\tif (!desiredVersion) {\n\t\tnotices.push(nls.localize('versionSyntax', \"Could not parse `engines.vscode` value {0}. Please use, for example: ^0.10.0, ^1.2.3, ^0.11.0, ^0.10.x, etc.\", extensionDesc.engines.vscode));\n\t\treturn false;\n\t}\n\n\t// enforce that a breaking API version is specified.\n\t// for 0.X.Y, that means up to 0.X must be specified\n\t// otherwise for Z.X.Y, that means Z must be specified\n\tif (desiredVersion.majorBase === 0) {\n\t\t// force that major and minor must be specific\n\t\tif (!desiredVersion.majorMustEqual || !desiredVersion.minorMustEqual) {\n\t\t\tnotices.push(nls.localize('versionSpecificity1', \"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions before 1.0.0, please define at a minimum the major and minor desired version. E.g. ^0.10.0, 0.10.x, 0.11.0, etc.\", extensionDesc.engines.vscode));\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\t// force that major must be specific\n\t\tif (!desiredVersion.majorMustEqual) {\n\t\t\tnotices.push(nls.localize('versionSpecificity2', \"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions after 1.0.0, please define at a minimum the major desired version. E.g. ^1.10.0, 1.10.x, 1.x.x, 2.x.x, etc.\", extensionDesc.engines.vscode));\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tif (!isValidVersion(version, desiredVersion)) {\n\t\tnotices.push(nls.localize('versionMismatch', \"Extension is not version compatible with VSCode. VSCode version: {0}, extension's declared engine: {1}\", version, extensionDesc.engines.vscode));\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\nexport function isValidPluginDescription(version: string, extensionFolderPath: string, pluginDescription:IPluginDescription, notices:string[]): boolean {\n\n\tif (!baseIsValidPluginDescription(extensionFolderPath, pluginDescription, notices)) {\n\t\treturn false;\n\t}\n\n\tif (!semver.valid(pluginDescription.version)) {\n\t\tnotices.push(nls.localize('notSemver', \"Extension version is not semver compatible.\"));\n\t\treturn false;\n\t}\n\n\treturn isValidExtensionVersion(version, pluginDescription, notices);\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport URI from 'vs/base/common/uri';\nimport http = require('vs/base/common/http');\nimport winjs = require('vs/base/common/winjs.base');\nimport {createDecorator, ServiceIdentifier} from 'vs/platform/instantiation/common/instantiation';\n\nexport var IRequestService = createDecorator<IRequestService>('requestService');\n\nexport interface IRequestService {\n\tserviceId : ServiceIdentifier<any>;\n\n\t/**\n\t * Wraps the call into WinJS.XHR to allow for mocking and telemetry. Use this instead\n\t * of calling WinJS.XHR directly.\n\t */\n\tmakeRequest(options:http.IXHROptions):winjs.TPromise<http.IXHRResponse>;\n\n\t/**\n\t * Executes a xhr request and expects a chunked response. The value callback of the\n\t * returned promise receives an array of <code>IDataChunk</code> containing all chuncks\n\t * recevied. The progress callback receives an array of <code>IDataChunk</code> containing\n\t * the delta since the last progress callback.\n\t */\n\tmakeChunkedRequest(options:http.IXHROptions):winjs.TPromise<{request:http.IXHRResponse; chunks:http.IDataChunk[];}>;\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport URI from 'vs/base/common/uri';\nimport strings = require('vs/base/common/strings');\nimport Timer = require('vs/base/common/timer');\nimport Async = require('vs/base/common/async');\nimport http = require('vs/base/common/http');\nimport winjs = require('vs/base/common/winjs.base');\nimport objects = require('vs/base/common/objects');\nimport {IRequestService} from 'vs/platform/request/common/request';\nimport {ITelemetryService} from 'vs/platform/telemetry/common/telemetry';\nimport {IWorkspaceContextService} from 'vs/platform/workspace/common/workspace';\n\n/**\n * Simple IRequestService implementation to allow sharing of this service implementation\n * between different layers of the platform.\n */\nexport class BaseRequestService implements IRequestService {\n\tpublic serviceId = IRequestService;\n\tprivate _serviceMap:{[service:string]:string;};\n\tprivate _origin:string;\n\n\t/*protected*/ public _telemetryService:ITelemetryService;\n\n\tconstructor(contextService: IWorkspaceContextService, telemetryService?: ITelemetryService) {\n\t\tvar workspaceUri:string = null;\n\n\t\tvar contextService = contextService;\n\t\tvar workspace = contextService.getWorkspace();\n\t\tthis._serviceMap = (<any>workspace) || Object.create(null);\n\t\tthis._telemetryService = telemetryService;\n\n\t\tif (workspace) {\n\t\t\tworkspaceUri = strings.rtrim(workspace.resource.toString(), '/') + '/';\n\t\t}\n\n\t\tthis.computeOrigin(workspaceUri);\n\t}\n\n\tprivate computeOrigin(workspaceUri:string): void {\n\t\tif (workspaceUri) {\n\n\t\t\t// Find root server URL from configuration\n\t\t\tthis._origin = workspaceUri;\n\t\t\tvar urlPath = URI.parse(this._origin).path;\n\t\t\tif (urlPath && urlPath.length > 0) {\n\t\t\t\tthis._origin = this._origin.substring(0, this._origin.length - urlPath.length + 1);\n\t\t\t}\n\n\t\t\tif (!strings.endsWith(this._origin, '/')) {\n\t\t\t\tthis._origin += '/';\n\t\t\t}\n\t\t} else {\n\t\t\tthis._origin = '/'; // Configuration not provided, fallback to default\n\t\t}\n\t}\n\n\tprotected makeCrossOriginRequest(options:http.IXHROptions): winjs.TPromise<http.IXHRResponse> {\n\t\treturn null;\n\t}\n\n\tpublic makeRequest(options:http.IXHROptions):winjs.TPromise<http.IXHRResponse> {\n\t\tvar timer:Timer.ITimerEvent = Timer.nullEvent;\n\n\t\tvar isXhrRequestCORS = false;\n\n\t\tvar url = options.url;\n\t\tif (!url) {\n\t\t\tthrow new Error('IRequestService.makeRequest: Url is required');\n\t\t}\n\n\t\tif ((strings.startsWith(url, 'http://') || strings.startsWith(url, 'https://')) && this._origin && !strings.startsWith(url, this._origin)) {\n\t\t\tvar coPromise = this.makeCrossOriginRequest(options);\n\t\t\tif (coPromise) {\n\t\t\t\treturn coPromise;\n\t\t\t}\n\t\t\tisXhrRequestCORS = true;\n\t\t}\n\n\t\tvar xhrOptions = <winjs.IXHROptions> options;\n\n\t\tif (!isXhrRequestCORS) {\n\t\t\tvar additionalHeaders = {};\n\t\t\tif (this._telemetryService) {\n\t\t\t\tadditionalHeaders['X-TelemetrySession'] = this._telemetryService.getSessionId();\n\t\t\t};\n\t\t\tadditionalHeaders['X-Requested-With'] = 'XMLHttpRequest';\n\t\t\txhrOptions.headers = objects.mixin(xhrOptions.headers, additionalHeaders);\n\t\t}\n\n\t\tif (options.timeout) {\n\t\t\txhrOptions.customRequestInitializer = function(xhrRequest: XMLHttpRequest) {\n\t\t\t\txhrRequest.timeout = options.timeout;\n\t\t\t};\n\t\t}\n\n\n\t\treturn Async.always(winjs.xhr(xhrOptions),((xhr:XMLHttpRequest) => {\n\t\t\tif(timer.data) {\n\t\t\t\ttimer.data.status = xhr.status;\n\t\t\t}\n\t\t\ttimer.stop();\n\t\t}));\n\t}\n\n\tpublic makeChunkedRequest(options:http.IXHROptions):winjs.TPromise<{request:http.IXHRResponse; chunks:http.IDataChunk[];}> {\n\t\tvar from = 0,\n\t\t\tc:winjs.ValueCallback, e:winjs.ErrorCallback, p:winjs.ProgressCallback,\n\t\t\tcanceled = false;\n\n\t\treturn new winjs.TPromise<{request:XMLHttpRequest; chunks:http.IDataChunk[];}>((_c, _e, _p) => {\n\t\t\tc = _c; e = _e; p = _p;\n\t\t\tthis.makeRequest(options).done((request) => {\n\t\t\t\t\tvar ret = {\n\t\t\t\t\t\trequest: request,\n\t\t\t\t\t\tchunks: <http.IDataChunk[]>[]\n\t\t\t\t\t};\n\t\t\t\t\tfrom = http.parseChunkedData(request, ret.chunks, from);\n\t\t\t\t\tc(ret);\n\t\t\t\t},\n\t\t\t\t(err) => {\n\t\t\t\t\te(err);\n\t\t\t\t},\n\t\t\t\t(request:XMLHttpRequest) => {\n\t\t\t\t\t// This might fail in IE10 for b i g request. Leave it enabled\n\t\t\t\t\t// for now to see if and when it fails\n\t\t\t\t\t// if(request.readyState === 3) {\n\t\t\t\t\t//\tfrom = http.parseChunkedData(request, ret.chunks, from);\n\t\t\t\t\t// }\n\t\t\t\t}\n\t\t\t);\n\t\t}, () => {\n\t\t\tcanceled = true;\n\t\t});\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {PPromise} from 'vs/base/common/winjs.base';\nimport uri from 'vs/base/common/uri';\nimport glob = require('vs/base/common/glob');\nimport {IFilesConfiguration} from 'vs/platform/files/common/files';\nimport {createDecorator, ServiceIdentifier} from 'vs/platform/instantiation/common/instantiation';\n\nexport var ID = 'searchService';\n\nexport var ISearchService = createDecorator<ISearchService>(ID);\n/**\n * A service that enables to search for files or with in files.\n */\nexport interface ISearchService {\n\tserviceId: ServiceIdentifier<any>;\n\tsearch(query: ISearchQuery): PPromise<ISearchComplete, ISearchProgressItem>;\n}\n\nexport interface IQueryOptions {\n\trootResources?: uri[];\n\tfilePattern?: string;\n\texcludePattern?: glob.IExpression;\n\tincludePattern?: glob.IExpression;\n\tmaxResults?: number;\n\tfileEncoding?: string;\n\tmatchFuzzy?: boolean;\n}\n\nexport interface ISearchQuery extends IQueryOptions {\n\ttype: QueryType;\n\tcontentPattern?: IPatternInfo;\n}\n\nexport enum QueryType {\n\tFile = 1,\n\tText = 2\n}\n\nexport interface IPatternInfo {\n\tpattern: string;\n\tisRegExp?: boolean;\n\tisWordMatch?: boolean;\n\tisCaseSensitive?: boolean;\n}\n\nexport interface IFileMatch {\n\tresource?: uri;\n\tlineMatches?: ILineMatch[];\n}\n\nexport interface ILineMatch {\n\tpreview: string;\n\tlineNumber: number;\n\toffsetAndLengths: number[][];\n}\n\nexport interface IProgress {\n\ttotal?: number;\n\tworked?: number;\n}\n\nexport interface ISearchProgressItem extends IFileMatch, IProgress {\n\t// Marker interface to indicate the possible values for progress calls from the engine\n}\n\nexport interface ISearchComplete {\n\tlimitHit?: boolean;\n\tresults: IFileMatch[];\n}\n\n\n// ---- very simple implementation of the search model --------------------\n\nexport class FileMatch implements IFileMatch {\n\tpublic lineMatches: LineMatch[] = [];\n\tconstructor(public resource: uri) {\n\t\t// empty\n\t}\n}\n\nexport class LineMatch implements ILineMatch {\n\tconstructor(public preview: string, public lineNumber: number, public offsetAndLengths: number[][]) {\n\t\t// empty\n\t}\n}\n\nexport interface ISearchConfiguration extends IFilesConfiguration {\n\tsearch: {\n\t\texclude: glob.IExpression;\n\t},\n\tfilePicker: {\n\t\talternateFileNameMatching: boolean;\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {PropertyChangeEvent} from 'vs/base/common/events';\nimport {IEventEmitter} from 'vs/base/common/eventEmitter';\nimport {createDecorator, ServiceIdentifier} from 'vs/platform/instantiation/common/instantiation';\n\nexport var ID = 'storageService';\n\nexport var IStorageService = createDecorator<IStorageService>(ID);\n\nexport interface IStorageService extends IEventEmitter {\n\tserviceId: ServiceIdentifier<any>;\n\n\t/**\n\t * Store a string value under the given key to local storage.\n\t *\n\t * The optional scope argument allows to define the scope of the operation.\n\t */\n\tstore(key: string, value: any, scope?: StorageScope): void;\n\n\t/**\n\t * Swap the value of a stored element to one of the two provided\n\t * values and use the defaultValue if no element with the given key\n\t * exists.\n\t *\n\t * The optional scope argument allows to define the scope of the operation.\n\t */\n\tswap(key: string, valueA: any, valueB: any, scope?: StorageScope, defaultValue?: any): void;\n\n\t/**\n\t * Delete an element stored under the provided key from local storage.\n\t *\n\t * The optional scope argument allows to define the scope of the operation.\n\t */\n\tremove(key: string, scope?: StorageScope): void;\n\n\t/**\n\t * Retrieve an element stored with the given key from local storage. Use\n\t * the provided defaultValue if the element is null or undefined.\n\t *\n\t * The optional scope argument allows to define the scope of the operation.\n\t */\n\tget(key: string, scope?: StorageScope, defaultValue?: string): string;\n\n\t/**\n\t * Retrieve an element stored with the given key from local storage. Use\n\t * the provided defaultValue if the element is null or undefined. The element\n\t * will be converted to a number using parseInt with a base of 10.\n\t *\n\t * The optional scope argument allows to define the scope of the operation.\n\t */\n\tgetInteger(key: string, scope?: StorageScope, defaultValue?: number): number;\n\n\t/**\n\t * Retrieve an element stored with the given key from local storage. Use\n\t * the provided defaultValue if the element is null or undefined. The element\n\t * will be converted to a boolean.\n\t *\n\t * The optional scope argument allows to define the scope of the operation.\n\t */\n\tgetBoolean(key: string, scope?: StorageScope, defaultValue?: boolean): boolean;\n}\n\nexport namespace StorageEventType {\n\n\t/**\n\t * Event type for when a storage value is changed.\n\t */\n\texport const STORAGE = 'storage';\n};\n\n/**\n * Storage events are being emitted when user settings change which are persisted to local storage.\n */\nexport class StorageEvent extends PropertyChangeEvent {\n\n\tconstructor(key: string, before: any, after: any, originalEvent?: any) {\n\t\tsuper(key, before, after, originalEvent);\n\t}\n\n\t/**\n\t * Returns true if the storage change has occurred from this browser window and false if its coming from a different window.\n\t */\n\tpublic isLocal(): boolean {\n\n\t\t// By the spec a storage event is only ever emitted if it occurs from a different browser tab or window\n\t\t// so we can use the check for originalEvent being set or not as a way to find out if the event is local or not.\n\t\treturn !this.originalEvent;\n\t}\n}\n\nexport enum StorageScope {\n\n\t/**\n\t * The stored data will be scoped to all workspaces of this domain.\n\t */\n\tGLOBAL,\n\n\t/**\n\t * The stored data will be scoped to the current workspace.\n\t */\n\tWORKSPACE\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport Lifecycle = require('vs/base/common/lifecycle');\nimport Timer = require('vs/base/common/timer');\nimport {createDecorator, ServiceIdentifier, IInstantiationService} from 'vs/platform/instantiation/common/instantiation';\n\nexport var ID = 'telemetryService';\n\nexport var ITelemetryService = createDecorator<ITelemetryService>(ID);\n\nexport interface ITelemetryInfo {\n\t\tsessionId: string;\n\t\tmachineId: string;\n\t\tinstanceId: string;\n}\n\nexport interface ITelemetryService extends Lifecycle.IDisposable {\n\tserviceId : ServiceIdentifier<any>;\n\n\t/**\n\t * Sends a telemetry event that has been privacy approved.\n\t * Do not call this unless you have been given approval.\n\t */\n\tpublicLog(eventName: string, data?: any):void;\n\n\t/**\n\t * Starts a telemetry timer. Call stop() to send the event.\n\t */\n\tstart(name:string, data?:any):Timer.ITimerEvent;\n\n\t/**\n\t * Session Id\n\t */\n\tgetSessionId(): string;\n\n\t/**\n\t * a unique Id that is not hardware specific\n\t */\n\tgetInstanceId(): string;\n\n\t/**\n\t * a hardware specific machine Id\n\t */\n\tgetMachineId(): string;\n\n\tgetTelemetryInfo(): Thenable<ITelemetryInfo>;\n\n\t/**\n\t * Appender operations\n\t */\n\tgetAppendersCount(): number;\n\tgetAppenders(): ITelemetryAppender[];\n\taddTelemetryAppender(appender: ITelemetryAppender): void;\n\tremoveTelemetryAppender(appender: ITelemetryAppender): void;\n\tsetInstantiationService(instantiationService: IInstantiationService): void;\n}\n\nexport interface ITelemetryAppender extends Lifecycle.IDisposable {\n\tlog(eventName: string, data?: any): void;\n}\n\nexport function anonymize(input: string): string {\n\tif (!input) {\n\t\treturn input;\n\t}\n\n\tvar r = '';\n\tfor (var i = 0; i < input.length; i++) {\n\t\tvar ch = input[i];\n\t\tif (ch >= '0' && ch <= '9') {\n\t\t\tr += '0';\n\t\t\tcontinue;\n\t\t}\n\t\tif (ch >= 'a' && ch <= 'z') {\n\t\t\tr += 'a';\n\t\t\tcontinue;\n\t\t}\n\t\tif (ch >= 'A' && ch <= 'Z') {\n\t\t\tr += 'A';\n\t\t\tcontinue;\n\t\t}\n\t\tr += ch;\n\t}\n\treturn r;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport EditorCommon = require('vs/editor/common/editorCommon');\nimport {onUnexpectedError, illegalArgument} from 'vs/base/common/errors';\nimport URI from 'vs/base/common/uri';\nimport {Position} from 'vs/editor/common/core/position';\nimport {ServicesAccessor} from 'vs/platform/instantiation/common/instantiation';\nimport {ITelemetryService} from 'vs/platform/telemetry/common/telemetry';\nimport {IModelService} from 'vs/editor/common/services/modelService';\nimport {Registry} from 'vs/platform/platform';\nimport {KeybindingsRegistry,ICommandDescriptor} from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport config = require('vs/editor/common/config/config');\nimport {IInstantiationService} from 'vs/platform/instantiation/common/instantiation';\nimport {SyncDescriptor1, createSyncDescriptor} from 'vs/platform/instantiation/common/descriptors';\nimport {IKeybindingContextRule, ICommandHandler, IKeybindings} from 'vs/platform/keybinding/common/keybindingService';\n\n// --- Keybinding extensions to make it more concise to express keybindings conditions\nexport enum ContextKey {\n\tNone = 0,\n\tEditorTextFocus = 1,\n\tEditorFocus = 2\n}\nexport interface IEditorActionKeybindingOptions extends IKeybindings {\n\thandler?: ICommandHandler;\n\tcontext: ContextKey;\n}\nexport interface IEditorCommandKeybindingOptions extends IKeybindings {\n\tcontext: ContextKey;\n}\n\n// --- Editor Actions\nexport class EditorActionDescriptor {\n\n\tpublic ctor:EditorCommon.IEditorActionContributionCtor;\n\tpublic id:string;\n\tpublic label:string;\n\n\tpublic kbOpts:IEditorActionKeybindingOptions;\n\n\tconstructor(ctor:EditorCommon.IEditorActionContributionCtor, id:string, label:string, kbOpts: IEditorActionKeybindingOptions = defaultEditorActionKeybindingOptions) {\n\t\tthis.ctor = ctor;\n\t\tthis.id = id;\n\t\tthis.label = label;\n\t\tthis.kbOpts = kbOpts;\n\t}\n}\n\nexport interface IEditorCommandHandler {\n\t(accessor:ServicesAccessor, editor: EditorCommon.ICommonCodeEditor, args: any): void;\n}\n\nexport module CommonEditorRegistry {\n\n\texport function registerEditorAction(desc:EditorActionDescriptor) {\n\t\t(<EditorContributionRegistry>Registry.as(Extensions.EditorCommonContributions)).registerEditorAction(desc);\n\t}\n\n\t// --- Editor Contributions\n\texport function registerEditorContribution(ctor:EditorCommon.ICommonEditorContributionCtor): void {\n\t\t(<EditorContributionRegistry>Registry.as(Extensions.EditorCommonContributions)).registerEditorContribution2(ctor);\n\t}\n\texport function getEditorContributions(): EditorCommon.ICommonEditorContributionDescriptor[] {\n\t\treturn (<EditorContributionRegistry>Registry.as(Extensions.EditorCommonContributions)).getEditorContributions2();\n\t}\n\n\t// --- Editor Commands\n\texport function commandWeight(importance: number = 0): number {\n\t\treturn KeybindingsRegistry.WEIGHT.editorContrib(importance);\n\t}\n\n\texport function registerEditorCommand(commandId: string, weight: number, keybinding:IKeybindings, needsTextFocus: boolean, needsKey: string, handler: IEditorCommandHandler): void {\n\t\tvar commandDesc: ICommandDescriptor = {\n\t\t\tid: commandId,\n\t\t\thandler: createCommandHandler(commandId, handler),\n\t\t\tweight: weight,\n\t\t\tcontext: contextRule(needsTextFocus, needsKey),\n\t\t\tprimary: keybinding.primary,\n\t\t\tsecondary: keybinding.secondary,\n\t\t\twin: keybinding.win,\n\t\t\tlinux: keybinding.linux,\n\t\t\tmac: keybinding.mac,\n\t\t};\n\n\t\tKeybindingsRegistry.registerCommandDesc(commandDesc);\n\t}\n\n\texport function registerLanguageCommand(id: string, handler: (accessor: ServicesAccessor, args: { [n: string]: any }) => any) {\n\t\tKeybindingsRegistry.registerCommandDesc({\n\t\t\tid,\n\t\t\thandler(accessor, args: any[]) {\n\t\t\t\tif (args && args.length > 1 || typeof args[0] !== 'object') {\n\t\t\t\t\tthrow illegalArgument();\n\t\t\t\t}\n\t\t\t\treturn handler(accessor, args && args[0]);\n\t\t\t},\n\t\t\tweight: KeybindingsRegistry.WEIGHT.editorContrib(),\n\t\t\tprimary: undefined,\n\t\t\tcontext: undefined,\n\t\t});\n\t}\n\n\texport function registerDefaultLanguageCommand(id: string, handler: (model: EditorCommon.IModel, position: EditorCommon.IPosition, args: { [n: string]: any }) => any) {\n\t\tregisterLanguageCommand(id, function(accessor, args) {\n\n\t\t\tconst {resource, position} = args;\n\t\t\tif (!URI.isURI(resource) || !Position.isIPosition(position)) {\n\t\t\t\tthrow illegalArgument();\n\t\t\t}\n\n\t\t\tconst model = accessor.get(IModelService).getModel(resource);\n\t\t\tif (!model) {\n\t\t\t\tthrow illegalArgument();\n\t\t\t}\n\n\t\t\treturn handler(model, position, args);\n\t\t});\n\t}\n}\n\nclass SimpleEditorContributionDescriptor implements EditorCommon.ICommonEditorContributionDescriptor {\n\tprivate _ctor:EditorCommon.ICommonEditorContributionCtor;\n\n\tconstructor(ctor:EditorCommon.ICommonEditorContributionCtor) {\n\t\tthis._ctor = ctor;\n\t}\n\n\tpublic createInstance(instantiationService: IInstantiationService, editor:EditorCommon.ICommonCodeEditor): EditorCommon.IEditorContribution {\n\t\treturn instantiationService.createInstance(this._ctor, editor);\n\t}\n}\n\nclass InternalEditorActionDescriptor implements EditorCommon.ICommonEditorContributionDescriptor {\n\n\tprivate _descriptor: SyncDescriptor1<EditorCommon.ICommonCodeEditor, EditorCommon.IEditorContribution>;\n\n\tconstructor(ctor:EditorCommon.IEditorActionContributionCtor, id:string, label:string) {\n\t\tthis._descriptor = createSyncDescriptor(ctor, {\n\t\t\tid: id,\n\t\t\tlabel: label\n\t\t});\n\t}\n\n\tpublic createInstance(instService:IInstantiationService, editor:EditorCommon.ICommonCodeEditor): EditorCommon.IEditorContribution {\n\t\treturn instService.createInstance(this._descriptor, editor);\n\t}\n}\n\n// Editor extension points\nvar Extensions = {\n\tEditorCommonContributions: 'editor.commonContributions'\n};\n\nclass EditorContributionRegistry {\n\n\tprivate editorContributions: EditorCommon.ICommonEditorContributionDescriptor[];\n\n\tconstructor() {\n\t\tthis.editorContributions = [];\n\t}\n\n\tpublic registerEditorContribution2(ctor:EditorCommon.ICommonEditorContributionCtor): void {\n\t\tthis.editorContributions.push(new SimpleEditorContributionDescriptor(ctor));\n\t}\n\n\tpublic registerEditorAction(desc:EditorActionDescriptor): void {\n\t\tvar handler = desc.kbOpts.handler;\n\t\tif (!handler) {\n\t\t\tif (desc.kbOpts.context === ContextKey.EditorTextFocus || desc.kbOpts.context === ContextKey.EditorFocus) {\n\t\t\t\thandler = triggerEditorAction.bind(null, desc.id);\n\t\t\t} else {\n\t\t\t\thandler = triggerEditorActionGlobal.bind(null, desc.id);\n\t\t\t}\n\t\t}\n\n\t\tvar context: IKeybindingContextRule[] = null;\n\t\tif (desc.kbOpts.context === ContextKey.EditorTextFocus) {\n\t\t\tcontext = [{\n\t\t\t\tkey: EditorCommon.KEYBINDING_CONTEXT_EDITOR_TEXT_FOCUS\n\t\t\t}];\n\t\t} else if (desc.kbOpts.context === ContextKey.EditorFocus) {\n\t\t\tcontext = [{\n\t\t\t\tkey: EditorCommon.KEYBINDING_CONTEXT_EDITOR_FOCUS\n\t\t\t}];\n\t\t}\n\n\t\tvar commandDesc: ICommandDescriptor = {\n\t\t\tid: desc.id,\n\t\t\thandler: handler,\n\t\t\tweight: KeybindingsRegistry.WEIGHT.editorContrib(),\n\t\t\tcontext: context,\n\t\t\tprimary: desc.kbOpts.primary,\n\t\t\tsecondary: desc.kbOpts.secondary,\n\t\t\twin: desc.kbOpts.win,\n\t\t\tlinux: desc.kbOpts.linux,\n\t\t\tmac: desc.kbOpts.mac,\n\t\t};\n\n\t\tKeybindingsRegistry.registerCommandDesc(commandDesc);\n\t\tthis.editorContributions.push(new InternalEditorActionDescriptor(desc.ctor, desc.id, desc.label));\n\t}\n\n\tpublic getEditorContributions2(): EditorCommon.ICommonEditorContributionDescriptor[] {\n\t\treturn this.editorContributions.slice(0);\n\t}\n}\nRegistry.add(Extensions.EditorCommonContributions, new EditorContributionRegistry());\n\nfunction triggerEditorAction(actionId: string, accessor: ServicesAccessor, args: any): void {\n\tconfig.withCodeEditorFromCommandHandler(actionId, accessor, args,(editor) => {\n\t\teditor.trigger('keyboard', actionId, args);\n\t});\n}\n\nfunction triggerEditorActionGlobal(actionId: string, accessor: ServicesAccessor, args: any): void {\n\t// TODO: this is not necessarily keyboard\n\tvar focusedEditor = config.findFocusedEditor(actionId, accessor, args, false);\n\tif (focusedEditor) {\n\t\tfocusedEditor.trigger('keyboard', actionId, args);\n\t\treturn;\n\t}\n\n\tvar activeEditor = config.getActiveEditor(accessor);\n\tif (activeEditor) {\n\t\tvar action = activeEditor.getAction(actionId);\n\t\tif (action) {\n\t\t\taccessor.get(ITelemetryService).publicLog('editorActionInvoked', {name: action.label} );\n\t\t\taction.run().done(null, onUnexpectedError);\n\t\t}\n\t\treturn;\n\t}\n}\n\nvar defaultEditorActionKeybindingOptions:IEditorActionKeybindingOptions = { primary: null, context: ContextKey.EditorTextFocus };\n\nfunction contextRule(needsTextFocus: boolean, needsKey: string): IKeybindingContextRule[] {\n\tlet result: IKeybindingContextRule[] = [];\n\n\tif (needsTextFocus) {\n\t\tresult.push({ key: EditorCommon.KEYBINDING_CONTEXT_EDITOR_TEXT_FOCUS });\n\t} else {\n\t\tresult.push({ key: EditorCommon.KEYBINDING_CONTEXT_EDITOR_FOCUS });\n\t}\n\n\tif (needsKey) {\n\t\tresult.push({ key: needsKey });\n\t}\n\n\treturn result;\n}\n\nfunction createCommandHandler(commandId: string, handler: IEditorCommandHandler): ICommandHandler {\n\treturn (accessor, args) => {\n\t\tconfig.withCodeEditorFromCommandHandler(commandId, accessor, args, (editor) => {\n\t\t\thandler(accessor, editor, args);\n\t\t});\n\t};\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport {onUnexpectedError, illegalArgument} from 'vs/base/common/errors';\nimport URI from 'vs/base/common/uri';\nimport {IAction, Action} from 'vs/base/common/actions';\nimport {IModelService} from 'vs/editor/common/services/modelService';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {IModel, IRange, IPosition} from 'vs/editor/common/editorCommon';\nimport {Range} from 'vs/editor/common/core/range';\nimport {ICodeLensSupport, ICodeLensSymbol, ICommand} from 'vs/editor/common/modes';\nimport {CommonEditorRegistry} from 'vs/editor/common/editorCommonExtensions';\nimport LanguageFeatureRegistry from 'vs/editor/common/modes/languageFeatureRegistry';\n\nexport const CodeLensRegistry = new LanguageFeatureRegistry<ICodeLensSupport>('codeLensSupport');\n\nexport interface ICodeLensData {\n\tsymbol: ICodeLensSymbol;\n\tsupport: ICodeLensSupport;\n}\n\nexport function getCodeLensData(model: IModel):TPromise<ICodeLensData[]> {\n\n\tconst symbols: ICodeLensData[] = [];\n\tconst promises = CodeLensRegistry.all(model).map(support => {\n\t\treturn support.findCodeLensSymbols(model.getAssociatedResource()).then(result => {\n\t\t\tif (!Array.isArray(result)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfor (let symbol of result) {\n\t\t\t\tsymbols.push({ symbol, support });\n\t\t\t}\n\t\t}, err => {\n\t\t\tonUnexpectedError(err);\n\t\t});\n\t});\n\n\treturn TPromise.join(promises).then(() => symbols);\n}\n\nCommonEditorRegistry.registerLanguageCommand('_executeCodeLensProvider', function(accessor, args) {\n\n\tconst {resource} = args;\n\tif (!URI.isURI(resource)) {\n\t\tthrow illegalArgument();\n\t}\n\n\tconst model = accessor.get(IModelService).getModel(resource);\n\tif (!model) {\n\t\tthrow illegalArgument();\n\t}\n\n\treturn getCodeLensData(model);\n});","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport {IFormattingSupport, IFormattingOptions} from 'vs/editor/common/modes';\nimport LanguageFeatureRegistry from 'vs/editor/common/modes/languageFeatureRegistry';\nimport {illegalArgument} from 'vs/base/common/errors';\nimport URI from 'vs/base/common/uri';\nimport {IModelService} from 'vs/editor/common/services/modelService';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {IModel, IRange, IPosition, ISingleEditOperation} from 'vs/editor/common/editorCommon';\nimport {Range} from 'vs/editor/common/core/range';\nimport {CommonEditorRegistry} from 'vs/editor/common/editorCommonExtensions';\n\nexport const FormatRegistry = new LanguageFeatureRegistry<IFormattingSupport>('formattingSupport');\nexport const FormatOnTypeRegistry = new LanguageFeatureRegistry<IFormattingSupport>('formattingSupport');\n\nexport {IFormattingSupport};\n\nexport function formatRange(model: IModel, range: IRange, options: IFormattingOptions): TPromise<ISingleEditOperation[]> {\n\tconst [support] = FormatRegistry.ordered(model)\n\t\t.filter(s => typeof s.formatRange === 'function');\n\n\tif (!support) {\n\t\treturn TPromise.as(undefined);\n\t}\n\treturn support.formatRange(model.getAssociatedResource(), range, options);\n}\n\nexport function formatDocument(model: IModel, options: IFormattingOptions): TPromise<ISingleEditOperation[]> {\n\tconst [support] = FormatRegistry.ordered(model);\n\tif (!support) {\n\t\treturn TPromise.as(undefined);\n\t}\n\tif (typeof support.formatDocument !== 'function') {\n\t\tif (typeof support.formatRange === 'function') {\n\t\t\treturn formatRange(model, model.getFullModelRange(), options);\n\t\t} else {\n\t\t\treturn TPromise.as(undefined);\n\t\t}\n\t}\n\n\treturn support.formatDocument(model.getAssociatedResource(), options);\n}\n\nexport function formatAfterKeystroke(model: IModel, position: IPosition, ch: string, options: IFormattingOptions): TPromise<ISingleEditOperation[]> {\n\tconst [support] = FormatOnTypeRegistry.ordered(model);\n\tif (!support) {\n\t\treturn TPromise.as(undefined);\n\t}\n\tif (support.autoFormatTriggerCharacters.indexOf(ch) < 0) {\n\t\treturn TPromise.as(undefined);\n\t}\n\treturn support.formatAfterKeystroke(model.getAssociatedResource(), position, ch, options);\n}\n\nCommonEditorRegistry.registerLanguageCommand('_executeFormatRangeProvider', function(accessor, args) {\n\tconst {resource, range, options} = args;\n\tif (!URI.isURI(resource) || !Range.isIRange(range)) {\n\t\tthrow illegalArgument();\n\t}\n\tconst model = accessor.get(IModelService).getModel(resource);\n\tif (!model) {\n\t\tthrow illegalArgument('resource');\n\t}\n\treturn formatRange(model, range, options);\n});\n\nCommonEditorRegistry.registerLanguageCommand('_executeFormatDocumentProvider', function(accessor, args) {\n\tconst {resource, options} = args;\n\tif (!URI.isURI(resource)) {\n\t\tthrow illegalArgument('resource');\n\t}\n\tconst model = accessor.get(IModelService).getModel(resource);\n\tif (!model) {\n\t\tthrow illegalArgument('resource');\n\t}\n\n\treturn formatDocument(model, options)\n});\n\nCommonEditorRegistry.registerDefaultLanguageCommand('_executeFormatOnTypeProvider', function(model, position, args) {\n\tconst {ch, options } = args;\n\tif (typeof ch !== 'string') {\n\t\tthrow illegalArgument('ch');\n\t}\n\treturn formatAfterKeystroke(model, position, ch, options);\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport URI from 'vs/base/common/uri';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {onUnexpectedError} from 'vs/base/common/errors';\nimport {IModel, IPosition} from 'vs/editor/common/editorCommon';\nimport {IDeclarationSupport} from 'vs/editor/common/modes';\nimport LanguageFeatureRegistry from 'vs/editor/common/modes/languageFeatureRegistry';\nimport {IReference} from 'vs/editor/common/modes';\nimport {CommonEditorRegistry} from 'vs/editor/common/editorCommonExtensions';\n\nexport const DeclarationRegistry = new LanguageFeatureRegistry<IDeclarationSupport>('declarationSupport');\n\nexport function getDeclarationsAtPosition(model: IModel, position: IPosition): TPromise<IReference[]> {\n\n\tconst resource = model.getAssociatedResource();\n\tconst provider = DeclarationRegistry.ordered(model);\n\n\t// get results\n\tconst promises = provider.map((provider, idx) => {\n\t\treturn provider.findDeclaration(resource, position).then(result => {\n\t\t\treturn result;\n\t\t}, err => {\n\t\t\tonUnexpectedError(err);\n\t\t});\n\t});\n\n\treturn TPromise.join(promises).then(allReferences => {\n\t\tlet result: IReference[] = [];\n\t\tfor (let references of allReferences) {\n\t\t\tif (Array.isArray(references)) {\n\t\t\t\tresult.push(...references);\n\t\t\t} else if (references) {\n\t\t\t\tresult.push(references);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t});\n}\n\nCommonEditorRegistry.registerDefaultLanguageCommand('_executeDefinitionProvider', getDeclarationsAtPosition)","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport {IExtraInfoSupport, IComputeExtraInfoResult} from 'vs/editor/common/modes';\nimport LanguageFeatureRegistry from 'vs/editor/common/modes/languageFeatureRegistry';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {coalesce} from 'vs/base/common/arrays';\nimport {onUnexpectedError} from 'vs/base/common/errors';\nimport {IPosition, IModel} from 'vs/editor/common/editorCommon';\nimport {CommonEditorRegistry} from 'vs/editor/common/editorCommonExtensions';\n\nexport const ExtraInfoRegistry = new LanguageFeatureRegistry<IExtraInfoSupport>('extraInfoSupport');\n\nexport function getExtraInfoAtPosition(model: IModel, position: IPosition): TPromise<IComputeExtraInfoResult[]> {\n\n\tconst resource = model.getAssociatedResource();\n\tconst supports = ExtraInfoRegistry.ordered(model);\n\tconst values: IComputeExtraInfoResult[] = [];\n\n\tconst promises = supports.map((support, idx) => {\n\t\treturn support.computeInfo(resource, position).then(result => {\n\t\t\tif (result) {\n\t\t\t\tlet hasRange = (typeof result.range !== 'undefined');\n\t\t\t\tlet hasValue = (typeof result.value !== 'undefined');\n\t\t\t\tlet hasHtmlContent = (typeof result.htmlContent !== 'undefined' && result.htmlContent && result.htmlContent.length > 0);\n\t\t\t\tif (hasRange && (hasValue || hasHtmlContent)) {\n\t\t\t\t\tvalues[idx]  = result;\n\t\t\t\t}\n\t\t\t}\n\t\t}, err => {\n\t\t\tonUnexpectedError(err);\n\t\t});\n\t});\n\n\treturn TPromise.join(promises).then(() => coalesce(values));\n}\n\nCommonEditorRegistry.registerDefaultLanguageCommand('_executeHoverProvider', getExtraInfoAtPosition);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport {IParameterHintsSupport, IParameterHints} from 'vs/editor/common/modes';\nimport {IModel, IPosition} from 'vs/editor/common/editorCommon';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {onUnexpectedError, illegalArgument} from 'vs/base/common/errors';\nimport LanguageFeatureRegistry from 'vs/editor/common/modes/languageFeatureRegistry';\nimport {CommonEditorRegistry} from 'vs/editor/common/editorCommonExtensions';\n\nexport const ParameterHintsRegistry = new LanguageFeatureRegistry<IParameterHintsSupport>('parameterHintsSupport');\n\nexport function getParameterHints(model:IModel, position:IPosition, triggerCharacter: string): TPromise<IParameterHints> {\n\n\tlet support = ParameterHintsRegistry.ordered(model)[0];\n\tif (!support) {\n\t\treturn TPromise.as(undefined);\n\t}\n\n\treturn support.getParameterHints(model.getAssociatedResource(), position, triggerCharacter);\n}\n\nCommonEditorRegistry.registerDefaultLanguageCommand('_executeSignatureHelpProvider', function(model, position, args) {\n\tlet {triggerCharacter} = args;\n\tif (triggerCharacter && typeof triggerCharacter !== 'string') {\n\t\tthrow illegalArgument('triggerCharacter');\n\t}\n\treturn getParameterHints(model, position, triggerCharacter);\n});","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport URI from 'vs/base/common/uri';\nimport {Range} from 'vs/editor/common/core/range';\nimport {IModel, IRange} from 'vs/editor/common/editorCommon';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {onUnexpectedError, illegalArgument} from 'vs/base/common/errors';\nimport {IQuickFixSupport, IQuickFix} from 'vs/editor/common/modes';\nimport {IModelService} from 'vs/editor/common/services/modelService';\nimport {CommonEditorRegistry} from 'vs/editor/common/editorCommonExtensions';\nimport LanguageFeatureRegistry from 'vs/editor/common/modes/languageFeatureRegistry';\n\nexport const QuickFixRegistry = new LanguageFeatureRegistry<IQuickFixSupport>('quickFixSupport');\n\nexport interface IQuickFix2 extends IQuickFix {\n\tsupport: IQuickFixSupport;\n\tid: string;\n}\n\nexport function getQuickFixes(model: IModel, range: IRange): TPromise<IQuickFix2[]> {\n\n\tconst quickFixes: IQuickFix2[] = [];\n\tconst promises = QuickFixRegistry.all(model).map(support => {\n\t\treturn support.getQuickFixes(model.getAssociatedResource(), range).then(result => {\n\t\t\tif (!Array.isArray(result)) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlet c = 0;\n\t\t\tfor (let fix of result) {\n\t\t\t\tquickFixes.push({\n\t\t\t\t\tcommand: fix.command,\n\t\t\t\t\tscore: fix.score,\n\t\t\t\t\tid: `quickfix_#${c++}`,\n\t\t\t\t\tsupport\n\t\t\t\t});\n\t\t\t}\n\t\t}, err => {\n\t\t\tonUnexpectedError(err);\n\t\t});\n\t});\n\n\treturn TPromise.join(promises).then(() => quickFixes);\n}\n\nCommonEditorRegistry.registerLanguageCommand('_executeCodeActionProvider', function(accessor, args) {\n\n\tconst {resource, range} = args;\n\tif (!URI.isURI(resource) || !Range.isIRange(range)) {\n\t\tthrow illegalArgument();\n\t}\n\n\tconst model = accessor.get(IModelService).getModel(resource);\n\tif (!model) {\n\t\tthrow illegalArgument();\n\t}\n\n\treturn getQuickFixes(model, range);\n});","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport URI from 'vs/base/common/uri';\nimport {onUnexpectedError, illegalArgument} from 'vs/base/common/errors';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {Range} from 'vs/editor/common/core/range';\nimport {IModel} from 'vs/editor/common/editorCommon';\nimport {IOutlineEntry, IOutlineSupport} from 'vs/editor/common/modes';\nimport LanguageFeatureRegistry from 'vs/editor/common/modes/languageFeatureRegistry';\nimport {IModelService} from 'vs/editor/common/services/modelService';\nimport {CommonEditorRegistry} from 'vs/editor/common/editorCommonExtensions';\n\nconst OutlineRegistry = new LanguageFeatureRegistry<IOutlineSupport>('outlineSupport');\n\nexport {\n\tOutlineRegistry,\n\tIOutlineEntry,\n\tIOutlineSupport\n}\n\nexport interface IOutline {\n\tentries: IOutlineEntry[];\n\toutlineGroupLabel: { [n: string]: string; };\n}\n\nexport function getOutlineEntries(model: IModel): TPromise<IOutline> {\n\n\tlet groupLabels: { [n: string]: string } = Object.create(null);\n\tlet entries: IOutlineEntry[] = [];\n\n\tlet promises = OutlineRegistry.all(model).map(support => {\n\n\t\tif (support.outlineGroupLabel) {\n\t\t\tfor (var key in support.outlineGroupLabel) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(support.outlineGroupLabel, key)) {\n\t\t\t\t\tgroupLabels[key] = support.outlineGroupLabel[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn support.getOutline(model.getAssociatedResource()).then(result => {\n\t\t\tif (Array.isArray(result)) {\n\t\t\t\tentries.push(...result);\n\t\t\t}\n\t\t}, err => {\n\t\t\tonUnexpectedError(err);\n\t\t});\n\t});\n\n\treturn TPromise.join(promises).then(() => {\n\t\tlet flatEntries: IOutlineEntry[] = [];\n\t\tflatten(flatEntries, entries, '');\n\t\tflatEntries.sort(compareEntriesUsingStart);\n\n\t\treturn {\n\t\t\tentries: flatEntries,\n\t\t\toutlineGroupLabel: groupLabels\n\t\t}\n\t});\n}\n\nfunction compareEntriesUsingStart(a: IOutlineEntry, b: IOutlineEntry): number{\n\treturn Range.compareRangesUsingStarts(a.range, b.range);\n}\n\nfunction flatten(bucket: IOutlineEntry[], entries: IOutlineEntry[], overrideContainerLabel: string): void {\n\tfor (let entry of entries) {\n\t\tbucket.push({\n\t\t\ttype: entry.type,\n\t\t\trange: entry.range,\n\t\t\tlabel: entry.label,\n\t\t\ticon: entry.icon,\n\t\t\tcontainerLabel: entry.containerLabel || overrideContainerLabel\n\t\t});\n\t\tif (entry.children) {\n\t\t\tflatten(bucket, entry.children, entry.label);\n\t\t}\n\t}\n}\n\n\nCommonEditorRegistry.registerLanguageCommand('_executeDocumentSymbolProvider', function(accessor, args) {\n\tconst {resource} = args;\n\tif (!URI.isURI(resource)) {\n\t\tthrow illegalArgument('resource');\n\t}\n\tconst model = accessor.get(IModelService).getModel(resource);\n\tif (!model) {\n\t\tthrow illegalArgument('resource');\n\t}\n\treturn getOutlineEntries(model);\n});","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport {IReferenceSupport, IReference} from 'vs/editor/common/modes';\nimport {IModel, IPosition} from 'vs/editor/common/editorCommon';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {onUnexpectedError} from 'vs/base/common/errors';\nimport LanguageFeatureRegistry from 'vs/editor/common/modes/languageFeatureRegistry';\nimport {CommonEditorRegistry} from 'vs/editor/common/editorCommonExtensions';\n\nexport const ReferenceRegistry = new LanguageFeatureRegistry<IReferenceSupport>('referenceSupport');\n\nexport function findReferences(model: IModel, position: IPosition): TPromise<IReference[]> {\n\n\t// collect references from all providers\n\tconst promises = ReferenceRegistry.ordered(model).map(provider => {\n\t\treturn provider.findReferences(model.getAssociatedResource(), position, true).then(result => {\n\t\t\tif (Array.isArray(result)) {\n\t\t\t\treturn <IReference[]> result;\n\t\t\t}\n\t\t}, err => {\n\t\t\tonUnexpectedError(err);\n\t\t});\n\t});\n\n\treturn TPromise.join(promises).then(references => {\n\t\tlet result: IReference[] = [];\n\t\tfor (let ref of references) {\n\t\t\tif (ref) {\n\t\t\t\tresult.push(...ref);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t});\n}\n\nCommonEditorRegistry.registerDefaultLanguageCommand('_executeReferenceProvider', findReferences);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport {IRenameSupport, IRenameResult} from 'vs/editor/common/modes';\nimport {IModel, IPosition} from 'vs/editor/common/editorCommon';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {localize} from 'vs/nls';\nimport {sequence} from 'vs/base/common/async';\nimport {onUnexpectedError, illegalArgument} from 'vs/base/common/errors';\nimport LanguageFeatureRegistry from 'vs/editor/common/modes/languageFeatureRegistry';\nimport {CommonEditorRegistry} from 'vs/editor/common/editorCommonExtensions';\n\nexport const RenameRegistry = new LanguageFeatureRegistry<IRenameSupport>('renameSupport');\n\nexport function rename(model: IModel, position: IPosition, newName: string): TPromise<IRenameResult> {\n\n\tconst supports = RenameRegistry.ordered(model);\n\tconst resource = model.getAssociatedResource();\n\tconst rejects: string[] = [];\n\tlet hasResult = false;\n\n\tconst factory = supports.map(support => {\n\t\treturn () => {\n\t\t\tif (!hasResult) {\n\t\t\t\treturn support.rename(resource, position, newName).then(result => {\n\t\t\t\t\tif (!result) {\n\t\t\t\t\t\t// ignore\n\t\t\t\t\t} else if (!result.rejectReason) {\n\t\t\t\t\t\thasResult = true;\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t} else {\n\t\t\t\t\t\trejects.push(result.rejectReason);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t});\n\n\treturn sequence(factory).then(values => {\n\t\tlet result = values[0];\n\t\tif (rejects.length > 0) {\n\t\t\treturn <IRenameResult>{\n\t\t\t\tcurrentName: undefined,\n\t\t\t\tedits: undefined,\n\t\t\t\trejectReason: rejects.join('\\n')\n\t\t\t};\n\t\t} else if (!result) {\n\t\t\treturn <IRenameResult>{\n\t\t\t\tcurrentName: undefined,\n\t\t\t\tedits: undefined,\n\t\t\t\trejectReason: localize('no result', \"No result.\")\n\t\t\t};\n\t\t} else {\n\t\t\treturn result;\n\t\t}\n\t});\n}\n\nCommonEditorRegistry.registerDefaultLanguageCommand('_executeDocumentRenameProvider', function(model, position, args) {\n\tlet {newName} = args;\n\tif (typeof newName !== 'string') {\n\t\tthrow illegalArgument('newName');\n\t}\n\treturn rename(model, position, newName);\n});","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {sequence} from 'vs/base/common/async';\nimport {IModel, IPosition, IRange} from 'vs/editor/common/editorCommon';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {mixin} from 'vs/base/common/objects';\nimport {onUnexpectedError, illegalArgument} from 'vs/base/common/errors';\nimport {ISuggestSupport, ISuggestResult} from 'vs/editor/common/modes';\nimport LanguageFeatureRegistry from 'vs/editor/common/modes/languageFeatureRegistry';\nimport {CommonEditorRegistry} from 'vs/editor/common/editorCommonExtensions';\n\nexport var CONTEXT_SUGGEST_WIDGET_VISIBLE = 'suggestWidgetVisible';\nexport var CONTEXT_SUGGESTION_SUPPORTS_ACCEPT_ON_KEY = 'suggestionSupportsAcceptOnKey';\nexport var ACCEPT_SELECTED_SUGGESTION_CMD = 'acceptSelectedSuggestion';\n\nexport var SuggestRegistry = new LanguageFeatureRegistry<ISuggestSupport>('suggestSupport');\n\nexport interface ISuggestResult2 extends ISuggestResult {\n\tsupport?: ISuggestSupport;\n}\n\nexport function suggest(model: IModel, position: IPosition, triggerCharacter: string, groups?: ISuggestSupport[][]): TPromise<ISuggestResult2[][]> {\n\n\tif (!groups) {\n\t\tgroups = SuggestRegistry.orderedGroups(model);\n\t}\n\n\tconst resource = model.getAssociatedResource();\n\tconst suggestions: ISuggestResult[][] = [];\n\n\tconst factory = groups.map((supports, index) => {\n\t\treturn () => {\n\n\t\t\t// stop as soon as a group produced a result\n\t\t\tif (suggestions.length > 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for each support in the group ask for suggestions\n\t\t\tlet promises = supports.map(support => {\n\t\t\t\treturn support.suggest(resource, position, triggerCharacter).then(values => {\n\n\t\t\t\t\tlet result: ISuggestResult2[] = [];\n\t\t\t\t\tfor (let suggestResult of values) {\n\n\t\t\t\t\t\tif (!suggestResult\n\t\t\t\t\t\t\t|| !Array.isArray(suggestResult.suggestions)\n\t\t\t\t\t\t\t|| suggestResult.suggestions.length === 0) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst suggestions2: ISuggestResult2 = {\n\t\t\t\t\t\t\tsupport,\n\t\t\t\t\t\t\tcurrentWord: suggestResult.currentWord,\n\t\t\t\t\t\t\tincomplete: suggestResult.incomplete,\n\t\t\t\t\t\t\tsuggestions: suggestResult.suggestions\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult.push(suggestions2);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn result;\n\n\t\t\t\t}, onUnexpectedError);\n\t\t\t});\n\n\t\t\treturn TPromise.join(promises).then(values => {\n\t\t\t\tfor (let value of values) {\n\t\t\t\t\tif (Array.isArray(value) && value.length > 0) {\n\t\t\t\t\t\tsuggestions.push(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t});\n\n\treturn sequence(factory).then(() => suggestions);\n}\n\nCommonEditorRegistry.registerDefaultLanguageCommand('_executeCompletionItemProvider', (model, position, args) => {\n\n\tlet triggerCharacter = args['triggerCharacter'];\n\tif (typeof triggerCharacter !== 'undefined' && typeof triggerCharacter !== 'string') {\n\t\tthrow illegalArgument('triggerCharacter');\n\t}\n\n\treturn suggest(model, position, triggerCharacter);\n});","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport URI from 'vs/base/common/uri';\nimport * as EditorCommon from 'vs/editor/common/editorCommon';\nimport {IOccurrencesSupport, IOccurence} from 'vs/editor/common/modes';\nimport {CommonEditorRegistry} from 'vs/editor/common/editorCommonExtensions';\nimport {Range} from 'vs/editor/common/core/range';\nimport {onUnexpectedError, illegalArgument} from 'vs/base/common/errors';\nimport {INullService} from 'vs/platform/instantiation/common/instantiation';\nimport {sequence} from 'vs/base/common/async';\nimport {IModelService} from 'vs/editor/common/services/modelService';\nimport LanguageFeatureRegistry from 'vs/editor/common/modes/languageFeatureRegistry';\n\nexport const OccurrencesRegistry = new LanguageFeatureRegistry<IOccurrencesSupport>('occurrencesSupport');\n\nexport function getOccurrencesAtPosition(model: EditorCommon.IModel, position: EditorCommon.IPosition):TPromise<IOccurence[]> {\n\n\tconst resource = model.getAssociatedResource();\n\tconst orderedByScore = OccurrencesRegistry.ordered(model);\n\tlet foundResult = false;\n\n\t// in order of score ask the occurrences provider\n\t// until someone response with a good result\n\t// (good = none empty array)\n\treturn sequence(orderedByScore.map(provider => {\n\t\treturn () => {\n\t\t\tif (!foundResult) {\n\t\t\t\treturn provider.findOccurrences(resource, position).then(data => {\n\t\t\t\t\tif (Array.isArray(data) && data.length > 0) {\n\t\t\t\t\t\tfoundResult = true;\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t}\n\t\t\t\t}, err => {\n\t\t\t\t\tonUnexpectedError(err);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t})).then(values => {\n\t\treturn values[0]\n\t});\n}\n\nCommonEditorRegistry.registerDefaultLanguageCommand('_executeDocumentHighlights', getOccurrencesAtPosition);\n\nclass WordHighlighter {\n\n\tprivate editor: EditorCommon.ICommonCodeEditor;\n\tprivate model: EditorCommon.IModel;\n\tprivate _lastWordRange: EditorCommon.IEditorRange;\n\tprivate _decorationIds: string[];\n\tprivate toUnhook: Function[];\n\n\tprivate workerRequestTokenId:number = 0;\n\tprivate workerRequest:TPromise<IOccurence[]> = null;\n\tprivate workerRequestCompleted:boolean = false;\n\tprivate workerRequestValue:IOccurence[] = [];\n\n\tprivate lastCursorPositionChangeTime:number = 0;\n\tprivate renderDecorationsTimer:number = -1;\n\n\tconstructor(editor:EditorCommon.ICommonCodeEditor) {\n\t\tthis.editor = editor;\n\t\tthis.model = this.editor.getModel();\n\t\tthis.toUnhook = [];\n\t\tthis.toUnhook.push(editor.addListener(EditorCommon.EventType.CursorPositionChanged, (e:EditorCommon.ICursorPositionChangedEvent) => {\n\t\t\tthis._onPositionChanged(e);\n\t\t}));\n\t\tthis.toUnhook.push(editor.addListener(EditorCommon.EventType.ModelChanged, (e) => {\n\t\t\tthis._stopAll();\n\t\t\tthis.model = this.editor.getModel();\n\t\t}));\n\t\tthis.toUnhook.push(editor.addListener('change', (e) => {\n\t\t\tthis._stopAll();\n\t\t}));\n\n\t\tthis._lastWordRange = null;\n\t\tthis._decorationIds = [];\n\t\tthis.workerRequestTokenId = 0;\n\t\tthis.workerRequest = null;\n\t\tthis.workerRequestCompleted = false;\n\n\t\tthis.lastCursorPositionChangeTime = 0;\n\t\tthis.renderDecorationsTimer = -1;\n\t}\n\n\tprivate _removeDecorations(): void {\n\t\tif (this._decorationIds.length > 0) {\n\t\t\t// remove decorations\n\t\t\tthis._decorationIds = this.editor.deltaDecorations(this._decorationIds, []);\n\t\t}\n\t}\n\n\tprivate _stopAll(): void {\n\t\tthis._lastWordRange = null;\n\n\t\t// Remove any existing decorations\n\t\tthis._removeDecorations();\n\n\t\t// Cancel any renderDecorationsTimer\n\t\tif (this.renderDecorationsTimer !== -1) {\n\t\t\twindow.clearTimeout(this.renderDecorationsTimer);\n\t\t\tthis.renderDecorationsTimer = -1;\n\t\t}\n\n\t\t// Cancel any worker request\n\t\tif (this.workerRequest !== null) {\n\t\t\tthis.workerRequest.cancel();\n\t\t\tthis.workerRequest = null;\n\t\t}\n\n\t\t// Invalidate any worker request callback\n\t\tif (!this.workerRequestCompleted) {\n\t\t\tthis.workerRequestTokenId++;\n\t\t\tthis.workerRequestCompleted = true;\n\t\t}\n\t}\n\n\tprivate _onPositionChanged(e:EditorCommon.ICursorPositionChangedEvent): void {\n\n\t\t// ignore typing & other\n\t\tif (e.reason !== 'explicit') {\n\t\t\tthis._stopAll();\n\t\t\treturn;\n\t\t}\n\n\t\t// no providers for this model\n\t\tif(!OccurrencesRegistry.has(this.model)) {\n\t\t\tthis._stopAll();\n\t\t\treturn;\n\t\t}\n\n\t\tvar editorSelection = this.editor.getSelection();\n\n\t\t// ignore multiline selection\n\t\tif (editorSelection.startLineNumber !== editorSelection.endLineNumber) {\n\t\t\tthis._stopAll();\n\t\t\treturn;\n\t\t}\n\n\t\tvar lineNumber = editorSelection.startLineNumber;\n\t\tvar startColumn = editorSelection.startColumn;\n\t\tvar endColumn = editorSelection.endColumn;\n\n\t\tvar word = this.model.getWordAtPosition({\n\t\t\tlineNumber: lineNumber,\n\t\t\tcolumn: startColumn\n\t\t});\n\n\t\t// The selection must be inside a word or surround one word at most\n\t\tif (!word || word.startColumn > startColumn || word.endColumn < endColumn) {\n\t\t\tthis._stopAll();\n\t\t\treturn;\n\t\t}\n\n\t\t// All the effort below is trying to achieve this:\n\t\t// - when cursor is moved to a word, trigger immediately a findOccurences request\n\t\t// - 250ms later after the last cursor move event, render the occurences\n\t\t// - no flickering!\n\n\t\tvar currentWordRange = new Range(lineNumber, word.startColumn, lineNumber, word.endColumn);\n\n\t\tvar workerRequestIsValid = this._lastWordRange && this._lastWordRange.equalsRange(currentWordRange);\n\n\t\t// Even if we are on a different word, if that word is in the decorations ranges, the request is still valid\n\t\t// (Same symbol)\n\t\tfor(var i = 0, len = this._decorationIds.length; !workerRequestIsValid && i < len; i++) {\n\t\t\tvar range = this.model.getDecorationRange(this._decorationIds[i]);\n\t\t\tif(range && range.startLineNumber === lineNumber) {\n\t\t\t\tif(range.startColumn <= startColumn && range.endColumn >= endColumn) {\n\t\t\t\t\tworkerRequestIsValid = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\t// There are 4 cases:\n\t\t// a) old workerRequest is valid & completed, renderDecorationsTimer fired\n\t\t// b) old workerRequest is valid & completed, renderDecorationsTimer not fired\n\t\t// c) old workerRequest is valid, but not completed\n\t\t// d) old workerRequest is not valid\n\n\t\t// For a) no action is needed\n\t\t// For c), member 'lastCursorPositionChangeTime' will be used when installing the timer so no action is needed\n\n\t\tthis.lastCursorPositionChangeTime = (new Date()).getTime();\n\n\t\tif (workerRequestIsValid) {\n\t\t\tif (this.workerRequestCompleted && this.renderDecorationsTimer !== -1) {\n\t\t\t\t// case b)\n\t\t\t\t// Delay the firing of renderDecorationsTimer by an extra 250 ms\n\t\t\t\twindow.clearTimeout(this.renderDecorationsTimer);\n\t\t\t\tthis.renderDecorationsTimer = -1;\n\t\t\t\tthis._beginRenderDecorations();\n\t\t\t}\n\t\t} else {\n\t\t\t// case d)\n\t\t\t// Stop all previous actions and start fresh\n\t\t\tthis._stopAll();\n\n\t\t\tvar myRequestId = ++this.workerRequestTokenId;\n\t\t\tthis.workerRequestCompleted = false;\n\n\t\t\tthis.workerRequest = getOccurrencesAtPosition(this.model, this.editor.getPosition());\n\n\t\t\tthis.workerRequest.then(data => {\n\t\t\t\tif (myRequestId === this.workerRequestTokenId) {\n\t\t\t\t\tthis.workerRequestCompleted = true;\n\t\t\t\t\tthis.workerRequestValue = data || [];\n\t\t\t\t\tthis._beginRenderDecorations();\n\t\t\t\t}\n\t\t\t}).done();\n\t\t}\n\n\t\tthis._lastWordRange = currentWordRange;\n\t}\n\n\tprivate _beginRenderDecorations(): void {\n\t\tvar currentTime = (new Date()).getTime();\n\t\tvar minimumRenderTime = this.lastCursorPositionChangeTime + 250;\n\n\t\tif (currentTime >= minimumRenderTime) {\n\t\t\t// Synchronous\n\t\t\tthis.renderDecorationsTimer = -1;\n\t\t\tthis.renderDecorations();\n\t\t} else {\n\t\t\t// Asyncrhonous\n\t\t\tthis.renderDecorationsTimer = window.setTimeout(() => {\n\t\t\t\tthis.renderDecorations();\n\t\t\t}, (minimumRenderTime - currentTime));\n\t\t}\n\t}\n\n\tprivate renderDecorations(): void {\n\t\tthis.renderDecorationsTimer = -1;\n\t\tvar decorations:EditorCommon.IModelDeltaDecoration[] = [];\n\t\tfor(var i = 0, len = this.workerRequestValue.length; i < len; i++) {\n\t\t\tvar info = this.workerRequestValue[i];\n\t\t\tvar className = 'wordHighlight';\n\t\t\tvar color = '#A0A0A0';\n\n\t\t\tif (info.kind === 'write') {\n\t\t\t\tclassName = className + 'Strong';\n\t\t\t} else if (info.kind === 'text') {\n\t\t\t\tclassName = 'selectionHighlight'\n\t\t\t\t// Keep the same color for now\n\t\t\t\t//color = 'rgba(249, 206, 130, 0.7)';\n\t\t\t}\n\t\t\tdecorations.push({\n\t\t\t\trange: info.range,\n\t\t\t\toptions: {\n\t\t\t\t\tstickiness: EditorCommon.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\t\t\t\tclassName: className,\n\t\t\t\t\toverviewRuler: {\n\t\t\t\t\t\tcolor: color,\n\t\t\t\t\t\tdarkColor: color,\n\t\t\t\t\t\tposition: EditorCommon.OverviewRulerLane.Center\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tthis._decorationIds = this.editor.deltaDecorations(this._decorationIds, decorations);\n\t}\n\n\tpublic destroy(): void {\n\t\tthis._stopAll();\n\t\twhile(this.toUnhook.length > 0) {\n\t\t\tthis.toUnhook.pop()();\n\t\t}\n\t}\n}\n\nclass WordHighlighterContribution implements EditorCommon.IEditorContribution {\n\n\tstatic ID = 'editor.contrib.wordHighlighter';\n\n\tprivate wordHighligher: WordHighlighter;\n\n\tconstructor(editor:EditorCommon.ICommonCodeEditor, @INullService ns) {\n\t\tthis.wordHighligher = new WordHighlighter(editor);\n\t}\n\n\tpublic getId(): string {\n\t\treturn WordHighlighterContribution.ID;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.wordHighligher.destroy();\n\t}\n}\n\nCommonEditorRegistry.registerEditorContribution(WordHighlighterContribution);\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport Errors = require('vs/base/common/errors');\nimport Types = require('vs/base/common/types');\nimport Platform = require('vs/base/common/platform');\nimport {TimeKeeper, IEventsListener, ITimerEvent} from 'vs/base/common/timer';\nimport {safeStringify} from 'vs/base/common/objects';\nimport {Registry} from 'vs/platform/platform';\nimport {ITelemetryService, ITelemetryAppender, ITelemetryInfo} from 'vs/platform/telemetry/common/telemetry';\nimport {SyncDescriptor0} from 'vs/platform/instantiation/common/descriptors';\nimport {IInstantiationService} from 'vs/platform/instantiation/common/instantiation';\n\n/**\n * Base class for main process telemetry services\n */\nexport abstract class AbstractTelemetryService implements ITelemetryService {\n\tpublic static ERROR_FLUSH_TIMEOUT: number = 5 * 1000;\n\n\tpublic serviceId = ITelemetryService;\n\n\tprivate toUnbind:any[];\n\tprivate timeKeeper:TimeKeeper;\n\tprivate appenders:ITelemetryAppender[];\n\tprivate appendersErrors:number[];\n\tprivate oldOnError:any;\n\tprivate instantiationService: IInstantiationService;\n\tprivate timeKeeperListener: IEventsListener;\n\tprivate errorBuffer: {[stack: string]: any};\n\tprivate errorFlushTimeout: number;\n\n\tprotected sessionId:string;\n\tprotected instanceId: string;\n\tprotected machineId: string;\n\n\tconstructor() {\n\t\tthis.sessionId = 'SESSION_ID_NOT_SET';\n\t\tthis.timeKeeper = new TimeKeeper();\n\t\tthis.toUnbind = [];\n\t\tthis.appenders = [];\n\t\tthis.timeKeeperListener = (events:ITimerEvent[]) => this.onTelemetryTimerEventStop(events);\n\t\tthis.timeKeeper.addListener(this.timeKeeperListener);\n\t\tthis.toUnbind.push(Errors.errorHandler.addListener(this.onErrorEvent.bind(this)));\n\n\t\tthis.errorBuffer = Object.create(null);\n\n\t\tthis.enableGlobalErrorHandler();\n\n\t\tthis.errorFlushTimeout = -1;\n\t}\n\n\tprivate _safeStringify(data:any): string {\n\t\treturn safeStringify(data);\n\t}\n\n\tprivate onTelemetryTimerEventStop(events:ITimerEvent[]):void {\n\t\tfor (var i = 0; i < events.length; i++) {\n\t\t\tvar event = events[i];\n\t\t\tvar data = event.data || {};\n\t\t\tdata.duration = event.timeTaken();\n\t\t\tthis.publicLog(event.name, data);\n\t\t}\n\t}\n\n\tprivate onErrorEvent(e:any):void {\n\n\t\tlet error = Object.create(null);\n\n\t\t// unwrap nested errors from loader\n\t\tif(e.detail && e.detail.stack) {\n\t\t\te = e.detail;\n\t\t}\n\n\t\t// work around behavior in workerServer.ts that breaks up Error.stack\n\t\tlet stack = Array.isArray(e.stack) ? e.stack.join('\\n') : e.stack;\n\t\tlet message = e.message ? e.message : this._safeStringify(e);\n\n\t\t// errors without a stack are not useful telemetry\n\t\tif(!stack) {\n\t\t\treturn;\n\t\t}\n\n\t\terror['message'] = this.cleanupInfo(message);\n\t\terror['stack'] = this.cleanupInfo(stack);\n\n\t\tthis.addErrortoBuffer(error);\n\t}\n\n\tprivate addErrortoBuffer(e:any): void {\n\t\tif (this.errorBuffer[e.stack]) {\n\t\t\tthis.errorBuffer[e.stack].count++;\n\t\t} else {\n\t\t\te.count = 1;\n\t\t\tthis.errorBuffer[e.stack] = e;\n\t\t}\n\t\tthis.tryScheduleErrorFlush();\n\t}\n\n\tprivate tryScheduleErrorFlush(): void {\n\t\tif (this.errorFlushTimeout === -1) {\n\t\t\tthis.errorFlushTimeout = setTimeout(() => this.flushErrorBuffer(), AbstractTelemetryService.ERROR_FLUSH_TIMEOUT);\n\t\t}\n\t}\n\n\tprivate flushErrorBuffer(): void {\n\t\tif (this.errorBuffer) {\n\t\t\tfor(var stack in this.errorBuffer) {\n\t\t\t\tthis.publicLog('UnhandledError', this.errorBuffer[stack]);\n\t\t\t}\n\t\t}\n\n\t\tthis.errorBuffer = Object.create(null);\n\t\tthis.errorFlushTimeout = -1;\n\t}\n\n\tprivate cleanupInfo(stack: string): string {\n\n\t\t// `file:///DANGEROUS/PATH/resources/app/Useful/Information`\n\t\tvar reg = /file:\\/\\/\\/.*?\\/resources\\/app\\//gi;\n\t\tstack = stack.replace(reg, '');\n\n\t\t// Any other file path that doesn't match the approved form above should be cleaned.\n\t\treg = /file:\\/\\/\\/.*/gi;\n\t\tstack = stack.replace(reg, '');\n\n\t\t// \"Error: ENOENT; no such file or directory\" is often followed with PII, clean it\n\t\treg = /ENOENT: no such file or directory.*?\\'([^\\']+)\\'/gi;\n\t\tstack = stack.replace(reg, 'ENOENT: no such file or directory');\n\t\treturn stack;\n\t}\n\n\tprivate enableGlobalErrorHandler():void {\n\t\tif(Types.isFunction(Platform.globals.onerror)) {\n\t\t\tthis.oldOnError = Platform.globals.onerror;\n\t\t}\n\n\t\tvar that = this;\n\t\tvar newHandler:any = function(message:string, filename:string, line:number, column?:number, e?:any) {\n\t\t\tthat.onUncaughtError(message, filename, line, column, e);\n\t\t\tif(that.oldOnError) {\n\t\t\t\tthat.oldOnError.apply(this, arguments);\n\t\t\t}\n\t\t};\n\n\t\tPlatform.globals.onerror = newHandler;\n\t}\n\n\tprivate onUncaughtError(message:string, filename:string, line:number, column?:number, e?:any):void {\n\t\tfilename = this.cleanupInfo(filename);\n\t\tmessage = this.cleanupInfo(message);\n\t\tvar data:any = {\n\t\t\tmessage: message,\n\t\t\tfilename: filename,\n\t\t\tline: line,\n\t\t\tcolumn: column\n\t\t};\n\n\t\tif(e) {\n\t\t\tdata.error = {\n\t\t\t\tname: e.name,\n\t\t\t\tmessage: e.message\n\t\t\t};\n\n\t\t\tif (e.stack) {\n\n\t\t\t\tif(Array.isArray(e.stack)) {\n\t\t\t\t\t\te.stack = e.stack.join('\\n');\n\t\t\t\t}\n\n\t\t\t\tdata.stack = this.cleanupInfo(e.stack);\n\t\t\t}\n\t\t}\n\n\t\tif (!data.stack) {\n\t\t\tdata.stack = data.message;\n\t\t}\n\n\t\tthis.addErrortoBuffer(data);\n\t}\n\n\tprivate loadTelemetryAppendersFromRegistery(): void {\n\t\tvar appendersRegistry = (<ITelemetryAppendersRegistry>Registry.as(Extenstions.TelemetryAppenders)).getTelemetryAppenderDescriptors();\n\n\t\tfor (var i = 0; i < appendersRegistry.length; i++) {\n\t\t\tvar descriptor = appendersRegistry[i];\n\t\t\tvar appender = this.instantiationService.createInstance(descriptor);\n\t\t\tthis.addTelemetryAppender(appender);\n\t\t}\n\t}\n\n\tpublic getSessionId(): string {\n\t\treturn this.sessionId;\n\t}\n\n\tpublic getMachineId(): string {\n\t\treturn this.machineId;\n\t}\n\n\tpublic getInstanceId(): string {\n\t\treturn this.instanceId;\n\t}\n\n\tpublic getTelemetryInfo(): Thenable<ITelemetryInfo> {\n\t\treturn Promise.resolve({\n\t\t\tinstanceId: this.instanceId,\n\t\t\tsessionId: this.sessionId,\n\t\t\tmachineId: this.machineId\n\t\t});\n\t}\n\n\tpublic dispose():void {\n\t\tif (this.errorFlushTimeout !== -1) {\n\t\t\tclearTimeout(this.errorFlushTimeout);\n\t\t\tthis.flushErrorBuffer();\n\t\t}\n\n\t\twhile (this.toUnbind.length) {\n\t\t\tthis.toUnbind.pop()();\n\t\t}\n\t\tthis.timeKeeper.removeListener(this.timeKeeperListener);\n\t\tthis.timeKeeper.dispose();\n\n\t\tfor(var i =0; i< this.appenders.length; i++){\n\t\t\tthis.appenders[i].dispose();\n\t\t}\n\t}\n\n\tpublic start(name:string, data?:any):ITimerEvent {\n\t\tvar topic ='public';\n\t\tvar event = this.timeKeeper.start(topic, name);\n\t\tif(data) {\n\t\t\tevent.data = data;\n\t\t}\n\t\treturn event;\n\t}\n\n\tpublic publicLog(eventName:string, data?:any):void {\n\t\tthis.handleEvent(eventName, data);\n\t}\n\n\tpublic getAppendersCount(): number {\n\t\treturn this.appenders.length;\n\t}\n\n\tpublic getAppenders(): ITelemetryAppender[] {\n\t\treturn this.appenders;\n\t}\n\n\tpublic addTelemetryAppender(appender: ITelemetryAppender): void {\n\t\tthis.appenders.push(appender);\n\t}\n\n\tpublic removeTelemetryAppender(appender: ITelemetryAppender): void {\n\t\tvar index= this.appenders.indexOf(appender);\n\n\t\tif (index > -1) {\n\t\t\tthis.appenders.splice(index, 1);\n\t\t}\n\t}\n\n\tpublic setInstantiationService(instantiationService: IInstantiationService): void {\n\t\tthis.instantiationService = instantiationService;\n\n\t\tif (this.instantiationService) {\n\t\t\tthis.loadTelemetryAppendersFromRegistery();\n\t\t}\n\t}\n\n\tprotected handleEvent(eventName:string, data?:any):void {\n\t\tthrow new Error('Not implemented!');\n\t}\n}\n\nexport var Extenstions = {\n\tTelemetryAppenders : 'telemetry.appenders'\n};\n\nexport interface ITelemetryAppendersRegistry {\n\tregisterTelemetryAppenderDescriptor(appenderDescriptor: SyncDescriptor0<ITelemetryAppender>): void;\n\tgetTelemetryAppenderDescriptors(): SyncDescriptor0<ITelemetryAppender>[];\n}\n\nclass TelemetryAppendersRegistry implements ITelemetryAppendersRegistry {\n\n\tprivate telemetryAppenderDescriptors: SyncDescriptor0<ITelemetryAppender>[];\n\n\tconstructor() {\n\t\tthis.telemetryAppenderDescriptors = [];\n\t}\n\n\tpublic registerTelemetryAppenderDescriptor(descriptor:SyncDescriptor0<ITelemetryAppender>): void {\n\t\tthis.telemetryAppenderDescriptors.push(descriptor);\n\t}\n\n\tpublic getTelemetryAppenderDescriptors():  SyncDescriptor0<ITelemetryAppender>[] {\n\t\treturn this.telemetryAppenderDescriptors;\n\t}\n}\n\nRegistry.add(Extenstions.TelemetryAppenders, new TelemetryAppendersRegistry());","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict'\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport descriptors = require('vs/platform/instantiation/common/descriptors');\nimport instantiation = require('vs/platform/instantiation/common/instantiation');\nimport {IDisposable} from 'vs/base/common/lifecycle';\n\n// --- thread service (web workers)\n\nexport var IThreadService = instantiation.createDecorator<IThreadService>('threadService');\n\nexport interface IDynamicProxy<T> extends IDisposable {\n\tgetProxyDefinition(): T;\n}\n\nexport interface IThreadService {\n\tserviceId : instantiation.ServiceIdentifier<any>;\n\n\t// --- BEGIN deprecated methods\n\tisInMainThread: boolean;\n\n\tensureWorkers(): void;\n\taddStatusListener(listener: IThreadServiceStatusListener): void;\n\tremoveStatusListener(listener: IThreadServiceStatusListener): void;\n\n\tMainThread(obj: IThreadSynchronizableObject<any>, methodName: string, target: Function, param: any[]): TPromise<any>;\n\tOneWorker(obj: IThreadSynchronizableObject<any>, methodName: string, target: Function, param: any[], affinity: ThreadAffinity): TPromise<any>;\n\tAllWorkers(obj: IThreadSynchronizableObject<any>, methodName: string, target: Function, param: any[]): TPromise<any>;\n\tEverywhere(obj: IThreadSynchronizableObject<any>, methodName: string, target: Function, param: any[]): any;\n\n\tcreateInstance<T extends IThreadSynchronizableObject<any>>(ctor: instantiation.INewConstructorSignature0<T>): T;\n\tcreateInstance<A1, T extends IThreadSynchronizableObject<any>>(ctor: instantiation.INewConstructorSignature1<A1, T>, a1: A1): T;\n\tcreateInstance<A1, A2, T extends IThreadSynchronizableObject<any>>(ctor: instantiation.INewConstructorSignature2<A1, A2, T>, a1: A1, a2: A2): T;\n\tcreateInstance<A1, A2, A3, T extends IThreadSynchronizableObject<any>>(ctor: instantiation.INewConstructorSignature3<A1, A2, A3, T>, a1: A1, a2: A2, a3: A3): T;\n\n\tcreateInstance<T extends IThreadSynchronizableObject<any>>(descriptor: descriptors.AsyncDescriptor0<T>): T;\n\tcreateInstance<A1, T extends IThreadSynchronizableObject<any>>(descriptor: descriptors.AsyncDescriptor1<A1, T>, a1: A1): T;\n\tcreateInstance<A1, A2, T extends IThreadSynchronizableObject<any>>(descriptor: descriptors.AsyncDescriptor2<A1, A2, T>, a1: A1, a2: A2): T;\n\tcreateInstance<A1, A2, A3, T extends IThreadSynchronizableObject<any>>(descriptor: descriptors.AsyncDescriptor3<A1, A2, A3, T>, a1: A1, a2: A2, a3: A3): T;\n\n\tregisterInstance<T extends IThreadSynchronizableObject<any>>(instance: T): void;\n\n\t// --- END deprecated methods\n\n\tcreateDynamicProxyFromMethods<T>(obj:T): IDynamicProxy<T>;\n\tcreateDynamicProxyFromMembers<T>(obj:T, allowedMembers:string[]): IDynamicProxy<T>;\n\tisProxyObject<T>(obj: T): boolean;\n\n\tgetRemotable<T>(ctor: instantiation.INewConstructorSignature0<T>): T;\n\n\tregisterRemotableInstance(ctor: any, instance: any): void;\n}\n\nexport class IRemotableCtorMap {\n\t[identifier:string]:Function;\n}\n\nexport class IRemotableCtorAffinityMap {\n\t[identifier:string]: {\n\t\tctor: Function;\n\t\taffinity: ThreadAffinity;\n\t};\n}\n\nexport class Remotable {\n\n\tprivate static PROP_NAME = '$__REMOTABLE_ID';\n\n\tpublic static Registry = {\n\t\tMainContext: <IRemotableCtorMap>Object.create(null),\n\t\tPluginHostContext: <IRemotableCtorMap>Object.create(null),\n\t\tWorkerContext: <IRemotableCtorAffinityMap>Object.create(null),\n\t};\n\n\tpublic static getId(ctor: any): string {\n\t\treturn (ctor[Remotable.PROP_NAME] || null);\n\t}\n\n\tpublic static MainContext(identifier: string) {\n\t\treturn function (target: Function) {\n\t\t\tRemotable._ensureUnique(identifier);\n\t\t\tRemotable.Registry.MainContext[identifier] = target;\n\t\t\ttarget[Remotable.PROP_NAME] = identifier;\n\t\t}\n\t}\n\n\tpublic static PluginHostContext(identifier: string) {\n\t\treturn function (target: Function) {\n\t\t\tRemotable._ensureUnique(identifier);\n\t\t\tRemotable.Registry.PluginHostContext[identifier] = target;\n\t\t\ttarget[Remotable.PROP_NAME] = identifier;\n\t\t}\n\t}\n\n\tpublic static WorkerContext(identifier: string, whichWorker:ThreadAffinity) {\n\t\treturn function (target: Function) {\n\t\t\tRemotable._ensureUnique(identifier);\n\t\t\tRemotable.Registry.WorkerContext[identifier] = {\n\t\t\t\tctor: target,\n\t\t\t\taffinity: whichWorker\n\t\t\t};\n\t\t\ttarget[Remotable.PROP_NAME] = identifier;\n\t\t}\n\t}\n\n\tprivate static _ensureUnique(identifier:string): void {\n\t\tif (Remotable.Registry.MainContext[identifier] || Remotable.Registry.PluginHostContext[identifier] || Remotable.Registry.WorkerContext[identifier]) {\n\t\t\tthrow new Error('Duplicate Remotable identifier found');\n\t\t}\n\t}\n}\n\nexport interface IThreadSynchronizableObject<S> {\n\tgetId():string;\n\n\tcreationDone?:()=>void;\n\n\tasyncCtor?:()=>TPromise<void>;\n\n\tgetSerializableState?:()=>S;\n\n\tsetData?:(data:S)=>void;\n}\n\nexport enum ThreadAffinity {\n\tNone = 0,\n\tGroup1 = 1,\n\tGroup2 = 2,\n\tGroup3 = 3,\n\tGroup4 = 4,\n\tGroup5 = 5,\n\tGroup6 = 6,\n\tGroup7 = 7,\n\tGroup8 = 8,\n\tGroup9 = 9,\n\tAll = 10\n}\n\nexport interface IWorkerStatus {\n\tqueueSize:number;\n}\n\nexport interface IThreadServiceStatus {\n\tworkers: IWorkerStatus[];\n}\n\nexport interface IThreadServiceStatusListener {\n\tonThreadServiceStatus(status:IThreadServiceStatus): void;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {Remotable, IThreadService} from 'vs/platform/thread/common/thread';\nimport {IStorageService, StorageScope} from 'vs/platform/storage/common/storage';\n\n@Remotable.MainContext('MainThreadStorage')\nexport class MainThreadStorage {\n\n\tprivate _storageService: IStorageService;\n\n\tconstructor( @IStorageService storageService: IStorageService) {\n\t\tthis._storageService = storageService;\n\t}\n\n\tgetValue<T>(shared: boolean, key: string): TPromise<T> {\n\t\tlet jsonValue = this._storageService.get(key, shared ? StorageScope.GLOBAL : StorageScope.WORKSPACE);\n\t\tif (!jsonValue) {\n\t\t\treturn TPromise.as(undefined);\n\t\t}\n\t\tlet value: T;\n\t\ttry {\n\t\t\tvalue = JSON.parse(jsonValue);\n\t\t\treturn TPromise.as(value);\n\t\t} catch (err) {\n\t\t\treturn TPromise.wrapError(err);\n\t\t}\n\t}\n\n\tsetValue(shared: boolean, key: string, value: any): TPromise<any> {\n\t\tlet jsonValue: any;\n\t\ttry {\n\t\t\tjsonValue = JSON.stringify(value);\n\t\t\tthis._storageService.store(key, jsonValue, shared ? StorageScope.GLOBAL : StorageScope.WORKSPACE);\n\t\t} catch (err) {\n\t\t\treturn TPromise.wrapError(err);\n\t\t}\n\t}\n}\n\nexport class PluginHostStorage {\n\n\tprivate _proxy: MainThreadStorage;\n\n\tconstructor(threadService: IThreadService) {\n\t\tthis._proxy = threadService.getRemotable(MainThreadStorage);\n\t}\n\n\tgetValue<T>(shared: boolean, key: string, defaultValue?: T): TPromise<T> {\n\t\treturn this._proxy.getValue(shared, key).then(value => value || defaultValue);\n\t}\n\n\tsetValue(shared:boolean, key: string, value: any): TPromise<void> {\n\t\treturn this._proxy.setValue(shared, key, value);\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {IPluginDescription, IMessage, IPluginStatus} from 'vs/platform/plugins/common/plugins';\nimport {PluginsRegistry} from 'vs/platform/plugins/common/pluginsRegistry';\nimport WinJS = require('vs/base/common/winjs.base');\nimport {Remotable, IThreadService} from 'vs/platform/thread/common/thread';\nimport {ActivatedPlugin, AbstractPluginService, IPluginModule, IPluginContext, IPluginMemento, loadAMDModule} from 'vs/platform/plugins/common/abstractPluginService';\nimport Severity from 'vs/base/common/severity';\nimport {IMessageService} from 'vs/platform/message/common/message';\nimport {ITelemetryService} from 'vs/platform/telemetry/common/telemetry';\nimport {PluginHostStorage} from 'vs/platform/storage/common/remotable.storage';\nimport * as paths from 'vs/base/common/paths';\nimport {IWorkspaceContextService, IConfiguration} from 'vs/platform/workspace/common/workspace';\nimport {disposeAll} from 'vs/base/common/lifecycle';\n\nclass PluginMemento implements IPluginMemento {\n\n\tprivate _id: string;\n\tprivate _shared: boolean;\n\tprivate _storage: PluginHostStorage;\n\n\tprivate _init:WinJS.TPromise<PluginMemento>\n\tprivate _value: { [n: string]: any;}\n\n\tconstructor(id: string, global:boolean, storage: PluginHostStorage) {\n\t\tthis._id = id;\n\t\tthis._shared = global;\n\t\tthis._storage = storage;\n\n\t\tthis._init = this._storage.getValue(this._shared, this._id, Object.create(null)).then(value => {\n\t\t\tthis._value = value;\n\t\t\treturn this;\n\t\t});\n\t}\n\n\tget whenReady(): WinJS.TPromise<PluginMemento> {\n\t\treturn this._init;\n\t}\n\n\tget<T>(key: string, defaultValue: T): T {\n\t\tlet value = this._value[key]\n\t\tif (typeof value === 'undefined') {\n\t\t\tvalue = defaultValue;\n\t\t}\n\t\treturn value;\n\t}\n\n\tupdate(key: string, value: any): Thenable<boolean> {\n\t\tthis._value[key] = value;\n\t\treturn this._storage\n\t\t\t.setValue(this._shared, this._id, this._value)\n\t\t\t.then(() => true);\n\t}\n}\n\n@Remotable.MainContext('MainProcessPluginService')\nexport class MainProcessPluginService extends AbstractPluginService {\n\n\tprivate _threadService: IThreadService;\n\tprivate _messageService: IMessageService;\n\tprivate _telemetryService: ITelemetryService;\n\tprivate _proxy: PluginHostPluginService;\n\tprivate _isDev: boolean;\n\tprivate _pluginsStatus: { [id: string]: IPluginStatus };\n\n\t/**\n\t * This class is constructed manually because it is a service, so it doesn't use any ctor injection\n\t */\n\tconstructor(\n\t\tcontextService: IWorkspaceContextService,\n\t\tthreadService: IThreadService,\n\t\tmessageService:IMessageService,\n\t\ttelemetryService:ITelemetryService\n\t) {\n\t\tlet config = contextService.getConfiguration();\n\t\tthis._isDev = !config.env.isBuilt || !!config.env.pluginDevelopmentPath;\n\n\t\tthis._messageService = messageService;\n\t\tthreadService.registerRemotableInstance(MainProcessPluginService, this);\n\t\tsuper(false);\n\t\tthis._threadService = threadService;\n\t\tthis._telemetryService = telemetryService;\n\t\tthis._proxy = this._threadService.getRemotable(PluginHostPluginService);\n\t\tthis._pluginsStatus = {};\n\n\t\tPluginsRegistry.handleExtensionPoints((severity, source, message) => {\n\t\t\tthis.showMessage(severity, source, message);\n\t\t});\n\t}\n\n\tprivate getTelemetryActivationEvent(pluginDescription: IPluginDescription): any {\n\t\tvar event = {\n\t\t\tid: pluginDescription.id,\n\t\t\tname: pluginDescription.name,\n\t\t\tpublisherDisplayName: pluginDescription.publisher,\n\t\t\tactivationEvents: pluginDescription.activationEvents ? pluginDescription.activationEvents.join(',') : null\n\t\t};\n\n\t\tfor (let contribution in pluginDescription.contributes) {\n\t\t\tlet contributionDetails = pluginDescription.contributes[contribution];\n\n\t\t\tif (!contributionDetails) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tswitch (contribution) {\n\t\t\t\tcase 'debuggers':\n\t\t\t\t\tlet types = contributionDetails.reduce((p,c)=> p ? p + ',' + c['type']: c['type'], '');\n\t\t\t\t\tevent['contribution.debuggers'] = types;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'grammars':\n\t\t\t\t\tlet grammers = contributionDetails.reduce((p,c)=> p ? p + ',' + c['language']: c['language'], '');\n\t\t\t\t\tevent['contribution.grammars'] = grammers;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'languages':\n\t\t\t\t\tlet languages = contributionDetails.reduce((p,c)=> p ? p + ',' + c['id']: c['id'], '');\n\t\t\t\t\tevent['contribution.languages'] = languages;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'tmSnippets':\n\t\t\t\t\tlet tmSnippets = contributionDetails.reduce((p,c)=> p ? p + ',' + c['languageId']: c['languageId'], '');\n\t\t\t\t\tevent['contribution.tmSnippets'] = tmSnippets;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tevent[`contribution.${contribution}`] = true;\n\t\t\t}\n\t\t}\n\n\t\treturn event;\n\t}\n\n\tprotected _showMessage(severity:Severity, msg:string): void {\n\t\tthis._proxy.$doShowMessage(severity, msg);\n\t\tthis.$doShowMessage(severity, msg);\n\t}\n\n\tpublic showMessage(severity:Severity, source: string, message:string) {\n\t\tsuper.showMessage(severity, source, message);\n\t\tif (!this._pluginsStatus[source]) {\n\t\t\tthis._pluginsStatus[source] = { messages: [] };\n\t\t}\n\t\tthis._pluginsStatus[source].messages.push({ type: severity, source, message });\n\t}\n\n\tpublic $doShowMessage(severity:Severity, msg:string): void {\n\t\tlet messageShown = false;\n\t\tif (severity === Severity.Error || severity === Severity.Warning) {\n\t\t\tif (this._isDev) {\n\t\t\t\t// Only show nasty intrusive messages if doing extension development.\n\t\t\t\tthis._messageService.show(severity, msg);\n\t\t\t\tmessageShown = true;\n\t\t\t}\n\t\t}\n\n\t\tif (!messageShown) {\n\t\t\tswitch (severity) {\n\t\t\t\tcase Severity.Error:\n\t\t\t\t\tconsole.error(msg);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Severity.Warning:\n\t\t\t\t\tconsole.warn(msg);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log(msg);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic getPluginsStatus(): { [id: string]: IPluginStatus } {\n\t\treturn this._pluginsStatus;\n\t}\n\n\tpublic deactivate(pluginId:string): void {\n\t\tthis._proxy.deactivate(pluginId);\n\t}\n\n\t// -- overwriting AbstractPluginService\n\n\tprotected _actualActivatePlugin(pluginDescription: IPluginDescription): WinJS.TPromise<ActivatedPlugin> {\n\t\tlet event = this.getTelemetryActivationEvent(pluginDescription);\n\t\tthis._telemetryService.publicLog('activatePlugin', event);\n\t\t// redirect plugin activation to the plugin host\n\t\treturn this._proxy.$activatePluginInPluginHost(pluginDescription).then(_ => {\n\t\t\t// the plugin host calls $onPluginActivatedInPluginHost, where we write to `activatedPlugins`\n\t\t\treturn this.activatedPlugins[pluginDescription.id];\n\t\t});\n\t}\n\n\t// -- called by plugin host\n\n\tpublic $onPluginHostReady(pluginDescriptions: IPluginDescription[], messages:IMessage[]): void {\n\t\tPluginsRegistry.registerPlugins(pluginDescriptions);\n\t\tthis.registrationDone(messages);\n\t}\n\n\tpublic $onPluginActivatedInPluginHost(pluginId:string, pluginExports:any): void {\n\t\tthis.activatedPlugins[pluginId] = new ActivatedPlugin(false, { activate: undefined, deactivate: undefined}, pluginExports, []);\n\t}\n\n\tpublic $onPluginActivationFailedInPluginHost(pluginId:string, err:any): void {\n\t\tthis.activatedPlugins[pluginId] = new ActivatedPlugin(true, { activate: undefined, deactivate: undefined}, {}, []);\n\t}\n}\n\n@Remotable.PluginHostContext('PluginHostPluginService')\nexport class PluginHostPluginService extends AbstractPluginService {\n\n\tprivate _threadService: IThreadService;\n\tprivate _storage: PluginHostStorage;\n\tprivate _proxy: MainProcessPluginService;\n\n\t/**\n\t * This class is constructed manually because it is a service, so it doesn't use any ctor injection\n\t */\n\tconstructor(threadService: IThreadService) {\n\t\tthreadService.registerRemotableInstance(PluginHostPluginService, this);\n\t\tsuper(true);\n\t\tthis._threadService = threadService;\n\t\tthis._storage = new PluginHostStorage(threadService);\n\t\tthis._proxy = this._threadService.getRemotable(MainProcessPluginService);\n\t}\n\n\tprotected _showMessage(severity:Severity, msg:string): void {\n\t\tthis._proxy.$doShowMessage(severity, msg);\n\t\tthis.$doShowMessage(severity, msg);\n\t}\n\n\tpublic $doShowMessage(severity:Severity, msg:string): void {\n\t\tswitch (severity) {\n\t\t\tcase Severity.Error:\n\t\t\t\tconsole.error(msg);\n\t\t\t\tbreak;\n\t\t\tcase Severity.Warning:\n\t\t\t\tconsole.warn(msg);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log(msg);\n\t\t}\n\t}\n\n\tpublic deactivate(pluginId:string): void {\n\t\tlet plugin = this.activatedPlugins[pluginId];\n\t\tif (!plugin) {\n\t\t\treturn;\n\t\t}\n\n\t\t// call deactivate if available\n\t\ttry {\n\t\t\tif (typeof plugin.module.deactivate === 'function') {\n\t\t\t\tplugin.module.deactivate();\n\t\t\t}\n\t\t} catch(err) {\n\t\t\t// TODO: Do something with err if this is not the shutdown case\n\t\t}\n\n\t\t// clean up subscriptions\n\t\ttry {\n\t\t\tdisposeAll(plugin.subscriptions)\n\t\t} catch(err) {\n\t\t\t// TODO: Do something with err if this is not the shutdown case\n\t\t}\n\t}\n\n\t// -- overwriting AbstractPluginService\n\n\tpublic registrationDone(messages:IMessage[]): void {\n\t\tsuper.registrationDone([]);\n\t\tthis._proxy.$onPluginHostReady(PluginsRegistry.getAllPluginDescriptions(), messages);\n\t}\n\n\tprotected _loadPluginModule(pluginDescription: IPluginDescription): WinJS.TPromise<IPluginModule> {\n\t\tif (pluginDescription.isAMD) {\n\t\t\treturn loadAMDModule(uriFromPath(pluginDescription.main));\n\t\t}\n\n\t\treturn loadCommonJSModule(pluginDescription.main);\n\t}\n\n\tprotected _loadPluginContext(pluginDescription: IPluginDescription): WinJS.TPromise<IPluginContext> {\n\n\t\tlet globalState = new PluginMemento(pluginDescription.id, true, this._storage);\n\t\tlet workspaceState = new PluginMemento(pluginDescription.id, false, this._storage);\n\n\t\treturn WinJS.TPromise.join([globalState.whenReady, workspaceState.whenReady]).then(() => {\n\t\t\treturn Object.freeze(<IPluginContext>{\n\t\t\t\tglobalState,\n\t\t\t\tworkspaceState,\n\t\t\t\tsubscriptions: [],\n\t\t\t\tget extensionPath() { return pluginDescription.extensionFolderPath },\n\t\t\t\tasAbsolutePath: (relativePath:string) => { return paths.normalize(paths.join(pluginDescription.extensionFolderPath, relativePath), true); }\n\t\t\t});\n\t\t});\n\t}\n\n\tprotected _actualActivatePlugin(pluginDescription: IPluginDescription): WinJS.TPromise<ActivatedPlugin> {\n\n\t\treturn super._actualActivatePlugin(pluginDescription).then((activatedPlugin) => {\n\t\t\tlet proxyObj = this._threadService.createDynamicProxyFromMethods(activatedPlugin.exports);\n\t\t\tactivatedPlugin.subscriptions.push(proxyObj);\n\t\t\tthis._proxy.$onPluginActivatedInPluginHost(pluginDescription.id, proxyObj.getProxyDefinition());\n\t\t\treturn activatedPlugin;\n\t\t}, (err) => {\n\t\t\tthis._proxy.$onPluginActivationFailedInPluginHost(pluginDescription.id, err);\n\t\t\tthrow err;\n\t\t});\n\t}\n\n\t// -- called by main thread\n\n\tpublic $activatePluginInPluginHost(pluginDescription: IPluginDescription): WinJS.TPromise<void> {\n\t\treturn this._activatePlugin(pluginDescription).then(() => {\n\t\t\treturn null;\n\t\t});\n\t}\n\n}\n\nfunction loadCommonJSModule<T>(modulePath: string): WinJS.TPromise<T> {\n\tvar r: T = null;\n\ttry {\n\t\tr = require.__$__nodeRequire<T>(modulePath);\n\t} catch(e) {\n\t\treturn WinJS.TPromise.wrapError(e);\n\t}\n\treturn WinJS.TPromise.as(r);\n}\n\n\n// TODO@Alex: Duplicated in:\n// * src\\bootstrap.js\n// * src\\vs\\workbench\\electron-main\\bootstrap.js\n// * src\\vs\\platform\\plugins\\common\\nativePluginService.ts\nfunction uriFromPath(_path) {\n\tvar pathName = _path.replace(/\\\\/g, '/');\n\n\tif (pathName.length > 0 && pathName.charAt(0) !== '/') {\n\t\tpathName = '/' + pathName;\n\t}\n\n\treturn encodeURI('file://' + pathName);\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport AbstractTelemetryService = require('vs/platform/telemetry/common/abstractTelemetryService');\nimport {OneWorkerAttr} from 'vs/platform/thread/common/threadService';\nimport {ITelemetryService, ITelemetryInfo, ITelemetryAppender} from 'vs/platform/telemetry/common/telemetry';\nimport {Remotable, IThreadService, ThreadAffinity} from 'vs/platform/thread/common/thread';\n\n/**\n * Helper always instantiated in the main process to receive telemetry events from remote telemetry services\n */\n@Remotable.MainContext('RemoteTelemetryServiceHelper')\nexport class RemoteTelemetryServiceHelper {\n\n\tprivate _telemetryService: ITelemetryService;\n\n\tconstructor(@ITelemetryService telemetryService: ITelemetryService) {\n\t\tthis._telemetryService = telemetryService;\n\t}\n\n\tpublic _handleRemoteTelemetryEvent(eventName:string, data?:any):void {\n\t\tthis._telemetryService.publicLog(eventName, data);\n\t}\n\n\tpublic getTelemetryInfo(): Thenable<ITelemetryInfo> {\n\t\treturn this._telemetryService.getTelemetryInfo();\n\t}\n}\n\n/**\n * Base class for remote telemetry services (instantiated in plugin host or in web workers)\n */\nexport class AbstractRemoteTelemetryService extends AbstractTelemetryService.AbstractTelemetryService implements ITelemetryService {\n\n\tprivate _proxy: RemoteTelemetryServiceHelper;\n\n\tconstructor(threadService: IThreadService) {\n\t\t// Log all events including public, since they will be forwarded to the main which will do the real filtering\n\t\tsuper();\n\t\tthis._proxy = threadService.getRemotable(RemoteTelemetryServiceHelper);\n\t}\n\n\tgetTelemetryInfo(): Thenable<ITelemetryInfo> {\n\t\treturn this._proxy.getTelemetryInfo();\n\t}\n\n\tpublic addTelemetryAppender(appender: ITelemetryAppender): void {\n\t\tthrow new Error('Telemetry appenders are not supported in this execution envirnoment');\n\t}\n\n\tprotected handleEvent(eventName:string, data?:any):void {\n\t\tthis._proxy._handleRemoteTelemetryEvent(eventName, data);\n\t}\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict'\n\nimport Platform = require('vs/platform/platform');\nimport types = require('vs/base/common/types');\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport thread = require('./thread');\n\nexport var THREAD_SERVICE_PROPERTY_NAME = '__$$__threadService';\n\nfunction findMember(proto:any, target:any): string {\n\tfor (var i in proto) {\n\t\tif (proto[i] === target) {\n\t\t\treturn i;\n\t\t}\n\t}\n\tthrow new Error('Member not found in prototype');\n}\n\nfunction findThreadService(obj:any): thread.IThreadService {\n\tvar threadService:thread.IThreadService = obj[THREAD_SERVICE_PROPERTY_NAME];\n\tif (!threadService) {\n\t\tthrow new Error('Objects that use thread attributes must be instantiated with the thread service');\n\t}\n\treturn threadService;\n}\n\nexport function MainThreadAttr(type:Function, target:Function): void {\n\tvar methodName = findMember(type.prototype, target);\n\ttype.prototype[methodName] = function(...param:any[]) {\n\t\treturn findThreadService(this).MainThread(this, methodName, target, param);\n\t};\n}\n\nexport interface IOneWorkerAnnotation {\n\t(type: Function, target: Function, affinity?: thread.ThreadAffinity): void;\n\t(type: Function, target: Function, condition: () => TPromise<any>, affinity?: thread.ThreadAffinity): void;\n}\n\nfunction OneWorkerFn(type: Function, target: Function, conditionOrAffinity?: any, affinity:thread.ThreadAffinity = thread.ThreadAffinity.None): void {\n\n\tvar methodName = findMember(type.prototype, target),\n\t\tcondition: () => TPromise<any>;\n\n\tif(typeof conditionOrAffinity === 'function') {\n\t\tcondition = conditionOrAffinity;\n\n\t} else if(typeof conditionOrAffinity !== 'undefined') {\n\t\taffinity = conditionOrAffinity;\n\t}\n\n\ttype.prototype[methodName] = function(...param:any[]) {\n\n\t\tif(!condition) {\n\t\t\treturn findThreadService(this).OneWorker(this, methodName, target, param, affinity);\n\n\t\t} else {\n\t\t\tvar that = this,\n\t\t\t\tpromise = condition.call(that);\n\n\t\t\tif(!TPromise.is(promise)) {\n\t\t\t\tpromise = TPromise.as(promise);\n\t\t\t}\n\n\t\t\treturn promise.then(function() {\n\t\t\t\treturn findThreadService(that).OneWorker(that, methodName, target, param, affinity);\n\t\t\t});\n\t\t}\n\n\t};\n}\n\nexport var OneWorkerAttr: IOneWorkerAnnotation = OneWorkerFn;\n\nexport function AllWorkersAttr(type:Function, target:Function): void {\n\tvar methodName = findMember(type.prototype, target);\n\ttype.prototype[methodName] = function(...param:any[]) {\n\t\treturn findThreadService(this).AllWorkers(this, methodName, target, param);\n\t};\n}\n\nexport function EverywhereAttr(type:Function, target:Function): void {\n\tvar methodName = findMember(type.prototype, target);\n\ttype.prototype[methodName] = function(...param:any[]) {\n\t\treturn findThreadService(this).Everywhere(this, methodName, target, param);\n\t};\n}\n\nclass SynchronizableObjectsRegistry {\n\tprivate _list: thread.IThreadSynchronizableObject<any>[] = [];\n\n\tconstructor() {\n\t\tthis._list = [];\n\t}\n\n\tpublic register(obj: thread.IThreadSynchronizableObject<any>): void {\n\t\tthis._list.push(obj);\n\t}\n\n\tpublic read(): thread.IThreadSynchronizableObject<any>[] {\n\t\treturn this._list;\n\t}\n}\n\nexport var Extensions = {\n\tSynchronizableObjects: 'SynchronizableObjects'\n};\n\nPlatform.Registry.add(Extensions.SynchronizableObjects, new SynchronizableObjectsRegistry())\n\nexport function registerThreadSynchronizableObject(obj: thread.IThreadSynchronizableObject<any>): void {\n\tvar registry = <SynchronizableObjectsRegistry>Platform.Registry.as(Extensions.SynchronizableObjects);\n\tregistry.register(obj);\n}\n\nexport function readThreadSynchronizableObjects(): thread.IThreadSynchronizableObject<any>[] {\n\tvar registry = <SynchronizableObjectsRegistry>Platform.Registry.as(Extensions.SynchronizableObjects);\n\treturn registry.read();\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {EventEmitter} from 'vs/base/common/eventEmitter';\nimport {StrictPrefix} from 'vs/editor/common/modes/modesFilters';\nimport {NullMode} from 'vs/editor/common/modes/nullMode';\nimport {handleEvent} from 'vs/editor/common/modes/supports';\nimport {AbstractModeWorker} from 'vs/editor/common/modes/abstractModeWorker';\nimport Modes = require('vs/editor/common/modes');\nimport EditorCommon = require('vs/editor/common/editorCommon');\nimport URI from 'vs/base/common/uri';\nimport {IDisposable} from 'vs/base/common/lifecycle';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {IInstantiationService} from 'vs/platform/instantiation/common/instantiation';\nimport {IThreadService, ThreadAffinity} from 'vs/platform/thread/common/thread';\nimport {OneWorkerAttr, AllWorkersAttr} from 'vs/platform/thread/common/threadService';\nimport {AsyncDescriptor0, AsyncDescriptor2, createAsyncDescriptor2} from 'vs/platform/instantiation/common/descriptors';\n\nexport function createWordRegExp(allowInWords:string = ''): RegExp {\n\treturn NullMode.createWordRegExp(allowInWords);\n}\n\nexport class AbstractMode<W extends AbstractModeWorker> implements Modes.IMode {\n\n\t_instantiationService:IInstantiationService;\n\t_threadService:IThreadService;\n\tprivate _descriptor:Modes.IModeDescriptor;\n\n\tprivate _workerPiecePromise:TPromise<W>;\n\n\t_options:any;\n\n\t// adapters start\n\tpublic autoValidateDelay:number;\n\tpublic occurrencesSupport:Modes.IOccurrencesSupport;\n\tpublic suggestSupport:Modes.ISuggestSupport;\n\tpublic inplaceReplaceSupport:Modes.IInplaceReplaceSupport;\n\tpublic diffSupport:Modes.IDiffSupport;\n\tpublic dirtyDiffSupport:Modes.IDirtyDiffSupport;\n\tpublic linkSupport:Modes.ILinkSupport;\n\tpublic configSupport:Modes.IConfigurationSupport;\n\tpublic commentsSupport:Modes.ICommentsSupport;\n\tpublic tokenTypeClassificationSupport:Modes.ITokenTypeClassificationSupport;\n\tpublic codeLensSupport:Modes.ICodeLensSupport;\n\n\t// adapters end\n\n\tprivate _eventEmitter = new EventEmitter();\n\tprivate _simplifiedMode: Modes.IMode;\n\n\tconstructor(\n\t\tdescriptor:Modes.IModeDescriptor,\n\t\tinstantiationService: IInstantiationService,\n\t\tthreadService: IThreadService\n\t) {\n\t\tthis._instantiationService = instantiationService;\n\t\tthis._threadService = threadService;\n\t\tthis._descriptor = descriptor;\n\n\t\tthis._options = null;\n\n\t\tthis.autoValidateDelay = 500;\n\t\tthis.occurrencesSupport = this;\n\t\tthis.suggestSupport = this;\n\t\tthis.inplaceReplaceSupport = this;\n\t\tthis.diffSupport = this;\n\t\tthis.dirtyDiffSupport = this;\n\t\tthis.linkSupport = this;\n\t\tthis.configSupport = this;\n\t\tthis.commentsSupport = this;\n\t\tthis.tokenTypeClassificationSupport = this;\n\n\t\tthis._workerPiecePromise = null;\n\t\tthis._simplifiedMode = null;\n\t}\n\n\tpublic getId(): string {\n\t\treturn this._descriptor.id;\n\t}\n\n\tpublic creationDone(): void {\n\t\tif (this._threadService.isInMainThread) {\n\t\t\t// Pick a worker to do validation\n\t\t\tthis._pickAWorkerToValidate();\n\t\t}\n\t}\n\n\tpublic toSimplifiedMode(): Modes.IMode {\n\t\tif (!this._simplifiedMode) {\n\t\t\tthis._simplifiedMode = new SimplifiedMode(this);\n\t\t}\n\t\treturn this._simplifiedMode;\n\t}\n\n\tprivate _getOrCreateWorker(): TPromise<W> {\n\t\tif (!this._workerPiecePromise) {\n\t\t\tvar workerDescriptor: AsyncDescriptor2<Modes.IMode, Modes.IWorkerParticipant[], W> = this._getWorkerDescriptor();\n\t\t\t// First, load the code of the worker (without instantiating it)\n\t\t\tthis._workerPiecePromise = AbstractMode._loadModule(workerDescriptor.moduleName).then(() => {\n\t\t\t\t// Then, load & instantiate all the participants\n\t\t\t\tvar participants = this._descriptor.workerParticipants;\n\t\t\t\treturn TPromise.join<Modes.IWorkerParticipant>(participants.map((participant) => {\n\t\t\t\t\treturn this._instantiationService.createInstance(participant);\n\t\t\t\t}));\n\t\t\t}).then((participants:Modes.IWorkerParticipant[]) => {\n\t\t\t\treturn this._instantiationService.createInstance<Modes.IMode, Modes.IWorkerParticipant[], W>(workerDescriptor, this, participants);\n\t\t\t});\n\t\t}\n\n\t\treturn this._workerPiecePromise;\n\t}\n\n\tprivate static _loadModule(moduleName:string): TPromise<any> {\n\t\treturn new TPromise((c, e, p) => {\n\t\t\trequire([moduleName], c, e);\n\t\t}, () => {\n\t\t\t// Cannot cancel loading code\n\t\t});\n\t}\n\n\tprotected _getWorkerDescriptor(): AsyncDescriptor2<Modes.IMode, Modes.IWorkerParticipant[], W> {\n\t\treturn createAsyncDescriptor2('vs/editor/common/modes/nullWorker', 'NullWorker');\n\t}\n\n\t_worker<T>(runner:(worker:W)=>TPromise<T>): TPromise<T>;\n\t_worker<T>(runner:(worker:W)=>T): TPromise<T>;\n\t_worker<T>(runner:(worker:W)=>any): TPromise<T> {\n\t\treturn this._getOrCreateWorker().then(runner);\n\t}\n\n\t// START mics interface implementations\n\n\tstatic $_pickAWorkerToValidate = OneWorkerAttr(AbstractMode, AbstractMode.prototype._pickAWorkerToValidate, ThreadAffinity.Group1);\n\tpublic _pickAWorkerToValidate(): TPromise<void> {\n\t\treturn this._worker((w) => w.enableValidator());\n\t}\n\n\tpublic getFilter(): Modes.ISuggestionFilter {\n\t\treturn StrictPrefix;\n\t}\n\n\tpublic addSupportChangedListener(callback: (e: EditorCommon.IModeSupportChangedEvent) => void) : IDisposable {\n\t\treturn this._eventEmitter.addListener2('modeSupportChanged', callback);\n\t}\n\n\tpublic registerSupport<T>(support:string, callback:(mode:Modes.IMode) => T) : IDisposable {\n\t\tvar supportImpl = callback(this);\n\t\tthis[support] = supportImpl;\n\t\tthis._eventEmitter.emit('modeSupportChanged', _createModeSupportChangedEvent(support));\n\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tif (this[support] === supportImpl) {\n\t\t\t\t\tdelete this[support];\n\t\t\t\t\tthis._eventEmitter.emit('modeSupportChanged', _createModeSupportChangedEvent(support));\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tstatic $suggest = OneWorkerAttr(AbstractMode, AbstractMode.prototype.suggest);\n\tpublic suggest(resource:URI, position:EditorCommon.IPosition):TPromise<Modes.ISuggestResult[]> {\n\t\treturn this._worker((w) => w.suggest(resource, position));\n\t}\n\n\tpublic getTriggerCharacters():string[] {\n\t\treturn [];\n\t}\n\n\tpublic shouldAutotriggerSuggest(context:Modes.ILineContext, offset:number, triggeredByCharacter:string): boolean {\n\t\treturn handleEvent(context, offset, (mode:Modes.IMode, context:Modes.ILineContext, offset:number) => {\n\n\t\t\tif (!mode.suggestSupport) {\n\t\t\t\t// Hit an inner mode without suggest support\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (mode instanceof AbstractMode) {\n\t\t\t\treturn (<AbstractMode<any>> mode).shouldAutotriggerSuggestImpl(context, offset, triggeredByCharacter);\n\t\t\t}\n\n\t\t\treturn mode.suggestSupport.shouldAutotriggerSuggest(context, offset, triggeredByCharacter);\n\t\t});\n\t}\n\n\tpublic shouldAutotriggerSuggestImpl(context:Modes.ILineContext, offset:number, triggeredByCharacter:string):boolean {\n\t\treturn true;\n\t}\n\n\tpublic shouldShowEmptySuggestionList():boolean {\n\t\treturn true;\n\t}\n\n\tstatic $findOccurrences = OneWorkerAttr(AbstractMode, AbstractMode.prototype.findOccurrences);\n\tpublic findOccurrences(resource:URI, position:EditorCommon.IPosition, strict:boolean = false): TPromise<Modes.IOccurence[]> {\n\t\treturn this._worker((w) => w.findOccurrences(resource, position, strict));\n\t}\n\n\tstatic $navigateValueSet = OneWorkerAttr(AbstractMode, AbstractMode.prototype.navigateValueSet);\n\tpublic navigateValueSet(resource:URI, position:EditorCommon.IRange, up:boolean):TPromise<Modes.IInplaceReplaceSupportResult> {\n\t\treturn this._worker((w) => w.inplaceReplaceSupport.navigateValueSet(resource, position, up));\n\t}\n\n\tstatic $computeDiff = OneWorkerAttr(AbstractMode, AbstractMode.prototype.computeDiff);\n\tpublic computeDiff(original:URI, modified:URI, ignoreTrimWhitespace:boolean):TPromise<EditorCommon.ILineChange[]> {\n\t\treturn this._worker((w) => w.computeDiff(original, modified, ignoreTrimWhitespace));\n\t}\n\n\tstatic $computeDirtyDiff = OneWorkerAttr(AbstractMode, AbstractMode.prototype.computeDirtyDiff);\n\tpublic computeDirtyDiff(resource:URI, ignoreTrimWhitespace:boolean):TPromise<EditorCommon.IChange[]> {\n\t\treturn this._worker((w) => w.computeDirtyDiff(resource, ignoreTrimWhitespace));\n\t}\n\n\tstatic $computeLinks = OneWorkerAttr(AbstractMode, AbstractMode.prototype.computeLinks);\n\tpublic computeLinks(resource:URI):TPromise<Modes.ILink[]> {\n\t\treturn this._worker((w) => w.computeLinks(resource));\n\t}\n\n\tpublic configure(options:any): TPromise<boolean> {\n\t\tthis._options = options;\n\n\t\tif (this._threadService.isInMainThread) {\n\t\t\treturn this._configureWorkers(options);\n\t\t} else {\n\t\t\treturn this._worker((w) => w.configure(options));\n\t\t}\n\t}\n\n\tstatic $_configureWorkers = AllWorkersAttr(AbstractMode, AbstractMode.prototype._configureWorkers);\n\tprivate _configureWorkers(options:any): TPromise<boolean> {\n\t\treturn this._worker((w) => w.configure(options));\n\t}\n\n\t// END\n\n\tpublic getWordDefinition():RegExp {\n\t\treturn NullMode.DEFAULT_WORD_REGEXP;\n\t}\n\n\tpublic getCommentsConfiguration():Modes.ICommentsConfiguration {\n\t\treturn null;\n\t}\n}\n\nclass SimplifiedMode implements Modes.IMode {\n\n\ttokenizationSupport: Modes.ITokenizationSupport;\n\telectricCharacterSupport: Modes.IElectricCharacterSupport;\n\tcommentsSupport: Modes.ICommentsSupport;\n\tcharacterPairSupport: Modes.ICharacterPairSupport;\n\ttokenTypeClassificationSupport: Modes.ITokenTypeClassificationSupport;\n\tonEnterSupport: Modes.IOnEnterSupport;\n\n\tprivate _sourceMode: Modes.IMode;\n\tprivate _eventEmitter: EventEmitter;\n\tprivate _id: string;\n\n\tconstructor(sourceMode: Modes.IMode) {\n\t\tthis._sourceMode = sourceMode;\n\t\tthis._eventEmitter = new EventEmitter();\n\t\tthis._id = 'vs.editor.modes.simplifiedMode:' + sourceMode.getId();\n\t\tthis._assignSupports();\n\n\t\tif (this._sourceMode.addSupportChangedListener) {\n\t\t\tthis._sourceMode.addSupportChangedListener((e) => {\n\t\t\t\tif (e.tokenizationSupport || e.electricCharacterSupport || e.commentsSupport || e.characterPairSupport || e.tokenTypeClassificationSupport || e.onEnterSupport) {\n\t\t\t\t\tthis._assignSupports();\n\t\t\t\t\tlet newEvent = SimplifiedMode._createModeSupportChangedEvent(e);\n\t\t\t\t\tthis._eventEmitter.emit('modeSupportChanged', newEvent);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic getId(): string {\n\t\treturn this._id;\n\t}\n\n\tpublic toSimplifiedMode(): Modes.IMode {\n\t\treturn this;\n\t}\n\n\tprivate _assignSupports(): void {\n\t\tthis.tokenizationSupport = this._sourceMode.tokenizationSupport;\n\t\tthis.electricCharacterSupport = this._sourceMode.electricCharacterSupport;\n\t\tthis.commentsSupport = this._sourceMode.commentsSupport;\n\t\tthis.characterPairSupport = this._sourceMode.characterPairSupport;\n\t\tthis.tokenTypeClassificationSupport = this._sourceMode.tokenTypeClassificationSupport;\n\t\tthis.onEnterSupport = this._sourceMode.onEnterSupport;\n\t}\n\n\tprivate static _createModeSupportChangedEvent(originalModeEvent:EditorCommon.IModeSupportChangedEvent): EditorCommon.IModeSupportChangedEvent {\n\t\tvar event = {\n\t\t\tcodeLensSupport: false,\n\t\t\ttokenizationSupport: originalModeEvent.tokenizationSupport,\n\t\t\toccurrencesSupport:false,\n\t\t\tdeclarationSupport:false,\n\t\t\ttypeDeclarationSupport:false,\n\t\t\tnavigateTypesSupport:false,\n\t\t\treferenceSupport:false,\n\t\t\tsuggestSupport:false,\n\t\t\tparameterHintsSupport:false,\n\t\t\textraInfoSupport:false,\n\t\t\toutlineSupport:false,\n\t\t\tlogicalSelectionSupport:false,\n\t\t\tformattingSupport:false,\n\t\t\tinplaceReplaceSupport:false,\n\t\t\tdiffSupport:false,\n\t\t\tdirtyDiffSupport:false,\n\t\t\temitOutputSupport:false,\n\t\t\tlinkSupport:false,\n\t\t\tconfigSupport:false,\n\t\t\telectricCharacterSupport: originalModeEvent.electricCharacterSupport,\n\t\t\tcommentsSupport: originalModeEvent.commentsSupport,\n\t\t\tcharacterPairSupport: originalModeEvent.characterPairSupport,\n\t\t\ttokenTypeClassificationSupport: originalModeEvent.tokenTypeClassificationSupport,\n\t\t\tquickFixSupport:false,\n\t\t\tonEnterSupport: originalModeEvent.onEnterSupport\n\t\t};\n\t\treturn event;\n\t}\n}\n\nexport var isDigit:(character:string, base:number)=>boolean = (function () {\n\n\tvar _0 = '0'.charCodeAt(0),\n\t\t_1 = '1'.charCodeAt(0),\n\t\t_2 = '2'.charCodeAt(0),\n\t\t_3 = '3'.charCodeAt(0),\n\t\t_4 = '4'.charCodeAt(0),\n\t\t_5 = '5'.charCodeAt(0),\n\t\t_6 = '6'.charCodeAt(0),\n\t\t_7 = '7'.charCodeAt(0),\n\t\t_8 = '8'.charCodeAt(0),\n\t\t_9 = '9'.charCodeAt(0),\n\t\t_a = 'a'.charCodeAt(0),\n\t\t_b = 'b'.charCodeAt(0),\n\t\t_c = 'c'.charCodeAt(0),\n\t\t_d = 'd'.charCodeAt(0),\n\t\t_e = 'e'.charCodeAt(0),\n\t\t_f = 'f'.charCodeAt(0),\n\t\t_A = 'A'.charCodeAt(0),\n\t\t_B = 'B'.charCodeAt(0),\n\t\t_C = 'C'.charCodeAt(0),\n\t\t_D = 'D'.charCodeAt(0),\n\t\t_E = 'E'.charCodeAt(0),\n\t\t_F = 'F'.charCodeAt(0);\n\n\treturn function isDigit(character:string, base:number):boolean {\n\t\tvar c = character.charCodeAt(0);\n\t\tswitch (base) {\n\t\t\tcase 1:\n\t\t\t\treturn c === _0;\n\t\t\tcase 2:\n\t\t\t\treturn c >= _0 && c <= _1;\n\t\t\tcase 3:\n\t\t\t\treturn c >= _0 && c <= _2;\n\t\t\tcase 4:\n\t\t\t\treturn c >= _0 && c <= _3;\n\t\t\tcase 5:\n\t\t\t\treturn c >= _0 && c <= _4;\n\t\t\tcase 6:\n\t\t\t\treturn c >= _0 && c <= _5;\n\t\t\tcase 7:\n\t\t\t\treturn c >= _0 && c <= _6;\n\t\t\tcase 8:\n\t\t\t\treturn c >= _0 && c <= _7;\n\t\t\tcase 9:\n\t\t\t\treturn c >= _0 && c <= _8;\n\t\t\tcase 10:\n\t\t\t\treturn c >= _0 && c <= _9;\n\t\t\tcase 11:\n\t\t\t\treturn (c >= _0 && c <= _9) || (c === _a) || (c === _A);\n\t\t\tcase 12:\n\t\t\t\treturn (c >= _0 && c <= _9) || (c >= _a && c <= _b) || (c >= _A && c <= _B);\n\t\t\tcase 13:\n\t\t\t\treturn (c >= _0 && c <= _9) || (c >= _a && c <= _c) || (c >= _A && c <= _C);\n\t\t\tcase 14:\n\t\t\t\treturn (c >= _0 && c <= _9) || (c >= _a && c <= _d) || (c >= _A && c <= _D);\n\t\t\tcase 15:\n\t\t\t\treturn (c >= _0 && c <= _9) || (c >= _a && c <= _e) || (c >= _A && c <= _E);\n\t\t\tdefault:\n\t\t\t\treturn (c >= _0 && c <= _9) || (c >= _a && c <= _f) || (c >= _A && c <= _F);\n\t\t}\n\t};\n})();\n\nexport class FrankensteinMode extends AbstractMode<AbstractModeWorker> {\n\tconstructor(\n\t\tdescriptor:Modes.IModeDescriptor,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IThreadService threadService: IThreadService\n\t) {\n\t\tsuper(descriptor, instantiationService, threadService);\n\t}\n}\n\nfunction _createModeSupportChangedEvent(...changedSupports: string[]): EditorCommon.IModeSupportChangedEvent {\n\tvar event = {\n\t\tcodeLensSupport: false,\n\t\ttokenizationSupport:false,\n\t\toccurrencesSupport:false,\n\t\tdeclarationSupport:false,\n\t\ttypeDeclarationSupport:false,\n\t\tnavigateTypesSupport:false,\n\t\treferenceSupport:false,\n\t\tsuggestSupport:false,\n\t\tparameterHintsSupport:false,\n\t\textraInfoSupport:false,\n\t\toutlineSupport:false,\n\t\tlogicalSelectionSupport:false,\n\t\tformattingSupport:false,\n\t\tinplaceReplaceSupport:false,\n\t\tdiffSupport:false,\n\t\tdirtyDiffSupport:false,\n\t\temitOutputSupport:false,\n\t\tlinkSupport:false,\n\t\tconfigSupport:false,\n\t\telectricCharacterSupport:false,\n\t\tcommentsSupport:false,\n\t\tcharacterPairSupport:false,\n\t\ttokenTypeClassificationSupport:false,\n\t\tquickFixSupport:false,\n\t\tonEnterSupport: false\n\t};\n\tchangedSupports.forEach(support => event[support] = true);\n\treturn event;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport nls = require('vs/nls');\n\nimport paths = require('vs/base/common/paths');\nimport Strings = require('vs/base/common/strings');\nimport {IThreadSynchronizableObject} from 'vs/platform/thread/common/thread';\nimport {EverywhereAttr, registerThreadSynchronizableObject} from 'vs/platform/thread/common/threadService';\nimport {IPluginDescription} from 'vs/platform/plugins/common/plugins';\nimport {PluginsRegistry, IExtensionPointUser, IMessageCollector} from 'vs/platform/plugins/common/pluginsRegistry';\nimport Mime = require('vs/base/common/mime');\nimport Errors = require('vs/base/common/errors');\nimport {AsyncDescriptor1, createAsyncDescriptor1} from 'vs/platform/instantiation/common/descriptors';\nimport {IMode, IModeDescriptor} from 'vs/editor/common/modes';\nimport Event, {Emitter} from 'vs/base/common/event';\n\ninterface ILanguagePointData {\n\tknownModeIds: { [id: string]: boolean; };\n\tmime2LanguageId: { [mimeType: string]: string; };\n\tname2LanguageId: { [name: string]: string; };\n\tname2Extensions: { [name: string]: string[]; };\n\tid2Name: { [id: string]: string; };\n\tcompatModes: { [id: string]: AsyncDescriptor1<IModeDescriptor, IMode>; };\n\tlowerName2Id: { [name: string]: string; };\n}\n\nlet languagesExtPoint = PluginsRegistry.registerExtensionPoint<ILanguageExtensionPoint[]>('languages', {\n\tdescription: nls.localize('vscode.extension.contributes.languages', 'Contributes language declarations.'),\n\ttype: 'array',\n\tdefault: [{ id: '', aliases: [], extensions: [] }],\n\titems: {\n\t\ttype: 'object',\n\t\tdefault: { id: '', extensions: [] },\n\t\tproperties: {\n\t\t\tid: {\n\t\t\t\tdescription: nls.localize('vscode.extension.contributes.languages.id', 'ID of the language.'),\n\t\t\t\ttype: 'string'\n\t\t\t},\n\t\t\taliases: {\n\t\t\t\tdescription: nls.localize('vscode.extension.contributes.languages.aliases', 'Name aliases for the language.'),\n\t\t\t\ttype: 'array',\n\t\t\t\titems: {\n\t\t\t\t\ttype: 'string'\n\t\t\t\t}\n\t\t\t},\n\t\t\textensions: {\n\t\t\t\tdescription: nls.localize('vscode.extension.contributes.languages.extensions', 'File extensions associated to the language.'),\n\t\t\t\tdefault: ['.foo'],\n\t\t\t\ttype: 'array',\n\t\t\t\titems: {\n\t\t\t\t\ttype: 'string'\n\t\t\t\t}\n\t\t\t},\n\t\t\tfilenames: {\n\t\t\t\tdescription: nls.localize('vscode.extension.contributes.languages.filenames', 'File names associated to the language.'),\n\t\t\t\ttype: 'array',\n\t\t\t\titems: {\n\t\t\t\t\ttype: 'string'\n\t\t\t\t}\n\t\t\t},\n\t\t\tmimetypes: {\n\t\t\t\tdescription: nls.localize('vscode.extension.contributes.languages.mimetypes', 'Mime types associated to the language.'),\n\t\t\t\ttype: 'array',\n\t\t\t\titems: {\n\t\t\t\t\ttype: 'string'\n\t\t\t\t}\n\t\t\t},\n\t\t\tfirstLine: {\n\t\t\t\tdescription: nls.localize('vscode.extension.contributes.languages.firstLine', 'A regular expression matching the first line of a file of the language.'),\n\t\t\t\ttype: 'string'\n\t\t\t},\n\t\t\tconfiguration: {\n\t\t\t\tdescription: nls.localize('vscode.extension.contributes.languages.configuration', 'A relative path to a file containing configuration options for the language.'),\n\t\t\t\ttype: 'string'\n\t\t\t}\n\t\t}\n\t}\n});\n\nexport interface ILanguageExtensionPoint {\n\tid: string;\n\textensions?: string[];\n\tfilenames?: string[];\n\tfirstLine?: string;\n\taliases?: string[];\n\tmimetypes?: string[];\n\tconfiguration?: string;\n}\n\nfunction isUndefinedOrStringArray(value: string[]): boolean {\n\tif (typeof value === 'undefined') {\n\t\treturn true;\n\t}\n\tif (!Array.isArray(value)) {\n\t\treturn false;\n\t}\n\treturn value.every(item => typeof item === 'string');\n}\n\nfunction isValidLanguageExtensionPoint(value:ILanguageExtensionPoint, collector:IMessageCollector): boolean {\n\tif (!value) {\n\t\tcollector.error(nls.localize('invalid.empty', \"Empty value for `contributes.{0}`\", languagesExtPoint.name));\n\t\treturn false;\n\t}\n\tif (typeof value.id !== 'string') {\n\t\tcollector.error(nls.localize('require.id', \"property `{0}` is mandatory and must be of type `string`\", 'id'));\n\t\treturn false;\n\t}\n\tif (!isUndefinedOrStringArray(value.extensions)) {\n\t\tcollector.error(nls.localize('opt.extensions', \"property `{0}` can be omitted and must be of type `string[]`\", 'extensions'));\n\t\treturn false;\n\t}\n\tif (!isUndefinedOrStringArray(value.filenames)) {\n\t\tcollector.error(nls.localize('opt.filenames', \"property `{0}` can be omitted and must be of type `string[]`\", 'filenames'));\n\t\treturn false;\n\t}\n\tif (typeof value.firstLine !== 'undefined' && typeof value.firstLine !== 'string') {\n\t\tcollector.error(nls.localize('opt.firstLine', \"property `{0}` can be omitted and must be of type `string`\", 'firstLine'));\n\t\treturn false;\n\t}\n\tif (typeof value.configuration !== 'undefined' && typeof value.configuration !== 'string') {\n\t\tcollector.error(nls.localize('opt.configuration', \"property `{0}` can be omitted and must be of type `string`\", 'configuration'));\n\t\treturn false;\n\t}\n\tif (!isUndefinedOrStringArray(value.aliases)) {\n\t\tcollector.error(nls.localize('opt.aliases', \"property `{0}` can be omitted and must be of type `string[]`\", 'aliases'));\n\t\treturn false;\n\t}\n\tif (!isUndefinedOrStringArray(value.mimetypes)) {\n\t\tcollector.error(nls.localize('opt.mimetypes', \"property `{0}` can be omitted and must be of type `string[]`\", 'mimetypes'));\n\t\treturn false;\n\t}\n\treturn true;\n}\n\nexport interface ILegacyLanguageDefinition {\n\tid: string;\n\textensions: string[];\n\tfilenames?: string[];\n\tfirstLine?: string;\n\taliases: string[];\n\tmimetypes: string[];\n\tmoduleId: string;\n\tctorName: string;\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport interface ILanguageExtensionPointHandler {\n\tregisterCompatMode(def:ILegacyLanguageDefinition): void;\n\tregisterLanguage(lang: ILanguageExtensionPoint): void;\n\n\tonDidAddMode: Event<string>;\n\n\tisRegisteredMode(mimetypeOrModeId: string): boolean;\n\tgetRegisteredModes(): string[];\n\tgetRegisteredMimetypes(): string[];\n\tgetRegisteredLanguageNames(): string[];\n\tgetLanguageName(modeId: string): string;\n\tgetExtensions(languageName: string): string[];\n\tgetModeIdForLanguageNameLowercase(languageNameLower: string): string;\n\tgetConfigurationFiles(modeId: string): string[];\n\tgetMimeForMode(theModeId: string): string;\n\textractModeIds(commaSeparatedMimetypesOrCommaSeparatedIdsOrName: string): string[];\n\tgetModeIdsFromLanguageName(languageName: string): string[];\n\tgetModeIdsFromFilenameOrFirstLine(filename: string, firstLine?:string): string[];\n\tgetCompatMode(modeId: string): AsyncDescriptor1<IModeDescriptor, IMode>;\n}\n\nclass LanguageExtensionPointHandler implements IThreadSynchronizableObject<ILanguagePointData>, ILanguageExtensionPointHandler {\n\n\tprivate knownModeIds: { [id: string]: boolean; };\n\tprivate mime2LanguageId: { [mimeType: string]: string; };\n\tprivate name2LanguageId: { [name: string]: string; };\n\tprivate name2Extensions: { [name: string]: string[]; };\n\tprivate id2Name: { [id: string]: string; };\n\tprivate compatModes: { [id: string]: AsyncDescriptor1<IModeDescriptor, IMode>; };\n\tprivate lowerName2Id: { [name: string]: string; };\n\tprivate id2ConfigurationFiles: { [id:string]: string[]; };\n\n\tprivate _isRegisteredWithThreadService: boolean;\n\n\tprivate _onDidAddMode: Emitter<string> = new Emitter<string>();\n\tpublic onDidAddMode: Event<string> = this._onDidAddMode.event;\n\n\tconstructor() {\n\t\tthis.knownModeIds = {};\n\t\tthis.mime2LanguageId = {};\n\t\tthis.name2LanguageId = {};\n\t\tthis.id2Name = {};\n\t\tthis.name2Extensions = {};\n\t\tthis.compatModes = {};\n\t\tthis.lowerName2Id = {};\n\t\tthis.id2ConfigurationFiles = {};\n\t\tthis._isRegisteredWithThreadService = false;\n\t}\n\n\t// -- BEGIN IThreadSynchronizableObject\n\n\tpublic creationDone(): void {\n\t\tthis._isRegisteredWithThreadService = true;\n\t}\n\n\tpublic getId(): string {\n\t\treturn 'LanguageExtensionPointHandler';\n\t}\n\n\tpublic getSerializableState(): ILanguagePointData {\n\t\treturn {\n\t\t\tknownModeIds: this.knownModeIds,\n\t\t\tmime2LanguageId: this.mime2LanguageId,\n\t\t\tname2LanguageId: this.name2LanguageId,\n\t\t\tname2Extensions: this.name2Extensions,\n\t\t\tid2Name: this.id2Name,\n\t\t\tcompatModes: this.compatModes,\n\t\t\tlowerName2Id: this.lowerName2Id\n\t\t};\n\t}\n\n\tpublic setData(data: ILanguagePointData): void {\n\t\tthis.knownModeIds = data.knownModeIds;\n\t\tthis.mime2LanguageId = data.mime2LanguageId;\n\t\tthis.name2LanguageId = data.name2LanguageId;\n\t\tthis.name2Extensions = data.name2Extensions;\n\t\tthis.id2Name = data.id2Name;\n\t\tthis.compatModes = data.compatModes;\n\t\tthis.lowerName2Id = data.lowerName2Id;\n\t}\n\n\t// -- END IThreadSynchronizableObject\n\n\tpublic registerCompatMode(def:ILegacyLanguageDefinition): void {\n\t\tthis._onLanguage({\n\t\t\tid: def.id,\n\t\t\textensions: def.extensions,\n\t\t\tfilenames: def.filenames,\n\t\t\tfirstLine: def.firstLine,\n\t\t\taliases: def.aliases,\n\t\t\tmimetypes: def.mimetypes\n\t\t});\n\n\t\tthis.compatModes[def.id] = createAsyncDescriptor1<IModeDescriptor, IMode>(def.moduleId, def.ctorName);\n\t}\n\n\tpublic _handleLanguagesExtensionPointUsers(extensions:IExtensionPointUser<ILanguageExtensionPoint[]>[]): void {\n\t\tlet allValidLanguages: ILanguageExtensionPoint[] = [];\n\n\t\tfor (let i = 0, len = extensions.length; i < len; i++) {\n\t\t\tlet extension = extensions[i];\n\n\t\t\tif (!Array.isArray(extension.value)) {\n\t\t\t\textension.collector.error(nls.localize('invalid', \"Invalid `contributes.{0}`. Expected an array.\", languagesExtPoint.name));\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tfor (let j = 0, lenJ = extension.value.length; j < lenJ; j++) {\n\t\t\t\tif (isValidLanguageExtensionPoint(extension.value[j], extension.collector)) {\n\t\t\t\t\tallValidLanguages.push({\n\t\t\t\t\t\tid: extension.value[j].id,\n\t\t\t\t\t\textensions: extension.value[j].extensions,\n\t\t\t\t\t\tfilenames: extension.value[j].filenames,\n\t\t\t\t\t\tfirstLine: extension.value[j].firstLine,\n\t\t\t\t\t\taliases: extension.value[j].aliases,\n\t\t\t\t\t\tmimetypes: extension.value[j].mimetypes,\n\t\t\t\t\t\tconfiguration: extension.value[j].configuration ? paths.join(extension.description.extensionFolderPath, extension.value[j].configuration) : extension.value[j].configuration\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._isRegisteredWithThreadService) {\n\t\t\tthis._onLanguagesEverywhere(allValidLanguages);\n\t\t} else {\n\t\t\tthis._onLanguagesImpl(allValidLanguages);\n\t\t}\n\t}\n\n\tstatic $_onLanguagesEverywhere = EverywhereAttr(LanguageExtensionPointHandler, LanguageExtensionPointHandler.prototype._onLanguagesEverywhere);\n\tprivate _onLanguagesEverywhere(desc: ILanguageExtensionPoint[]): void {\n\t\tthis._onLanguagesImpl(desc);\n\t}\n\n\tprivate _onLanguagesImpl(desc: ILanguageExtensionPoint[]): void {\n\t\tfor (let i = 0; i < desc.length; i++) {\n\t\t\tthis._onLanguage(desc[i]);\n\t\t}\n\t}\n\n\tprivate _setMime2LanguageId(mimeType:string, modeId:string): void {\n\t\tif (this.mime2LanguageId[mimeType] && this.mime2LanguageId[mimeType] !== modeId) {\n\t\t\tconsole.warn('Overwriting mime <<' + mimeType + '>> to now point to modeId <<' + modeId + '>>');\n\t\t}\n\t\tthis.mime2LanguageId[mimeType] = modeId;\n\t}\n\n\tpublic registerLanguage(lang: ILanguageExtensionPoint): void {\n\t\tthis._onLanguage(lang);\n\t}\n\n\tprivate _onLanguage(lang: ILanguageExtensionPoint): void {\n\t\tthis.knownModeIds[lang.id] = true;\n\n\t\tvar primaryMime: string = null;\n\n\t\tif (typeof lang.mimetypes !== 'undefined' && Array.isArray(lang.mimetypes)) {\n\t\t\tfor (var i = 0; i < lang.mimetypes.length; i++) {\n\t\t\t\tif (!primaryMime) {\n\t\t\t\t\tprimaryMime = lang.mimetypes[i];\n\t\t\t\t}\n\t\t\t\tthis.mime2LanguageId[lang.mimetypes[i]] = lang.id;\n\t\t\t}\n\t\t}\n\n\t\tif (!primaryMime) {\n\t\t\tprimaryMime = 'text/x-' + lang.id;\n\t\t\tthis.mime2LanguageId[primaryMime] = lang.id;\n\t\t}\n\n\t\tif (typeof lang.extensions !== 'undefined' && Array.isArray(lang.extensions)) {\n\t\t\tfor (var i = 0; i < lang.extensions.length; i++) {\n\t\t\t\tMime.registerTextMimeByFilename(lang.extensions[i], primaryMime);\n\t\t\t}\n\t\t}\n\n\t\tif (typeof lang.filenames !== 'undefined' && Array.isArray(lang.filenames)) {\n\t\t\tfor (var i = 0; i < lang.filenames.length; i++) {\n\t\t\t\tMime.registerTextMimeByFilename(lang.filenames[i], primaryMime);\n\t\t\t}\n\t\t}\n\n\t\tif (typeof lang.firstLine === 'string' && lang.firstLine.length > 0) {\n\t\t\tvar firstLineRegexStr = lang.firstLine;\n\t\t\tif (firstLineRegexStr.charAt(0) !== '^') {\n\t\t\t\tfirstLineRegexStr = '^' + firstLineRegexStr;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tvar firstLineRegex = new RegExp(firstLineRegexStr);\n\t\t\t\tif (!Strings.regExpLeadsToEndlessLoop(firstLineRegex)) {\n\t\t\t\t\tMime.registerTextMimeByFirstLine(firstLineRegex, primaryMime);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t// Most likely, the regex was bad\n\t\t\t\tErrors.onUnexpectedError(err);\n\t\t\t}\n\t\t}\n\n\t\tvar bestName: string = null;\n\t\tif (typeof lang.aliases !== 'undefined' && Array.isArray(lang.aliases)) {\n\t\t\tfor (var i = 0; i < lang.aliases.length; i++) {\n\t\t\t\tif (!lang.aliases[i] || lang.aliases[i].length === 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (!bestName) {\n\t\t\t\t\tbestName = lang.aliases[i];\n\t\t\t\t\tthis.name2LanguageId[lang.aliases[i]] = lang.id;\n\t\t\t\t\tthis.name2Extensions[lang.aliases[i]] = lang.extensions;\n\t\t\t\t}\n\t\t\t\tthis.lowerName2Id[lang.aliases[i].toLowerCase()] = lang.id;\n\t\t\t}\n\t\t}\n\t\tthis.id2Name[lang.id] = bestName || '';\n\n\t\tif (typeof lang.configuration === 'string') {\n\t\t\tthis.id2ConfigurationFiles[lang.id] = this.id2ConfigurationFiles[lang.id] || [];\n\t\t\tthis.id2ConfigurationFiles[lang.id].push(lang.configuration);\n\t\t}\n\n\t\tthis._onDidAddMode.fire(lang.id);\n\t}\n\n\tpublic isRegisteredMode(mimetypeOrModeId: string): boolean {\n\t\t// Is this a known mime type ?\n\t\tif (hasOwnProperty.call(this.mime2LanguageId, mimetypeOrModeId)) {\n\t\t\treturn true;\n\t\t}\n\t\t// Is this a known mode id ?\n\t\treturn hasOwnProperty.call(this.knownModeIds, mimetypeOrModeId);\n\t}\n\n\tpublic getRegisteredModes(): string[] {\n\t\treturn Object.keys(this.knownModeIds);\n\t}\n\n\tpublic getRegisteredMimetypes(): string[] {\n\t\treturn Object.keys(this.mime2LanguageId);\n\t}\n\n\tpublic getRegisteredLanguageNames(): string[]{\n\t\treturn Object.keys(this.name2LanguageId);\n\t}\n\n\tpublic getLanguageName(modeId: string): string {\n\t\treturn this.id2Name[modeId] || null;\n\t}\n\n\tpublic getModeIdForLanguageNameLowercase(languageNameLower: string): string {\n\t\treturn this.lowerName2Id[languageNameLower] || null;\n\t}\n\n\tpublic getConfigurationFiles(modeId: string): string[] {\n\t\treturn this.id2ConfigurationFiles[modeId] || [];\n\t}\n\n\tpublic getMimeForMode(theModeId: string): string {\n\t\tfor (var mime in this.mime2LanguageId) {\n\t\t\tif (this.mime2LanguageId.hasOwnProperty(mime)) {\n\t\t\t\tvar modeId = this.mime2LanguageId[mime];\n\t\t\t\tif (modeId === theModeId) {\n\t\t\t\t\treturn mime;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic extractModeIds(commaSeparatedMimetypesOrCommaSeparatedIdsOrName: string): string[] {\n\t\tif (!commaSeparatedMimetypesOrCommaSeparatedIdsOrName) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn (\n\t\t\tcommaSeparatedMimetypesOrCommaSeparatedIdsOrName.\n\t\t\t\tsplit(',').\n\t\t\t\tmap((mimeTypeOrIdOrName) => mimeTypeOrIdOrName.trim()).\n\t\t\t\tmap((mimeTypeOrIdOrName) => {\n\t\t\t\t\treturn this.mime2LanguageId[mimeTypeOrIdOrName] || mimeTypeOrIdOrName;\n\t\t\t\t}).\n\t\t\t\tfilter((modeId) => {\n\t\t\t\t\treturn this.knownModeIds[modeId];\n\t\t\t\t})\n\t\t);\n\t}\n\n\tpublic getModeIdsFromLanguageName(languageName: string): string[]{\n\t\tif (!languageName) {\n\t\t\treturn [];\n\t\t}\n\n\t\tif (hasOwnProperty.call(this.name2LanguageId, languageName)) {\n\t\t\treturn [this.name2LanguageId[languageName]];\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tpublic getModeIdsFromFilenameOrFirstLine(filename: string, firstLine?:string): string[] {\n\t\tif (!filename && !firstLine) {\n\t\t\treturn [];\n\t\t}\n\t\tvar mimeTypes = Mime.guessMimeTypes(filename, firstLine);\n\t\treturn this.extractModeIds(mimeTypes.join(','));\n\t}\n\n\tpublic getCompatMode(modeId: string): AsyncDescriptor1<IModeDescriptor, IMode> {\n\t\treturn this.compatModes[modeId] || null;\n\t}\n\n\tpublic getExtensions(languageName: string): string[] {\n\t\treturn this.name2Extensions[languageName];\n\t}\n}\n\n// Create the handler, register it as a thread synchronizable object and as an ext point listener\nvar _instance = new LanguageExtensionPointHandler();\nregisterThreadSynchronizableObject(_instance);\n\nlanguagesExtPoint.setHandler((extensions) => {\n\t_instance._handleLanguagesExtensionPointUsers(extensions);\n});\n\n// Export only a subset of the handler\nexport var LanguageExtensions:ILanguageExtensionPointHandler = _instance;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {LanguageExtensions, ILegacyLanguageDefinition} from 'vs/editor/common/modes/languageExtensionPoint';\nimport Modes = require('vs/editor/common/modes');\nimport Strings = require('vs/base/common/strings');\nimport EditorCommon = require('vs/editor/common/editorCommon');\nimport {Registry} from 'vs/platform/platform';\nimport {AsyncDescriptor0, createAsyncDescriptor0} from 'vs/platform/instantiation/common/descriptors';\nimport {IPluginDescription} from 'vs/platform/plugins/common/plugins';\nimport {PluginsRegistry} from 'vs/platform/plugins/common/pluginsRegistry';\n\n// Define extension point ids\nexport var Extensions = {\n\tEditorModes: 'editor.modes'\n};\n\nexport interface IEditorModesRegistry {\n\n\t// --- worker participants registration\n\tregisterWorkerParticipant(modeId:string, descriptor:AsyncDescriptor0<Modes.IWorkerParticipant>):void;\n\tgetWorkerParticipants(modeId:string):AsyncDescriptor0<Modes.IWorkerParticipant>[];\n\n\t_getAllWorkerParticipants(): Modes.IWorkerParticipantDescriptor[];\n\t_setWorkerParticipants(participants:Modes.IWorkerParticipantDescriptor[]);\n\n\t// --- modes registration\n\tregisterMode(def:ILegacyLanguageDefinition): void;\n\n\t// --- reading\n\tisRegisteredMode(modeName: string): boolean;\n\tgetRegisteredModes(): string[];\n\tgetRegisteredMimetypes(): string[];\n\tgetRegisteredLanguageNames(): string[];\n\tgetExtensions(alias: string): string[];\n\tgetMimeForMode(modeId: string): string;\n\tgetLanguageName(modeId:string): string;\n\tgetModeIdForLanguageName(alias:string): string;\n\tgetModeId(commaSeparatedMimetypesOrCommaSeparatedIds: string): string;\n}\n\nclass EditorModesRegistry implements IEditorModesRegistry {\n\n\tprivate workerParticipants: Modes.IWorkerParticipantDescriptor[];\n\n\tconstructor() {\n\t\tthis.workerParticipants = [];\n\t}\n\n\t// --- worker participants registration\n\n\tpublic registerWorkerParticipant(modeId:string, descriptor:AsyncDescriptor0<Modes.IWorkerParticipant>):void {\n\t\tthis.workerParticipants.push({\n\t\t\tmodeId: modeId,\n\t\t\tdescriptor: descriptor\n\t\t});\n\t}\n\n\tpublic _getAllWorkerParticipants(): Modes.IWorkerParticipantDescriptor[] {\n\t\treturn this.workerParticipants;\n\t}\n\n\tpublic _setWorkerParticipants(participants:Modes.IWorkerParticipantDescriptor[]): void {\n\t\tthis.workerParticipants = participants;\n\t}\n\n\tpublic getWorkerParticipants(modeId:string):AsyncDescriptor0<Modes.IWorkerParticipant>[] {\n\t\treturn this.workerParticipants.filter(p => p.modeId === modeId).map(p => p.descriptor);\n\t}\n\n\t// --- modes registration\n\n\tpublic isRegisteredMode(mimetypeOrModeId: string): boolean {\n\t\treturn LanguageExtensions.isRegisteredMode(mimetypeOrModeId);\n\t}\n\n\tpublic getRegisteredModes(): string[] {\n\t\treturn LanguageExtensions.getRegisteredModes();\n\t}\n\n\tpublic getRegisteredMimetypes(): string[] {\n\t\treturn LanguageExtensions.getRegisteredMimetypes();\n\t}\n\n\tpublic getRegisteredLanguageNames(): string[] {\n\t\treturn LanguageExtensions.getRegisteredLanguageNames();\n\t}\n\n\tpublic getExtensions(alias: string): string[] {\n\t\treturn LanguageExtensions.getExtensions(alias);\n\t}\n\n\tpublic getMimeForMode(modeId: string): string {\n\t\treturn LanguageExtensions.getMimeForMode(modeId);\n\t}\n\n\tpublic getLanguageName(modeId: string): string {\n\t\treturn LanguageExtensions.getLanguageName(modeId);\n\t}\n\n\tpublic getModeIdForLanguageName(alias:string): string {\n\t\treturn LanguageExtensions.getModeIdForLanguageNameLowercase(alias);\n\t}\n\n\tpublic registerMode(def:ILegacyLanguageDefinition): void {\n\t\tLanguageExtensions.registerCompatMode(def);\n\t}\n\n\tpublic getModeId(commaSeparatedMimetypesOrCommaSeparatedIds: string): string {\n\t\tvar modeIds = LanguageExtensions.extractModeIds(commaSeparatedMimetypesOrCommaSeparatedIds);\n\n\t\tif (modeIds.length > 0) {\n\t\t\treturn modeIds[0];\n\t\t}\n\n\t\treturn null;\n\t}\n}\n\nvar mR = new EditorModesRegistry();\nRegistry.add(Extensions.EditorModes, mR);\n\nexport function registerMode(def:ILegacyLanguageDefinition): void {\n\tmR.registerMode(def);\n}\n\nexport function registerWorkerParticipant(modeId:string, moduleId:string, ctorName?:string): void {\n\tmR.registerWorkerParticipant(modeId, createAsyncDescriptor0<Modes.IWorkerParticipant>(moduleId, ctorName));\n}\n\n\n\n// TODO@Martin: find a better home for this code:\n\n// TODO@Martin: modify suggestSupport to return a boolean if snippets should be presented or not\n//       and turn this into a real registry\nvar _defaultSnippets: { [modeId: string]: Modes.ISuggestion[] } = Object.create(null);\nvar _snippets: { [modeId: string]: { [path: string]: Modes.ISuggestion[] } } = Object.create(null);\n\nexport function registerDefaultSnippets(modeId: string, snippets: Modes.ISuggestion[]): void {\n\t_defaultSnippets[modeId] = (_defaultSnippets[modeId] || []).concat(snippets);\n}\n\nexport function registerSnippets(modeId: string, path: string, snippets: Modes.ISuggestion[]): void {\n\tvar snippetsByMode = _snippets[modeId];\n\tif (!snippetsByMode) {\n\t\t_snippets[modeId] = snippetsByMode = {};\n\t}\n\tsnippetsByMode[path] = snippets;\n}\nexport function getSnippets(model: EditorCommon.IModel, position: EditorCommon.IPosition): Modes.ISuggestResult {\n\tvar word = model.getWordAtPosition(position);\n\tvar currentPrefix = word ? word.word.substring(0, position.column - word.startColumn) : '';\n\tvar result : Modes.ISuggestResult = {\n\t\tcurrentWord: currentPrefix,\n\t\tsuggestions: []\n\t}\n\n\t// to avoid that snippets are too prominent in the intellisense proposals:\n\t// - force that the current prefix matches with the snippet prefix\n\t// if there's no prfix, only show snippets at the beginning of the line, or after a whitespace\n\tvar filter = null;\n\tif (currentPrefix.length === 0) {\n\t\tif (position.column > 1) {\n\t\t\tvar previousCharacter = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column - 1, endLineNumber: position.lineNumber, endColumn: position.column });\n\t\t\tif (previousCharacter.trim().length !== 0) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tvar lowerCasePrefix = currentPrefix.toLowerCase();\n\t\tfilter = (p: Modes.ISuggestion) => {\n\t\t\treturn Strings.startsWith(p.label.toLowerCase(), lowerCasePrefix);\n\t\t};\n\t}\n\n\tvar modeId = model.getMode().getId();\n\tvar snippets : Modes.ISuggestion[]= [];\n\tvar snipppetsByMode = _snippets[modeId];\n\tif (snipppetsByMode) {\n\t\tfor (var s in snipppetsByMode) {\n\t\t\tsnippets = snippets.concat(snipppetsByMode[s]);\n\t\t}\n\t}\n\tvar defaultSnippets = _defaultSnippets[modeId];\n\tif (defaultSnippets) {\n\t\tsnippets = snippets.concat(defaultSnippets);\n\t}\n\tresult.suggestions = filter ? snippets.filter(filter) : snippets;\n\n\t// if (result.suggestions.length > 0) {\n\t// \tif (word) {\n\t// \t\t// Push also the current word as first suggestion, to avoid unexpected snippet acceptance on Enter.\n\t// \t\tresult.suggestions = result.suggestions.slice(0);\n\t// \t\tresult.suggestions.unshift({\n\t// \t\t\tcodeSnippet: word.word,\n\t// \t\t\tlabel: word.word,\n\t// \t\t\ttype: 'text'\n\t// \t\t});\n\t// \t}\n\t// \tresult.incomplete = true;\n\t// }\n\n\treturn result;\n\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\n/**\n * Create a syntax highighter with a fully declarative JSON style lexer description\n * using regular expressions.\n */\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {AbstractMode} from 'vs/editor/common/modes/abstractMode';\nimport Supports = require('vs/editor/common/modes/supports');\nimport MonarchCommonTypes = require('vs/editor/common/modes/monarch/monarchCommon');\nimport EditorCommon = require('vs/editor/common/editorCommon');\nimport {IModelService} from 'vs/editor/common/services/modelService';\nimport Modes = require('vs/editor/common/modes');\nimport {IOnEnterSupportOptions} from 'vs/editor/common/modes/supports/onEnter';\n\nexport function createCommentsSupport(lexer: MonarchCommonTypes.ILexer): Supports.ICommentsSupportContribution {\n\treturn {\n\t\tcommentsConfiguration: {\n\t\t\tlineCommentTokens: [lexer.lineComment],\n\t\t\tblockCommentStartToken: lexer.blockCommentStart,\n\t\t\tblockCommentEndToken: lexer.blockCommentEnd\n\t\t}\n\t};\n}\n\nexport function createBracketElectricCharacterContribution(lexer: MonarchCommonTypes.ILexer): Supports.IBracketElectricCharacterContribution {\n\treturn {\n\t\tbrackets: lexer.standardBrackets,\n\t\tregexBrackets: lexer.enhancedBrackets,\n\t\tcaseInsensitive: lexer.ignoreCase,\n\t\tembeddedElectricCharacters: lexer.outdentTriggers.split('')\n\t};\n}\n\nexport function createTokenTypeClassificationSupportContribution(lexer: MonarchCommonTypes.ILexer): Supports.ITokenTypeClassificationSupportContribution {\n\treturn {\n\t\twordDefinition: lexer.wordDefinition\n\t};\n}\n\nexport function createCharacterPairContribution(lexer: MonarchCommonTypes.ILexer): Modes.ICharacterPairContribution {\n\treturn {\n\t\tautoClosingPairs: lexer.autoClosingPairs\n\t};\n}\n\nfunction _addSuggestionsAtPosition(model: EditorCommon.IModel, position:EditorCommon.IPosition, lexer: MonarchCommonTypes.ILexer, superSuggestions:Modes.ISuggestResult[]): Modes.ISuggestResult[] {\n\tvar extra = lexer.suggestSupport.snippets;\n\tif (!extra || extra.length === 0) {\n\t\treturn superSuggestions;\n\t}\n\n\tif (!superSuggestions) {\n\t\tsuperSuggestions = [];\n\t}\n\n\tsuperSuggestions.push({\n\t\tcurrentWord: model.getWordUntilPosition(position).word,\n\t\tsuggestions: extra.slice(0)\n\t});\n\n\treturn superSuggestions;\n}\n\nexport function createOnEnterSupportOptions(lexer:MonarchCommonTypes.ILexer): IOnEnterSupportOptions {\n\treturn {\n\t\tbrackets: lexer.standardBrackets\n\t};\n}\n\nexport function createSuggestSupport(modelService: IModelService, mode:Modes.IMode, lexer:MonarchCommonTypes.ILexer): Supports.IComposableSuggestContribution {\n\tif (lexer.suggestSupport.textualCompletions && mode instanceof AbstractMode) {\n\t\treturn {\n\t\t\ttriggerCharacters:lexer.suggestSupport.triggerCharacters,\n\t\t\tdisableAutoTrigger: lexer.suggestSupport.disableAutoTrigger,\n\t\t\texcludeTokens: [],\n\t\t\tsuggest: (resource, position) => (<AbstractMode<any>>mode).suggest(resource, position),\n\t\t\tcomposeSuggest: (resource, position, superSuggestions) => {\n\t\t\t\treturn TPromise.as(_addSuggestionsAtPosition(modelService.getModel(resource), position, lexer, superSuggestions));\n\t\t\t}\n\t\t};\n\t} else {\n\t\treturn {\n\t\t\ttriggerCharacters:lexer.suggestSupport.triggerCharacters,\n\t\t\tdisableAutoTrigger: lexer.suggestSupport.disableAutoTrigger,\n\t\t\texcludeTokens: [],\n\t\t\tsuggest: (resource, position) => {\n\t\t\t\treturn TPromise.as(_addSuggestionsAtPosition(modelService.getModel(resource), position, lexer, null));\n\t\t\t},\n\t\t\tcomposeSuggest: (resource, position, superSuggestions) => {\n\t\t\t\treturn TPromise.as(superSuggestions);\n\t\t\t}\n\t\t};\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\n/**\n * Create a syntax highighter with a fully declarative JSON style lexer description\n * using regular expressions.\n */\n\nimport {AbstractState} from 'vs/editor/common/modes/abstractState';\nimport {LineStream} from 'vs/editor/common/modes/lineStream';\nimport ModesRegistry = require('vs/editor/common/modes/modesRegistry');\nimport Supports = require('vs/editor/common/modes/supports');\nimport MonarchCommonTypes = require('vs/editor/common/modes/monarch/monarchCommon');\nimport Modes = require('vs/editor/common/modes');\nimport {Registry} from 'vs/platform/platform';\nimport {IModeService} from 'vs/editor/common/services/modeService';\n\nvar modesRegistry = <ModesRegistry.IEditorModesRegistry>Registry.as(ModesRegistry.Extensions.EditorModes);\n\n/**\n * The MonarchLexer class implements a monaco lexer that highlights source code.\n * It takes a compiled lexer to guide the tokenizer and maintains a stack of\n * lexer states.\n */\nexport class MonarchLexer extends AbstractState {\n\n\tstatic ID = 0;\n\n\tprivate id: number;\n\tprivate lexer: MonarchCommonTypes.ILexer;\n\tprivate stack: string[];\n\n\tpublic embeddedMode: string;\n\tpublic embeddedEntered: boolean;\n\n\tprivate groupActions: MonarchCommonTypes.IAction[];\n\tprivate groupMatches: string[];\n\tprivate groupMatched: string[];\n\tprivate groupRule: MonarchCommonTypes.IRule;\n\n\tconstructor(mode: Modes.IMode, lexer: MonarchCommonTypes.ILexer, stack?: string[], embeddedMode?: string) {\n\t\tsuper(mode);\n\t\tthis.id = MonarchLexer.ID++; // for debugging, assigns unique id to each instance\n\n\t\tthis.lexer = lexer; // (compiled) lexer description\n\t\tthis.stack = (stack ? stack : [lexer.start]); // stack of states\n\t\tthis.embeddedMode = (embeddedMode ? embeddedMode : null); // are we scanning an embedded section?\n\n\t\t// did we encounter an embedded start on this line?\n\t\t// no need for cloning or equality since it is used only within a line\n\t\tthis.embeddedEntered = false;\n\n\t\t// regular expression group matching\n\t\t// these never need cloning or equality since they are only used within a line match\n\t\tthis.groupActions = null;\n\t\tthis.groupMatches = null;\n\t\tthis.groupMatched = null;\n\t\tthis.groupRule = null;\n\t}\n\n\tpublic makeClone(): MonarchLexer {\n\t\treturn new MonarchLexer(this.getMode(), this.lexer, this.stack.slice(0), this.embeddedMode);\n\t}\n\n\tpublic equals(other: Modes.IState): boolean {\n\t\tif (!super.equals(other)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!(other instanceof MonarchLexer)) return false;\n\t\tvar otherm: MonarchLexer = <MonarchLexer>other;\n\t\tif ((this.stack.length !== otherm.stack.length) || (this.lexer.name !== otherm.lexer.name) ||\n\t\t\t(this.embeddedMode !== otherm.embeddedMode)) {\n\t\t\treturn false;\n\t\t}\n\t\tvar idx: string;\n\t\tfor (idx in this.stack) {\n\t\t\tif (this.stack.hasOwnProperty(idx)) {\n\t\t\t\tif (this.stack[idx] !== otherm.stack[idx]) return false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * The main tokenizer: this function gets called by monaco to tokenize lines\n\t * Note: we don't want to raise exceptions here and always keep going..\n\t *\n\t * TODO: there are many optimizations possible here for the common cases\n\t * but for now I concentrated on functionality and correctness.\n\t */\n\tpublic tokenize(stream: Modes.IStream, noConsumeIsOk?: boolean): Modes.ITokenizationResult {\n\t\tvar stackLen0 = this.stack.length;  // these are saved to check progress\n\t\tvar groupLen0 = 0;\n\t\tvar state: string = this.stack[0];  // the current state\n\t\tthis.embeddedEntered = false;\n\n\t\tvar matches: string[] = null;\n\t\tvar matched: string = null;\n\t\tvar action: MonarchCommonTypes.IAction = null;\n\t\tvar next: string = null;\n\t\tvar rule: MonarchCommonTypes.IRule = null;\n\n\t\t// check if we need to process group matches first\n\t\tif (this.groupActions) {\n\t\t\tgroupLen0 = this.groupActions.length;\n\t\t\tmatches = this.groupMatches;\n\t\t\tmatched = this.groupMatched.shift();\n\t\t\taction = this.groupActions.shift();\n\t\t\trule = this.groupRule;\n\n\t\t\t// cleanup if necessary\n\t\t\tif (this.groupActions.length === 0) {\n\t\t\t\tthis.groupActions = null;\n\t\t\t\tthis.groupMatches = null;\n\t\t\t\tthis.groupMatched = null;\n\t\t\t\tthis.groupRule = null;\n\t\t\t}\n\t\t}\n\t\t\t// otherwise we match on the token stream\n\t\telse {\n\t\t\t// nothing to do\n\t\t\tif (stream.eos()) {\n\t\t\t\treturn { type: '' };\n\t\t\t}\n\n\t\t\t// get the entire line\n\t\t\tvar line = stream.advanceToEOS();\n\t\t\tstream.goBack(line.length);\n\n\t\t\t// get the rules for this state\n\t\t\tvar rules = this.lexer.tokenizer[state];\n\t\t\tif (!rules) rules = MonarchCommonTypes.findRules(this.lexer, state); // do parent matching\n\n\t\t\tif (!rules) {\n\t\t\t\tMonarchCommonTypes.throwError(this.lexer, 'tokenizer state is not defined: ' + state);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// try each rule until we match\n\t\t\t\trule = null;\n\t\t\t\tvar pos = stream.pos();\n\t\t\t\tvar idx: string;\n\t\t\t\tfor (idx in rules) {\n\t\t\t\t\tif (rules.hasOwnProperty(idx)) {\n\t\t\t\t\t\trule = rules[idx];\n\t\t\t\t\t\tif (pos === 0 || !rule.matchOnlyAtLineStart) {\n\t\t\t\t\t\t\tmatches = line.match(rule.regex);\n\t\t\t\t\t\t\tif (matches) {\n\t\t\t\t\t\t\t\tmatched = matches[0];\n\t\t\t\t\t\t\t\taction = rule.action;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// We matched 'rule' with 'matches' and 'action'\n\t\tif (!matches) {\n\t\t\tmatches = [''];\n\t\t\tmatched = '';\n\t\t}\n\t\tif (!action) {\n\t\t\t// bad: we didn't match anything, and there is no action to take\n\t\t\t// we need to advance the stream or we get progress trouble\n\t\t\tif (!stream.eos()) {\n\t\t\t\tmatches = [stream.peek()];\n\t\t\t\tmatched = matches[0];\n\t\t\t}\n\t\t\taction = this.lexer.defaultToken;\n\t\t}\n\n\t\t// advance stream\n\t\tstream.advance(matched.length);\n\n\t\t// maybe call action function (used for 'cases')\n\t\twhile (action.test) {\n\t\t\tvar callres = action.test(matched, matches, state, stream.eos());\n\t\t\taction = callres;\n\t\t}\n\n\t\t// set the result: either a string or an array of actions\n\t\tvar result = null;\n\t\tif (typeof (action) === 'string' || Array.isArray(action)) {\n\t\t\tresult = action;\n\t\t}\n\t\telse if (action.group) {\n\t\t\tresult = action.group;\n\t\t}\n\t\telse if (action.token !== null && action.token !== undefined) {\n\t\t\tresult = action.token;\n\n\t\t\t// do $n replacements?\n\t\t\tif (action.tokenSubst) {\n\t\t\t\tresult = MonarchCommonTypes.substituteMatches(this.lexer, result, matched, matches, state);\n\t\t\t}\n\n\t\t\t// enter embedded mode?\n\t\t\tif (action.nextEmbedded) {\n\t\t\t\tif (action.nextEmbedded === '@pop') {\n\t\t\t\t\tif (!this.embeddedMode) {\n\t\t\t\t\t\tMonarchCommonTypes.throwError(this.lexer, 'cannot pop embedded mode if not inside one');\n\t\t\t\t\t}\n\t\t\t\t\tthis.embeddedMode = null;\n\t\t\t\t}\n\t\t\t\telse if (this.embeddedMode) {\n\t\t\t\t\tMonarchCommonTypes.throwError(this.lexer, 'cannot enter embedded mode from within an embedded mode');\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.embeddedMode = MonarchCommonTypes.substituteMatches(this.lexer, action.nextEmbedded, matched, matches, state);\n\n\t\t\t\t\t// substitute language alias to known modes to support syntax highlighting\n\t\t\t\t\tvar embeddedMode = modesRegistry.getModeIdForLanguageName(this.embeddedMode);\n\t\t\t\t\tif (this.embeddedMode && embeddedMode) {\n\t\t\t\t\t\tthis.embeddedMode = embeddedMode;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.embeddedEntered = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// state transformations\n\t\t\tif (action.goBack) { // back up the stream..\n\t\t\t\tstream.goBack(action.goBack);\n\t\t\t}\n\t\t\tif (action.switchTo && typeof action.switchTo === 'string') {\n\t\t\t\tvar nextState = MonarchCommonTypes.substituteMatches(this.lexer, action.switchTo, matched, matches, state);  // switch state without a push...\n\t\t\t\tif (nextState[0] === '@') nextState = nextState.substr(1); // peel off starting '@'\n\t\t\t\tif (!MonarchCommonTypes.findRules(this.lexer, nextState)) {\n\t\t\t\t\tMonarchCommonTypes.throwError(this.lexer, 'trying to switch to a state \\'' + nextState + '\\' that is undefined in rule: ' + rule.name);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.stack[0] = nextState;\n\t\t\t\t}\n\t\t\t\tnext = null;\n\t\t\t}\n\t\t\telse if (action.transform && typeof action.transform === 'function') {\n\t\t\t\tthis.stack = action.transform(this.stack); // if you need to do really funky stuff...\n\t\t\t\tnext = null;\n\t\t\t}\n\t\t\telse if (action.next) {\n\t\t\t\tif (action.next === '@push') {\n\t\t\t\t\tif (this.stack.length >= this.lexer.maxStack) {\n\t\t\t\t\t\tMonarchCommonTypes.throwError(this.lexer, 'maximum tokenizer stack size reached: [' +\n\t\t\t\t\t\t\tthis.stack[0] + ',' + this.stack[1] + ',...,' +\n\t\t\t\t\t\t\tthis.stack[this.stack.length - 2] + ',' + this.stack[this.stack.length - 1] + ']');\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.stack.unshift(state);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (action.next === '@pop') {\n\t\t\t\t\tif (this.stack.length <= 1) {\n\t\t\t\t\t\tMonarchCommonTypes.throwError(this.lexer, 'trying to pop an empty stack in rule: ' + rule.name);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.stack.shift();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (action.next === '@popall') {\n\t\t\t\t\tif (this.stack.length > 1) this.stack = [this.stack[this.stack.length - 1]];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvar nextState = MonarchCommonTypes.substituteMatches(this.lexer, action.next, matched, matches, state);\n\t\t\t\t\tif (nextState[0] === '@') nextState = nextState.substr(1); // peel off starting '@'\n\n\t\t\t\t\tif (!MonarchCommonTypes.findRules(this.lexer, nextState)) {\n\t\t\t\t\t\tMonarchCommonTypes.throwError(this.lexer, 'trying to set a next state \\'' + nextState + '\\' that is undefined in rule: ' + rule.name);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.stack.unshift(nextState);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (action.log && typeof (action.log) === 'string') {\n\t\t\t\tMonarchCommonTypes.log(this.lexer, this.lexer.displayName + ': ' + MonarchCommonTypes.substituteMatches(this.lexer, action.log, matched, matches, state));\n\t\t\t}\n\t\t}\n\n\t\t// check result\n\t\tif (result === null) {\n\t\t\tMonarchCommonTypes.throwError(this.lexer, 'lexer rule has no well-defined action in rule: ' + rule.name);\n\t\t\tresult = this.lexer.defaultToken;\n\t\t}\n\n\t\t// is the result a group match?\n\t\tif (Array.isArray(result)) {\n\t\t\tif (this.groupActions && this.groupActions.length > 0) {\n\t\t\t\tMonarchCommonTypes.throwError(this.lexer, 'groups cannot be nested: ' + rule.name);\n\t\t\t}\n\t\t\tif (matches.length !== result.length + 1) {\n\t\t\t\tMonarchCommonTypes.throwError(this.lexer, 'matched number of groups does not match the number of actions in rule: ' + rule.name);\n\t\t\t}\n\t\t\tvar totalLen = 0;\n\t\t\tfor (var i = 1; i < matches.length; i++) {\n\t\t\t\ttotalLen += matches[i].length;\n\t\t\t}\n\t\t\tif (totalLen !== matched.length) {\n\t\t\t\tMonarchCommonTypes.throwError(this.lexer, 'with groups, all characters should be matched in consecutive groups in rule: ' + rule.name);\n\t\t\t}\n\t\t\tthis.groupMatches = matches;\n\t\t\tthis.groupMatched = matches.slice(1);\n\t\t\tthis.groupActions = result.slice(0);\n\t\t\tthis.groupRule = rule;\n\t\t\tstream.goBack(matched.length);\n\t\t\treturn this.tokenize(stream);  // call recursively to initiate first result match\n\t\t}\n\t\t\t// regular result\n\t\telse {\n\t\t\t// check for '@rematch'\n\t\t\tif (result === '@rematch') {\n\t\t\t\tstream.goBack(matched.length);\n\t\t\t\tmatched = '';  // better set the next state too..\n\t\t\t\tmatches = null;\n\t\t\t\tresult = '';\n\t\t\t}\n\n\t\t\t// check progress\n\t\t\tif (matched.length === 0) {\n\t\t\t\tif (stackLen0 !== this.stack.length || state !== this.stack[0]\n\t\t\t\t\t|| (!this.groupActions ? 0 : this.groupActions.length) !== groupLen0) {\n\t\t\t\t\tif (!noConsumeIsOk) { // used for nested modes..\n\t\t\t\t\t\treturn this.tokenize(stream); // tokenize again in the new state\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tMonarchCommonTypes.throwError(this.lexer, 'no progress in tokenizer in rule: ' + rule.name);\n\t\t\t\t\tstream.advanceToEOS(); // must make progress or editor loops\n\t\t\t\t\t// result='';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// return the result (and check for brace matching)\n\t\t\t// todo: for efficiency we could pre-sanitize tokenPostfix and substitutions\n\t\t\tif (result.indexOf('@brackets') === 0) {\n\t\t\t\tvar rest = result.substr('@brackets'.length);\n\t\t\t\tvar bracket = findBracket(this.lexer, matched);\n\t\t\t\tif (!bracket) {\n\t\t\t\t\tMonarchCommonTypes.throwError(this.lexer, '@brackets token returned but no bracket defined as: ' + matched);\n\t\t\t\t\tbracket = { token: '', bracketType: Modes.Bracket.None };\n\t\t\t\t}\n\t\t\t\treturn { type: MonarchCommonTypes.sanitize(bracket.token + rest), bracket: bracket.bracketType };\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar token = (result === '' ? '' : result + this.lexer.tokenPostfix);\n\t\t\t\treturn { type: MonarchCommonTypes.sanitize(token), bracket: action.bracket };\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Searches for a bracket in the 'brackets' attribute that matches the input.\n */\nfunction findBracket(lexer: MonarchCommonTypes.ILexer, matched: string) {\n\tif (!matched) return null;\n\tmatched = MonarchCommonTypes.fixCase(lexer, matched);\n\n\tvar brackets = lexer.brackets;\n\tfor (var i = 0; i < brackets.length; i++) {\n\t\tvar bracket = brackets[i];\n\t\tif (bracket.open === matched) {\n\t\t\treturn { token: bracket.token, bracketType: Modes.Bracket.Open }\n\t\t}\n\t\telse if (bracket.close === matched) {\n\t\t\treturn { token: bracket.token, bracketType: Modes.Bracket.Close };\n\t\t}\n\t}\n\treturn null;\n}\n\nexport function createTokenizationSupport(modeService:IModeService, mode:Modes.IMode, lexer: MonarchCommonTypes.ILexer): Modes.ITokenizationSupport {\n\treturn new Supports.TokenizationSupport(mode, {\n\t\tgetInitialState: (): Modes.IState => {\n\t\t\treturn new MonarchLexer(mode, lexer);\n\t\t},\n\n\t\tenterNestedMode: (state: Modes.IState): boolean => {\n\t\t\tif (state instanceof MonarchLexer) {\n\t\t\t\treturn state.embeddedEntered;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\n\t\tgetNestedMode: (rawState: Modes.IState): Supports.IEnteringNestedModeData => {\n\t\t\tvar mime = (<MonarchLexer>rawState).embeddedMode;\n\n\t\t\tif (!modesRegistry.isRegisteredMode(mime)) {\n\t\t\t\t// unknown mode\n\t\t\t\treturn {\n\t\t\t\t\tmode: modeService.getMode('text/plain'),\n\t\t\t\t\tmissingModePromise: null\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar mode = modeService.getMode(mime);\n\t\t\tif (mode) {\n\t\t\t\t// mode is available\n\t\t\t\treturn {\n\t\t\t\t\tmode: mode,\n\t\t\t\t\tmissingModePromise: null\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// mode is not yet loaded\n\t\t\treturn {\n\t\t\t\tmode: modeService.getMode('text/plain'),\n\t\t\t\tmissingModePromise: modeService.getOrCreateMode(mime).then(() => null)\n\t\t\t};\n\t\t},\n\n\t\tgetLeavingNestedModeData: (line: string, state: Modes.IState) => {\n\t\t\t// state = state.clone();\n\t\t\tvar mstate = <MonarchLexer>state.clone();\n\t\t\tvar stream = new LineStream(line);\n\t\t\twhile (!stream.eos() && mstate.embeddedMode) {\n\t\t\t\tmstate.tokenize(stream, true); // allow no consumption for @rematch\n\t\t\t}\n\t\t\tif (mstate.embeddedMode) return null;  // don't leave yet\n\n\t\t\tvar end = stream.pos();\n\t\t\treturn {\n\t\t\t\tnestedModeBuffer: line.substring(0, end),\n\t\t\t\tbufferAfterNestedMode: line.substring(end),\n\t\t\t\tstateAfterNestedMode: mstate\n\t\t\t};\n\t\t}\n\t}, lexer.usesEmbedded, false);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {IModeService, IModeLookupResult} from 'vs/editor/common/services/modeService';\nimport {IModelService} from 'vs/editor/common/services/modelService';\nimport Modes = require('vs/editor/common/modes');\nimport Supports = require ('vs/editor/common/modes/supports');\nimport {IPluginService} from 'vs/platform/plugins/common/plugins';\nimport {FrankensteinMode} from 'vs/editor/common/modes/abstractMode';\nimport {LanguageExtensions} from 'vs/editor/common/modes/languageExtensionPoint';\nimport Errors = require('vs/base/common/errors');\nimport MonarchTypes = require('vs/editor/common/modes/monarch/monarchTypes');\nimport {Remotable, IThreadService, ThreadAffinity} from 'vs/platform/thread/common/thread';\nimport Objects = require('vs/base/common/objects');\nimport MonarchDefinition = require('vs/editor/common/modes/monarch/monarchDefinition');\nimport {createTokenizationSupport} from 'vs/editor/common/modes/monarch/monarchLexer';\nimport {compile} from 'vs/editor/common/modes/monarch/monarchCompile';\nimport {Registry} from 'vs/platform/platform';\nimport {IEditorModesRegistry, Extensions} from 'vs/editor/common/modes/modesRegistry';\nimport MonarchCommonTypes = require('vs/editor/common/modes/monarch/monarchCommon');\nimport {OnEnterSupport, IOnEnterSupportOptions} from 'vs/editor/common/modes/supports/onEnter';\nimport {IDisposable, combinedDispose, empty as EmptyDisposable} from 'vs/base/common/lifecycle';\n\ninterface IModeConfigurationMap { [modeId: string]: any; }\n\nexport class ModeServiceImpl implements IModeService {\n\tpublic serviceId = IModeService;\n\n\tprotected _threadService: IThreadService;\n\tprivate _pluginService: IPluginService;\n\tprivate _activationPromises: { [modeId: string]: TPromise<Modes.IMode>; };\n\tprivate _instantiatedModes: { [modeId: string]: Modes.IMode; };\n\tprivate _frankensteinModes: { [modeId: string]: FrankensteinMode; };\n\tprivate _config: IModeConfigurationMap;\n\n\tconstructor(threadService:IThreadService, pluginService:IPluginService) {\n\t\tthis._threadService = threadService;\n\t\tthis._pluginService = pluginService;\n\t\tthis._activationPromises = {};\n\t\tthis._instantiatedModes = {};\n\t\tthis._frankensteinModes = {};\n\t\tthis._config = {};\n\t}\n\n\tpublic getConfigurationForMode(modeId:string): any {\n\t\treturn this._config[modeId] || {};\n\t}\n\n\tpublic configureMode(mimetype: string, options: any): void {\n\t\tvar modeId = this.getModeId(mimetype);\n\t\tif (modeId) {\n\t\t\tthis.configureModeById(modeId, options);\n\t\t}\n\t}\n\n\tpublic configureModeById(modeId:string, options:any):void {\n\t\tvar previousOptions = this._config[modeId] || {};\n\t\tvar newOptions = Objects.mixin(Objects.clone(previousOptions), options);\n\n\t\tif (Objects.equals(previousOptions, newOptions)) {\n\t\t\t// This configure call is a no-op\n\t\t\treturn;\n\t\t}\n\n\t\tthis._config[modeId] = newOptions;\n\n\t\tvar mode = this.getMode(modeId);\n\t\tif (mode && mode.configSupport) {\n\t\t\tmode.configSupport.configure(this.getConfigurationForMode(modeId));\n\t\t}\n\t}\n\n\tpublic configureAllModes(config:any): void {\n\t\tif (!config) {\n\t\t\treturn;\n\t\t}\n\t\tvar modeRegistry = <IEditorModesRegistry> Registry.as(Extensions.EditorModes);\n\t\tvar modes = modeRegistry.getRegisteredModes();\n\t\tmodes.forEach((modeIdentifier) => {\n\t\t\tvar configuration = config[modeIdentifier];\n\t\t\tthis.configureModeById(modeIdentifier, configuration);\n\t\t});\n\t}\n\n\t// --- instantiation\n\n\tpublic lookup(commaSeparatedMimetypesOrCommaSeparatedIds: string): IModeLookupResult[]{\n\t\tvar r: IModeLookupResult[] = [];\n\t\tvar modeIds = LanguageExtensions.extractModeIds(commaSeparatedMimetypesOrCommaSeparatedIds);\n\n\t\tfor (var i = 0; i < modeIds.length; i++) {\n\t\t\tvar modeId = modeIds[i];\n\n\t\t\tr.push({\n\t\t\t\tmodeId: modeId,\n\t\t\t\tisInstantiated: this._instantiatedModes.hasOwnProperty(modeId)\n\t\t\t});\n\t\t}\n\n\t\treturn r;\n\t}\n\n\tpublic getMode(commaSeparatedMimetypesOrCommaSeparatedIds: string): Modes.IMode {\n\t\tvar modeIds = LanguageExtensions.extractModeIds(commaSeparatedMimetypesOrCommaSeparatedIds);\n\n\t\tvar isPlainText = false;\n\t\tfor (var i = 0; i < modeIds.length; i++) {\n\t\t\tif (this._instantiatedModes.hasOwnProperty(modeIds[i])) {\n\t\t\t\treturn this._instantiatedModes[modeIds[i]];\n\t\t\t}\n\t\t\tisPlainText = isPlainText || (modeIds[i] === 'plaintext');\n\t\t}\n\n\t\tif (isPlainText) {\n\t\t\t// Try to do it synchronously\n\t\t\tvar r: Modes.IMode = null;\n\t\t\tthis.getOrCreateMode(commaSeparatedMimetypesOrCommaSeparatedIds).then((mode) => {\n\t\t\t\tr = mode;\n\t\t\t}).done(null, Errors.onUnexpectedError);\n\t\t\treturn r;\n\t\t}\n\t}\n\n\tpublic getModeId(commaSeparatedMimetypesOrCommaSeparatedIds: string): string {\n\t\tvar modeIds = LanguageExtensions.extractModeIds(commaSeparatedMimetypesOrCommaSeparatedIds);\n\n\t\tif (modeIds.length > 0) {\n\t\t\treturn modeIds[0];\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic getModeIdByLanguageName(languageName: string): string {\n\t\tvar modeIds = LanguageExtensions.getModeIdsFromLanguageName(languageName);\n\n\t\tif (modeIds.length > 0) {\n\t\t\treturn modeIds[0];\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic getModeIdByFilenameOrFirstLine(filename: string, firstLine?:string): string {\n\t\tvar modeIds = LanguageExtensions.getModeIdsFromFilenameOrFirstLine(filename, firstLine);\n\n\t\tif (modeIds.length > 0) {\n\t\t\treturn modeIds[0];\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic getOrCreateMode(commaSeparatedMimetypesOrCommaSeparatedIds: string): TPromise<Modes.IMode> {\n\t\treturn this._pluginService.onReady().then(() => {\n\t\t\tvar modeId = this.getModeId(commaSeparatedMimetypesOrCommaSeparatedIds);\n\t\t\t// Fall back to plain text if no mode was found\n\t\t\treturn this._getOrCreateMode(modeId || 'plaintext');\n\t\t});\n\t}\n\n\tpublic getOrCreateModeByLanguageName(languageName: string): TPromise<Modes.IMode> {\n\t\treturn this._pluginService.onReady().then(() => {\n\t\t\tvar modeId = this.getModeIdByLanguageName(languageName);\n\t\t\t// Fall back to plain text if no mode was found\n\t\t\treturn this._getOrCreateMode(modeId || 'plaintext');\n\t\t});\n\t}\n\n\tpublic getOrCreateModeByFilenameOrFirstLine(filename: string, firstLine?:string): TPromise<Modes.IMode> {\n\t\treturn this._pluginService.onReady().then(() => {\n\t\t\tvar modeId = this.getModeIdByFilenameOrFirstLine(filename, firstLine);\n\t\t\t// Fall back to plain text if no mode was found\n\t\t\treturn this._getOrCreateMode(modeId || 'plaintext');\n\t\t});\n\t}\n\n\tprivate _getOrCreateMode(modeId: string): TPromise<Modes.IMode> {\n\t\tif (this._instantiatedModes.hasOwnProperty(modeId)) {\n\t\t\treturn TPromise.as(this._instantiatedModes[modeId]);\n\t\t}\n\n\t\tif (this._activationPromises.hasOwnProperty(modeId)) {\n\t\t\treturn this._activationPromises[modeId];\n\t\t}\n\t\tvar c, e;\n\t\tvar promise = new TPromise((cc,ee,pp) => { c = cc; e = ee; });\n\t\tthis._activationPromises[modeId] = promise;\n\n\t\tthis._createMode(modeId).then((mode) => {\n\t\t\tthis._instantiatedModes[modeId] = mode;\n\t\t\tdelete this._activationPromises[modeId];\n\t\t\treturn this._instantiatedModes[modeId];\n\t\t}).then(c, e);\n\n\t\treturn promise;\n\t}\n\n\tprotected _createMode(modeId:string): TPromise<Modes.IMode> {\n\t\tlet activationEvent = 'onLanguage:' + modeId;\n\n\t\tlet compatModeAsyncDescriptor = LanguageExtensions.getCompatMode(modeId);\n\n\t\tif (compatModeAsyncDescriptor) {\n\t\t\treturn this._pluginService.activateByEvent(activationEvent).then((_) => {\n\t\t\t\tvar modeDescriptor = this._createModeDescriptor(modeId);\n\t\t\t\treturn this._threadService.createInstance(compatModeAsyncDescriptor, modeDescriptor);\n\t\t\t}).then((compatMode) => {\n\t\t\t\tif (compatMode.configSupport) {\n\t\t\t\t\tcompatMode.configSupport.configure(this.getConfigurationForMode(modeId));\n\t\t\t\t}\n\t\t\t\treturn compatMode;\n\t\t\t});\n\t\t} else {\n\t\t\tlet frankensteinMode = this._getOrCreateFrankensteinMode(modeId);\n\t\t\tthis._pluginService.activateByEvent(activationEvent).done(null, Errors.onUnexpectedError);\n\t\t\treturn TPromise.as(frankensteinMode);\n\t\t}\n\t}\n\n\tprivate _getOrCreateFrankensteinMode(modeId:string): FrankensteinMode {\n\t\tif (!this._frankensteinModes.hasOwnProperty(modeId)) {\n\t\t\tvar modeDescriptor = this._createModeDescriptor(modeId);\n\t\t\tthis._frankensteinModes[modeId] = this._threadService.createInstance(FrankensteinMode, modeDescriptor);\n\t\t}\n\t\treturn this._frankensteinModes[modeId];\n\t}\n\n\tprivate _createModeDescriptor(modeId:string): Modes.IModeDescriptor {\n\t\tvar modesRegistry = <IEditorModesRegistry>Registry.as(Extensions.EditorModes);\n\t\tvar workerParticipants = modesRegistry.getWorkerParticipants(modeId);\n\t\treturn {\n\t\t\tid: modeId,\n\t\t\tworkerParticipants: workerParticipants\n\t\t};\n\t}\n\n\tprotected registerModeSupport<T>(modeId: string, support: string, callback: (mode: Modes.IMode) => T): IDisposable {\n\t\tvar promise = this._getOrCreateMode(modeId).then(mode => {\n\t\t\tif (mode.registerSupport) {\n\t\t\t\treturn mode.registerSupport(support, callback);\n\t\t\t} else {\n\t\t\t\tconsole.warn('Cannot register support ' + support + ' on mode ' + modeId + ' because it is not a Frankenstein mode');\n\t\t\t\treturn EmptyDisposable;\n\t\t\t}\n\t\t});\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tpromise.done(disposable => disposable.dispose(), null);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected doRegisterMonarchDefinition(modeId:string, lexer: MonarchCommonTypes.ILexer): IDisposable {\n\t\treturn combinedDispose(\n\t\t\tthis.registerTokenizationSupport(modeId, (mode: Modes.IMode) => {\n\t\t\t\treturn createTokenizationSupport(this, mode, lexer);\n\t\t\t}),\n\n\t\t\tthis.registerDeclarativeCommentsSupport(modeId, MonarchDefinition.createCommentsSupport(lexer)),\n\n\t\t\tthis.registerDeclarativeElectricCharacterSupport(modeId, MonarchDefinition.createBracketElectricCharacterContribution(lexer)),\n\n\t\t\tthis.registerDeclarativeTokenTypeClassificationSupport(modeId, MonarchDefinition.createTokenTypeClassificationSupportContribution(lexer)),\n\n\t\t\tthis.registerDeclarativeCharacterPairSupport(modeId, MonarchDefinition.createCharacterPairContribution(lexer)),\n\n\t\t\tthis.registerDeclarativeOnEnterSupport(modeId, MonarchDefinition.createOnEnterSupportOptions(lexer))\n\t\t);\n\t}\n\n\tpublic registerMonarchDefinition(modeId:string, language:MonarchTypes.ILanguage): IDisposable {\n\t\tvar lexer = compile(Objects.clone(language));\n\t\treturn this.doRegisterMonarchDefinition(modeId, lexer);\n\t}\n\n\tpublic registerDeclarativeCharacterPairSupport(modeId: string, support: Modes.ICharacterPairContribution): IDisposable {\n\t\treturn this.registerModeSupport(modeId, 'characterPairSupport', (mode) => new Supports.CharacterPairSupport(mode, support));\n\t}\n\n\tpublic registerCodeLensSupport(modeId: string, support: Modes.ICodeLensSupport): IDisposable {\n\t\treturn this.registerModeSupport(modeId, 'codeLensSupport', (mode) => support);\n\t}\n\n\tpublic registerDeclarativeCommentsSupport(modeId: string, support: Supports.ICommentsSupportContribution): IDisposable {\n\t\treturn this.registerModeSupport(modeId, 'commentsSupport', (mode) => new Supports.CommentsSupport(support));\n\t}\n\n\tpublic registerDeclarativeDeclarationSupport(modeId: string, contribution: Supports.IDeclarationContribution): IDisposable {\n\t\treturn this.registerModeSupport(modeId, 'declarationSupport', (mode) => new Supports.DeclarationSupport(mode, contribution));\n\t}\n\n\tpublic registerDeclarativeElectricCharacterSupport(modeId: string, support: Supports.IBracketElectricCharacterContribution): IDisposable {\n\t\treturn this.registerModeSupport(modeId, 'electricCharacterSupport', (mode) => new Supports.BracketElectricCharacterSupport(mode, support));\n\t}\n\n\tpublic registerExtraInfoSupport(modeId: string, support: Modes.IExtraInfoSupport): IDisposable {\n\t\treturn this.registerModeSupport(modeId, 'extraInfoSupport', (mode) => support);\n\t}\n\n\tpublic registerFormattingSupport(modeId: string, support: Modes.IFormattingSupport): IDisposable {\n\t\treturn this.registerModeSupport(modeId, 'formattingSupport', (mode) => support);\n\t}\n\n\tpublic registerInplaceReplaceSupport(modeId: string, support: Modes.IInplaceReplaceSupport): IDisposable {\n\t\treturn this.registerModeSupport(modeId, 'inplaceReplaceSupport',(mode) => support);\n\t}\n\n\tpublic registerOccurrencesSupport(modeId: string, support: Modes.IOccurrencesSupport): IDisposable {\n\t\treturn this.registerModeSupport(modeId, 'occurrencesSupport', (mode) => support);\n\t}\n\n\tpublic registerOutlineSupport(modeId: string, support: Modes.IOutlineSupport): IDisposable {\n\t\treturn this.registerModeSupport(modeId, 'outlineSupport', (mode) => support);\n\t}\n\n\tpublic registerDeclarativeParameterHintsSupport(modeId: string, support: Modes.IParameterHintsContribution): IDisposable {\n\t\treturn this.registerModeSupport(modeId, 'parameterHintsSupport', (mode) => new Supports.ParameterHintsSupport(mode, support));\n\t}\n\n\tpublic registerQuickFixSupport(modeId: string, support: Modes.IQuickFixSupport): IDisposable {\n\t\treturn this.registerModeSupport(modeId, 'quickFixSupport', (mode) => support);\n\t}\n\n\tpublic registerDeclarativeReferenceSupport(modeId: string, contribution: Supports.IReferenceContribution): IDisposable {\n\t\treturn this.registerModeSupport(modeId, 'referenceSupport', (mode) => new Supports.ReferenceSupport(mode, contribution));\n\t}\n\n\tpublic registerRenameSupport(modeId: string, support: Modes.IRenameSupport): IDisposable {\n\t\treturn this.registerModeSupport(modeId, 'renameSupport', (mode) => support);\n\t}\n\n\tpublic registerDeclarativeSuggestSupport(modeId: string, declaration: Supports.ISuggestContribution): IDisposable {\n\t\treturn this.registerModeSupport(modeId, 'suggestSupport', (mode) => new Supports.SuggestSupport(mode, declaration));\n\t}\n\n\tpublic registerTokenizationSupport(modeId: string, callback: (mode: Modes.IMode) => Modes.ITokenizationSupport): IDisposable {\n\t\treturn this.registerModeSupport(modeId, 'tokenizationSupport', callback);\n\t}\n\n\tpublic registerDeclarativeTokenTypeClassificationSupport(modeId: string, support: Supports.ITokenTypeClassificationSupportContribution): IDisposable {\n\t\treturn this.registerModeSupport(modeId, 'tokenTypeClassificationSupport', (mode) => new Supports.TokenTypeClassificationSupport(support));\n\t}\n\n\tpublic registerDeclarativeOnEnterSupport(modeId: string, opts: IOnEnterSupportOptions): IDisposable {\n\t\treturn this.registerModeSupport(modeId, 'onEnterSupport', (mode) => new OnEnterSupport(modeId, opts));\n\t}\n}\n\nexport class MainThreadModeServiceImpl extends ModeServiceImpl {\n\tprivate _modelService: IModelService;\n\tprivate _hasInitialized: boolean;\n\n\tconstructor(threadService:IThreadService, pluginService:IPluginService, modelService:IModelService) {\n\t\tsuper(threadService, pluginService);\n\t\tthis._modelService = modelService;\n\t\tthis._hasInitialized = false;\n\t}\n\n\tprivate _getModeServiceWorkerHelper(): ModeServiceWorkerHelper {\n\t\tlet r = this._threadService.getRemotable(ModeServiceWorkerHelper);\n\t\tif (!this._hasInitialized) {\n\t\t\tthis._hasInitialized = true;\n\t\t\tlet modeRegistry = <IEditorModesRegistry> Registry.as(Extensions.EditorModes);\n\t\t\tr.initialize(modeRegistry._getAllWorkerParticipants());\n\t\t}\n\t\treturn r;\n\t}\n\n\tpublic configureModeById(modeId:string, options:any):void {\n\t\tthis._getModeServiceWorkerHelper().configureModeById(modeId, options);\n\t\tsuper.configureModeById(modeId, options);\n\t}\n\n\tprotected _createMode(modeId:string): TPromise<Modes.IMode> {\n\t\t// Instantiate mode also in worker\n\t\tthis._getModeServiceWorkerHelper().instantiateMode(modeId);\n\t\treturn super._createMode(modeId);\n\t}\n\n\tprotected registerModeSupport<T>(modeId: string, support: string, callback: (mode: Modes.IMode) => T): IDisposable {\n\t\t// Since there is a code path that leads to Frankenstein mode instantiation, instantiate mode also in worker\n\t\tthis._getModeServiceWorkerHelper().instantiateMode(modeId);\n\t\treturn super.registerModeSupport(modeId, support, callback);\n\t}\n\n\tpublic registerMonarchDefinition(modeId:string, language:MonarchTypes.ILanguage): IDisposable {\n\t\tthis._getModeServiceWorkerHelper().registerMonarchDefinition(modeId, language);\n\t\tvar lexer = compile(Objects.clone(language));\n\t\treturn combinedDispose(\n\t\t\tsuper.doRegisterMonarchDefinition(modeId, lexer),\n\n\t\t\tthis.registerModeSupport(modeId, 'suggestSupport', (mode) => {\n\t\t\t\treturn new Supports.ComposableSuggestSupport(mode, MonarchDefinition.createSuggestSupport(this._modelService, mode, lexer));\n\t\t\t})\n\t\t);\n\t}\n}\n\n@Remotable.WorkerContext('ModeServiceWorkerHelper', ThreadAffinity.All)\nexport class ModeServiceWorkerHelper {\n\tprivate _modeService:IModeService;\n\n\tconstructor(@IModeService modeService:IModeService) {\n\t\tthis._modeService = modeService;\n\t}\n\n\tpublic initialize(workerParticipants:Modes.IWorkerParticipantDescriptor[]): void {\n\t\tvar modeRegistry = <IEditorModesRegistry> Registry.as(Extensions.EditorModes);\n\t\tmodeRegistry._setWorkerParticipants(workerParticipants);\n\t}\n\n\tpublic instantiateMode(modeId:string): void {\n\t\tthis._modeService.getOrCreateMode(modeId).done(null, Errors.onUnexpectedError);\n\t}\n\n\tpublic configureModeById(modeId:string, options:any):void {\n\t\tthis._modeService.configureMode(modeId, options);\n\t}\n\n\tpublic registerMonarchDefinition(modeId:string, language:MonarchTypes.ILanguage): void {\n\t\tthis._modeService.registerMonarchDefinition(modeId, language);\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport Browser = require('vs/base/browser/browser');\nimport remote = require('vs/base/common/remote');\nimport Types = require('vs/base/common/types');\nimport {IThreadServiceStatusListener, ThreadAffinity, Remotable, IRemotableCtorMap, IThreadSynchronizableObject, IDynamicProxy} from 'vs/platform/thread/common/thread';\nimport {THREAD_SERVICE_PROPERTY_NAME} from 'vs/platform/thread/common/threadService';\nimport instantiation = require('vs/platform/instantiation/common/instantiation');\nimport {SyncDescriptor, SyncDescriptor0, createSyncDescriptor, AsyncDescriptor0, AsyncDescriptor1, AsyncDescriptor2, AsyncDescriptor3} from 'vs/platform/instantiation/common/descriptors';\n\nexport interface IThreadServiceData {\n\t[id:string]:any;\n}\n\nclass DynamicProxy<T> implements IDynamicProxy<T> {\n\n\tprivate _proxyDefinition: T;\n\tprivate _disposeDelegate: ()=>void;\n\n\tconstructor(proxyDefinition:T, disposeDelegate:()=>void) {\n\t\tthis._proxyDefinition = proxyDefinition;\n\t\tthis._disposeDelegate = disposeDelegate;\n\t}\n\n\tpublic dispose(): void {\n\t\treturn this._disposeDelegate();\n\t}\n\n\tpublic getProxyDefinition(): T {\n\t\treturn this._proxyDefinition;\n\t}\n}\n\nexport abstract class AbstractThreadService implements remote.IManyHandler {\n\n\tprivate static _LAST_DYNAMIC_PROXY_ID:number = 0;\n\tprivate static generateDynamicProxyId(): string {\n\t\treturn String(++this._LAST_DYNAMIC_PROXY_ID);\n\t}\n\n\tpublic isInMainThread:boolean;\n\n\tprotected _instantiationService: instantiation.IInstantiationService;\n\n\tprotected _boundObjects:{[id:string]:IThreadSynchronizableObject<any>;};\n\tprotected _pendingObjects:TPromise<IThreadSynchronizableObject<any>>[];\n\tprivate _localObjMap: { [id:string]: any; };\n\tprivate _proxyObjMap: { [id:string]: any; };\n\n\tconstructor(isInMainThread: boolean) {\n\t\tthis.isInMainThread = isInMainThread;\n\t\tthis._boundObjects = {};\n\t\tthis._pendingObjects = [];\n\t\tthis._localObjMap = Object.create(null);\n\t\tthis._proxyObjMap = Object.create(null);\n\t}\n\n\tsetInstantiationService(service:instantiation.IInstantiationService): void {\n\t\tthis._instantiationService = service;\n\t}\n\n\tcreateInstance<T extends IThreadSynchronizableObject<any>>(ctor:instantiation.IConstructorSignature0<T>):T;\n\tcreateInstance<A1, T extends IThreadSynchronizableObject<any>>(ctor:instantiation.IConstructorSignature1<A1, T>, a1:A1):T;\n\tcreateInstance<A1, A2, T extends IThreadSynchronizableObject<any>>(ctor:instantiation.IConstructorSignature2<A1, A2, T>, a1:A1, a2:A2):T;\n\tcreateInstance<A1, A2, A3, T extends IThreadSynchronizableObject<any>>(ctor:instantiation.IConstructorSignature3<A1, A2, A3, T>, a1:A1, a2:A2, a3:A3):T;\n\n\tcreateInstance<T extends IThreadSynchronizableObject<any>>(descriptor: AsyncDescriptor0<T>): T;\n\tcreateInstance<A1, T extends IThreadSynchronizableObject<any>>(descriptor: AsyncDescriptor1<A1, T>, a1: A1): T;\n\tcreateInstance<A1, A2, T extends IThreadSynchronizableObject<any>>(descriptor: AsyncDescriptor2<A1, A2, T>, a1: A1, a2: A2): T;\n\tcreateInstance<A1, A2, A3, T extends IThreadSynchronizableObject<any>>(descriptor: AsyncDescriptor3<A1, A2, A3, T>, a1: A1, a2: A2, a3: A3): T;\n\n\tcreateInstance(...params:any[]):any {\n\t\treturn this._doCreateInstance(params);\n\t}\n\n\tprotected _doCreateInstance(params:any[]): any {\n\t\tvar instanceOrPromise = this._instantiationService.createInstance.apply(this._instantiationService, params);\n\n\t\tif (TPromise.is(instanceOrPromise)) {\n\n\t\t\tvar objInstantiated: TPromise<IThreadSynchronizableObject<any>>;\n\t\t\tobjInstantiated = instanceOrPromise.then((instance: IThreadSynchronizableObject<any>): any => {\n\t\t\t\tif (instance.asyncCtor) {\n\t\t\t\t\tvar initPromise = instance.asyncCtor();\n\t\t\t\t\tif (TPromise.is(initPromise)) {\n\t\t\t\t\t\treturn initPromise.then(() => {\n\t\t\t\t\t\t\treturn instance;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn instance;\n\t\t\t});\n\n\t\t\tthis._pendingObjects.push(objInstantiated);\n\t\t\treturn objInstantiated.then((instance: IThreadSynchronizableObject<any>) => {\n\t\t\t\tvar r = this._finishInstance(instance);\n\n\t\t\t\tfor (var i = 0; i < this._pendingObjects.length; i++) {\n\t\t\t\t\tif (this._pendingObjects[i] === objInstantiated) {\n\t\t\t\t\t\tthis._pendingObjects.splice(i, 1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn r;\n\t\t\t});\n\n\t\t}\n\n\t\treturn this._finishInstance(<IThreadSynchronizableObject<any>>instanceOrPromise);\n\t}\n\n\t_finishInstance(instance:IThreadSynchronizableObject<any>): IThreadSynchronizableObject<any> {\n\t\tinstance[THREAD_SERVICE_PROPERTY_NAME] = this;\n\t\tthis._boundObjects[instance.getId()] = instance;\n\n\t\tif (instance.creationDone) {\n\t\t\tinstance.creationDone();\n\t\t}\n\n\t\treturn instance;\n\t}\n\n\tregisterInstance<T extends IThreadSynchronizableObject<any>>(instance: T): void {\n\t\tthis._finishInstance(instance);\n\t}\n\n\tpublic handle(rpcId:string, method:string, args:any[]): any {\n\t\tif (!this._localObjMap[rpcId]) {\n\t\t\tthrow new Error('Unknown actor ' + rpcId);\n\t\t}\n\t\tvar actor = this._localObjMap[rpcId];\n\t\treturn actor[method].apply(actor, args);\n\t}\n\n\tprotected _getOrCreateProxyInstance(remoteCom: remote.IProxyHelper, id: string, descriptor: SyncDescriptor0<any>): any {\n\t\tif (this._proxyObjMap[id]) {\n\t\t\treturn this._proxyObjMap[id];\n\t\t}\n\t\tvar result = remote.createProxyFromCtor(remoteCom, id, descriptor.ctor);\n\t\tthis._proxyObjMap[id] = result;\n\t\treturn result;\n\t}\n\n\tprotected _registerLocalInstance(id:string, obj:any): any {\n\t\tthis._localObjMap[id] = obj;\n\t}\n\n\tprotected _getOrCreateLocalInstance(id: string, descriptor: SyncDescriptor0<any>): any {\n\t\tif (this._localObjMap[id]) {\n\t\t\treturn this._localObjMap[id];\n\t\t}\n\t\tvar result = this._instantiationService.createInstance(descriptor);\n\t\tthis._registerLocalInstance(id, result);\n\t\treturn result;\n\t}\n\n\tpublic createDynamicProxyFromMethods<T>(obj:T): IDynamicProxy<T> {\n\t\tlet id = AbstractThreadService.generateDynamicProxyId();\n\t\tlet proxyDefinition = this._proxifyMethods(id, obj);\n\t\treturn new DynamicProxy(proxyDefinition, () => {\n\t\t\tdelete this._localObjMap[id];\n\t\t});\n\t}\n\n\tpublic createDynamicProxyFromMembers<T>(obj:T, allowedMembers:string[]): IDynamicProxy<T> {\n\t\tlet id = AbstractThreadService.generateDynamicProxyId();\n\t\tlet proxyDefinition = this._proxifyMembers(id, obj, allowedMembers);\n\t\treturn new DynamicProxy(proxyDefinition, () => {\n\t\t\tdelete this._localObjMap[id];\n\t\t});\n\t}\n\n\tprivate _proxifyMethods<T>(uniqueIdentifier: string, obj:T): T {\n\t\tif (!Types.isObject(obj)) {\n\t\t\treturn null;\n\t\t}\n\t\tthis._localObjMap[uniqueIdentifier] = obj;\n\t\tvar r: any = {\n\t\t\t$__CREATE__PROXY__REQUEST: uniqueIdentifier\n\t\t};\n\t\tfor (var prop in obj) {\n\t\t\tif (typeof obj[prop] === 'function') {\n\t\t\t\tr[prop] = obj[prop].bind(obj);\n\t\t\t}\n\t\t}\n\t\treturn r;\n\t}\n\n\tprivate _proxifyMembers<T>(uniqueIdentifier: string, obj:T, allowedMembers:string[]): T {\n\t\tif (!Types.isObject(obj)) {\n\t\t\treturn null;\n\t\t}\n\t\tthis._localObjMap[uniqueIdentifier] = obj;\n\t\tvar r: any = {\n\t\t\t$__CREATE__PROXY__REQUEST: uniqueIdentifier\n\t\t};\n\t\tfor (var prop in obj) {\n\t\t\tif (allowedMembers.indexOf(prop) === -1) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (typeof obj[prop] === 'function') {\n\t\t\t\tr[prop] = obj[prop].bind(obj);\n\t\t\t} else {\n\t\t\t\tr[prop] = obj[prop];\n\t\t\t}\n\t\t}\n\t\treturn r;\n\t}\n\n\tpublic isProxyObject<T>(obj: T): boolean {\n\t\treturn obj && !!((<any>obj).$__IS_REMOTE_OBJ);\n\t}\n\n\tgetRemotable<T>(ctor: instantiation.INewConstructorSignature0<T>): T {\n\t\tvar id = Remotable.getId(ctor);\n\t\tif (!id) {\n\t\t\tthrow new Error('Unknown Remotable: <<' + id + '>>');\n\t\t}\n\n\t\tvar desc = createSyncDescriptor<T>(ctor);\n\n\t\tif (Remotable.Registry.MainContext[id]) {\n\t\t\treturn this._registerAndInstantiateMainProcessActor(id, desc);\n\t\t}\n\n\t\tif (Remotable.Registry.PluginHostContext[id]) {\n\t\t\treturn this._registerAndInstantiatePluginHostActor(id, desc);\n\t\t}\n\n\t\tif (Remotable.Registry.WorkerContext[id]) {\n\t\t\treturn this._registerAndInstantiateWorkerActor(id, desc, Remotable.Registry.WorkerContext[id].affinity);\n\t\t}\n\n\t\tthrow new Error('Unknown Remotable: <<' + id + '>>');\n\t}\n\n\tregisterRemotableInstance(ctor: any, instance: any): void {\n\t\tvar id = Remotable.getId(ctor);\n\t\tif (!id) {\n\t\t\tthrow new Error('Unknown Remotable: <<' + id + '>>');\n\t\t}\n\n\t\tif (Remotable.Registry.MainContext[id]) {\n\t\t\treturn this._registerMainProcessActor(id, instance);\n\t\t}\n\n\t\tif (Remotable.Registry.PluginHostContext[id]) {\n\t\t\treturn this._registerPluginHostActor(id, instance);\n\t\t}\n\n\t\tif (Remotable.Registry.WorkerContext[id]) {\n\t\t\treturn this._registerWorkerActor(id, instance);\n\t\t}\n\n\t\tthrow new Error('Unknown Remotable: <<' + id + '>>');\n\t}\n\n\tprotected abstract _registerAndInstantiateMainProcessActor<T>(id: string, descriptor: SyncDescriptor0<T>): T;\n\tprotected abstract _registerMainProcessActor<T>(id: string, actor:T): void;\n\tprotected abstract _registerAndInstantiatePluginHostActor<T>(id: string, descriptor: SyncDescriptor0<T>): T;\n\tprotected abstract _registerPluginHostActor<T>(id: string, actor:T): void;\n\tprotected abstract _registerAndInstantiateWorkerActor<T>(id: string, descriptor: SyncDescriptor0<T>, whichWorker:ThreadAffinity): T;\n\tprotected abstract _registerWorkerActor<T>(id: string, actor:T): void;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport remote = require('vs/base/common/remote');\nimport descriptors = require('vs/platform/instantiation/common/descriptors');\n\nimport abstractThreadService = require('./abstractThreadService');\nimport threadService = require('./threadService');\nimport {readThreadSynchronizableObjects} from 'vs/platform/thread/common/threadService';\nimport {IThreadService, IThreadSynchronizableObject, ThreadAffinity, IThreadServiceStatusListener} from 'vs/platform/thread/common/thread';\n\nexport class PluginHostThreadService extends abstractThreadService.AbstractThreadService implements IThreadService {\n\tpublic serviceId = IThreadService;\n\tprotected _remoteCom: remote.IRemoteCom;\n\n\tconstructor(remoteCom: remote.IRemoteCom) {\n\t\tsuper(false);\n\t\tthis._remoteCom = remoteCom;\n\t\tthis._remoteCom.registerBigHandler(this);\n\n\t\t// Register all statically instantiated synchronizable objects\n\t\treadThreadSynchronizableObjects().forEach((obj) => this.registerInstance(obj));\n\t}\n\n\tMainThread(obj:IThreadSynchronizableObject<any>, methodName:string, target:Function, params:any[]): TPromise<any> {\n\t\treturn target.apply(obj, params);\n\t}\n\n\tOneWorker(obj:IThreadSynchronizableObject<any>, methodName:string, target:Function, params:any[], affinity:ThreadAffinity): TPromise<any> {\n\t\treturn TPromise.as(null);\n\t}\n\n\tAllWorkers(obj:IThreadSynchronizableObject<any>, methodName:string, target:Function, params:any[]): TPromise<any> {\n\t\treturn TPromise.as(null);\n\t}\n\n\tEverywhere(obj:IThreadSynchronizableObject<any>, methodName:string, target:Function, params:any[]): TPromise<any> {\n\t\treturn target.apply(obj, params);\n\t}\n\n\tensureWorkers(): void {\n\t\t// Nothing to do\n\t}\n\n\taddStatusListener(listener:IThreadServiceStatusListener): void {\n\t\t// Nothing to do\n\t}\n\n\tremoveStatusListener(listener:IThreadServiceStatusListener): void {\n\t\t// Nothing to do\n\t}\n\n\tprotected _registerAndInstantiateMainProcessActor<T>(id: string, descriptor: descriptors.SyncDescriptor0<T>): T {\n\t\treturn this._getOrCreateProxyInstance(this._remoteCom, id, descriptor);\n\t}\n\n\tprotected _registerMainProcessActor<T>(id: string, actor:T): void {\n\t\tthrow new Error('Not supported in this runtime context!');\n\t}\n\n\tprotected _registerAndInstantiatePluginHostActor<T>(id: string, descriptor: descriptors.SyncDescriptor0<T>): T {\n\t\treturn this._getOrCreateLocalInstance(id, descriptor);\n\t}\n\n\tprotected _registerPluginHostActor<T>(id: string, actor:T): void {\n\t\tthis._registerLocalInstance(id, actor);\n\t}\n\n\tprotected _registerAndInstantiateWorkerActor<T>(id: string, descriptor: descriptors.SyncDescriptor0<T>, whichWorker:ThreadAffinity): T {\n\t\tthrow new Error('Not supported in this runtime context! Cannot communicate directly from Plugin Host to Worker!');\n\t}\n\n\tprotected _registerWorkerActor<T>(id: string, actor:T): void {\n\t\tthrow new Error('Not supported in this runtime context!');\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport URI from 'vs/base/common/uri';\nimport {createDecorator, ServiceIdentifier} from 'vs/platform/instantiation/common/instantiation';\n\nexport var IWorkspaceContextService = createDecorator<IWorkspaceContextService>('contextService');\n\nexport interface IWorkspaceContextService {\n\tserviceId: ServiceIdentifier<any>;\n\n\t/**\n\t * Provides access to the workspace object the platform is running with. This may be null if the workbench was opened\n\t * without workspace (empty);\n\t */\n\tgetWorkspace(): IWorkspace;\n\n\t/**\n\t * Provides access to the configuration object the platform is running with.\n\t */\n\tgetConfiguration(): IConfiguration;\n\n\t/**\n\t * Provides access to the options object the platform is running with.\n\t */\n\tgetOptions(): any;\n\n\t/**\n\t * Returns iff the provided resource is inside the workspace or not.\n\t */\n\tisInsideWorkspace(resource: URI): boolean;\n\n\t/**\n\t * Given a resource inside the workspace, returns its relative path from the workspace root\n\t * without leading or trailing slashes. Returns null if the file is not inside an opened\n\t * workspace.\n\t */\n\ttoWorkspaceRelativePath: (resource: URI) => string;\n\n\t/**\n\t * Given a workspace relative path, returns the resource with the absolute path.\n\t */\n\ttoResource: (workspaceRelativePath: string) => URI;\n}\n\nexport interface IWorkspace {\n\n\t/**\n\t * the full uri of the workspace. this is a file:// URL to the location\n\t * of the workspace on disk.\n\t */\n\tresource: URI;\n\n\t/**\n\t * the identifier that uniquely identifies this workspace among others.\n\t */\n\tid: string;\n\n\t/**\n\t * the name of the workspace\n\t */\n\tname: string;\n\n\t/**\n\t * the last modified date of the workspace if known\n\t */\n\tmtime?: number;\n\n\t/**\n\t * the unique identifier of the workspace. if the workspace is deleted and recreated\n\t * the identifier also changes. this makes the uid more unique compared to the id which\n\t * is just derived from the workspace name.\n\t */\n\tuid?: number;\n}\n\nexport interface IConfiguration {\n\n\t/**\n\t * Additional worker services\n\t */\n\tadditionalWorkerServices?: { serviceId: string; moduleName: string; ctorName: string; }[];\n\n\t/**\n\t * Some environmental flags\n\t */\n\tenv?: IEnvironment;\n}\n\nexport interface IEnvironment {\n\tappName: string;\n\tappRoot: string;\n\tisBuilt: boolean;\n\texecPath: string;\n\n\tversion: string;\n\tcommitHash: string;\n\n\tupdateFeedUrl: string;\n\tupdateChannel: string;\n\n\textensionsGallery: {\n\t\tserviceUrl: string;\n\t\titemUrl: string;\n\t};\n\n\treleaseNotesUrl: string;\n\tproductDownloadUrl: string;\n\n\twelcomePage: string;\n\n\tcrashReporter: any;\n\n\tappSettingsHome: string;\n\tappSettingsPath: string;\n\tappKeybindingsPath: string;\n\n\tdebugPluginHostPort: number;\n\tdebugBrkPluginHost: boolean;\n\tdisablePlugins: boolean;\n\n\tlogPluginHostCommunication: boolean;\n\tverboseLogging: boolean;\n\tenablePerformance: boolean;\n\n\tuserPluginsHome: string;\n\tsharedIPCHandle: string;\n\tpluginDevelopmentPath: string;\n\tpluginTestsPath: string;\n\n\trecentPaths: string[];\n\n\tenableTelemetry: boolean;\n\n\taiConfig: {\n\t\tkey: string;\n\t\tasimovKey: string;\n\t},\n\n\tsendASmile: {\n\t\tsubmitUrl: string,\n\t\treportIssueUrl: string,\n\t\trequestFeatureUrl: string\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport URI from 'vs/base/common/uri';\nimport paths = require('vs/base/common/paths');\nimport {IWorkspaceContextService, IWorkspace, IConfiguration} from './workspace';\n\n/**\n * Simple IWorkspaceContextService implementation to allow sharing of this service implementation\n * between different layers of the platform.\n */\nexport class BaseWorkspaceContextService implements IWorkspaceContextService {\n\tpublic serviceId = IWorkspaceContextService;\n\tprotected options: any;\n\n\tprivate workspace: IWorkspace;\n\tprivate configuration: IConfiguration;\n\n\tconstructor(workspace: IWorkspace, configuration?: IConfiguration, options: any = {}) {\n\t\tthis.workspace = workspace;\n\t\tthis.configuration = configuration;\n\t\tthis.options = options;\n\t}\n\n\tpublic getWorkspace(): IWorkspace {\n\t\treturn this.workspace;\n\t}\n\n\tpublic getConfiguration(): IConfiguration {\n\t\treturn this.configuration;\n\t}\n\n\tpublic getOptions(): any {\n\t\treturn this.options;\n\t}\n\n\tpublic isInsideWorkspace(resource: URI): boolean {\n\t\tif (resource && this.workspace) {\n\t\t\treturn paths.isEqualOrParent(resource.fsPath, this.workspace.resource.fsPath);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic toWorkspaceRelativePath(resource: URI): string {\n\t\tif (this.isInsideWorkspace(resource)) {\n\t\t\treturn paths.normalize(paths.relative(this.workspace.resource.fsPath, resource.fsPath));\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic toResource(workspaceRelativePath: string): URI {\n\t\tif (typeof workspaceRelativePath === 'string' && this.workspace) {\n\t\t\treturn URI.file(paths.join(this.workspace.resource.fsPath, workspaceRelativePath));\n\t\t}\n\n\t\treturn null;\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {Remotable, IThreadService} from 'vs/platform/thread/common/thread';\nimport {IEditorModesRegistry, Extensions} from 'vs/editor/common/modes/modesRegistry';\nimport {Registry} from 'vs/platform/platform';\nimport {INullService} from 'vs/platform/instantiation/common/instantiation';\n\nexport class ExtHostLanguages {\n\n\tprivate _proxy: MainThreadLanguages;\n\n\tconstructor( @IThreadService threadService: IThreadService) {\n\t\tthis._proxy = threadService.getRemotable(MainThreadLanguages);\n\t}\n\n\tgetLanguages(): TPromise<string[]> {\n\t\treturn this._proxy._getLanguages();\n\t}\n}\n\n@Remotable.MainContext('MainThreadLanguages')\nexport class MainThreadLanguages {\n\n\tprivate _registry: IEditorModesRegistry;\n\n\tconstructor(@INullService ns) {\n\t\tthis._registry = Registry.as(Extensions.EditorModes);\n\t}\n\n\t_getLanguages(): TPromise<string[]> {\n\t\treturn TPromise.as(this._registry.getRegisteredModes());\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport EditorCommon = require('vs/editor/common/editorCommon');\nimport Event, {Emitter} from 'vs/base/common/event';\nimport {IThreadService} from 'vs/platform/thread/common/thread';\nimport {IEditor} from 'vs/platform/editor/common/editor';\nimport {ICodeEditorService} from 'vs/editor/common/services/codeEditorService';\nimport {IModelService} from 'vs/editor/common/services/modelService';\nimport {IDisposable, disposeAll} from 'vs/base/common/lifecycle';\nimport {RunOnceScheduler} from 'vs/base/common/async';\nimport {Range} from 'vs/editor/common/core/range';\nimport {Selection} from 'vs/editor/common/core/selection';\n\nexport interface ITextEditorConfigurationUpdate {\n\ttabSize?: number;\n\tinsertSpaces?: boolean;\n}\nexport interface ITextEditorConfiguration {\n\ttabSize: number;\n\tinsertSpaces: boolean;\n}\n\nfunction configurationsEqual(a:ITextEditorConfiguration, b:ITextEditorConfiguration) {\n\tif (a && !b || !a && b) {\n\t\treturn false;\n\t}\n\tif (!a && !b) {\n\t\treturn true;\n\t}\n\treturn (\n\t\ta.tabSize === b.tabSize\n\t\t&& a.insertSpaces === b.insertSpaces\n\t);\n}\n\nexport interface IFocusTracker {\n\tonGainedFocus(): void;\n\tonLostFocus(): void;\n}\n\nexport enum TextEditorRevealType {\n\tDefault,\n\tInCenter,\n\tInCenterIfOutsideViewport\n}\n\n/**\n * Text Editor that is permanently bound to the same model.\n * It can be bound or not to a CodeEditor.\n */\nexport class MainThreadTextEditor {\n\n\tprivate _id: string;\n\tprivate _model: EditorCommon.IModel;\n\tprivate _codeEditor: EditorCommon.ICommonCodeEditor;\n\tprivate _focusTracker: IFocusTracker;\n\tprivate _codeEditorListeners: IDisposable[];\n\n\tprivate _lastSelection: EditorCommon.IEditorSelection[];\n\tprivate _lastConfiguration: ITextEditorConfiguration;\n\n\tprivate _onSelectionChanged: Emitter<EditorCommon.IEditorSelection[]>;\n\tprivate _onConfigurationChanged: Emitter<ITextEditorConfiguration>;\n\n\tconstructor(id: string, model:EditorCommon.IModel, codeEditor:EditorCommon.ICommonCodeEditor, focusTracker:IFocusTracker) {\n\t\tthis._id = id;\n\t\tthis._model = model;\n\t\tthis._codeEditor = null;\n\t\tthis._focusTracker = focusTracker;\n\t\tthis._codeEditorListeners = [];\n\n\t\tthis._onSelectionChanged = new Emitter<EditorCommon.IEditorSelection[]>();\n\t\tthis._onConfigurationChanged = new Emitter<ITextEditorConfiguration>();\n\n\t\tthis._lastSelection = [ new Selection(1,1,1,1) ];\n\t\tthis._lastConfiguration = {\n\t\t\tinsertSpaces: false,\n\t\t\ttabSize: 4\n\t\t};\n\n\t\tthis.setCodeEditor(codeEditor);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._model = null;\n\t\tthis._codeEditor = null;\n\t\tthis._codeEditorListeners = disposeAll(this._codeEditorListeners);\n\t}\n\n\tpublic getId(): string {\n\t\treturn this._id;\n\t}\n\n\tpublic getModel(): EditorCommon.IModel {\n\t\treturn this._model;\n\t}\n\n\tpublic hasCodeEditor(codeEditor:EditorCommon.ICommonCodeEditor): boolean {\n\t\treturn (this._codeEditor === codeEditor);\n\t}\n\n\tpublic setCodeEditor(codeEditor:EditorCommon.ICommonCodeEditor): void {\n\t\tif (this.hasCodeEditor(codeEditor)) {\n\t\t\t// Nothing to do...\n\t\t\treturn;\n\t\t}\n\t\tthis._codeEditorListeners = disposeAll(this._codeEditorListeners);\n\n\t\tthis._codeEditor = codeEditor;\n\t\tif (this._codeEditor) {\n\n\t\t\tvar forwardSelection = () => {\n\t\t\t\tthis._lastSelection = this._codeEditor.getSelections();\n\t\t\t\tthis._onSelectionChanged.fire(this._lastSelection);\n\t\t\t};\n\t\t\tthis._codeEditorListeners.push(this._codeEditor.addListener2(EditorCommon.EventType.CursorSelectionChanged, forwardSelection));\n\t\t\tif (!Selection.selectionsArrEqual(this._lastSelection, this._codeEditor.getSelections())) {\n\t\t\t\tforwardSelection();\n\t\t\t}\n\n\t\t\tvar forwardConfiguration = () => {\n\t\t\t\tthis._lastConfiguration = MainThreadTextEditor._readConfiguration(this._codeEditor);\n\t\t\t\tthis._onConfigurationChanged.fire(this._lastConfiguration);\n\t\t\t};\n\t\t\tthis._codeEditorListeners.push(this._codeEditor.addListener2(EditorCommon.EventType.ConfigurationChanged, forwardConfiguration));\n\t\t\tif (!configurationsEqual(this._lastConfiguration, MainThreadTextEditor._readConfiguration(this._codeEditor))) {\n\t\t\t\tforwardConfiguration();\n\t\t\t}\n\t\t\tthis._codeEditorListeners.push(this._codeEditor.addListener2(EditorCommon.EventType.EditorFocus, () => {\n\t\t\t\tthis._focusTracker.onGainedFocus();\n\t\t\t}));\n\t\t\tthis._codeEditorListeners.push(this._codeEditor.addListener2(EditorCommon.EventType.EditorBlur, () => {\n\t\t\t\tthis._focusTracker.onLostFocus();\n\t\t\t}));\n\t\t}\n\t}\n\n\tpublic isVisible(): boolean {\n\t\treturn !!this._codeEditor;\n\t}\n\n\tpublic get onSelectionChanged(): Event<EditorCommon.IEditorSelection[]> {\n\t\treturn this._onSelectionChanged.event;\n\t}\n\n\tpublic get onConfigurationChanged(): Event<ITextEditorConfiguration> {\n\t\treturn this._onConfigurationChanged.event;\n\t}\n\n\tpublic getSelections(): EditorCommon.IEditorSelection[] {\n\t\tif (this._codeEditor) {\n\t\t\treturn this._codeEditor.getSelections();\n\t\t}\n\t\treturn this._lastSelection;\n\t}\n\n\tpublic setSelections(selections:EditorCommon.ISelection[]): void {\n\t\tif (this._codeEditor) {\n\t\t\tthis._codeEditor.setSelections(selections);\n\t\t\treturn;\n\t\t}\n\t\tthis._lastSelection = selections.map(Selection.liftSelection);\n\t\tconsole.warn('setSelections on invisble editor');\n\t}\n\n\tpublic getConfiguration(): ITextEditorConfiguration {\n\t\tif (this._codeEditor) {\n\t\t\treturn MainThreadTextEditor._readConfiguration(this._codeEditor);\n\t\t}\n\t\treturn this._lastConfiguration;\n\t}\n\n\tpublic setConfiguration(newConfiguration:ITextEditorConfigurationUpdate): void {\n\t\tif (this._codeEditor) {\n\t\t\tthis._codeEditor.updateOptions(newConfiguration);\n\t\t\treturn;\n\t\t}\n\t\tthis._lastConfiguration.tabSize = typeof newConfiguration.tabSize !== 'undefined' ? newConfiguration.tabSize : this._lastConfiguration.tabSize;\n\t\tthis._lastConfiguration.insertSpaces = typeof newConfiguration.insertSpaces !== 'undefined' ? newConfiguration.insertSpaces : this._lastConfiguration.insertSpaces;\n\t\tconsole.warn('setConfiguration on invisible editor');\n\t}\n\n\tpublic setDecorations(key: string, ranges:EditorCommon.IRangeWithMessage[]): void {\n\t\tif (!this._codeEditor) {\n\t\t\tconsole.warn('setDecorations on invisible editor');\n\t\t\treturn;\n\t\t}\n\t\tthis._codeEditor.setDecorations(key, ranges);\n\t}\n\n\tpublic revealRange(range:EditorCommon.IRange, revealType:TextEditorRevealType): void {\n\t\tif (!this._codeEditor) {\n\t\t\tconsole.warn('revealRange on invisible editor');\n\t\t\treturn;\n\t\t}\n\t\tif (revealType === TextEditorRevealType.Default) {\n\t\t\tthis._codeEditor.revealRange(range);\n\t\t} else if (revealType === TextEditorRevealType.InCenter) {\n\t\t\tthis._codeEditor.revealRangeInCenter(range);\n\t\t} else if (revealType === TextEditorRevealType.InCenterIfOutsideViewport) {\n\t\t\tthis._codeEditor.revealRangeInCenterIfOutsideViewport(range);\n\t\t} else {\n\t\t\tconsole.warn('Unknown revealType');\n\t\t}\n\t}\n\n\tprivate static _readConfiguration(codeEditor:EditorCommon.ICommonCodeEditor): ITextEditorConfiguration {\n\t\tlet indent = codeEditor.getIndentationOptions();\n\t\treturn {\n\t\t\tinsertSpaces: indent.insertSpaces,\n\t\t\ttabSize: indent.tabSize\n\t\t};\n\t}\n\n\tpublic isFocused(): boolean {\n\t\tif (this._codeEditor) {\n\t\t\treturn this._codeEditor.isFocused();\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic matches(editor: IEditor): boolean {\n\t\treturn editor.getControl() === this._codeEditor;\n\t}\n\n\tpublic applyEdits(versionIdCheck:number, edits:EditorCommon.ISingleEditOperation[]): boolean {\n\t\tif (this._model.getVersionId() !== versionIdCheck) {\n\t\t\tconsole.warn('Model has changed in the meantime!');\n\t\t\t// throw new Error('Model has changed in the meantime!');\n\t\t\t// model changed in the meantime\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this._codeEditor) {\n\t\t\tvar transformedEdits = edits.map((edit): EditorCommon.IIdentifiedSingleEditOperation => {\n\t\t\t\treturn {\n\t\t\t\t\tidentifier: null,\n\t\t\t\t\trange: Range.lift(edit.range),\n\t\t\t\t\ttext: edit.text,\n\t\t\t\t\tforceMoveMarkers: edit.forceMoveMarkers\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn this._codeEditor.executeEdits('MainThreadTextEditor', transformedEdits) || true;\n\t\t}\n\n\t\tconsole.warn('applyEdits on invisible editor');\n\t\treturn false;\n\t}\n}\n\n/**\n * Keeps track of what goes on in the main thread and maps models => text editors\n */\nexport class MainThreadEditorsTracker {\n\n\tprivate static _LAST_TEXT_EDITOR_ID = 0;\n\tprivate _nextId(): string {\n\t\treturn String(++MainThreadEditorsTracker._LAST_TEXT_EDITOR_ID);\n\t}\n\n\tprivate _toDispose: IDisposable[];\n\tprivate _codeEditorService: ICodeEditorService;\n\tprivate _modelService: IModelService;\n\tprivate _updateMapping: RunOnceScheduler;\n\tprivate _editorModelChangeListeners: {[editorId:string]:IDisposable;};\n\n\tprivate _model2TextEditors: {\n\t\t[modelUri:string]: MainThreadTextEditor[];\n\t};\n\tprivate _focusedTextEditorId: string;\n\tprivate _visibleTextEditorIds: string[];\n\tprivate _onTextEditorAdd: Emitter<MainThreadTextEditor>;\n\tprivate _onTextEditorRemove: Emitter<MainThreadTextEditor>;\n\tprivate _onDidChangeFocusedTextEditor: Emitter<string>;\n\tprivate _onDidUpdateTextEditors: Emitter<void>;\n\n\tprivate _focusTracker: IFocusTracker;\n\n\tconstructor(\n\t\teditorService:ICodeEditorService,\n\t\tmodelService:IModelService\n\t) {\n\t\tthis._codeEditorService = editorService;\n\t\tthis._modelService = modelService;\n\t\tthis._toDispose = [];\n\t\tthis._focusedTextEditorId = null;\n\t\tthis._visibleTextEditorIds = [];\n\t\tthis._editorModelChangeListeners = Object.create(null);\n\t\tthis._model2TextEditors = Object.create(null);\n\t\tthis._onTextEditorAdd = new Emitter<MainThreadTextEditor>();\n\t\tthis._onTextEditorRemove = new Emitter<MainThreadTextEditor>();\n\t\tthis._onDidUpdateTextEditors = new Emitter<void>();\n\t\tthis._onDidChangeFocusedTextEditor = new Emitter<string>();\n\t\tthis._focusTracker = {\n\t\t\tonGainedFocus: () => this._updateFocusedTextEditor(),\n\t\t\tonLostFocus: () => this._updateFocusedTextEditor()\n\t\t};\n\n\t\tthis._modelService.onModelAdded.add(this._onModelAdded, this, this._toDispose);\n\t\tthis._modelService.onModelRemoved.add(this._onModelRemoved, this, this._toDispose);\n\n\t\tthis._codeEditorService.onCodeEditorAdd(this._onCodeEditorAdd, this, this._toDispose);\n\t\tthis._codeEditorService.onCodeEditorRemove(this._onCodeEditorRemove, this, this._toDispose);\n\n\t\tthis._updateMapping = new RunOnceScheduler(() => this._doUpdateMapping(), 0);\n\t\tthis._toDispose.push(this._updateMapping);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._toDispose = disposeAll(this._toDispose);\n\t}\n\n\tprivate _onModelAdded(model: EditorCommon.IModel): void {\n\t\tthis._updateMapping.schedule();\n\t}\n\n\tprivate _onModelRemoved(model: EditorCommon.IModel): void {\n\t\tthis._updateMapping.schedule();\n\t}\n\n\tprivate _onCodeEditorAdd(codeEditor: EditorCommon.ICommonCodeEditor): void {\n\t\tthis._editorModelChangeListeners[codeEditor.getId()] = codeEditor.addListener2(EditorCommon.EventType.ModelChanged, _ => this._updateMapping.schedule());\n\t\tthis._updateMapping.schedule();\n\t}\n\n\tprivate _onCodeEditorRemove(codeEditor: EditorCommon.ICommonCodeEditor): void {\n\t\tthis._editorModelChangeListeners[codeEditor.getId()].dispose();\n\t\tdelete this._editorModelChangeListeners[codeEditor.getId()];\n\t\tthis._updateMapping.schedule();\n\t}\n\n\tprivate _doUpdateMapping(): void {\n\t\tlet allModels = this._modelService.getModels();\n\t\t// Same filter as in pluginHostDocuments\n\t\tallModels.filter((model) => !model.isTooLargeForHavingARichMode());\n\t\tlet allModelsMap: { [modelUri:string]: EditorCommon.IModel; } = Object.create(null);\n\t\tallModels.forEach((model) => {\n\t\t\tallModelsMap[model.getAssociatedResource().toString()] = model;\n\t\t});\n\n\t\t// Remove text editors for models that no longer exist\n\t\tObject.keys(this._model2TextEditors).forEach((modelUri) => {\n\t\t\tif (allModelsMap[modelUri]) {\n\t\t\t\t// model still exists, will be updated below\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet textEditorsToRemove = this._model2TextEditors[modelUri];\n\t\t\tdelete this._model2TextEditors[modelUri];\n\n\t\t\tfor (let i = 0; i < textEditorsToRemove.length; i++) {\n\t\t\t\tthis._onTextEditorRemove.fire(textEditorsToRemove[i]);\n\t\t\t\ttextEditorsToRemove[i].dispose();\n\t\t\t}\n\t\t});\n\n\t\t// Handle all visible models\n\t\tlet visibleModels = this._getVisibleModels();\n\t\tObject.keys(visibleModels).forEach((modelUri) => {\n\t\t\tlet model = visibleModels[modelUri].model;\n\t\t\tlet codeEditors = visibleModels[modelUri].codeEditors;\n\n\t\t\tif (!this._model2TextEditors[modelUri]) {\n\t\t\t\tthis._model2TextEditors[modelUri] = [];\n\t\t\t}\n\t\t\tlet existingTextEditors = this._model2TextEditors[modelUri];\n\n\t\t\t// Remove text editors if more exist\n\t\t\twhile (existingTextEditors.length > codeEditors.length) {\n\t\t\t\tlet removedTextEditor = existingTextEditors.pop();\n\t\t\t\tthis._onTextEditorRemove.fire(removedTextEditor);\n\t\t\t\tremovedTextEditor.dispose();\n\t\t\t}\n\n\t\t\t// Adjust remaining text editors\n\t\t\tfor (let i = 0; i < existingTextEditors.length; i++) {\n\t\t\t\texistingTextEditors[i].setCodeEditor(codeEditors[i]);\n\t\t\t}\n\n\t\t\t// Create new editors as needed\n\t\t\tfor (let i = existingTextEditors.length; i < codeEditors.length; i++) {\n\t\t\t\tlet newTextEditor = new MainThreadTextEditor(this._nextId(), model, codeEditors[i], this._focusTracker);\n\t\t\t\texistingTextEditors.push(newTextEditor);\n\t\t\t\tthis._onTextEditorAdd.fire(newTextEditor);\n\t\t\t}\n\t\t});\n\n\t\t// Handle all not visible models\n\t\tallModels.forEach((model) => {\n\t\t\tlet modelUri = model.getAssociatedResource().toString();\n\n\t\t\tif (visibleModels[modelUri]) {\n\t\t\t\t// model is visible, already handled above\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!this._model2TextEditors[modelUri]) {\n\t\t\t\tthis._model2TextEditors[modelUri] = [];\n\t\t\t}\n\t\t\tlet existingTextEditors = this._model2TextEditors[modelUri];\n\n\t\t\t// Remove extra text editors\n\t\t\twhile (existingTextEditors.length > 1) {\n\t\t\t\tlet removedTextEditor = existingTextEditors.pop();\n\t\t\t\tthis._onTextEditorRemove.fire(removedTextEditor);\n\t\t\t\tremovedTextEditor.dispose();\n\t\t\t}\n\n\t\t\t// Create new editor if needed or adjust it\n\t\t\tif (existingTextEditors.length === 0) {\n\t\t\t\tlet newTextEditor = new MainThreadTextEditor(this._nextId(), model, null, this._focusTracker);\n\t\t\t\texistingTextEditors.push(newTextEditor);\n\t\t\t\tthis._onTextEditorAdd.fire(newTextEditor);\n\t\t\t} else {\n\t\t\t\texistingTextEditors[0].setCodeEditor(null);\n\t\t\t}\n\t\t});\n\n\t\tthis._printState();\n\n\t\tthis._visibleTextEditorIds = this._findVisibleTextEditorIds();\n\n\t\tthis._updateFocusedTextEditor();\n\n\t\t// this is a sync event\n\t\tthis._onDidUpdateTextEditors.fire(undefined);\n\t}\n\n\tprivate _updateFocusedTextEditor(): void {\n\t\tthis._setFocusedTextEditorId(this._findFocusedTextEditorId());\n\t}\n\n\tprivate _findFocusedTextEditorId(): string {\n\t\tlet modelUris = Object.keys(this._model2TextEditors);\n\t\tfor (let i = 0, len = modelUris.length; i < len; i++) {\n\t\t\tlet editors = this._model2TextEditors[modelUris[i]];\n\t\t\tfor (let j = 0, lenJ = editors.length; j < lenJ; j++) {\n\t\t\t\tif (editors[j].isFocused()) {\n\t\t\t\t\treturn editors[j].getId();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate _findVisibleTextEditorIds(): string[] {\n\t\tvar result = [];\n\t\tlet modelUris = Object.keys(this._model2TextEditors);\n\t\tfor (let i = 0, len = modelUris.length; i < len; i++) {\n\t\t\tlet editors = this._model2TextEditors[modelUris[i]];\n\t\t\tfor (let j = 0, lenJ = editors.length; j < lenJ; j++) {\n\t\t\t\tif (editors[j].isVisible()) {\n\t\t\t\t\tresult.push(editors[j].getId());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresult.sort();\n\t\treturn result;\n\t}\n\n\tprivate _setFocusedTextEditorId(focusedTextEditorId:string): void {\n\t\tif (this._focusedTextEditorId === focusedTextEditorId) {\n\t\t\t// no change\n\t\t\treturn;\n\t\t}\n\n\t\tthis._focusedTextEditorId = focusedTextEditorId;\n\t\tthis._printState();\n\t\tthis._onDidChangeFocusedTextEditor.fire(this._focusedTextEditorId);\n\t}\n\n\n\tprivate _printState(): void {\n\t\t// console.log('----------------------');\n\t\t// Object.keys(this._model2TextEditors).forEach((modelUri) => {\n\t\t// \tlet editors = this._model2TextEditors[modelUri];\n\n\t\t// \tconsole.log(editors.map((e) => {\n\t\t// \t\treturn e.getId() + \" (\" + (e.getId() === this._focusedTextEditorId ? 'FOCUSED, ': '') + modelUri + \")\";\n\t\t// \t}).join('\\n'));\n\t\t// });\n\t}\n\n\tprivate _getVisibleModels(): IVisibleModels {\n\t\tlet r: IVisibleModels = {};\n\n\t\tlet allCodeEditors = this._codeEditorService.listCodeEditors();\n\n\t\t// Maintain a certain sorting such that the mapping doesn't change too much all the time\n\t\tallCodeEditors.sort((a, b) => strcmp(a.getId(), b.getId()));\n\n\t\tallCodeEditors.forEach((codeEditor) => {\n\t\t\tlet model = codeEditor.getModel();\n\t\t\tif (!model) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet modelUri = model.getAssociatedResource().toString();\n\t\t\tr[modelUri] = r[modelUri] || {\n\t\t\t\tmodel: model,\n\t\t\t\tcodeEditors: []\n\t\t\t};\n\t\t\tr[modelUri].codeEditors.push(codeEditor);\n\t\t});\n\n\t\treturn r;\n\t}\n\n\tpublic getFocusedTextEditorId(): string {\n\t\treturn this._focusedTextEditorId;\n\t}\n\n\tpublic getVisibleTextEditorIds(): string[] {\n\t\treturn this._visibleTextEditorIds;\n\t}\n\n\tpublic get onTextEditorAdd(): Event<MainThreadTextEditor> {\n\t\treturn this._onTextEditorAdd.event;\n\t}\n\n\tpublic get onTextEditorRemove(): Event<MainThreadTextEditor> {\n\t\treturn this._onTextEditorRemove.event;\n\t}\n\n\tpublic get onDidUpdateTextEditors(): Event<void> {\n\t\treturn this._onDidUpdateTextEditors.event;\n\t}\n\n\tpublic get onChangedFocusedTextEditor(): Event<string> {\n\t\treturn this._onDidChangeFocusedTextEditor.event;\n\t}\n\n\tpublic findTextEditorIdFor(codeEditor:EditorCommon.ICommonCodeEditor): string {\n\t\tlet modelUris = Object.keys(this._model2TextEditors);\n\t\tfor (let i = 0, len = modelUris.length; i < len; i++) {\n\t\t\tlet editors = this._model2TextEditors[modelUris[i]];\n\t\t\tfor (let j = 0, lenJ = editors.length; j < lenJ; j++) {\n\t\t\t\tif (editors[j].hasCodeEditor(codeEditor)) {\n\t\t\t\t\treturn editors[j].getId();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic registerTextEditorDecorationType(key:string, options: EditorCommon.IDecorationRenderOptions): void {\n\t\tthis._codeEditorService.registerDecorationType(key, options);\n\t}\n\n\tpublic removeTextEditorDecorationType(key:string): void {\n\t\tthis._codeEditorService.removeDecorationType(key);\n\t}\n}\n\ninterface IVisibleModels {\n\t[modelUri:string]: {\n\t\tmodel: EditorCommon.IModel;\n\t\tcodeEditors: EditorCommon.ICommonCodeEditor[];\n\t}\n}\n\nfunction strcmp(a:string, b:string): number {\n\tif (a < b) {\n\t\treturn -1;\n\t}\n\tif (a > b) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {clone} from 'vs/base/common/objects';\nimport {IDisposable, disposeAll} from 'vs/base/common/lifecycle';\nimport {IThreadService, Remotable} from 'vs/platform/thread/common/thread';\nimport {IConfigurationService, ConfigurationServiceEventTypes, IConfigurationServiceEvent} from 'vs/platform/configuration/common/configuration';\nimport Event, {Emitter} from 'vs/base/common/event';\nimport {INullService} from 'vs/platform/instantiation/common/instantiation';\nimport {WorkspaceConfiguration} from 'vscode';\n\n@Remotable.PluginHostContext('PluginHostConfiguration')\nexport class PluginHostConfiguration {\n\n\tprivate _config: any;\n\tprivate _hasConfig: boolean;\n\tprivate _onDidChangeConfiguration: Emitter<void>;\n\n\tconstructor(@INullService ns) {\n\t\tthis._onDidChangeConfiguration = new Emitter<void>();\n\t}\n\n\tget onDidChangeConfiguration() {\n\t\treturn this._onDidChangeConfiguration && this._onDidChangeConfiguration.event;\n\t}\n\n\tpublic _acceptConfigurationChanged(config:any) {\n\t\tthis._config = config;\n\t\tthis._hasConfig = true;\n\t\tthis._onDidChangeConfiguration.fire(undefined);\n\t}\n\n\tpublic getConfiguration(section?: string): WorkspaceConfiguration {\n\t\tif (!this._hasConfig) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst config = section\n\t\t\t? PluginHostConfiguration._lookUp(section, this._config)\n\t\t\t: this._config;\n\n\n\t\tlet result = config ? clone(config) : {};\n\t\t// result = Object.freeze(result);\n\t\tresult.has = function(key: string): boolean {\n\t\t\treturn typeof PluginHostConfiguration._lookUp(key, config) !== 'undefined';\n\t\t}\n\t\tresult.get = function <T>(key: string, defaultValue?: T): T {\n\t\t\tlet result = PluginHostConfiguration._lookUp(key, config);\n\t\t\tif (typeof result === 'undefined') {\n\t\t\t\tresult = defaultValue;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate static _lookUp(section: string, config: any) {\n\t\tif (!section) {\n\t\t\treturn;\n\t\t}\n\t\tlet parts = section.split('.');\n\t\tlet node = config;\n\t\twhile (node && parts.length) {\n\t\t\tnode = node[parts.shift()];\n\t\t}\n\n\t\treturn node;\n\t}\n}\n\n@Remotable.MainContext('MainProcessConfigurationServiceHelper')\nexport class MainThreadConfiguration {\n\n\tprivate _configurationService: IConfigurationService;\n\tprivate _toDispose: IDisposable[];\n\tprivate _proxy: PluginHostConfiguration;\n\n\tconstructor(@IConfigurationService configurationService: IConfigurationService,\n\t\t@IThreadService threadService: IThreadService) {\n\n\t\tthis._configurationService = configurationService;\n\t\tthis._proxy = threadService.getRemotable(PluginHostConfiguration);\n\n\t\tthis._toDispose = [];\n\t\tthis._toDispose.push(this._configurationService.addListener2(ConfigurationServiceEventTypes.UPDATED, (e:IConfigurationServiceEvent) => {\n\t\t\tthis._proxy._acceptConfigurationChanged(e.config);\n\t\t}));\n\t\tthis._configurationService.loadConfiguration().then((config) => {\n\t\t\tthis._proxy._acceptConfigurationChanged(config);\n\t\t});\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._toDispose = disposeAll(this._toDispose);\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {Remotable, IThreadService} from 'vs/platform/thread/common/thread';\nimport {IMarkerService, IResourceMarker, IMarkerData} from 'vs/platform/markers/common/markers';\nimport URI from 'vs/base/common/uri';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport Severity from 'vs/base/common/severity';\nimport * as vscode from 'vscode';\n\nclass DiagnosticCollection implements vscode.DiagnosticCollection {\n\n\tprivate static _maxDiagnosticsPerFile: number = 250;\n\n\tprivate _name: string;\n\tprivate _proxy: MainThreadDiagnostics;\n\tprivate _isDisposed: boolean;\n\n\tconstructor(name: string, proxy: MainThreadDiagnostics) {\n\t\tthis._name = name;\n\t\tthis._proxy = proxy;\n\t}\n\n\tdispose(): void {\n\t\tif (!this._isDisposed) {\n\t\t\tthis._proxy._changeAll(this.name, undefined).then(() => {\n\t\t\t\tthis._proxy = undefined;\n\t\t\t\tthis._isDisposed = true;\n\t\t\t});\n\t\t}\n\t}\n\n\tget name(): string {\n\t\tthis._checkDisposed();\n\t\treturn this._name;\n\t}\n\n\tset(uri: vscode.Uri, diagnostics: vscode.Diagnostic[]): void;\n\tset(entries: [vscode.Uri, vscode.Diagnostic[]][]): void;\n\tset(first: vscode.Uri | [vscode.Uri, vscode.Diagnostic[]][], diagnostics?: vscode.Diagnostic[]) {\n\t\tthis._checkDisposed();\n\n\t\tif (first instanceof URI) {\n\t\t\t// change markers of resource only (max 500)\n\n\t\t\tlet data: IMarkerData[];\n\t\t\tif (diagnostics) {\n\t\t\t\tdata = [];\n\t\t\t\tlet len = diagnostics.length;\n\t\t\t\tif (len > DiagnosticCollection._maxDiagnosticsPerFile) {\n\t\t\t\t\tconsole.warn('diagnostics for %s will be capped to %d (actually is %d)', first.toString(), DiagnosticCollection._maxDiagnosticsPerFile, len);\n\t\t\t\t\tlen = DiagnosticCollection._maxDiagnosticsPerFile;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = 0; i < len; i++) {\n\t\t\t\t\tdata.push(DiagnosticCollection._toMarkerData(diagnostics[i]));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// set or reset for this resource\n\t\t\treturn this._proxy._changeOne(this.name, first, data);\n\n\t\t} else {\n\t\t\t// change all marker of owner\n\t\t\tlet entries = <[vscode.Uri, vscode.Diagnostic[]][]>first;\n\t\t\tlet data: IResourceMarker[];\n\t\t\tif (entries) {\n\t\t\t\tlet total = 0;\n\t\t\t\tdata = [];\n\t\t\t\tfor (let entry of entries) {\n\t\t\t\t\tlet [uri, diagnostics] = entry;\n\t\t\t\t\tif (diagnostics) {\n\t\t\t\t\t\tlet len = diagnostics.length;\n\t\t\t\t\t\tif (len > DiagnosticCollection._maxDiagnosticsPerFile) {\n\t\t\t\t\t\t\tconsole.warn('diagnostics for %s will be capped to %d (actually is %d)', uri.toString(), DiagnosticCollection._maxDiagnosticsPerFile, len);\n\t\t\t\t\t\t\tlen = DiagnosticCollection._maxDiagnosticsPerFile;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (let i = 0; i < len; i++) {\n\t\t\t\t\t\t\tdata.push({\n\t\t\t\t\t\t\t\tresource: <URI>uri,\n\t\t\t\t\t\t\t\tmarker: DiagnosticCollection._toMarkerData(diagnostics[i])\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttotal += len;\n\t\t\t\t\t\tif (total > 10 * DiagnosticCollection._maxDiagnosticsPerFile) {\n\t\t\t\t\t\t\tconsole.warn('too many diagnostics will cap to %d', 10 * DiagnosticCollection._maxDiagnosticsPerFile);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// set or reset all\n\t\t\tthis._proxy._changeAll(this.name, data);\n\t\t}\n\t}\n\n\tdelete(uri: vscode.Uri): void {\n\t\treturn this.set(uri, undefined);\n\t}\n\n\tclear(): void {\n\t\treturn this.set(undefined);\n\t}\n\n\tprivate _checkDisposed() {\n\t\tif (this._isDisposed) {\n\t\t\tthrow new Error('illegal state - object is disposed');\n\t\t}\n\t}\n\n\tprivate static _toMarkerData(diagnostic: vscode.Diagnostic): IMarkerData {\n\n\t\tlet range = diagnostic.range;\n\n\t\treturn <IMarkerData>{\n\t\t\tstartLineNumber: range.start.line + 1,\n\t\t\tstartColumn: range.start.character + 1,\n\t\t\tendLineNumber: range.end.line + 1,\n\t\t\tendColumn: range.end.character + 1,\n\t\t\tmessage: diagnostic.message,\n\t\t\tsource: diagnostic.source,\n\t\t\tseverity: DiagnosticCollection._convertDiagnosticsSeverity(diagnostic.severity),\n\t\t\tcode: String(diagnostic.code)\n\t\t}\n\t}\n\n\tprivate static _convertDiagnosticsSeverity(severity: number): Severity {\n\t\tswitch (severity) {\n\t\t\tcase 0: return Severity.Error;\n\t\t\tcase 1: return Severity.Warning;\n\t\t\tcase 2: return Severity.Info;\n\t\t\tcase 3: return Severity.Ignore;\n\t\t\tdefault: return Severity.Error;\n\t\t}\n\t}\n}\n\nexport class PluginHostDiagnostics {\n\n\tprivate static _idPool: number = 0;\n\tprivate _proxy: MainThreadDiagnostics;\n\n\tconstructor(threadService: IThreadService) {\n\t\tthis._proxy = threadService.getRemotable(MainThreadDiagnostics);\n\t}\n\n\tcreateDiagnosticCollection(name: string): vscode.DiagnosticCollection {\n\t\tif (!name) {\n\t\t\tname = '_generated_diagnostic_collection_name_#' + PluginHostDiagnostics._idPool++;\n\t\t}\n\t\treturn new DiagnosticCollection(name, this._proxy);\n\t}\n}\n\n@Remotable.MainContext('MainThreadDiagnostics')\nexport class MainThreadDiagnostics {\n\n\tprivate _markerService: IMarkerService;\n\n\tconstructor(@IMarkerService markerService: IMarkerService) {\n\t\tthis._markerService = markerService;\n\t}\n\n\t_changeOne(owner: string, resource: URI, markers: IMarkerData[]): TPromise<any> {\n\t\tthis._markerService.changeOne(owner, resource, markers);\n\t\treturn undefined;\n\t}\n\n\t_changeAll(owner: string, data: IResourceMarker[]): TPromise<any> {\n\t\tthis._markerService.changeAll(owner, data);\n\t\treturn undefined;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport nls = require('vs/nls');\nimport {Remotable, IThreadService} from 'vs/platform/thread/common/thread';\nimport {IMessageService} from 'vs/platform/message/common/message';\nimport Severity from 'vs/base/common/severity';\nimport {Action} from 'vs/base/common/actions';\nimport {TPromise as Promise} from 'vs/base/common/winjs.base';\nimport {PluginHostCommands} from 'vs/workbench/api/common/pluginHostCommands';\nimport vscode = require('vscode');\n\nexport class PluginHostMessageService {\n\n\tprivate _proxy: MainThreadMessageService;\n\tprivate _commands: typeof vscode.commands;\n\n\tconstructor(@IThreadService threadService: IThreadService, commands: typeof vscode.commands) {\n\t\tthis._proxy = threadService.getRemotable(MainThreadMessageService);\n\t\tthis._commands = commands;\n\t}\n\n\tshowMessage(severity: Severity, message: string, commands: (string|vscode.MessageItem)[]): Thenable<string|vscode.MessageItem> {\n\n\t\tconst items: { title: string; handle: number; }[] = [];\n\n\t\tfor (let handle = 0; handle < commands.length; handle++) {\n\t\t\tlet command = commands[handle];\n\t\t\tif (typeof command === 'string') {\n\t\t\t\titems.push({ title: command, handle });\n\t\t\t} else {\n\t\t\t\titems.push({ title: command.title, handle });\n\t\t\t}\n\t\t}\n\n\t\treturn this._proxy.showMessage(severity, message, items).then(handle => {\n\t\t\tif (typeof handle === 'number') {\n\t\t\t\treturn commands[handle];\n\t\t\t}\n\t\t});\n\t}\n}\n\n@Remotable.MainContext('MainThreadMessageService')\nexport class MainThreadMessageService {\n\n\tprivate _messageService: IMessageService;\n\n\tconstructor(@IMessageService messageService:IMessageService) {\n\t\tthis._messageService = messageService;\n\t}\n\n\tshowMessage(severity: Severity, message: string, commands: { title: string; handle: number;}[]): Thenable<number> {\n\n\t\tlet hide: (handle?: number) => void;\n\t\tlet actions: Action[] = [];\n\n\t\tactions.push(new Action('__close', nls.localize('close', \"Close\"), undefined, true, () => {\n\t\t\thide();\n\t\t\treturn Promise.as(undefined);\n\t\t}));\n\n\t\tcommands.forEach(command => {\n\t\t\tactions.push(new Action('_extension_message_handle_' + command.handle, command.title, undefined, true, () => {\n\t\t\t\thide(command.handle);\n\t\t\t\treturn Promise.as(undefined);\n\t\t\t}));\n\t\t});\n\n\t\treturn new Promise<number>((c) => {\n\t\t\tlet messageHide: Function;\n\n\t\t\thide = (handle?: number) => {\n\t\t\t\tmessageHide();\n\t\t\t\tc(handle);\n\t\t\t};\n\n\t\t\tmessageHide = this._messageService.show(severity, {\n\t\t\t\tmessage,\n\t\t\t\tactions\n\t\t\t});\n\t\t});\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {IThreadService} from 'vs/platform/thread/common/thread';\nimport {ITelemetryService} from 'vs/platform/telemetry/common/telemetry';\nimport {PluginsRegistry} from 'vs/platform/plugins/common/pluginsRegistry';\nimport {SyncActionDescriptor} from 'vs/platform/actions/common/actions';\nimport {TPromise as Promise} from 'vs/base/common/winjs.base';\nimport {AbstractRemoteTelemetryService} from 'vs/platform/telemetry/common/abstractRemoteTelemetryService';\nimport vscode = require('vscode');\n\nexport class PluginHostTelemetryService extends AbstractRemoteTelemetryService {\n\n\tprotected handleEvent(eventName:string, data?:any):void {\n\t\tvar data = data || {};\n\t\tdata['pluginHostTelemetry'] = true;\n\t\tsuper.handleEvent(eventName, data);\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport URI from 'vs/base/common/uri';\nimport {illegalArgument} from 'vs/base/common/errors';\n\nexport class Disposable {\n\n\tstatic from(...disposables: { dispose(): any }[]): Disposable {\n\t\treturn new Disposable(function () {\n\t\t\tif (disposables) {\n\t\t\t\tfor (let disposable of disposables) {\n\t\t\t\t\tif (disposable && typeof disposable.dispose === 'function') {\n\t\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdisposables = undefined;\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _callOnDispose: Function;\n\n\tconstructor(callOnDispose: Function) {\n\t\tthis._callOnDispose = callOnDispose;\n\t}\n\n\tdispose(): any {\n\t\tif (typeof this._callOnDispose === 'function') {\n\t\t\tthis._callOnDispose();\n\t\t\tthis._callOnDispose = undefined;\n\t\t}\n\t}\n}\n\nexport interface EditorOptions {\n\ttabSize: number;\n\tinsertSpaces: boolean;\n}\n\nexport class Position {\n\n\tstatic Min(...positions: Position[]): Position {\n\t\tlet result = positions.pop();\n\t\tfor (let p of positions) {\n\t\t\tif (p.isBefore(result)) {\n\t\t\t\tresult = p;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tstatic Max(...positions: Position[]): Position {\n\t\tlet result = positions.pop();\n\t\tfor (let p of positions) {\n\t\t\tif (p.isAfter(result)) {\n\t\t\t\tresult = p;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate _line: number;\n\tprivate _character: number;\n\n\tget line(): number {\n\t\treturn this._line;\n\t}\n\n\tget character(): number {\n\t\treturn this._character;\n\t}\n\n\tconstructor(line: number, character: number) {\n\t\tif (line < 0) {\n\t\t\tthrow illegalArgument('line must be positive');\n\t\t}\n\t\tif (character < 0) {\n\t\t\tthrow illegalArgument('character must be positive');\n\t\t}\n\t\tthis._line = line;\n\t\tthis._character = character;\n\t}\n\n\tisBefore(other: Position): boolean {\n\t\tif (this._line < other._line) {\n\t\t\treturn true;\n\t\t}\n\t\tif (other._line < this._line) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this._character < other._character;\n\t}\n\n\tisBeforeOrEqual(other: Position): boolean {\n\t\tif (this._line < other._line) {\n\t\t\treturn true;\n\t\t}\n\t\tif (other._line < this._line) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this._character <= other._character;\n\t}\n\n\tisAfter(other: Position): boolean {\n\t\treturn !this.isBeforeOrEqual(other);\n\t}\n\n\tisAfterOrEqual(other: Position): boolean {\n\t\treturn !this.isBefore(other);\n\t}\n\n\tisEqual(other: Position): boolean {\n\t\treturn this._line === other._line && this._character === other._character;\n\t}\n\n\tcompareTo(other: Position): number {\n\t\tif (this._line < other._line) {\n\t\t\treturn -1;\n\t\t} else if (this._line > other.line) {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\t// equal line\n\t\t\tif (this._character < other._character) {\n\t\t\t\treturn -1;\n\t\t\t} else if (this._character > other._character) {\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\t// equal line and character\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\n\ttranslate(lineDelta: number = 0, characterDelta: number = 0): Position {\n\t\tif (lineDelta === 0 && characterDelta === 0) {\n\t\t\treturn this;\n\t\t}\n\t\treturn new Position(this.line + lineDelta, this.character + characterDelta);\n\t}\n\n\twith(line: number = this.line, character: number = this.character): Position {\n\t\tif (line === this.line && character === this.character) {\n\t\t\treturn this;\n\t\t}\n\t\treturn new Position(line, character);\n\t}\n}\n\nexport class Range {\n\n\tprotected _start: Position;\n\tprotected _end: Position;\n\n\tget start(): Position {\n\t\treturn this._start;\n\t}\n\n\tget end(): Position {\n\t\treturn this._end;\n\t}\n\n\tconstructor(start: Position, end: Position);\n\tconstructor(startLine: number, startColumn: number, endLine: number, endColumn: number);\n\tconstructor(startLineOrStart: number|Position, startColumnOrEnd: number|Position, endLine?: number, endColumn?: number) {\n\t\tlet start: Position;\n\t\tlet end: Position;\n\n\t\tif (typeof startLineOrStart === 'number' && typeof startColumnOrEnd === 'number' && typeof endLine === 'number' && typeof endColumn === 'number') {\n\t\t\tstart = new Position(startLineOrStart, startColumnOrEnd);\n\t\t\tend = new Position(endLine, endColumn);\n\t\t} else if (startLineOrStart instanceof Position && startColumnOrEnd instanceof Position) {\n\t\t\tstart = startLineOrStart;\n\t\t\tend = startColumnOrEnd;\n\t\t}\n\n\t\tif (!start || !end) {\n\t\t\tthrow new Error('Invalid arguments');\n\t\t}\n\n\t\tif (start.isBefore(end)) {\n\t\t\tthis._start = start;\n\t\t\tthis._end = end;\n\t\t} else {\n\t\t\tthis._start = end;\n\t\t\tthis._end = start;\n\t\t}\n\t}\n\n\tcontains(positionOrRange: Position | Range): boolean {\n\t\tif (positionOrRange instanceof Range) {\n\t\t\treturn this.contains(positionOrRange._start)\n\t\t\t\t&& this.contains(positionOrRange._end);\n\n\t\t} else if (positionOrRange instanceof Position) {\n\t\t\tif (positionOrRange.isBefore(this._start)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this._end.isBefore(positionOrRange)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tisEqual(other: Range): boolean {\n\t\treturn this._start.isEqual(other._start) && this._end.isEqual(other._end);\n\t}\n\n\tintersection(other: Range): Range {\n\t\tlet start = Position.Max(other.start, this._start);\n\t\tlet end = Position.Min(other.end, this._end);\n\t\tif (start.isAfter(end)) {\n\t\t\t// this happens when there is no overlap:\n\t\t\t// |-----|\n\t\t\t//          |----|\n\t\t\treturn;\n\t\t}\n\t\treturn new Range(start, end);\n\t}\n\n\tunion(other: Range): Range {\n\t\tif (this.contains(other)) {\n\t\t\treturn this;\n\t\t} else if (other.contains(this)) {\n\t\t\treturn other;\n\t\t}\n\t\tlet start = Position.Min(other.start, this._start)\n\t\tlet end = Position.Max(other.end, this.end)\n\t\treturn new Range(start, end);\n\t}\n\n\tget isEmpty(): boolean {\n\t\treturn this._start.isEqual(this._end);\n\t}\n\n\tget isSingleLine(): boolean {\n\t\treturn this._start.line === this._end.line;\n\t}\n\n\twith(start: Position = this.start, end: Position = this.end): Range {\n\t\tif (start.isEqual(this._start) && end.isEqual(this.end)) {\n\t\t\treturn this;\n\t\t}\n\t\treturn new Range(start, end);\n\t}\n}\n\nexport class Selection extends Range {\n\n\tprivate _anchor: Position;\n\n\tpublic get anchor(): Position {\n\t\treturn this._anchor;\n\t}\n\n\tprivate _active: Position;\n\n\tpublic get active(): Position {\n\t\treturn this._active;\n\t}\n\n\tconstructor(anchor: Position, active: Position);\n\tconstructor(anchorLine: number, anchorColumn: number, activeLine: number, activeColumn: number);\n\tconstructor(anchorLineOrAnchor: number|Position, anchorColumnOrActive: number|Position, activeLine?: number, activeColumn?: number) {\n\t\tlet anchor: Position;\n\t\tlet active: Position;\n\n\t\tif (typeof anchorLineOrAnchor === 'number' && typeof anchorColumnOrActive === 'number' && typeof activeLine === 'number' && typeof activeColumn === 'number') {\n\t\t\tanchor = new Position(anchorLineOrAnchor, anchorColumnOrActive);\n\t\t\tactive = new Position(activeLine, activeColumn);\n\t\t} else if (anchorLineOrAnchor instanceof Position && anchorColumnOrActive instanceof Position) {\n\t\t\tanchor = anchorLineOrAnchor;\n\t\t\tactive = anchorColumnOrActive;\n\t\t}\n\n\t\tif (!anchor || !active) {\n\t\t\tthrow new Error('Invalid arguments');\n\t\t}\n\n\t\tthis._anchor = anchor;\n\t\tthis._active = active;\n\n\t\tsuper(anchor, active);\n\t}\n\n\tget isReversed(): boolean {\n\t\treturn this._anchor === this._end;\n\t}\n}\n\nexport class TextEdit {\n\n\tstatic replace(range: Range, newText: string): TextEdit {\n\t\treturn new TextEdit(range, newText);\n\t}\n\n\tstatic insert(position: Position, newText: string): TextEdit {\n\t\treturn TextEdit.replace(new Range(position, position), newText);\n\t}\n\n\tstatic delete(range: Range): TextEdit {\n\t\treturn TextEdit.replace(range, '');\n\t}\n\n\tprotected _range: Range;\n\n\tprotected _newText: string;\n\n\tget range(): Range {\n\t\treturn this._range;\n\t}\n\n\tset range(value: Range) {\n\t\tif (!value) {\n\t\t\tthrow illegalArgument('range')\n\t\t}\n\t\tthis._range = value;\n\t}\n\n\tget newText(): string {\n\t\treturn this._newText || '';\n\t}\n\n\tset newText(value) {\n\t\tthis._newText = value;\n\t}\n\n\tconstructor(range: Range, newText: string) {\n\t\tthis.range = range;\n\t\tthis.newText = newText;\n\t}\n}\n\nexport class Uri extends URI { };\n\nexport class WorkspaceEdit {\n\n\tprivate _values: [Uri, TextEdit[]][] = [];\n\tprivate _index: { [uri: string]: number } = Object.create(null);\n\n\treplace(uri: Uri, range: Range, newText: string): void {\n\t\tlet edit = new TextEdit(range, newText);\n\t\tlet array = this.get(uri);\n\t\tif (array) {\n\t\t\tarray.push(edit);\n\t\t} else {\n\t\t\tthis.set(uri, [edit]);\n\t\t}\n\t}\n\n\tinsert(resource: Uri, position: Position, newText: string): void {\n\t\tthis.replace(resource, new Range(position, position), newText);\n\t}\n\n\tdelete(resource: Uri, range: Range): void {\n\t\tthis.replace(resource, range, '');\n\t}\n\n\thas(uri: Uri): boolean {\n\t\treturn typeof this._index[uri.toString()] !== 'undefined';\n\t}\n\n\tset(uri: Uri, edits: TextEdit[]): void {\n\t\tlet idx = this._index[uri.toString()];\n\t\tif (typeof idx === 'undefined') {\n\t\t\tlet newLen = this._values.push([uri, edits]);\n\t\t\tthis._index[uri.toString()] = newLen - 1;\n\t\t} else {\n\t\t\tthis._values[idx][1] = edits;\n\t\t}\n\t}\n\n\tget(uri: Uri): TextEdit[] {\n\t\tlet idx = this._index[uri.toString()];\n\t\treturn typeof idx !== 'undefined' && this._values[idx][1];\n\t}\n\n\tentries(): [Uri, TextEdit[]][] {\n\t\treturn this._values;\n\t}\n\n\tget size(): number {\n\t\treturn this._values.length;\n\t}\n}\n\nexport enum DiagnosticSeverity {\n\tHint = 3,\n\tInformation = 2,\n\tWarning = 1,\n\tError = 0\n}\n\nexport class Location {\n\n\turi: URI;\n\trange: Range;\n\n\tconstructor(uri: URI, range: Range | Position) {\n\t\tthis.uri = uri;\n\n\t\tif (range instanceof Range) {\n\t\t\tthis.range = range;\n\t\t} else if (range instanceof Position) {\n\t\t\tthis.range = new Range(range, range);\n\t\t} else {\n\t\t\tthrow new Error('Illegal argument');\n\t\t}\n\t}\n}\n\nexport class Diagnostic {\n\n\trange: Range;\n\tmessage: string;\n\tsource: string;\n\tcode: string | number;\n\tseverity: DiagnosticSeverity;\n\n\tconstructor(range: Range, message: string, severity: DiagnosticSeverity = DiagnosticSeverity.Error) {\n\t\tthis.range = range;\n\t\tthis.message = message;\n\t\tthis.severity = severity;\n\t}\n}\n\nexport class Hover {\n\n\tpublic contents: vscode.MarkedString[];\n\tpublic range: Range;\n\n\tconstructor(contents: vscode.MarkedString | vscode.MarkedString[], range?: Range) {\n\t\tif (!contents) {\n\t\t\tthrow new Error('Illegal argument');\n\t\t}\n\n\t\tif (Array.isArray(contents)) {\n\t\t\tthis.contents = contents;\n\t\t} else {\n\t\t\tthis.contents = [contents];\n\t\t}\n\t\tthis.range = range;\n\t}\n}\n\nexport enum DocumentHighlightKind {\n\tText,\n\tRead,\n\tWrite\n}\n\nexport class DocumentHighlight {\n\n\trange: Range;\n\tkind: DocumentHighlightKind;\n\n\tconstructor(range: Range, kind: DocumentHighlightKind = DocumentHighlightKind.Text) {\n\t\tthis.range = range;\n\t\tthis.kind = kind;\n\t}\n}\n\nexport enum SymbolKind {\n\tFile,\n\tModule,\n\tNamespace,\n\tPackage,\n\tClass,\n\tMethod,\n\tProperty,\n\tField,\n\tConstructor,\n\tEnum,\n\tInterface,\n\tFunction,\n\tVariable,\n\tConstant,\n\tString,\n\tNumber,\n\tBoolean,\n\tArray,\n}\n\nexport class SymbolInformation {\n\n\tname: string;\n\tlocation: Location;\n\tkind: SymbolKind;\n\tcontainerName: string;\n\n\tconstructor(name: string, kind: SymbolKind, range: Range, uri?: URI, containerName?: string) {\n\t\tthis.name = name;\n\t\tthis.kind = kind;\n\t\tthis.location = new Location(uri, range);\n\t\tthis.containerName = containerName;\n\t}\n}\n\nexport class CodeLens {\n\n\trange: Range;\n\n\tcommand: vscode.Command;\n\n\tconstructor(range: Range, command?: vscode.Command) {\n\t\tthis.range = range;\n\t\tthis.command = command;\n\t}\n\n\tget isResolved(): boolean {\n\t\treturn !!this.command;\n\t}\n}\n\nexport class ParameterInformation {\n\n\tlabel: string;\n\tdocumentation: string;\n\n\tconstructor(label: string, documentation?: string) {\n\t\tthis.label = label;\n\t\tthis.documentation = documentation;\n\t}\n}\n\nexport class SignatureInformation {\n\n\tlabel: string;\n\tdocumentation: string;\n\tparameters: ParameterInformation[];\n\n\tconstructor(label: string, documentation?: string) {\n\t\tthis.label = label;\n\t\tthis.documentation = documentation;\n\t\tthis.parameters = [];\n\t}\n}\n\nexport class SignatureHelp {\n\n\tsignatures: SignatureInformation[];\n\tactiveSignature: number;\n\tactiveParameter: number;\n\n\tconstructor() {\n\t\tthis.signatures = [];\n\t}\n}\n\nexport enum CompletionItemKind {\n\tText,\n\tMethod,\n\tFunction,\n\tConstructor,\n\tField,\n\tVariable,\n\tClass,\n\tInterface,\n\tModule,\n\tProperty,\n\tUnit,\n\tValue,\n\tEnum,\n\tKeyword,\n\tSnippet,\n\tColor,\n\tFile,\n\tReference\n}\n\nexport class CompletionItem {\n\n\tlabel: string;\n\tkind: CompletionItemKind;\n\tdetail: string;\n\tdocumentation: string;\n\tsortText: string;\n\tfilterText: string;\n\tinsertText: string;\n\ttextEdit: TextEdit;\n\n\tconstructor(label: string) {\n\t\tthis.label = label;\n\t}\n}\n\nexport enum ViewColumn {\n\tOne = 1,\n\tTwo = 2,\n\tThree = 3\n}\n\nexport enum StatusBarAlignment {\n\tLeft = 1,\n\tRight = 2\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {FileChangesEvent, FileChangeType} from 'vs/platform/files/common/files';\nimport {Remotable, IThreadService} from 'vs/platform/thread/common/thread';\nimport {IMarkerService} from 'vs/platform/markers/common/markers';\nimport Event, {Emitter} from 'vs/base/common/event';\nimport {Disposable} from './pluginHostTypes';\nimport {IEventService} from 'vs/platform/event/common/event';\nimport {RunOnceScheduler} from 'vs/base/common/async';\nimport URI from 'vs/base/common/uri';\nimport {match} from 'vs/base/common/glob';\nimport {Uri, FileSystemWatcher as _FileSystemWatcher} from 'vscode';\nimport {INullService} from 'vs/platform/instantiation/common/instantiation';\n\nexport interface FileSystemEvents {\n\tcreated: URI[];\n\tchanged: URI[];\n\tdeleted: URI[];\n}\n\nexport class FileSystemWatcher implements _FileSystemWatcher {\n\n\tprivate _onDidCreate = new Emitter<Uri>();\n\tprivate _onDidChange = new Emitter<Uri>();\n\tprivate _onDidDelete = new Emitter<Uri>();\n\tprivate _disposable: Disposable;\n\tprivate _config: number;\n\n\tget ignoreCreateEvents(): boolean{\n\t\treturn Boolean(this._config & 0b001);\n\t}\n\n\tget ignoreChangeEvents(): boolean{\n\t\treturn Boolean(this._config & 0b010);\n\t}\n\n\tget ignoreDeleteEvents(): boolean{\n\t\treturn Boolean(this._config & 0b100);\n\t}\n\n\tconstructor(dispatcher: Event<FileSystemEvents>, globPattern: string, ignoreCreateEvents?: boolean, ignoreChangeEvents?: boolean, ignoreDeleteEvents?: boolean) {\n\n\t\tthis._config = 0;\n\t\tif (!ignoreCreateEvents) {\n\t\t\tthis._config += 0b001;\n\t\t}\n\t\tif (!ignoreChangeEvents) {\n\t\t\tthis._config += 0b010;\n\t\t}\n\t\tif (!ignoreDeleteEvents) {\n\t\t\tthis._config += 0b100;\n\t\t}\n\n\t\tlet subscription = dispatcher(events => {\n\t\t\tif (!ignoreCreateEvents) {\n\t\t\t\tfor (let created of events.created) {\n\t\t\t\t\tif (match(globPattern, created.fsPath)) {\n\t\t\t\t\t\tthis._onDidCreate.fire(created);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!ignoreChangeEvents) {\n\t\t\t\tfor (let changed of events.changed) {\n\t\t\t\t\tif (match(globPattern, changed.fsPath)) {\n\t\t\t\t\t\tthis._onDidChange.fire(changed);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!ignoreDeleteEvents) {\n\t\t\t\tfor (let deleted of events.deleted) {\n\t\t\t\t\tif (match(globPattern, deleted.fsPath)) {\n\t\t\t\t\t\tthis._onDidDelete.fire(deleted);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis._disposable = Disposable.from(this._onDidCreate, this._onDidChange, this._onDidDelete, subscription);\n\t}\n\n\tdispose() {\n\t\tthis._disposable.dispose();\n\t}\n\n\tget onDidCreate(): Event<Uri> {\n\t\treturn this._onDidCreate.event;\n\t}\n\n\tget onDidChange(): Event<Uri> {\n\t\treturn this._onDidChange.event;\n\t}\n\n\tget onDidDelete(): Event<Uri> {\n\t\treturn this._onDidDelete.event;\n\t}\n}\n\n@Remotable.PluginHostContext('PluginHostFileSystemEventService')\nexport class PluginHostFileSystemEventService {\n\n\tprivate _emitter = new Emitter<FileSystemEvents>();\n\tprivate _watchers: FileSystemWatcher[] = [];\n\n\tconstructor(@INullService ns) {\n\t}\n\n\tpublic createFileSystemWatcher(globPattern: string, ignoreCreateEvents?: boolean, ignoreChangeEvents?: boolean, ignoreDeleteEvents?: boolean): _FileSystemWatcher {\n\t\treturn new FileSystemWatcher(this._emitter.event, globPattern, ignoreCreateEvents, ignoreChangeEvents, ignoreDeleteEvents);\n\t}\n\n\t_onFileEvent(events: FileSystemEvents) {\n\t\tthis._emitter.fire(events);\n\t}\n}\n\nexport class MainThreadFileSystemEventService {\n\n\tconstructor( @IEventService eventService: IEventService, @IThreadService threadService: IThreadService) {\n\n\t\tconst proxy = threadService.getRemotable(PluginHostFileSystemEventService);\n\t\tconst events: FileSystemEvents = {\n\t\t\tcreated: [],\n\t\t\tchanged: [],\n\t\t\tdeleted: []\n\t\t};\n\n\t\tconst scheduler = new RunOnceScheduler(() => {\n\t\t\tproxy._onFileEvent(events);\n\t\t\tevents.created.length = 0;\n\t\t\tevents.changed.length = 0;\n\t\t\tevents.deleted.length = 0;\n\t\t}, 100);\n\n\t\teventService.addListener('files:fileChanges', (event: FileChangesEvent) => {\n\t\t\tfor (let change of event.changes) {\n\t\t\t\tswitch (change.type) {\n\t\t\t\t\tcase FileChangeType.ADDED:\n\t\t\t\t\t\tevents.created.push(change.resource);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase FileChangeType.UPDATED:\n\t\t\t\t\t\tevents.changed.push(change.resource);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase FileChangeType.DELETED:\n\t\t\t\t\t\tevents.deleted.push(change.resource);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tscheduler.schedule();\n\t\t});\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport Severity from 'vs/base/common/severity';\nimport * as objects from 'vs/base/common/objects';\nimport * as modes from 'vs/editor/common/modes';\nimport * as types from './pluginHostTypes';\nimport {Position as EditorPosition} from 'vs/platform/editor/common/editor';\nimport {IPosition, ISelection, IRange, IRangeWithMessage, ISingleEditOperation} from 'vs/editor/common/editorCommon';\nimport {IHTMLContentElement} from 'vs/base/common/htmlContent';\nimport {ITypeBearing} from 'vs/workbench/parts/search/common/search';\nimport * as vscode from 'vscode';\n\nexport interface PositionLike {\n\tline: number;\n\tcharacter: number;\n}\n\nexport interface RangeLike {\n\tstart: PositionLike;\n\tend: PositionLike;\n}\n\nexport interface SelectionLike extends RangeLike {\n\tanchor: PositionLike;\n\tactive: PositionLike;\n}\n\nexport function toSelection(selection: ISelection): types.Selection {\n\tlet {selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn} = selection;\n\tlet start = new types.Position(selectionStartLineNumber - 1, selectionStartColumn - 1);\n\tlet end = new types.Position(positionLineNumber - 1, positionColumn - 1);\n\treturn new types.Selection(start, end);\n}\n\nexport function fromSelection(selection: SelectionLike): ISelection {\n\tlet {anchor, active} = selection;\n\treturn {\n\t\tselectionStartLineNumber: anchor.line + 1,\n\t\tselectionStartColumn: anchor.character + 1,\n\t\tpositionLineNumber: active.line + 1,\n\t\tpositionColumn: active.character + 1\n\t};\n}\n\nexport function fromRange(range: RangeLike): IRange {\n\tlet {start, end} = range;\n\treturn {\n\t\tstartLineNumber: start.line + 1,\n\t\tstartColumn: start.character + 1,\n\t\tendLineNumber: end.line + 1,\n\t\tendColumn: end.character + 1\n\t};\n}\n\nexport function toRange(range: IRange): types.Range {\n\tlet {startLineNumber, startColumn, endLineNumber, endColumn} = range;\n\treturn new types.Range(startLineNumber - 1, startColumn - 1, endLineNumber - 1, endColumn - 1);\n}\n\nexport function toPosition(position: IPosition): types.Position {\n\treturn new types.Position(position.lineNumber - 1, position.column - 1);\n}\n\nexport function fromPosition(position: types.Position):IPosition {\n\treturn { lineNumber: position.line + 1, column: position.character + 1};\n}\n\nexport function fromDiagnosticSeverity(value: number): Severity {\n\tswitch (value) {\n\t\tcase types.DiagnosticSeverity.Error:\n\t\t\treturn Severity.Error;\n\t\tcase types.DiagnosticSeverity.Warning:\n\t\t\treturn Severity.Warning;\n\t\tcase types.DiagnosticSeverity.Information:\n\t\t\treturn Severity.Info;\n\t\tcase types.DiagnosticSeverity.Hint:\n\t\t\treturn Severity.Ignore;\n\t}\n\treturn Severity.Error;\n}\n\nexport function toDiagnosticSeverty(value: Severity): types.DiagnosticSeverity {\n\tswitch (value) {\n\t\tcase Severity.Info:\n\t\t\treturn types.DiagnosticSeverity.Information;\n\t\tcase Severity.Warning:\n\t\t\treturn types.DiagnosticSeverity.Warning;\n\t\tcase Severity.Error:\n\t\t\treturn types.DiagnosticSeverity.Error;\n\t\tcase Severity.Ignore:\n\t\t\treturn types.DiagnosticSeverity.Hint;\n\t}\n\treturn types.DiagnosticSeverity.Error;\n}\n\nexport function fromViewColumn(column?: vscode.ViewColumn): EditorPosition {\n\tlet editorColumn = EditorPosition.LEFT;\n\tif (typeof column !== 'number') {\n\t\t// stick with LEFT\n\t} else if (column === <number>types.ViewColumn.Two) {\n\t\teditorColumn = EditorPosition.CENTER;\n\t} else if (column === <number>types.ViewColumn.Three) {\n\t\teditorColumn = EditorPosition.RIGHT;\n\t}\n\treturn editorColumn;\n}\n\n\nexport function fromFormattedString(value: vscode.MarkedString): IHTMLContentElement {\n\tif (typeof value === 'string') {\n\t\treturn { formattedText: value };\n\t} else if (typeof value === 'object') {\n\t\treturn { code: value };\n\t}\n}\n\nexport function toFormattedString(value: IHTMLContentElement): vscode.MarkedString {\n\tif (typeof value.code === 'string') {\n\t\treturn value.code;\n\t}\n\tlet {formattedText, text} = value;\n\treturn formattedText || text || '<???>';\n}\n\nfunction isMarkedStringArr(something: vscode.MarkedString | vscode.MarkedString[]): something is vscode.MarkedString[] {\n\treturn Array.isArray(something);\n}\n\nfunction fromMarkedStringOrMarkedStringArr(something: vscode.MarkedString | vscode.MarkedString[]): IHTMLContentElement[] {\n\tif (isMarkedStringArr(something)) {\n\t\treturn something.map(msg => fromFormattedString(msg));\n\t} else if (something) {\n\t\treturn [fromFormattedString(something)];\n\t} else {\n\t\treturn [];\n\t}\n}\n\nfunction isRangeWithMessage(something: any): something is vscode.DecorationOptions {\n\treturn (typeof something.range !== 'undefined');\n}\n\nfunction isRangeWithMessageArr(something: vscode.Range[]|vscode.DecorationOptions[]): something is vscode.DecorationOptions[] {\n\tif (something.length === 0) {\n\t\treturn true;\n\t}\n\treturn isRangeWithMessage(something[0]);\n}\n\nexport function fromRangeOrRangeWithMessage(ranges:vscode.Range[]|vscode.DecorationOptions[]): IRangeWithMessage[] {\n\tif (isRangeWithMessageArr(ranges)) {\n\t\treturn ranges.map((r): IRangeWithMessage => {\n\t\t\treturn {\n\t\t\t\trange: fromRange(r.range),\n\t\t\t\thoverMessage: fromMarkedStringOrMarkedStringArr(r.hoverMessage)\n\t\t\t};\n\t\t});\n\t} else {\n\t\treturn ranges.map((r): IRangeWithMessage => {\n\t\t\treturn {\n\t\t\t\trange: fromRange(r)\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport const TextEdit = {\n\tfrom(edit: vscode.TextEdit): ISingleEditOperation{\n\t\treturn <ISingleEditOperation>{\n\t\t\ttext: edit.newText,\n\t\t\trange: fromRange(edit.range)\n\t\t}\n\t},\n\tto(edit: ISingleEditOperation): vscode.TextEdit {\n\t\treturn new types.TextEdit(toRange(edit.range), edit.text);\n\t}\n}\n\nexport namespace SymbolKind {\n\n\texport function from(kind: number | types.SymbolKind): string {\n\t\tswitch (kind) {\n\t\t\tcase types.SymbolKind.Method:\n\t\t\t\treturn 'method';\n\t\t\tcase types.SymbolKind.Function:\n\t\t\t\treturn 'function';\n\t\t\tcase types.SymbolKind.Constructor:\n\t\t\t\treturn 'constructor';\n\t\t\tcase types.SymbolKind.Variable:\n\t\t\t\treturn 'variable';\n\t\t\tcase types.SymbolKind.Class:\n\t\t\t\treturn 'class';\n\t\t\tcase types.SymbolKind.Interface:\n\t\t\t\treturn 'interface';\n\t\t\tcase types.SymbolKind.Module:\n\t\t\tcase types.SymbolKind.Namespace:\n\t\t\tcase types.SymbolKind.Package:\n\t\t\t\treturn 'module';\n\t\t\tcase types.SymbolKind.Property:\n\t\t\t\treturn 'property';\n\t\t\tcase types.SymbolKind.Enum:\n\t\t\t\treturn 'enum';\n\t\t\tcase types.SymbolKind.String:\n\t\t\t\treturn 'string';\n\t\t\tcase types.SymbolKind.File:\n\t\t\t\treturn 'file';\n\t\t\tcase types.SymbolKind.Array:\n\t\t\t\treturn 'array';\n\t\t\tcase types.SymbolKind.Number:\n\t\t\t\treturn 'number';\n\t\t\tcase types.SymbolKind.Boolean:\n\t\t\t\treturn 'boolean';\n\t\t}\n\t\treturn 'property';\n\t}\n\n\texport function to(type: string): types.SymbolKind {\n\t\tswitch (type) {\n\t\t\tcase 'method':\n\t\t\t\treturn types.SymbolKind.Method;\n\t\t\tcase 'function':\n\t\t\t\treturn types.SymbolKind.Function;\n\t\t\tcase 'constructor':\n\t\t\t\treturn types.SymbolKind.Constructor;\n\t\t\tcase 'variable':\n\t\t\t\treturn types.SymbolKind.Variable;\n\t\t\tcase 'class':\n\t\t\t\treturn types.SymbolKind.Class;\n\t\t\tcase 'interface':\n\t\t\t\treturn types.SymbolKind.Interface;\n\t\t\tcase 'module':\n\t\t\t// case types.SymbolKind.Namespace:\n\t\t\t// case types.SymbolKind.Package:\n\t\t\t\treturn types.SymbolKind.Module;\n\t\t\tcase 'property':\n\t\t\t\treturn types.SymbolKind.Property;\n\t\t\tcase 'enum':\n\t\t\t\treturn types.SymbolKind.Enum;\n\t\t\tcase 'string':\n\t\t\t\treturn types.SymbolKind.String;\n\t\t\tcase 'file':\n\t\t\t\treturn types.SymbolKind.File;\n\t\t\tcase 'array':\n\t\t\t\treturn types.SymbolKind.Array;\n\t\t\tcase 'number':\n\t\t\t\treturn types.SymbolKind.Number;\n\t\t\tcase 'boolean':\n\t\t\t\treturn types.SymbolKind.Boolean;\n\t\t}\n\t\treturn types.SymbolKind.Property\n\t}\n}\n\nexport namespace SymbolInformation {\n\n\texport function fromOutlineEntry(entry: modes.IOutlineEntry): types.SymbolInformation {\n\t\treturn new types.SymbolInformation(entry.label,\n\t\t\tSymbolKind.to(entry.type),\n\t\t\ttoRange(entry.range),\n\t\t\tundefined,\n\t\t\tentry.containerLabel)\n\t}\n\n\texport function toOutlineEntry(symbol: vscode.SymbolInformation): modes.IOutlineEntry {\n\t\treturn <modes.IOutlineEntry>{\n\t\t\ttype: SymbolKind.from(symbol.kind),\n\t\t\trange: fromRange(symbol.location.range),\n\t\t\tcontainerLabel: symbol.containerName,\n\t\t\tlabel: symbol.name,\n\t\t\ticon: undefined,\n\t\t};\n\t}\n\n}\n\nexport function fromSymbolInformation(info: vscode.SymbolInformation): ITypeBearing {\n\treturn <ITypeBearing>{\n\t\tname: info.name,\n\t\ttype: types.SymbolKind[info.kind || types.SymbolKind.Property].toLowerCase(),\n\t\trange: fromRange(info.location.range),\n\t\tresourceUri: info.location.uri,\n\t\tcontainerName: info.containerName,\n\t\tparameters: '',\n\t};\n}\n\nexport function toSymbolInformation(bearing: ITypeBearing): types.SymbolInformation {\n\treturn new types.SymbolInformation(bearing.name,\n\t\ttypes.SymbolKind[bearing.type.charAt(0).toUpperCase() + bearing.type.substr(1)],\n\t\ttoRange(bearing.range),\n\t\tbearing.resourceUri,\n\t\tbearing.containerName);\n}\n\n\nexport function toLocation(reference: modes.IReference): types.Location {\n\treturn new types.Location(reference.resource, toRange(reference.range));\n}\n\n\nexport function fromHover(hover: vscode.Hover): modes.IComputeExtraInfoResult {\n\treturn <modes.IComputeExtraInfoResult>{\n\t\trange: fromRange(hover.range),\n\t\thtmlContent: hover.contents.map(fromFormattedString)\n\t}\n}\n\nexport function toHover(info: modes.IComputeExtraInfoResult): types.Hover {\n\treturn new types.Hover(info.htmlContent.map(toFormattedString), toRange(info.range));\n}\n\nexport function toDocumentHighlight(occurrence: modes.IOccurence): types.DocumentHighlight {\n\treturn new types.DocumentHighlight(toRange(occurrence.range),\n\t\ttypes.DocumentHighlightKind[occurrence.kind.charAt(0).toUpperCase() + occurrence.kind.substr(1)]);\n}\n\nexport const Suggest = {\n\n\tfrom(item: vscode.CompletionItem): modes.ISuggestion {\n\t\tconst suggestion: modes.ISuggestion = {\n\t\t\tlabel: item.label,\n\t\t\tcodeSnippet: item.insertText || item.label,\n\t\t\ttype: types.CompletionItemKind[item.kind || types.CompletionItemKind.Text].toString().toLowerCase(),\n\t\t\ttypeLabel: item.detail,\n\t\t\tdocumentationLabel: item.documentation,\n\t\t\tsortText: item.sortText,\n\t\t\tfilterText: item.filterText\n\t\t};\n\t\treturn suggestion;\n\t},\n\n\tto(container: modes.ISuggestResult, position: types.Position, suggestion: modes.ISuggestion): types.CompletionItem {\n\t\tconst result = new types.CompletionItem(suggestion.label);\n\t\tresult.insertText = suggestion.codeSnippet;\n\t\tresult.kind = types.CompletionItemKind[suggestion.type.charAt(0).toUpperCase() + suggestion.type.substr(1)];\n\t\tresult.detail = suggestion.typeLabel;\n\t\tresult.documentation = suggestion.documentationLabel;\n\t\tresult.sortText = suggestion.sortText;\n\t\tresult.filterText = suggestion.filterText;\n\n\t\tlet overwriteBefore = (typeof suggestion.overwriteBefore === 'number') ? suggestion.overwriteBefore : container.currentWord.length;\n\t\tlet startPosition = new types.Position(position.line, Math.max(0, position.character - overwriteBefore));\n\t\tlet endPosition = position;\n\t\tif (typeof suggestion.overwriteAfter === 'number') {\n\t\t\tendPosition = new types.Position(position.line, position.character + suggestion.overwriteAfter);\n\t\t}\n\n\t\tresult.textEdit = types.TextEdit.replace(new types.Range(startPosition, endPosition), suggestion.codeSnippet);\n\t\treturn result;\n\t}\n}\n\nexport namespace SignatureHelp {\n\n\texport function from(signatureHelp: types.SignatureHelp): modes.IParameterHints {\n\n\t\tlet result: modes.IParameterHints = {\n\t\t\tcurrentSignature: signatureHelp.activeSignature,\n\t\t\tcurrentParameter: signatureHelp.activeParameter,\n\t\t\tsignatures: []\n\t\t}\n\n\t\tfor (let signature of signatureHelp.signatures) {\n\n\t\t\tlet signatureItem: modes.ISignature = {\n\t\t\t\tlabel: signature.label,\n\t\t\t\tdocumentation: signature.documentation,\n\t\t\t\tparameters: []\n\t\t\t};\n\n\t\t\tlet idx = 0;\n\t\t\tfor (let parameter of signature.parameters) {\n\n\t\t\t\tlet parameterItem: modes.IParameter = {\n\t\t\t\t\tlabel: parameter.label,\n\t\t\t\t\tdocumentation: parameter.documentation,\n\t\t\t\t};\n\n\t\t\t\tsignatureItem.parameters.push(parameterItem);\n\t\t\t\tidx = signature.label.indexOf(parameter.label, idx);\n\n\t\t\t\tif (idx >= 0) {\n\t\t\t\t\tparameterItem.signatureLabelOffset = idx;\n\t\t\t\t\tidx += parameter.label.length;\n\t\t\t\t\tparameterItem.signatureLabelEnd = idx;\n\t\t\t\t} else {\n\t\t\t\t\tparameterItem.signatureLabelOffset = 0;\n\t\t\t\t\tparameterItem.signatureLabelEnd = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tresult.signatures.push(signatureItem);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\texport function to(hints: modes.IParameterHints): types.SignatureHelp {\n\n\t\tconst result = new types.SignatureHelp();\n\t\tresult.activeSignature = hints.currentSignature;\n\t\tresult.activeParameter = hints.currentParameter;\n\n\t\tfor (let signature of hints.signatures) {\n\n\t\t\tconst signatureItem = new types.SignatureInformation(signature.label, signature.documentation);\n\t\t\tresult.signatures.push(signatureItem);\n\n\t\t\tfor (let parameter of signature.parameters) {\n\n\t\t\t\tconst parameterItem = new types.ParameterInformation(parameter.label, parameter.documentation);\n\t\t\t\tsignatureItem.parameters.push(parameterItem);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n}\n\nexport const Command = {\n\tfrom(command: vscode.Command): modes.ICommand {\n\t\tif (command) {\n\t\t\treturn <modes.ICommand>{\n\t\t\t\tid: command.command,\n\t\t\t\ttitle: command.title,\n\t\t\t\targuments: command.arguments\n\t\t\t};\n\t\t}\n\t},\n\n\tto(command: modes.ICommand): vscode.Command {\n\t\tif (command) {\n\t\t\treturn <vscode.Command>{\n\t\t\t\tcommand: command.id,\n\t\t\t\ttitle: command.title,\n\t\t\t\targuments: command.arguments\n\t\t\t};\n\t\t}\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport URI from 'vs/base/common/uri';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {IDisposable} from 'vs/base/common/lifecycle';\nimport * as vscode from 'vscode';\nimport * as typeConverters from 'vs/workbench/api/common/pluginHostTypeConverters';\nimport * as types from 'vs/workbench/api/common/pluginHostTypes';\nimport {ISingleEditOperation} from 'vs/editor/common/editorCommon';\nimport * as modes from 'vs/editor/common/modes';\nimport {ICommandHandlerDescription} from 'vs/platform/keybinding/common/keybindingService';\nimport {PluginHostCommands} from 'vs/workbench/api/common/pluginHostCommands';\nimport {IQuickFix2} from 'vs/editor/contrib/quickFix/common/quickFix';\nimport {IOutline} from 'vs/editor/contrib/quickOpen/common/quickOpen';\nimport {ITypeBearing} from 'vs/workbench/parts/search/common/search'\nimport {ICodeLensData} from 'vs/editor/contrib/codelens/common/codelens';\n\nexport class ExtHostApiCommands {\n\n\tprivate _commands: PluginHostCommands;\n\tprivate _disposables: IDisposable[] = [];\n\n\tconstructor(commands: PluginHostCommands) {\n\t\tthis._commands = commands;\n\n\t\tthis._register('vscode.executeWorkspaceSymbolProvider', this._executeWorkspaceSymbolProvider, {\n\t\t\tdescription: 'Execute all workspace symbol provider.',\n\t\t\targs: [{ name: 'query', constraint: String }],\n\t\t\treturns: 'A promise that resolves to an array of SymbolInformation-instances.'\n\n\t\t});\n\t\tthis._register('vscode.executeDefinitionProvider', this._executeDefinitionProvider, {\n\t\t\tdescription: 'Execute all definition provider.',\n\t\t\targs: [\n\t\t\t\t{ name: 'uri', description: 'Uri of a text document', constraint: URI },\n\t\t\t\t{ name: 'position', description: 'Position of a symbol', constraint: types.Position }\n\t\t\t],\n\t\t\treturns: 'A promise that resolves to an array of Location-instances.'\n\t\t});\n\t\tthis._register('vscode.executeHoverProvider', this._executeHoverProvider, {\n\t\t\tdescription: 'Execute all definition provider.',\n\t\t\targs: [\n\t\t\t\t{ name: 'uri', description: 'Uri of a text document', constraint: URI },\n\t\t\t\t{ name: 'position', description: 'Position of a symbol', constraint: types.Position }\n\t\t\t],\n\t\t\treturns: 'A promise that resolves to an array of Hover-instances.'\n\t\t});\n\t\tthis._register('vscode.executeDocumentHighlights', this._executeDocumentHighlights, {\n\t\t\tdescription: 'Execute document highlight provider.',\n\t\t\targs: [\n\t\t\t\t{ name: 'uri', description: 'Uri of a text document', constraint: URI },\n\t\t\t\t{ name: 'position', description: 'Position in a text document', constraint: types.Position }\n\t\t\t],\n\t\t\treturns: 'A promise that resolves to an array of DocumentHighlight-instances.'\n\t\t});\n\t\tthis._register('vscode.executeReferenceProvider', this._executeReferenceProvider, {\n\t\t\tdescription: 'Execute reference provider.',\n\t\t\targs: [\n\t\t\t\t{ name: 'uri', description: 'Uri of a text document', constraint: URI },\n\t\t\t\t{ name: 'position', description: 'Position in a text document', constraint: types.Position }\n\t\t\t],\n\t\t\treturns: 'A promise that resolves to an array of Location-instances.'\n\t\t});\n\t\tthis._register('vscode.executeDocumentRenameProvider', this._executeDocumentRenameProvider, {\n\t\t\tdescription: 'Execute rename provider.',\n\t\t\targs: [\n\t\t\t\t{ name: 'uri', description: 'Uri of a text document', constraint: URI },\n\t\t\t\t{ name: 'position', description: 'Position in a text document', constraint: types.Position },\n\t\t\t\t{ name: 'newName', description: 'The new symbol name', constraint: String }\n\t\t\t],\n\t\t\treturns: 'A promise that resolves to a WorkspaceEdit.'\n\t\t});\n\t\tthis._register('vscode.executeSignatureHelpProvider', this._executeSignatureHelpProvider, {\n\t\t\tdescription: 'Execute signature help provider.',\n\t\t\targs: [\n\t\t\t\t{ name: 'uri', description: 'Uri of a text document', constraint: URI },\n\t\t\t\t{ name: 'position', description: 'Position in a text document', constraint: types.Position }\n\t\t\t],\n\t\t\treturns: 'A promise that resolves to SignatureHelp.'\n\t\t});\n\t\tthis._register('vscode.executeDocumentSymbolProvider', this._executeDocumentSymbolProvider, {\n\t\t\tdescription: 'Execute document symbol provider.',\n\t\t\targs: [\n\t\t\t\t{ name: 'uri', description: 'Uri of a text document', constraint: URI }\n\t\t\t],\n\t\t\treturns: 'A promise that resolves to an array of SymbolInformation-instances.'\n\t\t});\n\t\tthis._register('vscode.executeCompletionItemProvider', this._executeCompletionItemProvider, {\n\t\t\tdescription: 'Execute completion item provider.',\n\t\t\targs: [\n\t\t\t\t{ name: 'uri', description: 'Uri of a text document', constraint: URI },\n\t\t\t\t{ name: 'position', description: 'Position in a text document', constraint: types.Position }\n\t\t\t],\n\t\t\treturns: 'A promise that resolves to an array of CompletionItem-instances.'\n\t\t});\n\t\tthis._register('vscode.executeCodeActionProvider', this._executeCodeActionProvider, {\n\t\t\tdescription: 'Execute code action provider.',\n\t\t\targs: [\n\t\t\t\t{ name: 'uri', description: 'Uri of a text document', constraint: URI },\n\t\t\t\t{ name: 'range', description: 'Range in a text document', constraint: types.Range }\n\t\t\t],\n\t\t\treturns: 'A promise that resolves to an array of CompletionItem-instances.'\n\t\t});\n\t\tthis._register('vscode.executeCodeLensProvider', this._executeCodeLensProvider, {\n\t\t\tdescription: 'Execute completion item provider.',\n\t\t\targs: [\n\t\t\t\t{ name: 'uri', description: 'Uri of a text document', constraint: URI }\n\t\t\t],\n\t\t\treturns: 'A promise that resolves to an array of Commands.'\n\t\t});\n\t\tthis._register('vscode.executeFormatDocumentProvider', this._executeFormatDocumentProvider, {\n\t\t\tdescription: 'Execute document format provider.',\n\t\t\targs: [\n\t\t\t\t{ name: 'uri', description: 'Uri of a text document', constraint: URI },\n\t\t\t\t{ name: 'options', description: 'Formatting options' }\n\t\t\t],\n\t\t\treturns: 'A promise that resolves to an array of TextEdits.'\n\t\t});\n\t\tthis._register('vscode.executeFormatRangeProvider', this._executeFormatRangeProvider, {\n\t\t\tdescription: 'Execute range format provider.',\n\t\t\targs: [\n\t\t\t\t{ name: 'uri', description: 'Uri of a text document', constraint: URI },\n\t\t\t\t{ name: 'range', description: 'Range in a text document', constraint: types.Range },\n\t\t\t\t{ name: 'options', description: 'Formatting options' }\n\t\t\t],\n\t\t\treturns: 'A promise that resolves to an array of TextEdits.'\n\t\t});\n\t\tthis._register('vscode.executeFormatOnTypeProvider', this._executeFormatOnTypeProvider, {\n\t\t\tdescription: 'Execute document format provider.',\n\t\t\targs: [\n\t\t\t\t{ name: 'uri', description: 'Uri of a text document', constraint: URI },\n\t\t\t\t{ name: 'position', description: 'Position in a text document', constraint: types.Position },\n\t\t\t\t{ name: 'ch', description: 'Character that got typed', constraint: String },\n\t\t\t\t{ name: 'options', description: 'Formatting options' }\n\t\t\t],\n\t\t\treturns: 'A promise that resolves to an array of TextEdits.'\n\t\t});\n\t}\n\n\t// --- command impl\n\n\tprivate _register(id: string, handler: (...args: any[]) => any, description?: ICommandHandlerDescription): void {\n\t\tlet disposable = this._commands.registerCommand(id, handler, this, description);\n\t\tthis._disposables.push(disposable);\n\t}\n\n\t/**\n\t * Execute workspace symbol provider.\n\t *\n\t * @param query Search string to match query symbol names\n\t * @return A promise that resolves to an array of symbol information.\n\t */\n\tprivate _executeWorkspaceSymbolProvider(query: string): Thenable<types.SymbolInformation[]> {\n\t\treturn this._commands.executeCommand<ITypeBearing[]>('_executeWorkspaceSymbolProvider', { query }).then(value => {\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\treturn value.map(typeConverters.toSymbolInformation);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _executeDefinitionProvider(resource: URI, position: types.Position): Thenable<types.Location[]> {\n\t\tconst args = {\n\t\t\tresource,\n\t\t\tposition: position && typeConverters.fromPosition(position)\n\t\t};\n\t\treturn this._commands.executeCommand<modes.IReference[]>('_executeDefinitionProvider', args).then(value => {\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\treturn value.map(typeConverters.toLocation)\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _executeHoverProvider(resource: URI, position: types.Position): Thenable<types.Hover[]> {\n\t\tconst args = {\n\t\t\tresource,\n\t\t\tposition: position && typeConverters.fromPosition(position)\n\t\t};\n\t\treturn this._commands.executeCommand<modes.IComputeExtraInfoResult[]>('_executeHoverProvider', args).then(value => {\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\treturn value.map(typeConverters.toHover)\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _executeDocumentHighlights(resource: URI, position: types.Position): Thenable<types.DocumentHighlight[]> {\n\t\tconst args = {\n\t\t\tresource,\n\t\t\tposition: position && typeConverters.fromPosition(position)\n\t\t};\n\t\treturn this._commands.executeCommand<modes.IOccurence[]>('_executeDocumentHighlights', args).then(value => {\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\treturn value.map(typeConverters.toDocumentHighlight)\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _executeReferenceProvider(resource: URI, position: types.Position): Thenable<types.Location[]> {\n\t\tconst args = {\n\t\t\tresource,\n\t\t\tposition: position && typeConverters.fromPosition(position)\n\t\t};\n\t\treturn this._commands.executeCommand<modes.IReference[]>('_executeDocumentHighlights', args).then(value => {\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\treturn value.map(typeConverters.toLocation)\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _executeDocumentRenameProvider(resource: URI, position: types.Position, newName: string): Thenable<types.WorkspaceEdit> {\n\t\tconst args = {\n\t\t\tresource,\n\t\t\tposition: position && typeConverters.fromPosition(position),\n\t\t\tnewName\n\t\t};\n\t\treturn this._commands.executeCommand<modes.IRenameResult>('_executeDocumentRenameProvider', args).then(value => {\n\t\t\tif (!value) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (value.rejectReason) {\n\t\t\t\treturn TPromise.wrapError(value.rejectReason);\n\t\t\t}\n\t\t\tlet workspaceEdit = new types.WorkspaceEdit();\n\t\t\tfor (let edit of value.edits) {\n\t\t\t\tworkspaceEdit.replace(edit.resource, typeConverters.toRange(edit.range), edit.newText);\n\t\t\t}\n\t\t\treturn workspaceEdit;\n\t\t});\n\t}\n\n\tprivate _executeSignatureHelpProvider(resource: URI, position: types.Position, triggerCharacter: string): Thenable<types.SignatureHelp> {\n\t\tconst args = {\n\t\t\tresource,\n\t\t\tposition: position && typeConverters.fromPosition(position),\n\t\t\ttriggerCharacter\n\t\t};\n\t\treturn this._commands.executeCommand<modes.IParameterHints>('_executeSignatureHelpProvider', args).then(value => {\n\t\t\tif (value) {\n\t\t\t\treturn typeConverters.SignatureHelp.to(value);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _executeCompletionItemProvider(resource: URI, position: types.Position, triggerCharacter: string): Thenable<types.CompletionItem[]> {\n\t\tconst args = {\n\t\t\tresource,\n\t\t\tposition: position && typeConverters.fromPosition(position),\n\t\t\ttriggerCharacter\n\t\t};\n\t\treturn this._commands.executeCommand<modes.ISuggestResult[][]>('_executeCompletionItemProvider', args).then(value => {\n\t\t\tif (value) {\n\t\t\t\tlet items: types.CompletionItem[] = [];\n\t\t\t\tfor (let group of value) {\n\t\t\t\t\tfor (let suggestions of group) {\n\t\t\t\t\t\tfor (let suggestion of suggestions.suggestions) {\n\t\t\t\t\t\t\tconst item = typeConverters.Suggest.to(suggestions, position, suggestion);\n\t\t\t\t\t\t\titems.push(item);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn items;\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _executeDocumentSymbolProvider(resource: URI): Thenable<types.SymbolInformation[]> {\n\t\tconst args = {\n\t\t\tresource\n\t\t};\n\t\treturn this._commands.executeCommand<IOutline>('_executeDocumentSymbolProvider', args).then(value => {\n\t\t\tif (value && Array.isArray(value.entries)) {\n\t\t\t\treturn value.entries.map(typeConverters.SymbolInformation.fromOutlineEntry);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _executeCodeActionProvider(resource: URI, range: types.Range): Thenable<vscode.Command[]> {\n\t\tconst args = {\n\t\t\tresource,\n\t\t\trange: typeConverters.fromRange(range)\n\t\t};\n\t\treturn this._commands.executeCommand<IQuickFix2[]>('_executeCodeActionProvider', args).then(value => {\n\t\t\tif (!Array.isArray(value)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn value.map(quickFix => typeConverters.Command.to(quickFix.command));\n\t\t});\n\t}\n\n\tprivate _executeCodeLensProvider(resource: URI): Thenable<vscode.CodeLens[]> {\n\t\tconst args = { resource };\n\t\treturn this._commands.executeCommand<ICodeLensData[]>('_executeCodeLensProvider', args).then(value => {\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\treturn value.map(item => {\n\t\t\t\t\treturn new types.CodeLens(\n\t\t\t\t\t\ttypeConverters.toRange(item.symbol.range),\n\t\t\t\t\t\ttypeConverters.Command.to(item.symbol.command));\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _executeFormatDocumentProvider(resource: URI, options: vscode.FormattingOptions): Thenable<vscode.TextEdit[]> {\n\t\tconst args = {\n\t\t\tresource,\n\t\t\toptions\n\t\t};\n\t\treturn this._commands.executeCommand<ISingleEditOperation[]>('_executeFormatDocumentProvider', args).then(value => {\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\treturn value.map(edit => new types.TextEdit(typeConverters.toRange(edit.range), edit.text));\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _executeFormatRangeProvider(resource: URI, range: types.Range, options: vscode.FormattingOptions): Thenable<vscode.TextEdit[]> {\n\t\tconst args = {\n\t\t\tresource,\n\t\t\trange: typeConverters.fromRange(range),\n\t\t\toptions\n\t\t};\n\t\treturn this._commands.executeCommand<ISingleEditOperation[]>('_executeFormatRangeProvider', args).then(value => {\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\treturn value.map(edit => new types.TextEdit(typeConverters.toRange(edit.range), edit.text));\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _executeFormatOnTypeProvider(resource: URI, position: types.Position, ch: string, options: vscode.FormattingOptions): Thenable<vscode.TextEdit[]> {\n\t\tconst args = {\n\t\t\tresource,\n\t\t\tposition: typeConverters.fromPosition(position),\n\t\t\tch,\n\t\t\toptions\n\t\t};\n\t\treturn this._commands.executeCommand<ISingleEditOperation[]>('_executeFormatOnTypeProvider', args).then(value => {\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\treturn value.map(edit => new types.TextEdit(typeConverters.toRange(edit.range), edit.text));\n\t\t\t}\n\t\t});\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {registerMarshallingContribution, IMarshallingContribution} from 'vs/base/common/marshalling';\nimport * as types from './pluginHostTypes';\nimport {IRange, IPosition} from 'vs/editor/common/editorCommon';\nimport {IReference} from 'vs/editor/common/modes';\n\nabstract class OneWayMarshalling<T> implements IMarshallingContribution {\n\n\tcanDeserialize() {\n\t\treturn false;\n\t}\n\n\tdeserialize() {\n\t\tthrow Error();\n\t}\n\n\tabstract canSerialize(obj: any): boolean;\n\n\tabstract serialize(obj: T, serialize: (obj: any) => any): any;\n}\n\nclass RangeMarshalling extends OneWayMarshalling<types.Range> {\n\n\tcanSerialize(obj: any): boolean {\n\t\treturn obj instanceof types.Range;\n\t}\n\n\tserialize(obj: types.Range, serialize: (obj: any) => any): any {\n\t\treturn <IRange>{\n\t\t\tstartLineNumber: 1 + obj.start.line,\n\t\t\tstartColumn: 1 + obj.start.character,\n\t\t\tendLineNumber: 1 + obj.end.line,\n\t\t\tendColumn: 1 + obj.end.character\n\t\t};\n\t}\n}\n\nclass PositionMarshalling extends OneWayMarshalling<types.Position> {\n\n\tcanSerialize(obj: any): boolean {\n\t\treturn obj instanceof types.Position;\n\t}\n\n\tserialize(obj: types.Position, serialize: (obj: any) => any): any {\n\t\treturn <IPosition>{\n\t\t\tlineNumber: 1 + obj.line,\n\t\t\tcolumn: 1 + obj.character\n\t\t};\n\t}\n}\n\nclass LocationMarshalling extends OneWayMarshalling<types.Location> {\n\n\tcanSerialize(obj: any): boolean {\n\t\treturn obj instanceof types.Location;\n\t}\n\n\tserialize(obj: types.Location, serialize: (obj: any) => any): any {\n\t\treturn <IReference>{\n\t\t\tresource: serialize(obj.uri),\n\t\t\trange: serialize(obj.range)\n\t\t};\n\t}\n}\n\nregisterMarshallingContribution(new RangeMarshalling());\nregisterMarshallingContribution(new PositionMarshalling());\nregisterMarshallingContribution(new LocationMarshalling());","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {Registry} from 'vs/platform/platform';\nimport {IDisposable} from 'vs/base/common/lifecycle';\nimport {SyncDescriptor0, createSyncDescriptor} from 'vs/platform/instantiation/common/descriptors';\nimport {INewConstructorSignature0} from 'vs/platform/instantiation/common/instantiation';\n\nexport interface IStatusbarItem {\n\trender(element: HTMLElement): IDisposable;\n}\n\nexport enum StatusbarAlignment {\n\tLEFT, RIGHT\n}\n\nexport class StatusbarItemDescriptor {\n\n\tpublic syncDescriptor: SyncDescriptor0<IStatusbarItem>;\n\tpublic alignment: StatusbarAlignment;\n\tpublic priority: number;\n\n\tconstructor(ctor: INewConstructorSignature0<IStatusbarItem>, alignment?: StatusbarAlignment, priority?: number) {\n\t\tthis.syncDescriptor = createSyncDescriptor(ctor);\n\t\tthis.alignment = alignment || StatusbarAlignment.LEFT;\n\t\tthis.priority = priority || 0;\n\t}\n}\n\nexport interface IStatusbarRegistry {\n\tregisterStatusbarItem(descriptor: StatusbarItemDescriptor): void;\n\titems: StatusbarItemDescriptor[];\n}\n\nclass StatusbarRegistry implements IStatusbarRegistry {\n\n\tprivate _items: StatusbarItemDescriptor[];\n\n\tconstructor() {\n\t\tthis._items = [];\n\t}\n\n\tpublic get items(): StatusbarItemDescriptor[] {\n\t\treturn this._items;\n\t}\n\n\tpublic registerStatusbarItem(descriptor: StatusbarItemDescriptor): void {\n\t\tthis._items.push(descriptor);\n\t}\n}\n\nexport const Extensions = {\n\tStatusbar: 'workbench.contributions.statusbar'\n};\n\nRegistry.add(Extensions.Statusbar, new StatusbarRegistry());\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {EventEmitter} from 'vs/base/common/eventEmitter';\nimport types = require('vs/base/common/types');\nimport URI from 'vs/base/common/uri';\nimport objects = require('vs/base/common/objects');\nimport {IEditor, IEditorViewState, IRange} from 'vs/editor/common/editorCommon';\nimport {IEditorInput, IEditorModel, IEditorOptions, ITextInput} from 'vs/platform/editor/common/editor';\n\n/**\n * A simple bag for input related status that can be shown in the UI\n */\nexport interface IInputStatus {\n\n\t/**\n\t * An identifier of the state that can be used e.g. as CSS class when displaying the input.\n\t */\n\tstate?: string;\n\n\t/**\n\t * A label to display describing the current input status.\n\t */\n\tdisplayText?: string;\n\n\t/**\n\t * A longer description giving more detail about the current input status.\n\t */\n\tdescription?: string;\n\n\t/**\n\t * Preferably a short label to append to the input name to indicate the input status.\n\t */\n\tdecoration?: string;\n}\n\n/**\n * Editor inputs are lightweight objects that can be passed to the workbench API to open inside the editor part.\n * Each editor input is mapped to an editor that is capable of opening it through the Platform facade.\n */\nexport abstract class EditorInput extends EventEmitter implements IEditorInput {\n\tprivate disposed: boolean;\n\n\t/**\n\t * Returns the unique id of this input.\n\t */\n\tpublic abstract getId(): string;\n\n\t/**\n\t * Returns the name of this input that can be shown to the user. Examples include showing the name of the input\n\t * above the editor area when the input is shown.\n\t */\n\tpublic getName(): string {\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the description of this input that can be shown to the user. Examples include showing the description of\n\t * the input above the editor area to the side of the name of the input.\n\t *\n\t * @param verbose controls if the description should be short or can contain additional details.\n\t */\n\tpublic getDescription(verbose?: boolean): string {\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns status information about this input that can be shown to the user. Examples include showing the status\n\t * of the input when hovering over the name of the input.\n\t */\n\tpublic getStatus(): IInputStatus {\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the preferred editor for this input. A list of candidate editors is passed in that whee registered\n\t * for the input. This allows subclasses to decide late which editor to use for the input on a case by case basis.\n\t */\n\tpublic getPreferredEditorId(candidates: string[]): string {\n\t\tif (candidates && candidates.length > 0) {\n\t\t\treturn candidates[0];\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns true if this input is identical to the otherInput.\n\t */\n\tpublic matches(otherInput: any): boolean {\n\t\treturn this === otherInput;\n\t}\n\n\t/**\n\t * Returns a type of EditorModel that represents the resolved input. Subclasses should\n\t * override to provide a meaningful model. The optional second argument allows to specify\n\t * if the EditorModel should be refreshed before returning it. Depending on the implementation\n\t * this could mean to refresh the editor model contents with the version from disk.\n\t */\n\tpublic abstract resolve(refresh?: boolean): TPromise<EditorModel>;\n\n\t/**\n\t * Called when an editor input is no longer needed. Allows to free up any resources taken by\n\t * resolving the editor input.\n\t */\n\tpublic dispose(): void {\n\t\tthis.disposed = true;\n\t\tthis.emit('dispose');\n\n\t\tsuper.dispose();\n\t}\n\n\t/**\n\t * Returns whether this input was disposed or not.\n\t */\n\tpublic isDisposed(): boolean {\n\t\treturn this.disposed;\n\t}\n}\n\n/**\n * The base class of editor inputs that have an original and modified side.\n */\nexport abstract class BaseDiffEditorInput extends EditorInput {\n\tprivate _originalInput: EditorInput;\n\tprivate _modifiedInput: EditorInput;\n\n\tconstructor(originalInput: EditorInput, modifiedInput: EditorInput) {\n\t\tsuper();\n\n\t\tthis._originalInput = originalInput;\n\t\tthis._modifiedInput = modifiedInput;\n\t}\n\n\tpublic get originalInput(): EditorInput {\n\t\treturn this._originalInput;\n\t}\n\n\tpublic get modifiedInput(): EditorInput {\n\t\treturn this._modifiedInput;\n\t}\n\n\tpublic getOriginalInput(): EditorInput {\n\t\treturn this.originalInput;\n\t}\n\n\tpublic getModifiedInput(): EditorInput {\n\t\treturn this.modifiedInput;\n\t}\n}\n\n/**\n * The editor model is the heavyweight counterpart of editor input. Depending on the editor input, it\n * connects to the disk to retrieve content and may allow for saving it back or reverting it. Editor models\n * are typically cached for some while because they are expensive to construct.\n */\nexport class EditorModel extends EventEmitter implements IEditorModel {\n\n\t/**\n\t * Causes this model to load returning a promise when loading is completed.\n\t */\n\tpublic load(): TPromise<EditorModel> {\n\t\treturn TPromise.as(this);\n\t}\n\n\t/**\n\t * Returns whether this model was loaded or not.\n\t */\n\tpublic isResolved(): boolean {\n\t\treturn true;\n\t}\n\n\t/**\n\t * Subclasses should implement to free resources that have been claimed through loading.\n\t */\n\tpublic dispose(): void {\n\t\tthis.emit('dispose');\n\n\t\tsuper.dispose();\n\t}\n}\n\n/**\n * The editor options is the base class of options that can be passed in when opening an editor.\n */\nexport class EditorOptions implements IEditorOptions {\n\n\t/**\n\t * Helper to create EditorOptions inline.\n\t */\n\tpublic static create(settings: { preserveFocus?: boolean; forceOpen?: boolean; }): EditorOptions {\n\t\tlet options = new EditorOptions();\n\t\toptions.preserveFocus = settings.preserveFocus;\n\t\toptions.forceOpen = settings.forceOpen;\n\n\t\treturn options;\n\t}\n\n\t/**\n\t * Tells the editor to not receive keyboard focus when the editor is being opened. By default,\n\t * the editor will receive keyboard focus on open.\n\t */\n\tpublic preserveFocus: boolean;\n\n\t/**\n\t * Tells the editor to replace the editor input in the editor even if it is identical to the one\n\t * already showing. By default, the editor will not replace the input if it is identical to the\n\t * one showing.\n\t */\n\tpublic forceOpen: boolean;\n\n\t/**\n\t * Ensures that the editor is being activated even if the input is already showing. This only applies\n\t * if there is more than one editor open already and preserveFocus is set to false.\n\t */\n\tpublic forceActive: boolean;\n\n\t/**\n\t * Returns true if this options is identical to the otherOptions.\n\t */\n\tpublic matches(otherOptions: any): boolean {\n\t\treturn this === otherOptions;\n\t}\n}\n\n/**\n * Base Text Editor Options.\n */\nexport class TextEditorOptions extends EditorOptions {\n\tprivate startLineNumber: number;\n\tprivate startColumn: number;\n\tprivate endLineNumber: number;\n\tprivate endColumn: number;\n\tprivate editorViewState: IEditorViewState;\n\n\tpublic static from(textInput: ITextInput): TextEditorOptions {\n\t\tlet options: TextEditorOptions = null;\n\t\tif (textInput && textInput.options) {\n\t\t\tif (textInput.options.selection || textInput.options.forceOpen || textInput.options.preserveFocus) {\n\t\t\t\toptions = new TextEditorOptions();\n\t\t\t}\n\n\t\t\tif (textInput.options.selection) {\n\t\t\t\tlet selection = textInput.options.selection;\n\t\t\t\toptions.selection(selection.startLineNumber, selection.startColumn, selection.endLineNumber, selection.endColumn);\n\t\t\t}\n\n\t\t\tif (textInput.options.forceOpen) {\n\t\t\t\toptions.forceOpen = true;\n\t\t\t}\n\n\t\t\tif (textInput.options.preserveFocus) {\n\t\t\t\toptions.preserveFocus = true;\n\t\t\t}\n\t\t}\n\n\t\treturn options;\n\t}\n\n\t/**\n\t * Helper to create TextEditorOptions inline.\n\t */\n\tpublic static create(settings: { preserveFocus?: boolean; forceOpen?: boolean; forceActive?: boolean; selection?: IRange }): TextEditorOptions {\n\t\tlet options = new TextEditorOptions();\n\t\toptions.preserveFocus = settings.preserveFocus;\n\t\toptions.forceActive = settings.forceActive;\n\t\toptions.forceOpen = settings.forceOpen;\n\n\t\tif (settings.selection) {\n\t\t\toptions.startLineNumber = settings.selection.startLineNumber;\n\t\t\toptions.startColumn = settings.selection.startColumn;\n\t\t\toptions.endLineNumber = settings.selection.endLineNumber || settings.selection.startLineNumber;\n\t\t\toptions.endColumn = settings.selection.endColumn || settings.selection.startColumn;\n\t\t}\n\n\t\treturn options;\n\t}\n\n\t/**\n\t * Returns if this options object has objects defined for the editor.\n\t */\n\tpublic hasOptionsDefined(): boolean {\n\t\treturn !!this.editorViewState || (!types.isUndefinedOrNull(this.startLineNumber) && !types.isUndefinedOrNull(this.startColumn));\n\t}\n\n\t/**\n\t * Tells the editor to set show the given selection when the editor is being opened.\n\t */\n\tpublic selection(startLineNumber: number, startColumn: number, endLineNumber: number = startLineNumber, endColumn: number = startColumn): EditorOptions {\n\t\tthis.startLineNumber = startLineNumber;\n\t\tthis.startColumn = startColumn;\n\t\tthis.endLineNumber = endLineNumber;\n\t\tthis.endColumn = endColumn;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the view state to be used when the editor is opening.\n\t */\n\tpublic viewState(viewState: IEditorViewState): void {\n\t\tthis.editorViewState = viewState;\n\t}\n\n\t/**\n\t * Apply the view state or selection to the given editor.\n\t *\n\t * @return if something was applied\n\t */\n\tpublic apply(textEditor: IEditor): boolean {\n\t\tlet gotApplied = false;\n\n\t\t// First try viewstate\n\t\tif (this.editorViewState) {\n\t\t\ttextEditor.restoreViewState(this.editorViewState);\n\t\t\tgotApplied = true;\n\t\t}\n\n\t\t// Otherwise check for selection\n\t\telse if (!types.isUndefinedOrNull(this.startLineNumber) && !types.isUndefinedOrNull(this.startColumn)) {\n\n\t\t\t// Select\n\t\t\tif (!types.isUndefinedOrNull(this.endLineNumber) && !types.isUndefinedOrNull(this.endColumn)) {\n\t\t\t\tlet range = {\n\t\t\t\t\tstartLineNumber: this.startLineNumber,\n\t\t\t\t\tstartColumn: this.startColumn,\n\t\t\t\t\tendLineNumber: this.endLineNumber,\n\t\t\t\t\tendColumn: this.endColumn\n\t\t\t\t};\n\t\t\t\ttextEditor.setSelection(range);\n\t\t\t\ttextEditor.revealRangeInCenter(range);\n\t\t\t}\n\n\t\t\t// Reveal\n\t\t\telse {\n\t\t\t\tlet pos = {\n\t\t\t\t\tlineNumber: this.startLineNumber,\n\t\t\t\t\tcolumn: this.startColumn\n\t\t\t\t};\n\t\t\t\ttextEditor.setPosition(pos);\n\t\t\t\ttextEditor.revealPositionInCenter(pos);\n\t\t\t}\n\n\t\t\tgotApplied = true;\n\t\t}\n\n\t\treturn gotApplied;\n\t}\n\n\tpublic matches(otherOptions: any): boolean {\n\t\tif (super.matches(otherOptions) === true) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (otherOptions) {\n\t\t\treturn otherOptions instanceof TextEditorOptions &&\n\t\t\t\t(<TextEditorOptions>otherOptions).startLineNumber === this.startLineNumber &&\n\t\t\t\t(<TextEditorOptions>otherOptions).startColumn === this.startColumn &&\n\t\t\t\t(<TextEditorOptions>otherOptions).endLineNumber === this.endLineNumber &&\n\t\t\t\t(<TextEditorOptions>otherOptions).endColumn === this.endColumn &&\n\t\t\t\t(<TextEditorOptions>otherOptions).preserveFocus === this.preserveFocus &&\n\t\t\t\t(<TextEditorOptions>otherOptions).forceOpen === this.forceOpen &&\n\t\t\t\tobjects.equals((<TextEditorOptions>otherOptions).editorViewState, this.editorViewState);\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\n/**\n * Base Text Diff Editor Options.\n */\nexport class TextDiffEditorOptions extends TextEditorOptions {\n\n\t/**\n\t * Helper to create TextDiffEditorOptions inline.\n\t */\n\tpublic static create(settings: { autoRevealFirstChange?: boolean; preserveFocus?: boolean; forceOpen?: boolean; }): TextDiffEditorOptions {\n\t\tlet options = new TextDiffEditorOptions();\n\t\toptions.autoRevealFirstChange = settings.autoRevealFirstChange;\n\t\toptions.preserveFocus = settings.preserveFocus;\n\t\toptions.forceOpen = settings.forceOpen;\n\n\t\treturn options;\n\t}\n\n\t/**\n\t * Whether to auto reveal the first change when the text editor is opened or not. By default\n\t * the first change will not be revealed.\n\t */\n\tpublic autoRevealFirstChange: boolean;\n}\n\nexport interface IResourceEditorInput extends IEditorInput {\n\n\t/**\n\t * Gets the absolute file resource URI this input is about.\n\t */\n\tgetResource(): URI;\n}\n\nexport enum EncodingMode {\n\n\t/**\n\t * Instructs the encoding support to encode the current input with the provided encoding\n\t */\n\tEncode,\n\n\t/**\n\t * Instructs the encoding support to decode the current input with the provided encoding\n\t */\n\tDecode\n}\n\nexport interface IEncodingSupport {\n\n\t/**\n\t * Gets the encoding of the input if known.\n\t */\n\tgetEncoding(): string;\n\n\t/**\n\t * Sets the encoding for the input for saving.\n\t */\n\tsetEncoding(encoding: string, mode: EncodingMode): void;\n}\n\n/**\n * This is a tagging interface to declare an editor input being capable of dealing with files. It is only used in the editor registry\n * to register this kind of input to the platform.\n */\nexport interface IFileEditorInput extends IResourceEditorInput, IEncodingSupport {\n\n\t/**\n\t * Gets the mime type of the file this input is about.\n\t */\n\tgetMime(): string;\n\n\t/**\n\t * Sets the mime type of the file this input is about.\n\t */\n\tsetMime(mime: string): void;\n\n\t/**\n\t * Sets the absolute file resource URI this input is about.\n\t */\n\tsetResource(resource: URI): void;\n}\n\n/**\n * Given an input, tries to get the associated URI for it (either file or untitled scheme).\n */\nexport function getUntitledOrFileResource(input: IEditorInput, supportDiff?: boolean): URI {\n\tif (!input) {\n\t\treturn null;\n\t}\n\n\tlet resourceInput = <IResourceEditorInput>input;\n\tif (types.isFunction(resourceInput.getResource)) {\n\t\treturn resourceInput.getResource();\n\t}\n\n\tlet fileInput = asFileEditorInput(input, supportDiff);\n\treturn fileInput && fileInput.getResource();\n}\n\n/**\n * Returns the object as IFileEditorInput only if it matches the signature.\n */\nexport function asFileEditorInput(obj: any, supportDiff?: boolean): IFileEditorInput {\n\tif (!obj) {\n\t\treturn null;\n\t}\n\n\t// Check for diff if we are asked to\n\tif (supportDiff && types.isFunction((<BaseDiffEditorInput>obj).getModifiedInput)) {\n\t\tobj = (<BaseDiffEditorInput>obj).getModifiedInput();\n\t}\n\n\tlet i = <IFileEditorInput>obj;\n\n\treturn i instanceof EditorInput && types.areFunctions(i.setResource, i.setMime, i.getResource, i.getMime) ? i : null;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise, Promise} from 'vs/base/common/winjs.base';\nimport types = require('vs/base/common/types');\nimport {EndOfLinePreference, IModel} from 'vs/editor/common/editorCommon';\nimport {IMode} from 'vs/editor/common/modes';\nimport {EditorModel} from 'vs/workbench/common/editor';\nimport {Registry} from 'vs/platform/platform';\nimport {IEditorModesRegistry, Extensions} from 'vs/editor/common/modes/modesRegistry';\nimport URI from 'vs/base/common/uri';\nimport {NullMode} from 'vs/editor/common/modes/nullMode';\nimport {ITextEditorModel} from 'vs/platform/editor/common/editor';\nimport {IModeService} from 'vs/editor/common/services/modeService';\nimport {IModelService} from 'vs/editor/common/services/modelService';\n\n/**\n * The base text editor model leverages the monaco code editor model. This class is only intended to be subclassed and not instantiated.\n */\nexport abstract class BaseTextEditorModel extends EditorModel implements ITextEditorModel {\n\tprivate textEditorModelHandle: URI;\n\n\tconstructor(\n\t\t@IModelService private modelService: IModelService,\n\t\t@IModeService private modeService: IModeService,\n\t\ttextEditorModelHandle?: URI\n\t) {\n\t\tsuper();\n\n\t\tthis.textEditorModelHandle = textEditorModelHandle;\n\t}\n\n\tpublic get textEditorModel(): IModel {\n\t\treturn this.textEditorModelHandle ? this.modelService.getModel(this.textEditorModelHandle): null;\n\t}\n\n\t/**\n\t * Creates the text editor model with the provided value, mime (can be comma separated for multiple values) and optional resource URL.\n\t */\n\tprotected createTextEditorModel(value: string, resource?: URI, mime?: string): TPromise<EditorModel> {\n\t\tlet firstLineText = this.getFirstLineText(value);\n\n\t\t// To avoid flickering, give the mode at most 50ms to load. If the mode doesn't load in 50ms, proceed creating the model with a mode promise\n\t\treturn Promise.any([Promise.timeout(50), this.getOrCreateMode(this.modeService, mime, firstLineText)]).then(() => {\n\t\t\tlet model = this.modelService.createModel(value, this.getOrCreateMode(this.modeService, mime, firstLineText), resource);\n\n\t\t\tthis.textEditorModelHandle = model.getAssociatedResource();\n\n\t\t\treturn this;\n\t\t});\n\t}\n\n\tprivate getFirstLineText(value: string): string {\n\t\tlet firstLineText = value.substr(0, 100);\n\n\t\tlet crIndex = firstLineText.indexOf('\\r');\n\t\tif (crIndex < 0) {\n\t\t\tcrIndex = firstLineText.length;\n\t\t}\n\n\t\tlet lfIndex = firstLineText.indexOf('\\n');\n\t\tif (lfIndex < 0) {\n\t\t\tlfIndex = firstLineText.length;\n\t\t}\n\n\t\tfirstLineText = firstLineText.substr(0, Math.min(crIndex, lfIndex));\n\n\t\treturn firstLineText;\n\t}\n\n\t/**\n\t * Gets the mode for the given identifier. Subclasses can override to provide their own implementation of this lookup.\n\t *\n\t * @param firstLineText optional first line of the text buffer to set the mode on. This can be used to guess a mode from content.\n\t */\n\tprotected getOrCreateMode(modeService:IModeService, mime: string, firstLineText?: string): TPromise<IMode> {\n\t\treturn modeService.getOrCreateMode(mime);\n\t}\n\n\t/**\n\t * Updates the text editor model with the provided value and mime (can be comma separated for multiple values).\n\t *\n\t * This is a no-op if neither the value did not change nor the mime.\n\t */\n\tprotected updateTextEditorModel(newValue?: string, newMime?: string): void {\n\t\tlet modesRegistry = <IEditorModesRegistry>Registry.as(Extensions.EditorModes);\n\n\t\t// Detect content changes\n\t\tlet currentModelValue = this.getValue();\n\t\tlet valueChanged = (!types.isUndefinedOrNull(newValue) && currentModelValue !== newValue);\n\n\t\t// Detect mode changes\n\t\tlet modeChanged = false;\n\t\tif (!types.isUndefinedOrNull(newMime)) {\n\t\t\tlet modeId = modesRegistry.getModeId(newMime);\n\t\t\tlet currentMode = this.textEditorModel.getMode();\n\t\t\tif (currentMode && currentMode.getId() !== NullMode.ID && modeId) {\n\t\t\t\tlet currentModeId = currentMode.getId();\n\t\t\t\tmodeChanged = (currentModeId !== modeId);\n\t\t\t}\n\t\t}\n\n\t\t// Apply either content or mode or both\n\t\tif (valueChanged) {\n\t\t\tthis.textEditorModel.setValue(newValue, modeChanged ? this.getOrCreateMode(this.modeService, newMime) : undefined);\n\t\t} else if (modeChanged) {\n\t\t\tthis.textEditorModel.setMode(this.getOrCreateMode(this.modeService, newMime));\n\t\t}\n\t}\n\n\t/**\n\t * Returns the textual value of this editor model or null if it has not yet been created.\n\t */\n\tpublic getValue(): string {\n\t\tlet model = this.textEditorModel;\n\t\tif (model) {\n\t\t\treturn model.getValue(EndOfLinePreference.TextDefined, true /* Preserve BOM */);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.textEditorModelHandle) {\n\t\t\tthis.modelService.destroyModel(this.textEditorModelHandle);\n\t\t}\n\n\t\tthis.textEditorModelHandle = null;\n\n\t\tsuper.dispose();\n\t}\n\n\tpublic isResolved(): boolean {\n\t\treturn !!this.textEditorModelHandle;\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {BaseTextEditorModel} from 'vs/workbench/browser/parts/editor/textEditorModel';\nimport {IIdentifiedSingleEditOperation} from 'vs/editor/common/editorCommon';\nimport {EditorModel} from 'vs/workbench/common/editor';\nimport URI from 'vs/base/common/uri';\nimport {Position} from 'vs/editor/common/core/position';\nimport {Range} from 'vs/editor/common/core/range';\nimport {IModeService} from 'vs/editor/common/services/modeService';\nimport {IModelService} from 'vs/editor/common/services/modelService';\nimport {EditOperation} from 'vs/editor/common/core/editOperation';\n\n/**\n * An editor model whith an in-memory, readonly content that is not backed by any particular resource.\n */\nexport class StringEditorModel extends BaseTextEditorModel {\n\tprotected value: string;\n\tprotected mime: string;\n\tprotected resource: URI;\n\n\tconstructor(\n\t\tvalue: string,\n\t\tmime: string,\n\t\tresource: URI,\n\t\t@IModeService modeService: IModeService,\n\t\t@IModelService modelService: IModelService\n\t) {\n\t\tsuper(modelService, modeService);\n\n\t\tthis.value = value;\n\t\tthis.mime = mime;\n\t\tthis.resource = resource;\n\t}\n\n\t/**\n\t * The value of this string editor model.\n\t */\n\tpublic getValue(): string {\n\t\treturn this.value;\n\t}\n\n\t/**\n\t * Sets the value of this string editor model.\n\t */\n\tpublic setValue(value: string): void {\n\t\tthis.value = value;\n\t\tif (this.textEditorModel) {\n\t\t\tthis.textEditorModel.setValue(value);\n\t\t}\n\t}\n\n\t/**\n\t * Appends value to this string editor model.\n\t */\n\tpublic append(value: string): void {\n\t\tthis.value += value;\n\t\tif (this.textEditorModel) {\n\t\t\tlet model = this.textEditorModel;\n\t\t\tlet lastLine = model.getLineCount();\n\t\t\tlet lastLineMaxColumn = model.getLineMaxColumn(lastLine);\n\n\t\t\tmodel.applyEdits([EditOperation.insert(new Position(lastLine, lastLineMaxColumn), value)]);\n\t\t}\n\t}\n\n\t/**\n\t * Clears the value of this string editor model\n\t */\n\tpublic clearValue(): void {\n\t\tthis.value = '';\n\t\tif (this.textEditorModel) {\n\t\t\tlet model = this.textEditorModel;\n\t\t\tlet lastLine = model.getLineCount();\n\t\t\tmodel.applyEdits([EditOperation.delete(new Range(1, 1, lastLine, model.getLineMaxColumn(lastLine)))]);\n\t\t}\n\t}\n\n\t/**\n\t * Removes all lines from the top if the line number exceeds the given line count. Returns the new value if lines got trimmed.\n\t */\n\tpublic trim(linecount: number): string {\n\t\tif (this.textEditorModel) {\n\t\t\tlet model = this.textEditorModel;\n\t\t\tlet lastLine = model.getLineCount();\n\t\t\tif (lastLine > linecount) {\n\t\t\t\tmodel.applyEdits([EditOperation.delete(new Range(1, 1, lastLine - linecount + 1, 1))]);\n\n\t\t\t\tlet newValue = model.getValue();\n\t\t\t\tthis.value = newValue;\n\n\t\t\t\treturn this.value;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic getMime(): string {\n\t\treturn this.mime;\n\t}\n\n\tpublic load(): TPromise<EditorModel> {\n\n\t\t// Create text editor model if not yet done\n\t\tif (!this.textEditorModel) {\n\t\t\treturn this.createTextEditorModel(this.value, this.resource, this.mime);\n\t\t}\n\n\t\t// Otherwise update\n\t\telse {\n\t\t\tthis.updateTextEditorModel(this.value);\n\t\t}\n\n\t\treturn TPromise.as<EditorModel>(this);\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {Event} from 'vs/base/common/events';\n\n/**\n * All workbench events are listed here. For DOM events, see Monaco.Base.DomUtils.EventType.\n */\nexport class EventType {\n\n\t/**\n\t * Event type for when the workbench options change. Listeners should refresh their\n\t * assumption on workbench options after this event is emitted.\n\t */\n\tstatic WORKBENCH_OPTIONS_CHANGED = 'workbenchOptionsChanged';\n}\n\n/**\n * Option change events are send when the options in the running instance change.\n */\nexport class OptionsChangeEvent extends Event {\n\tpublic key: string;\n\tpublic before: any;\n\tpublic after: any;\n\n\tconstructor(key: string, before: any, after: any, originalEvent?: any) {\n\t\tsuper(originalEvent);\n\n\t\tthis.key = key;\n\t\tthis.before = before;\n\t\tthis.after = after;\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {Event} from 'vs/base/common/events';\nimport URI from 'vs/base/common/uri';\nimport {IEditorSelection} from 'vs/editor/common/editorCommon';\nimport CommonEvents = require('vs/workbench/common/events');\nimport {BaseEditor} from 'vs/workbench/browser/parts/editor/baseEditor';\nimport {EditorInput, EditorOptions} from 'vs/workbench/common/editor';\nimport {Position} from 'vs/platform/editor/common/editor';\n\n/**\n * All workbench events are listed here. For DOM events, see Monaco.Base.DomUtils.EventType.\n */\nexport class EventType {\n\n\t/**\n\t * Event type for when an editor is opened. This event is only sent once for a specific editor type until another\n\t * editor type gets opened. For example, when the user opens a file, the editorOpened event will be sent. If another\n\t * file is opened, this event will not be fired again. If the user opens, e.g. the diff editor, editorOpened will be\n\t * fired, since another editor type opened.\n\t */\n\tstatic EDITOR_OPENED = 'editorOpened';\n\n\t/**\n\t * Event type for when an editor is closed because another editor type is opened.\n\t */\n\tstatic EDITOR_CLOSED = 'editorClosed';\n\n\t/**\n\t * Event to indciate that an editor input is about to open. This event can be prevented to do something else instead.\n\t */\n\tstatic EDITOR_INPUT_OPENING = 'editorInputOpening';\n\n\t/**\n\t * Event type for when the editor input is about to change. This event is being sent before (!) the input is being set\n\t * to the active editor. Use EDITOR_INPUT_CHANGED to react after the input has been set and displayed by the editor.\n\t *\n\t * Note: This event will also be emitted when multiple editors are open and the user sets focus from the active editor\n\t * to another one. This allows to detect a focus change of the active editor.\n\t */\n\tstatic EDITOR_INPUT_CHANGING = 'editorInputChanging';\n\n\t/**\n\t * Event type to indicate that the editor options of the current active editor are changing.\n\t */\n\tstatic EDITOR_OPTIONS_CHANGING = 'editorOptionsChanging';\n\n\t/**\n\t * Event type for when the editor input has been changed in the currently active editor. This event is being sent after\n\t * the input has been set and displayed by the editor.\n\t *\n\t * Note: This event will also be emitted when multiple editors are open and the user sets focus from the active editor\n\t * to another one. This allows to detect a focus change of the active editor.\n\t */\n\tstatic EDITOR_INPUT_CHANGED = 'editorInputChanged';\n\n\t/**\n\t * Event type for when the editor input state changed.\n\t */\n\tstatic EDITOR_INPUT_STATE_CHANGED = 'editorInputStateChanged';\n\n\t/**\n\t * Event type for when the editor input failed to be set to the editor.\n\t */\n\tstatic EDITOR_SET_INPUT_ERROR = 'editorSetInputError';\n\n\t/**\n\t * An event type that fires when a text editor changes its selection.\n\t */\n\tstatic TEXT_EDITOR_SELECTION_CHANGED = 'textEditorSelectionChanged';\n\n\t/**\n\t * An event type that fires when a text editor mode changes.\n\t */\n\tstatic TEXT_EDITOR_MODE_CHANGED = 'textEditorModeChanged';\n\n\t/**\n\t * An event type that fires when a text editor content changes.\n\t */\n\tstatic TEXT_EDITOR_CONTENT_CHANGED = 'textEditorContentChanged';\n\n\t/**\n\t * An event type that fires when a text editor's configuration changes.\n\t */\n\tstatic TEXT_EDITOR_CONFIGURATION_CHANGED = 'textEditorOptionsChanged';\n\n\t/**\n\t * Event type for when a viewlet is about to open.\n\t */\n\tstatic VIEWLET_OPENING = 'viewletOpening';\n\n\t/**\n\t * Event type for when a viewlet is opened.\n\t */\n\tstatic VIEWLET_OPENED = 'viewletOpened';\n\n\t/**\n\t * Event type for when a viewlet is closed.\n\t */\n\tstatic VIEWLET_CLOSED = 'viewletClosed';\n\n\t/**\n\t * Event type for when the workbench has been fully created.\n\t */\n\tstatic WORKBENCH_CREATED = 'workbenchCreated';\n\n\t/**\n\t * Event type for when the workbench is about to being disposed.\n\t */\n\tstatic WORKBENCH_DISPOSING = 'workbenchDisposing';\n\n\t/**\n\t * Event type for when the workbench is fully disposed.\n\t */\n\tstatic WORKBENCH_DISPOSED = 'workbenchDisposed';\n\n\t/**\n\t * Event type for when the workbench options change. Listeners should refresh their\n\t * assumption on workbench options after this event is emitted.\n\t */\n\tstatic WORKBENCH_OPTIONS_CHANGED = CommonEvents.EventType.WORKBENCH_OPTIONS_CHANGED;\n\n\t/**\n\t * Event type for when an untitled file is becoming dirty.\n\t */\n\tstatic UNTITLED_FILE_DIRTY = 'untitledFileDirty';\n\n\t/**\n\t * Event type for when an untitled file is deleted.\n\t */\n\tstatic UNTITLED_FILE_DELETED = 'untitledFileDeleted';\n\n\t/**\n\t * Event type for when a resources encoding changes.\n\t */\n\tstatic RESOURCE_ENCODING_CHANGED = 'resourceEncodingChanged';\n}\n\n/**\n * Editor events are being emitted when the editor input changes, shows, is being saved or when the editor content changes.\n */\nexport class EditorEvent extends Event {\n\tpublic editor: BaseEditor;\n\tpublic editorId: string;\n\tpublic editorInput: EditorInput;\n\tpublic editorOptions: EditorOptions;\n\tpublic position: Position;\n\n\tprivate prevented: boolean;\n\n\tconstructor(editor: BaseEditor, editorId: string, editorInput: EditorInput, editorOptions: EditorOptions, position: Position, originalEvent?: any) {\n\t\tsuper(originalEvent);\n\n\t\tthis.editor = editor;\n\t\tthis.editorId = editorId;\n\t\tthis.editorInput = editorInput;\n\t\tthis.editorOptions = editorOptions;\n\t\tthis.position = position;\n\t}\n\n\tpublic prevent(): void {\n\t\tthis.prevented = true;\n\t}\n\n\tpublic isPrevented(): boolean {\n\t\treturn this.prevented;\n\t}\n}\n\n/**\n * Editor input events are being emitted when the editor input state changes.\n */\nexport class EditorInputEvent extends Event {\n\tpublic editorInput: EditorInput;\n\n\tconstructor(editorInput: EditorInput, originalEvent?: any) {\n\t\tsuper(originalEvent);\n\n\t\tthis.editorInput = editorInput;\n\t}\n}\n\n/**\n * A subclass of EditorEvent for text editor selection changes.\n */\nexport class TextEditorSelectionEvent extends EditorEvent {\n\tpublic selection: IEditorSelection;\n\n\tconstructor(selection: IEditorSelection, editor: BaseEditor, editorId: string, editorInput: EditorInput, editorOptions: EditorOptions, position: Position, originalEvent?: any) {\n\t\tsuper(editor, editorId, editorInput, editorOptions, position, originalEvent);\n\n\t\tthis.selection = selection;\n\t}\n}\n\n/**\n * Command events are emitted when an action is being executed through a command handler (Keybinding).\n */\nexport class CommandEvent extends Event {\n\tpublic actionId: string;\n\n\tconstructor(actionId: string, originalEvent?: any) {\n\t\tsuper(originalEvent);\n\n\t\tthis.actionId = actionId;\n\t}\n}\n\n/**\n * Viewlet events are emitted when a viewlet opens or closes in the sidebar.\n */\nexport class ViewletEvent extends Event {\n\tpublic viewletId: string;\n\n\tconstructor(viewletId: string, originalEvent?: any) {\n\t\tsuper(originalEvent);\n\n\t\tthis.viewletId = viewletId;\n\t}\n}\n\n/**\n * Option change events are send when the options in the running instance change.\n */\nexport import OptionsChangeEvent = CommonEvents.OptionsChangeEvent;\n\nexport class ResourceEvent extends Event {\n\tpublic resource: URI;\n\n\tconstructor(resource: URI, originalEvent?: any) {\n\t\tsuper(originalEvent);\n\n\t\tthis.resource = resource;\n\t}\n}\n\nexport class UntitledEditorEvent extends ResourceEvent {\n\t// No new methods\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {EditorModel, IEncodingSupport} from 'vs/workbench/common/editor';\nimport {StringEditorModel} from 'vs/workbench/browser/parts/editor/stringEditorModel';\nimport URI from 'vs/base/common/uri';\nimport {IModelContentChangedEvent, EventType, EndOfLinePreference} from 'vs/editor/common/editorCommon';\nimport {EventType as WorkbenchEventType, UntitledEditorEvent, ResourceEvent} from 'vs/workbench/browser/events';\nimport {IFilesConfiguration} from 'vs/platform/files/common/files';\nimport {IConfigurationService, IConfigurationServiceEvent, ConfigurationServiceEventTypes} from 'vs/platform/configuration/common/configuration';\nimport {IEventService} from 'vs/platform/event/common/event';\nimport {IModeService} from 'vs/editor/common/services/modeService';\nimport {IModelService} from 'vs/editor/common/services/modelService';\n\nexport class UntitledEditorModel extends StringEditorModel implements IEncodingSupport {\n\tprivate textModelChangeListener: () => void;\n\tprivate configurationChangeListenerUnbind: () => void;\n\n\tprivate dirty: boolean;\n\tprivate configuredEncoding: string;\n\tprivate preferredEncoding: string;\n\n\tconstructor(\n\t\tvalue: string,\n\t\tmodeId: string,\n\t\tresource: URI,\n\t\thasAssociatedFilePath: boolean,\n\t\t@IModeService modeService: IModeService,\n\t\t@IModelService modelService: IModelService,\n\t\t@IEventService private eventService: IEventService,\n\t\t@IConfigurationService private configurationService: IConfigurationService\n\t) {\n\t\tsuper(value, modeId, resource, modeService, modelService);\n\n\t\tthis.dirty = hasAssociatedFilePath; // untitled associated to file path are dirty right away\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\n\t\t// Config Changes\n\t\tthis.configurationChangeListenerUnbind = this.configurationService.addListener(ConfigurationServiceEventTypes.UPDATED, (e: IConfigurationServiceEvent) => this.onConfigurationChange(e.config));\n\t}\n\n\tprivate onConfigurationChange(configuration: IFilesConfiguration): void {\n\t\tthis.configuredEncoding = configuration && configuration.files && configuration.files.encoding;\n\t}\n\n\tpublic getValue(): string {\n\t\tif (this.textEditorModel) {\n\t\t\treturn this.textEditorModel.getValue(EndOfLinePreference.TextDefined, true /* Preserve BOM */);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic getModeId(): string {\n\t\tif (this.textEditorModel) {\n\t\t\treturn this.textEditorModel.getModeId();\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic getEncoding(): string {\n\t\treturn this.preferredEncoding || this.configuredEncoding;\n\t}\n\n\tpublic setEncoding(encoding: string): void {\n\t\tlet oldEncoding = this.getEncoding();\n\t\tthis.preferredEncoding = encoding;\n\n\t\t// Emit if it changed\n\t\tif (oldEncoding !== this.preferredEncoding) {\n\t\t\tthis.eventService.emit(WorkbenchEventType.RESOURCE_ENCODING_CHANGED, new ResourceEvent(this.resource));\n\t\t}\n\t}\n\n\tpublic isDirty(): boolean {\n\t\treturn this.dirty;\n\t}\n\n\tpublic load(): TPromise<EditorModel> {\n\t\treturn super.load().then((model) => {\n\t\t\treturn this.configurationService.loadConfiguration().then((configuration: IFilesConfiguration) => {\n\n\t\t\t\t// Encoding\n\t\t\t\tthis.configuredEncoding = configuration && configuration.files && configuration.files.encoding;\n\n\t\t\t\t// Listen to content changes\n\t\t\t\tthis.textModelChangeListener = this.textEditorModel.addListener(EventType.ModelContentChanged, (e: IModelContentChangedEvent) => this.onModelContentChanged(e));\n\n\t\t\t\t// Emit initial dirty event if we are\n\t\t\t\tif (this.dirty) {\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tthis.eventService.emit(WorkbenchEventType.UNTITLED_FILE_DIRTY, new UntitledEditorEvent(this.resource));\n\t\t\t\t\t}, 0 /* prevent race condition between creating model and emitting dirty event */);\n\t\t\t\t}\n\n\t\t\t\treturn model;\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate onModelContentChanged(e: IModelContentChangedEvent): void {\n\t\tif (!this.dirty) {\n\t\t\tthis.dirty = true;\n\t\t\tthis.eventService.emit(WorkbenchEventType.UNTITLED_FILE_DIRTY, new UntitledEditorEvent(this.resource));\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tsuper.dispose();\n\n\t\tif (this.textModelChangeListener) {\n\t\t\tthis.textModelChangeListener();\n\t\t\tthis.textModelChangeListener = null;\n\t\t}\n\n\t\tif (this.configurationChangeListenerUnbind) {\n\t\t\tthis.configurationChangeListenerUnbind();\n\t\t\tthis.configurationChangeListenerUnbind = null;\n\t\t}\n\n\t\tthis.eventService.emit(WorkbenchEventType.UNTITLED_FILE_DELETED, new UntitledEditorEvent(this.resource));\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport URI from 'vs/base/common/uri';\nimport {IEditorModesRegistry, Extensions} from 'vs/editor/common/modes/modesRegistry';\nimport {isUnspecific, guessMimeTypes, MIME_TEXT, suggestFilename} from 'vs/base/common/mime';\nimport labels = require('vs/base/common/labels');\nimport paths = require('vs/base/common/paths');\nimport {EditorModel, EncodingMode, IInputStatus, EditorInput, IResourceEditorInput, IEncodingSupport} from 'vs/workbench/common/editor';\nimport {Registry} from 'vs/platform/platform';\nimport {UntitledEditorModel} from 'vs/workbench/browser/parts/editor/untitledEditorModel';\nimport {IInstantiationService} from 'vs/platform/instantiation/common/instantiation';\nimport {ILifecycleService} from 'vs/platform/lifecycle/common/lifecycle';\nimport {IWorkspaceContextService} from 'vs/platform/workspace/common/workspace';\n\n/**\n * An editor input to be used for untitled text buffers.\n */\nexport class UntitledEditorInput extends EditorInput implements IResourceEditorInput, IEncodingSupport {\n\n\tpublic static ID: string = 'workbench.editors.untitledEditorInput';\n\tpublic static SCHEMA: string = 'untitled';\n\n\tprivate resource: URI;\n\tprivate hasAssociatedFilePath: boolean;\n\tprivate modeId: string;\n\tprivate cachedModel: UntitledEditorModel;\n\n\tconstructor(\n\t\tresource: URI,\n\t\thasAssociatedFilePath: boolean,\n\t\tmodeId: string,\n\t\t@IInstantiationService private instantiationService: IInstantiationService,\n\t\t@ILifecycleService private lifecycleService: ILifecycleService,\n\t\t@IWorkspaceContextService private contextService: IWorkspaceContextService\n\t) {\n\t\tsuper();\n\n\t\tthis.resource = resource;\n\t\tthis.hasAssociatedFilePath = hasAssociatedFilePath;\n\t\tthis.modeId = modeId;\n\t}\n\n\tpublic getId(): string {\n\t\treturn UntitledEditorInput.ID;\n\t}\n\n\tpublic getResource(): URI {\n\t\treturn this.resource;\n\t}\n\n\tpublic getName(): string {\n\t\treturn this.hasAssociatedFilePath ? paths.basename(this.resource.fsPath) : this.resource.fsPath;\n\t}\n\n\tpublic getDescription(): string {\n\t\treturn this.hasAssociatedFilePath ? labels.getPathLabel(paths.dirname(this.resource.fsPath), this.contextService) : null;\n\t}\n\n\tpublic isDirty(): boolean {\n\t\treturn this.cachedModel && this.cachedModel.isDirty();\n\t}\n\n\tpublic getStatus(): IInputStatus {\n\t\tlet isDirty = this.isDirty();\n\t\tif (isDirty) {\n\t\t\treturn { state: 'dirty', decoration: '\\u25cf' };\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic suggestFileName(): string {\n\t\tif (!this.hasAssociatedFilePath) {\n\t\t\tlet mime = this.getMime();\n\t\t\tif (mime && mime !== MIME_TEXT /* do not suggest when the mime type is simple plain text */) {\n\t\t\t\treturn suggestFilename(mime, this.getName());\n\t\t\t}\n\t\t}\n\n\t\treturn this.getName();\n\t}\n\n\tpublic getMime(): string {\n\t\tif (this.cachedModel) {\n\t\t\tlet modesRegistry = <IEditorModesRegistry>Registry.as(Extensions.EditorModes);\n\n\t\t\treturn modesRegistry.getMimeForMode(this.cachedModel.getModeId());\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic getEncoding(): string {\n\t\tif (this.cachedModel) {\n\t\t\treturn this.cachedModel.getEncoding();\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic setEncoding(encoding: string, mode: EncodingMode /* ignored, we only have Encode */): void {\n\t\tif (this.cachedModel) {\n\t\t\tthis.cachedModel.setEncoding(encoding);\n\t\t}\n\t}\n\n\tpublic resolve(refresh?: boolean): TPromise<EditorModel> {\n\n\t\t// Use Cached Model\n\t\tif (this.cachedModel) {\n\t\t\treturn TPromise.as(this.cachedModel);\n\t\t}\n\n\t\t// Otherwise Create Model and load\n\t\tlet model = this.createModel();\n\t\treturn model.load().then((resolvedModel: UntitledEditorModel) => {\n\t\t\tthis.cachedModel = resolvedModel;\n\n\t\t\treturn this.cachedModel;\n\t\t});\n\t}\n\n\tprivate createModel(): UntitledEditorModel {\n\t\tlet content = '';\n\t\tlet mime = this.modeId;\n\t\tif (!mime && this.hasAssociatedFilePath) {\n\t\t\tlet mimeFromPath = guessMimeTypes(this.resource.fsPath)[0];\n\t\t\tif (!isUnspecific(mimeFromPath)) {\n\t\t\t\tmime = mimeFromPath; // take most specific mime type if file path is associated and mime is specific\n\t\t\t}\n\t\t}\n\t\treturn this.instantiationService.createInstance(UntitledEditorModel, content, mime || MIME_TEXT,\n\t\t\tthis.resource, this.hasAssociatedFilePath);\n\t}\n\n\tpublic matches(otherInput: any): boolean {\n\t\tif (super.matches(otherInput) === true) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (otherInput instanceof UntitledEditorInput) {\n\t\t\tlet otherUntitledEditorInput = <UntitledEditorInput>otherInput;\n\n\t\t\t// Otherwise compare by properties\n\t\t\treturn otherUntitledEditorInput.resource.toString() === this.resource.toString();\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic dispose(): void {\n\t\tsuper.dispose();\n\n\t\tif (this.cachedModel) {\n\t\t\tthis.cachedModel.dispose();\n\t\t\tthis.cachedModel = null;\n\t\t}\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport pfs = require('vs/base/node/pfs');\nimport {IPluginDescription} from 'vs/platform/plugins/common/plugins';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {groupBy, values} from 'vs/base/common/collections';\nimport paths = require('vs/base/common/paths');\nimport json = require('vs/base/common/json');\nimport {IPluginsMessageCollector} from 'vs/platform/plugins/common/pluginsRegistry';\nimport {isValidPluginDescription} from 'vs/platform/plugins/node/pluginVersionValidator';\nimport * as semver from 'semver';\n\nconst MANIFEST_FILE = 'package.json';\n\nexport class PluginScanner {\n\n\t/**\n\t * Scan the plugin defined in `absoluteFolderPath`\n\t */\n\tpublic static scanPlugin(\n\t\tversion: string,\n\t\tcollector: IPluginsMessageCollector,\n\t\tabsoluteFolderPath:string,\n\t\tisBuiltin:boolean\n\t) : TPromise<IPluginDescription>\n\t{\n\t\tabsoluteFolderPath = paths.normalize(absoluteFolderPath);\n\t\tlet builder = collector.scopeTo(absoluteFolderPath);\n\t\tlet absoluteManifestPath = paths.join(absoluteFolderPath, MANIFEST_FILE);\n\n\t\treturn pfs.readFile(absoluteManifestPath).then((manifestContents) => {\n\t\t\tlet errors: string[] = [];\n\t\t\tlet pluginDescFromFile: IPluginDescription = json.parse(manifestContents.toString(), errors);\n\t\t\tif (errors.length > 0) {\n\t\t\t\terrors.forEach((error) => {\n\t\t\t\t\tbuilder.error('Failed to parse ' + absoluteManifestPath + ': ' + error);\n\t\t\t\t});\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn pluginDescFromFile;\n\t\t}).then((pluginDescFromFile) => {\n\t\t\tif (pluginDescFromFile === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tpluginDescFromFile.isBuiltin = isBuiltin;\n\n\t\t\tlet notices: string[] = [];\n\t\t\tif (!isValidPluginDescription(version, absoluteFolderPath, pluginDescFromFile, notices)) {\n\t\t\t\tnotices.forEach((error) => {\n\t\t\t\t\tbuilder.error(error);\n\t\t\t\t});\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// in this case the notices are warnings\n\t\t\tnotices.forEach((error) => {\n\t\t\t\tbuilder.warn(error);\n\t\t\t});\n\n\t\t\t// id := `publisher.name`\n\t\t\tpluginDescFromFile.id = `${ pluginDescFromFile.publisher }.${ pluginDescFromFile.name }`;\n\n\t\t\t// main := absolutePath(`main`)\n\t\t\tif (pluginDescFromFile.main) {\n\t\t\t\tpluginDescFromFile.main = paths.normalize(paths.join(absoluteFolderPath, pluginDescFromFile.main));\n\t\t\t}\n\n\t\t\tpluginDescFromFile.extensionFolderPath = absoluteFolderPath;\n\n\t\t\treturn pluginDescFromFile;\n\t\t}, (err) => {\n\t\t\tbuilder.error('Cannot read file ' + absoluteManifestPath + ': ' + err.message);\n\t\t\treturn null;\n\t\t});\n\t}\n\n\t/**\n\t * Scan a list of extensions defined in `absoluteFolderPath`\n\t */\n\tpublic static scanPlugins(\n\t\tversion: string,\n\t\tcollector: IPluginsMessageCollector,\n\t\tabsoluteFolderPath:string,\n\t\tisBuiltin:boolean\n\t) : TPromise<IPluginDescription[]>\n\t{\n\t\treturn pfs.readDirsInDir(absoluteFolderPath)\n\t\t\t.then(folders => TPromise.join(folders.map(f => this.scanPlugin(version, collector, paths.join(absoluteFolderPath, f), isBuiltin))))\n\t\t\t.then(plugins => plugins.filter(item => item !== null))\n\t\t\t.then(plugins => {\n\t\t\t\tconst pluginsById = values(groupBy(plugins, p => p.id));\n\t\t\t\treturn pluginsById.map(p => p.sort((a, b) => semver.rcompare(a.version, b.version))[0]);\n\t\t\t})\n\t\t\t.then(null, err => {\n\t\t\t\tcollector.error(absoluteFolderPath, err);\n\t\t\t\treturn [];\n\t\t\t});\n\t}\n\n\t/**\n\t * Combination of scanPlugin and scanPlugins: If a plugin manifest is found at root, we load just this plugin, otherwise we assume\n\t * the folder contains multiple extensions.\n\t */\n\tpublic static scanOneOrMultiplePlugins(\n\t\tversion: string,\n\t\tcollector: IPluginsMessageCollector,\n\t\tabsoluteFolderPath:string,\n\t\tisBuiltin:boolean\n\t) : TPromise<IPluginDescription[]>\n\t{\n\t\treturn pfs.fileExists(paths.join(absoluteFolderPath, MANIFEST_FILE)).then((exists) => {\n\t\t\tif (exists) {\n\t\t\t\treturn this.scanPlugin(version, collector, absoluteFolderPath, isBuiltin).then((pluginDescription) => {\n\t\t\t\t\tif (pluginDescription === null) {\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t}\n\t\t\t\t\treturn [pluginDescription];\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn this.scanPlugins(version, collector, absoluteFolderPath, isBuiltin);\n\t\t}, (err) => {\n\t\t\tcollector.error(absoluteFolderPath, err);\n\t\t\treturn [];\n\t\t});\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport { Url, parse as parseUrl } from 'url';\nimport HttpProxyAgent = require('http-proxy-agent');\nimport HttpsProxyAgent = require('https-proxy-agent');\n\nfunction getAgent(rawRequestURL: string, proxyURL: string, strictSSL: boolean = true): any {\n\tlet requestURL = parseUrl(rawRequestURL);\n\tlet proxyEndpoint = parseUrl(proxyURL);\n\n\tif (!/^https?:$/.test(proxyEndpoint.protocol)) {\n\t\treturn null;\n\t}\n\n\tif (requestURL.protocol === 'http:') {\n\t\treturn new HttpProxyAgent(proxyURL);\n\t}\n\n\treturn new HttpsProxyAgent({\n\t\thost: proxyEndpoint.host,\n\t\tport: Number(proxyEndpoint.port),\n\t\trejectUnauthorized: strictSSL\n\t});\n}\n\nfunction getSystemProxyURI(requestURL: Url): string {\n\tif (requestURL.protocol === 'http:') {\n\t\treturn process.env.HTTP_PROXY || process.env.http_proxy || null;\n\t} else if (requestURL.protocol === 'https:') {\n\t\treturn process.env.HTTPS_PROXY || process.env.https_proxy || process.env.HTTP_PROXY || process.env.http_proxy || null;\n\t}\n\n\treturn null;\n}\n\nfunction getSystemProxyAgent(rawRequestURL: string): any {\n\tlet requestURL = parseUrl(rawRequestURL);\n\tlet proxyURL = getSystemProxyURI(requestURL);\n\n\tif (!proxyURL) {\n\t\treturn null;\n\t}\n\n\treturn getAgent(rawRequestURL, proxyURL);\n}\n\nexport interface IOptions {\n\tproxyUrl?: string;\n\tstrictSSL?: boolean;\n}\n\nexport function getProxyAgent(rawRequestURL: string, options: IOptions = {}): any {\n\tif (!options.proxyUrl) {\n\t\treturn getSystemProxyAgent(rawRequestURL);\n\t}\n\n\treturn getAgent(rawRequestURL, options.proxyUrl, options.strictSSL);\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n'use strict';\n\nimport fs = require('fs');\nimport path = require('path');\n\nimport json = require('vs/base/common/json');\nimport objects = require('vs/base/common/objects');\nimport {EventProvider} from 'vs/base/common/eventProvider';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {EventSource} from 'vs/base/common/eventSource';\nimport {IWorkspaceContextService} from 'vs/workbench/services/workspace/common/contextService';\n\nexport interface ISettings {\n\tsettings: any;\n\tsettingsParseErrors?: string[];\n\tkeybindings: any\n}\n\nexport class UserSettings {\n\n\tprivate static CHANGE_BUFFER_DELAY = 300;\n\n\tpublic globalSettings: ISettings;\n\n\tprivate timeoutHandle: number;\n\tprivate watcher: fs.FSWatcher;\n\tprivate appSettingsPath: string;\n\tprivate appKeybindingsPath: string;\n\n\tprivate _onChange: EventSource<(settings: ISettings) => void>;\n\n\tconstructor(appSettingsPath: string, appKeybindingsPath: string) {\n\t\tthis.appSettingsPath = appSettingsPath;\n\t\tthis.appKeybindingsPath = appKeybindingsPath;\n\t\tthis._onChange = new EventSource<(settings: ISettings) => void>();\n\n\t\tthis.registerWatchers();\n\t}\n\n\tpublic static getValue(contextService: IWorkspaceContextService, key: string, fallback?: any): TPromise<any> {\n\t\treturn new TPromise((c, e) => {\n\t\t\tconst appSettingsPath = contextService.getConfiguration().env.appSettingsPath;\n\n\t\t\tfs.readFile(appSettingsPath, (error /* ignore */, fileContents) => {\n\t\t\t\tlet root = Object.create(null);\n\t\t\t\tlet content = fileContents ? fileContents.toString() : '{}';\n\n\t\t\t\tlet contents = Object.create(null);\n\t\t\t\ttry {\n\t\t\t\t\tcontents = json.parse(content);\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// ignore parse problem\n\t\t\t\t}\n\n\t\t\t\tfor (let key in contents) {\n\t\t\t\t\tUserSettings.setNode(root, key, contents[key]);\n\t\t\t\t}\n\n\t\t\t\treturn c(UserSettings.doGetValue(root, key, fallback));\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic get onChange(): EventProvider<(settings: ISettings) => void> {\n\t\treturn this._onChange.value;\n\t}\n\n\tpublic getValue(key: string, fallback?: any): any {\n\t\treturn UserSettings.doGetValue(this.globalSettings.settings, key, fallback);\n\t}\n\n\tprivate static doGetValue(globalSettings: any, key: string, fallback?: any): any {\n\t\tif (!key) {\n\t\t\treturn fallback;\n\t\t}\n\n\t\tlet value = globalSettings;\n\n\t\tlet parts = key.split('\\.');\n\t\twhile (parts.length && value) {\n\t\t\tlet part = parts.shift();\n\t\t\tvalue = value[part];\n\t\t}\n\n\t\treturn typeof value !== 'undefined' ? value : fallback;\n\t}\n\n\tprivate registerWatchers(): void {\n\t\tthis.watcher = fs.watch(path.dirname(this.appSettingsPath));\n\t\tthis.watcher.on('change', (eventType: string, fileName: string) => this.onSettingsFileChange(eventType, fileName));\n\t}\n\n\tprivate onSettingsFileChange(eventType: string, fileName: string): void {\n\n\t\t// we can get multiple change events for one change, so we buffer through a timeout\n\t\tif (this.timeoutHandle) {\n\t\t\tglobal.clearTimeout(this.timeoutHandle);\n\t\t\tdelete this.timeoutHandle;\n\t\t}\n\n\t\tthis.timeoutHandle = global.setTimeout(() => {\n\n\t\t\t// Reload\n\t\t\tlet didChange = this.loadSync();\n\n\t\t\t// Emit event\n\t\t\tif (didChange) {\n\t\t\t\tthis._onChange.fire(this.globalSettings);\n\t\t\t}\n\n\t\t}, UserSettings.CHANGE_BUFFER_DELAY);\n\t}\n\n\tpublic loadSync(): boolean {\n\t\tlet loadedSettings = this.doLoadSync();\n\t\tif (!objects.equals(loadedSettings, this.globalSettings)) {\n\n\t\t\t// Keep in class\n\t\t\tthis.globalSettings = loadedSettings;\n\n\t\t\treturn true; // changed value\n\t\t}\n\n\t\treturn false; // no changed value\n\t}\n\n\tprivate doLoadSync(): ISettings {\n\t\tlet settings = this.doLoadSettingsSync();\n\n\t\treturn {\n\t\t\tsettings: settings.contents,\n\t\t\tsettingsParseErrors: settings.parseErrors,\n\t\t\tkeybindings: this.doLoadKeybindingsSync()\n\t\t};\n\t}\n\n\tprivate doLoadSettingsSync(): { contents: any; parseErrors?: string[]; } {\n\t\tlet root = Object.create(null);\n\t\tlet content = '{}';\n\t\ttry {\n\t\t\tcontent = fs.readFileSync(this.appSettingsPath).toString();\n\t\t} catch (error) {\n\t\t\t// ignore\n\t\t}\n\n\t\tlet contents = Object.create(null);\n\t\ttry {\n\t\t\tcontents = json.parse(content);\n\t\t} catch (error) {\n\t\t\t// parse problem\n\t\t\treturn {\n\t\t\t\tcontents: Object.create(null),\n\t\t\t\tparseErrors: [this.appSettingsPath]\n\t\t\t};\n\t\t}\n\n\t\tfor (let key in contents) {\n\t\t\tUserSettings.setNode(root, key, contents[key]);\n\t\t}\n\n\t\treturn {\n\t\t\tcontents: root\n\t\t};\n\t}\n\n\tprivate static setNode(root: any, key: string, value: any): any {\n\t\tlet segments = key.split('.');\n\t\tlet last = segments.pop();\n\n\t\tlet curr = root;\n\t\tsegments.forEach((s) => {\n\t\t\tlet obj = curr[s];\n\t\t\tswitch (typeof obj) {\n\t\t\t\tcase 'undefined':\n\t\t\t\t\tobj = curr[s] = {};\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'object':\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log('Conflicting user settings: ' + key + ' at ' + s + ' with ' + JSON.stringify(obj));\n\t\t\t}\n\t\t\tcurr = obj;\n\t\t});\n\t\tcurr[last] = value;\n\t}\n\n\tprivate doLoadKeybindingsSync(): any {\n\t\ttry {\n\t\t\treturn json.parse(fs.readFileSync(this.appKeybindingsPath).toString());\n\t\t} catch (error) {\n\t\t\t// Ignore loading and parsing errors\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.watcher) {\n\t\t\tthis.watcher.close();\n\t\t\tthis.watcher = null;\n\t\t}\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport { Promise, TPromise } from 'vs/base/common/winjs.base';\nimport Event from 'vs/base/common/event';\nimport { createDecorator, ServiceIdentifier } from 'vs/platform/instantiation/common/instantiation';\n\nexport interface IExtensionManifest {\n\tname: string;\n\tpublisher: string;\n\tversion: string;\n\tdisplayName?: string;\n\tdescription?: string;\n}\n\nexport interface IGalleryInformation {\n\tgalleryApiUrl: string;\n\tid: string;\n\tdownloadUrl: string;\n\tpublisherId: string;\n\tpublisherDisplayName: string;\n\tdate: string;\n}\n\nexport interface IExtension extends IExtensionManifest {\n\tgalleryInformation?: IGalleryInformation;\n\tpath?: string;\n}\n\nexport var IExtensionsService = createDecorator<IExtensionsService>('extensionsService');\nexport var IGalleryService = createDecorator<IGalleryService>('galleryService');\n\nexport interface IGalleryService {\n\tserviceId: ServiceIdentifier<any>;\n\tisEnabled(): boolean;\n\tquery(): TPromise<IExtension[]>;\n}\n\nexport interface IExtensionsService {\n\tserviceId: ServiceIdentifier<any>;\n\tonInstallExtension: Event<IExtensionManifest>;\n\tonDidInstallExtension: Event<IExtension>;\n\tonUninstallExtension: Event<IExtension>;\n\tonDidUninstallExtension: Event<IExtension>;\n\n\tinstall(extension: IExtension): TPromise<IExtension>;\n\tinstall(zipPath: string): TPromise<IExtension>;\n\tuninstall(extension: IExtension): TPromise<void>;\n\tgetInstalled(includeDuplicateVersions?: boolean): TPromise<IExtension[]>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert = require('vs/base/common/assert');\nimport types = require('vs/base/common/types');\nimport URI from 'vs/base/common/uri';\nimport {isLinux} from 'vs/base/common/platform';\nimport paths = require('vs/base/common/paths');\nimport {guessMimeTypes} from 'vs/base/common/mime';\nimport {IFileStat} from 'vs/platform/files/common/files';\n\n'use strict';\n\nexport enum StatType {\n\tFILE,\n\tFOLDER,\n\tANY\n}\n\nexport class FileStat implements IFileStat {\n\tpublic resource: URI;\n\tpublic name: string;\n\tpublic mtime: number;\n\tpublic etag: string;\n\tpublic mime: string;\n\tpublic isDirectory: boolean;\n\tpublic hasChildren: boolean;\n\tpublic children: FileStat[];\n\tpublic parent: FileStat;\n\n\tpublic isDirectoryResolved: boolean;\n\n\tconstructor(resource: URI, isDirectory?: boolean, hasChildren?: boolean, name: string = paths.basename(resource.fsPath), mtime?: number, etag?: string) {\n\t\tthis.resource = resource;\n\t\tthis.name = name;\n\t\tthis.isDirectory = !!isDirectory;\n\t\tthis.hasChildren = isDirectory && hasChildren;\n\t\tthis.mime = !isDirectory ? guessMimeTypes(this.resource.fsPath).join(', ') : void (0);\n\t\tthis.etag = etag;\n\t\tthis.mtime = mtime;\n\n\t\t// Prepare child stat array\n\t\tif (this.isDirectory) {\n\t\t\tthis.children = [];\n\t\t}\n\n\t\tthis.isDirectoryResolved = false;\n\t}\n\n\tpublic getId(): string {\n\t\treturn this.resource.toString();\n\t}\n\n\tpublic static create(raw: IFileStat, resolveTo?: URI[]): FileStat {\n\t\tlet stat = new FileStat(raw.resource, raw.isDirectory, raw.hasChildren, raw.name, raw.mtime, raw.etag);\n\n\t\t// Recursively add children if present\n\t\tif (stat.isDirectory) {\n\n\t\t\t// isDirectoryResolved is a very important indicator in the stat model that tells if the folder was fully resolved\n\t\t\t// the folder is fully resolved if either it has a list of children or the client requested this by using the resolveTo\n\t\t\t// array of resource path to resolve.\n\t\t\tstat.isDirectoryResolved = !!raw.children || (!!resolveTo && resolveTo.some((r) => {\n\t\t\t\treturn paths.isEqualOrParent(r.fsPath, stat.resource.fsPath);\n\t\t\t}));\n\n\t\t\t// Recurse into children\n\t\t\tif (raw.children) {\n\t\t\t\tfor (let i = 0, len = raw.children.length; i < len; i++) {\n\t\t\t\t\tlet child = FileStat.create(raw.children[i], resolveTo);\n\t\t\t\t\tchild.parent = stat;\n\t\t\t\t\tstat.children.push(child);\n\t\t\t\t\tstat.hasChildren = stat.children.length > 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn stat;\n\t}\n\n\t/**\n\t * Merges the stat which was resolved from the disk with the local stat by copying over properties\n\t * and children. The merge will only consider resolved stat elements to avoid overwriting data which\n\t * exists locally.\n\t */\n\tpublic static mergeLocalWithDisk(disk: FileStat, local: FileStat): void {\n\t\tassert.ok(disk.resource.toString() === local.resource.toString(), 'Merging only supported for stats with the same resource');\n\n\t\t// Stop merging when a folder is not resolved to avoid loosing local data\n\t\tlet mergingDirectories = disk.isDirectory || local.isDirectory;\n\t\tif (mergingDirectories && local.isDirectoryResolved && !disk.isDirectoryResolved) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Properties\n\t\tlocal.resource = disk.resource;\n\t\tlocal.name = disk.name;\n\t\tlocal.isDirectory = disk.isDirectory;\n\t\tlocal.hasChildren = disk.isDirectory && disk.hasChildren;\n\t\tlocal.mtime = disk.mtime;\n\t\tlocal.mime = disk.mime;\n\t\tlocal.isDirectoryResolved = disk.isDirectoryResolved;\n\n\t\t// Merge Children if resolved\n\t\tif (mergingDirectories && disk.isDirectoryResolved) {\n\n\t\t\t// Map resource => stat\n\t\t\tlet oldLocalChildren: { [resource: string]: FileStat; } = Object.create(null);\n\t\t\tlocal.children.forEach((localChild: FileStat) => {\n\t\t\t\toldLocalChildren[localChild.resource.toString()] = localChild;\n\t\t\t});\n\n\t\t\t// Clear current children\n\t\t\tlocal.children = [];\n\n\t\t\t// Merge received children\n\t\t\tdisk.children.forEach((diskChild: FileStat) => {\n\t\t\t\tlet formerLocalChild = oldLocalChildren[diskChild.resource.toString()];\n\n\t\t\t\t// Existing child: merge\n\t\t\t\tif (formerLocalChild) {\n\t\t\t\t\tFileStat.mergeLocalWithDisk(diskChild, formerLocalChild);\n\t\t\t\t\tformerLocalChild.parent = local;\n\t\t\t\t\tlocal.children.push(formerLocalChild);\n\t\t\t\t}\n\n\t\t\t\t// New child: add\n\t\t\t\telse {\n\t\t\t\t\tdiskChild.parent = local;\n\t\t\t\t\tlocal.children.push(diskChild);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Returns a deep copy of this model object.\n\t */\n\tpublic clone(): FileStat {\n\t\tlet stat = new FileStat(URI.parse(this.resource.toString()), this.isDirectory, this.hasChildren, this.name, this.mtime, this.etag);\n\t\tstat.isDirectoryResolved = this.isDirectoryResolved;\n\n\t\tif (this.parent) {\n\t\t\tstat.parent = this.parent;\n\t\t}\n\n\t\tif (this.isDirectory) {\n\t\t\tthis.children.forEach((child: FileStat) => {\n\t\t\t\tstat.addChild(child.clone());\n\t\t\t});\n\t\t}\n\n\t\treturn stat;\n\t}\n\n\t/**\n\t * Adds a child element to this folder.\n\t */\n\tpublic addChild(child: FileStat): void {\n\t\tassert.ok(this.isDirectory, 'Can only add a child to a folder');\n\n\t\t// Overwrite a previous child with the same name\n\t\tthis.removeChild(child);\n\n\t\t// Inherit some parent properties to child\n\t\tchild.parent = this;\n\t\tchild.updateResource(false);\n\n\t\tthis.children.push(child);\n\t\tthis.hasChildren = this.children.length > 0;\n\t}\n\n\t/**\n\t * Returns true if this stat is a directory that contains a child with the given name.\n\t *\n\t * @param ignoreCase if true, will check for the name ignoring case.\n\t * @param type the type of stat to check for.\n\t */\n\tpublic hasChild(name: string, ignoreCase?: boolean, type: StatType = StatType.ANY): boolean {\n\t\tassert.ok(this.isDirectory, 'Can only call hasChild on a directory');\n\t\tassert.ok(types.isString(name), 'Expected parameter of type String');\n\n\t\tfor (let i = 0; i < this.children.length; i++) {\n\t\t\tlet child = this.children[i];\n\t\t\tif ((type === StatType.FILE && child.isDirectory) || (type === StatType.FOLDER && !child.isDirectory)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Check for Identity\n\t\t\tif (child.name === name) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// Also consider comparing without case\n\t\t\tif (ignoreCase && child.name.toLowerCase() === name.toLowerCase()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Removes a child element from this folder.\n\t */\n\tpublic removeChild(child: FileStat): void {\n\t\tassert.ok(this.isDirectory, 'Can only remove a child from a directory');\n\t\tassert.ok(!!this.children, 'Expected children for directory but found none: ' + this.resource.fsPath);\n\n\t\tfor (let i = 0; i < this.children.length; i++) {\n\t\t\tif (this.children[i].resource.toString() === child.resource.toString()) {\n\t\t\t\tthis.children.splice(i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis.hasChildren = this.children.length > 0;\n\t}\n\n\t/**\n\t * Moves this element under a new parent element.\n\t */\n\tpublic move(newParent: FileStat, fnBetweenStates?: (callback: () => void) => void, fnDone?: () => void): void {\n\t\tassert.ok(newParent.isDirectory, 'Can only move an element into a directory');\n\n\t\tif (!fnBetweenStates) {\n\t\t\tfnBetweenStates = (cb: () => void) => { cb(); };\n\t\t}\n\n\t\tthis.parent.removeChild(this);\n\n\t\tfnBetweenStates(() => {\n\t\t\tnewParent.addChild(this);\n\t\t\tthis.updateResource(true);\n\t\t\tif (fnDone) {\n\t\t\t\tfnDone();\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate updateResource(recursive: boolean): void {\n\t\tthis.resource = URI.file(paths.join(this.parent.resource.fsPath, this.name));\n\n\t\tif (recursive) {\n\t\t\tif (this.isDirectory && this.hasChildren && this.children) {\n\t\t\t\tthis.children.forEach((child: FileStat) => {\n\t\t\t\t\tchild.updateResource(true);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Tells this stat that it was renamed. This requires changes to all children of this stat (if any)\n\t * so that the path property can be updated properly.\n\t */\n\tpublic rename(renamedStat: IFileStat): void {\n\n\t\t// Merge a subset of Properties that can change on rename\n\t\tthis.name = renamedStat.name;\n\t\tthis.mime = renamedStat.mime;\n\t\tthis.mtime = renamedStat.mtime;\n\n\t\t// Update Paths including children\n\t\tthis.updateResource(true);\n\t}\n\n\t/**\n\t * Returns a child stat from this stat that matches with the provided path.\n\t * Will return \"null\" in case the child does not exist.\n\t */\n\tpublic find(resource: URI): FileStat {\n\n\t\t// Return if path found\n\t\tif (this.fileResourceEquals(resource, this.resource)) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// Return if not having any children\n\t\tif (!this.hasChildren) {\n\t\t\treturn null;\n\t\t}\n\n\t\tfor (let i = 0; i < this.children.length; i++) {\n\t\t\tlet child = this.children[i];\n\n\t\t\tif (this.fileResourceEquals(resource, child.resource)) {\n\t\t\t\treturn child;\n\t\t\t}\n\n\t\t\tif (child.isDirectory && paths.isEqualOrParent(resource.fsPath, child.resource.fsPath)) {\n\t\t\t\treturn child.find(resource);\n\t\t\t}\n\t\t}\n\n\t\treturn null; //Unable to find\n\t}\n\n\tprivate fileResourceEquals(r1: URI, r2: URI) {\n\t\tconst identityEquals = (r1.toString() === r2.toString());\n\t\tif (isLinux || identityEquals) {\n\t\t\treturn identityEquals;\n\t\t}\n\n\t\treturn r1.toString().toLowerCase() === r2.toString().toLowerCase();\n\t}\n}\n\n/* A helper that can be used to show a placeholder when creating a new stat */\nexport class NewStatPlaceholder extends FileStat {\n\n\tprivate static ID = 0;\n\n\tprivate id: number;\n\n\tconstructor(isDirectory: boolean) {\n\t\tsuper(URI.file(''));\n\n\t\tthis.id = NewStatPlaceholder.ID++;\n\t\tthis.isDirectoryResolved = isDirectory;\n\t}\n\n\tpublic destroy(): void {\n\t\tthis.parent.removeChild(this);\n\n\t\tdelete this.isDirectoryResolved;\n\t\tdelete this.name;\n\t\tdelete this.isDirectory;\n\t\tdelete this.hasChildren;\n\t\tdelete this.mtime;\n\t\tdelete this.mime;\n\t}\n\n\tpublic getId(): string {\n\t\treturn 'new-stat-placeholder:' + this.id + ':' + this.parent.resource.toString();\n\t}\n\n\t/**\n\t * Returns a deep copy of this model object.\n\t */\n\tpublic clone(): NewStatPlaceholder {\n\t\tlet stat = new NewStatPlaceholder(this.isDirectory);\n\t\tstat.parent = this.parent;\n\n\t\treturn stat;\n\t}\n\n\tpublic addChild(child: NewStatPlaceholder): void {\n\t\tthrow new Error('Can\\'t perform operations in NewStatPlaceholder.');\n\t}\n\n\tpublic hasChild(name: string, ignoreCase?: boolean): boolean {\n\t\treturn false;\n\t}\n\n\tpublic removeChild(child: NewStatPlaceholder): void {\n\t\tthrow new Error('Can\\'t perform operations in NewStatPlaceholder.');\n\t}\n\n\tpublic move(newParent: NewStatPlaceholder): void {\n\t\tthrow new Error('Can\\'t perform operations in NewStatPlaceholder.');\n\t}\n\n\tpublic rename(renamedStat: NewStatPlaceholder): void {\n\t\tthrow new Error('Can\\'t perform operations in NewStatPlaceholder.');\n\t}\n\n\tpublic find(resource: URI): NewStatPlaceholder {\n\t\treturn null;\n\t}\n\n\tpublic static addNewStatPlaceholder(parent: FileStat, isDirectory: boolean): NewStatPlaceholder {\n\t\tassert.ok(parent.isDirectory, 'Can only add a child to a folder');\n\n\t\tlet child = new NewStatPlaceholder(isDirectory);\n\n\t\t// Inherit some parent properties to child\n\t\tchild.parent = parent;\n\t\tparent.children.push(child);\n\n\t\tparent.hasChildren = parent.children.length > 0;\n\n\t\treturn child;\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {Event, PropertyChangeEvent} from 'vs/base/common/events';\nimport URI from 'vs/base/common/uri';\nimport {guessMimeTypes} from 'vs/base/common/mime';\nimport {EventProvider} from 'vs/base/common/eventProvider';\nimport {IModel, IEditorOptions} from 'vs/editor/common/editorCommon';\nimport {IDisposable} from 'vs/base/common/lifecycle';\nimport {EncodingMode, EditorInput, IFileEditorInput} from 'vs/workbench/common/editor';\nimport {IFileStat, FileChangesEvent, IFilesConfiguration} from 'vs/platform/files/common/files';\nimport {createDecorator, ServiceIdentifier} from 'vs/platform/instantiation/common/instantiation';\nimport {ISearchService} from 'vs/platform/search/common/search';\nimport {FileStat} from 'vs/workbench/parts/files/browser/views/explorerViewModel';\n\n/**\n * Explorer viewlet id.\n */\nexport const VIEWLET_ID = 'workbench.view.explorer';\n\n/**\n * File editor input id.\n */\nexport const FILE_EDITOR_INPUT_ID = 'workbench.editors.files.fileEditorInput';\n\n/**\n * Text file editor id.\n */\nexport const TEXT_FILE_EDITOR_ID = 'workbench.editors.files.textFileEditor';\n\n/**\n * Binary file editor id.\n */\nexport const BINARY_FILE_EDITOR_ID = 'workbench.editors.files.binaryFileEditor';\n\n/**\n * Marker ID for model entries.\n */\nexport const WORKING_FILES_MODEL_ENTRY_CLASS_ID = 'workbench.workingFiles.model.entry.class';\n\n/**\n * API class to denote file editor inputs. Internal implementation is provided.\n *\n * Note: This class is not intended to be instantiated.\n */\nexport abstract class FileEditorInput extends EditorInput implements IFileEditorInput {\n\n\tpublic abstract setResource(resource: URI): void;\n\n\tpublic abstract getResource(): URI;\n\n\tpublic abstract setMime(mime: string): void;\n\n\tpublic abstract getMime(): string;\n\n\tpublic abstract setEncoding(encoding: string, mode: EncodingMode): void;\n\n\tpublic abstract getEncoding(): string;\n}\n\nexport interface IFilesConfiguration extends IFilesConfiguration {\n\texplorer: {\n\t\tworkingFiles: {\n\t\t\tmaxVisible: number;\n\t\t\tdynamicHeight: boolean;\n\t\t};\n\t};\n\teditor: IEditorOptions;\n}\n\nexport interface IWorkingFileModelChangeEvent {\n\tadded?: IWorkingFileEntry[];\n\tremoved?: IWorkingFileEntry[];\n}\n\nexport interface IWorkingFilesModel {\n\n\tonModelChange: EventProvider<(event: IWorkingFileModelChangeEvent) => void>;\n\n\tonWorkingFileChange: EventProvider<(file: IWorkingFileEntry) => void>;\n\n\tgetEntries(excludeOutOfContext?: boolean): IWorkingFileEntry[];\n\n\tfirst(): IWorkingFileEntry;\n\tlast(): IWorkingFileEntry;\n\tnext(start?: URI): IWorkingFileEntry;\n\tprevious(start?: URI): IWorkingFileEntry;\n\n\tgetOutOfWorkspaceContextEntries(): IWorkingFileEntry[];\n\n\tcount(): number;\n\n\taddEntry(resource: URI): IWorkingFileEntry;\n\taddEntry(stat: IFileStat): IWorkingFileEntry;\n\taddEntry(entry: IWorkingFileEntry): IWorkingFileEntry;\n\taddEntry(arg1: IFileStat | IWorkingFileEntry | URI): IWorkingFileEntry;\n\n\tmoveEntry(oldResource: URI, newResource: URI): void;\n\n\tremoveEntry(resource: URI): IWorkingFileEntry;\n\tremoveEntry(entry: IWorkingFileEntry): IWorkingFileEntry;\n\tremoveEntry(arg1: IWorkingFileEntry | URI): IWorkingFileEntry;\n\n\treorder(source: IWorkingFileEntry, target: IWorkingFileEntry): void;\n\n\thasEntry(resource: URI): boolean;\n\tfindEntry(resource: URI): IWorkingFileEntry;\n\n\tclear(): void;\n}\n\nexport interface IWorkingFileEntry {\n\tresource: URI;\n\tindex: number;\n\tdirty: boolean;\n\tCLASS_ID: string;\n\tisFile: boolean;\n\tisUntitled: boolean;\n\n\tsetIndex(index: number): void;\n\tsetDirty(dirty: boolean): void;\n}\n\nexport interface IFileResource {\n\tresource: URI;\n\tisDirectory: boolean;\n\tmimes: string[];\n}\n\n/**\n * Helper to get a file resource from an object.\n */\nexport function asFileResource(obj: any): IFileResource {\n\tif (obj instanceof FileStat) {\n\t\tlet stat = <FileStat>obj;\n\n\t\treturn {\n\t\t\tresource: stat.resource,\n\t\t\tmimes: stat.mime ? stat.mime.split(', ') : [],\n\t\t\tisDirectory: stat.isDirectory\n\t\t};\n\t}\n\n\tif (obj && (<IWorkingFileEntry>obj).CLASS_ID === WORKING_FILES_MODEL_ENTRY_CLASS_ID) {\n\t\tlet entry = <IWorkingFileEntry>obj;\n\t\tif (entry.isFile) {\n\t\t\treturn {\n\t\t\t\tresource: entry.resource,\n\t\t\t\tmimes: guessMimeTypes(entry.resource.fsPath),\n\t\t\t\tisDirectory: false\n\t\t\t};\n\t\t}\n\t}\n\n\treturn null;\n}\n\n/**\n * List of event types from files.\n */\nexport const EventType = {\n\n\t/**\n\t * Indicates that a file content has changed but not yet saved.\n\t */\n\tFILE_DIRTY: 'files:fileDirty',\n\n\t/**\n\t * Indicates that a file is being saved.\n\t */\n\tFILE_SAVING: 'files:fileSaving',\n\n\t/**\n\t * Indicates that a file save resulted in an error.\n\t */\n\tFILE_SAVE_ERROR: 'files:fileSaveError',\n\n\t/**\n\t * Indicates that a file content has been saved to the disk.\n\t */\n\tFILE_SAVED: 'files:fileSaved',\n\n\t/**\n\t * Indicates that a file content has been reverted to the state\n\t * on disk.\n\t */\n\tFILE_REVERTED: 'files:fileReverted'\n};\n\n/**\n * Local file change events are being emitted when a file is added, removed, moved or its contents got updated. These events\n * are being emitted from within the workbench and are not reflecting the truth on the disk file system. For that, please\n * use FileChangesEvent instead.\n */\nexport class LocalFileChangeEvent extends PropertyChangeEvent {\n\n\tconstructor(before?: IFileStat, after?: IFileStat, originalEvent?: Event) {\n\t\tsuper(null, before, after, originalEvent);\n\t}\n\n\t/**\n\t * Returns the meta information of the file before the event occurred or null if the file is new.\n\t */\n\tpublic getBefore(): IFileStat {\n\t\treturn this.oldValue;\n\t}\n\n\t/**\n\t * Returns the meta information of the file after the event occurred or null if the file got deleted.\n\t */\n\tpublic getAfter(): IFileStat {\n\t\treturn this.newValue;\n\t}\n\n\t/**\n\t * Indicates if the file was added as a new file.\n\t */\n\tpublic gotAdded(): boolean {\n\t\treturn !this.oldValue && !!this.newValue;\n\t}\n\n\t/**\n\t * Indicates if the file was moved to a different path.\n\t */\n\tpublic gotMoved(): boolean {\n\t\treturn !!this.oldValue && !!this.newValue && this.oldValue.resource.toString() !== this.newValue.resource.toString();\n\t}\n\n\t/**\n\t * Indicates if the files metadata was updated.\n\t */\n\tpublic gotUpdated(): boolean {\n\t\treturn !!this.oldValue && !!this.newValue && !this.gotMoved() && this.oldValue !== this.newValue;\n\t}\n\n\t/**\n\t * Indicates if the file was deleted.\n\t */\n\tpublic gotDeleted(): boolean {\n\t\treturn !!this.oldValue && !this.newValue;\n\t}\n}\n\n/**\n * Text file change events are emitted when files are saved or reverted.\n */\nexport class TextFileChangeEvent extends LocalFileChangeEvent {\n\tprivate _model: IModel;\n\tprivate _isAutoSaved: boolean;\n\n\tconstructor(model: IModel, before: IFileStat, after: IFileStat = before, originalEvent?: Event) {\n\t\tsuper(before, after, originalEvent);\n\n\t\tthis._model = model;\n\t}\n\n\tpublic get model(): IModel {\n\t\treturn this._model;\n\t}\n\n\tpublic setAutoSaved(autoSaved: boolean): void {\n\t\tthis._isAutoSaved = autoSaved;\n\t}\n\n\tpublic get isAutoSaved(): boolean {\n\t\treturn this._isAutoSaved;\n\t}\n}\n\nexport const TEXT_FILE_SERVICE_ID = 'textFileService';\n\nexport enum ConfirmResult {\n\tSAVE,\n\tDONT_SAVE,\n\tCANCEL\n}\n\nexport interface ITextFileOperationResult {\n\tresults: IResult[];\n}\n\nexport interface IResult {\n\tsource: URI;\n\ttarget?: URI;\n\tsuccess?: boolean;\n}\n\nexport var ITextFileService = createDecorator<ITextFileService>(TEXT_FILE_SERVICE_ID);\n\nexport interface ITextFileService extends IDisposable {\n\tserviceId: ServiceIdentifier<any>;\n\n\t/**\n\t * A resource is dirty if it has unsaved changes or is an untitled file not yet saved.\n\t *\n\t * @param resource the resource to check for being dirty. If it is not specified, will check for\n\t * all dirty resources.\n\t */\n\tisDirty(resource?: URI): boolean;\n\n\t/**\n\t * Returns all resources that are currently dirty matching the provided resource or all dirty resources.\n\t *\n\t * @param resource the resource to check for being dirty. If it is not specified, will check for\n\t * all dirty resources.\n\t */\n\tgetDirty(resource?: URI): URI[];\n\n\t/**\n\t * Saves the resource.\n\t *\n\t * @param resource the resource to save\n\t * @return true iff the resource was saved.\n\t */\n\tsave(resource: URI): TPromise<boolean>;\n\n\t/**\n\t * Saves the provided resource asking the user for a file name.\n\t *\n\t * @param resource the resource to save as.\n\t * @return true iff the file was saved.\n\t */\n\tsaveAs(resource: URI, targetResource?: URI): TPromise<URI>;\n\n\t/**\n\t * Saves the set of resources and returns a promise with the operation result.\n\t *\n\t * @param resources can be null to save all.\n\t * @param includeUntitled to save all resources and optionally exclude untitled ones.\n\t */\n\tsaveAll(includeUntitled?: boolean): TPromise<ITextFileOperationResult>;\n\tsaveAll(resources: URI[]): TPromise<ITextFileOperationResult>;\n\n\t/**\n\t * Reverts the provided resource.\n\t *\n\t * @param resource the resource of the file to revert.\n\t * @param force to force revert even when the file is not dirty\n\t */\n\trevert(resource: URI, force?: boolean): TPromise<boolean>;\n\n\t/**\n\t * Reverts all the provided resources and returns a promise with the operation result.\n\t *\n\t * @param force to force revert even when the file is not dirty\n\t */\n\trevertAll(resources?: URI[], force?: boolean): TPromise<ITextFileOperationResult>;\n\n\t/**\n\t * Brings up the confirm dialog to either save, don't save or cancel.\n\t *\n\t * @param resource the resource of the file to ask for confirmation.\n\t */\n\tconfirmSave(resource?: URI): ConfirmResult;\n\n\t/**\n\t * Provides access to the list of working files.\n\t */\n\tgetWorkingFilesModel(): IWorkingFilesModel;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport nls = require('vs/nls');\nimport {EventProvider} from 'vs/base/common/eventProvider';\nimport {Registry} from 'vs/platform/platform';\nimport {createDecorator, ServiceIdentifier} from 'vs/platform/instantiation/common/instantiation';\nimport {IEditor, Position} from 'vs/platform/editor/common/editor';\n\n/**\n * Mime type used by the output editor.\n */\nexport const OUTPUT_MIME = 'text/x-monaco-output';\n\n/**\n * Id used by the output editor.\n */\nexport const OUTPUT_MODE_ID = 'Log';\n\n/**\n * Output editor input id.\n */\nexport const OUTPUT_EDITOR_INPUT_ID = 'vs.output';\n\n/**\n * Output from any not defined channel is here\n */\nexport const DEFAULT_OUTPUT_CHANNEL = '';\n\nexport const Extensions = {\n\tOutputChannels: 'workbench.contributions.outputChannels'\n};\n\nexport const OUTPUT_SERVICE_ID = 'outputService';\n\n/**\n * The output event informs when new output got received.\n */\nexport interface IOutputEvent {\n\toutput: string;\n\tchannel?: string;\n}\n\nexport var IOutputService = createDecorator<IOutputService>(OUTPUT_SERVICE_ID);\n\n/**\n * The output service to manage output from the various processes running.\n */\nexport interface IOutputService {\n\tserviceId: ServiceIdentifier<any>\n\t/**\n\t * Appends output to the given channel.\n\t */\n\tappend(output: string): void;\n\tappend(channel: string, output: string): void;\n\n\t/**\n\t * Returns the received output.\n\t *\n\t * The optional channel allows to ask for output for a specific channel. If you leave the\n\t * channel out, you get the default channels output.\n\t */\n\tgetOutput(channel?: string): string;\n\n\t/**\n\t * Returns all channels that received output in the current session.\n\t */\n\tgetChannels(): string[];\n\n\t/**\n\t * Clears all received output.\n\t *\n\t * The optional channel allows to clear the output for a specific channel. If you leave the\n\t * channel out, you get clear the default channels output.\n\t */\n\tclearOutput(channel?: string): void;\n\n\t/**\n\t * Opens the output for the given channel\n\t *\n\t * The optional channel allows to show the output for a specific channel. If you leave the\n\t * channel out, you show the default channels output.\n\t */\n\tshowOutput(channel?: string, sideBySide?: boolean|Position, preserveFocus?: boolean): TPromise<IEditor>;\n\n\t/**\n\t * Allows to register on Output events\n\t */\n\tonOutput: EventProvider<(event: IOutputEvent) => void>;\n\n\t/**\n\t * Allows to register on a new Output channel getting filled with output\n\t */\n\tonOutputChannel: EventProvider<(channel: string) => void>;\n}\n\nexport interface IOutputChannelRegistry {\n\n\t/**\n\t * Make an output channel known to the output world.\n\t */\n\tregisterChannel(name: string): void;\n\n\t/**\n\t * Returns the list of channels known to the output world.\n\t */\n\tgetChannels(): string[];\n}\n\nclass OutputChannelRegistry implements IOutputChannelRegistry {\n\tprivate channels: string[];\n\n\tconstructor() {\n\t\tthis.channels = [];\n\t}\n\n\tpublic registerChannel(name: string): void {\n\t\tif (this.channels.indexOf(name) === -1) {\n\t\t\tthis.channels.push(name);\n\t\t}\n\t}\n\n\tpublic getChannels(): string[] {\n\t\treturn this.channels.slice(0);\n\t}\n}\n\nRegistry.add(Extensions.OutputChannels, new OutputChannelRegistry());","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {onUnexpectedError, illegalArgument} from 'vs/base/common/errors';\nimport {IDisposable} from 'vs/base/common/lifecycle';\nimport LanguageFeatureRegistry from 'vs/editor/common/modes/languageFeatureRegistry';\nimport {CommonEditorRegistry} from 'vs/editor/common/editorCommonExtensions';\nimport {IRange} from 'vs/editor/common/editorCommon';\nimport URI from 'vs/base/common/uri';\n\n/**\n * Interface used to navigate to types by value.\n */\nexport interface ITypeBearing {\n\tcontainerName: string;\n\tname: string;\n\tparameters: string;\n\ttype: string;\n\trange: IRange;\n\tresourceUri: URI;\n}\n\nexport interface INavigateTypesSupport {\n\tgetNavigateToItems:(search: string)=>TPromise<ITypeBearing[]>;\n}\n\n\nexport namespace NavigateTypesSupportRegistry {\n\n\tconst _supports: INavigateTypesSupport[] = [];\n\n\texport function register(support:INavigateTypesSupport):IDisposable {\n\n\t\tif (support) {\n\t\t\t_supports.push(support);\n\t\t}\n\n\t\treturn {\n\t\t\tdispose() {\n\t\t\t\tif (support) {\n\t\t\t\t\tlet idx = _supports.indexOf(support);\n\t\t\t\t\tif (idx >= 0) {\n\t\t\t\t\t\t_supports.splice(idx, 1);\n\t\t\t\t\t\tsupport = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\texport function all(): INavigateTypesSupport[] {\n\t\treturn _supports.slice(0);\n\t}\n}\n\nexport function getNavigateToItems(query: string): TPromise<ITypeBearing[]> {\n\n\tconst promises = NavigateTypesSupportRegistry.all().map(support => {\n\t\treturn support.getNavigateToItems(query).then(value => value, onUnexpectedError);\n\t});\n\n\treturn TPromise.join(promises).then(all => {\n\t\tconst result: ITypeBearing[] = [];\n\t\tfor (let bearings of all) {\n\t\t\tif (Array.isArray(bearings)) {\n\t\t\t\tresult.push(...bearings);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t});\n}\n\nCommonEditorRegistry.registerLanguageCommand('_executeWorkspaceSymbolProvider', function(accessor, args: { query: string;}) {\n\tlet {query} = args;\n\tif (typeof query !== 'string') {\n\t\tthrow illegalArgument();\n\t}\n\treturn getNavigateToItems(query);\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport URI from 'vs/base/common/uri';\nimport {createDecorator, ServiceIdentifier} from 'vs/platform/instantiation/common/instantiation';\nimport {IEditorService, IEditor, IEditorInput, IEditorOptions, Position, IResourceInput, ITextInput, IEditorModel, ITextEditorModel} from 'vs/platform/editor/common/editor';\n\nexport interface IFileInput extends ITextInput {\n\n\t/**\n\t * The file resource of the file.\n\t */\n\tresource: URI;\n}\n\nexport enum EditorArrangement {\n\tMINIMIZE_OTHERS,\n\tEVEN_WIDTH\n}\n\nexport var IWorkbenchEditorService = createDecorator<IWorkbenchEditorService>('editorService');\n\n/**\n * The editor service allows to open editors and work on the active\n * editor input and models.\n */\nexport interface IWorkbenchEditorService extends IEditorService {\n\tserviceId : ServiceIdentifier<any>;\n\n\t/**\n\t * Returns the currently active editor or null if none.\n\t */\n\tgetActiveEditor(): IEditor;\n\n\t/**\n\t * Returns the currently active editor input or null if none.\n\t */\n\tgetActiveEditorInput(): IEditorInput;\n\n\t/**\n\t * Returns an array of visible editors.\n\t */\n\tgetVisibleEditors(): IEditor[];\n\n\t/**\n\t * Returns iff the provided input is currently visible.\n\t *\n\t * @param includeDiff iff set to true, will also consider diff editors to find out if the provided\n\t * input is opened either on the left or right hand side of the diff editor.\n\t */\n\tisVisible(input: IEditorInput, includeDiff: boolean): boolean;\n\n\t/**\n\t * Opens an Editor on the given input with the provided options at the given position. If the input parameter\n\t * is null, will cause the currently opened editor at the position to close. If sideBySide parameter is provided,\n\t * causes the editor service to decide in what position to open the input.\n\t */\n\topenEditor(input: IEditorInput, options?: IEditorOptions, position?: Position): TPromise<IEditor>;\n\topenEditor(input: IEditorInput, options?: IEditorOptions, sideBySide?: boolean): TPromise<IEditor>;\n\n\t/**\n\t * Specific overload to open an instance of IResourceInput.\n\t */\n\topenEditor(input: IResourceInput, position?: Position): TPromise<IEditor>;\n\topenEditor(input: IResourceInput, sideBySide?: boolean): TPromise<IEditor>;\n\n\t/**\n\t * Specific overload to open an instance of IFileInput.\n\t */\n\topenEditor(input: IFileInput, position?: Position): TPromise<IEditor>;\n\topenEditor(input: IFileInput, sideBySide?: boolean): TPromise<IEditor>;\n\n\t/**\n\t * Opens the set of inputs replacing any other editor that is currently open. Use #openEditor() instead to open\n\t * a single editor.\n\t */\n\tsetEditors(inputs: IEditorInput[]): TPromise<IEditor[]>;\n\tsetEditors(inputs: IResourceInput[]): TPromise<IEditor[]>;\n\tsetEditors(inputs: IFileInput[]): TPromise<IEditor[]>;\n\n\t/**\n\t * Closes the editor at the provided position. If position is not provided, the current active editor is closed.\n\t */\n\tcloseEditor(editor?: IEditor): TPromise<IEditor>;\n\tcloseEditor(position?: Position): TPromise<IEditor>;\n\n\t/**\n\t * Closes all editors or only others that are not active.\n\t */\n\tcloseEditors(othersOnly?: boolean): TPromise<void>;\n\n\t/**\n\t * Focus the editor at the provided position. If position is not provided, the current active editor is focused.\n\t */\n\tfocusEditor(editor?: IEditor): TPromise<IEditor>;\n\tfocusEditor(position?: Position): TPromise<IEditor>;\n\n\t/**\n\t * Allows to move the editor at position 1 to position 2.\n\t */\n\tmoveEditor(from: Position, to: Position): void;\n\n\t/**\n\t * Allows to arrange editors according to the EditorArrangement enumeration.\n\t */\n\tarrangeEditors(arrangement: EditorArrangement): void;\n\n\t/**\n\t * Resolves an input to its model representation. The optional parameter refresh allows to specify\n\t * if a cached model should be returned (false) or a new version (true). The default is returning a\n\t * cached version.\n\t */\n\tresolveEditorModel(input: IEditorInput, refresh?: boolean): TPromise<IEditorModel>;\n\n\t/**\n\t * Specific overload to resolve a IResourceInput to an editor model with a text representation.\n\t */\n\tresolveEditorModel(input: IResourceInput, refresh?: boolean): TPromise<ITextEditorModel>;\n\n\t/**\n\t * Specific overload to resolve a IFileInput to an editor model with a text representation.\n\t */\n\tresolveEditorModel(input: IFileInput, refresh?: boolean): TPromise<ITextEditorModel>;\n\n\t/**\n\t * Allows to resolve an untyped input to a workbench typed instanceof editor input\n\t */\n\tinputToType(input: IResourceInput): TPromise<IEditorInput>;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {onUnexpectedError} from 'vs/base/common/errors';\nimport {Remotable, IThreadService} from 'vs/platform/thread/common/thread';\nimport {IOutputService, OUTPUT_EDITOR_INPUT_ID} from 'vs/workbench/parts/output/common/output';\nimport {IWorkbenchEditorService} from 'vs/workbench/services/editor/common/editorService';\nimport {Position} from 'vs/platform/editor/common/editor';\nimport * as TypeConverters from 'vs/workbench/api/common/pluginHostTypeConverters';\n\nexport class ExtHostOutputChannel implements vscode.OutputChannel {\n\n\tprivate _proxy: MainThreadOutputService;\n\tprivate _name: string;\n\tprivate _disposed: boolean;\n\n\tconstructor(name: string, proxy: MainThreadOutputService) {\n\t\tthis._name = name;\n\t\tthis._proxy = proxy;\n\t}\n\n\tget name(): string {\n\t\treturn this._name;\n\t}\n\n\tdispose(): void {\n\t\tif (!this._disposed) {\n\t\t\tthis._proxy.clear(this._name).then(() => {\n\t\t\t\tthis._disposed = true;\n\t\t\t});\n\t\t}\n\t}\n\n\tappend(value: string): void {\n\t\tthis._proxy.append(this._name, value);\n\t}\n\n\tappendLine(value: string): void {\n\t\tthis.append(value + '\\n');\n\t}\n\n\tclear(): void {\n\t\tthis._proxy.clear(this._name);\n\t}\n\n\tshow(column?: vscode.ViewColumn): void {\n\t\tthis._proxy.reveal(this._name, TypeConverters.fromViewColumn(column));\n\t}\n\n\thide(): void {\n\t\tthis._proxy.close(this._name);\n\t}\n}\n\nexport class ExtHostOutputService {\n\n\tprivate _proxy: MainThreadOutputService;\n\n\tconstructor(threadService: IThreadService) {\n\t\tthis._proxy = threadService.getRemotable(MainThreadOutputService);\n\t}\n\n\tcreateOutputChannel(name: string): vscode.OutputChannel {\n\t\tname = name.trim();\n\t\tif (!name) {\n\t\t\tthrow new Error('illegal argument `name`. must not be falsy');\n\t\t} else {\n\t\t\treturn new ExtHostOutputChannel(name, this._proxy);\n\t\t}\n\t}\n}\n\n@Remotable.MainContext('MainThreadOutputService')\nexport class MainThreadOutputService {\n\n\tprivate _outputService: IOutputService;\n\tprivate _editorService: IWorkbenchEditorService;\n\n\tconstructor( @IOutputService outputService: IOutputService, @IWorkbenchEditorService editorService: IWorkbenchEditorService) {\n\t\tthis._outputService = outputService;\n\t\tthis._editorService = editorService;\n\t}\n\n\tpublic append(channel: string, value: string): TPromise<void> {\n\t\tthis._outputService.append(channel, value);\n\t\treturn undefined;\n\t}\n\n\tpublic clear(channel: string): TPromise<void> {\n\t\tthis._outputService.clearOutput(channel);\n\t\treturn undefined;\n\t}\n\n\tpublic reveal(channel: string, position: Position): TPromise<void> {\n\t\tthis._outputService.showOutput(channel, position);\n\t\treturn undefined;\n\t}\n\n\tpublic close(channel: string): TPromise<void> {\n\t\tlet editors = this._editorService.getVisibleEditors();\n\t\tfor (let editor of editors) {\n\t\t\tif (editor.input.getId() === OUTPUT_EDITOR_INPUT_ID) {\n\t\t\t\tthis._editorService.closeEditor(editor).done(null, onUnexpectedError);\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport URI from 'vs/base/common/uri';\nimport {ISearchService, QueryType} from 'vs/platform/search/common/search';\nimport {IWorkspaceContextService, IWorkspace} from 'vs/platform/workspace/common/workspace';\nimport {Remotable, IThreadService} from 'vs/platform/thread/common/thread';\nimport {IConfigurationService} from 'vs/platform/configuration/common/configuration';\nimport {IEventService} from 'vs/platform/event/common/event';\nimport {IWorkbenchEditorService} from 'vs/workbench/services/editor/common/editorService';\nimport {ITextFileService, ITextFileOperationResult} from 'vs/workbench/parts/files/common/files';\nimport {Uri, FileSystemWatcher} from 'vscode';\nimport {ICommonCodeEditor} from 'vs/editor/common/editorCommon';\nimport {bulkEdit, IResourceEdit} from 'vs/editor/common/services/bulkEdit';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {fromRange} from 'vs/workbench/api/common/pluginHostTypeConverters';\n\nexport class PluginHostWorkspace {\n\n\tprivate _proxy: MainThreadWorkspace;\n\tprivate _workspacePath: string;\n\n\tconstructor( @IThreadService threadService: IThreadService, workspacePath:string) {\n\t\tthis._proxy = threadService.getRemotable(MainThreadWorkspace);\n\t\tthis._workspacePath = workspacePath;\n\t}\n\n\tgetPath(): string {\n\t\treturn this._workspacePath;\n\t}\n\n\tgetRelativePath(pathOrUri: string|Uri): string {\n\n\t\tlet path: string;\n\t\tif (typeof pathOrUri === 'string') {\n\t\t\tpath = pathOrUri;\n\t\t} else {\n\t\t\tpath = pathOrUri.fsPath;\n\t\t}\n\n\t\tif (this._workspacePath && this._workspacePath.length < path.length) {\n\t\t\t// return relative(workspacePath, path);\n\t\t\treturn path.substring(this._workspacePath.length);\n\t\t}\n\n\t\treturn path\n\t}\n\n\tfindFiles(include: string, exclude: string, maxResults?:number): Thenable<Uri[]> {\n\t\treturn this._proxy.findFiles(include, exclude, maxResults);\n\t}\n\n\tsaveAll(includeUntitled?: boolean): Thenable<boolean> {\n\t\treturn this._proxy.saveAll(includeUntitled);\n\t}\n\n\tappyEdit(edit: vscode.WorkspaceEdit): TPromise<boolean> {\n\n\t\tlet resourceEdits: IResourceEdit[] = [];\n\n\t\tlet entries = edit.entries();\n\t\tfor (let entry of entries) {\n\t\t\tlet [uri, edits] = entry;\n\n\t\t\tfor (let edit of edits) {\n\t\t\t\tresourceEdits.push({\n\t\t\t\t\tresource: <URI>uri,\n\t\t\t\t\tnewText: edit.newText,\n\t\t\t\t\trange: fromRange(edit.range)\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn this._proxy.applyWorkspaceEdit(resourceEdits);\n\t}\n}\n\n@Remotable.MainContext('MainThreadWorkspace')\nexport class MainThreadWorkspace {\n\n\tprivate _searchService: ISearchService;\n\tprivate _workspace: IWorkspace;\n\tprivate _textFileService: ITextFileService;\n\tprivate _editorService:IWorkbenchEditorService;\n\tprivate _eventService:IEventService;\n\n\n\tconstructor( @ISearchService searchService: ISearchService,\n\t\t@IWorkspaceContextService contextService: IWorkspaceContextService,\n\t\t@ITextFileService textFileService,\n\t\t@IWorkbenchEditorService editorService,\n\t\t@IEventService eventService) {\n\n\t\tthis._searchService = searchService;\n\t\tthis._workspace = contextService.getWorkspace();\n\t\tthis._textFileService = textFileService;\n\t\tthis._editorService = editorService;\n\t\tthis._eventService = eventService;\n\t}\n\n\tfindFiles(include: string, exclude: string, maxResults: number): Thenable<Uri[]> {\n\n\t\tif (!this._workspace) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn this._searchService.search({\n\t\t\trootResources: [this._workspace.resource],\n\t\t\ttype: QueryType.File,\n\t\t\tmaxResults,\n\t\t\tincludePattern: { [include]: true },\n\t\t\texcludePattern: { [exclude]: true },\n\t\t}).then(result => {\n\t\t\treturn result.results.map(m => m.resource);\n\t\t});\n\t}\n\n\tsaveAll(includeUntitled?: boolean): Thenable<boolean> {\n\t\treturn this._textFileService.saveAll(includeUntitled).then(result => {\n\t\t\treturn result.results.every(each => each.success === true);;\n\t\t});\n\t}\n\n\tapplyWorkspaceEdit(edits: IResourceEdit[]): TPromise<boolean> {\n\n\t\tlet codeEditor: ICommonCodeEditor;\n\t\tlet editor = this._editorService.getActiveEditor();\n\t\tif (editor) {\n\t\t\tlet candidate = <ICommonCodeEditor> editor.getControl();\n\t\t\tif (typeof candidate.getEditorType === 'function') {\n\t\t\t\t// enough proof\n\t\t\t\tcodeEditor = candidate;\n\t\t\t}\n\t\t}\n\n\t\treturn bulkEdit(this._eventService, this._editorService, codeEditor, edits)\n\t\t\t.then(() => true);\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {ITree, IElementCallback} from 'vs/base/parts/tree/common/tree';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {EventProvider} from 'vs/base/common/eventProvider';\nimport {IQuickNavigateConfiguration, IAutoFocus} from 'vs/base/parts/quickopen/browser/quickOpen';\nimport {createDecorator, ServiceIdentifier} from 'vs/platform/instantiation/common/instantiation';\nimport {IEditorInput} from 'vs/platform/editor/common/editor';\n\nexport interface IPickOpenEntry {\n\tid?: string;\n\tlabel: string;\n\tdescription?: string;\n}\n\nexport interface IPickOpenEntryItem extends IPickOpenEntry {\n\theight?: number;\n\trender?: (tree: ITree, container: HTMLElement, previousCleanupFn: IElementCallback) => IElementCallback;\n}\n\nexport interface IPickOptions {\n\n\t/**\n\t * an optional string to show as place holder in the input box to guide the user what she picks on\n\t */\n\tplaceHolder?: string;\n\n\t/**\n\t * optional auto focus settings\n\t */\n\tautoFocus?: IAutoFocus;\n\n\t/**\n\t * an optional flag to include the description when filtering the picks\n\t */\n\tmatchOnDescription?: boolean;\n}\n\nexport interface IInputOptions {\n\n\t/**\n\t * the value to prefill in the input box\n\t */\n\tvalue?: string;\n\n\t/**\n\t * the text to display underneath the input box\n\t */\n\tprompt?: string;\n\n\t/**\n\t * an optional string to show as place holder in the input box to guide the user what to type\n\t */\n\tplaceHolder?: string;\n\n\t/**\n\t * set to true to show a password prompt that will not show the typed value\n\t */\n\tpassword?: boolean;\n}\n\nexport var IQuickOpenService = createDecorator<IQuickOpenService>('quickOpenService')\n\nexport interface IQuickOpenService {\n\tserviceId : ServiceIdentifier<any>;\n\n\t/**\n\t * Asks the container to show the quick open control with the optional prefix set. If the optional parameter\n\t * is set for quick navigation mode, the quick open control will quickly navigate when the quick navigate\n\t * key is pressed and will run the selection after the ctrl key is released.\n\t *\n\t * The returned promise completes when quick open is closing.\n\t */\n\tshow(prefix?: string, quickNavigateConfiguration?: IQuickNavigateConfiguration): TPromise<void>;\n\n\t/**\n\t * Refreshes the quick open control. No-op, if the control is hidden.\n\t * If an input is provided, then the operation will only succeed if that same input is still\n\t * in the quick open control.\n\t */\n\trefresh(input?: string): TPromise<void>;\n\n\t/**\n\t * Returns the sorted list of editor inputs that have been opened by the user.\n\t */\n\tgetEditorHistory(): IEditorInput[];\n\n\t/**\n\t * Removes an editor history entry by the given input.\n\t */\n\tremoveEditorHistoryEntry(input: IEditorInput): void;\n\n\t/**\n\t * A convenient way to bring up quick open as a picker with custom elements. This bypasses the quick open handler\n\t * registry and just leverages the quick open widget to select any kind of entries.\n\t *\n\t * Passing in a promise will allow you to resolve the elements in the background while quick open will show a\n\t * progress bar spinning.\n\t */\n\tpick(picks: TPromise<string[]>, options?: IPickOptions): TPromise<string>;\n\tpick<T extends IPickOpenEntry>(picks: TPromise<T[]>, options?: IPickOptions): TPromise<T>;\n\tpick(picks: string[], options?: IPickOptions): TPromise<string>;\n\tpick<T extends IPickOpenEntry>(picks: T[], options?: IPickOptions): TPromise<T>;\n\n\t/**\n\t * Should not be used by clients. Will cause any opened quick open widget to navigate in the result set.\n\t */\n\tquickNavigate(configuration: IQuickNavigateConfiguration, next: boolean): void;\n\n\t/**\n\t * Opens the quick open box for user input and returns a promise with the user typed value if any.\n\t */\n\tinput(options?: IInputOptions): TPromise<string>;\n\n\t/**\n\t * Allows to register on the event that quick open is showing\n\t */\n\tonShow: EventProvider<() => void>;\n\n\t/**\n\t * Allows to register on the event that quick open is hiding\n\t */\n\tonHide: EventProvider<() => void>;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {Remotable, IThreadService} from 'vs/platform/thread/common/thread';\nimport {IQuickOpenService, IPickOpenEntryItem, IPickOptions} from 'vs/workbench/services/quickopen/browser/quickOpenService';\nimport {QuickPickOptions, QuickPickItem, InputBoxOptions} from 'vscode';\n\nexport interface MyQuickPickItems extends IPickOpenEntryItem {\n\thandle: number;\n}\n\nexport type Item = string | QuickPickItem;\n\nexport class PluginHostQuickOpen {\n\n\tprivate _proxy: MainThreadQuickOpen;\n\n\tconstructor(@IThreadService threadService: IThreadService) {\n\t\tthis._proxy = threadService.getRemotable(MainThreadQuickOpen);\n\t}\n\n\tshow(items: Item[] | Thenable<Item[]>, options?: QuickPickOptions): Thenable<Item> {\n\n\t\tlet itemsPromise: Thenable<Item[]>;\n\t\tif (!Array.isArray(items)) {\n\t\t\titemsPromise = items;\n\t\t} else {\n\t\t\titemsPromise = TPromise.as(items);\n\t\t}\n\n\t\tlet quickPickWidget = this._proxy._show({\n\t\t\tautoFocus: { autoFocusFirstEntry: true },\n\t\t\tplaceHolder: options && options.placeHolder,\n\t\t\tmatchOnDescription: options && options.matchOnDescription\n\t\t});\n\n\t\treturn itemsPromise.then(items => {\n\n\t\t\tlet pickItems: MyQuickPickItems[] = [];\n\t\t\tfor (let handle = 0; handle < items.length; handle++) {\n\n\t\t\t\tlet item = items[handle];\n\t\t\t\tlet label: string;\n\t\t\t\tlet description: string;\n\n\t\t\t\tif (typeof item === 'string') {\n\t\t\t\t\tlabel = item;\n\t\t\t\t} else {\n\t\t\t\t\tlabel = item.label;\n\t\t\t\t\tdescription = item.description;\n\t\t\t\t}\n\t\t\t\tpickItems.push({\n\t\t\t\t\tlabel,\n\t\t\t\t\tdescription,\n\t\t\t\t\thandle\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis._proxy._setItems(pickItems);\n\n\t\t\treturn quickPickWidget.then(handle => {\n\t\t\t\tif (typeof handle === 'number') {\n\t\t\t\t\treturn items[handle];\n\t\t\t\t}\n\t\t\t});\n\t\t}, (err) => {\n\t\t\tthis._proxy._setError(err);\n\n\t\t\treturn TPromise.wrapError(err);\n\t\t});\n\t}\n\n\tinput(options?: InputBoxOptions): Thenable<string> {\n\t\treturn this._proxy._input(options);\n\t}\n}\n\n@Remotable.MainContext('MainThreadQuickOpen')\nexport class MainThreadQuickOpen {\n\n\tprivate _quickOpenService: IQuickOpenService;\n\tprivate _doSetItems: (items: MyQuickPickItems[]) => any;\n\tprivate _doSetError: (error: Error) => any;\n\tprivate _contents: TPromise<MyQuickPickItems[]>;\n\tprivate _token = 0;\n\n\tconstructor(@IQuickOpenService quickOpenService: IQuickOpenService) {\n\t\tthis._quickOpenService = quickOpenService;\n\t}\n\n\t_show(options: IPickOptions): Thenable<number> {\n\n\t\tconst myToken = ++this._token;\n\n\t\tthis._contents = new TPromise((c, e) => {\n\t\t\tthis._doSetItems = (items) => {\n\t\t\t\tif (myToken === this._token) {\n\t\t\t\t\tc(items);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis._doSetError = (error) => {\n\t\t\t\tif (myToken === this._token) {\n\t\t\t\t\te(error);\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\n\t\treturn this._quickOpenService.pick(this._contents, options).then(item => {\n\t\t\tif (item) {\n\t\t\t\treturn item.handle;\n\t\t\t}\n\t\t});\n\t}\n\n\t_setItems(items: MyQuickPickItems[]): Thenable<any> {\n\t\tif (this._doSetItems) {\n\t\t\tthis._doSetItems(items);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t_setError(error: Error): Thenable<any> {\n\t\tif (this._doSetError) {\n\t\t\tthis._doSetError(error);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t_input(options?: InputBoxOptions): Thenable<string> {\n\t\treturn this._quickOpenService.input(options);\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport {createDecorator, ServiceIdentifier} from 'vs/platform/instantiation/common/instantiation';\nimport {StatusbarAlignment} from 'vs/workbench/browser/parts/statusbar/statusbar';\nimport {IDisposable} from 'vs/base/common/lifecycle';\n\nexport var IStatusbarService = createDecorator<IStatusbarService>('statusbarService');\n\n/**\n * A declarative way of describing a status bar entry\n */\nexport interface IStatusbarEntry {\n\n\t/**\n\t * The text to show for the entry. You can embed icons in the text by leveraging the syntax:\n\t *\n\t * `My text ${icon name} contains icons like ${icon name} this one.`\n\t */\n\ttext: string;\n\n\t/**\n\t * An optional tooltip text to show when you hover over the entry\n\t */\n\ttooltip?: string;\n\n\t/**\n\t * An optional color to use for the entry\n\t */\n\tcolor?: string;\n\n\t/**\n\t * An optional id of a command that is known to the workbench to execute on click\n\t */\n\tcommand?: string;\n}\n\nexport interface IStatusbarService {\n\tserviceId: ServiceIdentifier<any>;\n\n\t/**\n\t * Adds an entry to the statusbar with the given alignment and priority. Use the returned IDisposable\n\t * to remove the statusbar entry.\n\t */\n\taddEntry(entry: IStatusbarEntry, alignment: StatusbarAlignment, priority?: number): IDisposable;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {Remotable, IThreadService} from 'vs/platform/thread/common/thread';\nimport {IStatusbarService} from 'vs/workbench/services/statusbar/statusbarService';\nimport {IDisposable, disposeAll} from 'vs/base/common/lifecycle';\nimport {StatusbarAlignment as MainThreadStatusBarAlignment} from 'vs/workbench/browser/parts/statusbar/statusbar';\nimport {StatusBarAlignment as ExtHostStatusBarAlignment, Disposable} from '../common/pluginHostTypes';\nimport {StatusBarItem, StatusBarAlignment} from 'vscode';\n\nexport class PluginHostStatusBarEntry implements StatusBarItem {\n\tprivate static ID_GEN = 0;\n\n\tprivate _id: number;\n\tprivate _alignment: number;\n\tprivate _priority: number;\n\tprivate _disposed: boolean;\n\tprivate _visible: boolean;\n\n\tprivate _text: string;\n\tprivate _tooltip: string;\n\tprivate _color: string;\n\tprivate _command: string;\n\n\tprivate _timeoutHandle: number;\n\tprivate _proxy: MainThreadStatusBar;\n\n\tconstructor(proxy: MainThreadStatusBar, alignment: ExtHostStatusBarAlignment = ExtHostStatusBarAlignment.Left, priority?: number) {\n\t\tthis._id = PluginHostStatusBarEntry.ID_GEN++;\n\t\tthis._proxy = proxy;\n\t\tthis._alignment = alignment;\n\t\tthis._priority = priority;\n\t}\n\n\tpublic get id(): number {\n\t\treturn this._id;\n\t}\n\n\tpublic get alignment(): StatusBarAlignment {\n\t\treturn this._alignment;\n\t}\n\n\tpublic get priority(): number {\n\t\treturn this._priority;\n\t}\n\n\tpublic get text(): string {\n\t\treturn this._text;\n\t}\n\n\tpublic get tooltip(): string {\n\t\treturn this._tooltip;\n\t}\n\n\tpublic get color(): string {\n\t\treturn this._color;\n\t}\n\n\tpublic get command(): string {\n\t\treturn this._command;\n\t}\n\n\tpublic set text(text: string) {\n\t\tthis._text = text;\n\t\tthis.update();\n\t}\n\n\tpublic set tooltip(tooltip: string) {\n\t\tthis._tooltip = tooltip;\n\t\tthis.update();\n\t}\n\n\tpublic set color(color: string) {\n\t\tthis._color = color;\n\t\tthis.update();\n\t}\n\n\tpublic set command(command: string) {\n\t\tthis._command = command;\n\t\tthis.update();\n\t}\n\n\tpublic show(): void {\n\t\tthis._visible = true;\n\t\tthis.update();\n\t}\n\n\tpublic hide(): void {\n\t\tthis._visible = false;\n\t\tthis._proxy.dispose(this.id);\n\t}\n\n\tprivate update(): void {\n\t\tif (this._disposed || !this._visible) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._timeoutHandle) {\n\t\t\tclearTimeout(this._timeoutHandle);\n\t\t}\n\n\t\t// Defer the update so that multiple changes to setters dont cause a redraw each\n\t\tthis._timeoutHandle = setTimeout(() => {\n\t\t\tdelete this._timeoutHandle;\n\n\t\t\t// Set to status bar\n\t\t\tthis._proxy.setEntry(this.id, this.text, this.tooltip, this.command, this.color,\n\t\t\t\tthis._alignment === ExtHostStatusBarAlignment.Left ? MainThreadStatusBarAlignment.LEFT : MainThreadStatusBarAlignment.RIGHT,\n\t\t\t\tthis._priority);\n\t\t}, 0);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.hide();\n\t\tthis._disposed = true;\n\t}\n}\n\nclass StatusBarMessage {\n\n\tprivate _item: StatusBarItem;\n\tprivate _messages: {message:string}[] = [];\n\n\tconstructor(statusBar: PluginHostStatusBar) {\n\t\tthis._item = statusBar.createStatusBarEntry(ExtHostStatusBarAlignment.Left, Number.MIN_VALUE);\n\t}\n\n\tdispose() {\n\t\tthis._messages.length = 0;\n\t\tthis._item.dispose();\n\t}\n\n\tsetMessage(message: string): Disposable {\n\t\tconst data: { message: string } = { message }; // use object to not confuse equal strings\n\t\tthis._messages.unshift(data);\n\t\tthis._update();\n\n\t\treturn new Disposable(() => {\n\t\t\tlet idx = this._messages.indexOf(data);\n\t\t\tif (idx >= 0) {\n\t\t\t\tthis._messages.splice(idx, 1);\n\t\t\t\tthis._update();\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _update() {\n\t\tif (this._messages.length > 0) {\n\t\t\tthis._item.text = this._messages[0].message;\n\t\t\tthis._item.show();\n\t\t} else {\n\t\t\tthis._item.hide();\n\t\t}\n\t}\n}\n\nexport class PluginHostStatusBar {\n\n\tprivate _proxy: MainThreadStatusBar;\n\tprivate _statusMessage: StatusBarMessage;\n\n\tconstructor( @IThreadService threadService: IThreadService) {\n\t\tthis._proxy = threadService.getRemotable(MainThreadStatusBar);\n\t\tthis._statusMessage = new StatusBarMessage(this);\n\t}\n\n\tcreateStatusBarEntry(alignment?: ExtHostStatusBarAlignment, priority?: number): StatusBarItem {\n\t\treturn new PluginHostStatusBarEntry(this._proxy, alignment, priority);\n\t}\n\n\tsetStatusBarMessage(text: string, timeoutOrThenable?: number | Thenable<any>): Disposable {\n\n\t\tlet d = this._statusMessage.setMessage(text);\n\t\tlet handle: number;\n\n\t\tif (typeof timeoutOrThenable === 'number') {\n\t\t\thandle = setTimeout(() => d.dispose(), timeoutOrThenable);\n\t\t} else if (typeof timeoutOrThenable !== 'undefined') {\n\t\t\ttimeoutOrThenable.then(() => d.dispose(), () => d.dispose());\n\t\t}\n\n\t\treturn new Disposable(() => {\n\t\t\td.dispose();\n\t\t\tclearTimeout(handle);\n\t\t});\n\t}\n}\n\n@Remotable.MainContext('MainThreadStatusBar')\nexport class MainThreadStatusBar {\n\tprivate mapIdToDisposable: { [id:number]: IDisposable };\n\n\tconstructor(\n\t\t@IStatusbarService private statusbarService: IStatusbarService\n\t) {\n\t\tthis.mapIdToDisposable = Object.create(null);\n\t}\n\n\tsetEntry(id: number, text: string, tooltip: string, command: string, color: string, alignment: MainThreadStatusBarAlignment, priority: number): void {\n\n\t\t// Dispose any old\n\t\tthis.dispose(id);\n\n\t\t// Add new\n\t\tlet disposeable = this.statusbarService.addEntry({ text, tooltip, command, color }, alignment, priority);\n\t\tthis.mapIdToDisposable[id] = disposeable;\n\t}\n\n\tdispose(id: number) {\n\t\tlet disposeable = this.mapIdToDisposable[id];\n\t\tif (disposeable) {\n\t\t\tdisposeable.dispose();\n\t\t}\n\n\t\tdelete this.mapIdToDisposable[id];\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport URI from 'vs/base/common/uri';\nimport {EventType} from 'vs/base/common/events';\nimport arrays = require('vs/base/common/arrays');\nimport {UntitledEditorInput} from 'vs/workbench/browser/parts/editor/untitledEditorInput';\nimport {IInstantiationService, ServiceIdentifier, createDecorator} from 'vs/platform/instantiation/common/instantiation';\n\nexport interface IUntitledEditorServices {\n\tuntitledEditorService?: IUntitledEditorService;\n}\n\nexport var IUntitledEditorService = createDecorator<IUntitledEditorService>('untitledEditorService');\n\nexport interface IUntitledEditorService {\n\tserviceId : ServiceIdentifier<any>;\n\n\t/**\n\t * Returns the untitled editor input matching the provided resource.\n\t */\n\tget(resource: URI): UntitledEditorInput;\n\n\t/**\n\t * Returns all untitled editor inputs.\n\t */\n\tgetAll(resources?: URI[]): UntitledEditorInput[];\n\n\t/**\n\t * Returns dirty untitled editors as resource URIs.\n\t */\n\tgetDirty(): URI[];\n\n\t/**\n\t * Returns true iff the provided resource is dirty.\n\t */\n\tisDirty(resource: URI): boolean;\n\n\t/**\n\t * Creates a new untitled input with the optional resource URI or returns an existing one\n\t * if the provided resource exists already as untitled input.\n\t *\n\t * It is valid to pass in a file resource. In that case the path will be used as identifier.\n\t * The use case is to be able to create a new file with a specific path with VSCode.\n\t */\n\tcreateOrGet(resource?: URI, modeId?: string): UntitledEditorInput;\n\n\t/**\n\t * A check to find out if a untitled resource has a file path associated or not.\n\t */\n\thasAssociatedFilePath(resource: URI): boolean;\n}\n\nexport class UntitledEditorService implements IUntitledEditorService {\n\tpublic serviceId = IUntitledEditorService;\n\n\tprivate static CACHE: { [resource: string]: UntitledEditorInput } = Object.create(null);\n\tprivate static KNOWN_ASSOCIATED_FILE_PATHS: { [resource: string]: boolean } = Object.create(null);\n\n\tprivate instantiationService: IInstantiationService;\n\n\tpublic setInstantiationService(service: IInstantiationService): void {\n\t\tthis.instantiationService = service;\n\t}\n\n\tpublic get(resource: URI): UntitledEditorInput {\n\t\treturn UntitledEditorService.CACHE[resource.toString()];\n\t}\n\n\tpublic getAll(resources?: URI[]): UntitledEditorInput[] {\n\t\tif (resources) {\n\t\t\treturn arrays.coalesce(resources.map((r) => this.get(r)));\n\t\t}\n\n\t\treturn Object.keys(UntitledEditorService.CACHE).map((key) => UntitledEditorService.CACHE[key]);\n\t}\n\n\tpublic isDirty(resource: URI): boolean {\n\t\tlet input = this.get(resource);\n\n\t\treturn input && input.isDirty();\n\t}\n\n\tpublic getDirty(): URI[] {\n\t\treturn Object.keys(UntitledEditorService.CACHE)\n\t\t\t.map((key) => UntitledEditorService.CACHE[key])\n\t\t\t.filter((i) => i.isDirty())\n\t\t\t.map((i) => i.getResource());\n\t}\n\n\tpublic createOrGet(resource?: URI, modeId?: string): UntitledEditorInput {\n\t\tlet hasAssociatedFilePath = false;\n\t\tif (resource) {\n\t\t\thasAssociatedFilePath = (resource.scheme === 'file');\n\t\t\tresource = this.resourceToUntitled(resource); // ensure we have the right scheme\n\n\t\t\tif (hasAssociatedFilePath) {\n\t\t\t\tUntitledEditorService.KNOWN_ASSOCIATED_FILE_PATHS[resource.toString()] = true; // remember for future lookups\n\t\t\t}\n\t\t}\n\n\t\t// Return existing instance if asked for it\n\t\tif (resource && UntitledEditorService.CACHE[resource.toString()]) {\n\t\t\treturn UntitledEditorService.CACHE[resource.toString()];\n\t\t}\n\n\t\t// Create new otherwise\n\t\treturn this.doCreate(resource, hasAssociatedFilePath, modeId);\n\t}\n\n\tprivate doCreate(resource?: URI, hasAssociatedFilePath?: boolean, modeId?: string): UntitledEditorInput {\n\t\tif (!resource) {\n\n\t\t\t// Create new taking a resource URI that is not already taken\n\t\t\tlet counter = Object.keys(UntitledEditorService.CACHE).length + 1;\n\t\t\tdo {\n\t\t\t\tresource = URI.create(UntitledEditorInput.SCHEMA, null, 'Untitled-' + counter);\n\t\t\t\tcounter++;\n\t\t\t} while (Object.keys(UntitledEditorService.CACHE).indexOf(resource.toString()) >= 0);\n\t\t}\n\n\t\tlet input = this.instantiationService.createInstance(UntitledEditorInput, resource, hasAssociatedFilePath, modeId);\n\n\t\t// Remove from cache on dispose\n\t\tinput.addOneTimeListener(EventType.DISPOSE, () => {\n\t\t\tdelete UntitledEditorService.CACHE[input.getResource().toString()];\n\t\t\tdelete UntitledEditorService.KNOWN_ASSOCIATED_FILE_PATHS[input.getResource().toString()];\n\t\t});\n\n\t\t// Add to cache\n\t\tUntitledEditorService.CACHE[resource.toString()] = input;\n\n\t\treturn input;\n\t}\n\n\tprivate resourceToUntitled(resource: URI): URI {\n\t\tif (resource.scheme === UntitledEditorInput.SCHEMA) {\n\t\t\treturn resource;\n\t\t}\n\n\t\treturn URI.create(UntitledEditorInput.SCHEMA, null, resource.fsPath);\n\t}\n\n\tpublic hasAssociatedFilePath(resource: URI): boolean {\n\t\treturn !!UntitledEditorService.KNOWN_ASSOCIATED_FILE_PATHS[resource.toString()];\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {toErrorMessage} from 'vs/base/common/errors';\nimport {IEmitterEvent} from 'vs/base/common/eventEmitter';\nimport {IModelService} from 'vs/editor/common/services/modelService';\nimport {PrefixSumComputer, IPrefixSumIndexOfResult} from 'vs/editor/common/viewModel/prefixSumComputer';\nimport * as EditorCommon from 'vs/editor/common/editorCommon';\nimport {Remotable, IThreadService} from 'vs/platform/thread/common/thread';\nimport Event, {Emitter} from 'vs/base/common/event';\nimport URI from 'vs/base/common/uri';\nimport {IDisposable, disposeAll} from 'vs/base/common/lifecycle';\nimport {Range, Position} from 'vs/workbench/api/common/pluginHostTypes';\nimport {IEventService} from 'vs/platform/event/common/event';\nimport {IEditorService} from 'vs/platform/editor/common/editor';\nimport {EventType as FileEventType, LocalFileChangeEvent, ITextFileService, ITextFileOperationResult} from 'vs/workbench/parts/files/common/files';\nimport * as TypeConverters from './pluginHostTypeConverters';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport * as vscode from 'vscode';\nimport {WordHelper} from 'vs/editor/common/model/textModelWithTokensHelpers';\nimport {IFileService} from 'vs/platform/files/common/files';\nimport {IUntitledEditorService} from 'vs/workbench/services/untitled/browser/untitledEditorService';\nimport {UntitledEditorModel} from 'vs/workbench/browser/parts/editor/untitledEditorModel';\n\nexport interface IModelAddedData {\n\turl: URI;\n\tversionId: number;\n\tvalue: EditorCommon.IRawText;\n\tmodeId: string;\n\tisDirty: boolean;\n}\n\nvar _modeId2WordDefinition: {\n\t[modeId:string]: RegExp;\n} = Object.create(null);\n\nexport function setWordDefinitionFor(modeId:string, wordDefinition:RegExp): void {\n\t_modeId2WordDefinition[modeId] = wordDefinition;\n}\n\nexport function getWordDefinitionFor(modeId:string):RegExp {\n\treturn _modeId2WordDefinition[modeId];\n}\n\n@Remotable.PluginHostContext('PluginHostModelService')\nexport class PluginHostModelService {\n\n\tprivate _onDidAddDocumentEventEmitter: Emitter<BaseTextDocument>;\n\tpublic onDidAddDocument: Event<BaseTextDocument>;\n\n\tprivate _onDidRemoveDocumentEventEmitter: Emitter<BaseTextDocument>;\n\tpublic onDidRemoveDocument: Event<BaseTextDocument>;\n\n\tprivate _onDidChangeDocumentEventEmitter: Emitter<vscode.TextDocumentChangeEvent>;\n\tpublic onDidChangeDocument: Event<vscode.TextDocumentChangeEvent>;\n\n\tprivate _onDidSaveDocumentEventEmitter: Emitter<BaseTextDocument>;\n\tpublic onDidSaveDocument: Event<BaseTextDocument>;\n\n\tprivate _documents: {[modelUri:string]:PluginHostDocument;};\n\n\tprivate _proxy: MainThreadDocuments;\n\n\tconstructor(@IThreadService threadService: IThreadService) {\n\t\tthis._proxy = threadService.getRemotable(MainThreadDocuments);\n\n\t\tthis._onDidAddDocumentEventEmitter = new Emitter<BaseTextDocument>();\n\t\tthis.onDidAddDocument = this._onDidAddDocumentEventEmitter.event;\n\n\t\tthis._onDidRemoveDocumentEventEmitter = new Emitter<BaseTextDocument>();\n\t\tthis.onDidRemoveDocument = this._onDidRemoveDocumentEventEmitter.event;\n\n\t\tthis._onDidChangeDocumentEventEmitter = new Emitter<vscode.TextDocumentChangeEvent>();\n\t\tthis.onDidChangeDocument = this._onDidChangeDocumentEventEmitter.event;\n\n\t\tthis._onDidSaveDocumentEventEmitter = new Emitter<BaseTextDocument>();\n\t\tthis.onDidSaveDocument = this._onDidSaveDocumentEventEmitter.event;\n\n\t\tthis._documents = Object.create(null);\n\t}\n\n\tpublic getDocuments(): BaseTextDocument[] {\n\t\tlet r: BaseTextDocument[] = [];\n\t\tfor (let key in this._documents) {\n\t\t\tr.push(this._documents[key]);\n\t\t}\n\t\treturn r;\n\t}\n\n\tpublic getDocument(resource: vscode.Uri): BaseTextDocument {\n\t\tif (!resource) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this._documents[resource.toString()] || null;\n\t}\n\n\tpublic openDocument(uriOrFileName: vscode.Uri | string): TPromise<vscode.TextDocument> {\n\n\t\tlet uri: URI;\n\t\tif (typeof uriOrFileName === 'string') {\n\t\t\turi = URI.file(uriOrFileName);\n\t\t} else if (uriOrFileName instanceof URI) {\n\t\t\turi = <URI>uriOrFileName;\n\t\t} else {\n\t\t\tthrow new Error('illegal argument - uriOrFileName');\n\t\t}\n\n\t\tlet cached = this._documents[uri.toString()];\n\t\tif (cached) {\n\t\t\treturn TPromise.as(cached);\n\t\t}\n\t\treturn this._proxy._tryOpenDocument(uri).then(() => {\n\t\t\treturn this._documents[uri.toString()];\n\t\t});\n\t}\n\n\tpublic _acceptModelAdd(data:IModelAddedData): void {\n\t\tlet document = new PluginHostDocument(this._proxy, data.url, data.value.lines, data.value.EOL, data.modeId, data.versionId, data.isDirty);\n\t\tlet key = document.uri.toString();\n\t\tif (this._documents[key]) {\n\t\t\tthrow new Error('Document `' + key + '` already exists.');\n\t\t}\n\t\tthis._documents[key] = document;\n\t\tthis._onDidAddDocumentEventEmitter.fire(document);\n\t}\n\n\tpublic _acceptModelModeChanged(url: URI, oldModeId:string, newModeId:string): void {\n\t\tlet document = this._documents[url.toString()];\n\n\t\t// Treat a mode change as a remove + add\n\n\t\tthis._onDidRemoveDocumentEventEmitter.fire(document);\n\t\tdocument._acceptLanguageId(newModeId);\n\t\tthis._onDidAddDocumentEventEmitter.fire(document);\n\t}\n\n\tpublic _acceptModelSaved(url: URI): void {\n\t\tlet document = this._documents[url.toString()];\n\t\tdocument._acceptIsDirty(false);\n\t\tthis._onDidSaveDocumentEventEmitter.fire(document);\n\t}\n\n\tpublic _acceptModelDirty(url: URI): void {\n\t\tlet document = this._documents[url.toString()];\n\t\tdocument._acceptIsDirty(true);\n\t}\n\n\tpublic _acceptModelReverted(url: URI): void {\n\t\tlet document = this._documents[url.toString()];\n\t\tdocument._acceptIsDirty(false);\n\t}\n\n\tpublic _acceptModelRemoved(url: URI): void {\n\t\tlet key = url.toString();\n\t\tif (!this._documents[key]) {\n\t\t\tthrow new Error('Document `' + key + '` does not exist.');\n\t\t}\n\t\tlet document = this._documents[key];\n\t\tdelete this._documents[key];\n\t\tthis._onDidRemoveDocumentEventEmitter.fire(document);\n\t\tdocument.dispose();\n\t}\n\n\tpublic _acceptModelChanged(url: URI, events: EditorCommon.IModelContentChangedEvent2[]): void {\n\t\tlet document = this._documents[url.toString()];\n\t\tdocument._acceptEvents(events);\n\t\tthis._onDidChangeDocumentEventEmitter.fire({\n\t\t\tdocument: document,\n\t\t\tcontentChanges: events.map((e) => {\n\t\t\t\treturn {\n\t\t\t\t\trange: TypeConverters.toRange(e.range),\n\t\t\t\t\trangeLength: e.rangeLength,\n\t\t\t\t\ttext: e.text\n\t\t\t\t};\n\t\t\t})\n\t\t});\n\t}\n}\n\nexport class BaseTextDocument implements vscode.TextDocument {\n\tprotected _uri: URI;\n\tprotected _lines: string[];\n\tprotected _eol: string;\n\tprotected _languageId: string;\n\tprotected _versionId: number;\n\tprotected _isDirty: boolean;\n\tprotected _textLines: vscode.TextLine[];\n\tprotected _lineStarts: PrefixSumComputer;\n\n\tconstructor(uri: URI, lines: string[], eol: string, languageId: string, versionId: number, isDirty:boolean) {\n\t\tthis._uri = uri;\n\t\tthis._lines = lines;\n\t\tthis._textLines = [];\n\t\tthis._eol = eol;\n\t\tthis._languageId = languageId;\n\t\tthis._versionId = versionId;\n\t\tthis._isDirty = isDirty;\n\t}\n\n\tdispose(): void {\n\t\tthis._lines.length = 0;\n\t\tthis._textLines.length = 0;\n\t\tthis._isDirty = false;\n\t}\n\n\tget uri(): URI {\n\t\treturn this._uri;\n\t}\n\n\tget fileName(): string {\n\t\treturn this._uri.fsPath;\n\t}\n\n\tget isUntitled(): boolean {\n\t\treturn this._uri.scheme !== 'file';\n\t}\n\n\tget languageId(): string {\n\t\treturn this._languageId;\n\t}\n\n\tget version(): number {\n\t\treturn this._versionId;\n\t}\n\n\tget isDirty(): boolean {\n\t\treturn this._isDirty;\n\t}\n\n\tsave(): Thenable<boolean> {\n\t\treturn Promise.reject<boolean>('Not implemented');\n\t}\n\n\tgetText(range?: Range): string {\n\t\tif (range) {\n\t\t\treturn this._getTextInRange(range);\n\t\t} else {\n\t\t\treturn this._lines.join(this._eol);\n\t\t}\n\t}\n\n\tprivate _getTextInRange(_range: Range): string {\n\t\tlet range = this.validateRange(_range);\n\n\t\tif (range.isEmpty) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (range.isSingleLine) {\n\t\t\treturn this._lines[range.start.line].substring(range.start.character, range.end.character);\n\t\t}\n\n\t\tvar lineEnding = this._eol,\n\t\t\tstartLineIndex = range.start.line,\n\t\t\tendLineIndex = range.end.line,\n\t\t\tresultLines: string[] = [];\n\n\t\tresultLines.push(this._lines[startLineIndex].substring(range.start.character));\n\t\tfor (var i = startLineIndex + 1; i < endLineIndex; i++) {\n\t\t\tresultLines.push(this._lines[i]);\n\t\t}\n\t\tresultLines.push(this._lines[endLineIndex].substring(0, range.end.character));\n\n\t\treturn resultLines.join(lineEnding);\n\t}\n\n\tget lineCount(): number {\n\t\treturn this._lines.length;\n\t}\n\n\tlineAt(lineOrPosition: number | vscode.Position): vscode.TextLine {\n\n\t\tlet line: number;\n\t\tif (lineOrPosition instanceof Position) {\n\t\t\tline = lineOrPosition.line;\n\t\t} else if (typeof lineOrPosition === 'number') {\n\t\t\tline = lineOrPosition;\n\t\t}\n\n\t\tif (line < 0 || line >= this._lines.length) {\n\t\t\tthrow new Error('Illegal value ' + line + ' for `line`');\n\t\t}\n\n\t\tlet result = this._textLines[line];\n\t\tif (!result || result.lineNumber !== line || result.text !== this._lines[line]) {\n\n\t\t\tconst text = this._lines[line];\n\t\t\tconst firstNonWhitespaceCharacterIndex = /^(\\s*)/.exec(text)[1].length;\n\t\t\tconst range = new Range(line, 0, line, text.length);\n\t\t\tconst rangeIncludingLineBreak = new Range(line, 0, line + 1, 0);\n\n\t\t\tresult = Object.freeze({\n\t\t\t\tlineNumber: line,\n\t\t\t\trange,\n\t\t\t\trangeIncludingLineBreak,\n\t\t\t\ttext,\n\t\t\t\tfirstNonWhitespaceCharacterIndex,\n\t\t\t\tisEmptyOrWhitespace: firstNonWhitespaceCharacterIndex === text.length\n\t\t\t});\n\n\t\t\tthis._textLines[line] = result;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\toffsetAt(position: Position): number {\n\t\tposition = this.validatePosition(position);\n\t\tthis._ensureLineStarts();\n\t\treturn this._lineStarts.getAccumulatedValue(position.line - 1) + position.character;\n\t}\n\n\tpositionAt(offset: number): Position {\n\t\toffset = Math.floor(offset);\n\t\toffset = Math.max(0, offset);\n\n\t\tthis._ensureLineStarts();\n\t\tlet out: IPrefixSumIndexOfResult = { index: 0, remainder: 0 };\n\t\tthis._lineStarts.getIndexOf(offset, out);\n\n\t\tlet lineLength = this._lines[out.index].length;\n\n\t\t// Ensure we return a valid position\n\t\treturn new Position(out.index, Math.min(out.remainder, lineLength));\n\t}\n\n\tprivate _ensureLineStarts(): void {\n\t\tif (!this._lineStarts) {\n\t\t\tconst lineStartValues:number[] = [];\n\t\t\tconst eolLength = this._eol.length;\n\t\t\tfor (let i = 0, len = this._lines.length; i < len; i++) {\n\t\t\t\tlineStartValues.push(this._lines[i].length + eolLength);\n\t\t\t}\n\t\t\tthis._lineStarts = new PrefixSumComputer(lineStartValues);\n\t\t}\n\t}\n\n\t// ---- range math\n\n\tvalidateRange(range:Range): Range {\n\t\tif (!(range instanceof Range)) {\n\t\t\tthrow new Error('Invalid argument');\n\t\t}\n\n\t\tlet start = this.validatePosition(range.start);\n\t\tlet end = this.validatePosition(range.end);\n\n\t\tif (start === range.start && end === range.end) {\n\t\t\treturn range;\n\t\t}\n\t\treturn new Range(start, end);\n\t}\n\n\tvalidatePosition(position:Position): Position {\n\t\tif (!(position instanceof Position)) {\n\t\t\tthrow new Error('Invalid argument')\n\t\t}\n\n\t\tlet {line, character} = position;\n\t\tlet hasChanged = false;\n\n\t\tif (line < 0) {\n\t\t\tline = 0;\n\t\t\thasChanged = true;\n\t\t}\n\n\t\tif (line >= this._lines.length) {\n\t\t\tline = this._lines.length - 1;\n\t\t\thasChanged = true;\n\t\t}\n\n\t\tif (character < 0) {\n\t\t\tcharacter = 0;\n\t\t\thasChanged = true;\n\t\t}\n\n\t\tlet maxCharacter = this._lines[line].length;\n\t\tif (character > maxCharacter) {\n\t\t\tcharacter = maxCharacter;\n\t\t\thasChanged = true;\n\t\t}\n\n\t\tif (!hasChanged) {\n\t\t\treturn position;\n\t\t}\n\t\treturn new Position(line, character);\n\t}\n\n\tgetWordRangeAtPosition(_position:Position): Range {\n\t\tlet position = this.validatePosition(_position);\n\n\t\tlet wordAtText = WordHelper._getWordAtText(\n\t\t\tposition.character + 1,\n\t\t\tWordHelper.ensureValidWordDefinition(getWordDefinitionFor(this._languageId)),\n\t\t\tthis._lines[position.line],\n\t\t\t0\n\t\t);\n\n\t\tif (wordAtText) {\n\t\t\treturn new Range(position.line, wordAtText.startColumn - 1, position.line, wordAtText.endColumn - 1);\n\t\t}\n\t}\n}\n\nexport class PluginHostDocument extends BaseTextDocument {\n\n\tprivate _proxy: MainThreadDocuments;\n\n\tconstructor(proxy: MainThreadDocuments, uri: URI, lines: string[],\n\t\teol: string, languageId: string, versionId: number, isDirty:boolean) {\n\t\tsuper(uri, lines, eol, languageId, versionId, isDirty);\n\t\tthis._proxy = proxy;\n\t}\n\n\tsave(): Thenable<boolean> {\n\t\treturn this._proxy._trySaveDocument(this._uri);\n\t}\n\n\t_acceptLanguageId(newLanguageId:string): void {\n\t\tthis._languageId = newLanguageId;\n\t}\n\n\t_acceptIsDirty(isDirty:boolean): void {\n\t\tthis._isDirty = isDirty;\n\t}\n\n\t_acceptEvents(events: EditorCommon.IModelContentChangedEvent2[]): void {\n\t\t// Update my lines\n\t\tlet lastVersionId = -1;\n\t\tfor (let i = 0, len = events.length; i < len; i++) {\n\t\t\tlet e = events[i];\n\n\t\t\tthis._acceptDeleteRange(e.range);\n\t\t\tthis._acceptInsertText({\n\t\t\t\tlineNumber: e.range.startLineNumber,\n\t\t\t\tcolumn: e.range.startColumn\n\t\t\t}, e.text);\n\t\t\tlastVersionId = Math.max(lastVersionId, e.versionId);\n\t\t}\n\t\tif (lastVersionId !== -1) {\n\t\t\tthis._versionId = lastVersionId;\n\t\t}\n\t}\n\n\t/**\n\t * All changes to a line's text go through this method\n\t */\n\tprivate _setLineText(lineIndex:number, newValue:string): void {\n\t\tthis._lines[lineIndex] = newValue;\n\t\tif (this._lineStarts) {\n\t\t\t// update prefix sum\n\t\t\tthis._lineStarts.changeValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\n\t\t}\n\t}\n\n\tprivate _acceptDeleteRange(range: EditorCommon.IRange): void {\n\n\t\tif (range.startLineNumber === range.endLineNumber) {\n\t\t\tif (range.startColumn === range.endColumn) {\n\t\t\t\t// Nothing to delete\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Delete text on the affected line\n\t\t\tthis._setLineText(range.startLineNumber - 1,\n\t\t\t\tthis._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n\t\t\t\t+ this._lines[range.startLineNumber - 1].substring(range.endColumn - 1)\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\t// Take remaining text on last line and append it to remaining text on first line\n\t\tthis._setLineText(range.startLineNumber - 1,\n\t\t\tthis._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n\t\t\t+ this._lines[range.endLineNumber - 1].substring(range.endColumn - 1)\n\t\t);\n\n\t\t// Delete middle lines\n\t\tthis._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n\t\tif (this._lineStarts) {\n\t\t\t// update prefix sum\n\t\t\tthis._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n\t\t}\n\t}\n\n\tprivate _acceptInsertText(position: EditorCommon.IPosition, insertText:string): void {\n\t\tif (insertText.length === 0) {\n\t\t\t// Nothing to insert\n\t\t\treturn;\n\t\t}\n\t\tlet insertLines = insertText.split(/\\r\\n|\\r|\\n/);\n\t\tif (insertLines.length === 1) {\n\t\t\t// Inserting text on one line\n\t\t\tthis._setLineText(position.lineNumber - 1,\n\t\t\t\tthis._lines[position.lineNumber - 1].substring(0, position.column - 1)\n\t\t\t\t+ insertLines[0]\n\t\t\t\t+ this._lines[position.lineNumber - 1].substring(position.column - 1)\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\t// Append overflowing text from first line to the end of text to insert\n\t\tinsertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\n\n\t\t// Delete overflowing text from first line and insert text on first line\n\t\tthis._setLineText(position.lineNumber - 1,\n\t\t\tthis._lines[position.lineNumber - 1].substring(0, position.column - 1)\n\t\t\t+ insertLines[0]\n\t\t);\n\n\t\t// Insert new lines & store lengths\n\t\tlet newLengths:number[] = new Array<number>(insertLines.length - 1);\n\t\tfor (let i = 1; i < insertLines.length; i++) {\n\t\t\tthis._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\n\t\t\tnewLengths[i - 1] = insertLines[i].length + this._eol.length;\n\t\t}\n\n\t\tif (this._lineStarts) {\n\t\t\t// update prefix sum\n\t\t\tthis._lineStarts.insertValues(position.lineNumber, newLengths);\n\t\t}\n\t}\n}\n\n@Remotable.MainContext('MainThreadDocuments')\nexport class MainThreadDocuments {\n\tprivate _textFileService: ITextFileService;\n\tprivate _editorService: IEditorService;\n\tprivate _fileService: IFileService;\n\tprivate _untitledEditorService: IUntitledEditorService;\n\tprivate _toDispose: IDisposable[];\n\tprivate _modelToDisposeMap: {[modelUrl:string]:IDisposable;};\n\tprivate _proxy: PluginHostModelService;\n\tprivate _modelIsSynced: {[modelId:string]:boolean;};\n\n\tconstructor(\n\t\t@IThreadService threadService: IThreadService,\n\t\t@IModelService modelService:IModelService,\n\t\t@IEventService eventService:IEventService,\n\t\t@ITextFileService textFileService: ITextFileService,\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IUntitledEditorService untitledEditorService: IUntitledEditorService\n\t) {\n\t\tthis._textFileService = textFileService;\n\t\tthis._editorService = editorService;\n\t\tthis._fileService = fileService;\n\t\tthis._untitledEditorService = untitledEditorService;\n\t\tthis._proxy = threadService.getRemotable(PluginHostModelService);\n\t\tthis._modelIsSynced = {};\n\n\t\tthis._toDispose = [];\n\t\tmodelService.onModelAdded.add(this._onModelAdded, this, this._toDispose);\n\t\tmodelService.onModelRemoved.add(this._onModelRemoved, this, this._toDispose);\n\t\tmodelService.onModelModeChanged.add(this._onModelModeChanged, this, this._toDispose);\n\n\t\tthis._toDispose.push(eventService.addListener2(FileEventType.FILE_SAVED, (e: LocalFileChangeEvent) => {\n\t\t\tthis._proxy._acceptModelSaved(e.getAfter().resource);\n\t\t}));\n\t\tthis._toDispose.push(eventService.addListener2(FileEventType.FILE_REVERTED, (e: LocalFileChangeEvent) => {\n\t\t\tthis._proxy._acceptModelReverted(e.getAfter().resource);\n\t\t}));\n\t\tthis._toDispose.push(eventService.addListener2(FileEventType.FILE_DIRTY, (e: LocalFileChangeEvent) => {\n\t\t\tthis._proxy._acceptModelDirty(e.getAfter().resource);\n\t\t}));\n\n\t\tthis._modelToDisposeMap = Object.create(null);\n\t}\n\n\tpublic dispose(): void {\n\t\tObject.keys(this._modelToDisposeMap).forEach((modelUrl) => {\n\t\t\tthis._modelToDisposeMap[modelUrl].dispose();\n\t\t});\n\t\tthis._modelToDisposeMap = Object.create(null);\n\t\tthis._toDispose = disposeAll(this._toDispose);\n\t}\n\n\tprivate _onModelAdded(model: EditorCommon.IModel): void {\n\t\t// Same filter as in mainThreadEditors\n\t\tif (model.isTooLargeForHavingARichMode()) {\n\t\t\t// don't synchronize too large models\n\t\t\treturn null;\n\t\t}\n\t\tlet modelUrl = model.getAssociatedResource();\n\t\tthis._modelIsSynced[modelUrl.toString()] = true;\n\t\tthis._modelToDisposeMap[modelUrl.toString()] = model.addBulkListener2((events) => this._onModelEvents(modelUrl, events));\n\t\tthis._proxy._acceptModelAdd({\n\t\t\turl: model.getAssociatedResource(),\n\t\t\tversionId: model.getVersionId(),\n\t\t\tvalue: model.toRawText(),\n\t\t\tmodeId: model.getMode().getId(),\n\t\t\tisDirty: this._textFileService.isDirty(modelUrl)\n\t\t});\n\t}\n\n\tprivate _onModelModeChanged(model: EditorCommon.IModel, oldModeId:string): void {\n\t\tlet modelUrl = model.getAssociatedResource();\n\t\tif (!this._modelIsSynced[modelUrl.toString()]) {\n\t\t\treturn;\n\t\t}\n\t\tthis._proxy._acceptModelModeChanged(model.getAssociatedResource(), oldModeId, model.getMode().getId());\n\t}\n\n\tprivate _onModelRemoved(model: EditorCommon.IModel): void {\n\t\tlet modelUrl = model.getAssociatedResource();\n\t\tif (!this._modelIsSynced[modelUrl.toString()]) {\n\t\t\treturn;\n\t\t}\n\t\tdelete this._modelIsSynced[modelUrl.toString()];\n\t\tthis._modelToDisposeMap[modelUrl.toString()].dispose();\n\t\tdelete this._modelToDisposeMap[modelUrl.toString()];\n\t\tthis._proxy._acceptModelRemoved(modelUrl);\n\t}\n\n\tprivate _onModelEvents(modelUrl: URI, events: IEmitterEvent[]): void {\n\t\tlet changedEvents: EditorCommon.IModelContentChangedEvent2[] = [];\n\t\tfor (let i = 0, len = events.length; i < len; i++) {\n\t\t\tlet e = events[i];\n\t\t\tswitch (e.getType()) {\n\t\t\t\tcase EditorCommon.EventType.ModelContentChanged2:\n\t\t\t\t\tchangedEvents.push(<EditorCommon.IModelContentChangedEvent2>e.getData());\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (changedEvents.length > 0) {\n\t\t\tthis._proxy._acceptModelChanged(modelUrl, changedEvents);\n\t\t}\n\t}\n\n\t// --- from plugin host process\n\n\t_trySaveDocument(uri: URI): TPromise<boolean> {\n\t\treturn this._textFileService.save(uri);\n\t}\n\n\t_tryOpenDocument(uri: URI): TPromise<any> {\n\n\t\tif (!uri.scheme || !uri.fsPath) {\n\t\t\treturn TPromise.wrapError('Uri must have scheme and path. One or both are missing in: ' + uri.toString());\n\t\t}\n\n\t\tlet promise: TPromise<boolean>;\n\t\tswitch (uri.scheme) {\n\t\t\tcase 'file':\n\t\t\t\tpromise = this._handleFileScheme(uri);\n\t\t\t\tbreak;\n\t\t\tcase 'untitled':\n\t\t\t\tpromise = this._handleUnititledScheme(uri);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tpromise = TPromise.wrapError<boolean>('unsupported URI-scheme: ' + uri.scheme);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn promise.then(success => {\n\t\t\tif (!success) {\n\t\t\t\treturn TPromise.wrapError('cannot open ' + uri.toString());\n\t\t\t}\n\t\t}, err => {\n\t\t\treturn TPromise.wrapError('cannot open ' + uri.toString() + '. Detail: ' + toErrorMessage(err));\n\t\t});\n\t}\n\n\tprivate _handleFileScheme(uri: URI): TPromise<boolean> {\n\t\treturn this._editorService.resolveEditorModel({ resource: uri }).then(model => {\n\t\t\treturn !!model;\n\t\t});\n\t}\n\n\tprivate _handleUnititledScheme(uri: URI): TPromise<boolean> {\n\t\tlet asFileUri = URI.file(uri.fsPath);\n\t\treturn this._fileService.resolveFile(asFileUri).then(stats => {\n\t\t\t// don't create a new file ontop of an existing file\n\t\t\treturn TPromise.wrapError<boolean>('file already exists on disk')\n\t\t}, err => {\n\t\t\tlet input = this._untitledEditorService.createOrGet(asFileUri); // using file-uri makes it show in 'Working Files' section\n\t\t\treturn input.resolve(true).then(model => {\n\t\t\t\tif (input.getResource().toString() !== uri.toString()) {\n\t\t\t\t\tthrow new Error(`expected URI ${uri.toString() } BUT GOT ${input.getResource().toString() }`);\n\t\t\t\t}\n\t\t\t\treturn this._proxy._acceptModelDirty(uri); // mark as dirty\n\t\t\t}).then(() => {\n\t\t\t\treturn true;\n\t\t\t});\n\t\t});\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport URI from 'vs/base/common/uri';\nimport Event, {Emitter} from 'vs/base/common/event';\nimport {IDisposable, disposeAll} from 'vs/base/common/lifecycle';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {Remotable, IThreadService} from 'vs/platform/thread/common/thread';\nimport {PluginHostModelService} from 'vs/workbench/api/common/pluginHostDocuments';\nimport {Selection, Range, Position, EditorOptions} from './pluginHostTypes';\nimport {ISingleEditOperation, ISelection, IRange, IInternalIndentationOptions, IEditor, EditorType, ICommonCodeEditor, ICommonDiffEditor, IDecorationRenderOptions, IRangeWithMessage} from 'vs/editor/common/editorCommon';\nimport {ICodeEditorService} from 'vs/editor/common/services/codeEditorService';\nimport {IWorkbenchEditorService} from 'vs/workbench/services/editor/common/editorService';\nimport {IEditor as IPlatformEditor, IResourceInput, Position as EditorPosition} from 'vs/platform/editor/common/editor';\nimport {IModelService} from 'vs/editor/common/services/modelService';\nimport {MainThreadEditorsTracker, TextEditorRevealType, MainThreadTextEditor, ITextEditorConfiguration} from 'vs/workbench/api/common/mainThreadEditors';\nimport * as TypeConverters from './pluginHostTypeConverters';\nimport {TextDocument, TextEditorSelectionChangeEvent, TextEditorOptionsChangeEvent, TextEditorOptions, ViewColumn} from 'vscode';\nimport {EventType} from 'vs/workbench/browser/events';\nimport {IEventService} from 'vs/platform/event/common/event';\nimport {equals as arrayEquals} from 'vs/base/common/arrays';\n\nexport interface ITextEditorAddData {\n\tid: string;\n\tdocument: URI;\n\toptions: ITextEditorConfiguration;\n\tselections: ISelection[];\n}\n\n@Remotable.PluginHostContext('PluginHostEditors')\nexport class PluginHostEditors {\n\n\tpublic onDidChangeTextEditorSelection: Event<TextEditorSelectionChangeEvent>;\n\tprivate _onDidChangeTextEditorSelection: Emitter<TextEditorSelectionChangeEvent>;\n\n\tpublic onDidChangeTextEditorOptions: Event<TextEditorOptionsChangeEvent>;\n\tprivate _onDidChangeTextEditorOptions: Emitter<TextEditorOptionsChangeEvent>;\n\n\tprivate _editors: { [id: string]: PluginHostTextEditor };\n\tprivate _proxy: MainThreadEditors;\n\tprivate _onDidChangeActiveTextEditor: Emitter<vscode.TextEditor>;\n\tprivate _modelService: PluginHostModelService;\n\tprivate _activeEditorId: string;\n\tprivate _visibleEditorIds: string[];\n\n\tconstructor(\n\t\t@IThreadService threadService: IThreadService\n\t) {\n\t\tthis._onDidChangeTextEditorSelection = new Emitter<TextEditorSelectionChangeEvent>();\n\t\tthis.onDidChangeTextEditorSelection = this._onDidChangeTextEditorSelection.event;\n\n\t\tthis._onDidChangeTextEditorOptions = new Emitter<TextEditorOptionsChangeEvent>();\n\t\tthis.onDidChangeTextEditorOptions = this._onDidChangeTextEditorOptions.event;\n\n\t\tthis._modelService = threadService.getRemotable(PluginHostModelService);\n\t\tthis._proxy = threadService.getRemotable(MainThreadEditors);\n\t\tthis._onDidChangeActiveTextEditor = new Emitter<vscode.TextEditor>();\n\t\tthis._editors = Object.create(null);\n\n\t\tthis._visibleEditorIds = [];\n\t}\n\n\tgetActiveTextEditor(): vscode.TextEditor {\n\t\treturn this._activeEditorId && this._editors[this._activeEditorId];\n\t}\n\n\tgetVisibleTextEditors(): vscode.TextEditor[] {\n\t\treturn this._visibleEditorIds.map(id => this._editors[id]);\n\t}\n\n\tget onDidChangeActiveTextEditor(): Event<vscode.TextEditor> {\n\t\treturn this._onDidChangeActiveTextEditor && this._onDidChangeActiveTextEditor.event;\n\t}\n\n\tshowTextDocument(document: TextDocument, column: ViewColumn): TPromise<vscode.TextEditor> {\n\t\treturn this._proxy._tryShowTextDocument(<URI> document.uri, TypeConverters.fromViewColumn(column)).then(id => {\n\t\t\tlet editor = this._editors[id];\n\t\t\tif (editor) {\n\t\t\t\treturn editor;\n\t\t\t} else {\n\t\t\t\tthrow new Error('Failed to create editor.');\n\t\t\t}\n\t\t});\n\t}\n\n\tcreateTextEditorDecorationType(options: vscode.DecorationRenderOptions): vscode.TextEditorDecorationType {\n\t\treturn new TextEditorDecorationType(this._proxy, options);\n\t}\n\n\t// --- called from main thread\n\n\t_acceptTextEditorAdd(data:ITextEditorAddData): void {\n\t\tlet document = this._modelService.getDocument(data.document);\n\t\tlet newEditor = new PluginHostTextEditor(this._proxy, data.id, document, data.selections.map(TypeConverters.toSelection), data.options);\n\t\tthis._editors[data.id] = newEditor;\n\t}\n\n\t_acceptOptionsChanged(id:string, opts:ITextEditorConfiguration): void {\n\t\tlet editor = this._editors[id];\n\t\teditor._acceptOptions(opts);\n\t\tthis._onDidChangeTextEditorOptions.fire({\n\t\t\ttextEditor: editor,\n\t\t\toptions: opts\n\t\t});\n\t}\n\n\t_acceptSelectionsChanged(id:string, _selections:ISelection[]): void {\n\t\tlet selections = _selections.map(TypeConverters.toSelection);\n\t\tlet editor = this._editors[id];\n\t\teditor._acceptSelections(selections);\n\t\tthis._onDidChangeTextEditorSelection.fire({\n\t\t\ttextEditor: editor,\n\t\t\tselections: selections\n\t\t});\n\t}\n\n\t_acceptActiveEditorAndVisibleEditors(id:string, visibleIds:string[]): void {\n\t\tthis._visibleEditorIds = visibleIds;\n\n\t\tif (this._activeEditorId === id) {\n\t\t\t// nothing to do\n\t\t\treturn;\n\t\t}\n\t\tthis._activeEditorId = id;\n\t\tthis._onDidChangeActiveTextEditor.fire(this.getActiveTextEditor());\n\t}\n\n\t_acceptTextEditorRemove(id:string): void {\n\t\t// make sure the removed editor is not visible\n\t\tvar newVisibleEditors = this._visibleEditorIds.filter(visibleEditorId => visibleEditorId !== id);\n\n\t\tif (this._activeEditorId === id) {\n\t\t\t// removing the current active editor\n\t\t\tthis._acceptActiveEditorAndVisibleEditors(undefined, newVisibleEditors);\n\t\t} else {\n\t\t\tthis._acceptActiveEditorAndVisibleEditors(this._activeEditorId, newVisibleEditors);\n\t\t}\n\n\t\tlet editor = this._editors[id];\n\t\teditor.dispose();\n\t\tdelete this._editors[id];\n\t}\n}\n\nclass TextEditorDecorationType implements vscode.TextEditorDecorationType {\n\n\tprivate static LAST_ID = 0;\n\n\tprivate _proxy: MainThreadEditors;\n\tpublic key: string;\n\n\tconstructor(proxy:MainThreadEditors, options: vscode.DecorationRenderOptions) {\n\t\tthis.key = 'TextEditorDecorationType' + (++TextEditorDecorationType.LAST_ID);\n\t\tthis._proxy = proxy;\n\t\tthis._proxy._registerTextEditorDecorationType(this.key, <any>options);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._proxy._removeTextEditorDecorationType(this.key);\n\t}\n}\n\nexport interface ITextEditOperation {\n\trange: Range;\n\ttext: string;\n\tforceMoveMarkers: boolean;\n}\n\nexport interface IEditData {\n\tdocumentVersionId: number;\n\tedits: ITextEditOperation[];\n}\n\nexport class TextEditorEdit {\n\n\tprivate _documentVersionId: number;\n\tprivate _collectedEdits: ITextEditOperation[];\n\n\tconstructor(document: vscode.TextDocument) {\n\t\tthis._documentVersionId = document.version;\n\t\tthis._collectedEdits = [];\n\t}\n\n\tfinalize(): IEditData {\n\t\treturn {\n\t\t\tdocumentVersionId: this._documentVersionId,\n\t\t\tedits: this._collectedEdits\n\t\t};\n\t}\n\n\treplace(location: Position | Range | Selection, value: string): void {\n\t\tlet range: Range = null;\n\n\t\tif (location instanceof Position) {\n\t\t\trange = new Range(location, location);\n\t\t} else if (location instanceof Range) {\n\t\t\trange = location;\n\t\t} else if (location instanceof Selection) {\n\t\t\trange = new Range(location.start, location.end);\n\t\t} else {\n\t\t\tthrow new Error('Unrecognized location');\n\t\t}\n\n\t\tthis._collectedEdits.push({\n\t\t\trange: range,\n\t\t\ttext: value,\n\t\t\tforceMoveMarkers: false\n\t\t});\n\t}\n\n\tinsert(location: Position, value: string): void {\n\t\tthis._collectedEdits.push({\n\t\t\trange: new Range(location, location),\n\t\t\ttext: value,\n\t\t\tforceMoveMarkers: true\n\t\t});\n\t}\n\n\tdelete(location: Range | Selection): void {\n\t\tlet range: Range = null;\n\n\t\tif (location instanceof Range) {\n\t\t\trange = location;\n\t\t} else if (location instanceof Selection) {\n\t\t\trange = new Range(location.start, location.end);\n\t\t} else {\n\t\t\tthrow new Error('Unrecognized location');\n\t\t}\n\n\t\tthis._collectedEdits.push({\n\t\t\trange: range,\n\t\t\ttext: null,\n\t\t\tforceMoveMarkers: true\n\t\t});\n\t}\n}\n\nfunction readonly(name: string, alt?: string) {\n\tlet message = `The property '${name}' is readonly.`;\n\tif (alt) {\n\t\tmessage += ` Use '${alt}' instead.`\n\t}\n\treturn new Error(message);\n}\n\nfunction illegalArg(name: string) {\n\treturn new Error(`illgeal argument '${name}'`);\n}\n\nfunction deprecated(name:string, message:string = 'Refer to the documentation for further details.') {\n\treturn (target: Object, key: string, descriptor: TypedPropertyDescriptor<any>) => {\n\t\tconst originalMethod = descriptor.value;\n\t\tdescriptor.value = function(...args: any[]) {\n\t\t\tconsole.warn(`[Deprecation Warning] method '${name}' is deprecated and should no longer be used. ${message}`);\n\t\t\treturn originalMethod.apply(this, args);\n\t\t}\n\n\t\treturn descriptor;\n\t}\n}\n\nclass PluginHostTextEditor implements vscode.TextEditor {\n\n\tprivate _proxy: MainThreadEditors;\n\tprivate _id: string;\n\n\tprivate _document: vscode.TextDocument;\n\tprivate _selections: Selection[];\n\tprivate _options: TextEditorOptions;\n\n\tconstructor(proxy: MainThreadEditors, id: string, document: TextDocument, selections: Selection[], options: EditorOptions) {\n\t\tthis._proxy = proxy;\n\t\tthis._id = id;\n\t\tthis._document = document;\n\t\tthis._selections = selections;\n\t\tthis._options = options;\n\t}\n\n\tdispose() {\n\t\tthis._document = null;\n\t}\n\n\t@deprecated('TextEditor.show') show(column: vscode.ViewColumn) {\n\t\tthis._proxy._tryShowEditor(this._id, TypeConverters.fromViewColumn(column));\n\t}\n\n\t@deprecated('TextEditor.hide') hide() {\n\t\tthis._proxy._tryHideEditor(this._id);\n\t}\n\n\t// ---- the document\n\n\tget document(): vscode.TextDocument {\n\t\treturn this._document;\n\t}\n\n\tset document(value) {\n\t\tthrow readonly('document');\n\t}\n\n\t// ---- options\n\n\tget options(): TextEditorOptions {\n\t\treturn this._options;\n\t}\n\n\tset options(value: TextEditorOptions) {\n\t\tthis._options = value;\n\t\tthis._runOnProxy(() => {\n\t\t\treturn this._proxy._trySetOptions(this._id, this._options);\n\t\t}, true);\n\t}\n\n\t_acceptOptions(options: EditorOptions): void {\n\t\tthis._options = options\n\t}\n\n\t// ---- selections\n\n\tget selection(): Selection {\n\t\treturn this._selections && this._selections[0];\n\t}\n\n\tset selection(value: Selection) {\n\t\tif (!(value instanceof Selection)) {\n\t\t\tthrow illegalArg('selection');\n\t\t}\n\t\tthis._selections = [value];\n\t\tthis._trySetSelection(true);\n\t}\n\n\tget selections(): Selection[] {\n\t\treturn this._selections;\n\t}\n\n\tset selections(value: Selection[]) {\n\t\tif (!Array.isArray(value) || value.some(a => !(a instanceof Selection))) {\n\t\t\tthrow illegalArg('selections');\n\t\t}\n\t\tthis._selections = value;\n\t\tthis._trySetSelection(true);\n\t}\n\n\tsetDecorations(decorationType: vscode.TextEditorDecorationType, ranges:Range[]|vscode.DecorationOptions[]): void {\n\t\tthis._runOnProxy(\n\t\t\t() => this._proxy._trySetDecorations(\n\t\t\t\tthis._id,\n\t\t\t\tdecorationType.key,\n\t\t\t\tTypeConverters.fromRangeOrRangeWithMessage(ranges)\n\t\t\t),\n\t\t\ttrue\n\t\t);\n\t}\n\n\trevealRange(range: Range, revealType:vscode.TextEditorRevealType): void {\n\t\tthis._runOnProxy(\n\t\t\t() => this._proxy._tryRevealRange(\n\t\t\t\tthis._id,\n\t\t\t\tTypeConverters.fromRange(range),\n\t\t\t\t(<TextEditorRevealType><any>revealType) || TextEditorRevealType.Default\n\t\t\t),\n\t\t\ttrue\n\t\t);\n\t}\n\n\tprivate _trySetSelection(silent: boolean): TPromise<vscode.TextEditor> {\n\t\tlet selection = this._selections.map(TypeConverters.fromSelection);\n\t\treturn this._runOnProxy(() => this._proxy._trySetSelections(this._id, selection), silent);\n\t}\n\n\t_acceptSelections(selections:Selection[]): void {\n\t\tthis._selections = selections;\n\t}\n\n\t// ---- editing\n\n\tedit(callback:(edit:TextEditorEdit)=>void): Thenable<boolean> {\n\t\tlet edit = new TextEditorEdit(this._document);\n\t\tcallback(edit);\n\t\treturn this._applyEdit(edit);\n\t}\n\n\t_applyEdit(edit:TextEditorEdit): TPromise<boolean> {\n\t\tvar editData = edit.finalize();\n\n\t\t// prepare data for serialization\n\t\tvar edits: ISingleEditOperation[] = editData.edits.map((edit) => {\n\t\t\treturn {\n\t\t\t\trange: TypeConverters.fromRange(edit.range),\n\t\t\t\ttext: edit.text,\n\t\t\t\tforceMoveMarkers: edit.forceMoveMarkers\n\t\t\t};\n\t\t});\n\n\t\treturn this._proxy._tryApplyEdits(this._id, editData.documentVersionId, edits);\n\t}\n\n\t// ---- util\n\n\tprivate _runOnProxy(callback: () => TPromise<any>, silent:boolean): TPromise<PluginHostTextEditor> {\n\t\treturn callback().then(() => this, err => {\n\t\t\tif (!silent) {\n\t\t\t\treturn TPromise.wrapError(silent);\n\t\t\t}\n\t\t\tconsole.warn(err);\n\t\t});\n\t}\n}\n\n@Remotable.MainContext('MainThreadEditors')\nexport class MainThreadEditors {\n\n\tprivate _proxy: PluginHostEditors;\n\tprivate _workbenchEditorService: IWorkbenchEditorService;\n\tprivate _editorTracker: MainThreadEditorsTracker;\n\tprivate _toDispose: IDisposable[];\n\tprivate _textEditorsListenersMap: {[editorId:string]:IDisposable[];};\n\tprivate _textEditorsMap: {[editorId:string]:MainThreadTextEditor;};\n\tprivate _activeTextEditor: string;\n\tprivate _visibleEditors: string[];\n\n\tconstructor(\n\t\t@IThreadService threadService: IThreadService,\n\t\t@IWorkbenchEditorService workbenchEditorService: IWorkbenchEditorService,\n\t\t@ICodeEditorService editorService:ICodeEditorService,\n\t\t@IEventService eventService:IEventService,\n\t\t@IModelService modelService:IModelService\n\t) {\n\t\tthis._proxy = threadService.getRemotable(PluginHostEditors);\n\t\tthis._workbenchEditorService = workbenchEditorService;\n\t\tthis._toDispose = [];\n\t\tthis._textEditorsListenersMap = Object.create(null);\n\t\tthis._textEditorsMap = Object.create(null);\n\t\tthis._activeTextEditor = null;\n\t\tthis._visibleEditors = [];\n\n\t\tthis._editorTracker = new MainThreadEditorsTracker(editorService, modelService);\n\t\tthis._toDispose.push(this._editorTracker);\n\n\t\tthis._toDispose.push(this._editorTracker.onTextEditorAdd((textEditor) => this._onTextEditorAdd(textEditor)));\n\t\tthis._toDispose.push(this._editorTracker.onTextEditorRemove((textEditor) => this._onTextEditorRemove(textEditor)));\n\n\t\tthis._toDispose.push(this._editorTracker.onDidUpdateTextEditors(() => this._updateActiveAndVisibleTextEditors()));\n\t\tthis._toDispose.push(this._editorTracker.onChangedFocusedTextEditor((focusedTextEditorId) => this._updateActiveAndVisibleTextEditors()));\n\t\tthis._toDispose.push(eventService.addListener2(EventType.EDITOR_INPUT_CHANGED, () => this._updateActiveAndVisibleTextEditors()));\n\t}\n\n\tpublic dispose(): void {\n\t\tObject.keys(this._textEditorsListenersMap).forEach((editorId) => {\n\t\t\tdisposeAll(this._textEditorsListenersMap[editorId]);\n\t\t});\n\t\tthis._textEditorsListenersMap = Object.create(null);\n\t\tthis._toDispose = disposeAll(this._toDispose);\n\t}\n\n\tprivate _onTextEditorAdd(textEditor:MainThreadTextEditor): void {\n\t\tlet id = textEditor.getId();\n\t\tlet toDispose: IDisposable[] = [];\n\t\ttoDispose.push(textEditor.onConfigurationChanged((opts) => {\n\t\t\tthis._proxy._acceptOptionsChanged(id, opts);\n\t\t}));\n\t\ttoDispose.push(textEditor.onSelectionChanged((selection) => {\n\t\t\tthis._proxy._acceptSelectionsChanged(id, selection);\n\t\t}));\n\t\tthis._proxy._acceptTextEditorAdd({\n\t\t\tid: id,\n\t\t\tdocument: textEditor.getModel().getAssociatedResource(),\n\t\t\toptions: textEditor.getConfiguration(),\n\t\t\tselections: textEditor.getSelections()\n\t\t});\n\n\t\tthis._textEditorsListenersMap[id] = toDispose;\n\t\tthis._textEditorsMap[id] = textEditor;\n\t}\n\n\tprivate _onTextEditorRemove(textEditor:MainThreadTextEditor): void {\n\t\tlet id = textEditor.getId();\n\t\tdisposeAll(this._textEditorsListenersMap[id]);\n\t\tdelete this._textEditorsListenersMap[id];\n\t\tdelete this._textEditorsMap[id];\n\t\tthis._proxy._acceptTextEditorRemove(id);\n\t}\n\n\tprivate _updateActiveAndVisibleTextEditors(): void {\n\t\tlet visibleEditors = this._editorTracker.getVisibleTextEditorIds();\n\t\tlet activeEditor = this._findActiveTextEditorId();\n\n\t\tif (activeEditor === this._activeTextEditor && arrayEquals(this._visibleEditors, visibleEditors, (a,b) => a === b)) {\n\t\t\t// no change\n\t\t\treturn;\n\t\t}\n\t\tthis._activeTextEditor = activeEditor;\n\t\tthis._visibleEditors = visibleEditors;\n\t\tthis._proxy._acceptActiveEditorAndVisibleEditors(this._activeTextEditor, this._visibleEditors);\n\t}\n\n\tprivate _findActiveTextEditorId(): string {\n\t\tlet focusedTextEditorId = this._editorTracker.getFocusedTextEditorId();\n\t\tif (focusedTextEditorId) {\n\t\t\treturn focusedTextEditorId;\n\t\t}\n\n\t\tlet activeEditor = this._workbenchEditorService.getActiveEditor();\n\t\tif (!activeEditor) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet editor = <IEditor>activeEditor.getControl();\n\t\t// Substitute for (editor instanceof ICodeEditor)\n\t\tif (!editor || typeof editor.getEditorType !== 'function') {\n\t\t\t// Not a text editor...\n\t\t\treturn null;\n\t\t}\n\n\t\tif (editor.getEditorType() === EditorType.ICodeEditor) {\n\t\t\treturn this._editorTracker.findTextEditorIdFor(<ICommonCodeEditor>editor);\n\t\t}\n\n\t\t// Must be a diff editor => use the modified side\n\t\treturn this._editorTracker.findTextEditorIdFor((<ICommonDiffEditor>editor).getModifiedEditor());\n\t}\n\n\t// --- from plugin host process\n\n\t_tryShowTextDocument(resource: URI, position: EditorPosition): TPromise<string> {\n\n\t\t// the input we want to open\n\t\tlet input = {\n\t\t\tresource,\n\t\t\toptions: { preserveFocus: false }\n\t\t};\n\n\t\treturn this._workbenchEditorService.openEditor(input, position).then(editor => {\n\n\t\t\treturn new TPromise<void>(c => {\n\t\t\t\t// not very nice but the way it is: changes to the editor state aren't\n\t\t\t\t// send to the ext host as they happen but stuff is delayed a little. in\n\t\t\t\t// order to provide the real editor on #openTextEditor we need to sync on\n\t\t\t\t// that update\n\t\t\t\tlet subscription: IDisposable;\n\t\t\t\tlet handle: number;\n\t\t\t\tfunction contd() {\n\t\t\t\t\tsubscription.dispose();\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t\tc(undefined);\n\t\t\t\t}\n\t\t\t\tsubscription = this._editorTracker.onDidUpdateTextEditors(() => {\n\t\t\t\t\tcontd();\n\t\t\t\t});\n\t\t\t\thandle = setTimeout(() => {\n\t\t\t\t\tcontd();\n\t\t\t\t}, 100);\n\n\t\t\t}).then(() => {\n\t\t\t\t// find the editor we have just opened and return the\n\t\t\t\t// id we have assigned to it.\n\t\t\t\tfor (let id in this._textEditorsMap) {\n\t\t\t\t\tif (this._textEditorsMap[id].matches(editor)) {\n\t\t\t\t\t\treturn id;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t_tryShowEditor(id: string, position: EditorPosition): TPromise<void> {\n\t\tlet mainThreadEditor = this._textEditorsMap[id];\n\t\tif (mainThreadEditor) {\n\t\t\tlet model = mainThreadEditor.getModel();\n\t\t\treturn this._workbenchEditorService.openEditor({\n\t\t\t\tresource: model.getAssociatedResource(),\n\t\t\t\toptions: { preserveFocus: false }\n\t\t\t}, position).then(() => { });\n\t\t}\n\t}\n\n\t_tryHideEditor(id: string): TPromise<void> {\n\t\tlet mainThreadEditor = this._textEditorsMap[id];\n\t\tif (mainThreadEditor) {\n\t\t\tlet editors = this._workbenchEditorService.getVisibleEditors();\n\t\t\tfor (let editor of editors) {\n\t\t\t\tif (mainThreadEditor.matches(editor)) {\n\t\t\t\t\treturn this._workbenchEditorService.closeEditor(editor).then(() => { });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t_trySetSelections(id: string, selections: ISelection[]): TPromise<any> {\n\t\tif (!this._textEditorsMap[id]) {\n\t\t\treturn TPromise.wrapError('TextEditor disposed');\n\t\t}\n\t\tthis._textEditorsMap[id].setSelections(selections);\n\t\treturn TPromise.as(null);\n\t}\n\n\t_trySetDecorations(id: string, key: string, ranges:IRangeWithMessage[]): TPromise<any> {\n\t\tif (!this._textEditorsMap[id]) {\n\t\t\treturn TPromise.wrapError('TextEditor disposed');\n\t\t}\n\t\tthis._textEditorsMap[id].setDecorations(key, ranges);\n\t\treturn TPromise.as(null);\n\t}\n\n\t_tryRevealRange(id: string, range: IRange, revealType:TextEditorRevealType): TPromise<any> {\n\t\tif (!this._textEditorsMap[id]) {\n\t\t\treturn TPromise.wrapError('TextEditor disposed');\n\t\t}\n\t\tthis._textEditorsMap[id].revealRange(range, revealType);\n\t}\n\n\t_trySetOptions(id: string, options:IInternalIndentationOptions): TPromise<any> {\n\t\tif (!this._textEditorsMap[id]) {\n\t\t\treturn TPromise.wrapError('TextEditor disposed');\n\t\t}\n\t\tthis._textEditorsMap[id].setConfiguration(options);\n\t\treturn TPromise.as(null);\n\t}\n\n\t_tryApplyEdits(id: string, modelVersionId: number, edits:ISingleEditOperation[]): TPromise<boolean> {\n\t\tif (!this._textEditorsMap[id]) {\n\t\t\treturn TPromise.wrapError('TextEditor disposed');\n\t\t}\n\t\treturn TPromise.as(this._textEditorsMap[id].applyEdits(modelVersionId, edits));\n\t}\n\n\t_registerTextEditorDecorationType(key:string, options: IDecorationRenderOptions): void {\n\t\tthis._editorTracker.registerTextEditorDecorationType(key, options);\n\t}\n\n\t_removeTextEditorDecorationType(key:string): void {\n\t\tthis._editorTracker.removeTextEditorDecorationType(key);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {Remotable, IThreadService} from 'vs/platform/thread/common/thread';\nimport {TypeConstraint, validateConstraint} from 'vs/base/common/types';\nimport {IEventService} from 'vs/platform/event/common/event';\nimport {PluginsRegistry} from 'vs/platform/plugins/common/pluginsRegistry';\nimport {SyncActionDescriptor} from 'vs/platform/actions/common/actions';\nimport {KeybindingsRegistry} from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport {KeybindingsUtils} from 'vs/platform/keybinding/common/keybindingsUtils';\nimport {IKeybindingService, ICommandHandlerDescription} from 'vs/platform/keybinding/common/keybindingService';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {PluginHostEditors} from 'vs/workbench/api/common/pluginHostEditors';\nimport {IMessageService, Severity} from 'vs/platform/message/common/message';\nimport {canSerialize} from 'vs/base/common/marshalling';\nimport {toErrorMessage} from 'vs/base/common/errors';\nimport * as vscode from 'vscode';\n\ninterface CommandHandler {\n\tcallback: Function;\n\tthisArg: any;\n\tdescription: ICommandHandlerDescription;\n}\n\n@Remotable.PluginHostContext('PluginHostCommands')\nexport class PluginHostCommands {\n\n\tprivate _commands: { [n: string]: CommandHandler } = Object.create(null);\n\tprivate _proxy: MainThreadCommands;\n\tprivate _pluginHostEditors: PluginHostEditors;\n\n\tconstructor(@IThreadService threadService: IThreadService) {\n\t\tthis._pluginHostEditors = threadService.getRemotable(PluginHostEditors);\n\t\tthis._proxy = threadService.getRemotable(MainThreadCommands);\n\t}\n\n\tregisterCommand(id: string, callback: <T>(...args: any[]) => T | Thenable<T>, thisArg?: any, description?: ICommandHandlerDescription): vscode.Disposable {\n\n\t\tif (!id.trim().length) {\n\t\t\tthrow new Error('invalid id');\n\t\t}\n\n\t\tif (this._commands[id]) {\n\t\t\tthrow new Error('command with id already exists');\n\t\t}\n\n\t\tthis._commands[id] = { callback, thisArg, description };\n\t\tthis._proxy.$registerCommand(id);\n\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tdelete this._commands[id];\n\t\t\t}\n\t\t}\n\t}\n\n\tregisterTextEditorCommand(id: string, callback: (textEditor: vscode.TextEditor, edit: vscode.TextEditorEdit) => void, thisArg?: any): vscode.Disposable {\n\t\tlet actualCallback: (textEditor: vscode.TextEditor, edit: vscode.TextEditorEdit) => void = thisArg ? callback.bind(thisArg) : callback;\n\t\treturn this.registerCommand(id, () => {\n\t\t\tlet activeTextEditor = this._pluginHostEditors.getActiveTextEditor();\n\t\t\tif (!activeTextEditor) {\n\t\t\t\tconsole.warn('Cannot execute ' + id + ' because there is no active text editor.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tactiveTextEditor.edit((edit: vscode.TextEditorEdit) => {\n\t\t\t\tactualCallback(activeTextEditor, edit);\n\t\t\t}).then((result) => {\n\t\t\t\tif (!result) {\n\t\t\t\t\tconsole.warn('Edits from command ' + id + ' were not applied.')\n\t\t\t\t}\n\t\t\t}, (err) => {\n\t\t\t\tconsole.warn('An error occured while running command ' + id, err);\n\t\t\t});\n\t\t})\n\t}\n\n\texecuteCommand<T>(id: string, ...args: any[]): Thenable<T> {\n\n\t\tif (this._commands[id]) {\n\t\t\t// we stay inside the extension host and support\n\t\t\t// to pass any kind of parameters around\n\t\t\treturn this.$executeContributedCommand(id, ...args);\n\n\t\t} else {\n\t\t\t// // check that we can get all parameters over to\n\t\t\t// // the other side\n\t\t\t// for (let i = 0; i < args.length; i++) {\n\t\t\t// \tif (args[i] !== null && typeof args[i] === 'object' && !canSerialize(args[i])) {\n\t\t\t// \t\tthrow new Error('illegal argument - can not serialize argument number: ' + i)\n\t\t\t// \t}\n\t\t\t// }\n\n\t\t\treturn this._proxy.$executeCommand(id, args);\n\t\t}\n\n\t}\n\n\t$executeContributedCommand<T>(id: string, ...args: any[]): Thenable<T> {\n\t\tlet command = this._commands[id];\n\t\tif (!command) {\n\t\t\treturn Promise.reject<T>(id);\n\t\t}\n\t\ttry {\n\t\t\tlet {callback, thisArg, description} = command;\n\t\t\tif (description) {\n\t\t\t\tfor (let i = 0; i < description.args.length; i++) {\n\t\t\t\t\tvalidateConstraint(args[i], description.args[i].constraint);\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet result = callback.apply(thisArg, args);\n\t\t\treturn Promise.resolve(result);\n\t\t} catch (err) {\n\t\t\t// try {\n\t\t\t// \tconsole.log(toErrorMessage(err));\n\t\t\t// \tconsole.log(err);\n\t\t\t// } catch (err) {\n\t\t\t// \t//\n\t\t\t// }\n\t\t\treturn Promise.reject<T>(`Running the contributed command:'${id}' failed.`);\n\t\t}\n\t}\n\n\tgetCommands(filterUnderscoreCommands: boolean = false): Thenable<string[]> {\n\t\treturn this._proxy.$getCommands().then(result => {\n\t\t\tif (filterUnderscoreCommands) {\n\t\t\t\tresult = result.filter(command => command[0] !== '_');\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t}\n\n\t$getContributedCommandHandlerDescriptions(): TPromise<{ [id: string]: string | ICommandHandlerDescription }> {\n\t\tconst result: { [id: string]: string | ICommandHandlerDescription } = Object.create(null);\n\t\tfor (let id in this._commands) {\n\t\t\tlet {description} = this._commands[id];\n\t\t\tif (description) {\n\t\t\t\tresult[id] = description;\n\t\t\t}\n\t\t}\n\t\treturn TPromise.as(result);\n\t}\n}\n\n@Remotable.MainContext('MainThreadCommands')\nexport class MainThreadCommands {\n\n\tprivate _threadService: IThreadService;\n\tprivate _keybindingService: IKeybindingService;\n\tprivate _proxy: PluginHostCommands;\n\n\tconstructor( @IThreadService threadService: IThreadService, @IKeybindingService keybindingService: IKeybindingService) {\n\t\tthis._threadService = threadService;\n\t\tthis._keybindingService = keybindingService;\n\t\tthis._proxy = this._threadService.getRemotable(PluginHostCommands);\n\t}\n\n\t$registerCommand(id: string): TPromise<any> {\n\n\t\tKeybindingsRegistry.registerCommandDesc({\n\t\t\tid,\n\t\t\thandler: (serviceAccessor, ...args: any[]) => {\n\t\t\t\treturn this._proxy.$executeContributedCommand(id, ...args); //TODO@Joh - we cannot serialize the args\n\t\t\t},\n\t\t\tweight: undefined,\n\t\t\tcontext: undefined,\n\t\t\twin: undefined,\n\t\t\tmac: undefined,\n\t\t\tlinux: undefined,\n\t\t\tprimary: undefined,\n\t\t\tsecondary: undefined\n\t\t});\n\n\t\treturn undefined;\n\t}\n\n\t$executeCommand<T>(id: string, args: any[]): Thenable<T> {\n\t\treturn this._keybindingService.executeCommand(id, args);\n\t}\n\n\t$getCommands(): Thenable<string[]> {\n\t\treturn TPromise.as(Object.keys(KeybindingsRegistry.getCommands()));\n\t}\n\n\t$getCommandHandlerDescriptions(): TPromise<{ [id: string]: string | ICommandHandlerDescription }> {\n\t\treturn this._proxy.$getContributedCommandHandlerDescriptions().then(result => {\n\t\t\tconst commands = KeybindingsRegistry.getCommands();\n\t\t\tfor (let id in commands) {\n\t\t\t\tlet {description} = commands[id];\n\t\t\t\tif (description) {\n\t\t\t\t\tresult[id] = description;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t}\n}\n\n\n// --- command doc\n\nKeybindingsRegistry.registerCommandDesc({\n\tid: '_generateCommandsDocumentation',\n\thandler: function(accessor) {\n\t\treturn accessor.get(IThreadService).getRemotable(MainThreadCommands).$getCommandHandlerDescriptions().then(result => {\n\t\t\tconst all: string[] = [];\n\t\t\tfor (let id in result) {\n\t\t\t\tall.push('`' + id + '` - ' + _generateMarkdown(result[id]))\n\t\t\t}\n\t\t\tconsole.log(all.join('\\n'));\n\t\t});\n\t},\n\tcontext: undefined,\n\tweight: KeybindingsRegistry.WEIGHT.builtinExtension(0),\n\tprimary: undefined\n});\n\nfunction _generateMarkdown(description: string | ICommandHandlerDescription): string {\n\tif (typeof description === 'string') {\n\t\treturn description;\n\t} else {\n\t\tlet parts = [description.description];\n\t\tparts.push('\\n\\n');\n\t\tif (description.args) {\n\t\t\tfor (let arg of description.args) {\n\t\t\t\tparts.push(`* _${arg.name}_ ${arg.description || ''}\\n`);\n\t\t\t}\n\t\t}\n\t\tif (description.returns) {\n\t\t\tparts.push(`* _(returns)_ ${description.returns}`);\n\t\t}\n\t\tparts.push('\\n\\n');\n\t\treturn parts.join('');\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport URI from 'vs/base/common/uri';\nimport {DefaultFilter} from 'vs/editor/common/modes/modesFilters';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {IDisposable} from 'vs/base/common/lifecycle';\nimport {Remotable, IThreadService} from 'vs/platform/thread/common/thread';\nimport {Range as EditorRange} from 'vs/editor/common/core/range';\nimport * as vscode from 'vscode';\nimport * as TypeConverters from 'vs/workbench/api/common/pluginHostTypeConverters';\nimport {Range, DocumentHighlightKind, Disposable, Diagnostic, SignatureHelp} from 'vs/workbench/api/common/pluginHostTypes';\nimport {IPosition, IRange, ISingleEditOperation} from 'vs/editor/common/editorCommon';\nimport * as modes from 'vs/editor/common/modes';\nimport {CancellationTokenSource} from 'vs/base/common/cancellation';\nimport {PluginHostModelService} from 'vs/workbench/api/common/pluginHostDocuments';\nimport {IMarkerService, IMarker} from 'vs/platform/markers/common/markers';\nimport {PluginHostCommands} from 'vs/workbench/api/common/pluginHostCommands';\nimport {DeclarationRegistry} from 'vs/editor/contrib/goToDeclaration/common/goToDeclaration';\nimport {ExtraInfoRegistry} from 'vs/editor/contrib/hover/common/hover';\nimport {OccurrencesRegistry} from 'vs/editor/contrib/wordHighlighter/common/wordHighlighter';\nimport {ReferenceRegistry} from 'vs/editor/contrib/referenceSearch/common/referenceSearch';\nimport {QuickFixRegistry} from 'vs/editor/contrib/quickFix/common/quickFix';\nimport {OutlineRegistry, IOutlineEntry, IOutlineSupport} from 'vs/editor/contrib/quickOpen/common/quickOpen';\nimport {NavigateTypesSupportRegistry, INavigateTypesSupport, ITypeBearing} from 'vs/workbench/parts/search/common/search'\nimport {RenameRegistry} from 'vs/editor/contrib/rename/common/rename';\nimport {FormatRegistry, FormatOnTypeRegistry} from 'vs/editor/contrib/format/common/format';\nimport {CodeLensRegistry} from 'vs/editor/contrib/codelens/common/codelens';\nimport {ParameterHintsRegistry} from 'vs/editor/contrib/parameterHints/common/parameterHints';\nimport {SuggestRegistry} from 'vs/editor/contrib/suggest/common/suggest';\n\nfunction isThenable<T>(obj: any): obj is Thenable<T> {\n\treturn obj && typeof obj['then'] === 'function';\n}\n\nfunction asWinJsPromise<T>(callback: (token: vscode.CancellationToken) => T | Thenable<T>): TPromise<T> {\n\tlet source = new CancellationTokenSource();\n\treturn new TPromise<T>((resolve, reject) => {\n\t\tlet item = callback(source.token);\n\t\tif (isThenable<T>(item)) {\n\t\t\titem.then(resolve, reject);\n\t\t} else {\n\t\t\tresolve(item);\n\t\t}\n\t}, () => {\n\t\tsource.cancel();\n\t});\n}\n\n// --- adapter\n\nclass OutlineAdapter implements IOutlineSupport {\n\n\tprivate _documents: PluginHostModelService;\n\tprivate _provider: vscode.DocumentSymbolProvider;\n\n\tconstructor(documents: PluginHostModelService, provider: vscode.DocumentSymbolProvider) {\n\t\tthis._documents = documents;\n\t\tthis._provider = provider;\n\t}\n\n\tgetOutline(resource: URI): TPromise<IOutlineEntry[]> {\n\t\tlet doc = this._documents.getDocument(resource);\n\t\treturn asWinJsPromise(token => this._provider.provideDocumentSymbols(doc, token)).then(value => {\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\treturn value.map(TypeConverters.SymbolInformation.toOutlineEntry);\n\t\t\t}\n\t\t});\n\t}\n}\n\nclass CodeLensAdapter implements modes.ICodeLensSupport {\n\n\tprivate _documents: PluginHostModelService;\n\tprivate _provider: vscode.CodeLensProvider;\n\n\tprivate _cache: { [uri: string]: vscode.CodeLens[] } = Object.create(null);\n\n\tconstructor(documents: PluginHostModelService, provider: vscode.CodeLensProvider) {\n\t\tthis._documents = documents;\n\t\tthis._provider = provider;\n\t}\n\n\tfindCodeLensSymbols(resource: URI): TPromise<modes.ICodeLensSymbol[]> {\n\t\tlet doc = this._documents.getDocument(resource);\n\t\tlet key = resource.toString();\n\n\t\tdelete this._cache[key];\n\n\t\treturn asWinJsPromise(token => this._provider.provideCodeLenses(doc, token)).then(value => {\n\t\t\tif (!Array.isArray(value)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._cache[key] = value;\n\n\t\t\treturn value.map((lens, i) => {\n\t\t\t\treturn <modes.ICodeLensSymbol>{\n\t\t\t\t\tid: String(i),\n\t\t\t\t\trange: TypeConverters.fromRange(lens.range),\n\t\t\t\t\tcommand: TypeConverters.Command.from(lens.command)\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tresolveCodeLensSymbol(resource: URI, symbol: modes.ICodeLensSymbol): TPromise<modes.ICodeLensSymbol> {\n\n\t\tlet lenses = this._cache[resource.toString()];\n\t\tif (!lenses) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet lens = lenses[Number(symbol.id)];\n\t\tif (!lens) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet resolve: TPromise<vscode.CodeLens>;\n\t\tif (typeof this._provider.resolveCodeLens !== 'function' || lens.isResolved) {\n\t\t\tresolve = TPromise.as(lens);\n\t\t} else {\n\t\t\tresolve = asWinJsPromise(token => this._provider.resolveCodeLens(lens, token));\n\t\t}\n\n\t\treturn resolve.then(newLens => {\n\t\t\tlens = newLens || lens;\n\t\t\tlet command = lens.command;\n\t\t\tif (!command) {\n\t\t\t\tcommand = {\n\t\t\t\t\ttitle: '<<MISSING COMMAND>>',\n\t\t\t\t\tcommand: 'missing',\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tsymbol.command = TypeConverters.Command.from(command);\n\t\t\treturn symbol;\n\t\t});\n\t}\n}\n\nclass DeclarationAdapter implements modes.IDeclarationSupport {\n\n\tprivate _documents: PluginHostModelService;\n\tprivate _provider: vscode.DefinitionProvider;\n\n\tconstructor(documents: PluginHostModelService, provider: vscode.DefinitionProvider) {\n\t\tthis._documents = documents;\n\t\tthis._provider = provider;\n\t}\n\n\tcanFindDeclaration() {\n\t\treturn true;\n\t}\n\n\tfindDeclaration(resource: URI, position: IPosition): TPromise<modes.IReference[]> {\n\t\tlet doc = this._documents.getDocument(resource);\n\t\tlet pos = TypeConverters.toPosition(position);\n\t\treturn asWinJsPromise(token => this._provider.provideDefinition(doc, pos, token)).then(value => {\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\treturn value.map(DeclarationAdapter._convertLocation);\n\t\t\t} else if (value) {\n\t\t\t\treturn DeclarationAdapter._convertLocation(value);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate static _convertLocation(location: vscode.Location): modes.IReference {\n\t\tif (!location) {\n\t\t\treturn;\n\t\t}\n\t\treturn <modes.IReference>{\n\t\t\tresource: location.uri,\n\t\t\trange: TypeConverters.fromRange(location.range)\n\t\t};\n\t}\n}\n\nclass ExtraInfoAdapter implements modes.IExtraInfoSupport {\n\n\tprivate _documents: PluginHostModelService;\n\tprivate _provider: vscode.HoverProvider;\n\n\tconstructor(documents: PluginHostModelService, provider: vscode.HoverProvider) {\n\t\tthis._documents = documents;\n\t\tthis._provider = provider;\n\t}\n\n\tcomputeInfo(resource: URI, position: IPosition): TPromise<modes.IComputeExtraInfoResult> {\n\n\t\tlet doc = this._documents.getDocument(resource);\n\t\tlet pos = TypeConverters.toPosition(position);\n\n\t\treturn asWinJsPromise(token => this._provider.provideHover(doc, pos, token)).then(value => {\n\t\t\tif (!value) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!value.range) {\n\t\t\t\tvalue.range = doc.getWordRangeAtPosition(pos);\n\t\t\t}\n\t\t\tif (!value.range) {\n\t\t\t\tvalue.range = new Range(pos, pos);\n\t\t\t}\n\n\t\t\treturn TypeConverters.fromHover(value);\n\t\t});\n\t}\n}\n\nclass OccurrencesAdapter implements modes.IOccurrencesSupport {\n\n\tprivate _documents: PluginHostModelService;\n\tprivate _provider: vscode.DocumentHighlightProvider;\n\n\tconstructor(documents: PluginHostModelService, provider: vscode.DocumentHighlightProvider) {\n\t\tthis._documents = documents;\n\t\tthis._provider = provider;\n\t}\n\n\tfindOccurrences(resource: URI, position: IPosition): TPromise<modes.IOccurence[]> {\n\n\t\tlet doc = this._documents.getDocument(resource);\n\t\tlet pos = TypeConverters.toPosition(position);\n\n\t\treturn asWinJsPromise(token => this._provider.provideDocumentHighlights(doc, pos, token)).then(value => {\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\treturn value.map(OccurrencesAdapter._convertDocumentHighlight);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate static _convertDocumentHighlight(documentHighlight: vscode.DocumentHighlight): modes.IOccurence {\n\t\treturn {\n\t\t\trange: TypeConverters.fromRange(documentHighlight.range),\n\t\t\tkind: DocumentHighlightKind[documentHighlight.kind].toString().toLowerCase()\n\t\t}\n\t}\n}\n\nclass ReferenceAdapter implements modes.IReferenceSupport {\n\n\tprivate _documents: PluginHostModelService;\n\tprivate _provider: vscode.ReferenceProvider;\n\n\tconstructor(documents: PluginHostModelService, provider: vscode.ReferenceProvider) {\n\t\tthis._documents = documents;\n\t\tthis._provider = provider;\n\t}\n\n\tcanFindReferences(): boolean {\n\t\treturn true\n\t}\n\n\tfindReferences(resource: URI, position: IPosition, includeDeclaration: boolean): TPromise<modes.IReference[]> {\n\t\tlet doc = this._documents.getDocument(resource);\n\t\tlet pos = TypeConverters.toPosition(position);\n\n\t\treturn asWinJsPromise(token => this._provider.provideReferences(doc, pos, { includeDeclaration }, token)).then(value => {\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\treturn value.map(ReferenceAdapter._convertLocation);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate static _convertLocation(location: vscode.Location): modes.IReference {\n\t\treturn <modes.IReference>{\n\t\t\tresource: location.uri,\n\t\t\trange: TypeConverters.fromRange(location.range)\n\t\t};\n\t}\n}\n\nclass QuickFixAdapter implements modes.IQuickFixSupport {\n\n\tprivate _documents: PluginHostModelService;\n\tprivate _commands: PluginHostCommands;\n\tprivate _provider: vscode.CodeActionProvider;\n\n\tconstructor(documents: PluginHostModelService, commands: PluginHostCommands, provider: vscode.CodeActionProvider) {\n\t\tthis._documents = documents;\n\t\tthis._commands = commands;\n\t\tthis._provider = provider;\n\t}\n\n\tgetQuickFixes(resource: URI, range: IRange, marker?: IMarker[]): TPromise<modes.IQuickFix[]> {\n\n\t\tconst doc = this._documents.getDocument(resource);\n\t\tconst ran = TypeConverters.toRange(range);\n\t\tconst diagnostics = marker.map(marker => {\n\t\t\tconst diag = new Diagnostic(TypeConverters.toRange(marker), marker.message);\n\t\t\tdiag.code = marker.code;\n\t\t\tdiag.severity = TypeConverters.toDiagnosticSeverty(marker.severity);\n\t\t\treturn diag;\n\t\t});\n\n\t\treturn asWinJsPromise(token => this._provider.provideCodeActions(doc, ran, { diagnostics: <any>diagnostics }, token)).then(commands => {\n\t\t\tif (!Array.isArray(commands)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn commands.map((command, i) => {\n\t\t\t\treturn <modes.IQuickFix> {\n\t\t\t\t\tcommand: TypeConverters.Command.from(command),\n\t\t\t\t\tscore: i\n\t\t\t\t};\n\t\t\t});\n\t\t});\n\t}\n\n\trunQuickFixAction(resource: URI, range: IRange, quickFix: modes.IQuickFix): any {\n\t\tlet {command} = quickFix;\n\t\treturn this._commands.executeCommand(command.id, ...command.arguments);\n\t}\n}\n\nclass DocumentFormattingAdapter implements modes.IFormattingSupport {\n\n\tprivate _documents: PluginHostModelService;\n\tprivate _provider: vscode.DocumentFormattingEditProvider;\n\n\tconstructor(documents: PluginHostModelService, provider: vscode.DocumentFormattingEditProvider) {\n\t\tthis._documents = documents;\n\t\tthis._provider = provider;\n\t}\n\n\tformatDocument(resource: URI, options: modes.IFormattingOptions): TPromise<ISingleEditOperation[]> {\n\n\t\tlet doc = this._documents.getDocument(resource);\n\n\t\treturn asWinJsPromise(token => this._provider.provideDocumentFormattingEdits(doc, <any>options, token)).then(value => {\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\treturn value.map(TypeConverters.TextEdit.from);\n\t\t\t}\n\t\t});\n\t}\n}\n\nclass RangeFormattingAdapter implements modes.IFormattingSupport {\n\n\tprivate _documents: PluginHostModelService;\n\tprivate _provider: vscode.DocumentRangeFormattingEditProvider;\n\n\tconstructor(documents: PluginHostModelService, provider: vscode.DocumentRangeFormattingEditProvider) {\n\t\tthis._documents = documents;\n\t\tthis._provider = provider;\n\t}\n\n\tformatRange(resource: URI, range: IRange, options: modes.IFormattingOptions): TPromise<ISingleEditOperation[]> {\n\n\t\tlet doc = this._documents.getDocument(resource);\n\t\tlet ran = TypeConverters.toRange(range);\n\n\t\treturn asWinJsPromise(token => this._provider.provideDocumentRangeFormattingEdits(doc, ran, <any>options, token)).then(value => {\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\treturn value.map(TypeConverters.TextEdit.from);\n\t\t\t}\n\t\t});\n\t}\n}\n\nclass OnTypeFormattingAdapter implements modes.IFormattingSupport {\n\n\tprivate _documents: PluginHostModelService;\n\tprivate _provider: vscode.OnTypeFormattingEditProvider;\n\n\tconstructor(documents: PluginHostModelService, provider: vscode.OnTypeFormattingEditProvider) {\n\t\tthis._documents = documents;\n\t\tthis._provider = provider;\n\t}\n\n\tautoFormatTriggerCharacters: string[] = []; // not here\n\n\tformatAfterKeystroke(resource: URI, position: IPosition, ch: string, options: modes.IFormattingOptions): TPromise<ISingleEditOperation[]> {\n\n\t\tlet doc = this._documents.getDocument(resource);\n\t\tlet pos = TypeConverters.toPosition(position);\n\n\t\treturn asWinJsPromise(token => this._provider.provideOnTypeFormattingEdits(doc, pos, ch, <any> options, token)).then(value => {\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\treturn value.map(TypeConverters.TextEdit.from);\n\t\t\t}\n\t\t});\n\t}\n}\n\nclass NavigateTypeAdapter implements INavigateTypesSupport {\n\n\tprivate _provider: vscode.WorkspaceSymbolProvider;\n\n\tconstructor(provider: vscode.WorkspaceSymbolProvider) {\n\t\tthis._provider = provider;\n\t}\n\n\tgetNavigateToItems(search: string): TPromise<ITypeBearing[]> {\n\t\treturn asWinJsPromise(token => this._provider.provideWorkspaceSymbols(search, token)).then(value => {\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\treturn value.map(TypeConverters.fromSymbolInformation);\n\t\t\t}\n\t\t});\n\t}\n}\n\nclass RenameAdapter implements modes.IRenameSupport {\n\n\tprivate _documents: PluginHostModelService;\n\tprivate _provider: vscode.RenameProvider;\n\n\tconstructor(documents: PluginHostModelService, provider: vscode.RenameProvider) {\n\t\tthis._documents = documents;\n\t\tthis._provider = provider;\n\t}\n\n\trename(resource: URI, position: IPosition, newName: string): TPromise<modes.IRenameResult> {\n\n\t\tlet doc = this._documents.getDocument(resource);\n\t\tlet pos = TypeConverters.toPosition(position);\n\n\t\treturn asWinJsPromise(token => this._provider.provideRenameEdits(doc, pos, newName, token)).then(value => {\n\n\t\t\tif (!value) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet result = <modes.IRenameResult>{\n\t\t\t\tcurrentName: undefined,\n\t\t\t\tedits: []\n\t\t\t};\n\n\t\t\tfor (let entry of value.entries()) {\n\t\t\t\tlet [uri, textEdits] = entry;\n\t\t\t\tfor (let textEdit of textEdits) {\n\t\t\t\t\tresult.edits.push({\n\t\t\t\t\t\tresource: <URI>uri,\n\t\t\t\t\t\tnewText: textEdit.newText,\n\t\t\t\t\t\trange: TypeConverters.fromRange(textEdit.range)\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t}, err => {\n\t\t\tif (typeof err === 'string') {\n\t\t\t\treturn <modes.IRenameResult>{\n\t\t\t\t\tcurrentName: undefined,\n\t\t\t\t\tedits: undefined,\n\t\t\t\t\trejectReason: err\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn TPromise.wrapError(err);\n\t\t});\n\t}\n}\n\ninterface ISuggestion2 extends modes.ISuggestion {\n\tid: string;\n}\n\nclass SuggestAdapter implements modes.ISuggestSupport {\n\n\tprivate _documents: PluginHostModelService;\n\tprivate _provider: vscode.CompletionItemProvider;\n\tprivate _cache: { [key: string]: vscode.CompletionItem[] } = Object.create(null);\n\n\tconstructor(documents: PluginHostModelService, provider: vscode.CompletionItemProvider) {\n\t\tthis._documents = documents;\n\t\tthis._provider = provider;\n\t}\n\n\tsuggest(resource: URI, position: IPosition): TPromise<modes.ISuggestResult[]> {\n\n\t\tconst doc = this._documents.getDocument(resource);\n\t\tconst pos = TypeConverters.toPosition(position);\n\t\tconst ran = doc.getWordRangeAtPosition(pos);\n\n\t\tconst key = resource.toString();\n\t\tdelete this._cache[key];\n\n\t\treturn asWinJsPromise(token => this._provider.provideCompletionItems(doc, pos, token)).then(value => {\n\n\t\t\tlet defaultSuggestions: modes.ISuggestResult = {\n\t\t\t\tsuggestions: [],\n\t\t\t\tcurrentWord: ran ? doc.getText(new Range(ran.start, pos)) : '',\n\t\t\t};\n\t\t\tlet allSuggestions: modes.ISuggestResult[] = [defaultSuggestions];\n\n\n\t\t\tfor (let i = 0; i < value.length; i++) {\n\t\t\t\tconst item = value[i];\n\t\t\t\tconst suggestion = <ISuggestion2> TypeConverters.Suggest.from(item);\n\n\t\t\t\tif (item.textEdit) {\n\n\t\t\t\t\tlet editRange = item.textEdit.range;\n\n\t\t\t\t\t// invalid text edit\n\t\t\t\t\tif (!editRange.isSingleLine || editRange.start.line !== pos.line) {\n\t\t\t\t\t\tconsole.warn('INVALID text edit, must be single line and on the same line');\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// insert the text of the edit and create a dedicated\n\t\t\t\t\t// suggestion-container with overwrite[Before|After]\n\t\t\t\t\tsuggestion.codeSnippet = item.textEdit.newText;\n\t\t\t\t\tsuggestion.overwriteBefore = pos.character - editRange.start.character,\n\t\t\t\t\tsuggestion.overwriteAfter = editRange.end.character - pos.character\n\n\t\t\t\t\tallSuggestions.push({\n\t\t\t\t\t\tcurrentWord: doc.getText(<any>editRange),\n\t\t\t\t\t\tsuggestions: [suggestion]\n\t\t\t\t\t});\n\n\t\t\t\t} else {\n\t\t\t\t\tdefaultSuggestions.suggestions.push(suggestion);\n\t\t\t\t}\n\n\t\t\t\t// assign identifier to suggestion\n\t\t\t\tsuggestion.id = String(i);\n\t\t\t}\n\n\t\t\t// cache for details call\n\t\t\tthis._cache[key] = value;\n\n\t\t\treturn allSuggestions;\n\t\t});\n\t}\n\n\tgetSuggestionDetails(resource: URI, position: IPosition, suggestion: modes.ISuggestion): TPromise<modes.ISuggestion> {\n\t\tif (typeof this._provider.resolveCompletionItem !== 'function') {\n\t\t\treturn TPromise.as(suggestion);\n\t\t}\n\t\tlet items = this._cache[resource.toString()];\n\t\tif (!items) {\n\t\t\treturn TPromise.as(suggestion);\n\t\t}\n\t\tlet item = items[Number((<ISuggestion2> suggestion).id)];\n\t\tif (!item) {\n\t\t\treturn TPromise.as(suggestion);\n\t\t}\n\t\treturn asWinJsPromise(token => this._provider.resolveCompletionItem(item, token)).then(resolvedItem => {\n\t\t\treturn TypeConverters.Suggest.from(resolvedItem || item);\n\t\t});\n\t}\n\n\tgetFilter(): any {\n\t\tthrow new Error('illegal state');\n\t}\n\tgetTriggerCharacters(): string[] {\n\t\tthrow new Error('illegal state');\n\t}\n\tshouldShowEmptySuggestionList(): boolean {\n\t\tthrow new Error('illegal state');\n\t}\n\tshouldAutotriggerSuggest(context: modes.ILineContext, offset: number, triggeredByCharacter: string): boolean {\n\t\tthrow new Error('illegal state');\n\t}\n}\n\nclass ParameterHintsAdapter implements modes.IParameterHintsSupport {\n\n\tprivate _documents: PluginHostModelService;\n\tprivate _provider: vscode.SignatureHelpProvider;\n\n\tconstructor(documents: PluginHostModelService, provider: vscode.SignatureHelpProvider) {\n\t\tthis._documents = documents;\n\t\tthis._provider = provider;\n\t}\n\n\tgetParameterHints(resource: URI, position: IPosition, triggerCharacter?: string): TPromise<modes.IParameterHints> {\n\n\t\tconst doc = this._documents.getDocument(resource);\n\t\tconst pos = TypeConverters.toPosition(position);\n\n\t\treturn asWinJsPromise(token => this._provider.provideSignatureHelp(doc, pos, token)).then(value => {\n\t\t\tif (value instanceof SignatureHelp) {\n\t\t\t\treturn TypeConverters.SignatureHelp.from(value);\n\t\t\t}\n\t\t});\n\t}\n\n\tgetParameterHintsTriggerCharacters(): string[] {\n\t\tthrow new Error('illegal state');\n\t}\n\n\tshouldTriggerParameterHints(context: modes.ILineContext, offset: number): boolean {\n\t\tthrow new Error('illegal state');\n\t}\n}\n\ntype Adapter = OutlineAdapter | CodeLensAdapter | DeclarationAdapter | ExtraInfoAdapter\n\t| OccurrencesAdapter | ReferenceAdapter | QuickFixAdapter | DocumentFormattingAdapter\n\t| RangeFormattingAdapter | OnTypeFormattingAdapter | NavigateTypeAdapter | RenameAdapter\n\t| SuggestAdapter | ParameterHintsAdapter;\n\n@Remotable.PluginHostContext('ExtHostLanguageFeatures')\nexport class ExtHostLanguageFeatures {\n\n\tprivate static _handlePool: number = 0;\n\n\tprivate _proxy: MainThreadLanguageFeatures;\n\tprivate _documents: PluginHostModelService;\n\tprivate _commands: PluginHostCommands;\n\tprivate _adapter: { [handle: number]: Adapter } = Object.create(null);\n\n\tconstructor( @IThreadService threadService: IThreadService) {\n\t\tthis._proxy = threadService.getRemotable(MainThreadLanguageFeatures);\n\t\tthis._documents = threadService.getRemotable(PluginHostModelService);\n\t\tthis._commands = threadService.getRemotable(PluginHostCommands);\n\t}\n\n\tprivate _createDisposable(handle: number): Disposable {\n\t\treturn new Disposable(() => {\n\t\t\tdelete this._adapter[handle];\n\t\t\tthis._proxy.$unregister(handle);\n\t\t});\n\t}\n\n\tprivate _nextHandle(): number {\n\t\treturn ExtHostLanguageFeatures._handlePool++;\n\t}\n\n\tprivate _withAdapter<A, R>(handle: number, ctor: { new (...args: any[]): A }, callback: (adapter: A) => TPromise<R>): TPromise<R> {\n\t\tlet adapter = this._adapter[handle];\n\t\tif (!(adapter instanceof ctor)) {\n\t\t\treturn TPromise.wrapError(new Error('no adapter found'));\n\t\t}\n\t\treturn callback(<any> adapter);\n\t}\n\n\t// --- outline\n\n\tregisterDocumentSymbolProvider(selector: vscode.DocumentSelector, provider: vscode.DocumentSymbolProvider): vscode.Disposable {\n\t\tconst handle = this._nextHandle();\n\t\tthis._adapter[handle] = new OutlineAdapter(this._documents, provider);\n\t\tthis._proxy.$registerOutlineSupport(handle, selector);\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$getOutline(handle: number, resource: URI): TPromise<IOutlineEntry[]> {\n\t\treturn this._withAdapter(handle, OutlineAdapter, adapter => adapter.getOutline(resource));\n\t}\n\n\t// --- code lens\n\n\tregisterCodeLensProvider(selector: vscode.DocumentSelector, provider: vscode.CodeLensProvider): vscode.Disposable {\n\t\tconst handle = this._nextHandle();\n\t\tthis._adapter[handle] = new CodeLensAdapter(this._documents, provider);\n\t\tthis._proxy.$registerCodeLensSupport(handle, selector);\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$findCodeLensSymbols(handle: number, resource: URI): TPromise<modes.ICodeLensSymbol[]> {\n\t\treturn this._withAdapter(handle, CodeLensAdapter, adapter => adapter.findCodeLensSymbols(resource));\n\t}\n\n\t$resolveCodeLensSymbol(handle: number, resource: URI, symbol: modes.ICodeLensSymbol): TPromise<modes.ICodeLensSymbol> {\n\t\treturn this._withAdapter(handle, CodeLensAdapter, adapter => adapter.resolveCodeLensSymbol(resource, symbol));\n\t}\n\n\t// --- declaration\n\n\tregisterDefinitionProvider(selector: vscode.DocumentSelector, provider: vscode.DefinitionProvider): vscode.Disposable {\n\t\tconst handle = this._nextHandle();\n\t\tthis._adapter[handle] = new DeclarationAdapter(this._documents, provider);\n\t\tthis._proxy.$registerDeclaractionSupport(handle, selector);\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$findDeclaration(handle: number, resource: URI, position: IPosition): TPromise<modes.IReference[]> {\n\t\treturn this._withAdapter(handle, DeclarationAdapter, adapter => adapter.findDeclaration(resource, position));\n\t}\n\n\t// --- extra info\n\n\tregisterHoverProvider(selector: vscode.DocumentSelector, provider: vscode.HoverProvider): vscode.Disposable {\n\t\tconst handle = this._nextHandle();\n\t\tthis._adapter[handle] = new ExtraInfoAdapter(this._documents, provider);\n\t\tthis._proxy.$registerExtraInfoSupport(handle, selector);\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$computeInfo(handle: number, resource: URI, position: IPosition): TPromise<modes.IComputeExtraInfoResult> {\n\t\treturn this._withAdapter(handle, ExtraInfoAdapter, adpater => adpater.computeInfo(resource, position));\n\t}\n\n\t// --- occurrences\n\n\tregisterDocumentHighlightProvider(selector: vscode.DocumentSelector, provider: vscode.DocumentHighlightProvider): vscode.Disposable {\n\t\tconst handle = this._nextHandle();\n\t\tthis._adapter[handle] = new OccurrencesAdapter(this._documents, provider);\n\t\tthis._proxy.$registerOccurrencesSupport(handle, selector);\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$findOccurrences(handle: number, resource: URI, position: IPosition): TPromise<modes.IOccurence[]> {\n\t\treturn this._withAdapter(handle, OccurrencesAdapter, adapter => adapter.findOccurrences(resource, position));\n\t}\n\n\t// --- references\n\n\tregisterReferenceProvider(selector: vscode.DocumentSelector, provider: vscode.ReferenceProvider): vscode.Disposable {\n\t\tconst handle = this._nextHandle();\n\t\tthis._adapter[handle] = new ReferenceAdapter(this._documents, provider);\n\t\tthis._proxy.$registerReferenceSupport(handle, selector);\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$findReferences(handle: number, resource: URI, position: IPosition, includeDeclaration: boolean): TPromise<modes.IReference[]> {\n\t\treturn this._withAdapter(handle, ReferenceAdapter, adapter => adapter.findReferences(resource, position, includeDeclaration));\n\t}\n\n\t// --- quick fix\n\n\tregisterCodeActionProvider(selector: vscode.DocumentSelector, provider: vscode.CodeActionProvider): vscode.Disposable {\n\t\tconst handle = this._nextHandle();\n\t\tthis._adapter[handle] = new QuickFixAdapter(this._documents, this._commands, provider);\n\t\tthis._proxy.$registerQuickFixSupport(handle, selector);\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$getQuickFixes(handle: number, resource: URI, range: IRange, marker: IMarker[]): TPromise<modes.IQuickFix[]> {\n\t\treturn this._withAdapter(handle, QuickFixAdapter, adapter => adapter.getQuickFixes(resource, range, marker));\n\t}\n\n\t$runQuickFixAction(handle: number, resource: URI, range: IRange, quickFix: modes.IQuickFix): any {\n\t\treturn this._withAdapter(handle, QuickFixAdapter, adapter => adapter.runQuickFixAction(resource, range, quickFix));\n\t}\n\n\t// --- formatting\n\n\tregisterDocumentFormattingEditProvider(selector: vscode.DocumentSelector, provider: vscode.DocumentFormattingEditProvider): vscode.Disposable {\n\t\tconst handle = this._nextHandle();\n\t\tthis._adapter[handle] = new DocumentFormattingAdapter(this._documents, provider);\n\t\tthis._proxy.$registerDocumentFormattingSupport(handle, selector);\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$formatDocument(handle: number, resource: URI, options: modes.IFormattingOptions): TPromise<ISingleEditOperation[]> {\n\t\treturn this._withAdapter(handle, DocumentFormattingAdapter, adapter => adapter.formatDocument(resource, options));\n\t}\n\n\tregisterDocumentRangeFormattingEditProvider(selector: vscode.DocumentSelector, provider: vscode.DocumentRangeFormattingEditProvider): vscode.Disposable {\n\t\tconst handle = this._nextHandle();\n\t\tthis._adapter[handle] = new RangeFormattingAdapter(this._documents, provider);\n\t\tthis._proxy.$registerRangeFormattingSupport(handle, selector);\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$formatRange(handle: number, resource: URI, range: IRange, options: modes.IFormattingOptions): TPromise<ISingleEditOperation[]> {\n\t\treturn this._withAdapter(handle, RangeFormattingAdapter, adapter => adapter.formatRange(resource, range, options));\n\t}\n\n\tregisterOnTypeFormattingEditProvider(selector: vscode.DocumentSelector, provider: vscode.OnTypeFormattingEditProvider, triggerCharacters: string[]): vscode.Disposable {\n\t\tconst handle = this._nextHandle();\n\t\tthis._adapter[handle] = new OnTypeFormattingAdapter(this._documents, provider);\n\t\tthis._proxy.$registerOnTypeFormattingSupport(handle, selector, triggerCharacters);\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$formatAfterKeystroke(handle: number, resource: URI, position: IPosition, ch: string, options: modes.IFormattingOptions): TPromise<ISingleEditOperation[]> {\n\t\treturn this._withAdapter(handle, OnTypeFormattingAdapter, adapter => adapter.formatAfterKeystroke(resource, position, ch, options));\n\t}\n\n\t// --- navigate types\n\n\tregisterWorkspaceSymbolProvider(provider: vscode.WorkspaceSymbolProvider): vscode.Disposable {\n\t\tconst handle = this._nextHandle();\n\t\tthis._adapter[handle] = new NavigateTypeAdapter(provider);\n\t\tthis._proxy.$registerNavigateTypeSupport(handle);\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$getNavigateToItems(handle: number, search: string): TPromise<ITypeBearing[]> {\n\t\treturn this._withAdapter(handle, NavigateTypeAdapter, adapter => adapter.getNavigateToItems(search));\n\t}\n\n\t// --- rename\n\n\tregisterRenameProvider(selector: vscode.DocumentSelector, provider: vscode.RenameProvider): vscode.Disposable {\n\t\tconst handle = this._nextHandle();\n\t\tthis._adapter[handle] = new RenameAdapter(this._documents, provider);\n\t\tthis._proxy.$registerRenameSupport(handle, selector);\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$rename(handle: number, resource: URI, position: IPosition, newName: string): TPromise<modes.IRenameResult> {\n\t\treturn this._withAdapter(handle, RenameAdapter, adapter => adapter.rename(resource, position, newName));\n\t}\n\n\t// --- suggestion\n\n\tregisterCompletionItemProvider(selector: vscode.DocumentSelector, provider: vscode.CompletionItemProvider, triggerCharacters: string[]): vscode.Disposable {\n\t\tconst handle = this._nextHandle();\n\t\tthis._adapter[handle] = new SuggestAdapter(this._documents, provider);\n\t\tthis._proxy.$registerSuggestSupport(handle, selector, triggerCharacters);\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$suggest(handle: number, resource: URI, position: IPosition): TPromise<modes.ISuggestResult[]> {\n\t\treturn this._withAdapter(handle, SuggestAdapter, adapter => adapter.suggest(resource, position));\n\t}\n\n\t$getSuggestionDetails(handle: number, resource: URI, position: IPosition, suggestion: modes.ISuggestion): TPromise<modes.ISuggestion> {\n\t\treturn this._withAdapter(handle, SuggestAdapter, adapter => adapter.getSuggestionDetails(resource, position, suggestion));\n\t}\n\n\t// --- parameter hints\n\n\tregisterSignatureHelpProvider(selector: vscode.DocumentSelector, provider: vscode.SignatureHelpProvider, triggerCharacters: string[]): vscode.Disposable {\n\t\tconst handle = this._nextHandle();\n\t\tthis._adapter[handle] = new ParameterHintsAdapter(this._documents, provider);\n\t\tthis._proxy.$registerParameterHintsSupport(handle, selector, triggerCharacters);\n\t\treturn this._createDisposable(handle);\n\t}\n\n\t$getParameterHints(handle: number, resource: URI, position: IPosition, triggerCharacter?: string): TPromise<modes.IParameterHints> {\n\t\treturn this._withAdapter(handle, ParameterHintsAdapter, adapter => adapter.getParameterHints(resource, position, triggerCharacter));\n\t}\n}\n\n@Remotable.MainContext('MainThreadLanguageFeatures')\nexport class MainThreadLanguageFeatures {\n\n\tprivate _proxy: ExtHostLanguageFeatures;\n\tprivate _markerService: IMarkerService;\n\tprivate _registrations: { [handle: number]: IDisposable; } = Object.create(null);\n\n\tconstructor( @IThreadService threadService: IThreadService, @IMarkerService markerService: IMarkerService) {\n\t\tthis._proxy = threadService.getRemotable(ExtHostLanguageFeatures);\n\t\tthis._markerService = markerService;\n\t}\n\n\t$unregister(handle: number): TPromise<any> {\n\t\tlet registration = this._registrations[handle];\n\t\tif (registration) {\n\t\t\tregistration.dispose();\n\t\t\tdelete this._registrations[handle];\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t// --- outline\n\n\t$registerOutlineSupport(handle: number, selector: vscode.DocumentSelector): TPromise<any> {\n\t\tthis._registrations[handle] = OutlineRegistry.register(selector, <IOutlineSupport>{\n\t\t\tgetOutline: (resource: URI): TPromise<IOutlineEntry[]> => {\n\t\t\t\treturn this._proxy.$getOutline(handle, resource);\n\t\t\t}\n\t\t});\n\t\treturn undefined;\n\t}\n\n\t// --- code lens\n\n\t$registerCodeLensSupport(handle: number, selector: vscode.DocumentSelector): TPromise<any> {\n\t\tthis._registrations[handle] = CodeLensRegistry.register(selector, <modes.ICodeLensSupport>{\n\t\t\tfindCodeLensSymbols: (resource: URI): TPromise<modes.ICodeLensSymbol[]> => {\n\t\t\t\treturn this._proxy.$findCodeLensSymbols(handle, resource);\n\t\t\t},\n\t\t\tresolveCodeLensSymbol: (resource: URI, symbol: modes.ICodeLensSymbol): TPromise<modes.ICodeLensSymbol> => {\n\t\t\t\treturn this._proxy.$resolveCodeLensSymbol(handle, resource, symbol);\n\t\t\t}\n\t\t});\n\t\treturn undefined;\n\t}\n\n\t// --- declaration\n\n\t$registerDeclaractionSupport(handle: number, selector: vscode.DocumentSelector): TPromise<any> {\n\t\tthis._registrations[handle] = DeclarationRegistry.register(selector, <modes.IDeclarationSupport>{\n\t\t\tcanFindDeclaration() {\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tfindDeclaration: (resource: URI, position: IPosition): TPromise<modes.IReference[]> => {\n\t\t\t\treturn this._proxy.$findDeclaration(handle, resource, position);\n\t\t\t}\n\t\t});\n\t\treturn undefined;\n\t}\n\n\t// --- extra info\n\n\t$registerExtraInfoSupport(handle: number, selector: vscode.DocumentSelector): TPromise<any> {\n\t\tthis._registrations[handle] = ExtraInfoRegistry.register(selector, <modes.IExtraInfoSupport>{\n\t\t\tcomputeInfo: (resource: URI, position: IPosition): TPromise<modes.IComputeExtraInfoResult> => {\n\t\t\t\treturn this._proxy.$computeInfo(handle, resource, position);\n\t\t\t}\n\t\t});\n\t\treturn undefined;\n\t}\n\n\t// --- occurrences\n\n\t$registerOccurrencesSupport(handle: number, selector: vscode.DocumentSelector): TPromise<any> {\n\t\tthis._registrations[handle] = OccurrencesRegistry.register(selector, <modes.IOccurrencesSupport>{\n\t\t\tfindOccurrences: (resource: URI, position: IPosition): TPromise<modes.IOccurence[]> => {\n\t\t\t\treturn this._proxy.$findOccurrences(handle, resource, position);\n\t\t\t}\n\t\t});\n\t\treturn undefined;\n\t}\n\n\t// --- references\n\n\t$registerReferenceSupport(handle: number, selector: vscode.DocumentSelector): TPromise<any> {\n\t\tthis._registrations[handle] = ReferenceRegistry.register(selector, <modes.IReferenceSupport>{\n\t\t\tcanFindReferences() {\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tfindReferences: (resource: URI, position: IPosition, includeDeclaration: boolean): TPromise<modes.IReference[]> => {\n\t\t\t\treturn this._proxy.$findReferences(handle, resource, position, includeDeclaration);\n\t\t\t}\n\t\t});\n\t\treturn undefined;\n\t}\n\n\t// --- quick fix\n\n\t$registerQuickFixSupport(handle: number, selector: vscode.DocumentSelector): TPromise<any> {\n\t\tthis._registrations[handle] = QuickFixRegistry.register(selector, <modes.IQuickFixSupport>{\n\t\t\tgetQuickFixes: (resource: URI, range: IRange): TPromise<modes.IQuickFix[]> => {\n\t\t\t\tlet markers: IMarker[] = [];\n\t\t\t\tthis._markerService.read({ resource }).forEach(marker => {\n\t\t\t\t\tif (EditorRange.lift(marker).intersectRanges(range)) {\n\t\t\t\t\t\tmarkers.push(marker);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn this._proxy.$getQuickFixes(handle, resource, range, markers);\n\t\t\t},\n\t\t\trunQuickFixAction: (resource: URI, range: IRange, quickFix: modes.IQuickFix) => {\n\t\t\t\treturn this._proxy.$runQuickFixAction(handle, resource, range, quickFix);\n\t\t\t}\n\t\t});\n\t\treturn undefined;\n\t}\n\n\t// --- formatting\n\n\t$registerDocumentFormattingSupport(handle: number, selector: vscode.DocumentSelector): TPromise<any> {\n\t\tthis._registrations[handle] = FormatRegistry.register(selector, <modes.IFormattingSupport>{\n\t\t\tformatDocument: (resource: URI, options: modes.IFormattingOptions): TPromise <ISingleEditOperation[] > => {\n\t\t\t\treturn this._proxy.$formatDocument(handle, resource, options);\n\t\t\t}\n\t\t});\n\t\treturn undefined;\n\t}\n\n\t$registerRangeFormattingSupport(handle: number, selector: vscode.DocumentSelector): TPromise<any> {\n\t\tthis._registrations[handle] = FormatRegistry.register(selector, <modes.IFormattingSupport>{\n\t\t\tformatRange: (resource: URI, range: IRange, options: modes.IFormattingOptions): TPromise <ISingleEditOperation[] > => {\n\t\t\t\treturn this._proxy.$formatRange(handle, resource, range, options);\n\t\t\t}\n\t\t});\n\t\treturn undefined;\n\t}\n\n\t$registerOnTypeFormattingSupport(handle: number, selector: vscode.DocumentSelector, autoFormatTriggerCharacters: string[]): TPromise<any> {\n\t\tthis._registrations[handle] = FormatOnTypeRegistry.register(selector, <modes.IFormattingSupport>{\n\n\t\t\tautoFormatTriggerCharacters,\n\n\t\t\tformatAfterKeystroke: (resource: URI, position: IPosition, ch: string, options: modes.IFormattingOptions): TPromise<ISingleEditOperation[]> => {\n\t\t\t\treturn this._proxy.$formatAfterKeystroke(handle, resource, position, ch, options);\n\t\t\t}\n\t\t});\n\t\treturn undefined;\n\t}\n\n\t// --- navigate type\n\n\t$registerNavigateTypeSupport(handle: number): TPromise<any> {\n\t\tthis._registrations[handle] = NavigateTypesSupportRegistry.register(<INavigateTypesSupport>{\n\t\t\tgetNavigateToItems: (search: string): TPromise<ITypeBearing[]> => {\n\t\t\t\treturn this._proxy.$getNavigateToItems(handle, search);\n\t\t\t}\n\t\t});\n\t\treturn undefined;\n\t}\n\n\t// --- rename\n\n\t$registerRenameSupport(handle: number, selector: vscode.DocumentSelector): TPromise<any> {\n\t\tthis._registrations[handle] = RenameRegistry.register(selector, <modes.IRenameSupport>{\n\t\t\trename: (resource: URI, position: IPosition, newName: string): TPromise<modes.IRenameResult> => {\n\t\t\t\treturn this._proxy.$rename(handle, resource, position, newName);\n\t\t\t}\n\t\t});\n\t\treturn undefined;\n\t}\n\n\t// --- suggest\n\n\t$registerSuggestSupport(handle: number, selector: vscode.DocumentSelector, triggerCharacters: string[]): TPromise<any> {\n\t\tthis._registrations[handle] = SuggestRegistry.register(selector, <modes.ISuggestSupport>{\n\t\t\tsuggest: (resource: URI, position: IPosition, triggerCharacter?: string): TPromise<modes.ISuggestResult[]> => {\n\t\t\t\treturn this._proxy.$suggest(handle, resource, position);\n\t\t\t},\n\t\t\tgetSuggestionDetails: (resource: URI, position: IPosition, suggestion: modes.ISuggestion): TPromise<modes.ISuggestion> => {\n\t\t\t\treturn this._proxy.$getSuggestionDetails(handle, resource, position, suggestion);\n\t\t\t},\n\t\t\tgetFilter() {\n\t\t\t\treturn DefaultFilter;\n\t\t\t},\n\t\t\tgetTriggerCharacters(): string[] {\n\t\t\t\treturn triggerCharacters;\n\t\t\t},\n\t\t\tshouldShowEmptySuggestionList(): boolean {\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tshouldAutotriggerSuggest(): boolean {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t\treturn undefined;\n\t}\n\n\t// --- parameter hints\n\n\t$registerParameterHintsSupport(handle: number, selector: vscode.DocumentSelector, triggerCharacter: string[]): TPromise<any> {\n\t\tthis._registrations[handle] = ParameterHintsRegistry.register(selector, <modes.IParameterHintsSupport>{\n\t\t\tgetParameterHints: (resource: URI, position: IPosition, triggerCharacter?: string): TPromise<modes.IParameterHints> => {\n\t\t\t\treturn this._proxy.$getParameterHints(handle, resource, position, triggerCharacter);\n\t\t\t},\n\t\t\tgetParameterHintsTriggerCharacters(): string[] {\n\t\t\t\treturn triggerCharacter;\n\t\t\t},\n\t\t\tshouldTriggerParameterHints(context: modes.ILineContext, offset: number): boolean {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t\treturn undefined;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {MainInplaceReplaceSupport, ReplaceSupport, IBracketElectricCharacterContribution} from 'vs/editor/common/modes/supports';\nimport {score} from 'vs/editor/common/modes/languageSelector';\nimport {Remotable, IThreadService} from 'vs/platform/thread/common/thread';\nimport * as errors from 'vs/base/common/errors';\nimport {PluginHostFileSystemEventService} from 'vs/workbench/api/common/pluginHostFileSystemEventService';\nimport {PluginHostModelService, setWordDefinitionFor} from 'vs/workbench/api/common/pluginHostDocuments';\nimport {PluginHostConfiguration} from 'vs/workbench/api/common/pluginHostConfiguration';\nimport {PluginHostDiagnostics} from 'vs/workbench/api/common/pluginHostDiagnostics';\nimport {PluginHostWorkspace} from 'vs/workbench/api/common/pluginHostWorkspace';\nimport {PluginHostQuickOpen} from 'vs/workbench/api/browser/pluginHostQuickOpen';\nimport {PluginHostStatusBar} from 'vs/workbench/api/browser/pluginHostStatusBar';\nimport {PluginHostCommands} from 'vs/workbench/api/common/pluginHostCommands';\nimport {ExtHostOutputService} from 'vs/workbench/api/common/extHostOutputService';\nimport {PluginHostMessageService} from 'vs/workbench/api/common/pluginHostMessageService';\nimport {PluginHostTelemetryService} from 'vs/workbench/api/common/pluginHostTelemetry';\nimport {PluginHostEditors} from 'vs/workbench/api/common/pluginHostEditors';\nimport {ExtHostLanguages} from 'vs/workbench/api/common/extHostLanguages';\nimport {ExtHostLanguageFeatures} from 'vs/workbench/api/common/extHostLanguageFeatures';\nimport {ExtHostApiCommands} from 'vs/workbench/api/common/extHostApiCommands';\nimport * as extHostTypes from 'vs/workbench/api/common/pluginHostTypes';\nimport 'vs/workbench/api/common/pluginHostTypes.marshalling';\nimport {wrapAsWinJSPromise} from 'vs/base/common/async';\nimport Modes = require('vs/editor/common/modes');\nimport {IModelService} from 'vs/editor/common/services/modelService';\nimport {IModeService} from 'vs/editor/common/services/modeService';\nimport {IDeclarationContribution, ISuggestContribution, IReferenceContribution, ICommentsSupportContribution, ITokenTypeClassificationSupportContribution} from 'vs/editor/common/modes/supports';\nimport {IOnEnterSupportOptions} from 'vs/editor/common/modes/supports/onEnter';\nimport URI from 'vs/base/common/uri';\nimport Severity from 'vs/base/common/severity';\nimport {IDisposable} from 'vs/base/common/lifecycle';\nimport EditorCommon = require('vs/editor/common/editorCommon');\nimport {IPluginService, IPluginDescription} from 'vs/platform/plugins/common/plugins';\nimport {PluginsRegistry} from 'vs/platform/plugins/common/pluginsRegistry';\nimport {relative} from 'path';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport * as TypeConverters from 'vs/workbench/api/common/pluginHostTypeConverters';\nimport {IWorkspaceContextService} from 'vs/platform/workspace/common/workspace';\nimport {CancellationTokenSource} from 'vs/base/common/cancellation';\nimport vscode = require('vscode');\nimport {TextEditorRevealType} from 'vs/workbench/api/common/mainThreadEditors';\nimport * as paths from 'vs/base/common/paths';\n\n/**\n * This class implements the API described in vscode.d.ts,\n * for the case of the extensionHost host process\n */\nexport class PluginHostAPIImplementation {\n\n\tprivate static _LAST_REGISTER_TOKEN = 0;\n\tprivate static generateDisposeToken(): string {\n\t\treturn String(++PluginHostAPIImplementation._LAST_REGISTER_TOKEN);\n\t}\n\n\tprivate _threadService: IThreadService;\n\tprivate _proxy: MainProcessVSCodeAPIHelper;\n\tprivate _pluginService: IPluginService;\n\n\tversion: typeof vscode.version;\n\tUri: typeof vscode.Uri;\n\tLocation: typeof vscode.Location;\n\tDiagnostic: typeof vscode.Diagnostic;\n\tDiagnosticSeverity: typeof vscode.DiagnosticSeverity;\n\tDisposable: typeof vscode.Disposable;\n\tTextEdit: typeof vscode.TextEdit;\n\tWorkspaceEdit: typeof vscode.WorkspaceEdit;\n\tViewColumn: typeof vscode.ViewColumn;\n\tStatusBarAlignment: typeof vscode.StatusBarAlignment;\n\tPosition: typeof vscode.Position;\n\tRange: typeof vscode.Range;\n\tSelection: typeof vscode.Selection;\n\tCancellationTokenSource: typeof vscode.CancellationTokenSource;\n\tHover: typeof vscode.Hover;\n\tDocumentHighlightKind: typeof vscode.DocumentHighlightKind;\n\tDocumentHighlight: typeof vscode.DocumentHighlight;\n\tSymbolKind: typeof vscode.SymbolKind;\n\tSymbolInformation: typeof vscode.SymbolInformation;\n\tCodeLens: typeof vscode.CodeLens;\n\tParameterInformation: typeof vscode.ParameterInformation;\n\tSignatureInformation: typeof vscode.SignatureInformation;\n\tSignatureHelp: typeof vscode.SignatureHelp;\n\tCompletionItem: typeof vscode.CompletionItem;\n\tCompletionItemKind: typeof vscode.CompletionItemKind;\n\tIndentAction: typeof vscode.IndentAction;\n\tOverviewRulerLane: typeof vscode.OverviewRulerLane;\n\tTextEditorRevealType: typeof vscode.TextEditorRevealType;\n\tcommands: typeof vscode.commands;\n\twindow: typeof vscode.window;\n\tworkspace: typeof vscode.workspace;\n\tlanguages: typeof vscode.languages;\n\textensions: typeof vscode.extensions;\n\n\tconstructor(\n\t\t@IThreadService threadService: IThreadService,\n\t\t@IPluginService pluginService: IPluginService,\n\t\t@IWorkspaceContextService contextService: IWorkspaceContextService\n\t) {\n\t\tthis._pluginService = pluginService;\n\t\tthis._threadService = threadService;\n\t\tthis._proxy = threadService.getRemotable(MainProcessVSCodeAPIHelper);\n\n\t\tthis.version = contextService.getConfiguration().env.version;\n\t\tthis.Uri = URI;\n\t\tthis.Location = extHostTypes.Location;\n\t\tthis.Diagnostic = <any> extHostTypes.Diagnostic;\n\t\tthis.DiagnosticSeverity = <any> extHostTypes.DiagnosticSeverity;\n\t\tthis.Disposable = extHostTypes.Disposable;\n\t\tthis.TextEdit = extHostTypes.TextEdit;\n\t\tthis.WorkspaceEdit = extHostTypes.WorkspaceEdit;\n\t\tthis.Position = extHostTypes.Position;\n\t\tthis.Range = extHostTypes.Range;\n\t\tthis.Selection = extHostTypes.Selection;\n\t\tthis.CancellationTokenSource = CancellationTokenSource;\n\t\tthis.Hover = extHostTypes.Hover;\n\t\tthis.SymbolKind = <any>extHostTypes.SymbolKind;\n\t\tthis.SymbolInformation = <any>extHostTypes.SymbolInformation;\n\t\tthis.DocumentHighlightKind = <any>extHostTypes.DocumentHighlightKind;\n\t\tthis.DocumentHighlight = <any>extHostTypes.DocumentHighlight;\n\t\tthis.CodeLens = extHostTypes.CodeLens;\n\t\tthis.ParameterInformation = extHostTypes.ParameterInformation;\n\t\tthis.SignatureInformation = extHostTypes.SignatureInformation;\n\t\tthis.SignatureHelp = extHostTypes.SignatureHelp;\n\t\tthis.CompletionItem = <any>extHostTypes.CompletionItem;\n\t\tthis.CompletionItemKind = <any>extHostTypes.CompletionItemKind;\n\t\tthis.ViewColumn = <any>extHostTypes.ViewColumn;\n\t\tthis.StatusBarAlignment = <any>extHostTypes.StatusBarAlignment;\n\t\tthis.IndentAction = <any>Modes.IndentAction;\n\t\tthis.OverviewRulerLane = <any>EditorCommon.OverviewRulerLane;\n\t\tthis.TextEditorRevealType = <any>TextEditorRevealType;\n\n\t\terrors.setUnexpectedErrorHandler((err) => {\n\t\t\tthis._proxy.onUnexpectedPluginHostError(errors.transformErrorForSerialization(err));\n\t\t});\n\n\t\tconst pluginHostCommands = this._threadService.getRemotable(PluginHostCommands);\n\t\tthis.commands = {\n\t\t\tregisterCommand<T>(id: string, command: <T>(...args: any[]) => T | Thenable<T>, thisArgs?: any): vscode.Disposable {\n\t\t\t\treturn pluginHostCommands.registerCommand(id, command, thisArgs);\n\t\t\t},\n\t\t\tregisterTextEditorCommand(commandId: string, callback: (textEditor: vscode.TextEditor, edit: vscode.TextEditorEdit) => void, thisArg?: any): vscode.Disposable {\n\t\t\t\treturn pluginHostCommands.registerTextEditorCommand(commandId, callback, thisArg);\n\t\t\t},\n\t\t\texecuteCommand<T>(id: string, ...args: any[]): Thenable<T> {\n\t\t\t\treturn pluginHostCommands.executeCommand(id, args);\n\t\t\t},\n\t\t\tgetCommands(filterInternal: boolean = false):Thenable<string[]> {\n\t\t\t\treturn pluginHostCommands.getCommands(filterInternal);\n\t\t\t}\n\t\t};\n\n\t\tconst pluginHostEditors = this._threadService.getRemotable(PluginHostEditors);\n\t\tconst pluginHostMessageService = new PluginHostMessageService(this._threadService, this.commands);\n\t\tconst pluginHostQuickOpen = new PluginHostQuickOpen(this._threadService);\n\t\tconst pluginHostStatusBar = new PluginHostStatusBar(this._threadService);\n\t\tconst pluginHostTelemetryService = new PluginHostTelemetryService(threadService);\n\t\tconst extHostOutputService = new ExtHostOutputService(this._threadService);\n\t\tthis.window = {\n\t\t\tget activeTextEditor() {\n\t\t\t\treturn pluginHostEditors.getActiveTextEditor();\n\t\t\t},\n\t\t\tget visibleTextEditors() {\n\t\t\t\treturn pluginHostEditors.getVisibleTextEditors();\n\t\t\t},\n\t\t\tshowTextDocument(document: vscode.TextDocument, column: vscode.ViewColumn): TPromise<vscode.TextEditor> {\n\t\t\t\treturn pluginHostEditors.showTextDocument(document, column);\n\t\t\t},\n\t\t\tcreateTextEditorDecorationType(options:vscode.DecorationRenderOptions): vscode.TextEditorDecorationType {\n\t\t\t\treturn pluginHostEditors.createTextEditorDecorationType(options);\n\t\t\t},\n\t\t\tonDidChangeActiveTextEditor: pluginHostEditors.onDidChangeActiveTextEditor.bind(pluginHostEditors),\n\t\t\tonDidChangeTextEditorSelection: (listener: (e: vscode.TextEditorSelectionChangeEvent) => any, thisArgs?: any, disposables?: extHostTypes.Disposable[]) => {\n\t\t\t\treturn pluginHostEditors.onDidChangeTextEditorSelection(listener, thisArgs, disposables);\n\t\t\t},\n\t\t\tonDidChangeTextEditorOptions: (listener: (e: vscode.TextEditorOptionsChangeEvent) => any, thisArgs?: any, disposables?: extHostTypes.Disposable[]) => {\n\t\t\t\treturn pluginHostEditors.onDidChangeTextEditorOptions(listener, thisArgs, disposables);\n\t\t\t},\n\t\t\tshowInformationMessage: (message, ...items) => {\n\t\t\t\treturn pluginHostMessageService.showMessage(Severity.Info, message, items);\n\t\t\t},\n\t\t\tshowWarningMessage: (message, ...items) => {\n\t\t\t\treturn pluginHostMessageService.showMessage(Severity.Warning, message, items);\n\t\t\t},\n\t\t\tshowErrorMessage: (message, ...items) => {\n\t\t\t\treturn pluginHostMessageService.showMessage(Severity.Error, message, items);\n\t\t\t},\n\t\t\tshowQuickPick: (items: any, options: vscode.QuickPickOptions) => {\n\t\t\t\treturn pluginHostQuickOpen.show(items, options);\n\t\t\t},\n\t\t\tshowInputBox: pluginHostQuickOpen.input.bind(pluginHostQuickOpen),\n\n\t\t\tcreateStatusBarItem(position?: vscode.StatusBarAlignment, priority?: number): vscode.StatusBarItem {\n\t\t\t\treturn pluginHostStatusBar.createStatusBarEntry(<number>position, priority);\n\t\t\t},\n\t\t\tsetStatusBarMessage(text: string, timeoutOrThenable?: number | Thenable<any>): vscode.Disposable {\n\t\t\t\treturn pluginHostStatusBar.setStatusBarMessage(text, timeoutOrThenable);\n\t\t\t},\n\t\t\tcreateOutputChannel(name: string): vscode.OutputChannel {\n\t\t\t\treturn extHostOutputService.createOutputChannel(name);\n\t\t\t}\n\t\t};\n\n\t\t//\n\t\tconst workspacePath = contextService.getWorkspace() ? contextService.getWorkspace().resource.fsPath : undefined;\n\t\tconst pluginHostFileSystemEvent = threadService.getRemotable(PluginHostFileSystemEventService);\n\t\tconst pluginHostWorkspace = new PluginHostWorkspace(this._threadService, workspacePath);\n\t\tconst pluginHostDocuments = this._threadService.getRemotable(PluginHostModelService);\n\t\tthis.workspace = Object.freeze({\n\t\t\tget rootPath() {\n\t\t\t\treturn pluginHostWorkspace.getPath();\n\t\t\t},\n\t\t\tset rootPath(value) {\n\t\t\t\tthrow errors.readonly();\n\t\t\t},\n\t\t\tasRelativePath: (pathOrUri) => {\n\t\t\t\treturn pluginHostWorkspace.getRelativePath(pathOrUri);\n\t\t\t},\n\t\t\tfindFiles: (include, exclude, maxResults?) => {\n\t\t\t\treturn pluginHostWorkspace.findFiles(include, exclude, maxResults);\n\t\t\t},\n\t\t\tsaveAll: (includeUntitled?) => {\n\t\t\t\treturn pluginHostWorkspace.saveAll(includeUntitled);\n\t\t\t},\n\t\t\tapplyEdit(edit: vscode.WorkspaceEdit): TPromise<boolean> {\n\t\t\t\treturn pluginHostWorkspace.appyEdit(edit);\n\t\t\t},\n\t\t\tcreateFileSystemWatcher: (pattern, ignoreCreate, ignoreChange, ignoreDelete): vscode.FileSystemWatcher => {\n\t\t\t\treturn pluginHostFileSystemEvent.createFileSystemWatcher(pattern, ignoreCreate, ignoreChange, ignoreDelete);\n\t\t\t},\n\t\t\tget textDocuments() {\n\t\t\t\treturn pluginHostDocuments.getDocuments();\n\t\t\t},\n\t\t\tset textDocuments(value) {\n\t\t\t\tthrow errors.readonly();\n\t\t\t},\n\t\t\t// createTextDocument(text: string, fileName?: string, language?: string): Thenable<vscode.TextDocument> {\n\t\t\t// \treturn pluginHostDocuments.createDocument(text, fileName, language);\n\t\t\t// },\n\t\t\topenTextDocument(uriOrFileName:vscode.Uri | string) {\n\t\t\t\treturn pluginHostDocuments.openDocument(uriOrFileName);\n\t\t\t},\n\t\t\tonDidOpenTextDocument: (listener, thisArgs?, disposables?) => {\n\t\t\t\treturn pluginHostDocuments.onDidAddDocument(listener, thisArgs, disposables);\n\t\t\t},\n\t\t\tonDidCloseTextDocument: (listener, thisArgs?, disposables?) => {\n\t\t\t\treturn pluginHostDocuments.onDidRemoveDocument(listener, thisArgs, disposables);\n\t\t\t},\n\t\t\tonDidChangeTextDocument: (listener, thisArgs?, disposables?) => {\n\t\t\t\treturn pluginHostDocuments.onDidChangeDocument(listener, thisArgs, disposables);\n\t\t\t},\n\t\t\tonDidSaveTextDocument: (listener, thisArgs?, disposables?) => {\n\t\t\t\treturn pluginHostDocuments.onDidSaveDocument(listener, thisArgs, disposables);\n\t\t\t},\n\t\t\tonDidChangeConfiguration: (listener: () => any, thisArgs?: any, disposables?: extHostTypes.Disposable[]) => {\n\t\t\t\treturn pluginHostConfiguration.onDidChangeConfiguration(listener, thisArgs, disposables);\n\t\t\t},\n\t\t\tgetConfiguration: (section?: string):vscode.WorkspaceConfiguration => {\n\t\t\t\treturn pluginHostConfiguration.getConfiguration(section);\n\t\t\t}\n\t\t});\n\n\t\t//\n\t\tconst languages = new ExtHostLanguages(this._threadService);\n\t\tconst pluginHostDiagnostics = new PluginHostDiagnostics(this._threadService);\n\t\tconst languageFeatures = threadService.getRemotable(ExtHostLanguageFeatures);\n\t\tconst languageFeatureCommand = new ExtHostApiCommands(threadService.getRemotable(PluginHostCommands));\n\n\t\tthis.languages = {\n\t\t\tcreateDiagnosticCollection(name?: string): vscode.DiagnosticCollection {\n\t\t\t\treturn pluginHostDiagnostics.createDiagnosticCollection(name);\n\t\t\t},\n\t\t\tgetLanguages(): TPromise<string[]> {\n\t\t\t\treturn languages.getLanguages();\n\t\t\t},\n\t\t\tmatch(selector: vscode.DocumentSelector, document: vscode.TextDocument): number {\n\t\t\t\treturn score(selector, <any> document.uri, document.languageId);\n\t\t\t},\n\t\t\tregisterCodeActionsProvider(selector: vscode.DocumentSelector, provider: vscode.CodeActionProvider): vscode.Disposable {\n\t\t\t\treturn languageFeatures.registerCodeActionProvider(selector, provider);\n\t\t\t},\n\t\t\tregisterCodeLensProvider(selector: vscode.DocumentSelector, provider: vscode.CodeLensProvider): vscode.Disposable {\n\t\t\t\treturn languageFeatures.registerCodeLensProvider(selector, provider);\n\t\t\t},\n\t\t\tregisterDefinitionProvider(selector: vscode.DocumentSelector, provider: vscode.DefinitionProvider): vscode.Disposable {\n\t\t\t\treturn languageFeatures.registerDefinitionProvider(selector, provider);\n\t\t\t},\n\t\t\tregisterHoverProvider(selector: vscode.DocumentSelector, provider: vscode.HoverProvider): vscode.Disposable {\n\t\t\t\treturn languageFeatures.registerHoverProvider(selector, provider);\n\t\t\t},\n\t\t\tregisterDocumentHighlightProvider(selector: vscode.DocumentSelector, provider: vscode.DocumentHighlightProvider): vscode.Disposable {\n\t\t\t\treturn languageFeatures.registerDocumentHighlightProvider(selector, provider);\n\t\t\t},\n\t\t\tregisterReferenceProvider(selector: vscode.DocumentSelector, provider: vscode.ReferenceProvider): vscode.Disposable {\n\t\t\t\treturn languageFeatures.registerReferenceProvider(selector, provider);\n\t\t\t},\n\t\t\tregisterRenameProvider(selector: vscode.DocumentSelector, provider: vscode.RenameProvider): vscode.Disposable {\n\t\t\t\treturn languageFeatures.registerRenameProvider(selector, provider);\n\t\t\t},\n\t\t\tregisterDocumentSymbolProvider(selector: vscode.DocumentSelector, provider: vscode.DocumentSymbolProvider): vscode.Disposable {\n\t\t\t\treturn languageFeatures.registerDocumentSymbolProvider(selector, provider);\n\t\t\t},\n\t\t\tregisterWorkspaceSymbolProvider(provider: vscode.WorkspaceSymbolProvider): vscode.Disposable {\n\t\t\t\treturn languageFeatures.registerWorkspaceSymbolProvider(provider);\n\t\t\t},\n\t\t\tregisterDocumentFormattingEditProvider(selector: vscode.DocumentSelector, provider: vscode.DocumentFormattingEditProvider): vscode.Disposable {\n\t\t\t\treturn languageFeatures.registerDocumentFormattingEditProvider(selector, provider);\n\t\t\t},\n\t\t\tregisterDocumentRangeFormattingEditProvider(selector: vscode.DocumentSelector, provider: vscode.DocumentRangeFormattingEditProvider): vscode.Disposable {\n\t\t\t\treturn languageFeatures.registerDocumentRangeFormattingEditProvider(selector, provider);\n\t\t\t},\n\t\t\tregisterOnTypeFormattingEditProvider(selector: vscode.DocumentSelector, provider: vscode.OnTypeFormattingEditProvider, firstTriggerCharacter: string, ...moreTriggerCharacters: string[]): vscode.Disposable {\n\t\t\t\treturn languageFeatures.registerOnTypeFormattingEditProvider(selector, provider, [firstTriggerCharacter].concat(moreTriggerCharacters));\n\t\t\t},\n\t\t\tregisterSignatureHelpProvider(selector: vscode.DocumentSelector, provider: vscode.SignatureHelpProvider, ...triggerCharacters: string[]): vscode.Disposable {\n\t\t\t\treturn languageFeatures.registerSignatureHelpProvider(selector, provider, triggerCharacters);\n\t\t\t},\n\t\t\tregisterCompletionItemProvider(selector: vscode.DocumentSelector, provider: vscode.CompletionItemProvider, ...triggerCharacters: string[]): vscode.Disposable {\n\t\t\t\treturn languageFeatures.registerCompletionItemProvider(selector, provider, triggerCharacters);\n\t\t\t},\n\t\t\tsetLanguageConfiguration: (language: string, configuration: vscode.LanguageConfiguration):vscode.Disposable => {\n\t\t\t\treturn this._setLanguageConfiguration(language, configuration);\n\t\t\t}\n\t\t};\n\n\t\tvar pluginHostConfiguration = threadService.getRemotable(PluginHostConfiguration);\n\n\t\t//\n\t\tthis.extensions = {\n\t\t\tgetExtension(extensionId: string):Extension<any> {\n\t\t\t\tlet desc = PluginsRegistry.getPluginDescription(extensionId);\n\t\t\t\tif (desc) {\n\t\t\t\t\treturn new Extension(pluginService, desc);\n\t\t\t\t}\n\t\t\t},\n\t\t\tget all():Extension<any>[] {\n\t\t\t\treturn PluginsRegistry.getAllPluginDescriptions().map((desc) => new Extension(pluginService, desc));\n\t\t\t}\n\t\t\t// getTelemetryInfo: pluginHostTelemetryService.getTelemetryInfo.bind(pluginHostTelemetryService)\n\t\t}\n\n\t\t// Intentionally calling a function for typechecking purposes\n\t\tdefineAPI(this);\n\t}\n\n\tprivate _disposableFromToken(disposeToken:string): IDisposable {\n\t\treturn new extHostTypes.Disposable(() => this._proxy.disposeByToken(disposeToken));\n\t}\n\n\tprivate _setLanguageConfiguration(modeId: string, configuration: vscode.LanguageConfiguration): vscode.Disposable {\n\n\t\tlet disposables: IDisposable[] = [];\n\t\tlet {comments, wordPattern} = configuration;\n\n\t\t// comment configuration\n\t\tif (comments) {\n\t\t\tlet lineCommentToken = comments.lineComment;\n\n\t\t\tlet contrib: ICommentsSupportContribution = { commentsConfiguration: {} };\n\t\t\tif (comments.lineComment) {\n\t\t\t\tcontrib.commentsConfiguration.lineCommentTokens = [comments.lineComment];\n\t\t\t}\n\t\t\tif (comments.blockComment) {\n\t\t\t\tlet [blockStart, blockEnd] = comments.blockComment;\n\t\t\t\tcontrib.commentsConfiguration.blockCommentStartToken = blockStart;\n\t\t\t\tcontrib.commentsConfiguration.blockCommentEndToken = blockEnd;\n\t\t\t}\n\t\t\tlet d = this.Modes_CommentsSupport_register(modeId, contrib);\n\t\t\tdisposables.push(d);\n\t\t}\n\n\t\t// word definition\n\t\tif (wordPattern) {\n\t\t\tsetWordDefinitionFor(modeId, wordPattern);\n\t\t\tlet d = this.Modes_TokenTypeClassificationSupport_register(modeId, {\n\t\t\t\twordDefinition: wordPattern\n\t\t\t});\n\t\t\tdisposables.push(d);\n\n\t\t} else {\n\t\t\tsetWordDefinitionFor(modeId, null);\n\t\t}\n\n\t\t// on enter\n\t\tlet onEnter: IOnEnterSupportOptions = {};\n\t\tlet empty = true;\n\t\tlet {brackets, indentationRules, onEnterRules} = configuration;\n\n\t\tif (brackets) {\n\t\t\tempty = false;\n\t\t\tonEnter.brackets = brackets.map(pair => {\n\t\t\t\tlet [open, close] = pair;\n\t\t\t\treturn { open, close };\n\t\t\t});\n\t\t}\n\t\tif (indentationRules) {\n\t\t\tempty = false;\n\t\t\tonEnter.indentationRules = indentationRules;\n\t\t}\n\t\tif (onEnterRules) {\n\t\t\tempty = false;\n\t\t\tonEnter.regExpRules = <any>onEnterRules;\n\t\t}\n\n\t\tif (!empty) {\n\t\t\tlet d = this.Modes_OnEnterSupport_register(modeId, onEnter);\n\t\t\tdisposables.push(d);\n\t\t}\n\n\t\tif (configuration.__electricCharacterSupport) {\n\t\t\tdisposables.push(\n\t\t\t\tthis.Modes_ElectricCharacterSupport_register(modeId, configuration.__electricCharacterSupport)\n\t\t\t);\n\t\t}\n\n\t\tif (configuration.__characterPairSupport) {\n\t\t\tdisposables.push(\n\t\t\t\tthis.Modes_CharacterPairSupport_register(modeId, configuration.__characterPairSupport)\n\t\t\t);\n\t\t}\n\n\t\treturn extHostTypes.Disposable.from(...disposables);\n\t}\n\n\tprivate Modes_CommentsSupport_register(modeId: string, commentsSupport: ICommentsSupportContribution): IDisposable {\n\t\tlet disposeToken = PluginHostAPIImplementation.generateDisposeToken();\n\t\tthis._proxy.Modes_CommentsSupport_register(disposeToken, modeId, commentsSupport);\n\t\treturn this._disposableFromToken(disposeToken);\n\t}\n\n\tprivate Modes_TokenTypeClassificationSupport_register(modeId: string, tokenTypeClassificationSupport:ITokenTypeClassificationSupportContribution): IDisposable {\n\t\tlet disposeToken = PluginHostAPIImplementation.generateDisposeToken();\n\t\tthis._proxy.Modes_TokenTypeClassificationSupport_register(disposeToken, modeId, tokenTypeClassificationSupport);\n\t\treturn this._disposableFromToken(disposeToken);\n\t}\n\n\tprivate Modes_ElectricCharacterSupport_register(modeId: string, electricCharacterSupport:IBracketElectricCharacterContribution): IDisposable {\n\t\tlet disposeToken = PluginHostAPIImplementation.generateDisposeToken();\n\t\tthis._proxy.Modes_ElectricCharacterSupport_register(disposeToken, modeId, electricCharacterSupport);\n\t\treturn this._disposableFromToken(disposeToken);\n\t}\n\n\tprivate Modes_CharacterPairSupport_register(modeId: string, characterPairSupport:Modes.ICharacterPairContribution): IDisposable {\n\t\tlet disposeToken = PluginHostAPIImplementation.generateDisposeToken();\n\t\tthis._proxy.Modes_CharacterPairSupport_register(disposeToken, modeId, characterPairSupport);\n\t\treturn this._disposableFromToken(disposeToken);\n\t}\n\n\tprivate Modes_OnEnterSupport_register(modeId: string, opts: IOnEnterSupportOptions): IDisposable {\n\t\tlet disposeToken = PluginHostAPIImplementation.generateDisposeToken();\n\t\tthis._proxy.Modes_OnEnterSupport_register(disposeToken, modeId, opts);\n\t\treturn this._disposableFromToken(disposeToken);\n\t}\n}\n\nclass Extension<T> implements vscode.Extension<T> {\n\n\tprivate _pluginService: IPluginService;\n\n\tpublic id: string;\n\tpublic extensionPath: string;\n\tpublic packageJSON: any;\n\n\tconstructor(pluginService:IPluginService, description:IPluginDescription) {\n\t\tthis._pluginService = pluginService;\n\t\tthis.id = description.id;\n\t\tthis.extensionPath = paths.normalize(description.extensionFolderPath, true);\n\t\tthis.packageJSON = description;\n\t}\n\n\tget isActive(): boolean {\n\t\treturn this._pluginService.isActivated(this.id);\n\t}\n\n\tget exports(): T {\n\t\treturn this._pluginService.get(this.id);\n\t}\n\n\tactivate(): Thenable<T> {\n\t\treturn this._pluginService.activateAndGet<T>(this.id);\n\t}\n}\n\nfunction defineAPI(impl: typeof vscode) {\n\tvar node_module = <any>require.__$__nodeRequire('module');\n\tvar original = node_module._load;\n\tnode_module._load = function load(request, parent, isMain) {\n\t\tif (request === 'vscode') {\n\t\t\treturn impl;\n\t\t}\n\t\treturn original.apply(this, arguments);\n\t};\n\tdefine('vscode', [], impl);\n}\n\n@Remotable.MainContext('MainProcessVSCodeAPIHelper')\nexport class MainProcessVSCodeAPIHelper {\n\tprotected _modeService: IModeService;\n\tprivate _token2Dispose: {\n\t\t[token:string]: IDisposable;\n\t};\n\n\tconstructor(\n\t\t@IModeService modeService: IModeService\n\t) {\n\t\tthis._modeService = modeService;\n\t\tthis._token2Dispose = {};\n\t}\n\n\tpublic onUnexpectedPluginHostError(err: any): void {\n\t\terrors.onUnexpectedError(err);\n\t}\n\n\tpublic disposeByToken(disposeToken:string): void {\n\t\tif (this._token2Dispose[disposeToken]) {\n\t\t\tthis._token2Dispose[disposeToken].dispose();\n\t\t\tdelete this._token2Dispose[disposeToken];\n\t\t}\n\t}\n\n\tpublic Modes_CommentsSupport_register(disposeToken:string, modeId: string, commentsSupport: ICommentsSupportContribution): void {\n\t\tthis._token2Dispose[disposeToken] = this._modeService.registerDeclarativeCommentsSupport(modeId, commentsSupport);\n\t}\n\n\tpublic Modes_TokenTypeClassificationSupport_register(disposeToken:string, modeId: string, tokenTypeClassificationSupport:ITokenTypeClassificationSupportContribution): void {\n\t\tthis._token2Dispose[disposeToken] = this._modeService.registerDeclarativeTokenTypeClassificationSupport(modeId, tokenTypeClassificationSupport);\n\t}\n\n\tpublic Modes_ElectricCharacterSupport_register(disposeToken:string, modeId: string, electricCharacterSupport:IBracketElectricCharacterContribution): void {\n\t\tthis._token2Dispose[disposeToken] = this._modeService.registerDeclarativeElectricCharacterSupport(modeId, electricCharacterSupport);\n\t}\n\n\tpublic Modes_CharacterPairSupport_register(disposeToken:string, modeId: string, characterPairSupport:Modes.ICharacterPairContribution): void {\n\t\tthis._token2Dispose[disposeToken] = this._modeService.registerDeclarativeCharacterPairSupport(modeId, characterPairSupport);\n\t}\n\n\tpublic Modes_OnEnterSupport_register(disposeToken:string, modeId: string, opts:IOnEnterSupportOptions): void {\n\t\tthis._token2Dispose[disposeToken] = this._modeService.registerDeclarativeOnEnterSupport(modeId, <any>opts);\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport types = require('vs/base/common/types');\nimport {IOptions} from 'vs/workbench/common/options';\nimport {EventType, OptionsChangeEvent} from 'vs/workbench/common/events';\nimport {IEventService} from 'vs/platform/event/common/event';\nimport {createDecorator, ServiceIdentifier} from 'vs/platform/instantiation/common/instantiation';\nimport {IWorkspace, IConfiguration, IWorkspaceContextService as IBaseWorkspaceContextService} from 'vs/platform/workspace/common/workspace';\nimport {BaseWorkspaceContextService} from 'vs/platform/workspace/common/baseWorkspaceContextService';\n\nexport var IWorkspaceContextService = createDecorator<IWorkspaceContextService>('contextService');\n\nexport interface IWorkspaceContextService extends IBaseWorkspaceContextService {\n\tserviceId: ServiceIdentifier<any>;\n\n\t/**\n\t * Provides access to the options object the platform is running with.\n\t */\n\tgetOptions(): IOptions;\n\n\t/**\n\t * Update options in the running instance.\n\t */\n\tupdateOptions(key: string, value: any): void;\n\n\t/**\n\t * Convenient way to check if auto save is enabled or not.\n\t */\n\tisAutoSaveEnabled(): boolean;\n}\n\nexport class WorkspaceContextService extends BaseWorkspaceContextService implements IWorkspaceContextService {\n\tpublic serviceId = IWorkspaceContextService;\n\n\tconstructor(\n\t\tprivate eventService: IEventService,\n\t\tworkspace: IWorkspace,\n\t\tconfiguration?: IConfiguration,\n\t\toptions: any = {}\n\t) {\n\t\tsuper(workspace, configuration, options);\n\t}\n\n\tpublic updateOptions(key: string, value: any): void {\n\t\tlet oldValue = this.options[key];\n\t\tthis.options[key] = value;\n\n\t\tthis.eventService.emit(EventType.WORKBENCH_OPTIONS_CHANGED, new OptionsChangeEvent(key, oldValue, value));\n\t}\n\n\tpublic isAutoSaveEnabled(): boolean {\n\t\tlet autoSaveEnabled = true;\n\t\tif (this.options && types.isNumber(this.options.autoSaveDelay)) {\n\t\t\tautoSaveEnabled = (this.options.autoSaveDelay !== -1);\n\t\t}\n\n\t\treturn autoSaveEnabled;\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport nls = require('vs/nls');\nimport * as path from 'path';\nimport { createWriteStream } from 'fs';\nimport { Readable } from 'stream';\nimport { nfcall, ninvoke } from 'vs/base/common/async';\nimport { mkdirp, rimraf } from 'vs/base/node/pfs';\nimport { Promise, TPromise } from 'vs/base/common/winjs.base';\nimport { open as openZip, Entry, ZipFile } from 'yauzl';\n\nexport interface IExtractOptions {\n\toverwrite?: boolean;\n\n\t/**\n\t * Source path within the ZIP archive. Only the files contained in this\n\t * path will be extracted.\n\t */\n\tsourcePath?: string;\n}\n\ninterface IOptions {\n\tsourcePathRegex: RegExp;\n}\n\nfunction modeFromEntry(entry: Entry) {\n\tvar attr = entry.externalFileAttributes >> 16 || 33188;\n\n\treturn [448 /* S_IRWXU */, 56 /* S_IRWXG */, 7 /* S_IRWXO */]\n\t\t.map(mask => attr & mask)\n\t\t.reduce((a, b) => a + b, attr & 61440 /* S_IFMT */);\n}\n\nfunction extractEntry(zipfile: ZipFile, entry: Entry, targetPath: string, options: IOptions): Promise {\n\tconst fileName = entry.fileName.replace(options.sourcePathRegex, '');\n\tconst dirName = path.dirname(fileName);\n\tconst targetDirName = path.join(targetPath, dirName);\n\tconst targetFileName = path.join(targetPath, fileName);\n\tconst mode = modeFromEntry(entry);\n\n\treturn ninvoke(zipfile, zipfile.openReadStream, entry)\n\t\t.then(ostream => mkdirp(targetDirName)\n\t\t\t.then(() => new Promise((c, e) => {\n\t\t\t\tvar istream = createWriteStream(targetFileName, { mode });\n\t\t\t\tistream.once('finish', () => c(null));\n\t\t\t\tistream.once('error', e);\n\t\t\t\tostream.once('error', e);\n\t\t\t\tostream.pipe(istream);\n\t\t\t})));\n}\n\nfunction extractZip(zipfile: ZipFile, targetPath: string, options: IOptions): Promise {\n\treturn new Promise((c, e) => {\n\t\tconst promises: Promise[] = [];\n\n\t\tzipfile.once('error', e);\n\t\tzipfile.on('entry', (entry: Entry) => {\n\t\t\tif (!options.sourcePathRegex.test(entry.fileName)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tpromises.push(extractEntry(zipfile, entry, targetPath, options));\n\t\t});\n\t\tzipfile.once('close', () => Promise.join(promises).done(c, e));\n\t});\n}\n\nexport function extract(zipPath: string, targetPath: string, options: IExtractOptions): Promise {\n\tconst sourcePathRegex = new RegExp(options.sourcePath ? `^${ options.sourcePath }` : '');\n\n\tlet promise = nfcall<ZipFile>(openZip, zipPath);\n\n\tif (options.overwrite) {\n\t\tpromise = promise.then(zipfile => { rimraf(targetPath); return zipfile; });\n\t}\n\n\treturn promise.then(zipfile => extractZip(zipfile, targetPath, { sourcePathRegex }));\n}\n\nfunction read(zipPath: string, filePath: string): TPromise<Readable> {\n\treturn nfcall(openZip, zipPath).then((zipfile: ZipFile) => {\n\t\treturn new TPromise<Readable>((c, e) => {\n\t\t\tzipfile.on('entry', (entry: Entry) => {\n\t\t\t\tif (entry.fileName === filePath) {\n\t\t\t\t\tninvoke<Readable>(zipfile, zipfile.openReadStream, entry).done(stream => c(stream), err => e(err));\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tzipfile.once('close', () => e(new Error(nls.localize('notFound', \"{0} not found inside zip.\", filePath))));\n\t\t});\n\t});\n}\n\nexport function buffer(zipPath: string, filePath: string): TPromise<Buffer> {\n\treturn read(zipPath, filePath).then(stream => {\n\t\treturn new TPromise<Buffer>((c, e) => {\n\t\t\tconst buffers = [];\n\t\t\tstream.once('error', e);\n\t\t\tstream.on('data', b => buffers.push(b));\n\t\t\tstream.on('end', () => c(Buffer.concat(buffers)));\n\t\t});\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport nls = require('vs/nls');\nimport { tmpdir } from 'os';\nimport * as path from 'path';\nimport types = require('vs/base/common/types');\nimport { ServiceEvent } from 'vs/base/common/service';\nimport errors = require('vs/base/common/errors');\nimport * as pfs from 'vs/base/node/pfs';\nimport { assign } from 'vs/base/common/objects';\nimport { flatten } from 'vs/base/common/arrays';\nimport { extract, buffer } from 'vs/base/node/zip';\nimport { Promise, TPromise } from 'vs/base/common/winjs.base';\nimport { IExtensionsService, IExtension, IExtensionManifest, IGalleryInformation } from 'vs/workbench/parts/extensions/common/extensions';\nimport { download } from 'vs/base/node/request';\nimport { getProxyAgent } from 'vs/workbench/node/proxy';\nimport { IWorkspaceContextService } from 'vs/workbench/services/workspace/common/contextService';\nimport { Limiter } from 'vs/base/common/async';\nimport Event, { Emitter } from 'vs/base/common/event';\nimport { UserSettings } from 'vs/workbench/node/userSettings';\nimport * as semver from 'semver';\nimport {groupBy, values} from 'vs/base/common/collections';\n\nfunction parseManifest(raw: string): TPromise<IExtensionManifest> {\n\treturn new Promise((c, e) => {\n\t\ttry {\n\t\t\tc(JSON.parse(raw));\n\t\t} catch (err) {\n\t\t\te(new Error(nls.localize('invalidManifest', \"Extension invalid: package.json is not a JSON file.\")));\n\t\t}\n\t});\n}\n\nfunction validate(zipPath: string, extension?: IExtension): TPromise<IExtension> {\n\treturn buffer(zipPath, 'extension/package.json')\n\t\t.then(buffer => parseManifest(buffer.toString('utf8')))\n\t\t.then(manifest => {\n\t\t\tif (extension) {\n\t\t\t\tif (extension.name !== manifest.name) {\n\t\t\t\t\treturn Promise.wrapError(Error(nls.localize('invalidName', \"Extension invalid: manifest name mismatch.\")));\n\t\t\t\t}\n\n\t\t\t\tif (extension.publisher !== manifest.publisher) {\n\t\t\t\t\treturn Promise.wrapError(Error(nls.localize('invalidPublisher', \"Extension invalid: manifest publisher mismatch.\")));\n\t\t\t\t}\n\n\t\t\t\tif (extension.version !== manifest.version) {\n\t\t\t\t\treturn Promise.wrapError(Error(nls.localize('invalidVersion', \"Extension invalid: manifest version mismatch.\")));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn Promise.as(manifest);\n\t\t});\n}\n\nfunction createExtension(manifest: IExtensionManifest, galleryInformation?: IGalleryInformation, path?: string): IExtension {\n\tconst extension: IExtension = {\n\t\tname: manifest.name,\n\t\tdisplayName: manifest.displayName || manifest.name,\n\t\tpublisher: manifest.publisher,\n\t\tversion: manifest.version,\n\t\tdescription: manifest.description || ''\n\t};\n\n\tif (galleryInformation) {\n\t\textension.galleryInformation = galleryInformation;\n\t}\n\n\tif (path) {\n\t\textension.path = path;\n\t}\n\n\treturn extension;\n}\n\nexport class ExtensionsService implements IExtensionsService {\n\n\tpublic serviceId = IExtensionsService;\n\n\tprivate extensionsPath: string;\n\n\tprivate _onInstallExtension = new Emitter<IExtensionManifest>();\n\t@ServiceEvent onInstallExtension = this._onInstallExtension.event;\n\n\tprivate _onDidInstallExtension = new Emitter<IExtension>();\n\t@ServiceEvent onDidInstallExtension = this._onDidInstallExtension.event;\n\n\tprivate _onUninstallExtension = new Emitter<IExtension>();\n\t@ServiceEvent onUninstallExtension = this._onUninstallExtension.event;\n\n\tprivate _onDidUninstallExtension = new Emitter<IExtension>();\n\t@ServiceEvent onDidUninstallExtension = this._onDidUninstallExtension.event;\n\n\tconstructor(\n\t\t@IWorkspaceContextService private contextService: IWorkspaceContextService\n\t) {\n\t\tconst env = contextService.getConfiguration().env;\n\t\tthis.extensionsPath = env.userPluginsHome;\n\t}\n\n\tpublic install(extension: IExtension): TPromise<IExtension>;\n\tpublic install(zipPath: string): TPromise<IExtension>;\n\tpublic install(arg: any): TPromise<IExtension> {\n\t\tif (types.isString(arg)) {\n\t\t\treturn this.installFromZip(arg);\n\t\t}\n\n\t\treturn this.installFromGallery(arg);\n\t}\n\n\tprivate installFromGallery(extension: IExtension): TPromise<IExtension> {\n\t\tconst galleryInformation = extension.galleryInformation;\n\n\t\tif (!galleryInformation) {\n\t\t\treturn TPromise.wrapError(new Error(nls.localize('missingGalleryInformation', \"Gallery information is missing\")));\n\t\t}\n\n\t\tconst url = galleryInformation.downloadUrl;\n\t\tconst zipPath = path.join(tmpdir(), galleryInformation.id);\n\t\tconst extensionPath = path.join(this.extensionsPath, `${ extension.publisher }.${ extension.name }-${ extension.version }`);\n\t\tconst manifestPath = path.join(extensionPath, 'package.json');\n\n\t\tconst settings = TPromise.join([\n\t\t\tUserSettings.getValue(this.contextService, 'http.proxy'),\n\t\t\tUserSettings.getValue(this.contextService, 'http.proxy.strictSSL')\n\t\t]);\n\n\t\treturn settings\n\t\t\t.then(settings => ({ proxyUrl: settings[0], strictSSL: settings[1] }))\n\t\t\t.then(options => getProxyAgent(url, options))\n\t\t\t.then(agent => download(zipPath, { url, agent }))\n\t\t\t.then(() => validate(zipPath, extension))\n\t\t\t.then(manifest => { this._onInstallExtension.fire(manifest); return manifest; })\n\t\t\t.then(manifest => extract(zipPath, extensionPath, { sourcePath: 'extension', overwrite: true }).then(() => manifest))\n\t\t\t.then(manifest => {\n\t\t\t\tmanifest = assign({ __metadata: galleryInformation }, manifest);\n\t\t\t\treturn pfs.writeFile(manifestPath, JSON.stringify(manifest, null, '\\t'));\n\t\t\t})\n\t\t\t.then(() => { this._onDidInstallExtension.fire(extension); return extension; });\n\t}\n\n\tprivate installFromZip(zipPath: string): TPromise<IExtension> {\n\t\treturn validate(zipPath).then(manifest => {\n\t\t\tconst extensionPath = path.join(this.extensionsPath, `${ manifest.publisher }.${ manifest.name }-${ manifest.version }`);\n\t\t\tthis._onInstallExtension.fire(manifest);\n\n\t\t\treturn extract(zipPath, extensionPath, { sourcePath: 'extension', overwrite: true })\n\t\t\t\t.then(() => createExtension(manifest, (<any> manifest).__metadata, extensionPath))\n\t\t\t\t.then(extension => { this._onDidInstallExtension.fire(extension); return extension; });\n\t\t});\n\t}\n\n\tpublic uninstall(extension: IExtension): TPromise<void> {\n\t\tconst extensionPath = this.getInstallationPath(extension);\n\n\t\treturn pfs.exists(extensionPath)\n\t\t\t.then(exists => exists ? null : Promise.wrapError(new Error(nls.localize('notExists', \"Could not find extension\"))))\n\t\t\t.then(() => this._onUninstallExtension.fire(extension))\n\t\t\t.then(() => pfs.rimraf(extensionPath))\n\t\t\t.then(() => this._onDidUninstallExtension.fire(extension));\n\t}\n\n\tpublic getInstalled(includeDuplicateVersions: boolean = false): TPromise<IExtension[]> {\n\t\tconst all = this.getAllInstalled();\n\n\t\tif (includeDuplicateVersions) {\n\t\t\treturn all;\n\t\t}\n\n\t\treturn all.then(plugins => {\n\t\t\tconst byId = values(groupBy(plugins, p => `${ p.publisher }.${ p.name }`));\n\t\t\treturn byId.map(p => p.sort((a, b) => semver.rcompare(a.version, b.version))[0]);\n\t\t});\n\t}\n\n\tprivate getDeprecated(): TPromise<IExtension[]> {\n\t\treturn this.getAllInstalled().then(plugins => {\n\t\t\tconst byId = values(groupBy(plugins, p => `${ p.publisher }.${ p.name }`));\n\t\t\treturn flatten(byId.map(p => p.sort((a, b) => semver.rcompare(a.version, b.version)).slice(1)));\n\t\t});\n\t}\n\n\tprivate getAllInstalled(): TPromise<IExtension[]> {\n\t\tconst limiter = new Limiter(10);\n\n\t\treturn pfs.readdir(this.extensionsPath)\n\t\t\t.then<IExtension[]>(extensions => Promise.join(extensions.map(e => {\n\t\t\t\tconst extensionPath = path.join(this.extensionsPath, e);\n\n\t\t\t\treturn limiter.queue(\n\t\t\t\t\t() => pfs.readFile(path.join(extensionPath, 'package.json'), 'utf8')\n\t\t\t\t\t\t.then(raw => parseManifest(raw))\n\t\t\t\t\t\t.then(manifest => createExtension(manifest, (<any> manifest).__metadata, extensionPath))\n\t\t\t\t\t\t.then(null, () => null)\n\t\t\t\t);\n\t\t\t})))\n\t\t\t.then(result => result.filter(a => !!a));\n\t}\n\n\tprivate getInstallationPath(extension: IExtension): string {\n\t\treturn extension.path || path.join(this.extensionsPath, `${ extension.publisher }.${ extension.name }-${ extension.version }`);\n\t}\n\n\tpublic removeDeprecatedExtensions(): TPromise<void> {\n\t\treturn this.getDeprecated()\n\t\t\t.then<void>(extensions => TPromise.join(extensions.filter(e => !!e.path).map(e => pfs.rimraf(e.path))));\n\t\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport nls = require('vs/nls');\n\nimport 'vs/base/common/async';\nimport 'vs/base/node/stdFork';\nimport 'vs/languages/lib/common/wireProtocol';\n\nimport pfs = require('vs/base/node/pfs');\n\nimport URI from 'vs/base/common/uri';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport json = require('vs/base/common/json');\nimport strings = require('vs/base/common/strings');\nimport paths = require('vs/base/common/paths');\nimport {IPluginService, IPluginDescription, IMessage} from 'vs/platform/plugins/common/plugins';\nimport {PluginsRegistry, PluginsMessageCollector, IPluginsMessageCollector} from 'vs/platform/plugins/common/pluginsRegistry';\nimport {PluginHostAPIImplementation} from 'vs/workbench/api/browser/pluginHost.api.impl';\nimport { create as createIPC, IPluginsIPC } from 'vs/platform/plugins/common/ipcRemoteCom';\nimport {PluginHostModelService} from 'vs/workbench/api/common/pluginHostDocuments';\nimport {IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport InstantiationService = require('vs/platform/instantiation/common/instantiationService');\nimport {PluginHostPluginService} from 'vs/platform/plugins/common/nativePluginService';\nimport {PluginHostThreadService} from 'vs/platform/thread/common/pluginHostThreadService';\nimport marshalling = require('vs/base/common/marshalling');\nimport {PluginHostTelemetryService} from 'vs/workbench/api/common/pluginHostTelemetry';\nimport {BaseRequestService} from 'vs/platform/request/common/baseRequestService';\nimport {BaseWorkspaceContextService} from 'vs/platform/workspace/common/baseWorkspaceContextService';\nimport {ModeServiceImpl} from 'vs/editor/common/services/modeServiceImpl';\nimport {IThemeExtensionPoint} from 'vs/platform/theme/common/themeExtensionPoint';\nimport {ILanguageExtensionPoint} from 'vs/editor/common/modes/languageExtensionPoint';\nimport {ITMSyntaxExtensionPoint} from 'vs/editor/node/textMate/TMSyntax';\nimport {PluginScanner} from 'vs/workbench/node/extensionPoints';\nimport Severity from 'vs/base/common/severity';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { Client } from 'vs/base/node/service.net';\nimport { IExtensionsService } from 'vs/workbench/parts/extensions/common/extensions';\nimport { ExtensionsService } from 'vs/workbench/parts/extensions/node/extensionsService';\n\nconst DIRNAME = URI.parse(require.toUrl('./')).fsPath;\nconst BASE_PATH = paths.normalize(paths.join(DIRNAME, '../../../..'));\nconst BUILTIN_PLUGINS_PATH = paths.join(BASE_PATH, 'extensions');\n\nexport interface IInitData {\n\tthreadService: any;\n\tcontextService: {\n\t\tworkspace: any;\n\t\tconfiguration: any;\n\t\toptions: any;\n\t};\n}\n\nconst nativeExit = process.exit.bind(process);\nprocess.exit = function() {\n\tconst err = new Error('An extension called process.exit() and this was prevented.');\n\tconsole.warn((<any>err).stack);\n};\nexport function exit(code?: number) {\n\tnativeExit(code);\n}\n\nexport function createServices(remoteCom: IPluginsIPC, initData: IInitData, sharedProcessClient: Client): IInstantiationService {\n\t// the init data is not demarshalled\n\tinitData = marshalling.deserialize(initData);\n\n\tlet contextService = new BaseWorkspaceContextService(initData.contextService.workspace, initData.contextService.configuration, initData.contextService.options);\n\tlet threadService = new PluginHostThreadService(remoteCom);\n\tthreadService.setInstantiationService(InstantiationService.create({ threadService: threadService }));\n\tlet telemetryServiceInstance = new PluginHostTelemetryService(threadService);\n\tlet requestService = new BaseRequestService(contextService, telemetryServiceInstance);\n\tlet modelService = threadService.getRemotable(PluginHostModelService);\n\n\tlet pluginService = new PluginHostPluginService(threadService);\n\tlet modeService = new ModeServiceImpl(threadService, pluginService);\n\tlet _services: any = {\n\t\tcontextService: contextService,\n\t\trequestService: requestService,\n\t\tmodelService: modelService,\n\t\tthreadService: threadService,\n\t\tmodeService: modeService,\n\t\tpluginService: pluginService,\n\t\ttelemetryService: PluginHostTelemetryService\n\t};\n\tlet instantiationService = InstantiationService.create(_services);\n\tthreadService.setInstantiationService(instantiationService);\n\n\t// Create the monaco API\n\tinstantiationService.createInstance(PluginHostAPIImplementation);\n\n\t// Connect to shared process services\n\tinstantiationService.addSingleton(IExtensionsService, sharedProcessClient.getService<IExtensionsService>('ExtensionService', ExtensionsService));\n\n\treturn instantiationService;\n}\n\ninterface ITestRunner {\n\trun(testsRoot:string, clb: (error:Error, failures?: number) => void): void;\n}\n\nexport class PluginHostMain {\n\n\tprivate _isTerminating: boolean;\n\n\tconstructor(\n\t\t@IWorkspaceContextService private contextService: IWorkspaceContextService,\n\t\t@IPluginService private pluginService: IPluginService,\n\t\t@IInstantiationService instantiationService: IInstantiationService\n\t) {\n\t\tthis._isTerminating = false;\n\t}\n\n\tpublic start(): TPromise<void> {\n\t\treturn this.readPlugins();\n\t}\n\n\tpublic terminate(): void {\n\t\tif (this._isTerminating) {\n\t\t\t// we are already shutting down...\n\t\t\treturn;\n\t\t}\n\t\tthis._isTerminating = true;\n\n\t\ttry {\n\t\t\tlet allExtensions = PluginsRegistry.getAllPluginDescriptions();\n\t\t\tlet allExtensionsIds = allExtensions.map(ext => ext.id);\n\t\t\tlet activatedExtensions = allExtensionsIds.filter(id => this.pluginService.isActivated(id));\n\n\t\t\tactivatedExtensions.forEach((extensionId) => {\n\t\t\t\tthis.pluginService.deactivate(extensionId);\n\t\t\t});\n\t\t} catch(err) {\n\t\t\t// TODO: write to log once we have one\n\t\t}\n\n\t\t// Give extensions 1 second to wrap up any async dispose, then exit\n\t\tsetTimeout(() => {\n\t\t\texit()\n\t\t}, 1000);\n\t}\n\n\tprivate readPlugins(): TPromise<void> {\n\t\tlet collector = new PluginsMessageCollector();\n\t\tlet env = this.contextService.getConfiguration().env;\n\n\t\treturn PluginHostMain.scanPlugins(collector, BUILTIN_PLUGINS_PATH, !env.disablePlugins ? env.userPluginsHome : void 0, !env.disablePlugins ? env.pluginDevelopmentPath : void 0, env.version)\n\t\t\t.then(null, err => {\n\t\t\t\tcollector.error('', err);\n\t\t\t\treturn [];\n\t\t\t})\n\t\t\t.then(extensions => {\n\t\t\t\t// Register & Signal done\n\t\t\t\tPluginsRegistry.registerPlugins(extensions);\n\t\t\t\tthis.pluginService.registrationDone(collector.getMessages());\n\t\t\t})\n\t\t\t.then(() => this.handleEagerPlugins())\n\t\t\t.then(() => this.handlePluginTests());\n\t}\n\n\tprivate static scanPlugins(collector: IPluginsMessageCollector, builtinPluginsPath: string, userInstallPath: string, pluginDevelopmentPath: string, version: string): TPromise<IPluginDescription[]> {\n\t\tconst builtinPlugins = PluginScanner.scanPlugins(version, collector, builtinPluginsPath, true);\n\t\tconst userPlugins = !userInstallPath ? TPromise.as([]) : PluginScanner.scanPlugins(version, collector, userInstallPath, false);\n\t\tconst developedPlugins = !pluginDevelopmentPath ? TPromise.as([]) : PluginScanner.scanOneOrMultiplePlugins(version, collector, pluginDevelopmentPath, false);\n\n\t\treturn TPromise.join([builtinPlugins, userPlugins, developedPlugins]).then((_: IPluginDescription[][]) => {\n\t\t\tlet builtinPlugins = _[0];\n\t\t\tlet userPlugins = _[1];\n\t\t\tlet extensionDevPlugins = _[2];\n\n\t\t\tlet resultingPluginsMap: { [pluginName: string]: IPluginDescription; } = {};\n\t\t\tbuiltinPlugins.forEach((builtinPlugin) => {\n\t\t\t\tresultingPluginsMap[builtinPlugin.id] = builtinPlugin;\n\t\t\t});\n\t\t\tuserPlugins.forEach((userPlugin) => {\n\t\t\t\tif (resultingPluginsMap.hasOwnProperty(userPlugin.id)) {\n\t\t\t\t\tcollector.warn(userPlugin.extensionFolderPath, 'Overwriting extension ' + resultingPluginsMap[userPlugin.id].extensionFolderPath + ' with ' + userPlugin.extensionFolderPath);\n\t\t\t\t}\n\t\t\t\tresultingPluginsMap[userPlugin.id] = userPlugin;\n\t\t\t});\n\t\t\textensionDevPlugins.forEach(extensionDevPlugin => {\n\t\t\t\tcollector.info('', 'Loading development extension at ' + extensionDevPlugin.extensionFolderPath);\n\t\t\t\tif (resultingPluginsMap.hasOwnProperty(extensionDevPlugin.id)) {\n\t\t\t\t\tcollector.warn(extensionDevPlugin.extensionFolderPath, 'Overwriting extension ' + resultingPluginsMap[extensionDevPlugin.id].extensionFolderPath + ' with ' + extensionDevPlugin.extensionFolderPath);\n\t\t\t\t}\n\t\t\t\tresultingPluginsMap[extensionDevPlugin.id] = extensionDevPlugin;\n\t\t\t});\n\n\t\t\treturn Object.keys(resultingPluginsMap).map(name => resultingPluginsMap[name]);\n\t\t});\n\t}\n\n\t// Handle \"eager\" activation plugins\n\tprivate handleEagerPlugins(): TPromise<void> {\n\t\tthis.pluginService.activateByEvent('*').then(null, (err) => {\n\t\t\tconsole.error(err);\n\t\t});\n\t\treturn this.handleWorkspaceContainsEagerPlugins();\n\t}\n\n\tprivate handleWorkspaceContainsEagerPlugins(): TPromise<void> {\n\t\tlet workspace = this.contextService.getWorkspace();\n\t\tif (!workspace || !workspace.resource) {\n\t\t\treturn TPromise.as(null);\n\t\t}\n\n\t\tlet folderPath = workspace.resource.fsPath;\n\n\t\tlet desiredFilesMap: {\n\t\t\t[filename: string]: boolean;\n\t\t} = {};\n\n\t\tPluginsRegistry.getAllPluginDescriptions().forEach((desc) => {\n\t\t\tlet activationEvents = desc.activationEvents;\n\t\t\tif (!activationEvents) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < activationEvents.length; i++) {\n\t\t\t\tif (/^workspaceContains:/.test(activationEvents[i])) {\n\t\t\t\t\tlet fileName = activationEvents[i].substr('workspaceContains:'.length);\n\t\t\t\t\tdesiredFilesMap[fileName] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn TPromise.join(\n\t\t\tObject.keys(desiredFilesMap).map(\n\t\t\t\t(fileName) => pfs.fileExistsWithResult(paths.join(folderPath, fileName), fileName)\n\t\t\t)\n\t\t).then((fileNames: string[]) => {\n\t\t\tfileNames.forEach((existingFileName) => {\n\t\t\t\tif (!existingFileName) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet activationEvent = 'workspaceContains:' + existingFileName;\n\t\t\t\tthis.pluginService.activateByEvent(activationEvent).then(null, (err) => {\n\t\t\t\t\tconsole.error(err);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate handlePluginTests(): TPromise<void> {\n\t\tlet env = this.contextService.getConfiguration().env;\n\t\tif (!env.pluginTestsPath || !env.pluginDevelopmentPath) {\n\t\t\treturn TPromise.as(null);\n\t\t}\n\n\t\t// Require the test runner via node require from the provided path\n\t\tlet testRunner:ITestRunner;\n\t\tlet requireError:Error;\n\t\ttry {\n\t\t\ttestRunner = <any>require.__$__nodeRequire(env.pluginTestsPath);\n\t\t} catch (error) {\n\t\t\trequireError = error;\n\t\t}\n\n\t\t// Execute the runner if it follows our spec\n\t\tif (testRunner && typeof testRunner.run === 'function') {\n\t\t\treturn new TPromise<void>((c, e) => {\n\t\t\t\ttestRunner.run(env.pluginTestsPath, (error, failures) => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\te(error.toString());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tc(null);\n\t\t\t\t\t}\n\n\t\t\t\t\t// after tests have run, we shutdown the host\n\t\t\t\t\tthis.gracefulExit(failures && failures > 0 ? 1 /* ERROR */ : 0 /* OK */);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\t// Otherwise make sure to shutdown anyway even in case of an error\n\t\telse {\n\t\t\tthis.gracefulExit(1 /* ERROR */);\n\t\t}\n\n\t\treturn TPromise.wrapError<void>(requireError ? requireError.toString() : nls.localize('pluginTestError', \"Path {0} does not point to a valid extension test runner.\", env.pluginTestsPath));\n\t}\n\n\tprivate gracefulExit(code: number): void {\n\t\t// to give the PH process a chance to flush any outstanding console\n\t\t// messages to the main process, we delay the exit() by some time\n\t\tsetTimeout(() => exit(code), 500);\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport {onUnexpectedError} from 'vs/base/common/errors';\nimport { TPromise } from 'vs/base/common/winjs.base';\nimport { PluginHostMain, createServices, IInitData, exit } from 'vs/workbench/node/pluginHostMain';\nimport { Client, connect } from 'vs/base/node/service.net';\nimport { create as createIPC, IPluginsIPC } from 'vs/platform/plugins/common/ipcRemoteCom';\n\ninterface IRendererConnection {\n\tremoteCom: IPluginsIPC;\n\tinitData: IInitData;\n}\n\n// This calls exit directly in case the initialization is not finished and we need to exit\n// Otherwise, if initialization completed we go to pluginHostMain.terminate()\nvar onTerminate = function() {\n\texit();\n};\n\nfunction connectToRenderer(): TPromise<IRendererConnection> {\n\treturn new TPromise<IRendererConnection>((c, e) => {\n\t\tconst stats: number[] = [];\n\n\t\t// Listen init data message\n\t\tprocess.once('message', msg => {\n\t\t\tconst remoteCom = createIPC(data => {\n\t\t\t\tprocess.send(data);\n\t\t\t\tstats.push(data.length);\n\t\t\t});\n\n\t\t\t// Listen to all other messages\n\t\t\tprocess.on('message', (msg) => {\n\t\t\t\tif (msg.type === '__$terminate') {\n\t\t\t\t\tonTerminate();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tremoteCom.handle(msg);\n\t\t\t});\n\n\t\t\t// Print a console message when rejection isn't handled. For details\n\t\t\t// see https://nodejs.org/api/process.html#process_event_unhandledrejection\n\t\t\t// and https://nodejs.org/api/process.html#process_event_rejectionhandled\n\t\t\tprocess.on('unhandledRejection', function(reason, promise) {\n\t\t\t\t// 'promise' seems to be undefined all the time and\n\t\t\t\t// that's why we cannot use the rejectionhandled event\n\t\t\t\tconsole.warn('potentially unhandled rejected promise', promise);\n\t\t\t\tonUnexpectedError(reason);\n\t\t\t});\n\n\t\t\t// Print a console message when an exception isn't handled.\n\t\t\tprocess.on('uncaughtException', function(err) {\n\t\t\t\tonUnexpectedError(err);\n\t\t\t});\n\n\t\t\t// Kill oneself if one's parent dies. Much drama.\n\t\t\tsetInterval(function () {\n\t\t\t\ttry {\n\t\t\t\t\tprocess.kill(msg.parentPid, 0); // throws an exception if the main process doesn't exist anymore.\n\t\t\t\t} catch (e) {\n\t\t\t\t\tonTerminate();\n\t\t\t\t}\n\t\t\t}, 5000);\n\n\t\t\t// Check stats\n\t\t\tsetInterval(function() {\n\t\t\t\tif (stats.length >= 250) {\n\t\t\t\t\tlet total = stats.reduce((prev, current) => prev + current, 0);\n\t\t\t\t\tconsole.warn(`MANY messages are being SEND FROM the extension host!`)\n\t\t\t\t\tconsole.warn(`SEND during 1sec: message_count=${stats.length}, total_len=${total}`);\n\t\t\t\t}\n\t\t\t\tstats.length = 0;\n\t\t\t}, 1000);\n\n\t\t\t// Tell the outside that we are initialized\n\t\t\tprocess.send('initialized');\n\n\t\t\tc({ remoteCom, initData: msg });\n\t\t});\n\n\t\t// Tell the outside that we are ready to receive messages\n\t\tprocess.send('ready');\n\t});\n}\n\nfunction connectToSharedProcess(): TPromise<Client> {\n\treturn connect(process.env['VSCODE_SHARED_IPC_HOOK']);\n}\n\nTPromise.join<any>([connectToRenderer(), connectToSharedProcess()])\n\t.done(result => {\n\t\tconst renderer: IRendererConnection = result[0];\n\t\tconst sharedProcessClient: Client = result[1];\n\t\tconst instantiationService = createServices(renderer.remoteCom, renderer.initData, sharedProcessClient);\n\t\tconst pluginHostMain = instantiationService.createInstance(PluginHostMain);\n\n\t\tonTerminate = () => {\n\t\t\tpluginHostMain.terminate();\n\t\t};\n\n\t\tpluginHostMain.start()\n\t\t\t.done(null, err => console.error(err));\n\t});"]}