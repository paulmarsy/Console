{
  "_args": [
    [
      "vscode-debugprotocol@https://registry.npmjs.org/vscode-debugprotocol/-/vscode-debugprotocol-1.8.0-pre.3.tgz",
      "D:\\work\\1\\s"
    ]
  ],
  "_from": "vscode-debugprotocol@1.8.0-pre.3",
  "_id": "vscode-debugprotocol@1.8.0-pre.3",
  "_inCache": true,
  "_location": "/vscode-debugprotocol",
  "_phantomChildren": {},
  "_requested": {
    "name": "vscode-debugprotocol",
    "raw": "vscode-debugprotocol@https://registry.npmjs.org/vscode-debugprotocol/-/vscode-debugprotocol-1.8.0-pre.3.tgz",
    "rawSpec": "https://registry.npmjs.org/vscode-debugprotocol/-/vscode-debugprotocol-1.8.0-pre.3.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/vscode-debugprotocol/-/vscode-debugprotocol-1.8.0-pre.3.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/vscode-debugprotocol/-/vscode-debugprotocol-1.8.0-pre.3.tgz",
  "_shasum": "c18bd007026ce01f33d72b01a8b0b878176048a6",
  "_shrinkwrap": null,
  "_spec": "vscode-debugprotocol@https://registry.npmjs.org/vscode-debugprotocol/-/vscode-debugprotocol-1.8.0-pre.3.tgz",
  "_where": "D:\\work\\1\\s",
  "author": {
    "name": "Microsoft Corporation"
  },
  "bugs": {
    "url": "https://github.com/Microsoft/vscode-debugadapter-node/issues"
  },
  "dependencies": {},
  "description": "Npm module with declarations for the Visual Studio Code debug protocol",
  "devDependencies": {
    "typescript": "^1.8.5"
  },
  "homepage": "https://github.com/Microsoft/vscode-debugadapter-node#readme",
  "license": "MIT",
  "main": "./lib/debugProtocol.js",
  "name": "vscode-debugprotocol",
  "optionalDependencies": {},
  "readme": "# VS Code Debug Protocol\n\n[![NPM Version](https://img.shields.io/npm/v/vscode-debugprotocol.svg)](https://npmjs.org/package/vscode-debugprotocol)\n[![NPM Downloads](https://img.shields.io/npm/dm/vscode-debugprotocol.svg)](https://npmjs.org/package/vscode-debugprotocol)\n\nThis npm module contains declarations for the json-based Visual Studio Code debug protocol.\n\n## History\n\n* 1.8.x:\n  * Introduces `ExceptionBreakpointsFilter` and fixed corresponding capability.\n  * Adds optional `noDebug` attribute to `LaunchRequestArguments`.\n  * Adds optional `startFrame` argument to `StackTraceArguments` to allow for paging.\n  * Adds optional `totalFrames` argument to `StackTraceResponse` to allow for paging.\n  * Improve comment: `InitializedEvent` must not be sent before `InitializeRequest` has returned its result.\n\n* 1.7.x:\n  * Adds optional `url` and `urlLabel` attributes to the error messages. The frontend will show this as a UI to open additional information in a browser.\n  * Added option `default` attribute to the `exceptionBreakpointFilters` capability.\n  * Adds optional attribute `allThreadsStopped` to the `StoppedEvent` to indicate that all threads are stopped (and not only the one mentioned in the event).\n\n* 1.6.x:\n  * A boolean `supportsConditionalBreakpoints` in `Capabilities` indicates whether the debug adapter supports conditional breakpoints.\n  * Adds an optional `exceptionBreakpointFilters` capability that lists the filters available for the `setExceptionBreakpoints` request.\n  * Adds an optional `restart` attribute to the `TerminatedEvent` which can be used to request a restart of the debug session.\n\n* 1.5.x:\n  * A boolean `supportsFunctionBreakpoints` in `Capabilities` indicates whether the debug adapter implements the function breakpoints.\n  * Renamed `supportEvaluateForHovers` in `Capabilities` to `supportsEvaluateForHovers`.\n\n* 1.4.x:\n  * Made the `body` of the `InitializeResponse` optional (for backward compatibility).\n\n* 1.3.x: Version introduces support for feature negotiation.\n  * The `InitializeResponse` has now attributes for these features:\n    * A boolean `supportsConfigurationDoneRequest` indicates whether the debug adapter implements the `ConfigurationDoneRequest`.\n    * A boolean `supportEvaluateForHovers` indicates whether the debug adapter supports a side effect free `EvaluateRequest`.\n  * Adds an optional `data` attribute to the `OutputEvent` and a `telemetry` category.\n  * Adds a new context type `hover` to the `context` attribute of the `EvaluateArguments`.\n\n* 1.2.x: Version adds a new request:\n  * Introduces a `ConfigurationDoneRequest` that VS Code sends to indicate that the configuration of the debug session has finished and that debugging can start.\n\n* 1.1.x: Version adds support for conditional breakpoints and breakpoints in virtual documents:\n  * Type `Source` supports optional `origin` attribute to provide information that is shown in the debug UI.\n  * Type `Source` supports an optional `adapterData` attribute that the VS Code debug UI will transparently persists for breakpoints.\n  * Introduces type `SourceBreakpoint` that makes it possible to provide `column` and `condition` information when specifying a breakpoint.\n\n* 1.0.1: Initial version of the debug protocol\n\n## License\n\n[MIT](https://github.com/Microsoft/vscode-languageserver-node/blob/master/License.txt)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Microsoft/vscode-debugadapter-node.git"
  },
  "scripts": {
    "compile": "node ./node_modules/typescript/bin/tsc -p ./src",
    "prepublish": "node ./node_modules/typescript/bin/tsc -p ./src",
    "watch": "node ./node_modules/typescript/bin/tsc -w -p ./src"
  },
  "typings": "./lib/debugProtocol",
  "version": "1.8.0-pre.3"
}
